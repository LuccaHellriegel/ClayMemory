{"version":3,"sources":["modules/river/constants.ts","modules/river/model.ts","modules/cards/constants.ts","modules/cards/model/permutation.ts","modules/cards/model/content.ts","modules/cards/model/config.ts","modules/cards/selectors.ts","modules/text/constants.ts","modules/text/components/BiggerTooltip.tsx","modules/text/components/NewNoteCardTooltip.tsx","modules/text/components/AddQAButtonTooltip.tsx","modules/text/components/DeleteCardButtonTooltip.tsx","modules/text/components/UnhideCardsTooltip.tsx","modules/text/index.ts","modules/cards/slice.ts","modules/cards/components/Data/AddNoteButton.tsx","modules/cards/components/Data/AddQAButton.tsx","modules/cards/components/Data/DeleteCardButton.tsx","modules/cards/components/Control/SimpleSnackbar.tsx","modules/cards/components/Control/UndoRedoButtons.tsx","shared/utils.ts","modules/cards/components/Control/UndoRedoKeyListener.tsx","modules/cards/model/origin.ts","modules/cards/index.ts","modules/river/selectors.ts","shared/GreenCheckbox.tsx","modules/river/slice.ts","modules/river/components/Show/RiverContentFormGroup.tsx","modules/selection/selectors.ts","modules/selection/services/use-selection.ts","modules/selection/model.ts","modules/selection/services/get-selection.ts","modules/selection/slice.ts","modules/selection/constants.ts","modules/selection/actions.ts","modules/selection/components/Mouse/SelectionSnackbar.tsx","modules/selection/components/Mouse/MaterialMouseUp.tsx","modules/selection/components/Mouse/CardMouseUp.tsx","modules/selection/components/Buttons/AppendButton.tsx","modules/selection/components/Mouse/ContextMenu.tsx","modules/selection/components/Buttons/ReplaceButton.tsx","modules/selection/index.ts","modules/river/components/Cards/ClayCardField.tsx","modules/river/components/Cards/JumpToOriginButton.tsx","modules/river/components/Cards/ClayCardFieldButtons.tsx","modules/river/components/Cards/QACard.tsx","modules/river/components/Cards/NoteCard.tsx","modules/river/components/Cards/ClayCard.tsx","modules/river/components/CardRiver/ClayCardGridItems.tsx","modules/river/services/filterCardConfigs.tsx","modules/river/components/CardRiver/UnhideCardsButton.tsx","modules/river/components/CardRiver/CardRiver.tsx","modules/river/components/CardRiver/SwitchActiveRiver.tsx","modules/river/components/Show/ShowRiverCheckbox.tsx","modules/river/index.ts","modules/pdf/constants.ts","modules/pdf/selectors.ts","modules/pdf/slice.ts","modules/pdf/components/Navigation/PageChooser.tsx","modules/pdf/components/Navigation/PageKeyboardControl.tsx","modules/pdf/components/Document/PDFDocument.tsx","modules/pdf/components/Document/cachePageDimensions.tsx","modules/pdf/components/Document/PDFPage.tsx","modules/display/model.ts","modules/pdf/components/ShowMaterialCheckbox.tsx","modules/pdf/components/Navigation/NavigationButtons.tsx","modules/pdf/index.ts","modules/data/selectors.ts","modules/data/slice.ts","modules/data/research.ts","modules/data/constants.ts","modules/data/actions.ts","modules/data/components/DocumentData/LoadDocumentDataButton.tsx","modules/data/components/DocumentData/DeleteDocumentButton.tsx","modules/data/components/DataOptions/DocumentOptionItem.tsx","modules/data/components/DataOptions/DocumentOptionList.tsx","modules/data/components/DataOptions/ActiveDocumentOptionItem.tsx","modules/data/components/DocumentData/InputDocument.tsx","modules/data/components/DataOptions/DataOptions.tsx","modules/data/index.ts","modules/display/components/ControlBar/ClayMemorySearchBar.tsx","modules/display/selectors.ts","modules/display/slice.ts","modules/display/constants.ts","modules/display/components/ControlBar/ViewTabs.tsx","modules/display/components/ControlBar/ControlBar.tsx","modules/display/components/HTMLDocumentMeasurer.tsx","modules/display/components/Body/RiverMaterial/Origin/OriginMarkedSnackbar.tsx","modules/display/components/Body/RiverMaterial/Origin/PageSpanControl.tsx","modules/display/components/Body/RiverMaterial/RiverMaterialPair.tsx","modules/display/components/Body/RiverMaterial/ListScrollControl.tsx","modules/display/components/Body/RiverMaterial/RiverMaterialPairList.tsx","modules/display/components/Body/RiverMaterial/RiverMaterial.tsx","modules/display/components/Body/RiverExplorer.tsx","modules/display/components/Body/Body.tsx","modules/display/components/Display.tsx","modules/display/index.ts","persist.ts","store.ts","index.tsx"],"names":["NAME","pageNumberToRiverMakeUpID","page","riverMakeUpIDToPageNumber","riverID","parseInt","replace","emptyCardRiver","cardIDs","updateStateWithMakeUps","state","updatedState","makeUps","forEach","makeUp","riverMakeUps","removeCardFromRivers","cardID","Object","fromEntries","entries","map","entry","filter","id","length","FieldValueAccessorMap","note","cardObject","q","a","toFieldValue","field","FieldValueModifierMap","modify","createReplace","inputValue","_","changeCardObject","spec","inputField","inputObject","createModify","modifyFieldValue","fieldToBeChanged","objectToBeChanged","emptyQAContent","EmptyContentMap","emptyContent","noteContentIsEmpty","content","qaContentIsNotFull","UpdateTypeCreateModifyMap","APPEND","oldValue","trim","REPLACE","updateTypeToCreateModify","updateType","strToCardContent","contentStr","outputField","existingContent","changeSpec","strToNewCardContent","empty","noteContentContainsStringOrEmpty","noteConfig","str","includes","qaContentContainsStringOrEmpty","qaConfig","cardIDToNumber","nextCardID","lastCardIDNumber","toString","CardIsFullMap","Note","config","cardIsNotFull","type","strToCardConfig","baseCard","changedContent","CardFieldToTypeMap","cardFieldToType","emptyNote","emptyQA","getState","hasPast","createSelector","cardsState","past","hasFuture","future","getAll","present","getLastCardIDNumber","getNextCardID","getCards","cards","getCardByID","switchToActiveRiverTooltip","switchToSummaryRiverTooltip","undoTooltip","redoTooltip","nextPageTooltip","previousPageTooltip","deleteCardTooltip","jumpToOriginTooltip","ChoiceCardAsAppendTarget","AppendToCardTooltip","CardIsAppendTargetTooltip","ChoiceCardAsReplaceTarget","ReplaceCardTooltip","CardIsReplaceTargetTooltip","newQACardTooltip","newNoteCardTooltip","unhideCardsTooltip","deleteDocumentTooltip","loadSavedDocumentTooltip","noMaterialText","loadingMaterialText","activeDocumentText","existingDataText","loadMaterialText","downloadDatasetsText","uploadDatasetsText","noteText","questionText","answerText","defaultEnterDelay","defaultEnterNextDelay","BiggerTooltip","withStyles","theme","tooltip","fontSize","Tooltip","NewNoteCardTooltip","children","title","enterDelay","enterNextDelay","AddQAButtonTooltip","DeleteCardButtonTooltip","UnhideCardsTooltip","components","constants","initialState","updateCardInCards","toBeUpdated","cardObj","cardsSlice","createSlice","name","reducers","cardPush","payload","cardReplace","cardFieldReplace","newValue","cardField","cardConfig","cardRemove","allCardsReplace","allCardsReset","actions","AddNoteButton","dispatch","useDispatch","nextID","useSelector","IconButton","onClick","AddQAButton","DeleteCardButton","SimpleSnackbar","message","close","handleClose","event","reason","Snackbar","anchorOrigin","vertical","horizontal","open","autoHideDuration","onClose","action","size","aria-label","color","keyMap","UndoButton","announce","cardsHasPast","text","ActionCreators","undo","disabled","RedoButton","cardsHasFuture","redo","UndoRedoCard","useState","snackbarState","setSnackbarState","Fragment","Card","variant","Grid","container","direction","item","Divider","orientation","UndoRedoKeyListener","onKeyDown","ctrlKey","key","preventDefault","emptyQAOrigin","EmptyOriginMap","emptyOrigin","singleOriginToCardOrigin","singleOrigin","baseOrigin","reducer","slice","selectors","model","getRiverMakeUps","getNonEmptyRiverIDs","keys","getNonEmptyRiverIDsSorted","ids","sort","b","getNonEmptyRiverMakeUpsSorted","values","getNonEmptyRiverCardsSorted","cardObjects","push","getActiveRiverMakeUpID","riverActiveID","getActiveRiverMakeUp","getActiveRiverCardIDs","getActiveRiverCards","makeUpCardIDs","getRiverShowState","riverShowState","riverShowStateIsShow","getRiverContentState","riverContentState","getRiverContentFilter","riverContentFilter","getOriginRequest","riverOriginRequest","GreenCheckbox","root","green","checked","props","Checkbox","incrementer","counter","curCounter","simpleReducer","count_DONT_USE","riverCardReplace","riverSlice","riverUnhide","allRiversReset","allRiversReplace","extraReducers","riverMakeUp","RiverContentFormGroup","showQAs","showNotes","changeContentState","clickedState","FormGroup","FormControlLabel","control","label","getTargetConfig","goalConfig","getSourceConfig","sourceConfig","sourceConfigExists","selectionToCard","goalIsCreation","cardPayload","inputOrigin","contentOrigin","origin","undefined","selectionConfigToCardPayload","existingCard","selectionConfigToActualizedCardConfig","getSelectionWorkaround","selection","window","getSelection","activeElement","document","value","substring","selectionStart","selectionEnd","selStr","e","getSelectionSourceFromMaterial","selectionData","selectedParentStart","anchorNode","parentNode","selectedParentEnd","focusNode","nodeName","divTextLayerParent","spanChildren","Array","from","childNodes","startIndex","indexOf","endIndex","spanIndexStart","spanIndexEnd","materialSelectionDataToSourceConfig","selectionSource","selectionTarget","selectionSlice","resetSelectionSource","resetSelectionTarget","addSelectionSource","addMaterialSelectionSource","addCardSelectionSource","getSelectionSourceFromCard","addSelectionTarget","addCardAppendSelectionTarget","addCardReplaceSelectionTarget","SelectionSnackbar","setOpen","handleDismiss","escPress","useEffect","addEventListener","removeEventListener","positionOffset","x","y","bounds","style","maxWidth","overflowX","onContextMenu","spacing","padding","backgroundColor","square","Typography","MaterialMouseUp","onMouseUp","materialSelectionSourceAction","onMouseDown","button","CardFieldMouseUp","fieldOrigin","cardSelectionSourceAction","AppendButton","outlined","setOutlined","cardIsTarget","isTarget","ContextMenu","menuPosition","setMenuPosition","ref","useRef","shouldClose","useCallback","target","current","querySelector","contains","contextMenuContainsTargetNode","doesSourceConfigExists","shouldOpen","left","top","openState","Menu","keepMounted","anchorReference","anchorPosition","MenuItem","ReplaceButton","services","ClayCardField","storeValue","saveChanges","rest","mutableValue","setState","TextField","InputProps","disableUnderline","minWidth","multiline","onChange","submittedValue","onBlur","JumpToOriginButton","cardOrigin","ClayCardFieldButtons","permutation","originExists","Paper","QACard","elevation","justify","InputLabelProps","NoteCard","ClayCard","GridItemDivider","qaFilter","noteFilter","filterCardConfigs","inputCards","riverContentFilterStr","filters","reduce","f","combineFilterArr","UnhideCardsButton","CardRiver","materialHeight","cardConfigs","riverCards","filteredConfigs","gridItems","increment","prev","currentCard","index","arr","ClayCardGridItems","containsFilteredCards","Accordion","expanded","defaultExpanded","overflow","height","AccordionSummary","align","MozUserSelect","WebkitUserSelect","msUserSelect","AccordionDetails","alignItems","marginTop","SwitchActiveRiver","activeRiverID","onMouseEnter","ShowRiverCheckbox","curRiverShowState","Button","startIcon","MaterialMultiplier","getPDF","pdf","getPDFName","pdfName","getTotalPages","totalPages","getCurrentPage","currentPage","getPageControlData","getPDFShowStatus","pdfShowStatus","getSpanOrigin","spanOrigin","getDocumentSearch","documentSearch","pageUpdate","pageCorrections","newPage","pdfSlice","pdfUpload","nextPage","scrollToPage","previousPage","existingDocumentPayload","nonDigitRegEx","PageNumberTextField","error","userInput","inputProps","fontFamily","fontWeight","lineHeight","letterSpacing","possiblePage","match","asInt","validatePageChoice","TotalPagesIndicator","PageChooser","width","pageControlKeyMap","ArrowLeft","ArrowRight","pageControlDispatcher","PageKeyboardControl","tabIndex","pdfjs","GlobalWorkerOptions","workerSrc","version","options","cMapUrl","cMapPacked","PDFDocument","ChildComponent","cachedPageDimensions","setPageDimensions","pdfProxyRef","pdfNameRef","loading","noData","file","renderMode","onLoadSuccess","pdfProxy","numPages","promises","i","pageNumber","getPage","Promise","all","then","pages","pageDimensions","Map","w","view","h","set","_pageIndex","cachePageDimensions","onItemClick","makeOriginHighlighter","textItem","itemIndex","highlightOrigin","backgroundStyle","makeTextRenderer","searchText","pattern","textLength","patternLength","markedPattern","slice1","result","secondIndex","slice2Start","slice2","thirdIndex","slice3Start","slice3","stringRest","splitText","split","spliter","highlightPattern","View","PDFPage","pageRef","materialWidth","originHighlighter","textRenderer","searchRenderer","originRenderer","combineRenderers","inputRef","instance","customTextRenderer","renderAnnotationLayer","ShowMaterialCheckbox","pdfShowState","PreviousButton","NextButton","PageNavigation","getDocumentNames","db","getDocumentDataSets","collectCurrentDBData","river","updateDocumentDB","dbData","dbSlice","storeInDocumentDB","removeFromDocumentDB","refreshData","resetActiveAppState","require","clearHistory","replaceActiveAppState","newDocumentData","currentPDFName","deleteDocument","activeDocument","LoadDocumentDataButton","afterClick","pdfFile","documentDB","loadSavedDocument","DeleteDocumentDialogAlert","Dialog","aria-labelledby","aria-describedby","DialogTitle","DialogContent","DialogContentText","DialogActions","autoFocus","DeleteDocumentButton","DocumentOptionItemButtonRow","DocumentOptionItem","DocumentOptionList","documents","doc","component","listStyleType","ActiveDocumentOptionItem","InputDocument","click","disableElevation","display","files","newPDFName","accept","DataOptions","React","anchorEl","setAnchorEl","currentTarget","Boolean","MenuListProps","paddingLeft","paddingRight","ClayMemorySearchBar","contentString","searchFocus","onCancelSearchCards","onCancelSearchDocument","onCancelSearch","onRequestSearch","placeholder","cancelOnEscape","getWindowMeasurements","windowMeasurements","getTopOffset","topOffset","getListIndex","listIndex","getScrollToIndex","scrollToIndex","getCurrentView","currentView","RiverMaterial","scroll","displaySlice","RiverExplorer","ViewTabs","Tabs","Tab","ControlBar","materialName","offset","useLayoutEffect","currentBottom","getBoundingClientRect","bottom","AppBar","position","Toolbar","disableGutters","xs","HTMLDocumentMeasurer","measure","debounce","htmlElement","documentElement","currentWidth","clientWidth","currentHeight","clientHeight","OriginMarkedSnackbar","PageSpanControl","count","scrolledSpan","setScrolledSpan","trier","intervalID","setInterval","clearInterval","console","log","textLayer","originSpan","scrollIntoView","behavior","block","inline","RiverPairItem","RiverMaterialPair","data","materialHeights","showRiver","showMaterial","hidden","get","pairTopBottomPadding","ListScrollControl","listRef","currentIndex","shouldScroll","scrollToItem","batch","Resetter","resetAfterIndex","RiverMaterialPairList","windowWidth","pageDims","pixelPerUserSpaceUnit","calculateMaterialHeight","itemCount","itemSize","itemData","onItemsRendered","visibleStopIndex","ExplorerRiver","marginBottom","riverIDs","Body","Display","pdfTransform","createTransform","inboundState","outboundState","whitelist","persistConfig","storage","transforms","undoableCardActions","rootReducer","combineReducers","undoable","includeAction","persistedReducer","persistReducer","enhancer","composeWithDevTools","composeEnhancers","applyMiddleware","thunk","store","createStore","persistor","persistStore","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.0ec2b953.chunk.js","sourcesContent":["export const NAME = \"cardRiverState\";\n","import { CardID } from \"../cards/model/config\";\nimport { SingleOrigin } from \"../cards/model/origin\";\n\nexport type RiverMakeUp = { riverID: string; cardIDs: CardID[] };\n\nexport type RiverMakeUps = { [riverID: string]: RiverMakeUp };\n\nexport type RiverShowState = \"SHOW\" | \"HIDE\";\n\nexport type RiverContentState = \"ALL\" | \"NOTES\" | \"QAS\" | \"NONE\";\n\nexport type ContentFilter = string;\n\nexport type CardRiverState = {\n\t// works by first setting it here via button\n\t// then we scroll to the page\n\t// then we set the origin in the display-store\n\t// then we scroll to origin\n\t// all happens in the display module\n\t// move this somehow to display?\n\t// problem is that we depend on the display components (list-ref)\n\t// for scrolling\n\triverOriginRequest: SingleOrigin | null;\n\triverMakeUps: RiverMakeUps;\n\triverActiveID: string;\n\t// show/hide river\n\triverShowState: RiverShowState;\n\t// filter content\n\triverContentState: RiverContentState;\n\triverContentFilter: ContentFilter | \"\";\n\tcount_DONT_USE: number;\n};\n\nexport const pageNumberToRiverMakeUpID = (page: number) => \"CardRiver \" + page;\n\nexport const riverMakeUpIDToPageNumber = (riverID: string) => parseInt(riverID.replace(\"CardRiver \", \"\"));\n\nexport const emptyCardRiver = (page: number): RiverMakeUp => {\n\treturn {\n\t\triverID: pageNumberToRiverMakeUpID(page),\n\t\tcardIDs: [],\n\t};\n};\n\nexport const updateStateWithMakeUps = (state: CardRiverState, ...makeUps: RiverMakeUp[]) => {\n\tconst updatedState = { ...state };\n\tmakeUps.forEach((makeUp) => {\n\t\tupdatedState.riverMakeUps[makeUp.riverID] = makeUp;\n\t});\n\treturn updatedState;\n};\n\nexport const removeCardFromRivers = (state: CardRiverState, cardID: CardID): CardRiverState => {\n\tconst riverMakeUps = Object.fromEntries(\n\t\tObject.entries(state.riverMakeUps)\n\t\t\t.map((entry) => [entry[0], { ...entry[1], cardIDs: entry[1].cardIDs.filter((id) => id !== cardID) }])\n\t\t\t.filter((entry) => (entry[1] as RiverMakeUp).cardIDs.length !== 0)\n\t);\n\treturn { ...state, riverMakeUps };\n};\n\n//TODO: make option to not show card instead of delete\n// make nice small option in river to hide / show hidden cards (default: hide)\n","export const NAME = \"cards\";\n","import { CardField, QACardField } from \"./content\";\n\n// for origin and content the same object structure is used,\n// so same permutation api should be used\n\ntype NoteObject = NonNullable<any>;\ntype QAObject = { [key in QACardField]: NonNullable<any> };\ntype CardObject = NoteObject | QAObject;\n\nconst FieldValueAccessorMap: { [field in CardField]: (cardObject: CardObject) => any } = {\n\tnote: (cardObject) => cardObject,\n\tq: (cardObject) => (cardObject as QAObject).q,\n\ta: (cardObject) => (cardObject as QAObject).a,\n};\nexport const toFieldValue = (field: CardField, cardObject: CardObject) => FieldValueAccessorMap[field](cardObject);\n\ntype Modify = (oldValue: any) => any;\nconst FieldValueModifierMap: { [key in CardField]: (cardObject: CardObject, modify: Modify) => any } = {\n\tnote: (cardObject, modify) => modify(cardObject),\n\tq: (cardObject, modify) => {\n\t\treturn { ...(cardObject as QAObject), q: modify((cardObject as QAObject).q) };\n\t},\n\ta: (cardObject, modify) => {\n\t\treturn { ...(cardObject as QAObject), a: modify((cardObject as QAObject).a) };\n\t},\n};\nconst modifyFieldValue = (field: CardField, cardObject: CardObject, modify: Modify) =>\n\tFieldValueModifierMap[field](cardObject, modify);\n\nexport type CreateModify = (inputValue: any) => Modify;\n\n// this replace is generic, I dont put append here, because that is object specific\nexport const createReplace: CreateModify = (inputValue: any) => (_: any) => inputValue;\n\nexport type CardObjectChangeSpec = {\n\tinputField: CardField;\n\tinputObject: CardObject;\n\tfieldToBeChanged: CardField;\n\tobjectToBeChanged: CardObject;\n\tcreateModify: CreateModify;\n};\nexport const changeCardObject = (spec: CardObjectChangeSpec) => {\n\tconst inputValue = toFieldValue(spec.inputField, spec.inputObject);\n\tconst modify = spec.createModify(inputValue);\n\treturn modifyFieldValue(spec.fieldToBeChanged, spec.objectToBeChanged, modify);\n};\n","import { CreateModify, changeCardObject, createReplace } from \"./permutation\";\nimport { NoteConfig, QAConfig, UpdateType } from \"./config\";\n\nexport type QACardField = \"q\" | \"a\";\nexport type CardField = \"note\" | QACardField;\n\nexport type StringCardContent = string;\nexport type NoteCardContent = StringCardContent;\nexport type QACardContent = {\n\t[field in QACardField]: StringCardContent;\n};\nexport type CardContent = NoteCardContent | QACardContent;\n\ntype EmptyContent = { q: \"\"; a: \"\" } | \"\";\nconst emptyQAContent = (): EmptyContent => {\n\treturn { q: \"\", a: \"\" };\n};\nconst EmptyContentMap: { [field in CardField]: () => EmptyContent } = {\n\tq: emptyQAContent,\n\ta: emptyQAContent,\n\tnote: () => \"\",\n};\nexport const emptyContent = (field: CardField) => {\n\treturn EmptyContentMap[field]();\n};\n\nexport const noteContentIsEmpty = (content: string) => content === \"\";\nexport const qaContentIsNotFull = (content: QACardContent) =>\n\t(content as QACardContent).q === \"\" || (content as QACardContent).a === \"\";\n\nconst createAppendStr: CreateModify = (inputValue: string) => (oldValue: string) =>\n\t(oldValue + \" \" + inputValue).trim();\nconst UpdateTypeCreateModifyMap: { [updateType in UpdateType]: CreateModify } = {\n\tAPPEND: createAppendStr,\n\tREPLACE: createReplace,\n};\nconst updateTypeToCreateModify = (updateType: UpdateType) => UpdateTypeCreateModifyMap[updateType];\n\n// noteObjects are a single value like the selectedString, so we use them as a field for convenience\nconst inputField: CardField = \"note\";\n\nexport const strToCardContent = (\n\tcontentStr: string,\n\toutputField: CardField,\n\tupdateType: UpdateType,\n\texistingContent: CardContent\n): CardContent => {\n\tconst changeSpec = {\n\t\tinputObject: contentStr,\n\t\tinputField,\n\t\tfieldToBeChanged: outputField,\n\t\tobjectToBeChanged: existingContent,\n\t\tcreateModify: updateTypeToCreateModify(updateType),\n\t};\n\treturn changeCardObject(changeSpec);\n};\n\nexport const strToNewCardContent = (contentStr: string, outputField: CardField) => {\n\t// new is always empty and we replace the input in the empty shell\n\tconst empty = emptyContent(outputField);\n\treturn strToCardContent(contentStr, outputField, \"REPLACE\", empty);\n};\n\nexport const noteContentContainsStringOrEmpty = (noteConfig: NoteConfig, str: string) =>\n\tnoteConfig.content === \"\" || noteConfig.content.includes(str);\n\nexport const qaContentContainsStringOrEmpty = (qaConfig: QAConfig, str: string) =>\n\tqaConfig.content.a === \"\" ||\n\tqaConfig.content.q === \"\" ||\n\tqaConfig.content.a.includes(str) ||\n\tqaConfig.content.q.includes(str);\n","import { NoteOrigin, QAOrigin } from \"./origin\";\nimport {\n\tNoteCardContent,\n\tQACardContent,\n\tnoteContentIsEmpty,\n\tqaContentIsNotFull,\n\tstrToCardContent,\n\tCardField,\n} from \"./content\";\n\nexport type CardID = string;\nexport const cardIDToNumber = (cardID: CardID) => parseInt(cardID);\nexport const nextCardID = (lastCardIDNumber: number) => (lastCardIDNumber + 1).toString();\n\nexport type CardType = \"Note\" | \"Q-A\";\nexport type NoteConfig = { cardID: CardID; type: CardType; content: NoteCardContent; origin?: NoteOrigin };\nexport type QAConfig = { cardID: CardID; type: CardType; content: QACardContent; origin?: QAOrigin };\nexport type CardConfig = NoteConfig | QAConfig;\n\nconst CardIsFullMap: { [card in CardType]: (config: CardConfig) => boolean } = {\n\tNote: (config) => noteContentIsEmpty(config.content as NoteCardContent),\n\t\"Q-A\": (config) => qaContentIsNotFull(config.content as QACardContent),\n};\nexport const cardIsNotFull = (config: CardConfig) => CardIsFullMap[config.type](config);\n\nexport type UpdateType = \"REPLACE\" | \"APPEND\";\n\nexport const strToCardConfig = (\n\tcontentStr: string,\n\toutputField: CardField,\n\tupdateType: UpdateType,\n\tbaseCard: CardConfig\n): CardConfig => {\n\tconst changedContent = strToCardContent(contentStr, outputField, updateType, baseCard.content);\n\treturn { ...baseCard, content: changedContent } as CardConfig;\n};\n\nconst CardFieldToTypeMap: { [field in CardField]: CardType } = {\n\tq: \"Q-A\",\n\ta: \"Q-A\",\n\tnote: \"Note\",\n};\n\nexport const cardFieldToType = (field: CardField) => CardFieldToTypeMap[field];\n\nexport const emptyNote = (cardID: CardID): CardConfig => {\n\treturn { type: \"Note\", content: \"\", cardID };\n};\nexport const emptyQA = (cardID: CardID): CardConfig => {\n\treturn { type: \"Q-A\", content: { q: \"\", a: \"\" }, cardID };\n};\n\nexport type CardPayload = Omit<CardConfig, \"cardID\">;\n","import { createSelector } from \"reselect\";\nimport { CardsState } from \"./model/state\";\nimport { NAME } from \"./constants\";\nimport { nextCardID } from \"./model/config\";\n\nexport const getState = (state: any) => state[NAME];\nexport const hasPast = createSelector(getState, (cardsState: any) => cardsState.past.length > 0);\nexport const hasFuture = createSelector(getState, (cardsState: any) => cardsState.future.length > 0);\n\nexport const getAll = (state: any) => state[NAME].present;\n\nexport const getLastCardIDNumber = createSelector(getAll, (state) => state.lastCardIDNumber);\n\nexport const getNextCardID = createSelector(getLastCardIDNumber, nextCardID);\n\nexport const getCards = createSelector(getAll, (state: CardsState) => state.cards);\n\nexport const getCardByID = (state: any, cardID: string) => getCards(state)[cardID];\n","/// Tooltip-Text\n\nexport const switchToActiveRiverTooltip = \"Switch to the Active-River view\";\nexport const switchToSummaryRiverTooltip = \"Switch to the Summary-River view\";\n\nexport const undoTooltip = \"Undo last action\";\nexport const redoTooltip = \"Redo last action\";\n\nexport const nextPageTooltip = \"Next page\";\nexport const previousPageTooltip = \"Previous page\";\n\nexport const deleteCardTooltip = \"Delete this card\";\nexport const jumpToOriginTooltip = \"Jump to the origin of the card content\";\n\nexport const ChoiceCardAsAppendTarget = \"Mark this card field so the next selection is added to it\";\nexport const AppendToCardTooltip = \"Add the current selection to this card field\";\nexport const CardIsAppendTargetTooltip = \"The next selection will be added to this card field (click to unselect)\";\n\nexport const ChoiceCardAsReplaceTarget = \"Mark this card field to be replaced by the next selection\";\nexport const ReplaceCardTooltip = \"Replace this card field with the current selection\";\nexport const CardIsReplaceTargetTooltip = \"The next selection will replace this card field (click to unselect)\";\n\nexport const newQACardTooltip = \"Create new QA-card\";\nexport const newNoteCardTooltip = \"Create new Note-card\";\nexport const unhideCardsTooltip = \"This river contains hidden cards. Click to show.\";\n\nexport const deleteDocumentTooltip = \"Delete this document and all its corresponding cards\";\nexport const loadSavedDocumentTooltip = \"Load the card data of this document\";\n\n/// Text\n\nexport const noMaterialText = \"No PDF file specified.\";\nexport const loadingMaterialText = \"Loading PDF…\";\n\nexport const activeDocumentText = \"Active Document:\";\nexport const existingDataText = \"Inactive documents with existing data:\";\nexport const loadMaterialText = \"Load document\";\nexport const downloadDatasetsText = \"Download document datasets\";\nexport const uploadDatasetsText = \"Upload document datasets\";\n\nexport const noteText = \"Note\";\nexport const questionText = \"Question\";\nexport const answerText = \"Answer\";\n\n/// Delay\n\nexport const defaultEnterDelay = 500;\nexport const defaultEnterNextDelay = 1000;\n","import { Tooltip, withStyles } from \"@material-ui/core\";\n\nexport const BiggerTooltip = withStyles((theme: any) => ({\n\ttooltip: {\n\t\tfontSize: 14,\n\t},\n}))(Tooltip);\n","import React, { ReactElement } from \"react\";\nimport { newNoteCardTooltip, defaultEnterDelay, defaultEnterNextDelay } from \"../constants\";\nimport { BiggerTooltip } from \"./BiggerTooltip\";\n\nexport const NewNoteCardTooltip = ({ children }: { children: ReactElement }) => {\n\treturn (\n\t\t<BiggerTooltip title={newNoteCardTooltip} enterDelay={defaultEnterDelay} enterNextDelay={defaultEnterNextDelay}>\n\t\t\t{children}\n\t\t</BiggerTooltip>\n\t);\n};\n","import React, { ReactElement } from \"react\";\nimport { defaultEnterDelay, defaultEnterNextDelay, newQACardTooltip } from \"../constants\";\nimport { BiggerTooltip } from \"./BiggerTooltip\";\n\nexport const AddQAButtonTooltip = ({ children }: { children: ReactElement }) => {\n\treturn (\n\t\t<BiggerTooltip title={newQACardTooltip} enterDelay={defaultEnterDelay} enterNextDelay={defaultEnterNextDelay}>\n\t\t\t{children}\n\t\t</BiggerTooltip>\n\t);\n};\n","import React, { ReactElement } from \"react\";\nimport { defaultEnterDelay, defaultEnterNextDelay, deleteCardTooltip } from \"../constants\";\nimport { BiggerTooltip } from \"./BiggerTooltip\";\n\nexport const DeleteCardButtonTooltip = ({ children }: { children: ReactElement }) => {\n\treturn (\n\t\t<BiggerTooltip title={deleteCardTooltip} enterDelay={defaultEnterDelay} enterNextDelay={defaultEnterNextDelay}>\n\t\t\t{children}\n\t\t</BiggerTooltip>\n\t);\n};\n","import React, { ReactElement } from \"react\";\nimport { defaultEnterDelay, defaultEnterNextDelay, unhideCardsTooltip } from \"../constants\";\nimport { BiggerTooltip } from \"./BiggerTooltip\";\n\nexport const UnhideCardsTooltip = ({ children }: { children: ReactElement }) => {\n\treturn (\n\t\t<BiggerTooltip title={unhideCardsTooltip} enterDelay={defaultEnterDelay} enterNextDelay={defaultEnterNextDelay}>\n\t\t\t{children}\n\t\t</BiggerTooltip>\n\t);\n};\n","import * as components from \"./components\";\nimport * as constants from \"./constants\";\n\nexport default { components, constants };\n","import { CardConfig, CardID, cardIDToNumber, strToCardConfig } from \"./model/config\";\nimport { Cards, CardsState } from \"./model/state\";\nimport { CaseReducer, createSlice, PayloadAction } from \"@reduxjs/toolkit\";\nimport { NAME } from \"./constants\";\nimport { CardField } from \"./model/content\";\n\nconst initialState: CardsState = {\n\tcards: {},\n\tlastCardIDNumber: 0,\n};\n\nconst updateCardInCards = (cards: Cards, toBeUpdated: CardConfig) => {\n\tconst cardObj = { ...cards };\n\tcardObj[toBeUpdated.cardID] = toBeUpdated;\n\treturn cardObj;\n};\n\nconst cardPush: CaseReducer<CardsState, PayloadAction<CardConfig>> = (state, { payload }) => {\n\treturn {\n\t\t...state,\n\t\tcards: updateCardInCards(state.cards, payload),\n\t\tlastCardIDNumber: cardIDToNumber(payload.cardID) + 1,\n\t};\n};\n\nconst cardReplace: CaseReducer<CardsState, PayloadAction<CardConfig>> = (state, { payload }) => {\n\treturn { ...state, cards: updateCardInCards(state.cards, payload) };\n};\n\nconst cardFieldReplace: CaseReducer<\n\tCardsState,\n\tPayloadAction<{ cardField: CardField; cardConfig: CardConfig; newValue: string }>\n> = (state, { payload }) => {\n\treturn {\n\t\t...state,\n\t\tcards: updateCardInCards(\n\t\t\tstate.cards,\n\t\t\tstrToCardConfig(payload.newValue, payload.cardField, \"REPLACE\", payload.cardConfig)\n\t\t),\n\t};\n};\n\nconst cardRemove: CaseReducer<CardsState, PayloadAction<CardID>> = (state, { payload }) => {\n\tconst cards = { ...state.cards };\n\n\t// we do not reset the ID counter\n\tdelete cards[payload];\n\n\treturn { ...state, cards };\n};\n\nconst allCardsReplace: CaseReducer<CardsState, PayloadAction<CardsState>> = (_, { payload }) => {\n\treturn payload;\n};\n\nconst allCardsReset: CaseReducer<CardsState> = () => {\n\treturn initialState;\n};\n\nconst cardsSlice = createSlice({\n\tname: NAME,\n\tinitialState,\n\treducers: {\n\t\tcardPush,\n\t\tcardReplace,\n\t\tcardFieldReplace,\n\t\tcardRemove,\n\t\tallCardsReplace,\n\t\tallCardsReset,\n\t},\n});\n\nexport const { actions } = cardsSlice;\n\nexport default cardsSlice;\n","import FeaturedVideoIcon from \"@material-ui/icons/FeaturedVideo\";\nimport React from \"react\";\nimport { IconButton } from \"@material-ui/core\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport text from \"../../../text\";\nimport { getNextCardID } from \"../../selectors\";\nimport { emptyNote } from \"../../model/config\";\nimport { actions } from \"../../slice\";\n\nexport const AddNoteButton = () => {\n\tconst dispatch = useDispatch();\n\tconst nextID = useSelector(getNextCardID);\n\treturn (\n\t\t<text.components.NewNoteCardTooltip>\n\t\t\t<IconButton\n\t\t\t\ttype=\"button\"\n\t\t\t\tonClick={() => {\n\t\t\t\t\tdispatch(actions.cardPush(emptyNote(nextID)));\n\t\t\t\t}}\n\t\t\t>\n\t\t\t\t<FeaturedVideoIcon></FeaturedVideoIcon>\n\t\t\t</IconButton>\n\t\t</text.components.NewNoteCardTooltip>\n\t);\n};\n","import FeaturedPlayListIcon from \"@material-ui/icons/FeaturedPlayList\";\nimport React from \"react\";\nimport { IconButton } from \"@material-ui/core\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport text from \"../../../text\";\nimport { getNextCardID } from \"../../selectors\";\nimport { emptyQA } from \"../../model/config\";\nimport { actions } from \"../../slice\";\n\nexport const AddQAButton = () => {\n\tconst dispatch = useDispatch();\n\tconst nextID = useSelector(getNextCardID);\n\n\treturn (\n\t\t<text.components.AddQAButtonTooltip>\n\t\t\t<IconButton\n\t\t\t\ttype=\"button\"\n\t\t\t\tonClick={() => {\n\t\t\t\t\tdispatch(actions.cardPush(emptyQA(nextID)));\n\t\t\t\t}}\n\t\t\t>\n\t\t\t\t<FeaturedPlayListIcon></FeaturedPlayListIcon>\n\t\t\t</IconButton>\n\t\t</text.components.AddQAButtonTooltip>\n\t);\n};\n","import DeleteForeverIcon from \"@material-ui/icons/DeleteForever\";\nimport React from \"react\";\nimport { IconButton } from \"@material-ui/core\";\nimport { useDispatch } from \"react-redux\";\nimport { CardID } from \"../../model/config\";\nimport text from \"../../../text\";\nimport { actions } from \"../../slice\";\n\nexport const DeleteCardButton = ({ cardID }: { cardID: CardID }) => {\n\tconst dispatch = useDispatch();\n\treturn (\n\t\t<text.components.DeleteCardButtonTooltip>\n\t\t\t<IconButton\n\t\t\t\ttype=\"button\"\n\t\t\t\tonClick={() => {\n\t\t\t\t\tdispatch(actions.cardRemove(cardID));\n\t\t\t\t}}\n\t\t\t>\n\t\t\t\t<DeleteForeverIcon fontSize=\"small\"></DeleteForeverIcon>\n\t\t\t</IconButton>\n\t\t</text.components.DeleteCardButtonTooltip>\n\t);\n};\n","import { Snackbar, IconButton } from \"@material-ui/core\";\nimport React from \"react\";\nimport CloseIcon from \"@material-ui/icons/Close\";\n\nexport function SimpleSnackbar({ message, close }: { message: string; close: () => void }) {\n\tconst handleClose = (event: React.SyntheticEvent | React.MouseEvent, reason?: string) => {\n\t\tif (reason === \"clickaway\") {\n\t\t\treturn;\n\t\t}\n\n\t\tclose();\n\t};\n\n\treturn (\n\t\t<Snackbar\n\t\t\tanchorOrigin={{\n\t\t\t\tvertical: \"bottom\",\n\t\t\t\thorizontal: \"right\",\n\t\t\t}}\n\t\t\topen={true}\n\t\t\tautoHideDuration={4000}\n\t\t\tonClose={handleClose}\n\t\t\tmessage={message}\n\t\t\taction={\n\t\t\t\t<IconButton size=\"small\" aria-label=\"close\" color=\"inherit\" onClick={handleClose}>\n\t\t\t\t\t<CloseIcon fontSize=\"small\" />\n\t\t\t\t</IconButton>\n\t\t\t}\n\t\t/>\n\t);\n}\n","import React, { useState } from \"react\";\nimport { IconButton, Card, Divider, Grid } from \"@material-ui/core\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport UndoIcon from \"@material-ui/icons/Undo\";\nimport RedoIcon from \"@material-ui/icons/Redo\";\nimport text from \"../../../text\";\nimport { ActionCreators } from \"redux-undo\";\nimport { SimpleSnackbar } from \"./SimpleSnackbar\";\nimport { hasFuture, hasPast } from \"../../selectors\";\n\nconst UndoButton = ({ announce }: { announce: () => void }) => {\n\tconst dispatch = useDispatch();\n\tconst cardsHasPast = useSelector(hasPast);\n\n\t//tooltip needs non-disabled child component\n\treturn (\n\t\t<text.components.BiggerTooltip\n\t\t\ttitle={text.constants.undoTooltip}\n\t\t\tenterDelay={text.constants.defaultEnterDelay}\n\t\t\tenterNextDelay={text.constants.defaultEnterNextDelay}\n\t\t>\n\t\t\t<span>\n\t\t\t\t<IconButton\n\t\t\t\t\ttype=\"button\"\n\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\tdispatch(ActionCreators.undo());\n\t\t\t\t\t\tannounce();\n\t\t\t\t\t}}\n\t\t\t\t\tdisabled={!cardsHasPast}\n\t\t\t\t>\n\t\t\t\t\t<UndoIcon></UndoIcon>\n\t\t\t\t</IconButton>\n\t\t\t</span>\n\t\t</text.components.BiggerTooltip>\n\t);\n};\nconst RedoButton = ({ announce }: { announce: () => void }) => {\n\tconst dispatch = useDispatch();\n\tconst cardsHasFuture = useSelector(hasFuture);\n\treturn (\n\t\t<text.components.BiggerTooltip\n\t\t\ttitle={text.constants.redoTooltip}\n\t\t\tenterDelay={text.constants.defaultEnterDelay}\n\t\t\tenterNextDelay={text.constants.defaultEnterNextDelay}\n\t\t>\n\t\t\t<span>\n\t\t\t\t<IconButton\n\t\t\t\t\ttype=\"button\"\n\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\tdispatch(ActionCreators.redo());\n\t\t\t\t\t\tannounce();\n\t\t\t\t\t}}\n\t\t\t\t\tdisabled={!cardsHasFuture}\n\t\t\t\t>\n\t\t\t\t\t<RedoIcon></RedoIcon>\n\t\t\t\t</IconButton>\n\t\t\t</span>\n\t\t</text.components.BiggerTooltip>\n\t);\n};\n\nexport const UndoRedoCard = () => {\n\tconst [snackbarState, setSnackbarState] = useState(\"\");\n\n\tconst close = () => {\n\t\tsetSnackbarState(\"\");\n\t};\n\n\treturn (\n\t\t<React.Fragment>\n\t\t\t{snackbarState === \"undo\" && <SimpleSnackbar message={\"Executed undo\"} close={close} />}\n\n\t\t\t{snackbarState === \"redo\" && <SimpleSnackbar message={\"Executed redo\"} close={close} />}\n\n\t\t\t<Card variant=\"outlined\">\n\t\t\t\t<Grid container direction=\"row\">\n\t\t\t\t\t<Grid item>\n\t\t\t\t\t\t<UndoButton\n\t\t\t\t\t\t\tannounce={() => {\n\t\t\t\t\t\t\t\tsetSnackbarState(\"undo\");\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t></UndoButton>\n\t\t\t\t\t</Grid>\n\t\t\t\t\t<Grid item>\n\t\t\t\t\t\t<Divider orientation=\"vertical\"></Divider>\n\t\t\t\t\t</Grid>\n\t\t\t\t\t<Grid item>\n\t\t\t\t\t\t<RedoButton\n\t\t\t\t\t\t\tannounce={() => {\n\t\t\t\t\t\t\t\tsetSnackbarState(\"redo\");\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t></RedoButton>\n\t\t\t\t\t</Grid>\n\t\t\t\t</Grid>\n\t\t\t</Card>\n\t\t</React.Fragment>\n\t);\n};\n","import { CaseReducer, PayloadAction } from \"@reduxjs/toolkit\";\nimport { KeyboardEvent } from \"react\";\n\nexport const incrementer = () => {\n\tlet counter = 0;\n\treturn () => {\n\t\tconst curCounter = counter;\n\t\tcounter++;\n\t\treturn curCounter;\n\t};\n};\n\nexport type KeyActionMap = { [key: string]: any };\n\ntype KeyEventDispatcher = (event: KeyboardEvent<Element>, dispatch: any, state?: any) => void;\n\nexport const keyEventDispatcherCreator = (keyMap: KeyActionMap): KeyEventDispatcher => (\n\tevent: KeyboardEvent,\n\tdispatch: any\n) => {\n\tconst action = keyMap[event.key];\n\tif (action) {\n\t\tevent.preventDefault();\n\t\tdispatch(action);\n\t}\n};\n\nexport type ClayMemoryAction = { type: string };\nexport type ClayMemoryPayloadAction = { type: string; payload: any };\n\nexport type Filter = (element: any) => boolean;\nexport const combineFilterArr = (filters: Filter[]) => (x: any) => filters.reduce((b, f) => b || f(x), false);\n\nexport type AnyPayloadCaseReducer = CaseReducer<any, PayloadAction<any>>;\nexport const simpleReducer = (field: string): AnyPayloadCaseReducer => (state: any, { payload }: any) => {\n\treturn { ...state, [field]: payload };\n};\n\nexport const simpleReducerMap = (fields: string[]) => {\n\tconst map: { [key: string]: AnyPayloadCaseReducer } = {};\n\tfor (let field of fields) {\n\t\tmap[field] = simpleReducer(field);\n\t}\n\treturn map;\n};\n","import React, { KeyboardEvent, useState } from \"react\";\nimport { ReactNode } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { ActionCreators } from \"redux-undo\";\nimport { SimpleSnackbar } from \"./SimpleSnackbar\";\n\nexport const UndoRedoKeyListener = ({ children }: { children: ReactNode }) => {\n\tconst dispatch = useDispatch();\n\tconst [snackbarState, setSnackbarState] = useState(\"\");\n\n\tconst close = () => {\n\t\tsetSnackbarState(\"\");\n\t};\n\t//TODO: the snackbars of UndoRedoButtons und this UndoRedo are overlapping, also copied logic\n\n\t//TODO: undo/redo for Textfields is different than this undo/redo, there should be only one way\n\treturn (\n\t\t<span\n\t\t\tonKeyDown={(event: KeyboardEvent<HTMLSpanElement>) => {\n\t\t\t\tif (event.ctrlKey) {\n\t\t\t\t\t//TODO: localisation, this is germany specific\n\t\t\t\t\tif (event.key === \"z\") {\n\t\t\t\t\t\tdispatch(ActionCreators.undo());\n\t\t\t\t\t\tevent.preventDefault();\n\t\t\t\t\t\tsetSnackbarState(\"undo\");\n\t\t\t\t\t} else if (event.key === \"y\") {\n\t\t\t\t\t\tdispatch(ActionCreators.redo());\n\t\t\t\t\t\tevent.preventDefault();\n\t\t\t\t\t\tsetSnackbarState(\"redo\");\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}}\n\t\t>\n\t\t\t{snackbarState === \"undo\" && <SimpleSnackbar message={\"Executed undo\"} close={close} />}\n\n\t\t\t{snackbarState === \"redo\" && <SimpleSnackbar message={\"Executed redo\"} close={close} />}\n\n\t\t\t{children}\n\t\t</span>\n\t);\n};\n","import { CardField } from \"./content\";\nimport { createReplace, changeCardObject } from \"./permutation\";\n\nexport type SingleOrigin = { spanIndexStart: number; spanIndexEnd: number; page: number };\nexport type QOnlyQAOrigin = { q: SingleOrigin; a: {} };\nexport type AOnlyQAOrigin = { q: {}; a: SingleOrigin };\nexport type PartialQAOrigin = QOnlyQAOrigin | AOnlyQAOrigin;\nconst emptyQAOrigin = () => {\n\treturn { q: {}, a: {} };\n};\ntype EmptyOrigin = { q: {}; a: {} } | \"\";\nconst EmptyOriginMap: { [field in CardField]: () => EmptyOrigin } = {\n\tq: emptyQAOrigin,\n\ta: emptyQAOrigin,\n\tnote: () => \"\",\n};\nexport const emptyOrigin = (field: CardField) => {\n\treturn EmptyOriginMap[field]();\n};\ntype FullQAOrigin = { q: SingleOrigin; a: SingleOrigin };\nexport type QAOrigin = FullQAOrigin | PartialQAOrigin;\nexport type NoteOrigin = SingleOrigin;\nexport type CardOrigin = NoteOrigin | QAOrigin;\n\nexport const singleOriginToCardOrigin = (\n\tsingleOrigin: SingleOrigin,\n\toutputField: CardField,\n\tbaseOrigin?: CardOrigin\n): CardOrigin => {\n\tconst changeSpec = {\n\t\tinputObject: singleOrigin,\n\t\tinputField: \"note\" as CardField,\n\t\tfieldToBeChanged: outputField,\n\t\tobjectToBeChanged: baseOrigin ? baseOrigin : emptyOrigin(outputField),\n\t\tcreateModify: createReplace,\n\t};\n\n\treturn changeCardObject(changeSpec);\n};\n","import * as constants from \"./constants\";\nimport * as selectors from \"./selectors\";\nimport * as components from \"./components\";\nimport * as model from \"./model\";\nimport slice from \"./slice\";\n\nconst { reducer, actions, name } = slice;\n\nexport default { constants, actions, reducer, name, selectors, components, model };\n","import { NAME } from \"./constants\";\nimport { createSelector } from \"reselect\";\nimport { CardRiverState, riverMakeUpIDToPageNumber } from \"./model\";\nimport cards from \"../cards\";\nimport { CardID } from \"../cards/model/config\";\n\nexport const getAll = (state: any): CardRiverState => state[NAME].present;\n\nexport const getRiverMakeUps = createSelector(getAll, (state: CardRiverState) => state.riverMakeUps);\n\nexport const getNonEmptyRiverIDs = createSelector(getRiverMakeUps, (makeUps) => Object.keys(makeUps));\n\nexport const getNonEmptyRiverIDsSorted = createSelector(getNonEmptyRiverIDs, (ids) =>\n\tids.sort((a, b) => riverMakeUpIDToPageNumber(a) - riverMakeUpIDToPageNumber(b))\n);\n\nexport const getNonEmptyRiverMakeUpsSorted = createSelector(getRiverMakeUps, (makeUps) =>\n\tObject.values(makeUps).sort((a, b) => riverMakeUpIDToPageNumber(a.riverID) - riverMakeUpIDToPageNumber(b.riverID))\n);\n\nexport const getNonEmptyRiverCardsSorted = createSelector(\n\tgetNonEmptyRiverMakeUpsSorted,\n\tcards.selectors.getCards,\n\t(makeUps, cards) => {\n\t\tconst cardObjects = [];\n\t\tfor (const makeUp of makeUps) {\n\t\t\tfor (const id of makeUp.cardIDs) {\n\t\t\t\tcardObjects.push(cards[id]);\n\t\t\t}\n\t\t}\n\n\t\treturn cardObjects;\n\t}\n);\n\nexport const getActiveRiverMakeUpID = createSelector(getAll, (state: CardRiverState) => state.riverActiveID);\n\nexport const getActiveRiverMakeUp = createSelector(getRiverMakeUps, getActiveRiverMakeUpID, (makeUps, id) => {\n\tconst makeUp = makeUps[id];\n\treturn makeUp ? makeUp : { cardIDs: [] };\n});\n\nexport const getActiveRiverCardIDs = createSelector(getActiveRiverMakeUp, (makeUp): CardID[] => makeUp.cardIDs);\n\nexport const getActiveRiverCards = createSelector(\n\tgetActiveRiverCardIDs,\n\tcards.selectors.getCards,\n\t(makeUpCardIDs, cards) => makeUpCardIDs.map((id) => cards[id])\n);\n\nexport const getRiverShowState = createSelector(getAll, (state: CardRiverState) => state.riverShowState);\n\nexport const riverShowStateIsShow = createSelector(getRiverShowState, (state) => state === \"SHOW\");\n\nexport const getRiverContentState = createSelector(getAll, (state: CardRiverState) => state.riverContentState);\n\nexport const getRiverContentFilter = createSelector(getAll, (state: CardRiverState) => state.riverContentFilter);\n\nexport const getOriginRequest = createSelector(getAll, (state) => state.riverOriginRequest);\n","import { withStyles, CheckboxProps, Checkbox } from \"@material-ui/core\";\nimport React from \"react\";\nimport { green } from \"@material-ui/core/colors\";\nexport const GreenCheckbox = withStyles({\n\troot: {\n\t\tcolor: green[400],\n\t\t\"&$checked\": {\n\t\t\tcolor: green[600],\n\t\t},\n\t},\n\tchecked: {},\n})((props: CheckboxProps) => <Checkbox color=\"default\" {...props} />);\n","import {\n\tCardRiverState,\n\tRiverShowState,\n\tpageNumberToRiverMakeUpID,\n\tRiverContentState,\n\tremoveCardFromRivers,\n\tRiverMakeUps,\n} from \"./model\";\nimport { CardConfig } from \"../cards/model/config\";\nimport cards from \"../cards\";\nimport { CaseReducer, createSlice, PayloadAction } from \"@reduxjs/toolkit\";\nimport { NAME } from \"./constants\";\nimport { SingleOrigin } from \"../cards/model/origin\";\nimport { simpleReducer } from \"../../shared/utils\";\n\nconst initialState: CardRiverState = {\n\triverOriginRequest: null,\n\triverMakeUps: {},\n\triverActiveID: pageNumberToRiverMakeUpID(1),\n\triverShowState: \"SHOW\",\n\triverContentState: \"ALL\",\n\triverContentFilter: \"\",\n\tcount_DONT_USE: 0,\n};\n\nconst riverActiveID: CaseReducer<CardRiverState, PayloadAction<string>> = simpleReducer(\"riverActiveID\");\nconst riverShowState: CaseReducer<CardRiverState, PayloadAction<RiverShowState>> = simpleReducer(\"riverShowState\");\nconst riverContentState: CaseReducer<CardRiverState, PayloadAction<RiverContentState>> = simpleReducer(\n\t\"riverContentState\"\n);\nconst riverContentFilter: CaseReducer<CardRiverState, PayloadAction<string>> = simpleReducer(\"riverContentFilter\");\nconst riverOriginRequest: CaseReducer<CardRiverState, PayloadAction<SingleOrigin | null>> = simpleReducer(\n\t\"riverOriginRequest\"\n);\n\nconst riverUnhide: CaseReducer<CardRiverState> = (state) => {\n\treturn { ...state, riverContentState: \"ALL\", riverContentFilter: \"\" };\n};\n\nconst allRiversReset: CaseReducer<CardRiverState> = (_) => {\n\treturn initialState;\n};\n\nconst allRiversReplace: CaseReducer<CardRiverState, PayloadAction<RiverMakeUps>> = (_, { payload }) => {\n\treturn {\n\t\t...initialState,\n\t\triverMakeUps: payload as RiverMakeUps,\n\t};\n};\n\nconst riverCardPush: CaseReducer<CardRiverState, PayloadAction<CardConfig>> = (state, { payload }) => {\n\tlet riverMakeUp;\n\tlet riverMakeUps;\n\t// make this unchained\n\t// then make clean up action?\n\tif (state.riverMakeUps[state.riverActiveID]) {\n\t\triverMakeUp = {\n\t\t\t...state.riverMakeUps[state.riverActiveID],\n\t\t\tcardIDs: [...state.riverMakeUps[state.riverActiveID].cardIDs, (payload as CardConfig).cardID],\n\t\t};\n\t} else {\n\t\t// create new river\n\t\triverMakeUp = {\n\t\t\triverID: state.riverActiveID,\n\t\t\tcardIDs: [(payload as CardConfig).cardID],\n\t\t};\n\t}\n\triverMakeUps = { ...state.riverMakeUps };\n\triverMakeUps[state.riverActiveID] = riverMakeUp;\n\n\treturn { ...state, riverMakeUps: riverMakeUps, count_DONT_USE: 0 };\n};\n\nconst riverCardRemove: CaseReducer<CardRiverState, PayloadAction<string>> = (state, { payload }) => {\n\treturn { ...removeCardFromRivers(state, payload), count_DONT_USE: 0 };\n};\n\nconst riverCardReplace: CaseReducer<CardRiverState> = (state) => {\n\t// a new state is necessary for the undo/redo to be able to sync river and cards\n\t// by resetting this to 0 via the other card-action, we avoid a (unlikely) too high number\n\treturn { ...state, count_DONT_USE: state.count_DONT_USE + 1 };\n};\n\nconst riverSlice = createSlice({\n\tname: NAME,\n\tinitialState,\n\treducers: {\n\t\triverActiveID,\n\t\triverShowState,\n\t\triverContentState,\n\t\triverContentFilter,\n\t\triverOriginRequest,\n\t\triverUnhide,\n\t\tallRiversReset,\n\t\tallRiversReplace,\n\t},\n\textraReducers: {\n\t\t[cards.actions.cardPush.type]: riverCardPush,\n\t\t[cards.actions.cardRemove.type]: riverCardRemove,\n\t\t[cards.actions.cardReplace.type]: riverCardReplace,\n\t\t[cards.actions.cardFieldReplace.type]: riverCardReplace,\n\t},\n});\n\nexport const { actions } = riverSlice;\n\nexport default riverSlice;\n","import { FormGroup, FormControlLabel } from \"@material-ui/core\";\nimport React from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { getRiverContentState } from \"../../selectors\";\nimport { RiverContentState } from \"../../model\";\nimport { GreenCheckbox } from \"../../../../shared/GreenCheckbox\";\nimport { actions } from \"../../slice\";\n\nexport const RiverContentFormGroup = () => {\n\tconst riverContentState = useSelector(getRiverContentState);\n\tconst dispatch = useDispatch();\n\n\tconst showQAs = riverContentState === \"ALL\" || riverContentState === \"QAS\";\n\tconst showNotes = riverContentState === \"ALL\" || riverContentState === \"NOTES\";\n\n\tconst changeContentState = (clickedState: RiverContentState) => {\n\t\tif (!showQAs && clickedState === \"QAS\") {\n\t\t\tif (showNotes) {\n\t\t\t\tdispatch(actions.riverContentState(\"ALL\"));\n\t\t\t} else {\n\t\t\t\tdispatch(actions.riverContentState(\"QAS\"));\n\t\t\t}\n\t\t\treturn;\n\t\t}\n\n\t\tif (!showNotes && clickedState === \"NOTES\") {\n\t\t\tif (showQAs) {\n\t\t\t\tdispatch(actions.riverContentState(\"ALL\"));\n\t\t\t} else {\n\t\t\t\tdispatch(actions.riverContentState(\"NOTES\"));\n\t\t\t}\n\t\t\treturn;\n\t\t}\n\n\t\tif (showQAs && clickedState === \"QAS\") {\n\t\t\tif (!showNotes) {\n\t\t\t\tdispatch(actions.riverContentState(\"NONE\"));\n\t\t\t} else {\n\t\t\t\tdispatch(actions.riverContentState(\"NOTES\"));\n\t\t\t}\n\t\t\treturn;\n\t\t}\n\n\t\tif (showNotes && clickedState === \"NOTES\") {\n\t\t\tif (!showQAs) {\n\t\t\t\tdispatch(actions.riverContentState(\"NONE\"));\n\t\t\t} else {\n\t\t\t\tdispatch(actions.riverContentState(\"QAS\"));\n\t\t\t}\n\t\t\treturn;\n\t\t}\n\t};\n\n\treturn (\n\t\t<FormGroup>\n\t\t\t<FormControlLabel\n\t\t\t\tcontrol={\n\t\t\t\t\t<GreenCheckbox\n\t\t\t\t\t\tchecked={showQAs}\n\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\tchangeContentState(\"QAS\");\n\t\t\t\t\t\t}}\n\t\t\t\t\t/>\n\t\t\t\t}\n\t\t\t\tlabel=\"QAs\"\n\t\t\t/>\n\t\t\t<FormControlLabel\n\t\t\t\tcontrol={\n\t\t\t\t\t<GreenCheckbox\n\t\t\t\t\t\tchecked={showNotes}\n\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\tchangeContentState(\"NOTES\");\n\t\t\t\t\t\t}}\n\t\t\t\t\t/>\n\t\t\t\t}\n\t\t\t\tlabel=\"Notes\"\n\t\t\t/>\n\t\t</FormGroup>\n\t);\n};\n","import { NAME } from \"./constants\";\nimport { createSelector } from \"reselect\";\nimport { SelectionData } from \"./model\";\n\nexport const getAll = (state: any): SelectionData => state[NAME];\n\nexport const getTargetConfig = createSelector(getAll, (state) => state.goalConfig);\nexport const getSourceConfig = createSelector(getAll, (state) => state.sourceConfig);\n\nexport const sourceConfigExists = createSelector(getSourceConfig, (config) => !!config);\n","import { CardConfig, CardPayload } from \"../../cards/model/config\";\nimport cards from \"../../cards\";\nimport {\n\tSelectionTargetConfig,\n\tSelectionSourceConfig,\n\tgoalIsCreation,\n\tSelectionExistingCardTargetConfig,\n} from \"../model\";\nimport { getNextCardID } from \"../../cards/selectors\";\n\nconst selectionConfigToCardPayload = (sourceConfig: SelectionSourceConfig, goalConfig: SelectionTargetConfig) => {\n\tconst inputOrigin = sourceConfig.contentOrigin;\n\tconst inputValue = sourceConfig.contentStr;\n\n\tconst outputField = goalConfig.cardField;\n\n\treturn {\n\t\ttype: cards.model.config.cardFieldToType(outputField),\n\t\tcontent: cards.model.content.strToNewCardContent(inputValue, outputField),\n\t\torigin: inputOrigin ? cards.model.origin.singleOriginToCardOrigin(inputOrigin, outputField) : undefined,\n\t};\n};\n\nconst selectionConfigToActualizedCardConfig = (\n\tsourceConfig: SelectionSourceConfig,\n\tgoalConfig: SelectionExistingCardTargetConfig,\n\tstate: any\n): CardConfig => {\n\tconst existingCard = cards.selectors.getCardByID(state, goalConfig.cardID);\n\n\tconst inputOrigin = sourceConfig.contentOrigin;\n\tconst inputValue = sourceConfig.contentStr;\n\n\tconst outputField = goalConfig.cardField;\n\n\treturn {\n\t\t...existingCard,\n\t\tcontent: cards.model.content.strToCardContent(inputValue, outputField, goalConfig.updateType, existingCard.content),\n\t\torigin: inputOrigin\n\t\t\t? cards.model.origin.singleOriginToCardOrigin(inputOrigin, outputField, existingCard.origin)\n\t\t\t: existingCard.origin,\n\t} as CardConfig;\n};\n\nexport const selectionToCard = (\n\tsourceConfig: SelectionSourceConfig,\n\tgoalConfig: SelectionTargetConfig,\n\tdispatch: any,\n\tstate: any\n) => {\n\tconst isCreation = goalIsCreation(goalConfig);\n\tif (isCreation) {\n\t\tconst cardPayload: CardPayload = selectionConfigToCardPayload(sourceConfig, goalConfig);\n\t\tconst nextID = getNextCardID(state);\n\t\tdispatch(cards.actions.cardPush({ ...cardPayload, cardID: nextID } as CardConfig));\n\t} else {\n\t\tconst cardConfig = selectionConfigToActualizedCardConfig(\n\t\t\tsourceConfig,\n\t\t\tgoalConfig as SelectionExistingCardTargetConfig,\n\t\t\tstate\n\t\t);\n\t\tdispatch(cards.actions.cardReplace(cardConfig));\n\t}\n};\n","import { SingleOrigin } from \"../cards/model/origin\";\nimport { CardField } from \"../cards/model/content\";\nimport { CardID, UpdateType } from \"../cards/model/config\";\n\nexport type SelectionSourceConfig = { contentStr: string; contentOrigin?: SingleOrigin };\n\nexport type CardFieldIdentifier = { cardID: CardID; cardField: CardField };\nexport type SelectionExistingCardTargetConfig = CardFieldIdentifier & { updateType: UpdateType };\nexport type SelectionTargetConfig = SelectionExistingCardTargetConfig | { cardField: CardField };\nexport const goalIsCreation = (goalConfig: SelectionTargetConfig) => {\n\t// each existing card has an ID\n\tconst idExists = !!(goalConfig as CardFieldIdentifier).cardID;\n\treturn !idExists;\n};\n\n// Selection is made up of two parts: selecting a source and selecting a goal\n// If both are done, then a Card needs to be created or updated\n// By clarifying this concept, I was able to reduce the selection code and make it more composable\n// See: AppendButton can be used before or after selecting a source without any extra code\n// This shows that a correct conceptualisation of the problem domain operations is the most important\n// thing in programming (note to self :))\n\nexport type SelectionData = {\n\tsourceConfig: SelectionSourceConfig | null;\n\tgoalConfig: SelectionTargetConfig | null;\n};\n","import { SelectionSourceConfig } from \"../model\";\nimport { SingleOrigin } from \"../../cards/model/origin\";\n\ntype SelectionData = { text: string; selection: Selection };\n\n// TODO: multiline selection should keep newlines\n\nexport const getSelectionWorkaround = (): SelectionData | null => {\n\tconst selection = window.getSelection();\n\n\tif (!selection) return null;\n\n\ttry {\n\t\tvar activeElement = document.activeElement;\n\t\tif (activeElement && (activeElement as HTMLInputElement).value) {\n\t\t\t// firefox bug https://bugzilla.mozilla.org/show_bug.cgi?id=85686\n\t\t\tconst str = (activeElement as HTMLInputElement).value\n\t\t\t\t.substring(\n\t\t\t\t\t(activeElement as HTMLInputElement).selectionStart as number,\n\t\t\t\t\t(activeElement as HTMLInputElement).selectionEnd as number\n\t\t\t\t)\n\t\t\t\t.trim();\n\n\t\t\tif (str === \"\") return null;\n\n\t\t\treturn { text: str, selection };\n\t\t} else {\n\t\t\tconst selStr = selection.toString().trim();\n\n\t\t\tif (selStr === \"\") return null;\n\n\t\t\treturn { text: selStr, selection };\n\t\t}\n\t} catch (e) {\n\t\treturn null;\n\t}\n};\n\nconst materialSelectionDataToSourceConfig = (\n\tselectionData: SelectionData,\n\tpage: number\n): SelectionSourceConfig | false => {\n\t//TODO: think about race-conditions for the delayed rendering, this might mess up the index\n\t//TODO: this also depends on the rendering order of the spans to be the same, might not be a good idea\n\t//TODO: maybe can do this async if it gets more complex?\n\n\tconst selection = selectionData.selection;\n\tlet selectedParentStart = selection.anchorNode?.parentNode as Node | null;\n\tlet selectedParentEnd = selection.focusNode?.parentNode as Node | null;\n\n\tif (!selectedParentStart || !selectedParentEnd) {\n\t\treturn false;\n\t}\n\n\tif (selectedParentStart.nodeName === \"MARK\") {\n\t\tselectedParentStart = selectedParentStart.parentNode;\n\t\tif (!selectedParentStart) return false;\n\t}\n\n\tif (selectedParentEnd.nodeName === \"MARK\") {\n\t\tselectedParentEnd = selectedParentEnd.parentNode;\n\t\tif (!selectedParentEnd) return false;\n\t}\n\n\tif (selectedParentStart.nodeName !== \"SPAN\") {\n\t\t// sometimes the parent div gets selected\n\t\tif (selectedParentStart.nodeName === \"DIV\" && selection.anchorNode?.nodeName === \"SPAN\") {\n\t\t\tselectedParentStart = selection.anchorNode;\n\t\t} else {\n\t\t\treturn false;\n\t\t}\n\t}\n\n\tif (selectedParentEnd.nodeName !== \"SPAN\") {\n\t\t// sometimes the parent div gets selected\n\t\tif (selectedParentEnd.nodeName === \"DIV\" && selection.focusNode?.nodeName === \"SPAN\") {\n\t\t\tselectedParentEnd = selection.focusNode;\n\t\t} else {\n\t\t\treturn false;\n\t\t}\n\t}\n\n\tconst divTextLayerParent = selectedParentStart.parentNode;\n\tif (!!!divTextLayerParent || divTextLayerParent.nodeName !== \"DIV\") return false;\n\n\tconst spanChildren = Array.from(divTextLayerParent.childNodes) as Node[];\n\tif (spanChildren.length === 0) return false;\n\n\tconst startIndex = spanChildren.indexOf(selectedParentStart);\n\tconst endIndex = spanChildren.indexOf(selectedParentEnd);\n\tif (startIndex === -1 || endIndex === -1) return false;\n\n\treturn {\n\t\tcontentStr: selectionData.text,\n\t\tcontentOrigin: { spanIndexStart: startIndex, spanIndexEnd: endIndex, page },\n\t};\n};\n\n//TODO: this is to prevent the Snackbar from overflowing and the Close-Icon being off the screen\n// however, this should dynamically depend on if it is really overflowing (or different solution for snackbar)\nconst maxSelectionLength = 400;\nexport const getSelectionSourceFromMaterial = (page: number): SelectionSourceConfig | false => {\n\tconst selectionData = getSelectionWorkaround();\n\n\tif (!selectionData || selectionData.text.length > maxSelectionLength) return false;\n\n\treturn materialSelectionDataToSourceConfig(selectionData, page);\n};\n\nexport const getSelectionSourceFromCard = (contentOrigin?: SingleOrigin): SelectionSourceConfig | false => {\n\tconst selectionData = getSelectionWorkaround();\n\tif (!selectionData) return false;\n\n\treturn { contentStr: selectionData.text, contentOrigin };\n};\n","import { CaseReducer, createSlice, PayloadAction } from \"@reduxjs/toolkit\";\nimport { simpleReducer } from \"../../shared/utils\";\nimport { NAME } from \"./constants\";\nimport { SelectionData, SelectionTargetConfig, SelectionSourceConfig } from \"./model\";\n\nconst initialState: SelectionData = {\n\tsourceConfig: null,\n\tgoalConfig: null,\n};\n\nconst selectionSource: CaseReducer<SelectionData, PayloadAction<SelectionSourceConfig | null>> = simpleReducer(\n\t\"sourceConfig\"\n);\nconst selectionTarget: CaseReducer<SelectionData, PayloadAction<SelectionTargetConfig | null>> = simpleReducer(\n\t\"goalConfig\"\n);\n\nconst selectionSlice = createSlice({\n\tname: NAME,\n\tinitialState,\n\treducers: {\n\t\tselectionSource,\n\t\tselectionTarget,\n\t},\n});\n\nexport const { actions } = selectionSlice;\n\nexport default selectionSlice;\n","export const NAME = \"selectionData\";\n","import { SingleOrigin } from \"../cards/model/origin\";\nimport { SelectionSourceConfig, SelectionTargetConfig, SelectionExistingCardTargetConfig } from \"./model\";\nimport { Dispatch } from \"redux\";\nimport { getTargetConfig, getSourceConfig } from \"./selectors\";\nimport { selectionToCard } from \"./services/use-selection\";\nimport { getSelectionSourceFromMaterial, getSelectionSourceFromCard } from \"./services/get-selection\";\nimport { CardID } from \"../cards/model/config\";\nimport { CardField } from \"../cards/model/content\";\nimport { actions } from \"./slice\";\n\nconst selectionSource = actions.selectionSource;\nexport const resetSelectionSource = () => selectionSource(null);\nconst selectionTarget = actions.selectionTarget;\nexport const resetSelectionTarget = () => selectionTarget(null);\n\n// we want to support either direction, first adding Target or first adding Source\nexport const addSelectionSource = (config: SelectionSourceConfig) => {\n\treturn (dispatch: Dispatch, getState: Function) => {\n\t\tconst state = getState();\n\t\tconst goalConfig = getTargetConfig(state);\n\t\tif (!goalConfig) {\n\t\t\tdispatch(selectionSource(config));\n\t\t\treturn;\n\t\t}\n\t\tselectionToCard(config, goalConfig as SelectionTargetConfig, dispatch, state);\n\t\tdispatch(resetSelectionTarget());\n\t};\n};\n\nexport const addMaterialSelectionSource = (page: number) => {\n\tconst sourceConfig = getSelectionSourceFromMaterial(page);\n\tif (sourceConfig) {\n\t\treturn addSelectionSource(sourceConfig);\n\t}\n\treturn false;\n};\n\nexport const addCardSelectionSource = (contentOrigin?: SingleOrigin) => {\n\tconst sourceConfig = getSelectionSourceFromCard(contentOrigin);\n\tif (sourceConfig) {\n\t\treturn addSelectionSource(sourceConfig);\n\t}\n\treturn false;\n};\n\nexport const addSelectionTarget = (config: SelectionTargetConfig) => {\n\treturn (dispatch: Dispatch, getState: Function) => {\n\t\tconst state = getState();\n\t\tconst sourceConfig = getSourceConfig(state);\n\t\tif (!sourceConfig) {\n\t\t\tdispatch(selectionTarget(config));\n\t\t\treturn;\n\t\t}\n\t\tselectionToCard(sourceConfig as SelectionSourceConfig, config, dispatch, state);\n\t\tdispatch(resetSelectionSource());\n\t};\n};\n\nexport const addCardAppendSelectionTarget = (cardID: CardID, cardField: CardField) => {\n\tconst config: SelectionExistingCardTargetConfig = { cardID, cardField, updateType: \"APPEND\" };\n\treturn addSelectionTarget(config);\n};\n\nexport const addCardReplaceSelectionTarget = (cardID: CardID, cardField: CardField) => {\n\tconst config: SelectionExistingCardTargetConfig = { cardID, cardField, updateType: \"REPLACE\" };\n\treturn addSelectionTarget(config);\n};\n","import React, { useState, useEffect } from \"react\";\nimport { Snackbar, IconButton, Typography, Card, Grid } from \"@material-ui/core\";\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { resetSelectionSource } from \"../../actions\";\nimport { getSourceConfig } from \"../../selectors\";\nimport Draggable from \"react-draggable\";\n\nexport const SelectionSnackbar = () => {\n\tconst [open, setOpen] = useState(false);\n\tconst dispatch = useDispatch();\n\tconst sourceConfig = useSelector(getSourceConfig);\n\n\tif (!!!sourceConfig && open) setOpen(false);\n\n\tif (!!sourceConfig && !open) setOpen(true);\n\n\tconst handleClose = (event: any, reason: string) => {\n\t\tif (reason === \"clickaway\") {\n\t\t\treturn;\n\t\t} else {\n\t\t\tsetOpen(false);\n\t\t\tdispatch(resetSelectionSource());\n\t\t}\n\t};\n\n\tconst handleDismiss = () => {\n\t\tsetOpen(false);\n\t\tdispatch(resetSelectionSource());\n\t};\n\n\tconst escPress = (event: KeyboardEvent) => {\n\t\tif (open && (event.key === \"Escape\" || event.key === \"Esc\")) {\n\t\t\thandleDismiss();\n\t\t}\n\t};\n\n\tuseEffect(() => {\n\t\tdocument.addEventListener(\"keydown\", escPress);\n\t\treturn () => {\n\t\t\tdocument.removeEventListener(\"keydown\", escPress);\n\t\t};\n\t});\n\n\t//TODO: draggable leads to x-axis offset of 50%, but if I set position-offset the bounds dont work\n\n\treturn (\n\t\t<Draggable positionOffset={{ x: \"0%\", y: \"0%\" }} bounds=\"parent\">\n\t\t\t<Snackbar\n\t\t\t\tstyle={{ maxWidth: \"400px\", overflowX: \"auto\" }}\n\t\t\t\tanchorOrigin={{ vertical: \"top\", horizontal: \"center\" }}\n\t\t\t\topen={open}\n\t\t\t\tonClose={handleClose}\n\t\t\t\tonContextMenu={(event: React.MouseEvent<HTMLDivElement>) => {\n\t\t\t\t\tevent.preventDefault();\n\t\t\t\t\tsetOpen(false);\n\t\t\t\t\tdispatch(resetSelectionSource());\n\t\t\t\t}}\n\t\t\t\tmessage={\n\t\t\t\t\t<Grid container direction=\"row\" spacing={1}>\n\t\t\t\t\t\t<Grid item>\n\t\t\t\t\t\t\t<Card\n\t\t\t\t\t\t\t\tvariant=\"outlined\"\n\t\t\t\t\t\t\t\tcolor=\"secondary\"\n\t\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\t\tpadding: \"4px\",\n\t\t\t\t\t\t\t\t\tcolor: \"white\",\n\t\t\t\t\t\t\t\t\tbackgroundColor: \"#3f51b5\",\n\t\t\t\t\t\t\t\t\tmaxWidth: \"400px\",\n\t\t\t\t\t\t\t\t\toverflowX: \"auto\",\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\tsquare={true}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<Typography variant=\"h4\">{\"Selection:\"}</Typography>\n\t\t\t\t\t\t\t</Card>\n\n\t\t\t\t\t\t\t<Card\n\t\t\t\t\t\t\t\tvariant=\"outlined\"\n\t\t\t\t\t\t\t\tstyle={{ padding: \"4px\", color: \"black\", backgroundColor: \"white\" }}\n\t\t\t\t\t\t\t\tsquare={true}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<Typography variant=\"body1\">{sourceConfig?.contentStr}</Typography>\n\t\t\t\t\t\t\t</Card>\n\t\t\t\t\t\t</Grid>\n\n\t\t\t\t\t\t{sourceConfig?.contentOrigin && (\n\t\t\t\t\t\t\t<Grid item>\n\t\t\t\t\t\t\t\t<Card\n\t\t\t\t\t\t\t\t\tvariant=\"outlined\"\n\t\t\t\t\t\t\t\t\tcolor=\"secondary\"\n\t\t\t\t\t\t\t\t\tstyle={{ padding: \"4px\", color: \"black\", backgroundColor: \"white\" }}\n\t\t\t\t\t\t\t\t\tsquare={true}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t<Typography variant=\"h4\">{\"Origin:\"}</Typography>\n\t\t\t\t\t\t\t\t</Card>\n\n\t\t\t\t\t\t\t\t<Card\n\t\t\t\t\t\t\t\t\tvariant=\"outlined\"\n\t\t\t\t\t\t\t\t\tstyle={{ padding: \"4px\", color: \"white\", backgroundColor: \"#3f51b5\" }}\n\t\t\t\t\t\t\t\t\tsquare={true}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t<Typography variant=\"body1\">Page {sourceConfig.contentOrigin.page}</Typography>\n\t\t\t\t\t\t\t\t</Card>\n\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t)}\n\t\t\t\t\t</Grid>\n\t\t\t\t}\n\t\t\t\taction={\n\t\t\t\t\t<IconButton size=\"small\" aria-label=\"close\" color=\"inherit\" onClick={handleDismiss}>\n\t\t\t\t\t\t<CloseIcon fontSize=\"small\" />\n\t\t\t\t\t</IconButton>\n\t\t\t\t}\n\t\t\t/>\n\t\t</Draggable>\n\t);\n};\n","import React, { ReactNode } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { addMaterialSelectionSource } from \"../../actions\";\n\n// should only be used once material/pdf exists\nexport const MaterialMouseUp = ({ children, page }: { children: ReactNode; page: number }) => {\n\tconst dispatch = useDispatch();\n\n\treturn (\n\t\t<span\n\t\t\t// TODO: this is not a perfect solution as it should be possible to hold on to the selection while the mouse is out.\n\t\t\t// same for CardMouseUp\n\t\t\tonMouseUp={() => {\n\t\t\t\tconst materialSelectionSourceAction = addMaterialSelectionSource(page);\n\t\t\t\tif (materialSelectionSourceAction) dispatch(materialSelectionSourceAction);\n\t\t\t}}\n\t\t\tonMouseDown={(event: React.MouseEvent<any>) => {\n\t\t\t\t// without this it is possible so have something selected\n\t\t\t\t// close the selection-snackbar\n\t\t\t\t// it stays selected (only on click inside text it woud de-select)\n\t\t\t\t// then press the mouse and\n\t\t\t\t// the selection-snackbar pops back up\n\t\t\t\t// even though it is not a new selection just the old one\n\t\t\t\tif (event.button === 0) window.getSelection()?.empty();\n\t\t\t}}\n\t\t>\n\t\t\t{children}\n\t\t</span>\n\t);\n};\n","import React, { ReactNode } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { addCardSelectionSource } from \"../../actions\";\nimport { SingleOrigin } from \"../../../cards/model/origin\";\n\nexport const CardFieldMouseUp = ({ children, fieldOrigin }: { children: ReactNode; fieldOrigin?: SingleOrigin }) => {\n\tconst dispatch = useDispatch();\n\n\treturn (\n\t\t<span\n\t\t\tonMouseUp={() => {\n\t\t\t\tconst cardSelectionSourceAction = addCardSelectionSource(fieldOrigin);\n\t\t\t\tif (cardSelectionSourceAction) dispatch(cardSelectionSourceAction);\n\t\t\t}}\n\t\t>\n\t\t\t{children}\n\t\t</span>\n\t);\n};\n","import AddCircleOutlineIcon from \"@material-ui/icons/AddCircleOutline\";\nimport AddCircleOutlinedIcon from \"@material-ui/icons/AddCircleOutlined\";\nimport React, { useState } from \"react\";\nimport { IconButton } from \"@material-ui/core\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport text from \"../../../text\";\nimport { getTargetConfig, getSourceConfig } from \"../../selectors\";\nimport { addCardAppendSelectionTarget, resetSelectionTarget } from \"../../actions\";\nimport { SelectionExistingCardTargetConfig, CardFieldIdentifier } from \"../../model\";\nimport { CardField } from \"../../../cards/model/content\";\n\nexport const AppendButton = ({ cardField, cardID }: { cardField: CardField; cardID: string }) => {\n\tconst dispatch = useDispatch();\n\n\tconst sourceConfig = useSelector(getSourceConfig);\n\tconst goalConfig = useSelector(getTargetConfig);\n\t// outlined means this is the goal\n\tconst [outlined, setOutlined] = useState(false);\n\n\tconst cardIsTarget =\n\t\t!!goalConfig &&\n\t\t!!(goalConfig as CardFieldIdentifier).cardID &&\n\t\t(goalConfig as CardFieldIdentifier).cardID === cardID &&\n\t\tgoalConfig.cardField === cardField;\n\n\tconst isTarget = cardIsTarget && (goalConfig as SelectionExistingCardTargetConfig).updateType === \"APPEND\";\n\n\tif (isTarget) {\n\t\tif (!outlined) setOutlined(true);\n\t} else {\n\t\tif (outlined) setOutlined(false);\n\t}\n\t//TODO: test all variations of origin  (setting/copying) again (how to automate the test?)\n\n\treturn (\n\t\t<text.components.BiggerTooltip\n\t\t\ttitle={\n\t\t\t\tisTarget\n\t\t\t\t\t? text.constants.CardIsAppendTargetTooltip\n\t\t\t\t\t: !!sourceConfig\n\t\t\t\t\t? text.constants.AppendToCardTooltip\n\t\t\t\t\t: text.constants.ChoiceCardAsAppendTarget\n\t\t\t}\n\t\t\tenterDelay={text.constants.defaultEnterDelay}\n\t\t\tenterNextDelay={text.constants.defaultEnterNextDelay}\n\t\t>\n\t\t\t<span>\n\t\t\t\t<IconButton\n\t\t\t\t\ttype=\"button\"\n\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\tif (!outlined && !!!goalConfig) {\n\t\t\t\t\t\t\tdispatch(addCardAppendSelectionTarget(cardID, cardField));\n\t\t\t\t\t\t} else if (isTarget) {\n\t\t\t\t\t\t\tdispatch(resetSelectionTarget());\n\t\t\t\t\t\t}\n\t\t\t\t\t}}\n\t\t\t\t\t//TODO: global way to deactive field marking (also replace button)\n\t\t\t\t\tdisabled={(cardIsTarget && !isTarget) || (!!goalConfig && !cardIsTarget)}\n\t\t\t\t>\n\t\t\t\t\t{outlined ? (\n\t\t\t\t\t\t<AddCircleOutlinedIcon fontSize=\"small\"></AddCircleOutlinedIcon>\n\t\t\t\t\t) : (\n\t\t\t\t\t\t<AddCircleOutlineIcon fontSize=\"small\"></AddCircleOutlineIcon>\n\t\t\t\t\t)}\n\t\t\t\t</IconButton>\n\t\t\t</span>\n\t\t</text.components.BiggerTooltip>\n\t);\n};\n","import React, { RefObject, useCallback, useEffect, useRef, useState } from \"react\";\nimport Menu from \"@material-ui/core/Menu\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Divider, MenuItem } from \"@material-ui/core\";\nimport { addSelectionTarget } from \"../../actions\";\nimport { sourceConfigExists } from \"../../selectors\";\n\n// TODO: be able to directly fill empty field of newly created card\n// (only one, so that it does not take up so much space?)\n// e.g. created Q from selection and then want to do A -> need to do it with buttons now\n\n// TODO: be able to completly fill card in contextmenu (have card in contextmenu), then send with ok\n\n// TODO: be able to create empty card from context-menu, maybe if no selection, then it is an empty card?\n\n// the root div for the menu invisibly covers the whole screen\n// the actual div that is visible is this\nconst baseContextMenuSelector = \"div.MuiPaper-root\";\nconst contextMenuContainsTargetNode = (ref: RefObject<null | HTMLDivElement>, event: MouseEvent) => {\n\tconst target = event.target as Node;\n\tif (ref.current?.querySelector(baseContextMenuSelector)?.contains(target)) return true;\n\treturn false;\n};\n\nexport const ContextMenu = () => {\n\tconst [menuPosition, setMenuPosition] = useState<undefined | { top: number; left: number }>(undefined);\n\tconst ref = useRef(null);\n\n\tconst shouldClose = useCallback(\n\t\t(event: MouseEvent) => {\n\t\t\tconst clickOutSideOfMenu = !contextMenuContainsTargetNode(ref, event);\n\t\t\tif (clickOutSideOfMenu) {\n\t\t\t\tsetMenuPosition(undefined);\n\t\t\t}\n\t\t},\n\t\t[ref, setMenuPosition]\n\t);\n\tuseEffect(() => {\n\t\tdocument.addEventListener(\"mousedown\", shouldClose);\n\t\treturn () => {\n\t\t\tdocument.removeEventListener(\"mousedown\", shouldClose);\n\t\t};\n\t}, [shouldClose]);\n\n\tconst doesSourceConfigExists = useSelector(sourceConfigExists);\n\tconst shouldOpen = useCallback(\n\t\t(event: MouseEvent) => {\n\t\t\tif (!doesSourceConfigExists) return;\n\n\t\t\tevent.preventDefault();\n\n\t\t\tsetMenuPosition({ left: event.x, top: event.y });\n\t\t},\n\t\t[doesSourceConfigExists, setMenuPosition]\n\t);\n\tuseEffect(() => {\n\t\tdocument.addEventListener(\"contextmenu\", shouldOpen);\n\t\treturn () => {\n\t\t\tdocument.removeEventListener(\"contextmenu\", shouldOpen);\n\t\t};\n\t}, [shouldOpen]);\n\n\tconst openState = !!menuPosition;\n\n\tconst dispatch = useDispatch();\n\n\treturn (\n\t\t<Menu ref={ref} keepMounted open={openState} anchorReference=\"anchorPosition\" anchorPosition={menuPosition}>\n\t\t\t<MenuItem\n\t\t\t\tonClick={() => {\n\t\t\t\t\tdispatch(addSelectionTarget({ cardField: \"note\", updateType: \"REPLACE\" }));\n\t\t\t\t\tsetMenuPosition(undefined);\n\t\t\t\t}}\n\t\t\t>\n\t\t\t\tNew: Note\n\t\t\t</MenuItem>\n\n\t\t\t<Divider></Divider>\n\t\t\t<MenuItem\n\t\t\t\tonClick={() => {\n\t\t\t\t\tdispatch(addSelectionTarget({ cardField: \"q\", updateType: \"REPLACE\" }));\n\t\t\t\t\tsetMenuPosition(undefined);\n\t\t\t\t}}\n\t\t\t>\n\t\t\t\tNew: Q (Q-A)\n\t\t\t</MenuItem>\n\t\t\t<MenuItem\n\t\t\t\tonClick={() => {\n\t\t\t\t\tdispatch(addSelectionTarget({ cardField: \"a\", updateType: \"REPLACE\" }));\n\t\t\t\t\tsetMenuPosition(undefined);\n\t\t\t\t}}\n\t\t\t>\n\t\t\t\tNew: A (Q-A)\n\t\t\t</MenuItem>\n\t\t</Menu>\n\t);\n};\n\n//TODO: delete extracted str in source\n","import RestorePageIcon from \"@material-ui/icons/RestorePage\";\nimport RestorePageOutlinedIcon from \"@material-ui/icons/RestorePageOutlined\";\nimport React, { useState } from \"react\";\nimport { IconButton } from \"@material-ui/core\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport text from \"../../../text\";\nimport { getTargetConfig, getSourceConfig } from \"../../selectors\";\nimport { addCardReplaceSelectionTarget, resetSelectionTarget } from \"../../actions\";\nimport { SelectionExistingCardTargetConfig, CardFieldIdentifier } from \"../../model\";\nimport { CardField } from \"../../../cards/model/content\";\n\nexport const ReplaceButton = ({ cardField, cardID }: { cardField: CardField; cardID: string }) => {\n\tconst dispatch = useDispatch();\n\n\tconst sourceConfig = useSelector(getSourceConfig);\n\tconst goalConfig = useSelector(getTargetConfig);\n\t// outlined means this is the goal\n\tconst [outlined, setOutlined] = useState(false);\n\n\tconst cardIsTarget =\n\t\t!!goalConfig &&\n\t\t!!(goalConfig as CardFieldIdentifier).cardID &&\n\t\t(goalConfig as CardFieldIdentifier).cardID === cardID &&\n\t\tgoalConfig.cardField === cardField;\n\n\tconst isTarget = cardIsTarget && (goalConfig as SelectionExistingCardTargetConfig).updateType === \"REPLACE\";\n\n\tif (isTarget) {\n\t\tif (!outlined) setOutlined(true);\n\t} else {\n\t\tif (outlined) setOutlined(false);\n\t}\n\n\treturn (\n\t\t<text.components.BiggerTooltip\n\t\t\ttitle={\n\t\t\t\tisTarget\n\t\t\t\t\t? text.constants.CardIsReplaceTargetTooltip\n\t\t\t\t\t: !!sourceConfig\n\t\t\t\t\t? text.constants.ReplaceCardTooltip\n\t\t\t\t\t: text.constants.ChoiceCardAsReplaceTarget\n\t\t\t}\n\t\t\tenterDelay={text.constants.defaultEnterDelay}\n\t\t\tenterNextDelay={text.constants.defaultEnterNextDelay}\n\t\t>\n\t\t\t<span>\n\t\t\t\t<IconButton\n\t\t\t\t\ttype=\"button\"\n\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\tif (!outlined && !!!goalConfig) {\n\t\t\t\t\t\t\tdispatch(addCardReplaceSelectionTarget(cardID, cardField));\n\t\t\t\t\t\t} else if (isTarget) {\n\t\t\t\t\t\t\tdispatch(resetSelectionTarget());\n\t\t\t\t\t\t}\n\t\t\t\t\t}}\n\t\t\t\t\tdisabled={(cardIsTarget && !isTarget) || (!!goalConfig && !cardIsTarget)}\n\t\t\t\t>\n\t\t\t\t\t{outlined ? (\n\t\t\t\t\t\t<RestorePageIcon fontSize=\"small\"></RestorePageIcon>\n\t\t\t\t\t) : (\n\t\t\t\t\t\t<RestorePageOutlinedIcon fontSize=\"small\"></RestorePageOutlinedIcon>\n\t\t\t\t\t)}\n\t\t\t\t</IconButton>\n\t\t\t</span>\n\t\t</text.components.BiggerTooltip>\n\t);\n};\n","import * as actions from \"./actions\";\nimport slice from \"./slice\";\nimport * as selectors from \"./selectors\";\nimport * as components from \"./components\";\nimport * as services from \"./services\";\n\nconst { reducer, name } = slice;\n\nexport default { actions, name, components, reducer, selectors, services };\n","import React, { useState } from \"react\";\nimport { TextField, TextFieldProps } from \"@material-ui/core\";\nimport selection from \"../../../selection\";\nimport { SingleOrigin } from \"../../../cards/model/origin\";\n\n// TODO: when creating a new empty card, the \"typing focus\" should jump to Q of the card\n// same when creating a card from context-menu (e.g. q), jump \"typing focus\" to empty field (e.g. a)\n\n// TODO: foucs the card-field visually (green?) that you are working on right now\n\nexport const ClayCardField = ({\n\tstoreValue = \"\",\n\tsaveChanges,\n\tfieldOrigin,\n\tstyle,\n\t...rest\n}: {\n\tstoreValue?: string;\n\t// {} is an empty field of the QA-origin\n\tfieldOrigin?: SingleOrigin | {};\n\tsaveChanges: (value: string) => void;\n\tstyle: any;\n} & TextFieldProps) => {\n\tconst [state, setState] = useState({ storeValue, mutableValue: storeValue });\n\n\t// reset if new storeValue, otherwise keep user-mutated value\n\tif (state.storeValue !== storeValue) {\n\t\tsetState({ storeValue, mutableValue: storeValue });\n\t}\n\n\t// need the onChange-pattern, because we want to be able to pre-fill the field from the store\n\treturn (\n\t\t<selection.components.CardFieldMouseUp\n\t\t\tfieldOrigin={\n\t\t\t\tfieldOrigin && (fieldOrigin as SingleOrigin).spanIndexStart !== undefined\n\t\t\t\t\t? (fieldOrigin as SingleOrigin)\n\t\t\t\t\t: undefined\n\t\t\t}\n\t\t>\n\t\t\t<TextField\n\t\t\t\tInputProps={{ disableUnderline: true, style: { minWidth: \"400px\" } }}\n\t\t\t\tmultiline\n\t\t\t\tvariant=\"filled\"\n\t\t\t\tvalue={state.mutableValue}\n\t\t\t\tonChange={(event) => {\n\t\t\t\t\tconst submittedValue = (event.target as HTMLTextAreaElement).value;\n\t\t\t\t\tsetState({ ...state, mutableValue: submittedValue });\n\t\t\t\t}}\n\t\t\t\tonBlur={(event: any) => {\n\t\t\t\t\tsaveChanges(event.target.value);\n\t\t\t\t}}\n\t\t\t\tstyle={style}\n\t\t\t\t{...rest}\n\t\t\t></TextField>\n\t\t</selection.components.CardFieldMouseUp>\n\t);\n};\n","import FindInPageIcon from \"@material-ui/icons/FindInPage\";\nimport React from \"react\";\nimport { IconButton } from \"@material-ui/core\";\nimport { useDispatch } from \"react-redux\";\nimport { SingleOrigin } from \"../../../cards/model/origin\";\nimport text from \"../../../text\";\nimport { actions } from \"../../slice\";\n\nexport const JumpToOriginButton = ({ cardOrigin }: { cardOrigin: SingleOrigin }) => {\n\tconst dispatch = useDispatch();\n\treturn (\n\t\t<text.components.BiggerTooltip\n\t\t\ttitle={text.constants.jumpToOriginTooltip}\n\t\t\tenterDelay={text.constants.defaultEnterDelay}\n\t\t\tenterNextDelay={text.constants.defaultEnterNextDelay}\n\t\t>\n\t\t\t<IconButton\n\t\t\t\ttype=\"button\"\n\t\t\t\tonClick={() => {\n\t\t\t\t\tdispatch(actions.riverOriginRequest(cardOrigin));\n\t\t\t\t}}\n\t\t\t>\n\t\t\t\t<FindInPageIcon fontSize=\"small\"></FindInPageIcon>\n\t\t\t</IconButton>\n\t\t</text.components.BiggerTooltip>\n\t);\n};\n","import React from \"react\";\nimport cards from \"../../../cards\";\nimport { JumpToOriginButton } from \"./JumpToOriginButton\";\nimport { Paper, Grid } from \"@material-ui/core\";\nimport { CardConfig } from \"../../../cards/model/config\";\nimport { CardField } from \"../../../cards/model/content\";\nimport selection from \"../../../selection\";\nimport { SingleOrigin } from \"../../../cards/model/origin\";\n\nexport const ClayCardFieldButtons = ({ config, cardField }: { config: CardConfig; cardField: CardField }) => {\n\tconst origin: SingleOrigin | null = config.origin\n\t\t? cards.model.permutation.toFieldValue(cardField, config.origin)\n\t\t: null;\n\tconst originExists = origin?.page !== undefined;\n\treturn (\n\t\t<Paper variant=\"outlined\">\n\t\t\t<Grid container direction=\"row\">\n\t\t\t\t<Grid item>\n\t\t\t\t\t<selection.components.AppendButton\n\t\t\t\t\t\tcardID={config.cardID}\n\t\t\t\t\t\tcardField={cardField}\n\t\t\t\t\t></selection.components.AppendButton>\n\t\t\t\t</Grid>\n\n\t\t\t\t<Grid item>\n\t\t\t\t\t<selection.components.ReplaceButton\n\t\t\t\t\t\tcardID={config.cardID}\n\t\t\t\t\t\tcardField={cardField}\n\t\t\t\t\t></selection.components.ReplaceButton>\n\t\t\t\t</Grid>\n\n\t\t\t\t<Grid item>\n\t\t\t\t\t{originExists && <JumpToOriginButton cardOrigin={origin as SingleOrigin}></JumpToOriginButton>}\n\t\t\t\t</Grid>\n\t\t\t</Grid>\n\t\t</Paper>\n\t);\n};\n","import Grid from \"@material-ui/core/Grid\";\nimport React from \"react\";\nimport { ClayCardField } from \"./ClayCardField\";\nimport { QACardContent } from \"../../../cards/model/content\";\nimport { useDispatch } from \"react-redux\";\nimport cards from \"../../../cards\";\nimport { Card } from \"@material-ui/core\";\nimport text from \"../../../text\";\nimport { ClayCardFieldButtons } from \"./ClayCardFieldButtons\";\nimport { QAConfig } from \"../../../cards/model/config\";\n\n//TODO: use dark color pallet (theme?)\n\nexport const QACard = ({ config }: { config: QAConfig }) => {\n\tconst dispatch = useDispatch();\n\n\treturn (\n\t\t<Card variant=\"elevation\" elevation={5} style={{ padding: \"3px\" }}>\n\t\t\t<Grid container direction=\"row\" justify=\"space-between\">\n\t\t\t\t<Grid item>\n\t\t\t\t\t<Grid container direction=\"column\" spacing={1}>\n\t\t\t\t\t\t<Grid item>\n\t\t\t\t\t\t\t<Grid container direction=\"row\" spacing={1}>\n\t\t\t\t\t\t\t\t<Grid item>\n\t\t\t\t\t\t\t\t\t<ClayCardField\n\t\t\t\t\t\t\t\t\t\tsaveChanges={(value) => {\n\t\t\t\t\t\t\t\t\t\t\tdispatch(cards.actions.cardFieldReplace({ cardField: \"q\", cardConfig: config, newValue: value }));\n\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\tstoreValue={(config.content as QACardContent).q}\n\t\t\t\t\t\t\t\t\t\tlabel={text.constants.questionText}\n\t\t\t\t\t\t\t\t\t\tvariant=\"filled\"\n\t\t\t\t\t\t\t\t\t\tstyle={{ backgroundColor: \"#FFBF69\" }}\n\t\t\t\t\t\t\t\t\t\tInputLabelProps={{ style: { color: \"#000000\" } }}\n\t\t\t\t\t\t\t\t\t\tfieldOrigin={config.origin?.q}\n\t\t\t\t\t\t\t\t\t></ClayCardField>\n\t\t\t\t\t\t\t\t</Grid>\n\n\t\t\t\t\t\t\t\t<Grid item>\n\t\t\t\t\t\t\t\t\t<ClayCardFieldButtons cardField=\"q\" config={config}></ClayCardFieldButtons>\n\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t<Grid item>\n\t\t\t\t\t\t\t<Grid container direction=\"row\" spacing={1}>\n\t\t\t\t\t\t\t\t<Grid item>\n\t\t\t\t\t\t\t\t\t<ClayCardField\n\t\t\t\t\t\t\t\t\t\tsaveChanges={(value) => {\n\t\t\t\t\t\t\t\t\t\t\tdispatch(cards.actions.cardFieldReplace({ cardField: \"a\", cardConfig: config, newValue: value }));\n\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\tstoreValue={(config.content as QACardContent).a}\n\t\t\t\t\t\t\t\t\t\tlabel={text.constants.answerText}\n\t\t\t\t\t\t\t\t\t\tstyle={{ backgroundColor: \"#2EC4B6\" }}\n\t\t\t\t\t\t\t\t\t\tInputLabelProps={{ style: { color: \"#000000\" } }}\n\t\t\t\t\t\t\t\t\t\tfieldOrigin={config.origin?.a}\n\t\t\t\t\t\t\t\t\t></ClayCardField>\n\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t\t<Grid item>\n\t\t\t\t\t\t\t\t\t<ClayCardFieldButtons cardField=\"a\" config={config}></ClayCardFieldButtons>\n\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t</Grid>\n\t\t\t\t\t</Grid>\n\t\t\t\t</Grid>\n\n\t\t\t\t<Grid item>\n\t\t\t\t\t<cards.components.DeleteCardButton cardID={config.cardID}></cards.components.DeleteCardButton>\n\t\t\t\t</Grid>\n\t\t\t</Grid>\n\t\t</Card>\n\t);\n};\n","import React from \"react\";\nimport { ClayCardField } from \"./ClayCardField\";\nimport { useDispatch } from \"react-redux\";\nimport cards from \"../../../cards\";\nimport { Card, Grid } from \"@material-ui/core\";\nimport text from \"../../../text\";\nimport { NoteConfig } from \"../../../cards/model/config\";\nimport { ClayCardFieldButtons } from \"./ClayCardFieldButtons\";\n\nexport const NoteCard = ({ config }: { config: NoteConfig }) => {\n\tconst dispatch = useDispatch();\n\n\treturn (\n\t\t<Card variant=\"elevation\" elevation={5} style={{ padding: \"3px\" }}>\n\t\t\t<Grid container direction=\"row\" justify=\"space-between\">\n\t\t\t\t<Grid item>\n\t\t\t\t\t<Grid container direction=\"row\" spacing={1}>\n\t\t\t\t\t\t<Grid item>\n\t\t\t\t\t\t\t<ClayCardField\n\t\t\t\t\t\t\t\tsaveChanges={(value) => {\n\t\t\t\t\t\t\t\t\tdispatch(cards.actions.cardReplace({ ...config, content: value } as NoteConfig));\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\tstoreValue={config.content as string}\n\t\t\t\t\t\t\t\tlabel={text.constants.noteText}\n\t\t\t\t\t\t\t\tvariant=\"filled\"\n\t\t\t\t\t\t\t\tstyle={{ backgroundColor: \"#CBF3F0\" }}\n\t\t\t\t\t\t\t\tInputLabelProps={{ style: { color: \"#000000\" } }}\n\t\t\t\t\t\t\t\tfieldOrigin={config.origin}\n\t\t\t\t\t\t\t></ClayCardField>\n\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t<Grid item>\n\t\t\t\t\t\t\t<ClayCardFieldButtons cardField=\"note\" config={config}></ClayCardFieldButtons>\n\t\t\t\t\t\t</Grid>\n\t\t\t\t\t</Grid>\n\t\t\t\t</Grid>\n\n\t\t\t\t<Grid item>\n\t\t\t\t\t<cards.components.DeleteCardButton cardID={config.cardID}></cards.components.DeleteCardButton>\n\t\t\t\t</Grid>\n\t\t\t</Grid>\n\t\t</Card>\n\t);\n};\n","import React from \"react\";\nimport { CardConfig, NoteConfig, QAConfig } from \"../../../cards/model/config\";\nimport { QACard } from \"./QACard\";\nimport { NoteCard } from \"./NoteCard\";\n\nexport const ClayCard = ({ config }: { config: CardConfig }) => {\n\tswitch (config.type) {\n\t\tcase \"Note\":\n\t\t\treturn <NoteCard config={config as NoteConfig}></NoteCard>;\n\t\tcase \"Q-A\":\n\t\t\treturn <QACard config={config as QAConfig}></QACard>;\n\t}\n};\n","import Grid from \"@material-ui/core/Grid\";\nimport React from \"react\";\nimport { incrementer } from \"../../../../shared/utils\";\nimport { ClayCard } from \"../Cards/ClayCard\";\nimport { CardConfig } from \"../../../cards/model/config\";\nimport { Divider } from \"@material-ui/core\";\n\nconst GridItemDivider = () => (\n\t<Grid item>\n\t\t<Divider></Divider>\n\t</Grid>\n);\n\nexport const ClayCardGridItems = (cards: CardConfig[]) => {\n\tconst increment = incrementer();\n\n\treturn cards.reduce((prev, currentCard, index, arr) => {\n\t\tprev.push(\n\t\t\t<Grid item key={increment()}>\n\t\t\t\t<ClayCard config={currentCard} key={increment()}></ClayCard>\n\t\t\t</Grid>\n\t\t);\n\n\t\tconst notLastCard = index < arr.length - 1;\n\t\tif (notLastCard) prev.push(<GridItemDivider key={increment()}></GridItemDivider>);\n\t\treturn prev;\n\t}, [] as any[]);\n};\n","import cards from \"../../cards\";\nimport { CardConfig, NoteConfig, QAConfig } from \"../../cards/model/config\";\nimport { RiverContentState } from \"../model\";\nimport { combineFilterArr, Filter } from \"../../../shared/utils\";\n\n//TODO: make it not be accordion but closeable?\n//TODO: make local show / hide notes\nconst qaFilter: Filter = (config: CardConfig) => config.type === \"Q-A\";\nconst noteFilter: Filter = (config: CardConfig) => config.type === \"Note\";\nconst riverContentFilter: (contentStr: string) => Filter = (riverContentFilterStr: string) => (config: CardConfig) => {\n\tswitch (config.type) {\n\t\tcase \"Note\":\n\t\t\treturn cards.model.content.noteContentContainsStringOrEmpty(config as NoteConfig, riverContentFilterStr);\n\t\tcase \"Q-A\":\n\t\t\treturn cards.model.content.qaContentContainsStringOrEmpty(config as QAConfig, riverContentFilterStr);\n\t}\n};\n\nexport const filterCardConfigs = (\n\tinputCards: CardConfig[],\n\triverContentState: RiverContentState,\n\triverContentFilterStr: string\n): CardConfig[] => {\n\tif (riverContentState === \"NONE\") {\n\t\treturn [];\n\t}\n\n\tconst filters: Filter[] = [];\n\n\tif (riverContentState !== \"ALL\") {\n\t\tif (riverContentState === \"QAS\") {\n\t\t\tfilters.push(qaFilter);\n\t\t} else if (riverContentState === \"NOTES\") {\n\t\t\tfilters.push(noteFilter);\n\t\t}\n\t}\n\tif (riverContentFilterStr !== \"\") {\n\t\tfilters.push(riverContentFilter(riverContentFilterStr));\n\t}\n\n\treturn filters.length > 0 ? inputCards.filter(combineFilterArr(filters)) : inputCards;\n};\n","import LayersClear from \"@material-ui/icons/LayersClear\";\nimport React from \"react\";\nimport { IconButton } from \"@material-ui/core\";\nimport { useDispatch } from \"react-redux\";\nimport { actions } from \"../../slice\";\nimport text from \"../../../text\";\n\nexport const UnhideCardsButton = () => {\n\tconst dispatch = useDispatch();\n\treturn (\n\t\t<text.components.UnhideCardsTooltip>\n\t\t\t<IconButton\n\t\t\t\ttype=\"button\"\n\t\t\t\tonClick={() => {\n\t\t\t\t\tdispatch(actions.riverUnhide());\n\t\t\t\t}}\n\t\t\t>\n\t\t\t\t<LayersClear></LayersClear>\n\t\t\t</IconButton>\n\t\t</text.components.UnhideCardsTooltip>\n\t);\n};\n","import { Typography, Divider } from \"@material-ui/core\";\nimport Accordion from \"@material-ui/core/Accordion\";\nimport AccordionSummary from \"@material-ui/core/AccordionSummary\";\nimport AccordionDetails from \"@material-ui/core/AccordionDetails\";\nimport Grid from \"@material-ui/core/Grid\";\nimport React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { getRiverContentState, getRiverContentFilter, getRiverMakeUps } from \"../../selectors\";\nimport cards from \"../../../cards\";\nimport { ClayCardGridItems } from \"./ClayCardGridItems\";\nimport { filterCardConfigs } from \"../../services/filterCardConfigs\";\nimport { UnhideCardsButton } from \"./UnhideCardsButton\";\n\n//TODO: make card rivers individually hideable\n\n// TODO: make CardRiver sticky, so that you can move it without moving pdf\n// e.g. when the paragraph is at the bottom and the new card is at the beginning of the river\n\nexport const CardRiver = ({ riverID, materialHeight }: { riverID: string; materialHeight: number }) => {\n\tconst cardConfigs = useSelector(cards.selectors.getCards);\n\n\tconst riverMakeUp = useSelector(getRiverMakeUps)[riverID];\n\tconst riverCards = riverMakeUp ? riverMakeUp.cardIDs.map((id) => cardConfigs[id]) : [];\n\tconst riverContentState = useSelector(getRiverContentState);\n\t//TODO: use regex for upper/lower-case\n\tconst riverContentFilter = useSelector(getRiverContentFilter);\n\n\tconst filteredConfigs = filterCardConfigs(riverCards, riverContentState, riverContentFilter);\n\tconst gridItems = ClayCardGridItems(filteredConfigs);\n\n\t//TODO: if you start without any document and then load one, the current cards should be merged into that one\n\t//TODO: scroll-to-top for overflowing river\n\n\tconst containsFilteredCards = riverCards.length !== filteredConfigs.length;\n\n\treturn (\n\t\t<Accordion\n\t\t\texpanded\n\t\t\tdefaultExpanded={true}\n\t\t\tstyle={{\n\t\t\t\toverflow: \"auto\",\n\t\t\t\t// this was maxHeight but then if we hide the Material an empty river looks weird\n\t\t\t\t// because it is surrounded by white-space\n\t\t\t\theight: materialHeight,\n\t\t\t}}\n\t\t\televation={5}\n\t\t>\n\t\t\t<AccordionSummary>\n\t\t\t\t<Typography\n\t\t\t\t\tvariant=\"h6\"\n\t\t\t\t\talign=\"center\"\n\t\t\t\t\tstyle={{ MozUserSelect: \"none\", WebkitUserSelect: \"none\", msUserSelect: \"none\" }}\n\t\t\t\t>\n\t\t\t\t\t{riverID}\n\t\t\t\t</Typography>\n\t\t\t</AccordionSummary>\n\t\t\t<AccordionDetails>\n\t\t\t\t<Grid container direction=\"column\" spacing={2} justify=\"center\" alignItems=\"stretch\">\n\t\t\t\t\t<Grid item>\n\t\t\t\t\t\t<Grid container direction=\"row\">\n\t\t\t\t\t\t\t<Grid item>\n\t\t\t\t\t\t\t\t<cards.components.AddQAButton></cards.components.AddQAButton>\n\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t<Grid item>\n\t\t\t\t\t\t\t\t<cards.components.AddNoteButton></cards.components.AddNoteButton>\n\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t<Grid item>{containsFilteredCards && <Divider orientation=\"vertical\"></Divider>}</Grid>\n\t\t\t\t\t\t\t<Grid item>{containsFilteredCards && <UnhideCardsButton></UnhideCardsButton>}</Grid>\n\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t<Divider style={{ marginTop: \"4px\" }}></Divider>\n\t\t\t\t\t</Grid>\n\n\t\t\t\t\t<Grid item>\n\t\t\t\t\t\t<Grid container direction=\"column\" spacing={2} justify=\"center\" alignItems=\"stretch\">\n\t\t\t\t\t\t\t{gridItems}\n\t\t\t\t\t\t</Grid>\n\t\t\t\t\t</Grid>\n\t\t\t\t</Grid>\n\t\t\t</AccordionDetails>\n\t\t</Accordion>\n\t);\n};\n","import { useDispatch, useSelector } from \"react-redux\";\nimport { ReactNode } from \"react\";\nimport React from \"react\";\nimport { getActiveRiverMakeUpID } from \"../../selectors\";\nimport { actions } from \"../../slice\";\n\n//TODO: make reconciliation algorithm for origin when new PDF versions come out\n// (basically, just search the text, and if it is not in the same span, just move the span - expand page forward and backward then search there)\n\nexport const SwitchActiveRiver = ({ children, riverID }: { children: ReactNode; riverID: string }) => {\n\tconst dispatch = useDispatch();\n\tconst activeRiverID = useSelector(getActiveRiverMakeUpID);\n\n\treturn (\n\t\t<span\n\t\t\tonMouseEnter={() => {\n\t\t\t\tif (activeRiverID !== riverID) {\n\t\t\t\t\tdispatch(actions.riverActiveID(riverID));\n\t\t\t\t}\n\t\t\t}}\n\t\t>\n\t\t\t{children}\n\t\t</span>\n\t);\n};\n","import React from \"react\";\nimport { Button, FormControlLabel } from \"@material-ui/core\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { GreenCheckbox } from \"../../../../shared/GreenCheckbox\";\nimport { getRiverShowState } from \"../../selectors\";\nimport { actions } from \"../../slice\";\n\nexport const ShowRiverCheckbox = () => {\n\tconst dispatch = useDispatch();\n\tconst curRiverShowState = useSelector(getRiverShowState);\n\n\treturn (\n\t\t<Button\n\t\t\tstartIcon={\n\t\t\t\t<FormControlLabel\n\t\t\t\t\tlabel=\"River\"\n\t\t\t\t\tcontrol={<GreenCheckbox checked={curRiverShowState === \"SHOW\"} />}\n\t\t\t\t></FormControlLabel>\n\t\t\t}\n\t\t\tvariant=\"contained\"\n\t\t\tcolor=\"primary\"\n\t\t\tonClick={() => {\n\t\t\t\tdispatch(actions.riverShowState(curRiverShowState === \"SHOW\" ? \"HIDE\" : \"SHOW\"));\n\t\t\t}}\n\t\t></Button>\n\t);\n};\n","import * as constants from \"./constants\";\nimport * as components from \"./components\";\nimport slice from \"./slice\";\nimport * as selectors from \"./selectors\";\nimport * as model from \"./model\";\nimport * as services from \"./services\";\n\nconst { actions, reducer, name } = slice;\n\nexport default { constants, components, reducer, name, selectors, actions, model, services };\n","export const NAME = \"pdfData\";\nexport const MaterialMultiplier = 0.63;\n","import { createSelector } from \"reselect\";\nimport { PDFState } from \"./model\";\nimport { NAME } from \"./constants\";\n\nexport const getAll = (state: any): PDFState => state[NAME];\n\nexport const getPDF = createSelector(getAll, (state: PDFState) => state.pdf);\n\nexport const getPDFName = createSelector(getAll, (state) => state.pdfName);\n\nexport const getTotalPages = createSelector(getAll, (state: PDFState) => state.totalPages);\n\nexport const getCurrentPage = createSelector(getAll, (state: PDFState) => state.currentPage);\n\nexport const getPageControlData = createSelector(getTotalPages, getCurrentPage, (totalPages, currentPage) => {\n\treturn { currentPage, totalPages };\n});\n\nexport const getPDFShowStatus = createSelector(getAll, (state: PDFState) => state.pdfShowStatus);\n\nexport const getSpanOrigin = createSelector(getAll, (state) => state.spanOrigin);\n\nexport const getDocumentSearch = createSelector(getAll, (state) => state.documentSearch);\n","import { simpleReducer } from \"../../shared/utils\";\nimport { CaseReducer, createSlice, PayloadAction } from \"@reduxjs/toolkit\";\nimport { NAME } from \"./constants\";\nimport { SingleOrigin } from \"../cards/model/origin\";\nimport { PDFState, PDFStatus } from \"./model\";\n\nconst initialState: PDFState = {\n\tpdfShowStatus: \"SHOW\",\n\ttotalPages: 1000,\n\tcurrentPage: 1,\n\tspanOrigin: null,\n\tdocumentSearch: \"\",\n};\n\nconst totalPages: CaseReducer<PDFState, PayloadAction<number>> = simpleReducer(\"totalPages\");\nconst pdfShowStatus: CaseReducer<PDFState, PayloadAction<PDFStatus>> = simpleReducer(\"pdfShowStatus\");\nconst spanOrigin: CaseReducer<PDFState, PayloadAction<SingleOrigin | null>> = simpleReducer(\"spanOrigin\");\nconst documentSearch: CaseReducer<PDFState, PayloadAction<string>> = simpleReducer(\"documentSearch\");\n\nconst pdfUpload: CaseReducer<PDFState, PayloadAction<File>> = (state, { payload }) => {\n\treturn {\n\t\t...state,\n\t\tpdf: payload,\n\t\tpdfName: payload.name,\n\t\tcurrentPage: state.pdfName === payload.name ? state.currentPage : initialState.currentPage,\n\t};\n};\n\nconst pageUpdate: CaseReducer<PDFState, PayloadAction<number>> = simpleReducer(\"currentPage\");\n\nconst pageCorrections = {\n\tADD: (newPage: number, totalPages: number) => (newPage === totalPages + 1 ? 1 : newPage),\n\tREMOVE: (newPage: number, totalPages: number) => (newPage === 0 ? totalPages : newPage),\n};\n\nconst nextPage: CaseReducer<PDFState> = (state) => {\n\tconst page = pageCorrections[\"ADD\"](state.currentPage + 1, state.totalPages);\n\treturn { ...state, currentPage: page, scrollToPage: page };\n};\nconst previousPage: CaseReducer<PDFState> = (state) => {\n\tconst page = pageCorrections[\"REMOVE\"](state.currentPage - 1, state.totalPages);\n\treturn { ...state, currentPage: page, scrollToPage: page };\n};\n\ntype ExistingDocumentPayload = Pick<PDFState, \"pdfName\" | \"currentPage\" | \"totalPages\">;\nconst existingDocumentPayload: CaseReducer<PDFState, PayloadAction<ExistingDocumentPayload>> = (_, { payload }) => {\n\treturn {\n\t\t...initialState,\n\t\tpdf: undefined,\n\t\t...(payload as ExistingDocumentPayload),\n\t};\n};\n\nconst pdfSlice = createSlice({\n\tname: NAME,\n\tinitialState,\n\treducers: {\n\t\tpdfUpload,\n\t\ttotalPages,\n\t\tpdfShowStatus,\n\t\tspanOrigin,\n\t\tdocumentSearch,\n\t\tpageUpdate,\n\t\tnextPage,\n\t\tpreviousPage,\n\t\texistingDocumentPayload,\n\t},\n});\n\nexport const { actions } = pdfSlice;\n\nexport default pdfSlice;\n","import React, { useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Typography, TextField, Card, Grid } from \"@material-ui/core\";\nimport { getCurrentPage, getTotalPages } from \"../../selectors\";\nimport { actions } from \"../../slice\";\n\nconst nonDigitRegEx = /(\\D)/;\n\nexport const validatePageChoice = (possiblePage: string, totalPages: number) => {\n\tif (possiblePage === \"\" || possiblePage.trim().match(nonDigitRegEx) !== null) return false;\n\n\tconst asInt = parseInt(possiblePage);\n\tif (asInt < 1 || totalPages < asInt) return false;\n\n\treturn true;\n};\n\nconst PageNumberTextField = ({ totalPages }: { totalPages: number }) => {\n\tconst dispatch = useDispatch();\n\tconst currentPage = useSelector(getCurrentPage);\n\n\tconst [state, setState] = useState({\n\t\terror: false,\n\t\tvalue: currentPage?.toString(),\n\t\tuserInput: currentPage?.toString(),\n\t});\n\n\t// with this we can trigger a re-render onChange,\n\t// while making sure that if a new currentPage arrives, we reset the component\n\tif (state.value !== currentPage.toString()) {\n\t\tsetState({ error: false, value: currentPage.toString(), userInput: currentPage.toString() });\n\t}\n\n\treturn (\n\t\t<TextField\n\t\t\tinputProps={{\n\t\t\t\tstyle: {\n\t\t\t\t\tpadding: \"0px\",\n\t\t\t\t\t//h6 Typography style\n\t\t\t\t\tfontSize: \"1.25rem\",\n\t\t\t\t\tfontFamily: '\"Roboto\", \"Helvetica\", \"Arial\", sansSerif',\n\t\t\t\t\tfontWeight: 500,\n\t\t\t\t\tlineHeight: 1.6,\n\t\t\t\t\tletterSpacing: \"0.0075em\",\n\t\t\t\t},\n\t\t\t}}\n\t\t\ttype=\"text\"\n\t\t\tvariant=\"filled\"\n\t\t\tvalue={state.userInput}\n\t\t\tonKeyDown={(event) => {\n\t\t\t\tif (event.key === \"Enter\") {\n\t\t\t\t\tevent.preventDefault();\n\t\t\t\t\tconst submittedValue = (event.target as HTMLFormElement).value;\n\t\t\t\t\tif (!state.error) {\n\t\t\t\t\t\tdispatch(actions.pageUpdate(parseInt(submittedValue)));\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}}\n\t\t\tonChange={(event) => {\n\t\t\t\tconst submittedValue = (event.target as HTMLTextAreaElement).value;\n\t\t\t\tif (validatePageChoice(submittedValue, totalPages as number)) {\n\t\t\t\t\tsetState({ ...state, error: false, userInput: submittedValue });\n\t\t\t\t} else {\n\t\t\t\t\tsetState({ ...state, error: true, userInput: submittedValue });\n\t\t\t\t}\n\t\t\t}}\n\t\t\terror={state.error}\n\t\t/>\n\t);\n};\n\nconst TotalPagesIndicator = ({ totalPages }: { totalPages: number }) => (\n\t<Typography variant=\"h6\">of {totalPages}</Typography>\n);\n\nexport const PageChooser = () => {\n\tconst totalPages = useSelector(getTotalPages);\n\n\treturn (\n\t\t<Card variant=\"outlined\">\n\t\t\t<Grid item>\n\t\t\t\t<Grid container direction=\"row\" alignItems=\"center\" justify=\"space-between\">\n\t\t\t\t\t<Grid item style={{ width: \"37%\" }}>\n\t\t\t\t\t\t<PageNumberTextField totalPages={totalPages}></PageNumberTextField>\n\t\t\t\t\t</Grid>\n\n\t\t\t\t\t<Grid item style={{ width: \"61%\" }}>\n\t\t\t\t\t\t<TotalPagesIndicator totalPages={totalPages}></TotalPagesIndicator>\n\t\t\t\t\t</Grid>\n\t\t\t\t</Grid>\n\t\t\t</Grid>\n\t\t</Card>\n\t);\n};\n","import { ReactNode, KeyboardEvent, useRef, MutableRefObject } from \"react\";\nimport React from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { KeyActionMap, keyEventDispatcherCreator } from \"../../../../shared/utils\";\nimport { actions } from \"../../slice\";\n\n// note to self: prefer to expose components and not implementation details (actions etc.)\n\nconst pageControlKeyMap: KeyActionMap = {\n\tArrowLeft: actions.previousPage(),\n\tArrowRight: actions.nextPage(),\n};\nconst pageControlDispatcher = keyEventDispatcherCreator(pageControlKeyMap);\n\nexport const PageKeyboardControl = ({ children }: { children: ReactNode }) => {\n\tconst dispatch = useDispatch();\n\tconst ref: MutableRefObject<null | HTMLInputElement> = useRef(null);\n\n\treturn (\n\t\t<span\n\t\t\tref={ref}\n\t\t\tonKeyDown={(event: KeyboardEvent<HTMLSpanElement>) => {\n\t\t\t\tpageControlDispatcher(event, dispatch);\n\t\t\t}}\n\t\t\ttabIndex={0}\n\t\t>\n\t\t\t{children}\n\t\t</span>\n\t);\n};\n","import \"./PDFDocument.css\";\nimport \"react-pdf/dist/esm/Page/AnnotationLayer.css\";\nimport React, { useState, useRef, FunctionComponent, RefObject } from \"react\";\nimport { pdfjs, Document } from \"react-pdf\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport text from \"../../../text\";\nimport { cachePageDimensions } from \"./cachePageDimensions\";\nimport { getPDF } from \"../../selectors\";\nimport { actions } from \"../../slice\";\npdfjs.GlobalWorkerOptions.workerSrc = `//cdnjs.cloudflare.com/ajax/libs/pdf.js/${pdfjs.version}/pdf.worker.js`;\n\n//TODO: make the worker file permanent, sometimes cloudflare is down or internet might go down when reloading\n\nexport type CachedPageDimensions = Map<number, [number, number]>;\n\nconst options = {\n\tcMapUrl: \"cmaps/\",\n\tcMapPacked: true,\n};\n\ntype PDFProxyRef = RefObject<pdfjs.PDFDocumentProxy | undefined>;\n\nexport type PDFDocumentChild = FunctionComponent<{\n\tpdfProxyRef: PDFProxyRef;\n\tcachedPageDimensions: CachedPageDimensions;\n}>;\n\nexport const PDFDocument = ({ ChildComponent }: { ChildComponent: PDFDocumentChild }) => {\n\tconst pdf = useSelector(getPDF);\n\n\tconst [cachedPageDimensions, setPageDimensions] = useState<CachedPageDimensions | undefined>();\n\n\tconst pdfProxyRef = useRef<pdfjs.PDFDocumentProxy | undefined>();\n\n\tconst dispatch = useDispatch();\n\n\t// used for abborting pageDimension-cache-collection\n\tconst pdfName = pdf?.name;\n\tconst pdfNameRef = useRef(pdfName);\n\tif (pdfNameRef.current !== pdfName) {\n\t\tpdfNameRef.current = pdfName;\n\t}\n\n\treturn (\n\t\t<Document\n\t\t\tloading={text.constants.loadingMaterialText}\n\t\t\tnoData={text.constants.noMaterialText}\n\t\t\toptions={options}\n\t\t\tfile={pdf}\n\t\t\trenderMode=\"canvas\"\n\t\t\tonLoadSuccess={(pdfProxy) => {\n\t\t\t\tdispatch(actions.totalPages(pdfProxy.numPages));\n\t\t\t\tif (pdf) cachePageDimensions(pdfProxy, pdfName as string, pdfNameRef, setPageDimensions);\n\t\t\t\tpdfProxyRef.current = pdfProxy;\n\t\t\t}}\n\t\t\tonItemClick={({ pageNumber }) => {\n\t\t\t\tdispatch(actions.pageUpdate(parseInt(pageNumber)));\n\t\t\t}}\n\t\t>\n\t\t\t{cachedPageDimensions && pdfNameRef.current === pdfName && (\n\t\t\t\t<ChildComponent pdfProxyRef={pdfProxyRef} cachedPageDimensions={cachedPageDimensions}></ChildComponent>\n\t\t\t)}\n\t\t</Document>\n\t);\n};\n","import { RefObject } from \"react\";\nimport { pdfjs } from \"react-pdf\";\nimport { CachedPageDimensions } from \"./PDFDocument\";\n\n//TODO: use more robust method than pdfName to differentiate pdfs in this abort\n//TODO: test if this abort actually works? once the function was entered,\n// is it guaranteed that it will finish before other changes?\nexport const cachePageDimensions = (\n\tpdfProxy: pdfjs.PDFDocumentProxy,\n\tpdfName: string,\n\tpdfNameRef: RefObject<string | null | undefined>,\n\tsetPageDimensions: (dims: CachedPageDimensions) => void\n) => {\n\tconst promises = Array.from({ length: pdfProxy.numPages }, (_, i) => i + 1).map((pageNumber) =>\n\t\tpdfProxy.getPage(pageNumber)\n\t);\n\n\t// Assuming all pages may have different heights. Otherwise we can just\n\t// load the first page and use its height for determining all the row\n\t// heights.\n\tPromise.all((promises as unknown) as Promise<any>[]).then((pages: pdfjs.PDFPageProxy[]) => {\n\t\t// a different pdf was loaded while these promises where executing\n\t\tif (pdfName !== pdfNameRef.current) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst pageDimensions = new Map();\n\n\t\tconst scale = 1;\n\t\tfor (const page of pages) {\n\t\t\tconst w = page.view[2] * scale;\n\t\t\tconst h = page.view[3] * scale;\n\n\t\t\t// react-pdf 4.0.5 types are incorrect, _pageIndex is correct and not just pageIndex\n\t\t\tpageDimensions.set(((page as unknown) as { _pageIndex: number })._pageIndex + 1, [w, h]);\n\t\t}\n\n\t\tsetPageDimensions(pageDimensions);\n\t});\n};\n","import React, { MutableRefObject } from \"react\";\nimport { Page } from \"react-pdf\";\nimport { TextLayerItemInternal } from \"react-pdf/dist/Page\";\nimport { useSelector } from \"react-redux\";\nimport { SingleOrigin } from \"../../../cards/model/origin\";\nimport selection from \"../../../selection\";\nimport { getDocumentSearch, getSpanOrigin } from \"../../selectors\";\nimport { MaterialMultiplier } from \"../../constants\";\nimport { PageKeyboardControl } from \"../Navigation/PageKeyboardControl\";\n\n// TODO: zoom, too much zoom right now?\n// \"I dont know what I am searching and need an overview\"\n\ntype Renderer = (\n\ttextItem: TextLayerItemInternal | (TextLayerItemInternal & { str: string | JSX.Element })\n) => JSX.Element | string;\n\nconst highlightOrigin = (textItem: TextLayerItemInternal, origin: SingleOrigin) => {\n\tconst itemIndex = textItem.itemIndex;\n\tif (!(itemIndex >= origin.spanIndexStart && itemIndex <= origin.spanIndexEnd)) {\n\t\treturn textItem.str;\n\t}\n\n\t// does not really make sense to make more fine-grained mark if the TextLayer is off anyways\n\treturn <mark style={{ backgroundColor: \"red\" }}>{textItem.str}</mark>;\n};\n\nconst makeOriginHighlighter = (origin: SingleOrigin) => {\n\treturn (textItem: TextLayerItemInternal) => {\n\t\treturn highlightOrigin(textItem, origin);\n\t};\n};\n\nexport const backgroundStyle = { backgroundColor: \"blue\" };\n\n// TODO: this could be made clearer and cleaner\nexport const highlightPattern = (text: string, pattern: string) => {\n\t// the idea is that:\n\t// no matches are most likely\n\t// 1 or 2 are second most likely\n\t// after that the pattern must be really small,\n\t// so then we can look at the whole string\n\t// generally verbosity is used to guarantee speed\n\t// potentially 400+ items need to be processed for every search, so no room for slack\n\n\tconst textLength = text.length;\n\tconst patternLength = pattern.length;\n\t// most of the TextItems should not have a highlight, so short-circuit is advised\n\tif (pattern === \"\" || text === \"\" || patternLength > textLength) return text;\n\n\t// fastest match seems to be indexOf: https://jsben.ch/RVYk7\n\tconst index = text.indexOf(pattern);\n\tif (index === -1) return text;\n\n\t// react says to use unqiue elements with keys, I choose not to for speed reasons\n\tconst markedPattern = <mark style={backgroundStyle}>{pattern}</mark>;\n\tconst slice1 = index > 0 ? text.slice(0, index) : false;\n\n\tlet result = [];\n\tif (slice1) result.push(slice1);\n\tresult.push(markedPattern);\n\n\tconst secondIndex = text.indexOf(pattern, index + patternLength);\n\tif (secondIndex === -1) {\n\t\tconst slice2Start = index + patternLength;\n\t\tconst slice2 = slice2Start < textLength ? text.slice(slice2Start) : false;\n\t\tif (slice2) result.push(slice2);\n\t\treturn result;\n\t}\n\n\tconst slice2Start = index + patternLength;\n\tconst slice2 = slice2Start !== secondIndex ? text.slice(slice2Start, secondIndex) : false;\n\tif (slice2) result.push(slice2);\n\tresult.push(markedPattern);\n\n\tconst thirdIndex = text.indexOf(pattern, secondIndex + patternLength);\n\tif (thirdIndex === -1) {\n\t\tconst slice3Start = secondIndex + patternLength;\n\t\tconst slice3 = slice3Start < textLength ? text.slice(slice3Start) : false;\n\t\tif (slice3) result.push(slice2);\n\t\treturn result;\n\t}\n\n\tconst slice3Start = secondIndex + patternLength;\n\tconst slice3 = slice3Start < textLength ? text.slice(slice3Start, thirdIndex) : false;\n\tif (slice3) result.push(slice3);\n\tresult.push(markedPattern);\n\n\tif (thirdIndex + patternLength === textLength) {\n\t\treturn result;\n\t}\n\n\tconst stringRest = text.slice(thirdIndex + patternLength);\n\tif (stringRest === pattern) {\n\t\tresult.push(markedPattern);\n\t\treturn result;\n\t}\n\n\tconst splitText = stringRest.split(pattern);\n\tif (splitText.length <= 1) {\n\t\tresult.push(stringRest);\n\t\treturn result;\n\t}\n\n\tfor (let index = 0; index < splitText.length; index++) {\n\t\tconst spliter = splitText[index];\n\t\tif (index === 0 && spliter === \"\") {\n\t\t\tresult.push(markedPattern);\n\t\t\tcontinue;\n\t\t}\n\n\t\tif (index === splitText.length - 1 && spliter !== \"\") {\n\t\t\tresult.push(spliter);\n\t\t\tcontinue;\n\t\t}\n\n\t\tif (spliter !== \"\") result.push(spliter);\n\t\tresult.push(markedPattern);\n\t}\n\n\treturn result as any;\n};\n\nfunction makeTextRenderer(searchText: string) {\n\treturn function textRenderer(textItem: TextLayerItemInternal) {\n\t\treturn highlightPattern(textItem.str, searchText);\n\t};\n}\n\nconst combineRenderers = (searchRenderer?: Renderer, originRenderer?: Renderer) => {\n\tif (!searchRenderer) return originRenderer;\n\tif (!originRenderer) return searchRenderer;\n\treturn (textItem: TextLayerItemInternal) => originRenderer({ ...textItem, str: searchRenderer(textItem) as any });\n};\n\n//TODO: when switching from a small page to big, the ControlBar does not size back\n\nexport const PDFPage = ({\n\tpageNumber,\n\tpageRef,\n\tmaterialWidth,\n}: {\n\tpageNumber: number;\n\tpageRef: MutableRefObject<null | HTMLDivElement>;\n\tmaterialWidth: number;\n}) => {\n\t//assumption is that the list checks for width before rendering\n\tconst documentSearch = useSelector(getDocumentSearch);\n\tconst spanOrigin = useSelector(getSpanOrigin);\n\n\tconst originHighlighter =\n\t\tspanOrigin && spanOrigin.page === pageNumber ? makeOriginHighlighter(spanOrigin) : undefined;\n\tconst searchRenderer = documentSearch !== \"\" ? makeTextRenderer(documentSearch) : undefined;\n\n\tconst textRenderer = combineRenderers(searchRenderer, originHighlighter);\n\n\treturn (\n\t\t<div style={{ overflow: \"auto\" }}>\n\t\t\t<selection.components.MaterialMouseUp page={pageNumber}>\n\t\t\t\t<PageKeyboardControl>\n\t\t\t\t\t<Page\n\t\t\t\t\t\tinputRef={(instance) => {\n\t\t\t\t\t\t\tpageRef.current = instance;\n\t\t\t\t\t\t}}\n\t\t\t\t\t\tpageNumber={pageNumber}\n\t\t\t\t\t\twidth={materialWidth * MaterialMultiplier}\n\t\t\t\t\t\tcustomTextRenderer={textRenderer as any}\n\t\t\t\t\t\trenderAnnotationLayer={false}\n\t\t\t\t\t/>\n\t\t\t\t</PageKeyboardControl>\n\t\t\t</selection.components.MaterialMouseUp>\n\t\t</div>\n\t);\n};\n","export type DisplayStatus = \"SHOW\" | \"HIDE\";\n\nexport enum View {\n\tRiverMaterial,\n\tRiverExplorer,\n\tCardExplorer,\n}\n\nexport type DisplayState = {\n\twindowMeasurements: { width: number; height: number } | null;\n\ttopOffset: number;\n\tcurrentView: View;\n\tlistIndex: number;\n\tscrollToIndex: boolean;\n};\n","import React from \"react\";\nimport { Button, FormControlLabel } from \"@material-ui/core\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { GreenCheckbox } from \"../../../shared/GreenCheckbox\";\nimport { getPDFShowStatus } from \"../selectors\";\nimport { actions } from \"../slice\";\n\nexport const ShowMaterialCheckbox = () => {\n\tconst dispatch = useDispatch();\n\tconst pdfShowState = useSelector(getPDFShowStatus);\n\n\treturn (\n\t\t<Button\n\t\t\tstartIcon={\n\t\t\t\t<FormControlLabel\n\t\t\t\t\tlabel=\"Material\"\n\t\t\t\t\tcontrol={<GreenCheckbox checked={pdfShowState === \"SHOW\"} />}\n\t\t\t\t></FormControlLabel>\n\t\t\t}\n\t\t\tvariant=\"contained\"\n\t\t\tcolor=\"primary\"\n\t\t\tonClick={() => {\n\t\t\t\tdispatch(actions.pdfShowStatus(pdfShowState === \"SHOW\" ? \"HIDE\" : \"SHOW\"));\n\t\t\t}}\n\t\t></Button>\n\t);\n};\n","import React from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { IconButton, Card, Grid, Divider } from \"@material-ui/core\";\nimport ArrowForwardIosIcon from \"@material-ui/icons/ArrowForwardIos\";\nimport ArrowBackIosIcon from \"@material-ui/icons/ArrowBackIos\";\nimport { actions } from \"../../slice\";\nimport text from \"../../../text\";\n\nconst PreviousButton = () => {\n\tconst dispatch = useDispatch();\n\n\treturn (\n\t\t<text.components.BiggerTooltip\n\t\t\ttitle={text.constants.previousPageTooltip}\n\t\t\tenterDelay={text.constants.defaultEnterDelay}\n\t\t\tenterNextDelay={text.constants.defaultEnterNextDelay}\n\t\t>\n\t\t\t<IconButton\n\t\t\t\ttype=\"button\"\n\t\t\t\tonClick={() => {\n\t\t\t\t\tdispatch(actions.previousPage());\n\t\t\t\t}}\n\t\t\t>\n\t\t\t\t<ArrowBackIosIcon></ArrowBackIosIcon>\n\t\t\t</IconButton>\n\t\t</text.components.BiggerTooltip>\n\t);\n};\n\nconst NextButton = () => {\n\tconst dispatch = useDispatch();\n\treturn (\n\t\t<text.components.BiggerTooltip\n\t\t\ttitle={text.constants.nextPageTooltip}\n\t\t\tenterDelay={text.constants.defaultEnterDelay}\n\t\t\tenterNextDelay={text.constants.defaultEnterNextDelay}\n\t\t>\n\t\t\t<IconButton\n\t\t\t\ttype=\"button\"\n\t\t\t\tonClick={() => {\n\t\t\t\t\tdispatch(actions.nextPage());\n\t\t\t\t}}\n\t\t\t>\n\t\t\t\t<ArrowForwardIosIcon></ArrowForwardIosIcon>\n\t\t\t</IconButton>\n\t\t</text.components.BiggerTooltip>\n\t);\n};\n\nexport const PageNavigation = () => {\n\treturn (\n\t\t<Card variant=\"outlined\">\n\t\t\t<Grid container direction=\"row\">\n\t\t\t\t<Grid item>\n\t\t\t\t\t<PreviousButton></PreviousButton>\n\t\t\t\t</Grid>\n\t\t\t\t<Grid item>\n\t\t\t\t\t<Divider orientation=\"vertical\"></Divider>\n\t\t\t\t</Grid>\n\t\t\t\t<Grid item>\n\t\t\t\t\t<NextButton></NextButton>\n\t\t\t\t</Grid>\n\t\t\t</Grid>\n\t\t</Card>\n\t);\n};\n","import * as components from \"./components\";\nimport slice from \"./slice\";\nimport * as selectors from \"./selectors\";\nimport * as constants from \"./constants\";\n\nconst { reducer, actions, name } = slice;\n\nexport default { actions, components, name, reducer, selectors, constants };\n","import { createSelector } from \"reselect\";\nimport { NAME } from \"./constants\";\nimport { DocumentDB, DocumentData } from \"./model\";\nimport river from \"../river\";\nimport cards from \"../cards\";\nimport pdf from \"../pdf\";\n\nexport const getAll = (state: any): DocumentDB => state[NAME];\n\nexport const getDocumentNames = createSelector(getAll, (db) => Object.keys(db));\n\nexport const getDocumentDataSets = createSelector(getAll, (db) => Object.values(db));\n\nexport const collectCurrentDBData: (state: any) => DocumentData | null = createSelector(\n\tpdf.selectors.getPDFName,\n\tpdf.selectors.getTotalPages,\n\tpdf.selectors.getCurrentPage,\n\triver.selectors.getRiverMakeUps,\n\tcards.selectors.getCards,\n\tcards.selectors.getLastCardIDNumber,\n\t(pdfName, totalPages, currentPage, riverMakeUps, cards, lastCardIDNumber) => {\n\t\treturn {\n\t\t\tname: pdfName as string,\n\t\t\ttotalPages,\n\t\t\tcurrentPage,\n\t\t\triverMakeUps,\n\t\t\tcards,\n\t\t\tlastCardIDNumber,\n\t\t};\n\t}\n);\n","import { CaseReducer, createSlice, PayloadAction } from \"@reduxjs/toolkit\";\nimport { DocumentData, DocumentDB } from \"./model\";\nimport { NAME } from \"./constants\";\nimport { initialStateArr } from \"./research\";\n\n//TODO: PDF-data gets saved with name, better use some hash or something (rename of document file is likely) -> use size or last-modified or smth like that instead of name\n\nconst storeInDocumentDB: CaseReducer<DocumentDB, PayloadAction<DocumentData>> = (state, { payload }) => {\n\treturn { ...state, [payload.name]: payload };\n};\n\nconst updateDocumentDB: CaseReducer<DocumentDB, PayloadAction<DocumentData[]>> = (state, { payload }) => {\n\treturn {\n\t\t...state,\n\t\t...payload.reduce((prev, dbData) => {\n\t\t\tprev[dbData.name] = dbData;\n\t\t\treturn prev;\n\t\t}, {} as DocumentDB),\n\t};\n};\n\nconst removeFromDocumentDB: CaseReducer<DocumentDB, PayloadAction<string>> = (state, { payload }) => {\n\treturn Object.fromEntries(Object.entries(state).filter((arr) => arr[0] !== payload));\n};\n\nconst initialState: DocumentDB = updateDocumentDB(\n\t{},\n\t{ payload: initialStateArr, type: updateDocumentDB.toString() }\n) as DocumentDB;\n\nconst dbSlice = createSlice({\n\tname: NAME,\n\tinitialState,\n\treducers: {\n\t\tstoreInDocumentDB,\n\t\tremoveFromDocumentDB,\n\t\tupdateDocumentDB,\n\t},\n});\n\nexport const { actions } = dbSlice;\n\nexport default dbSlice;\n","import { DocumentData } from \"./model\";\n\nexport const initialStateArr: DocumentData[] = [\n\t{\n\t\tname: \"0_Krokodile.pdf\",\n\t\ttotalPages: 15,\n\t\tcurrentPage: 1,\n\t\triverMakeUps: {},\n\t\tcards: {},\n\t\tlastCardIDNumber: 0,\n\t},\n\t{\n\t\tname: \"1_Fakten.pdf\",\n\t\ttotalPages: 1,\n\t\tcurrentPage: 1,\n\t\triverMakeUps: {},\n\t\tcards: {},\n\t\tlastCardIDNumber: 0,\n\t},\n\t{\n\t\tname: \"2_Atom.pdf\",\n\t\ttotalPages: 1,\n\t\tcurrentPage: 1,\n\t\triverMakeUps: { \"CardRiver 1\": { riverID: \"CardRiver 1\", cardIDs: [\"1\"] } },\n\t\tcards: {\n\t\t\t\"1\": {\n\t\t\t\ttype: \"Q-A\",\n\t\t\t\tcontent: {\n\t\t\t\t\tq: \"Was ist DNS?\",\n\t\t\t\t\ta:\n\t\t\t\t\t\t\"DNS ist eine Nukleinsäure, die sich aus einer Kette von vielen Nukleotiden zusammensetzt.\\n\\nAls Nukleotide werden unter anderem die Bausteine von Nukleinsäuren wie der DNS bezeichnet. Ein Nukleotid setzt sich aus einem Basen-, einem Zucker- und einem Phosphatanteil zusammen.\\n\\nNukleinsäuren sind aus einzelnen Bausteinen, den Nukleotiden, aufgebaute Makromoleküle, die bei allen Organismen die genetische Information enthalten.\",\n\t\t\t\t},\n\t\t\t\tcardID: \"1\",\n\t\t\t},\n\t\t},\n\t\tlastCardIDNumber: 2,\n\t},\n\t{\n\t\tname: \"3_Platon.pdf\",\n\t\ttotalPages: 45,\n\t\tcurrentPage: 3,\n\t\triverMakeUps: {\n\t\t\t\"CardRiver 3\": { riverID: \"CardRiver 3\", cardIDs: [\"1\", \"3\"] },\n\t\t\t\"CardRiver 4\": { riverID: \"CardRiver 4\", cardIDs: [\"5\", \"7\"] },\n\t\t\t\"CardRiver 7\": { riverID: \"CardRiver 7\", cardIDs: [\"9\", \"11\"] },\n\t\t\t\"CardRiver 9\": { riverID: \"CardRiver 9\", cardIDs: [\"13\", \"15\"] },\n\t\t\t\"CardRiver 10\": { riverID: \"CardRiver 10\", cardIDs: [\"17\", \"19\"] },\n\t\t},\n\t\tcards: {\n\t\t\t\"1\": {\n\t\t\t\ttype: \"Q-A\",\n\t\t\t\tcontent: {\n\t\t\t\t\tq: \"Worauf stützte Ariston seinen Glauben, dass er der Nachkomme eines mythischen Königs von Athen war?\",\n\t\t\t\t\ta: \"Sein Vorfahre Aristokles hatte bereits das höchste Staatsamt bekleidet.\",\n\t\t\t\t},\n\t\t\t\torigin: {\n\t\t\t\t\tq: { spanIndexStart: 9, spanIndexEnd: 10, page: 3 },\n\t\t\t\t\ta: { spanIndexStart: 19, spanIndexEnd: 19, page: 3 },\n\t\t\t\t},\n\t\t\t\tcardID: \"1\",\n\t\t\t},\n\t\t\t\"3\": { type: \"Note\", content: \"Wer ist Ariston?\", cardID: \"3\" },\n\t\t\t\"5\": {\n\t\t\t\ttype: \"Q-A\",\n\t\t\t\tcontent: {\n\t\t\t\t\tq: \"Was erhoffte sich Platon von Archytas?\",\n\t\t\t\t\ta: \"Von  Archytas  erhoffte  er  sich  vor  allem mathematische Erkenntnisse.\",\n\t\t\t\t},\n\t\t\t\torigin: {\n\t\t\t\t\tq: { spanIndexStart: 47, spanIndexEnd: 47, page: 4 },\n\t\t\t\t\ta: { spanIndexStart: 50, spanIndexEnd: 51, page: 4 },\n\t\t\t\t},\n\t\t\t\tcardID: \"5\",\n\t\t\t},\n\t\t\t\"7\": { type: \"Note\", content: \"Wer ist Archytas?\", cardID: \"7\" },\n\t\t\t\"9\": {\n\t\t\t\ttype: \"Q-A\",\n\t\t\t\tcontent: {\n\t\t\t\t\tq: \"Warum ist eine absolute Datierung der Werke Platons schwierig?\",\n\t\t\t\t\ta:\n\t\t\t\t\t\t\"Sie enthalten kaum Hinweise auf historische Ereignisse ihrer Abfassungszeit und die Handlung der Dialoge ist in der Regel in die Lebenszeit des Sokrates gesetzt, also vor dem Beginn von Platons schriftstellerischer Tätigkeit.\",\n\t\t\t\t},\n\t\t\t\torigin: {\n\t\t\t\t\tq: { spanIndexStart: 61, spanIndexEnd: 61, page: 7 },\n\t\t\t\t\ta: { spanIndexStart: 61, spanIndexEnd: 64, page: 7 },\n\t\t\t\t},\n\t\t\t\tcardID: \"9\",\n\t\t\t},\n\t\t\t\"11\": {\n\t\t\t\ttype: \"Note\",\n\t\t\t\tcontent:\n\t\t\t\t\t\"Dank was kann in manchen Fällen zumindest der Zeitraum der Entstehung von Platons Werken eingegrenzt werden?\",\n\t\t\t\tcardID: \"11\",\n\t\t\t},\n\t\t\t\"13\": {\n\t\t\t\ttype: \"Q-A\",\n\t\t\t\tcontent: {\n\t\t\t\t\tq: \"Wer steht am meisten im Zentrum von Platons Dialogen?\",\n\t\t\t\t\ta:\n\t\t\t\t\t\t\"Der aus Platons Perspektive gezeichnete Sokrates, in dessen Gestalt sich historische und idealisierte Züge mischen.\",\n\t\t\t\t},\n\t\t\t\torigin: {\n\t\t\t\t\tq: { spanIndexStart: 25, spanIndexEnd: 25, page: 9 },\n\t\t\t\t\ta: { spanIndexStart: 24, spanIndexEnd: 24, page: 9 },\n\t\t\t\t},\n\t\t\t\tcardID: \"13\",\n\t\t\t},\n\t\t\t\"15\": {\n\t\t\t\ttype: \"Note\",\n\t\t\t\tcontent: \"Was ist die Folge davon, dass Platon seine Dialoge meist aus der Perspektive von Sokrates schrieb?\",\n\t\t\t\tcardID: \"15\",\n\t\t\t},\n\t\t\t\"17\": {\n\t\t\t\ttype: \"Q-A\",\n\t\t\t\tcontent: {\n\t\t\t\t\tq: \"Was ist die Grundmethode, die Sokrates in Platons Dialogen anwendet?\",\n\t\t\t\t\ta:\n\t\t\t\t\t\t\"Die Widerlegung der ursprünglichen Ansichten seiner Gesprächspartner, die sich als naiv und unreflektiert erweisen.\",\n\t\t\t\t},\n\t\t\t\torigin: {\n\t\t\t\t\tq: { spanIndexStart: 38, spanIndexEnd: 38, page: 10 },\n\t\t\t\t\ta: { spanIndexStart: 38, spanIndexEnd: 44, page: 10 },\n\t\t\t\t},\n\t\t\t\tcardID: \"17\",\n\t\t\t},\n\t\t\t\"19\": {\n\t\t\t\ttype: \"Note\",\n\t\t\t\tcontent: \"Was tritt durch die Befreiung von Scheinwissen durch Sokrates Widerlegungsmethode zutage?\",\n\t\t\t\tcardID: \"19\",\n\t\t\t},\n\t\t},\n\t\tlastCardIDNumber: 20,\n\t},\n\t{\n\t\tname: \"4_Nervenzelle.pdf\",\n\t\ttotalPages: 12,\n\t\tcurrentPage: 4,\n\t\triverMakeUps: {\n\t\t\t\"CardRiver 1\": { riverID: \"CardRiver 1\", cardIDs: [\"1\", \"3\"] },\n\t\t\t\"CardRiver 2\": { riverID: \"CardRiver 2\", cardIDs: [\"5\"] },\n\t\t\t\"CardRiver 3\": { riverID: \"CardRiver 3\", cardIDs: [\"9\", \"11\"] },\n\t\t\t\"CardRiver 4\": { riverID: \"CardRiver 4\", cardIDs: [\"13\", \"15\"] },\n\t\t},\n\t\tcards: {\n\t\t\t\"1\": {\n\t\t\t\ttype: \"Q-A\",\n\t\t\t\tcontent: { q: \"Worauf ist eine Nervenzelle spezialisiert? (Seite 1, Absatz 1)\", a: \"\" },\n\t\t\t\tcardID: \"1\",\n\t\t\t},\n\t\t\t\"3\": {\n\t\t\t\ttype: \"Q-A\",\n\t\t\t\tcontent: { q: \"Wie viele Nervenzellen hat das Gehirn Schätzungen zufolge? (Seite 1, Absatz 4)\", a: \"\" },\n\t\t\t\tcardID: \"3\",\n\t\t\t},\n\t\t\t\"5\": {\n\t\t\t\ttype: \"Q-A\",\n\t\t\t\tcontent: { q: \"Wie wird der Körper der Nervenzelle bezeichnet? (Seite 2, Absatz 1)\", a: \"\" },\n\t\t\t\tcardID: \"5\",\n\t\t\t},\n\t\t\t\"9\": {\n\t\t\t\ttype: \"Q-A\",\n\t\t\t\tcontent: {\n\t\t\t\t\tq: \"Wovon hängt es ab ob ein Aktionspotential gebildet wird oder nicht? (Seite 3, Absatz 2)\",\n\t\t\t\t\ta: \"\",\n\t\t\t\t},\n\t\t\t\tcardID: \"9\",\n\t\t\t},\n\t\t\t\"11\": { type: \"Q-A\", content: { q: \"Was sind Dendriten? (Seite 3, Absatz 3)\", a: \"\" }, cardID: \"11\" },\n\t\t\t\"13\": {\n\t\t\t\ttype: \"Q-A\",\n\t\t\t\tcontent: {\n\t\t\t\t\tq:\n\t\t\t\t\t\t\"Wie wird im Falle einer Erregung der Nervenzelle sichergestellt, dass Aktionspotentiale am Axonhügel entstehen und über deren Axon weitergeleitet werden? (Seite 4, Absatz 1)\",\n\t\t\t\t\ta: \"\",\n\t\t\t\t},\n\t\t\t\tcardID: \"13\",\n\t\t\t},\n\t\t\t\"15\": {\n\t\t\t\ttype: \"Q-A\",\n\t\t\t\tcontent: { q: \"Was ist das Axon einer Nervenzelle? (Seite 4, Absatz 2)\", a: \"\" },\n\t\t\t\tcardID: \"15\",\n\t\t\t},\n\t\t},\n\t\tlastCardIDNumber: 16,\n\t},\n];\n","export const NAME = \"documentDB\";\n","import { Dispatch } from \"redux\";\nimport { DocumentData } from \"./model\";\nimport { collectCurrentDBData, getAll, getDocumentDataSets } from \"./selectors\";\nimport { actions } from \"./slice\";\nimport { ActionCreators } from \"redux-undo\";\nimport pdf from \"../pdf\";\nimport cards from \"../cards\";\nimport river from \"../river\";\n\nconst refreshData = (dispatch: Dispatch, state: any) => {\n\t// note: need to getState again after this to make sure refreshed state is used\n\tconst currentPDFName = pdf.selectors.getPDFName(state);\n\tif (currentPDFName !== undefined) {\n\t\tconst dbData = collectCurrentDBData(state) as DocumentData;\n\t\tdispatch(actions.storeInDocumentDB(dbData));\n\t}\n};\n\nconst fileDownload = require(\"js-file-download\");\nexport const downloadDBData = () => {\n\treturn (dispatch: Dispatch, getState: Function) => {\n\t\tlet state = getState();\n\n\t\t//actualize the db before downloading\n\t\trefreshData(dispatch, state);\n\t\t// get actualized state\n\t\tstate = getState();\n\n\t\tconst documentDataSets = getDocumentDataSets(state);\n\t\tconst localString = new Date().toLocaleString();\n\t\tfileDownload(JSON.stringify(documentDataSets), localString + \" ClayMemory.txt\");\n\t};\n};\n\nconst resetActiveAppState = (dispatch: Dispatch) => {\n\t// reset river first, otherwise it might not find cards which where deleted\n\tdispatch(river.actions.allRiversReset());\n\tdispatch(cards.actions.allCardsReset());\n\t// no undo-redo across documents or when uploading a dataset\n\tdispatch(ActionCreators.clearHistory());\n};\n\nexport const replaceActiveAppState = (dispatch: Dispatch, newDocumentData: DocumentData, currentPDFName?: string) => {\n\t// this order is critical, otherwise river cant find cards\n\tdispatch(\n\t\tcards.actions.allCardsReplace({ cards: newDocumentData.cards, lastCardIDNumber: newDocumentData.lastCardIDNumber })\n\t);\n\tdispatch(river.actions.allRiversReplace(newDocumentData.riverMakeUps));\n\tif (currentPDFName !== undefined && newDocumentData.name !== currentPDFName) {\n\t\t//existing pdf is unequal to loaded data, so need to replace\n\t\t//pdf is not replaced, because when we load only data, the pdf is not yet uploaded\n\t\tdispatch(\n\t\t\tpdf.actions.existingDocumentPayload({\n\t\t\t\tpdfName: newDocumentData.name,\n\t\t\t\tcurrentPage: newDocumentData.currentPage,\n\t\t\t\ttotalPages: newDocumentData.totalPages,\n\t\t\t})\n\t\t);\n\t}\n\t// no undo-redo across documents or when uploading a dataset\n\tdispatch(ActionCreators.clearHistory());\n};\n\nexport const loadPDF = (pdfFile: File) => {\n\treturn (dispatch: Dispatch, getState: Function) => {\n\t\tconst newPDFName = pdfFile.name;\n\n\t\tconst state = getState();\n\t\tconst currentPDFName = pdf.selectors.getPDFName(state);\n\n\t\tconst documentDB = getAll(state);\n\n\t\trefreshData(dispatch, state);\n\n\t\tdispatch(pdf.actions.pdfUpload(pdfFile));\n\n\t\t// if the uploaded pdf is the same as the active one, then we just reloaded the app (lost the pdf)\n\t\t// and dont need load data (loading data would lead to overwrite because of the syncing order)\n\t\t//TODO: make the sync between documentDB and active document more explicit, right now I just sync when a PDF is uploaded\n\t\tif (newPDFName === currentPDFName) {\n\t\t\treturn;\n\t\t}\n\t\tconst newDocumentData = documentDB[newPDFName];\n\t\tif (newDocumentData) {\n\t\t\treplaceActiveAppState(dispatch, newDocumentData);\n\t\t} else {\n\t\t\tresetActiveAppState(dispatch);\n\t\t}\n\t};\n};\n\nexport const loadSavedDocument = (document: string) => {\n\treturn (dispatch: Dispatch, getState: Function) => {\n\t\tconst state = getState();\n\t\tconst currentPDFName = pdf.selectors.getPDFName(state);\n\t\tconst pdfFile = pdf.selectors.getPDF(state);\n\n\t\tconst documentDB = getAll(state);\n\n\t\trefreshData(dispatch, state);\n\n\t\tconst newDocumentData = documentDB[document];\n\t\t// if no pdf exists and no current pdf name then the document dataset was loaded into an empty ClayMemory,\n\t\t// then we need to set the name\n\t\tconst inputName = !!!pdfFile && !!!currentPDFName ? \"\" : currentPDFName;\n\t\treplaceActiveAppState(dispatch, newDocumentData, inputName);\n\t};\n};\n\nexport const deleteActiveDocument = () => {\n\treturn (dispatch: Dispatch, getState: Function) => {\n\t\tresetActiveAppState(dispatch);\n\t\tconst state = getState();\n\t\tconst activeDocument = pdf.selectors.getPDFName(state);\n\t\tdispatch(actions.removeFromDocumentDB(activeDocument as string));\n\t};\n};\n\nexport const deleteDocument = (document: string) => {\n\treturn (dispatch: any, getState: Function) => {\n\t\tconst state = getState();\n\t\tconst activeDocument = pdf.selectors.getPDFName(state);\n\t\tif (activeDocument && activeDocument === document) {\n\t\t\tdispatch(deleteActiveDocument());\n\t\t} else {\n\t\t\tdispatch(actions.removeFromDocumentDB(document));\n\t\t}\n\t};\n};\n","import { useDispatch } from \"react-redux\";\nimport React from \"react\";\nimport { IconButton } from \"@material-ui/core\";\nimport ImportContactsIcon from \"@material-ui/icons/ImportContacts\";\nimport { loadSavedDocument } from \"../../actions\";\nimport text from \"../../../text\";\n\nexport const LoadDocumentDataButton = ({ document, afterClick }: { document: string; afterClick: () => void }) => {\n\tconst dispatch = useDispatch();\n\treturn (\n\t\t<text.components.BiggerTooltip\n\t\t\ttitle={text.constants.loadSavedDocumentTooltip}\n\t\t\tenterDelay={text.constants.defaultEnterDelay}\n\t\t\tenterNextDelay={text.constants.defaultEnterNextDelay}\n\t\t>\n\t\t\t<IconButton\n\t\t\t\ttype=\"button\"\n\t\t\t\tonClick={() => {\n\t\t\t\t\tdispatch(loadSavedDocument(document));\n\t\t\t\t\tafterClick();\n\t\t\t\t}}\n\t\t\t>\n\t\t\t\t<ImportContactsIcon fontSize=\"small\"></ImportContactsIcon>\n\t\t\t</IconButton>\n\t\t</text.components.BiggerTooltip>\n\t);\n};\n","import { useDispatch } from \"react-redux\";\nimport React, { useState } from \"react\";\nimport {\n\tIconButton,\n\tDialog,\n\tDialogTitle,\n\tDialogContent,\n\tDialogContentText,\n\tDialogActions,\n\tButton,\n} from \"@material-ui/core\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport text from \"../../../text\";\nimport { deleteDocument } from \"../../actions\";\n\nconst DeleteDocumentDialogAlert = ({\n\tdocument,\n\thandleClose,\n\topen,\n}: {\n\tdocument: string;\n\thandleClose: () => void;\n\topen: boolean;\n}) => {\n\tconst dispatch = useDispatch();\n\n\treturn (\n\t\t<Dialog\n\t\t\topen={open}\n\t\t\tonClose={handleClose}\n\t\t\taria-labelledby=\"alert-dialog-title\"\n\t\t\taria-describedby=\"alert-dialog-description\"\n\t\t>\n\t\t\t<DialogTitle id=\"alert-dialog-title\">{\"Delete \" + document + \" and all associated card data?\"}</DialogTitle>\n\t\t\t<DialogContent>\n\t\t\t\t<DialogContentText id=\"alert-dialog-description\">This change can not be undone.</DialogContentText>\n\t\t\t</DialogContent>\n\t\t\t<DialogActions>\n\t\t\t\t<Button onClick={handleClose} color=\"primary\">\n\t\t\t\t\tAbort\n\t\t\t\t</Button>\n\t\t\t\t<Button\n\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\tdispatch(deleteDocument(document));\n\t\t\t\t\t\thandleClose();\n\t\t\t\t\t}}\n\t\t\t\t\tcolor=\"primary\"\n\t\t\t\t\tautoFocus\n\t\t\t\t>\n\t\t\t\t\tDelete document and associated card data\n\t\t\t\t</Button>\n\t\t\t</DialogActions>\n\t\t</Dialog>\n\t);\n};\n\n//TODO: deleting the active document leads only to reset it, not really delete it\nexport const DeleteDocumentButton = ({ document, afterClick }: { document: string; afterClick: () => void }) => {\n\tconst [open, setOpen] = useState(false);\n\n\tconst handleClose = () => {\n\t\tsetOpen(false);\n\t};\n\treturn (\n\t\t<div>\n\t\t\t<text.components.BiggerTooltip\n\t\t\t\ttitle={text.constants.deleteDocumentTooltip}\n\t\t\t\tenterDelay={text.constants.defaultEnterDelay}\n\t\t\t\tenterNextDelay={text.constants.defaultEnterNextDelay}\n\t\t\t>\n\t\t\t\t<IconButton\n\t\t\t\t\ttype=\"button\"\n\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\tsetOpen(true);\n\t\t\t\t\t}}\n\t\t\t\t>\n\t\t\t\t\t<DeleteIcon fontSize=\"small\"></DeleteIcon>\n\t\t\t\t</IconButton>\n\t\t\t</text.components.BiggerTooltip>\n\t\t\t<DeleteDocumentDialogAlert\n\t\t\t\tdocument={document}\n\t\t\t\topen={open}\n\t\t\t\thandleClose={() => {\n\t\t\t\t\thandleClose();\n\t\t\t\t\tafterClick();\n\t\t\t\t}}\n\t\t\t></DeleteDocumentDialogAlert>\n\t\t</div>\n\t);\n};\n","import React from \"react\";\nimport { Divider, Card, Grid } from \"@material-ui/core\";\nimport { LoadDocumentDataButton } from \"../DocumentData/LoadDocumentDataButton\";\nimport { DeleteDocumentButton } from \"../DocumentData/DeleteDocumentButton\";\n\nconst DocumentOptionItemButtonRow = ({ document, afterClick }: { document: string; afterClick: () => void }) => {\n\treturn (\n\t\t<Grid container direction=\"row\">\n\t\t\t<Grid item>\n\t\t\t\t<LoadDocumentDataButton document={document} afterClick={afterClick}></LoadDocumentDataButton>\n\t\t\t</Grid>\n\n\t\t\t<Grid item>\n\t\t\t\t<Divider orientation=\"vertical\"></Divider>\n\t\t\t</Grid>\n\n\t\t\t<Grid item>\n\t\t\t\t<DeleteDocumentButton document={document} afterClick={afterClick}></DeleteDocumentButton>\n\t\t\t</Grid>\n\t\t</Grid>\n\t);\n};\n\nexport const DocumentOptionItem = ({ document, afterClick }: { document: string; afterClick: () => void }) => {\n\treturn (\n\t\t<Grid container direction=\"row\" justify=\"space-between\" alignItems=\"center\" spacing={1}>\n\t\t\t<Grid item>{document.replace(\".pdf\", \"\")}</Grid>\n\n\t\t\t<Grid item>\n\t\t\t\t<Card variant=\"outlined\">\n\t\t\t\t\t<DocumentOptionItemButtonRow document={document} afterClick={afterClick}></DocumentOptionItemButtonRow>\n\t\t\t\t</Card>\n\t\t\t</Grid>\n\t\t</Grid>\n\t);\n};\n","import { useSelector } from \"react-redux\";\nimport React from \"react\";\nimport { Typography } from \"@material-ui/core\";\nimport pdf from \"../../../pdf\";\nimport text from \"../../../text\";\nimport { incrementer } from \"../../../../shared/utils\";\nimport { getDocumentNames } from \"../../selectors\";\nimport { DocumentOptionItem } from \"./DocumentOptionItem\";\n\nexport const DocumentOptionList = ({ afterClick }: { afterClick: () => void }) => {\n\tconst activeDocument = useSelector(pdf.selectors.getPDFName);\n\tconst documents = useSelector(getDocumentNames)\n\t\t.filter((doc) => doc !== activeDocument)\n\t\t.sort();\n\tconst increment = incrementer();\n\n\treturn (\n\t\t<span>\n\t\t\t{documents.length > 0 && [\n\t\t\t\t<Typography key={increment()} component={\"span\"} variant=\"h6\">\n\t\t\t\t\t{text.constants.existingDataText}\n\t\t\t\t</Typography>,\n\t\t\t\t<Typography key={increment()} component={\"span\"}>\n\t\t\t\t\t<ul style={{ listStyleType: \"square\" }}>\n\t\t\t\t\t\t{documents.map((document) =>\n\t\t\t\t\t\t\tdocument ? (\n\t\t\t\t\t\t\t\t<li key={increment()}>\n\t\t\t\t\t\t\t\t\t<DocumentOptionItem\n\t\t\t\t\t\t\t\t\t\tdocument={document}\n\t\t\t\t\t\t\t\t\t\tafterClick={afterClick}\n\t\t\t\t\t\t\t\t\t\tkey={increment()}\n\t\t\t\t\t\t\t\t\t></DocumentOptionItem>\n\t\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t\t) : null\n\t\t\t\t\t\t)}\n\t\t\t\t\t</ul>\n\t\t\t\t</Typography>,\n\t\t\t]}\n\t\t</span>\n\t);\n};\n","import { useSelector } from \"react-redux\";\nimport React from \"react\";\nimport { Divider, Typography, Card, Grid } from \"@material-ui/core\";\nimport pdf from \"../../../pdf\";\nimport text from \"../../../text\";\nimport { incrementer } from \"../../../../shared/utils\";\nimport { DeleteDocumentButton } from \"../DocumentData/DeleteDocumentButton\";\n\nexport const ActiveDocumentOptionItem = ({ afterClick }: { afterClick: () => void }) => {\n\tconst activeDocument = useSelector(pdf.selectors.getPDFName);\n\tconst increment = incrementer();\n\n\treturn (\n\t\t<span>\n\t\t\t{activeDocument && [\n\t\t\t\t<Typography key={increment()} component={\"span\"} variant=\"h6\">\n\t\t\t\t\t{text.constants.activeDocumentText}\n\t\t\t\t</Typography>,\n\t\t\t\t<Grid container direction=\"row\" justify=\"space-between\" alignItems=\"center\" spacing={1}>\n\t\t\t\t\t<Grid item>{activeDocument.replace(\".pdf\", \"\")}</Grid>\n\n\t\t\t\t\t<Grid item>\n\t\t\t\t\t\t<Card variant=\"outlined\">\n\t\t\t\t\t\t\t<DeleteDocumentButton document={activeDocument} afterClick={afterClick}></DeleteDocumentButton>\n\t\t\t\t\t\t</Card>\n\t\t\t\t\t</Grid>\n\t\t\t\t</Grid>,\n\t\t\t\t<Divider key={increment()} style={{ marginTop: \"6px\" }}></Divider>,\n\t\t\t]}\n\t\t</span>\n\t);\n};\n","import { useDispatch } from \"react-redux\";\nimport React, { ChangeEvent, Fragment, useRef, MutableRefObject } from \"react\";\nimport { MenuItem, Button } from \"@material-ui/core\";\nimport { loadPDF } from \"../../actions\";\nimport InsertDriveFileIcon from \"@material-ui/icons/InsertDriveFile\";\n//TODO: have way to merge two document-workspaces\nexport const InputDocument = ({ handleClose, label }: any) => {\n\tconst dispatch = useDispatch();\n\n\tconst ref: MutableRefObject<null | HTMLInputElement> = useRef(null);\n\n\treturn (\n\t\t<Fragment>\n\t\t\t<MenuItem\n\t\t\t\tonClick={() => {\n\t\t\t\t\t(ref.current as HTMLInputElement).click();\n\t\t\t\t}}\n\t\t\t>\n\t\t\t\t<Button\n\t\t\t\t\tvariant=\"contained\"\n\t\t\t\t\tcolor=\"primary\"\n\t\t\t\t\tdisableElevation\n\t\t\t\t\tstartIcon={<InsertDriveFileIcon></InsertDriveFileIcon>}\n\t\t\t\t>\n\t\t\t\t\t{label}\n\t\t\t\t</Button>\n\t\t\t</MenuItem>\n\t\t\t<input\n\t\t\t\tref={ref}\n\t\t\t\tstyle={{ display: \"none\" }}\n\t\t\t\tonChange={(event: ChangeEvent<HTMLInputElement>) => {\n\t\t\t\t\tconst files = event.target.files;\n\t\t\t\t\tconst pdf = files ? files[0] : null;\n\t\t\t\t\tif (pdf) {\n\t\t\t\t\t\tdispatch(loadPDF(pdf));\n\t\t\t\t\t}\n\t\t\t\t\thandleClose();\n\t\t\t\t}}\n\t\t\t\ttype=\"file\"\n\t\t\t\taccept=\".pdf\"\n\t\t\t/>\n\t\t</Fragment>\n\t);\n};\n","import React from \"react\";\nimport { Divider, Menu, MenuItem, IconButton } from \"@material-ui/core\";\nimport MoreVertIcon from \"@material-ui/icons/MoreVert\";\nimport { DocumentOptionList } from \"./DocumentOptionList\";\nimport { ActiveDocumentOptionItem } from \"./ActiveDocumentOptionItem\";\nimport { InputDocument } from \"../DocumentData/InputDocument\";\n\nexport const DataOptions = () => {\n\tconst [anchorEl, setAnchorEl] = React.useState<null | HTMLElement>(null);\n\n\tconst handleClick = (event: React.MouseEvent<HTMLButtonElement>) => {\n\t\tsetAnchorEl(event.currentTarget);\n\t};\n\n\tconst handleClose = () => {\n\t\tsetAnchorEl(null);\n\t};\n\n\t//TODO: snackbar for loading documents etc. needs some thought for state to avoid prop drilling like with afterClick\n\n\treturn (\n\t\t<div>\n\t\t\t<IconButton type=\"button\" onClick={handleClick}>\n\t\t\t\t<MoreVertIcon></MoreVertIcon>\n\t\t\t</IconButton>\n\t\t\t<Menu\n\t\t\t\tid=\"simple-menu\"\n\t\t\t\tanchorEl={anchorEl}\n\t\t\t\tkeepMounted\n\t\t\t\topen={Boolean(anchorEl)}\n\t\t\t\tonClose={handleClose}\n\t\t\t\tMenuListProps={{ style: { paddingLeft: \"8px\", paddingRight: \"8px\" } }}\n\t\t\t>\n\t\t\t\t<InputDocument handleClose={handleClose} label={\"Load document\"}></InputDocument>\n\t\t\t\t<Divider />\n\t\t\t\t<ActiveDocumentOptionItem afterClick={handleClose}></ActiveDocumentOptionItem>\n\t\t\t\t<DocumentOptionList afterClick={handleClose}></DocumentOptionList>\n\t\t\t\t{/* <MenuItem\n\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\thandleClose();\n\t\t\t\t\t}}\n\t\t\t\t>\n\t\t\t\t\t<DownloadDataSetsButton></db.components.DownloadDataSetsButton>\n\t\t\t\t</MenuItem>\n\t\t\t\t<Divider />\n\t\t\t\t<InputDataSetsButton handleClose={handleClose} label={text.constants.uploadDatasetsText}></InputDataSetsButton> */}\n\t\t\t</Menu>\n\t\t</div>\n\t);\n};\n","import * as selectors from \"./selectors\";\nimport slice from \"./slice\";\nimport * as components from \"./components\";\n\nconst { reducer, name } = slice;\n\nexport default { name, reducer, selectors, components };\n","import React, { useEffect, useState } from \"react\";\nimport SearchBar from \"material-ui-search-bar\";\nimport river from \"../../../river\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Grid } from \"@material-ui/core\";\nimport pdf from \"../../../pdf\";\n\n//TODO: react-pdf alignment is broken for some pdfs and generally for non-body text,\n// seems to be connected to choosing the wrong font\n// font is chosen per page not per item (e.g. body-font for heading/cursive)\n// needs to be fixed before making search\n// otherwise coloring findings not possible / good enough\n\n//TODO: make search for PDF (right now this would need some work to find the correct text-node and partially color it)\n// https://github.com/wojtekmaj/react-pdf/issues/212\n// counter of found words\n// count also in PDF\n// PDFPageProxy\n// getTextContent\n// if not rendered\n// count via Proxy\n// if rendered count via CustomRenderer\n// two dicts to hold which one\n// make window with next/last found\n// current renderer: multiline matches is not support / matches that cross textItems\n// strg +f should jump to the searchbox? Only if I replace the search fully\n// upper / lower case\n\nexport const ClayMemorySearchBar = () => {\n\tconst dispatch = useDispatch();\n\n\tconst contentString = useSelector(river.selectors.getRiverContentFilter);\n\n\tconst [state, setState] = useState(contentString);\n\n\t// need this for disambiguation between typing in the searchbar and having an active search\n\t// dont add state to the array\n\tuseEffect(() => {\n\t\tif (state !== contentString) {\n\t\t\tsetState(contentString);\n\t\t}\n\t}, [contentString]);\n\n\tconst [searchFocus, setSearchFocus] = useState(\"cards\");\n\n\tconst onChangeCards = (newValue: string) => {\n\t\t// auto-reset on empty\n\t\tif (newValue === \"\") dispatch(river.actions.riverContentFilter(\"\"));\n\t\tsetState(newValue);\n\t};\n\tconst onCancelSearchCards = () => {\n\t\tdispatch(river.actions.riverContentFilter(\"\"));\n\t};\n\tconst onRequestSearchCards = () => dispatch(river.actions.riverContentFilter(state));\n\n\tconst onChangeDocument = (newValue: string) => {\n\t\t// auto-reset on empty\n\t\tif (newValue === \"\") dispatch(pdf.actions.documentSearch(\"\"));\n\t\tsetState(newValue);\n\t};\n\tconst onCancelSearchDocument = () => {\n\t\tdispatch(pdf.actions.documentSearch(\"\"));\n\t};\n\tconst onRequestSearchDocument = () => dispatch(pdf.actions.documentSearch(state));\n\n\tconst onChange = searchFocus === \"cards\" ? onChangeCards : onChangeDocument;\n\tconst onCancelSearch = searchFocus === \"cards\" ? onCancelSearchCards : onCancelSearchDocument;\n\tconst onRequestSearch = searchFocus === \"cards\" ? onRequestSearchCards : onRequestSearchDocument;\n\n\tconst chooseFocus = (chosenFocus: string) => {\n\t\tsetSearchFocus(chosenFocus);\n\t\tif (chosenFocus === \"cards\") {\n\t\t\tonCancelSearchDocument();\n\t\t} else {\n\t\t\tonCancelSearchCards();\n\t\t}\n\t\tsetState(\"\");\n\t};\n\n\t//TODO: search in other rivers/same river when composing to show similar cards (like in the Anki Addon)\n\treturn (\n\t\t<Grid container direction=\"row\" alignItems=\"center\" spacing={1}>\n\t\t\t{/* <Grid item>\n\t\t\t\t<Select\n\t\t\t\t\tvariant=\"outlined\"\n\t\t\t\t\tcolor=\"secondary\"\n\t\t\t\t\tnative\n\t\t\t\t\tvalue={searchFocus === \"cards\" ? \"Filter cards\" : \"Search document\"}\n\t\t\t\t\tonChange={(\n\t\t\t\t\t\tevent: React.ChangeEvent<{\n\t\t\t\t\t\t\tname?: string | undefined;\n\t\t\t\t\t\t\tvalue: unknown;\n\t\t\t\t\t\t}>\n\t\t\t\t\t) => {\n\t\t\t\t\t\tchooseFocus(event.target.value === \"Search document\" ? \"document\" : \"cards\");\n\t\t\t\t\t}}\n\t\t\t\t>\n\t\t\t\t\t<option>Filter cards</option>\n\t\t\t\t\t<option>Search document</option>\n\t\t\t\t</Select>\n\t\t\t</Grid> */}\n\t\t\t<Grid item>\n\t\t\t\t<SearchBar\n\t\t\t\t\tvalue={state}\n\t\t\t\t\tplaceholder={searchFocus === \"cards\" ? \"Filter cards\" : \"Search document\"}\n\t\t\t\t\tonChange={onChange}\n\t\t\t\t\tonCancelSearch={onCancelSearch}\n\t\t\t\t\tonRequestSearch={onRequestSearch}\n\t\t\t\t\tcancelOnEscape={true}\n\t\t\t\t/>\n\t\t\t</Grid>\n\t\t</Grid>\n\t);\n};\n","import { createSelector } from \"reselect\";\nimport { DisplayState } from \"./model\";\nimport { NAME } from \"./constants\";\n\nexport const getAll = (state: any): DisplayState => state[NAME];\n\nexport const getWindowMeasurements = createSelector(getAll, (state) => state.windowMeasurements);\n\nexport const getTopOffset = createSelector(getAll, (state) => state.topOffset);\n\nexport const getListIndex = createSelector(getAll, (state) => state.listIndex);\n\nexport const getScrollToIndex = createSelector(getAll, (state) => state.scrollToIndex);\n\nexport const getCurrentView = createSelector(getAll, (state) => state.currentView);\n","import { DisplayState, View } from \"./model\";\nimport { simpleReducer } from \"../../shared/utils\";\nimport { CaseReducer, createSlice, PayloadAction } from \"@reduxjs/toolkit\";\nimport { NAME } from \"./constants\";\nimport cards from \"../cards\";\nimport { CardsState } from \"../cards/model/state\";\nimport pdf from \"../pdf\";\n\nconst initialState: DisplayState = {\n\twindowMeasurements: null,\n\ttopOffset: 0,\n\tcurrentView: View.RiverMaterial,\n\tlistIndex: 0,\n\tscrollToIndex: false,\n};\n\nconst topOffset: CaseReducer<DisplayState, PayloadAction<number>> = simpleReducer(\"topOffset\");\nconst windowMeasurements: CaseReducer<\n\tDisplayState,\n\tPayloadAction<{ width: number; height: number } | null>\n> = simpleReducer(\"windowMeasurements\");\nconst listIndex: CaseReducer<DisplayState, PayloadAction<number>> = simpleReducer(\"listIndex\");\nconst scrollToIndex: CaseReducer<DisplayState, PayloadAction<boolean>> = simpleReducer(\"scrollToIndex\");\nconst scroll: CaseReducer<DisplayState> = (state) => {\n\treturn { ...state, scrollToIndex: true };\n};\nconst currentView: CaseReducer<DisplayState, PayloadAction<View>> = simpleReducer(\"currentView\");\n\n//TODO: suboptimal, changes to RiverExplorer also if I upload pdf,\n// need to rework module boundaries to allow more fine-grained control\nconst viewForNewCards: CaseReducer<DisplayState, PayloadAction<CardsState>> = (state, { payload }) => {\n\treturn { ...state, currentView: payload.lastCardIDNumber > 1 ? View.RiverExplorer : View.RiverMaterial };\n};\nconst viewForNewPDF: CaseReducer<DisplayState> = (state) => {\n\treturn { ...state, currentView: View.RiverMaterial };\n};\n\nconst displaySlice = createSlice({\n\tname: NAME,\n\tinitialState,\n\treducers: {\n\t\ttopOffset,\n\t\twindowMeasurements,\n\t\tlistIndex,\n\t\tscrollToIndex,\n\t\tcurrentView,\n\t},\n\textraReducers: {\n\t\t[cards.actions.allCardsReplace.type]: viewForNewCards,\n\t\t[pdf.actions.pdfUpload.type]: viewForNewPDF,\n\t\t[pdf.actions.pageUpdate.type]: scroll,\n\t\t[pdf.actions.nextPage.type]: scroll,\n\t\t[pdf.actions.previousPage.type]: scroll,\n\t},\n});\n\nexport const { actions } = displaySlice;\n\nexport default displaySlice;\n","export const NAME = \"displayData\";\n","import { Card, Tab, Tabs } from \"@material-ui/core\";\nimport React from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { getCurrentView } from \"../../selectors\";\nimport { actions } from \"../../slice\";\n\n//TODO: Canvas view / Code Bubbles / Unreal Engine\n// http://www.andrewbragdon.com/codebubbles_site.asp\n\nexport const ViewTabs = () => {\n\tconst currentView = useSelector(getCurrentView);\n\tconst dispatch = useDispatch();\n\n\tconst handleChange = (_: any, newValue: number) => {\n\t\tdispatch(actions.currentView(newValue));\n\t};\n\n\treturn (\n\t\t<Card>\n\t\t\t<Tabs value={currentView} onChange={handleChange}>\n\t\t\t\t<Tab label=\"River-Material\" />\n\t\t\t\t<Tab label=\"River Explorer\" />\n\t\t\t\t{/* <Tab label=\"Card Explorer\" /> */}\n\t\t\t</Tabs>\n\t\t</Card>\n\t);\n};\n","import React, { useLayoutEffect, useRef } from \"react\";\nimport { AppBar, Toolbar, Grid, Typography } from \"@material-ui/core\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport pdf from \"../../../pdf\";\nimport db from \"../../../data\";\nimport cards from \"../../../cards\";\nimport { ClayMemorySearchBar } from \"./ClayMemorySearchBar\";\nimport { ViewTabs } from \"./ViewTabs\";\nimport { getTopOffset } from \"../../selectors\";\nimport { actions } from \"../../slice\";\n\n//TODO: download/load/sync csv for Anki\nexport const ControlBar = () => {\n\tconst materialName = useSelector(pdf.selectors.getPDFName);\n\tconst offset = useSelector(getTopOffset);\n\tconst ref = useRef<null | HTMLDivElement>(null);\n\n\tconst dispatch = useDispatch();\n\n\tuseLayoutEffect(() => {\n\t\tif (ref.current) {\n\t\t\tconst currentBottom = ref.current.getBoundingClientRect().bottom;\n\t\t\tif (currentBottom !== offset) dispatch(actions.topOffset(currentBottom));\n\t\t}\n\t}, [ref, dispatch, offset]);\n\n\treturn (\n\t\t<pdf.components.PageKeyboardControl>\n\t\t\t<AppBar ref={ref} position=\"sticky\">\n\t\t\t\t<Toolbar variant=\"regular\" disableGutters>\n\t\t\t\t\t<Grid container direction=\"row\" alignItems=\"center\" justify=\"space-between\">\n\t\t\t\t\t\t<Grid item xs={6}>\n\t\t\t\t\t\t\t<Grid container direction=\"row\" alignItems=\"center\" spacing={1} style={{ paddingLeft: \"4px\" }}>\n\t\t\t\t\t\t\t\t<Grid item style={{ maxWidth: \"15%\" }}>\n\t\t\t\t\t\t\t\t\t<pdf.components.PageChooser></pdf.components.PageChooser>\n\t\t\t\t\t\t\t\t</Grid>\n\n\t\t\t\t\t\t\t\t<Grid item>\n\t\t\t\t\t\t\t\t\t<pdf.components.PageNavigation></pdf.components.PageNavigation>\n\t\t\t\t\t\t\t\t</Grid>\n\n\t\t\t\t\t\t\t\t<Grid item>\n\t\t\t\t\t\t\t\t\t<cards.components.UndoRedoCard></cards.components.UndoRedoCard>\n\t\t\t\t\t\t\t\t</Grid>\n\n\t\t\t\t\t\t\t\t<Grid item>\n\t\t\t\t\t\t\t\t\t<ViewTabs></ViewTabs>\n\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t</Grid>\n\n\t\t\t\t\t\t<Grid item xs={2}>\n\t\t\t\t\t\t\t<Grid container justify=\"center\">\n\t\t\t\t\t\t\t\t<Grid item style={{ overflowX: \"auto\" }}>\n\t\t\t\t\t\t\t\t\t<Typography variant=\"subtitle1\">{materialName?.replace(\".pdf\", \"\")}</Typography>\n\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t</Grid>\n\n\t\t\t\t\t\t<Grid item xs={4}>\n\t\t\t\t\t\t\t<Grid container direction=\"row\" justify=\"flex-end\" alignItems=\"center\">\n\t\t\t\t\t\t\t\t<Grid item>\n\t\t\t\t\t\t\t\t\t<ClayMemorySearchBar></ClayMemorySearchBar>\n\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t\t{/* <Grid item>\n\t\t\t\t\t\t\t\t\t<ShowHideButton></ShowHideButton>\n\t\t\t\t\t\t\t\t</Grid> */}\n\t\t\t\t\t\t\t\t<Grid item>\n\t\t\t\t\t\t\t\t\t<db.components.DataOptions></db.components.DataOptions>\n\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t</Grid>\n\t\t\t\t\t</Grid>\n\t\t\t\t</Toolbar>\n\t\t\t</AppBar>\n\t\t</pdf.components.PageKeyboardControl>\n\t);\n};\n","import { useEffect, useLayoutEffect } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { debounce } from \"throttle-debounce\";\nimport { actions } from \"../slice\";\n\n//TODO: replace this with vw / vh css values\n\nexport const HTMLDocumentMeasurer = () => {\n\tconst dispatch = useDispatch();\n\n\tconst measure = debounce(50, () => {\n\t\tconst htmlElement = document.documentElement;\n\t\tconst currentWidth = htmlElement.clientWidth;\n\t\tconst currentHeight = htmlElement.clientHeight;\n\t\tdispatch(actions.windowMeasurements({ width: currentWidth, height: currentHeight }));\n\t});\n\n\tuseLayoutEffect(() => {\n\t\t//first measurement\n\t\tmeasure();\n\t}, [measure]);\n\n\tuseEffect(() => {\n\t\twindow.addEventListener(\"resize\", measure);\n\t\treturn () => {\n\t\t\twindow.removeEventListener(\"resize\", measure);\n\t\t};\n\t});\n\n\treturn null;\n};\n","import { Button, Snackbar } from \"@material-ui/core\";\nimport React, { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport pdf from \"../../../../../pdf\";\n\n//TODO: think about that SelectionSnackbar and this both are dismissed via Esc\n\nexport const OriginMarkedSnackbar = () => {\n\tconst [open, setOpen] = useState(false);\n\tconst spanOrigin = useSelector(pdf.selectors.getSpanOrigin);\n\tconst dispatch = useDispatch();\n\n\tif (!!!spanOrigin && open) setOpen(false);\n\n\tif (!!spanOrigin && !open) setOpen(true);\n\n\tconst handleClose = (event: any, reason: string) => {\n\t\tif (reason === \"clickaway\") {\n\t\t\treturn;\n\t\t} else {\n\t\t\tsetOpen(false);\n\t\t\tdispatch(pdf.actions.spanOrigin(null));\n\t\t}\n\t};\n\n\tconst handleDismiss = () => {\n\t\tsetOpen(false);\n\t\tdispatch(pdf.actions.spanOrigin(null));\n\t};\n\n\tconst escPress = (event: KeyboardEvent) => {\n\t\tif (open && (event.key === \"Escape\" || event.key === \"Esc\")) {\n\t\t\thandleDismiss();\n\t\t}\n\t};\n\n\tuseEffect(() => {\n\t\tdocument.addEventListener(\"keydown\", escPress);\n\t\treturn () => {\n\t\t\tdocument.removeEventListener(\"keydown\", escPress);\n\t\t};\n\t});\n\n\t//TODO: if scrolling wildly accross the document this automatically unmarks, but it should not\n\treturn (\n\t\t<Snackbar\n\t\t\tanchorOrigin={{\n\t\t\t\tvertical: \"bottom\",\n\t\t\t\thorizontal: \"left\",\n\t\t\t}}\n\t\t\topen={open}\n\t\t\tonClose={handleClose}\n\t\t\tmessage=\"Origin is marked\"\n\t\t\taction={\n\t\t\t\t<Button color=\"secondary\" size=\"small\" onClick={handleDismiss}>\n\t\t\t\t\tUNMARK\n\t\t\t\t</Button>\n\t\t\t}\n\t\t/>\n\t);\n};\n","import { RefObject, useCallback, useEffect, useRef, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport pdf from \"../../../../../pdf\";\nimport { SingleOrigin } from \"../../../../../cards/model/origin\";\n\n//TODO: same page origin-scrolling still does sometimes do nothing\n\nexport const PageSpanControl = ({ page, pageRef }: { page: number; pageRef: RefObject<null | HTMLDivElement> }) => {\n\tconst spanOrigin = useSelector(pdf.selectors.getSpanOrigin);\n\tconst count = useRef(0);\n\n\t// if this component is mounted again after scrolling away\n\t// by using the spanOrigin here we prevent double scrolling\n\tconst [scrolledSpan, setScrolledSpan] = useState(spanOrigin);\n\n\tconst dispatch = useDispatch();\n\n\t// it is not guaranteed that the effect fires after the page was fully rendered\n\t// (depends on load)\n\t// so we try up to 10 times\n\t// this assumes every machine has finished rendering after approx 100 ms\n\t// then we assume that the origin was invalid (bug somewhere) and abort\n\t// otherwise it would be a infinite loop\n\tconst trier = useCallback(() => {\n\t\tconst intervalID = setInterval(() => {\n\t\t\tif (count.current === 10) {\n\t\t\t\tcount.current = 0;\n\t\t\t\tclearInterval(intervalID);\n\t\t\t\tconsole.log(\"invalid origin clicked\", spanOrigin);\n\t\t\t\tdispatch(pdf.actions.spanOrigin(null));\n\t\t\t\tsetScrolledSpan(spanOrigin);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst textLayer = pageRef.current?.children.item(1);\n\t\t\tif (textLayer) {\n\t\t\t\tconst originSpan = textLayer.children.item((spanOrigin as SingleOrigin).spanIndexStart);\n\t\t\t\tif (originSpan) {\n\t\t\t\t\toriginSpan.scrollIntoView({ behavior: \"auto\", block: \"center\", inline: \"center\" });\n\t\t\t\t\tcount.current = 0;\n\t\t\t\t\tsetScrolledSpan(spanOrigin);\n\t\t\t\t\tclearInterval(intervalID);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcount.current = count.current + 1;\n\t\t}, 10);\n\t}, [dispatch, count, spanOrigin, pageRef]);\n\n\t//TODO: SelectionSnackbar should not overlap origin, maybe move it automatically\n\n\tuseEffect(() => {\n\t\tif (\n\t\t\tspanOrigin &&\n\t\t\tspanOrigin.page === page &&\n\t\t\tpageRef.current &&\n\t\t\t// this is only not the same if this component was mounted and a new one arrives\n\t\t\t// then it only executes once and then it is the same\n\t\t\tscrolledSpan !== spanOrigin\n\t\t) {\n\t\t\t// assumption of fixed order\n\t\t\tconst textLayer = pageRef.current.children.item(1);\n\t\t\tif (textLayer) {\n\t\t\t\tconst originSpan = textLayer.children.item(spanOrigin.spanIndexStart);\n\t\t\t\tif (originSpan) {\n\t\t\t\t\toriginSpan.scrollIntoView({ behavior: \"auto\", block: \"center\", inline: \"center\" });\n\t\t\t\t\tcount.current = 0;\n\t\t\t\t\tsetScrolledSpan(spanOrigin);\n\t\t\t\t} else {\n\t\t\t\t\ttrier();\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\ttrier();\n\t\t\t}\n\t\t}\n\t}, [dispatch, page, pageRef, spanOrigin, trier, scrolledSpan]);\n\n\treturn null;\n};\n","import React, { useRef } from \"react\";\nimport { Divider, Grid } from \"@material-ui/core\";\nimport { useSelector } from \"react-redux\";\nimport pdf from \"../../../../pdf\";\nimport river from \"../../../../river\";\nimport { getWindowMeasurements } from \"../../../selectors\";\nimport { PageSpanControl } from \"./Origin/PageSpanControl\";\n\n//TODO: replace this with Material-UI breakpoints\nexport const RiverMultiplier = 0.35;\nexport const pairTopBottomPadding = 20;\n\nconst RiverPairItem = ({\n\triverID,\n\tmaterialHeight,\n\tmaterialWidth,\n}: {\n\triverID: string;\n\tmaterialHeight: number;\n\tmaterialWidth: number;\n}) => {\n\treturn (\n\t\t<div style={{ maxWidth: materialWidth * RiverMultiplier }}>\n\t\t\t<river.components.CardRiver riverID={riverID} materialHeight={materialHeight}></river.components.CardRiver>\n\t\t</div>\n\t);\n};\n\nexport const RiverMaterialPair = ({\n\tindex,\n\tdata,\n\tstyle,\n}: {\n\tindex: number;\n\tdata: {\n\t\tmaterialHeights: Map<number, number>;\n\t};\n\tstyle: any;\n}) => {\n\tconst pageNumber = index + 1;\n\tconst riverID = river.model.pageNumberToRiverMakeUpID(pageNumber);\n\tconst { materialHeights } = data;\n\tconst showRiver = useSelector(river.selectors.getRiverShowState);\n\tconst showMaterial = useSelector(pdf.selectors.getPDFShowStatus);\n\n\tconst width = useSelector(getWindowMeasurements)?.width as number;\n\n\tconst pageRef = useRef<null | HTMLDivElement>(null);\n\n\treturn (\n\t\t<div style={{ ...style }}>\n\t\t\t<PageSpanControl page={pageNumber} pageRef={pageRef}></PageSpanControl>\n\t\t\t<river.components.SwitchActiveRiver riverID={riverID}>\n\t\t\t\t<Grid container justify=\"space-between\" direction=\"row\" alignItems=\"flex-start\">\n\t\t\t\t\t<Grid item hidden={showRiver === \"HIDE\"}>\n\t\t\t\t\t\t<RiverPairItem\n\t\t\t\t\t\t\triverID={riverID}\n\t\t\t\t\t\t\tmaterialHeight={materialHeights.get(pageNumber) as number}\n\t\t\t\t\t\t\tmaterialWidth={width}\n\t\t\t\t\t\t></RiverPairItem>\n\t\t\t\t\t</Grid>\n\n\t\t\t\t\t<Grid item hidden={showMaterial === \"HIDE\"}>\n\t\t\t\t\t\t<pdf.components.PDFPage\n\t\t\t\t\t\t\tpageNumber={pageNumber}\n\t\t\t\t\t\t\tpageRef={pageRef}\n\t\t\t\t\t\t\tmaterialWidth={width}\n\t\t\t\t\t\t></pdf.components.PDFPage>\n\t\t\t\t\t</Grid>\n\t\t\t\t</Grid>\n\t\t\t</river.components.SwitchActiveRiver>\n\t\t\t<Divider style={{ marginTop: pairTopBottomPadding / 2 }}></Divider>\n\t\t</div>\n\t);\n};\n","import { RefObject, useEffect } from \"react\";\nimport { VariableSizeList } from \"react-window\";\nimport { getCurrentView, getListIndex, getScrollToIndex } from \"../../../selectors\";\nimport { batch, useDispatch, useSelector } from \"react-redux\";\nimport river from \"../../../../river\";\nimport { View } from \"../../../model\";\nimport { actions } from \"../../../slice\";\nimport pdf from \"../../../../pdf\";\n\nexport const ListScrollControl = ({ listRef }: { listRef: RefObject<VariableSizeList> }) => {\n\tconst currentIndex = useSelector(getListIndex);\n\tconst currentPage = useSelector(pdf.selectors.getCurrentPage);\n\tconst shouldScroll = useSelector(getScrollToIndex);\n\n\tconst currentView = useSelector(getCurrentView);\n\n\tconst riverOriginRequest = useSelector(river.selectors.getOriginRequest);\n\n\tconst dispatch = useDispatch();\n\n\tuseEffect(() => {\n\t\tif (currentPage !== currentIndex + 1 && shouldScroll) {\n\t\t\tlistRef.current?.scrollToItem(currentPage - 1, \"start\");\n\t\t\tdispatch(actions.scrollToIndex(false));\n\t\t} else {\n\t\t\t// TODO: this leads to the current page being reset on reload of page / load of pdf\n\t\t\t// but we want to keep the current page (last page we visited)\n\t\t\tbatch(() => {\n\t\t\t\tdispatch(pdf.actions.pageUpdate(currentIndex + 1));\n\t\t\t\t// hack for now to ensure we dont scroll to pages that we have already reached via manual scrolling\n\t\t\t\tdispatch(actions.scrollToIndex(false));\n\t\t\t});\n\t\t}\n\t}, [dispatch, currentPage, currentIndex, shouldScroll, listRef]);\n\n\tuseEffect(() => {\n\t\tif (riverOriginRequest) {\n\t\t\tif (currentView !== View.RiverMaterial) dispatch(actions.currentView(View.RiverMaterial));\n\n\t\t\tdispatch(pdf.actions.pageUpdate(riverOriginRequest.page));\n\t\t}\n\t}, [dispatch, listRef, riverOriginRequest, currentView]);\n\n\tuseEffect(() => {\n\t\t// only set spanOrigin once we have arrived at the correct page\n\t\t// this prevents race-conditions\n\t\tif (riverOriginRequest && currentPage === currentIndex + 1) {\n\t\t\tdispatch(pdf.actions.spanOrigin(riverOriginRequest));\n\t\t\tdispatch(river.actions.riverOriginRequest(null));\n\t\t}\n\t}, [dispatch, riverOriginRequest, currentPage, currentIndex]);\n\n\treturn null;\n};\n","import React, { RefObject, useRef, Fragment, useEffect } from \"react\";\nimport { pdfjs } from \"react-pdf\";\nimport { VariableSizeList } from \"react-window\";\nimport { pairTopBottomPadding, RiverMaterialPair } from \"./RiverMaterialPair\";\nimport { CachedPageDimensions } from \"../../../../pdf/components/Document/PDFDocument\";\nimport { getTopOffset, getWindowMeasurements } from \"../../../selectors\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { ListScrollControl } from \"./ListScrollControl\";\nimport pdf from \"../../../../pdf\";\nimport { actions } from \"../../../slice\";\n\nconst calculateMaterialHeight = (\n\tpageNumber: number,\n\tcachedPageDimensions: CachedPageDimensions,\n\twindowWidth: number\n) => {\n\tconst pageDims = cachedPageDimensions.get(pageNumber) as [number, number];\n\tconst materialWidth = windowWidth * pdf.constants.MaterialMultiplier;\n\n\tconst userSpaceUnitWidth = pageDims[0];\n\tconst pixelPerUserSpaceUnit = materialWidth / userSpaceUnitWidth;\n\tconst materialHeight = pageDims[1] * pixelPerUserSpaceUnit;\n\n\tconst extraSpaceBetweenMaterialPages = 20;\n\treturn materialHeight + extraSpaceBetweenMaterialPages;\n};\n\nconst Resetter = ({\n\tlistRef,\n\tmaterialHeights,\n}: {\n\tlistRef: RefObject<VariableSizeList>;\n\tmaterialHeights: Map<number, number>;\n}) => {\n\tconst ref = useRef(materialHeights);\n\n\tuseEffect(() => {\n\t\tif (materialHeights !== ref.current) {\n\t\t\tlistRef.current?.resetAfterIndex(0);\n\t\t\tref.current = materialHeights;\n\t\t}\n\t});\n\n\treturn null;\n};\n\nexport const RiverMaterialPairList = ({\n\tpdfProxyRef,\n\tcachedPageDimensions,\n}: {\n\tpdfProxyRef: RefObject<pdfjs.PDFDocumentProxy | undefined>;\n\tcachedPageDimensions: CachedPageDimensions;\n}) => {\n\tconst listRef = useRef<VariableSizeList>();\n\n\tconst windowMeasurements = useSelector(getWindowMeasurements);\n\tconst materialHeights = windowMeasurements\n\t\t? Array.from(cachedPageDimensions.keys()).reduce((prev, pageNumber) => {\n\t\t\t\tprev.set(pageNumber, calculateMaterialHeight(pageNumber, cachedPageDimensions, windowMeasurements.width));\n\t\t\t\treturn prev;\n\t\t  }, new Map<number, number>())\n\t\t: undefined;\n\n\tconst dispatch = useDispatch();\n\tconst topOffset = useSelector(getTopOffset);\n\n\treturn (\n\t\t<Fragment>\n\t\t\t{windowMeasurements && materialHeights && (\n\t\t\t\t<VariableSizeList\n\t\t\t\t\theight={windowMeasurements.height - topOffset}\n\t\t\t\t\titemCount={(pdfProxyRef.current as pdfjs.PDFDocumentProxy).numPages}\n\t\t\t\t\titemSize={(index: number) => (materialHeights.get(index + 1) as number) + pairTopBottomPadding}\n\t\t\t\t\titemData={{\n\t\t\t\t\t\tmaterialHeights,\n\t\t\t\t\t}}\n\t\t\t\t\tref={listRef as RefObject<VariableSizeList>}\n\t\t\t\t\twidth=\"100%\"\n\t\t\t\t\tonItemsRendered={(props) => {\n\t\t\t\t\t\t//TODO: find way to switch the page if it is halfway in sight\n\t\t\t\t\t\tdispatch(actions.listIndex(props.visibleStopIndex));\n\t\t\t\t\t}}\n\t\t\t\t>\n\t\t\t\t\t{RiverMaterialPair}\n\t\t\t\t</VariableSizeList>\n\t\t\t)}\n\t\t\t{materialHeights && (\n\t\t\t\t<Resetter listRef={listRef as RefObject<VariableSizeList>} materialHeights={materialHeights}></Resetter>\n\t\t\t)}\n\t\t\t<ListScrollControl listRef={listRef as RefObject<VariableSizeList>}></ListScrollControl>\n\t\t</Fragment>\n\t);\n};\n","import React, { Fragment } from \"react\";\nimport pdf from \"../../../../pdf\";\nimport { OriginMarkedSnackbar } from \"./Origin/OriginMarkedSnackbar\";\nimport { RiverMaterialPairList } from \"./RiverMaterialPairList\";\n\nexport const RiverMaterial = () => (\n\t<Fragment>\n\t\t<pdf.components.PDFDocument ChildComponent={RiverMaterialPairList}></pdf.components.PDFDocument>\n\t\t<OriginMarkedSnackbar></OriginMarkedSnackbar>\n\t</Fragment>\n);\n","import { Grid } from \"@material-ui/core\";\nimport React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { incrementer } from \"../../../../shared/utils\";\nimport river from \"../../../river\";\nimport { getNonEmptyRiverIDsSorted } from \"../../../river/selectors\";\nimport { getWindowMeasurements, getTopOffset } from \"../../selectors\";\n\nconst ExplorerRiver = ({ riverID }: { riverID: string }) => {\n\tconst windowMeasurements = useSelector(getWindowMeasurements);\n\tconst topOffset = useSelector(getTopOffset);\n\n\treturn windowMeasurements && topOffset ? (\n\t\t<div style={{ marginBottom: \"8px\", marginTop: \"4px\" }}>\n\t\t\t<river.components.CardRiver\n\t\t\t\triverID={riverID}\n\t\t\t\tmaterialHeight={(windowMeasurements?.height as number) - topOffset - 10}\n\t\t\t></river.components.CardRiver>\n\t\t</div>\n\t) : null;\n};\n\nexport const RiverExplorer = () => {\n\tconst riverIDs = useSelector(getNonEmptyRiverIDsSorted);\n\tconst increment = incrementer();\n\treturn (\n\t\t<Grid container justify=\"space-evenly\" alignItems=\"center\" spacing={2} style={{ width: \"100%\", height: \"100%\" }}>\n\t\t\t{riverIDs.map((id) => (\n\t\t\t\t<Grid item xs={4} key={increment()}>\n\t\t\t\t\t<river.components.SwitchActiveRiver riverID={id}>\n\t\t\t\t\t\t<ExplorerRiver riverID={id}></ExplorerRiver>\n\t\t\t\t\t</river.components.SwitchActiveRiver>\n\t\t\t\t</Grid>\n\t\t\t))}\n\t\t</Grid>\n\t);\n};\n//TODO: make error-message if jump to is executed without uploading a pdf\n","import React, { Fragment } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { View } from \"../../model\";\nimport { getCurrentView } from \"../../selectors\";\nimport { RiverMaterial } from \"./RiverMaterial/RiverMaterial\";\nimport { RiverExplorer } from \"./RiverExplorer\";\n\nexport const Body = () => {\n\tconst currentView = useSelector(getCurrentView);\n\n\t// TODO: cant hide the CardExplorer because the Material UI TextField does not render correctly\n\t// after hidding\n\t// TODO: disable CardExplorer until I fix the \"which River is active\" problem for that view\n\treturn (\n\t\t<Fragment>\n\t\t\t<div hidden={currentView !== View.RiverMaterial} style={{ width: \"100%\", height: \"100%\" }}>\n\t\t\t\t<RiverMaterial></RiverMaterial>\n\t\t\t</div>\n\n\t\t\t<div hidden={currentView !== View.RiverExplorer} style={{ width: \"100%\", height: \"100%\" }}>\n\t\t\t\t<RiverExplorer></RiverExplorer>\n\t\t\t</div>\n\t\t</Fragment>\n\t);\n};\n","import { Grid } from \"@material-ui/core\";\nimport React from \"react\";\nimport cards from \"../../cards\";\nimport selection from \"../../selection\";\nimport { ControlBar } from \"./ControlBar/ControlBar\";\nimport { HTMLDocumentMeasurer } from \"./HTMLDocumentMeasurer\";\nimport { Body } from \"./Body/Body\";\n\nexport const Display = () => {\n\treturn (\n\t\t<cards.components.UndoRedoKeyListener>\n\t\t\t<div>\n\t\t\t\t<selection.components.ContextMenu></selection.components.ContextMenu>\n\t\t\t\t<selection.components.SelectionSnackbar></selection.components.SelectionSnackbar>\n\t\t\t\t<HTMLDocumentMeasurer></HTMLDocumentMeasurer>\n\t\t\t\t<Grid\n\t\t\t\t\tcontainer\n\t\t\t\t\tjustify=\"center\"\n\t\t\t\t\tdirection=\"column\"\n\t\t\t\t\talignItems=\"stretch\"\n\t\t\t\t\tstyle={{ height: \"100%\", width: \"100%\" }}\n\t\t\t\t>\n\t\t\t\t\t<Grid item>\n\t\t\t\t\t\t<ControlBar></ControlBar>\n\t\t\t\t\t</Grid>\n\n\t\t\t\t\t<Grid item>\n\t\t\t\t\t\t<Body></Body>\n\t\t\t\t\t</Grid>\n\t\t\t\t</Grid>\n\t\t\t</div>\n\t\t</cards.components.UndoRedoKeyListener>\n\t);\n};\n","import * as components from \"./components\";\nimport slice from \"./slice\";\nimport * as selectors from \"./selectors\";\n\nconst { reducer, actions, name } = slice;\n\nexport default { actions, components, name, reducer, selectors };\n","import storage from \"redux-persist/lib/storage\"; // defaults to localStorage for web\nimport { createTransform } from \"redux-persist\";\nimport pdf from \"./modules/pdf\";\nimport { PDFState } from \"./modules/pdf/model\";\n\n// to get the correct object with reselect, I added .present to all getAll that belong do undoable modules\n\nconst removePDF = (state: any) => {\n\treturn { ...state, pdf: null };\n};\n\n// TODO: dont persist selection or mark for now (does not work)\n\nconst pdfTransform = createTransform(\n\t(inboundState: PDFState) => {\n\t\treturn inboundState;\n\t},\n\t(outboundState): PDFState => {\n\t\treturn removePDF(outboundState);\n\t},\n\t{ whitelist: [pdf.name] }\n);\n\nexport const persistConfig = {\n\tkey: \"root\",\n\tstorage,\n\ttransforms: [pdfTransform],\n};\n","import { createStore } from \"redux\";\nimport { applyMiddleware } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport { combineReducers } from \"redux\";\nimport river from \"./modules/river\";\nimport display from \"./modules/display\";\nimport cards from \"./modules/cards\";\nimport { persistStore, persistReducer } from \"redux-persist\";\nimport undoable, { includeAction } from \"redux-undo\";\nimport { persistConfig } from \"./persist\";\nimport db from \"./modules/data\";\nimport selection from \"./modules/selection\";\nimport { composeWithDevTools } from \"redux-devtools-extension/logOnlyInProduction\";\nimport pdf from \"./modules/pdf\";\n\n//TODO: make limit for undo (right now its fine, if we reset on document-upload / reload)\n//TODO: make snackbar for which action is undone/redone\n\nconst undoableCardActions = [\n\tcards.actions.cardPush.type,\n\tcards.actions.cardRemove.type,\n\tcards.actions.cardReplace.type,\n\tcards.actions.cardFieldReplace.type,\n];\n\nconst rootReducer = combineReducers({\n\t[db.name]: db.reducer,\n\t[selection.name]: selection.reducer,\n\t[river.constants.NAME]: undoable(river.reducer, {\n\t\tfilter: includeAction(undoableCardActions),\n\t}),\n\t[cards.name]: undoable(cards.reducer, {\n\t\tfilter: includeAction(undoableCardActions),\n\t}),\n\t[pdf.name]: pdf.reducer,\n\t[display.name]: display.reducer,\n});\n\nconst persistedReducer = persistReducer(persistConfig, rootReducer);\n\nconst composeEnhancers = composeWithDevTools({});\nconst enhancer = composeEnhancers(applyMiddleware(thunk));\n\nexport const store = createStore(persistedReducer, enhancer);\n\nexport const persistor = persistStore(store);\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport { store, persistor } from \"./store\";\nimport { PersistGate } from \"redux-persist/es/integration/react\";\nimport display from \"./modules/display\";\n// Load Roboto typeface\nrequire(\"typeface-roboto\");\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<Provider store={store}>\n\t\t\t<PersistGate loading={null} persistor={persistor}>\n\t\t\t\t<display.components.Display></display.components.Display>\n\t\t\t</PersistGate>\n\t\t</Provider>\n\t</React.StrictMode>,\n\tdocument.getElementById(\"root\")\n);\n"],"sourceRoot":""}