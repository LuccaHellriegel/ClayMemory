{"version":3,"sources":["modules/display/constants.ts","modules/display/actionTypes.ts","modules/display/selectors.ts","shared/utils.ts","modules/display/services/span.ts","modules/display/services/materialData.ts","modules/display/actions.ts","modules/display/components/PDFDocument/PDFDocument.tsx","modules/display/components/PDFUpload.tsx","modules/display/components/NavigationButtons.tsx","modules/display/components/ShowMaterialButton.tsx","modules/display/components/PageChooser/PageChooser.tsx","modules/display/reducer.ts","modules/display/index.ts","modules/control/hooks/useEventListener.tsx","modules/focus/constants.ts","modules/focus/actionTypes.ts","modules/focus/selectors.ts","modules/focus/actions.ts","modules/focus/reducer.ts","modules/focus/index.ts","modules/creation/constants.ts","modules/creation/actionTypes.ts","modules/cards/services/config.ts","modules/cards/constants.ts","modules/cards/actionTypes.ts","modules/cards/selectors.ts","modules/cards/actions.ts","modules/cards/reducer.ts","modules/cards/index.ts","modules/river/constants.ts","modules/river/selectors.ts","modules/river/components/HybridCardField.tsx","modules/river/components/DeleteCardButton.tsx","modules/river/components/JumpToOriginButton.tsx","modules/river/components/Card.tsx","modules/river/components/toCardGridItemsWithDividers.tsx","modules/river/components/CardRiverAccordion.tsx","modules/river/components/ChildCardRiver.tsx","modules/river/components/ActiveCardRiver.tsx","modules/river/actionTypes.ts","modules/river/components/ShowRiverButton.tsx","modules/river/actions.ts","modules/river/components/SummaryRiver.tsx","modules/river/model.ts","modules/river/reducer.ts","modules/river/index.ts","modules/creation/selectors.ts","modules/creation/actions.ts","modules/creation/reducer.ts","modules/creation/components/ContextMenu.tsx","modules/creation/utils.ts","modules/creation/index.ts","modules/control/services/keyboardControl.ts","modules/control/components/Control.tsx","modules/control/services/mouseControl.ts","modules/control/components/ControlBar.tsx","modules/control/index.ts","scenes/ReaderScene.tsx","store.ts","index.tsx","../node_modules/pdfjs-dist/build sync"],"names":["NAME","PDF_UPLOADED","MATERIAL_LOADED","DISPLAY_STATUS","PAGE_UPDATE","ZOOM_QUEUE","MATERIAL_DATA","getAll","state","getPDF","createSelector","pdf","getRenderCritialData","currentPage","documentRef","getTotalPages","totalPages","getCurrentPage","getPageControlData","getDocumentRef","getMaterialData","materialData","getTimeStamp","materialDataTimeStamp","getMaterialSpans","materialSpans","getSpanIndex","span","indexOf","getMaterialBoundingRects","materialBoundingRects","getDataExists","timestamp","getDisplayStatus","displayStatus","displayStatusIsShow","status","getZoomQueue","zoomQueue","incrementer","counter","curCounter","expandSpan","rect","getBoundingClientRect","container","startingSpans","Array","from","querySelectorAll","length","expandedSpans","spans","boundingRects","exSpan","push","splitExpandedSpans","map","expandSpans","sort","exSpan2","y","materialUploaded","event","dispatch","files","target","type","t","payload","materialLoaded","materialRendered","tryInterval","tries","ms","func","increment","timeout","setInterval","clearInterval","captureMaterialData","getState","current","startTime","Date","now","curMaterialGroupData","emptyZoomQueue","setPage","page","pageCorrections","newPage","movePage","nextPage","previousPage","toggleDisplayState","displayState","setZoomQueue","spanIndex","zoomToCardOrigin","originSpan","focus","scrollIntoView","behavior","block","inline","pdfjs","GlobalWorkerOptions","workerSrc","version","options","cMapUrl","cMapPacked","PDFDocumentContainer","connect","parentSize","useDispatch","file","onLoadSuccess","numPages","inputRef","onItemClick","pageNumber","parseInt","width","onRenderSuccess","document","forEach","layer","style","top","left","transform","PDFUploadContainer","onUpload","onChange","accept","PreviousButton","IconButton","onClick","NextButton","ShowMaterialButton","useState","outlined","setOutlined","nonDigitRegEx","PageChooser","useSelector","error","value","toString","userInput","setState","Typography","variant","TextField","onKeyDown","key","preventDefault","submittedValue","possiblePage","trim","match","asInt","validatePageChoice","initialState","createRef","pageSpans","Infinity","actions","actionTypes","components","constants","reducer","selectors","useEventListener","eventName","handler","savedHandler","useRef","useEffect","eventListener","addEventListener","removeEventListener","FOCUS_UPDATE","getFocus","updateFocus","tryUpdateFocus","toggleContextMenuFocus","display","TOGGLE_CONTEXT_MENU","CLOSE_CONTEXT_MENU","OPEN_CONTEXT_MENU","SELECTED_STRING","SELECTED_PARENT","updateContentStrFunctions","REPLACE","_","newStr","APPEND","oldStr","creationFunctions","NOTE","oldConfig","partialUpdateFunction","content","Q","q","A","a","contentStringToConfig","contentStr","creationType","updateType","currentCard","createPartialUpdateContentStrFunction","CARD_UPDATE","CARD_PUSH","CARD_REMOVE","cards","getLastCardIDNumber","lastCardIDNumber","getCards","cardPush","cardPayload","card","cardID","cardUpdate","updateCardContent","contentString","riverID","origin","config","pushCardContent","removeCard","intialState","services","cardObj","getRiverMakeUps","riverMakeUps","getActiveRiverMakeUpID","activeRiverMakeUpID","getActiveRiverMakeUp","makeUps","id","getActiveRiverCardIDs","makeUp","cardIDs","getActiveRiverCards","makeUpCardIDs","getRiverShowState","riverShowState","riverShowStateIsShow","HybridCardField","storeValue","saveChanges","rest","mutableValue","multiline","onBlur","DeleteCardButton","JumpToOriginButton","cardOrigin","NoteCard","label","backgroundColor","InputLabelProps","color","QACard","Grid","direction","spacing","item","Card","GridDivider","Divider","CardRiverAccordion","gridItems","summary","elevation","setElevation","Accordion","defaultExpanded","onMouseEnter","onMouseLeave","AccordionSummary","AccordionDetails","justify","alignItems","ChildCardRiver","riverCards","useMemo","reduce","prev","index","arr","toCardGridItemsWithDividers","ActiveCardRiver","RIVER_SHOW_STATE","ShowRiverButton","SummaryRiver","cardConfigs","Object","values","Paper","align","pageNumberToRiverMakeUpID","active","lastRiverIDNumber","emptyCardRiver","updateStateWithMakeUps","updatedState","deactivateActiveCardRiver","removeCardFromRivers","fromEntries","entries","entry","filter","riverMakeUp","activeRiver","oldRiver","getContextMenuState","open","getContextMenuRef","menuRef","getContextMenuQARefs","qaRefs","getCurrentSelectionPosition","x","getContextMenuInitData","river","position","getCurrentSelectedString","manuallySelectedString","getCurrentSelectedParent","selectedParentSpan","toggleContextMenu","closeContextMenu","openContextMenu","triggerSelectionGrab","selectedString","isUpdate","undefined","selectedParent","updateManuallySelectedString","str","resetManuallySelectedString","creationData","NewQACard","MenuItem","NewNoteCard","SingleOptionItem","cardConfig","dispatchRiver","QAOptionItem","qaRef","parentMenuOpen","ref","CardConfigItem","ContextMenuContainer","dispatchRiverOne","partialRiverDispatch","qaRefIndex","Menu","keepMounted","anchorReference","anchorPosition","contextMenuContainsTargetNode","refObject","cur","parentNode","querySelector","contains","utils","keyEventDispatcher","keyMap","action","pageControlKeyMap","ArrowLeft","ArrowRight","contextMenuControlKeyMap","creation","focusDispatcherMap","SELECTION","CONTEXT_MENU","EDITOR","CONTROL","ControlContainer","keyDownControl","userFocus","dispatcher","mouseDownControl","mouseUpControl","selection","getSelection","selectedStr","anchorNode","ControlBar","AppBar","Toolbar","orientation","flexItem","ReaderSceneRiverColumn","ReaderSceneMaterialColumnWithSize","withSize","monitorHeight","noPlaceholder","size","ReaderScene","showMaterial","showRiver","control","rootReducer","combineReducers","creationTransform","createTransform","inboundState","outboundState","whitelist","displayTransform","persistConfig","storage","transforms","persistedReducer","persistReducer","enhancer","composeWithDevTools","stateSanitizer","displayData","composeEnhancers","applyMiddleware","thunk","store","createStore","persistor","persistStore","ReactDOM","render","StrictMode","loading","getElementById","webpackEmptyContext","req","e","Error","code","keys","resolve","module","exports"],"mappings":"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","file":"static/js/main.e3c36e08.chunk.js","sourcesContent":["export const NAME = \"displayData\";\n","import { NAME } from \"./constants\";\n\nexport const PDF_UPLOADED = NAME + \"/PDF_UPLOADED\";\nexport const MATERIAL_LOADED = NAME + \"/MATERIAL_LOADED\";\nexport const DISPLAY_STATUS = NAME + \"/DISPLAY_STATUS\";\nexport const PAGE_UPDATE = NAME + \"/PAGE_UPDATE\";\nexport const ZOOM_QUEUE = NAME + \"/ZOOM_QUEUE\";\nexport const MATERIAL_DATA = NAME + \"/MATERIAL_DATA\";\n","import { createSelector } from \"reselect\";\nimport { DisplayData, MaterialData, MaterialGroupData } from \"./model\";\nimport { NAME } from \"./constants\";\n\nexport const getAll = (state: any) => state[NAME];\n\nexport const getPDF = createSelector(getAll, (state: DisplayData) => {\n\treturn { pdf: state.pdf };\n});\n\nexport const getRenderCritialData = createSelector(getAll, (state: DisplayData) => {\n\treturn {\n\t\tpdf: state.pdf,\n\t\tcurrentPage: state.currentPage,\n\t\tdocumentRef: state.documentRef,\n\t};\n});\n\nexport const getTotalPages = createSelector(getAll, (state: DisplayData) => state.totalPages);\n\nexport const getCurrentPage = createSelector(getAll, (state: DisplayData) => state.currentPage);\n\nexport const getPageControlData = createSelector(\n\tgetTotalPages,\n\tgetCurrentPage,\n\t(totalPages: number | undefined, currentPage: number) => {\n\t\treturn { currentPage, totalPages };\n\t}\n);\n\nexport const getDocumentRef = createSelector(getAll, (state: DisplayData) => state.documentRef);\n\nexport const getMaterialData = createSelector(getAll, (state: DisplayData) => state.materialData);\n\nexport const getTimeStamp = createSelector(getMaterialData, (state: MaterialData) => state.materialDataTimeStamp);\n\nexport const getMaterialSpans = createSelector(\n\tgetMaterialData as (state: any) => MaterialGroupData,\n\t(state: MaterialGroupData) => state.materialSpans\n);\n\nexport const getSpanIndex = (state: any, span: HTMLSpanElement) => {\n\tconst spans = getMaterialSpans(state);\n\treturn spans.indexOf(span);\n};\n\nexport const getMaterialBoundingRects = createSelector(\n\tgetMaterialData as (state: any) => MaterialGroupData,\n\t(state: MaterialGroupData) => state.materialBoundingRects\n);\n\nexport const getDataExists = createSelector(getTimeStamp, (timestamp) => timestamp > 0);\n\nexport const getDisplayStatus = createSelector(getAll, (state: DisplayData) => state.displayStatus);\n\nexport const displayStatusIsShow = createSelector(getDisplayStatus, (status) => status === \"SHOW\");\n\nexport const getZoomQueue = createSelector(getAll, (state: DisplayData) => state.zoomQueue);\n","export const incrementer = () => {\n\tlet counter = 0;\n\treturn () => {\n\t\tconst curCounter = counter;\n\t\tcounter++;\n\t\treturn curCounter;\n\t};\n};\n","export const splitExpandedSpans = (expandedSpans: ExpandedSpan[]) => {\n\tconst spans = [];\n\tconst boundingRects = [];\n\n\tfor (const exSpan of expandedSpans) {\n\t\tspans.push(exSpan.span);\n\t\tboundingRects.push(exSpan.rect);\n\t}\n\n\treturn { spans, boundingRects };\n};\n\nexport const sortExpandedSpansAccordingToX = (expandedSpans: ExpandedSpan[]) =>\n\texpandedSpans.sort((exSpan, exSpan2) => exSpan.rect.x - exSpan2.rect.x);\n\nexport const sortExpandedSpansAccordingToY = (expandedSpans: ExpandedSpan[]) =>\n\texpandedSpans.sort((exSpan, exSpan2) => exSpan.rect.y - exSpan2.rect.y);\n\ntype ExpandedSpan = { span: HTMLSpanElement; rect: DOMRect };\n\nexport const expandSpans = (spans: HTMLSpanElement[]) => spans.map(expandSpan);\n\nconst expandSpan = (span: HTMLSpanElement): ExpandedSpan => {\n\treturn { span, rect: span.getBoundingClientRect() };\n};\n","import { MaterialGroupData } from \"../model\";\nimport { expandSpans, sortExpandedSpansAccordingToY, splitExpandedSpans } from \"./span\";\n\nexport const materialData = (container: HTMLDivElement): MaterialGroupData | null => {\n\t// assumes all spans inside the document are relevant (potentially multiple pages)\n\tconst startingSpans = Array.from(container.querySelectorAll(\"span\"));\n\tif (startingSpans.length === 0) return null;\n\n\tconst { spans, boundingRects } = splitExpandedSpans(sortExpandedSpansAccordingToY(expandSpans(startingSpans)));\n\n\treturn {\n\t\tmaterialSpans: spans,\n\t\tmaterialBoundingRects: boundingRects,\n\t};\n};\n","import { ChangeEvent, RefObject } from \"react\";\nimport { Dispatch } from \"redux\";\nimport * as t from \"./actionTypes\";\nimport { DisplayStatus, PageMove, MaterialData } from \"./model\";\nimport { getPageControlData, getDisplayStatus, getZoomQueue, getTimeStamp, getMaterialSpans } from \"./selectors\";\nimport { incrementer } from \"../../shared/utils\";\nimport { materialData } from \"./services/materialData\";\n\nexport const materialUploaded = (event: ChangeEvent<HTMLInputElement>) => {\n\treturn (dispatch: Dispatch) => {\n\t\tconst files = event.target.files;\n\t\tconst pdf = files ? files[0] : null;\n\t\tif (pdf) dispatch({ type: t.PDF_UPLOADED, payload: pdf });\n\t};\n};\n\nexport const materialLoaded = (totalPages: number) => {\n\treturn { type: t.MATERIAL_LOADED, payload: totalPages };\n};\n\nexport const materialRendered = (): { type: string; payload: DisplayStatus } => {\n\treturn { type: t.DISPLAY_STATUS, payload: \"SHOW\" };\n};\n\nexport const tryInterval = (tries: number, ms: number, func: () => boolean) => {\n\tconst increment = incrementer();\n\tconst timeout = setInterval(() => {\n\t\tif (increment() > tries) {\n\t\t\tclearInterval(timeout);\n\t\t\treturn;\n\t\t}\n\n\t\tif (func()) clearInterval(timeout);\n\t}, ms);\n};\n\n// text-layer is not really guaranteed to be rendered on render \"success\",\n// so we use this ugly \"try ten times\" approach\nexport function captureMaterialData(documentRef: RefObject<any>) {\n\treturn (dispatch: any, getState: Function) => {\n\t\tconst state = getState();\n\t\tconst container = documentRef.current;\n\t\tif (container) {\n\t\t\t// TODO: still possibility of race-condition,\n\t\t\t// maybe check on each section update if the number is congruent and if not actualize?\n\t\t\t// TODO: make fluid movement for changing from non-existing section on new page to existing one\n\n\t\t\tconst startTime = Date.now();\n\n\t\t\t// try once before going into intervals (most times once should work)\n\t\t\tconst curMaterialGroupData = materialData(container as HTMLDivElement);\n\t\t\tif (curMaterialGroupData && getTimeStamp(state) < startTime) {\n\t\t\t\tconst payload: MaterialData = {\n\t\t\t\t\t...curMaterialGroupData,\n\t\t\t\t\tmaterialDataTimeStamp: startTime,\n\t\t\t\t};\n\t\t\t\tdispatch({ type: t.MATERIAL_DATA, payload });\n\t\t\t\tdispatch(emptyZoomQueue());\n\t\t\t} else {\n\t\t\t\ttryInterval(10, 20, () => {\n\t\t\t\t\tconst curMaterialGroupData = materialData(container as HTMLDivElement);\n\t\t\t\t\tif (curMaterialGroupData && getTimeStamp(getState()) < startTime) {\n\t\t\t\t\t\tconst payload: MaterialData = {\n\t\t\t\t\t\t\t...curMaterialGroupData,\n\t\t\t\t\t\t\tmaterialDataTimeStamp: startTime,\n\t\t\t\t\t\t};\n\t\t\t\t\t\tdispatch({ type: t.MATERIAL_DATA, payload });\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t}\n\t\t\t\t\treturn false;\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t};\n}\n\n// assumes outside validation/correction\nexport const setPage = (page: number) => {\n\treturn { type: t.PAGE_UPDATE, payload: page };\n};\n\nconst pageCorrections = {\n\tADD: (newPage: number, totalPages: number) => (newPage === totalPages + 1 ? 1 : newPage),\n\tREMOVE: (newPage: number, totalPages: number) => (newPage === 0 ? totalPages : newPage),\n};\n\nexport const movePage = (type: PageMove) => {\n\treturn (dispatch: Dispatch, getState: Function) => {\n\t\tconst { currentPage, totalPages } = getPageControlData(getState());\n\t\tif (totalPages) {\n\t\t\tswitch (type) {\n\t\t\t\tcase \"NEXT\":\n\t\t\t\t\tdispatch({ type: t.PAGE_UPDATE, payload: pageCorrections[\"ADD\"](currentPage + 1, totalPages) });\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"PREVIOUS\":\n\t\t\t\t\tdispatch({ type: t.PAGE_UPDATE, payload: pageCorrections[\"REMOVE\"](currentPage - 1, totalPages) });\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t};\n};\nexport const nextPage = () => movePage(\"NEXT\");\nexport const previousPage = () => movePage(\"PREVIOUS\");\n\nexport const toggleDisplayState = () => {\n\treturn (dispatch: Dispatch, getState: Function) => {\n\t\tconst displayState = getDisplayStatus(getState()) === \"SHOW\" ? \"HIDE\" : \"SHOW\";\n\n\t\tdispatch({ type: t.DISPLAY_STATUS, payload: displayState });\n\t};\n};\n\nexport const setZoomQueue = (spanIndex: number | null) => {\n\treturn { type: t.ZOOM_QUEUE, payload: spanIndex };\n};\n\nexport const zoomToCardOrigin = (spanIndex: number, page: number) => {\n\treturn (dispatch: Dispatch) => {\n\t\tdispatch(setPage(page));\n\t\tdispatch(setZoomQueue(spanIndex));\n\t};\n};\n\nexport const emptyZoomQueue = () => {\n\treturn (dispatch: Dispatch, getState: Function) => {\n\t\tconst state = getState();\n\t\tconst spanIndex = getZoomQueue(state);\n\t\tif (spanIndex) {\n\t\t\tconst originSpan = getMaterialSpans(state)[spanIndex];\n\t\t\toriginSpan.focus();\n\t\t\toriginSpan.scrollIntoView({ behavior: \"smooth\", block: \"center\", inline: \"center\" });\n\n\t\t\tdispatch(setZoomQueue(null));\n\t\t}\n\t};\n};\n","import \"./PDFDocument.css\";\nimport \"./AnnotationLayer.css\";\nimport React, { RefObject } from \"react\";\nimport { pdfjs, Document, Page } from \"react-pdf\";\nimport { connect, useDispatch } from \"react-redux\";\nimport { materialLoaded, materialRendered, setPage, captureMaterialData } from \"../../actions\";\nimport { getRenderCritialData } from \"../../selectors\";\npdfjs.GlobalWorkerOptions.workerSrc = `//cdnjs.cloudflare.com/ajax/libs/pdf.js/${pdfjs.version}/pdf.worker.js`;\n\nfunction removeTextLayerOffset() {\n\tconst textLayers = document.querySelectorAll(\".react-pdf__Page__textContent\");\n\ttextLayers.forEach((layer) => {\n\t\tconst { style }: any = layer;\n\t\tstyle.top = \"0\";\n\t\tstyle.left = \"0\";\n\t\tstyle.transform = \"\";\n\t});\n}\n\nconst options = {\n\tcMapUrl: \"cmaps/\",\n\tcMapPacked: true,\n};\n\nfunction PDFDocument({\n\tparentSize,\n\tpdf,\n\tcurrentPage,\n\tmaterialRendered,\n\tmaterialLoaded,\n\tcaptureMaterialData,\n\tdocumentRef,\n}: {\n\tparentSize: any;\n\tpdf: File | undefined;\n\tcurrentPage: number;\n\tmaterialRendered: Function;\n\tmaterialLoaded: (numPages: number) => void;\n\tcaptureMaterialData: Function;\n\tdocumentRef: RefObject<any>;\n}) {\n\tconst dispatch = useDispatch();\n\treturn (\n\t\t<Document\n\t\t\tfile={pdf}\n\t\t\toptions={options}\n\t\t\tonLoadSuccess={({ numPages }) => {\n\t\t\t\tmaterialLoaded(numPages);\n\t\t\t}}\n\t\t\tinputRef={documentRef}\n\t\t\tonItemClick={({ pageNumber }) => {\n\t\t\t\tdispatch(setPage(parseInt(pageNumber)));\n\t\t\t}}\n\t\t>\n\t\t\t{pdf && (\n\t\t\t\t<Page\n\t\t\t\t\twidth={parentSize.width}\n\t\t\t\t\tpageNumber={currentPage}\n\t\t\t\t\tonRenderSuccess={() => {\n\t\t\t\t\t\tremoveTextLayerOffset();\n\t\t\t\t\t\tmaterialRendered();\n\t\t\t\t\t\tcaptureMaterialData(documentRef);\n\t\t\t\t\t}}\n\t\t\t\t/>\n\t\t\t)}\n\t\t</Document>\n\t);\n}\n\nexport const PDFDocumentContainer = connect(getRenderCritialData, {\n\tmaterialRendered,\n\tmaterialLoaded,\n\tcaptureMaterialData,\n})(PDFDocument);\n","import { connect } from \"react-redux\";\nimport React, { ChangeEvent } from \"react\";\nimport { materialUploaded } from \"../actions\";\nimport { getPDF } from \"../selectors\";\n\nfunction PDFUpload({\n\tpdf,\n\tonUpload,\n}: {\n\tpdf: File | undefined;\n\tonUpload: (event: ChangeEvent<HTMLInputElement>) => void;\n}) {\n\treturn pdf ? null : <input onChange={onUpload} type=\"file\" accept=\".pdf\" />;\n}\n\nexport const PDFUploadContainer = connect(getPDF, { onUpload: materialUploaded })(PDFUpload);\n","import React from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { IconButton } from \"@material-ui/core\";\nimport ArrowForwardIosIcon from \"@material-ui/icons/ArrowForwardIos\";\nimport ArrowBackIosIcon from \"@material-ui/icons/ArrowBackIos\";\nimport { nextPage, previousPage } from \"../actions\";\n\nexport const PreviousButton = () => {\n\tconst dispatch = useDispatch();\n\treturn (\n\t\t<IconButton\n\t\t\ttype=\"button\"\n\t\t\tonClick={() => {\n\t\t\t\tdispatch(previousPage());\n\t\t\t}}\n\t\t>\n\t\t\t<ArrowBackIosIcon></ArrowBackIosIcon>\n\t\t</IconButton>\n\t);\n};\n\nexport const NextButton = () => {\n\tconst dispatch = useDispatch();\n\treturn (\n\t\t<IconButton\n\t\t\ttype=\"button\"\n\t\t\tonClick={() => {\n\t\t\t\tdispatch(nextPage());\n\t\t\t}}\n\t\t>\n\t\t\t<ArrowForwardIosIcon></ArrowForwardIosIcon>\n\t\t</IconButton>\n\t);\n};\n","import { useState } from \"react\";\nimport DescriptionOutlinedIcon from \"@material-ui/icons/DescriptionOutlined\";\nimport DescriptionTwoToneIcon from \"@material-ui/icons/DescriptionTwoTone\";\nimport React from \"react\";\nimport { IconButton } from \"@material-ui/core\";\nimport { useDispatch } from \"react-redux\";\nimport { toggleDisplayState } from \"../actions\";\n\nexport const ShowMaterialButton = () => {\n\tconst [outlined, setOutlined] = useState(true);\n\tconst dispatch = useDispatch();\n\n\treturn (\n\t\t<IconButton\n\t\t\ttype=\"button\"\n\t\t\tonClick={() => {\n\t\t\t\tdispatch(toggleDisplayState());\n\t\t\t\tsetOutlined(!outlined);\n\t\t\t}}\n\t\t>\n\t\t\t{outlined ? (\n\t\t\t\t<DescriptionOutlinedIcon></DescriptionOutlinedIcon>\n\t\t\t) : (\n\t\t\t\t<DescriptionTwoToneIcon></DescriptionTwoToneIcon>\n\t\t\t)}\n\t\t</IconButton>\n\t);\n};\n","import React, { useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Typography, TextField } from \"@material-ui/core\";\nimport { setPage } from \"../../actions\";\nimport { getPageControlData } from \"../../selectors\";\n\nconst nonDigitRegEx = /(\\D)/;\n\nexport const validatePageChoice = (possiblePage: string, totalPages: number) => {\n\tif (possiblePage === \"\" || possiblePage.trim().match(nonDigitRegEx) !== null) return false;\n\n\tconst asInt = parseInt(possiblePage);\n\tif (asInt < 1 || totalPages < asInt) return false;\n\n\treturn true;\n};\n\nexport const PageChooser = () => {\n\tconst dispatch = useDispatch();\n\t// parent only renders this component if these values exist\n\tconst { currentPage, totalPages }: { currentPage?: number; totalPages?: number } = useSelector(getPageControlData);\n\n\tconst [state, setState] = useState({\n\t\terror: false,\n\t\tvalue: currentPage?.toString(),\n\t\tuserInput: currentPage?.toString(),\n\t});\n\n\t// with this we can trigger a re-render onChange,\n\t// while making sure that if a new currentPage arrives, we reset the component\n\tif (state.value !== currentPage.toString()) {\n\t\tsetState({ error: false, value: currentPage.toString(), userInput: currentPage.toString() });\n\t}\n\n\treturn (\n\t\t<Typography variant=\"h6\">\n\t\t\t<TextField\n\t\t\t\ttype=\"text\"\n\t\t\t\tvariant=\"filled\"\n\t\t\t\tvalue={state.userInput}\n\t\t\t\tonKeyDown={(event) => {\n\t\t\t\t\tif (event.key === \"Enter\") {\n\t\t\t\t\t\tevent.preventDefault();\n\t\t\t\t\t\tconst submittedValue = (event.target as HTMLFormElement).value;\n\t\t\t\t\t\tif (!state.error) {\n\t\t\t\t\t\t\tdispatch(setPage(parseInt(submittedValue)));\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}}\n\t\t\t\tonChange={(event) => {\n\t\t\t\t\tconst submittedValue = (event.target as HTMLTextAreaElement).value;\n\t\t\t\t\tif (validatePageChoice(submittedValue, totalPages as number)) {\n\t\t\t\t\t\tsetState({ ...state, error: false, userInput: submittedValue });\n\t\t\t\t\t} else {\n\t\t\t\t\t\tsetState({ ...state, error: true, userInput: submittedValue });\n\t\t\t\t\t}\n\t\t\t\t}}\n\t\t\t\terror={state.error}\n\t\t\t/>\n\t\t\tof {totalPages}\n\t\t</Typography>\n\t);\n};\n","import * as t from \"./actionTypes\";\nimport type { DisplayData, DisplayStatus, MaterialGroupData } from \"./model\";\nimport { createRef } from \"react\";\n\nconst initialState: DisplayData = {\n\tdisplayStatus: \"SHOW\",\n\tcurrentPage: 1,\n\tdocumentRef: createRef(),\n\tpageSpans: {},\n\tzoomQueue: null,\n\tmaterialData: { materialDataTimeStamp: -Infinity },\n};\n\nconst displayData = (state = initialState, { type, payload }: { type: string; payload: any }): DisplayData => {\n\tswitch (type) {\n\t\tcase t.PDF_UPLOADED:\n\t\t\treturn { ...state, pdf: payload as File };\n\t\tcase t.MATERIAL_LOADED:\n\t\t\treturn { ...state, totalPages: payload as number };\n\t\tcase t.PAGE_UPDATE:\n\t\t\treturn { ...state, currentPage: payload as number };\n\t\tcase t.DISPLAY_STATUS:\n\t\t\treturn { ...state, displayStatus: payload as DisplayStatus };\n\t\tcase t.MATERIAL_DATA:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tmaterialData: payload,\n\t\t\t\tpageSpans: { ...state.pageSpans, [state.currentPage]: (payload as MaterialGroupData).materialSpans.length - 1 },\n\t\t\t};\n\t\tdefault:\n\t\t\treturn state;\n\t}\n};\n\nexport default displayData;\n","import * as actions from \"./actions\";\nimport * as actionTypes from \"./actionTypes\";\nimport * as components from \"./components\";\nimport * as constants from \"./constants\";\nimport reducer from \"./reducer\";\nimport * as selectors from \"./selectors\";\n\nexport default { actions, actionTypes, components, constants, reducer, selectors };\n","import { useRef, useEffect, MutableRefObject } from \"react\";\n\n// only global eventListener for now\nexport const useEventListener = (eventName: string, handler: any) => {\n\tconst savedHandler: MutableRefObject<Function> = useRef(() => {});\n\n\tuseEffect(() => {\n\t\tsavedHandler.current = handler;\n\t}, [handler]);\n\n\tuseEffect(() => {\n\t\tconst eventListener = (event: Event) => savedHandler.current(event);\n\t\tdocument.addEventListener(eventName, eventListener);\n\t\treturn () => {\n\t\t\tdocument.removeEventListener(eventName, eventListener);\n\t\t};\n\t}, [eventName]);\n};\n","export const NAME = \"userFocus\";\n","import { NAME } from \"./constants\";\n\nexport const FOCUS_UPDATE = NAME + \"/FOCUS_UPDATE\";\n","import { createSelector } from \"reselect\";\nimport { NAME } from \"./constants\";\nimport { FocusState } from \"./model\";\n\nexport const getAll = (state: any) => state[NAME];\n\nexport const getFocus = createSelector(getAll, (state: FocusState) => state.focus);\n","import * as t from \"./actionTypes\";\nimport { UserFocus } from \"./model\";\nimport { Dispatch } from \"redux\";\nimport { getFocus } from \"./selectors\";\nimport display from \"../display\";\n\nexport const updateFocus = (focus: UserFocus) => {\n\treturn { type: t.FOCUS_UPDATE, payload: focus };\n};\n\nexport const tryUpdateFocus = (focus: UserFocus) => {\n\treturn (dispatch: Dispatch, getState: Function) => {\n\t\tif (getFocus(getState()) !== focus) dispatch(updateFocus(focus));\n\t};\n};\n\nexport const toggleContextMenuFocus = () => {\n\treturn (dispatch: Dispatch, getState: Function) => {\n\t\tconst state = getState();\n\t\tif (display.selectors.getDataExists(state)) {\n\t\t\tconst currentFocus = getFocus(getState());\n\t\t\tswitch (currentFocus) {\n\t\t\t\tcase \"CONTEXT_MENU\":\n\t\t\t\t\tdispatch(updateFocus(\"SELECTION\"));\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"SELECTION\":\n\t\t\t\t\tdispatch(updateFocus(\"CONTEXT_MENU\"));\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t};\n};\n","import { FocusState, UserFocus } from \"./model\";\nimport * as t from \"./actionTypes\";\n\nconst initialState: FocusState = { focus: \"CONTROL\" };\n\nconst focus = (state = initialState, { type, payload }: { type: string; payload: any }): FocusState => {\n\tswitch (type) {\n\t\tcase t.FOCUS_UPDATE:\n\t\t\treturn { ...state, focus: payload as UserFocus };\n\t\tdefault:\n\t\t\treturn state;\n\t}\n};\n\nexport default focus;\n","import * as actions from \"./actions\";\nimport * as constants from \"./constants\";\nimport reducer from \"./reducer\";\nimport * as selectors from \"./selectors\";\n\nexport default { actions, constants, reducer, selectors };\n","export const NAME = \"creationData\";\n","import { NAME } from \"./constants\";\n\nexport const TOGGLE_CONTEXT_MENU = NAME + \"/TOGGLE_CONTEXT_MENU\";\nexport const CLOSE_CONTEXT_MENU = NAME + \"/CLOSE_CONTEXT_MENU\";\nexport const OPEN_CONTEXT_MENU = NAME + \"/OPEN_CONTEXT_MENU\";\nexport const SELECTED_STRING = NAME + \"/SELECTED_STRING\";\nexport const SELECTED_PARENT = NAME + \"/SELECTED_PARENT\";\n","import { UpdateType, CardPayloadConfig, CreationType, QACardContent, CardType } from \"../model\";\n\ntype updateContentStrFunction = (oldStr: string, newStr: string) => string;\n\ntype partialUpdateContentStrFunction = (oldStr: string) => string;\n\nconst updateContentStrFunctions: { [key in UpdateType]: updateContentStrFunction } = {\n\tREPLACE: (_: string, newStr: string) => newStr,\n\tAPPEND: (oldStr: string, newStr: string) => oldStr + newStr,\n};\n\nconst createPartialUpdateContentStrFunction = (updateType: UpdateType, newStr: string) => (oldStr: string) =>\n\tupdateContentStrFunctions[updateType](oldStr, newStr);\n\ntype creationFunction = (\n\toldConfig: CardPayloadConfig,\n\tpartialUpdateFunction: partialUpdateContentStrFunction\n) => CardPayloadConfig;\n\nconst defaultCreationFunction: creationFunction = (oldConfig, partialUpdateFunction) => {\n\treturn { ...oldConfig, content: partialUpdateFunction(oldConfig.content as string) };\n};\n\nconst creationFunctions: {\n\t[key in CreationType]: creationFunction;\n} = {\n\tNOTE: defaultCreationFunction,\n\tQ: (oldConfig, partialUpdateFunction) => {\n\t\tconst content = oldConfig.content as QACardContent;\n\t\treturn { ...oldConfig, content: { ...content, q: partialUpdateFunction(content.q) } };\n\t},\n\tA: (oldConfig, partialUpdateFunction) => {\n\t\tconst content = oldConfig.content as QACardContent;\n\t\treturn { ...oldConfig, content: { ...content, a: partialUpdateFunction(content.a) } };\n\t},\n};\n\nexport const contentStringToConfig = (\n\tcontentStr: string,\n\ttype: CardType,\n\tcreationType: CreationType,\n\tupdateType: UpdateType,\n\tcurrentCard?: CardPayloadConfig\n): CardPayloadConfig => {\n\tconst partialUpdateFunction = createPartialUpdateContentStrFunction(updateType, contentStr);\n\tconst isCardUpdate = !!currentCard;\n\treturn isCardUpdate\n\t\t? creationFunctions[creationType](currentCard as CardPayloadConfig, partialUpdateFunction)\n\t\t: creationFunctions[creationType]({ type, content: type === \"Q-A\" ? { q: \"\", a: \"\" } : \"\" }, partialUpdateFunction);\n};\n","export const NAME = \"cards\";\n","import { NAME } from \"./constants\";\n\nexport const CARD_UPDATE = NAME + \"/CARD_UPDATE\";\nexport const CARD_PUSH = NAME + \"/CARD_PUSH\";\nexport const CARD_REMOVE = NAME + \"/CARD_REMOVE\";\n","import { createSelector } from \"reselect\";\nimport { CardsState } from \"./model\";\n\nexport const getAll = (state: any) => state.cards as CardsState;\n\nexport const getLastCardIDNumber = createSelector(getAll, (state) => state.lastCardIDNumber);\n\nexport const getCards = createSelector(getAll, (state: CardsState) => state.cards);\n","import { CardPayload, FinalizedCardPayload, CreationType, UpdateType, CardType, CardOrigin } from \"./model\";\nimport * as t from \"./actionTypes\";\nimport { Dispatch } from \"redux\";\nimport { getLastCardIDNumber, getCards } from \"./selectors\";\nimport { contentStringToConfig } from \"./services/config\";\n\nconst createCardID = (lastCardIDNumber: number) => (lastCardIDNumber + 1).toString();\n\nexport const cardPush = (cardPayload: CardPayload) => {\n\treturn (dispatch: Dispatch, getState: Function) => {\n\t\tdispatch({\n\t\t\ttype: t.CARD_PUSH,\n\t\t\tpayload: {\n\t\t\t\t...cardPayload,\n\t\t\t\tcard: { ...cardPayload.card, cardID: createCardID(getLastCardIDNumber(getState())) },\n\t\t\t} as FinalizedCardPayload,\n\t\t});\n\t};\n};\n\nexport const cardUpdate = (card: CardPayload) => {\n\treturn { type: t.CARD_UPDATE, payload: card };\n};\n\nexport const updateCardContent = (\n\tcontentString: string,\n\tcardID: string,\n\tcreationType: CreationType,\n\tupdateType: UpdateType,\n\triverID: string,\n\torigin?: CardOrigin\n) => {\n\treturn (dispatch: Dispatch, getState: Function) => {\n\t\tconst state = getState();\n\n\t\tconst currentCard = getCards(state)[cardID as string];\n\t\tconst config = contentStringToConfig(contentString, currentCard.type, creationType, updateType, currentCard);\n\n\t\tdispatch(\n\t\t\tcardUpdate({\n\t\t\t\triverID,\n\t\t\t\tcard: origin ? { ...config, origin } : config,\n\t\t\t})\n\t\t);\n\t};\n};\n\nexport const pushCardContent = (\n\tcontentString: string,\n\tcreationType: CreationType,\n\tupdateType: UpdateType,\n\triverID: string,\n\ttype: CardType,\n\torigin?: CardOrigin\n) => {\n\tconst config = contentStringToConfig(contentString, type, creationType, updateType);\n\treturn origin ? cardPush({ riverID, card: { ...config, origin } }) : cardPush({ riverID, card: config });\n};\n\nexport const removeCard = (cardID: string) => {\n\treturn { type: t.CARD_REMOVE, payload: cardID };\n};\n","import * as t from \"./actionTypes\";\nimport { CardsState, FinalizedCardPayload } from \"./model\";\n\nconst intialState: CardsState = {\n\tcards: {\n\t\t\"0\": { cardID: \"0\", type: \"Q-A\", content: { q: \"Was ist der Sinn des Lebens?\", a: \"42\" } },\n\t\t\"1\": { cardID: \"1\", type: \"Q-A\", content: { q: \"Welches Layout macht mehr Sinn?\", a: \"??\" } },\n\t\t\"2\": { cardID: \"2\", type: \"Note\", content: \"Note here\" },\n\t},\n\tlastCardIDNumber: 2,\n};\n\nconst removeCard = (state: CardsState, cardID: string) => {\n\tconst cards = { ...state.cards };\n\n\t// we do not reset the ID counter\n\n\tdelete cards[cardID];\n\n\treturn { ...state, cards };\n};\n\nconst cards = (state = intialState, { type, payload }: { type: string; payload?: any }) => {\n\tlet cardID;\n\tlet cardObj;\n\tswitch (type) {\n\t\tcase t.CARD_PUSH:\n\t\t\tconst lastCardIDNumber = state.lastCardIDNumber + 1;\n\n\t\t\tcardObj = { ...state.cards };\n\t\t\tcardObj[(payload as FinalizedCardPayload).card.cardID] = (payload as FinalizedCardPayload).card;\n\n\t\t\treturn { ...state, cards: cardObj, lastCardIDNumber };\n\t\tcase t.CARD_UPDATE:\n\t\t\tcardID = (payload as FinalizedCardPayload).card.cardID as string;\n\t\t\tcardObj = { ...state.cards };\n\t\t\tcardObj[cardID] = (payload as FinalizedCardPayload).card;\n\n\t\t\treturn { ...state, cards: cardObj };\n\t\tcase t.CARD_REMOVE:\n\t\t\treturn removeCard(state, payload as string);\n\t\tdefault:\n\t\t\treturn state;\n\t}\n};\n\nexport default cards;\n","import * as services from \"./services\";\nimport * as constants from \"./constants\";\nimport * as actionTypes from \"./actionTypes\";\nimport * as actions from \"./actions\";\nimport * as selectors from \"./selectors\";\nimport reducer from \"./reducer\";\n\nexport default { services, constants, actionTypes, actions, reducer, selectors };\n","export const NAME = \"cardRiverState\";\n","import { NAME } from \"./constants\";\nimport { createSelector } from \"reselect\";\nimport { CardRiverState } from \"./model\";\nimport cards from \"../cards\";\n\nexport const getAll = (state: any) => state[NAME];\n\nexport const getRiverMakeUps = createSelector(getAll, (state: CardRiverState) => state.riverMakeUps);\n\nexport const getActiveRiverMakeUpID = createSelector(getAll, (state: CardRiverState) => state.activeRiverMakeUpID);\n\nexport const getActiveRiverMakeUp = createSelector(\n\tgetRiverMakeUps,\n\tgetActiveRiverMakeUpID,\n\t(makeUps, id) => makeUps[id]\n);\n\nexport const getActiveRiverCardIDs = createSelector(getActiveRiverMakeUp, (makeUp) => makeUp.cardIDs);\n\nexport const getActiveRiverCards = createSelector(\n\tgetActiveRiverCardIDs,\n\tcards.selectors.getCards,\n\t(makeUpCardIDs, cards) => makeUpCardIDs.map((id) => cards[id])\n);\n\nexport const getRiverShowState = createSelector(getAll, (state: CardRiverState) => state.riverShowState);\n\nexport const riverShowStateIsShow = createSelector(getRiverShowState, (state) => state === \"SHOW\");\n","import React, { useState } from \"react\";\nimport { TextField, TextFieldProps } from \"@material-ui/core\";\nimport focus from \"../../focus\";\nimport { useDispatch } from \"react-redux\";\n\nexport const HybridCardField = ({\n\tstoreValue = \"\",\n\tsaveChanges,\n\tstyle,\n\t...rest\n}: {\n\tstoreValue?: string;\n\tsaveChanges: (value: string) => void;\n\tstyle: any;\n} & TextFieldProps) => {\n\tconst dispatch = useDispatch();\n\tconst [state, setState] = useState({ storeValue, mutableValue: storeValue });\n\n\t// reset if new storeValue, otherwise keep user-mutated value\n\tif (state.storeValue !== storeValue) {\n\t\tsetState({ storeValue, mutableValue: storeValue });\n\t}\n\n\t// need the onChange-pattern, because we want to be able to pre-fill the field from the store\n\treturn (\n\t\t<TextField\n\t\t\tmultiline\n\t\t\tonClick={() => {\n\t\t\t\tdispatch(focus.actions.tryUpdateFocus(\"EDITOR\"));\n\t\t\t}}\n\t\t\tvariant=\"filled\"\n\t\t\tvalue={state.mutableValue}\n\t\t\tonChange={(event) => {\n\t\t\t\tconst submittedValue = (event.target as HTMLTextAreaElement).value;\n\t\t\t\tsetState({ ...state, mutableValue: submittedValue });\n\t\t\t}}\n\t\t\tonBlur={(event: any) => {\n\t\t\t\tsaveChanges(event.target.value);\n\t\t\t}}\n\t\t\tstyle={style}\n\t\t\t{...rest}\n\t\t></TextField>\n\t);\n};\n","import DeleteForeverIcon from \"@material-ui/icons/DeleteForever\";\nimport React from \"react\";\nimport { IconButton } from \"@material-ui/core\";\nimport { useDispatch } from \"react-redux\";\nimport cards from \"../../cards\";\n\n//TODO: Undo / Redo for Card-Deletions\n//TODO: make confirmation overlap\n\nexport const DeleteCardButton = ({ cardID }: { cardID: string }) => {\n\tconst dispatch = useDispatch();\n\treturn (\n\t\t<IconButton\n\t\t\ttype=\"button\"\n\t\t\tonClick={() => {\n\t\t\t\tdispatch(cards.actions.removeCard(cardID));\n\t\t\t}}\n\t\t>\n\t\t\t<DeleteForeverIcon></DeleteForeverIcon>\n\t\t</IconButton>\n\t);\n};\n","import FindInPageIcon from \"@material-ui/icons/FindInPage\";\nimport React from \"react\";\nimport { IconButton } from \"@material-ui/core\";\nimport { useDispatch } from \"react-redux\";\nimport display from \"../../display\";\nimport { CardOrigin } from \"../../cards/model\";\n\nexport const JumpToOriginButton = ({ cardOrigin }: { cardOrigin: CardOrigin }) => {\n\tconst dispatch = useDispatch();\n\treturn (\n\t\t<IconButton\n\t\t\ttype=\"button\"\n\t\t\tonClick={() => {\n\t\t\t\tdispatch(display.actions.zoomToCardOrigin(cardOrigin.spanIndex, cardOrigin.page));\n\t\t\t}}\n\t\t>\n\t\t\t<FindInPageIcon></FindInPageIcon>\n\t\t</IconButton>\n\t);\n};\n","import Grid from \"@material-ui/core/Grid\";\nimport React from \"react\";\nimport { HybridCardField } from \"./HybridCardField\";\nimport { CardConfig, QACardContent } from \"../../cards/model\";\nimport { useDispatch } from \"react-redux\";\nimport cards from \"../../cards\";\nimport { DeleteCardButton } from \"./DeleteCardButton\";\nimport { JumpToOriginButton } from \"./JumpToOriginButton\";\n\n//TODO: mouse-up in editor should not trigger context menu, because I cant delete selections then, better use the Pinsel-Idea for inside the card\n\n//TODO: make full cards be not visible to the context menu by default (need to unmark them or sub-menu)\n\ntype CardProps = { config: CardConfig; riverID: string };\n\nconst NoteCard = ({ config, riverID }: CardProps) => {\n\tconst dispatch = useDispatch();\n\n\treturn (\n\t\t<div>\n\t\t\t<HybridCardField\n\t\t\t\tsaveChanges={(value) => {\n\t\t\t\t\tdispatch(cards.actions.updateCardContent(value, config.cardID, \"NOTE\", \"REPLACE\", riverID));\n\t\t\t\t}}\n\t\t\t\tstoreValue={config.content as string}\n\t\t\t\tlabel=\"Note\"\n\t\t\t\tvariant=\"filled\"\n\t\t\t\tstyle={{ backgroundColor: \"#CBF3F0\" }}\n\t\t\t\tInputLabelProps={{ style: { color: \"#000000\" } }}\n\t\t\t></HybridCardField>\n\t\t\t<DeleteCardButton cardID={config.cardID}></DeleteCardButton>\n\t\t\t{config.origin && <JumpToOriginButton cardOrigin={config.origin}></JumpToOriginButton>}\n\t\t</div>\n\t);\n};\n\nconst QACard = ({ config, riverID }: CardProps) => {\n\tconst dispatch = useDispatch();\n\n\treturn (\n\t\t<Grid container direction=\"column\" spacing={1}>\n\t\t\t<Grid item>\n\t\t\t\t<HybridCardField\n\t\t\t\t\tsaveChanges={(value) => {\n\t\t\t\t\t\tdispatch(cards.actions.updateCardContent(value, config.cardID, \"Q\", \"REPLACE\", riverID));\n\t\t\t\t\t}}\n\t\t\t\t\tstoreValue={(config.content as QACardContent).q}\n\t\t\t\t\tlabel={\"Question\"}\n\t\t\t\t\tvariant=\"filled\"\n\t\t\t\t\tstyle={{ backgroundColor: \"#FFBF69\" }}\n\t\t\t\t\tInputLabelProps={{ style: { color: \"#000000\" } }}\n\t\t\t\t></HybridCardField>\n\t\t\t</Grid>\n\t\t\t<Grid item>\n\t\t\t\t<HybridCardField\n\t\t\t\t\tsaveChanges={(value) => {\n\t\t\t\t\t\tdispatch(cards.actions.updateCardContent(value, config.cardID, \"A\", \"REPLACE\", riverID));\n\t\t\t\t\t}}\n\t\t\t\t\tstoreValue={(config.content as QACardContent).a}\n\t\t\t\t\tlabel={\"Answer\"}\n\t\t\t\t\tvariant=\"filled\"\n\t\t\t\t\tstyle={{ backgroundColor: \"#2EC4B6\" }}\n\t\t\t\t\tInputLabelProps={{ style: { color: \"#000000\" } }}\n\t\t\t\t></HybridCardField>\n\t\t\t</Grid>\n\t\t\t<Grid item>\n\t\t\t\t<DeleteCardButton cardID={config.cardID}></DeleteCardButton>\n\t\t\t\t{config.origin && <JumpToOriginButton cardOrigin={config.origin}></JumpToOriginButton>}\n\t\t\t</Grid>\n\t\t</Grid>\n\t);\n};\n\nexport const Card = ({ config, riverID }: CardProps) => {\n\tswitch (config.type) {\n\t\tcase \"Note\":\n\t\t\treturn <NoteCard config={config} riverID={riverID}></NoteCard>;\n\t\tcase \"Q-A\":\n\t\t\treturn <QACard config={config} riverID={riverID}></QACard>;\n\t}\n};\n","import Grid from \"@material-ui/core/Grid\";\nimport React from \"react\";\nimport { incrementer } from \"../../../shared/utils\";\nimport { Card } from \"./Card\";\nimport { CardConfig } from \"../../cards/model\";\nimport { Divider } from \"@material-ui/core\";\n\nconst GridDivider = () => (\n\t<Grid item>\n\t\t<Divider></Divider>\n\t</Grid>\n);\n\nexport const toCardGridItemsWithDividers = (cards: CardConfig[], riverID: string) => {\n\tconst increment = incrementer();\n\n\treturn cards.reduce((prev, currentCard, index, arr) => {\n\t\tprev.push(\n\t\t\t<Grid item key={increment()}>\n\t\t\t\t<Card config={currentCard} riverID={riverID} key={increment()}></Card>\n\t\t\t</Grid>\n\t\t);\n\n\t\tconst notLastCard = index < arr.length - 1;\n\t\tif (notLastCard) prev.push(<GridDivider key={increment()}></GridDivider>);\n\t\treturn prev;\n\t}, [] as any[]);\n};\n","import Accordion from \"@material-ui/core/Accordion\";\nimport AccordionSummary from \"@material-ui/core/AccordionSummary\";\nimport AccordionDetails from \"@material-ui/core/AccordionDetails\";\nimport Grid from \"@material-ui/core/Grid\";\nimport React, { useState } from \"react\";\n\nexport const CardRiverAccordion = ({ gridItems, summary }: { gridItems: any; summary: string }) => {\n\tconst [elevation, setElevation] = useState(3);\n\n\treturn (\n\t\t<Accordion\n\t\t\tdefaultExpanded={true}\n\t\t\tonMouseEnter={() => {\n\t\t\t\tsetElevation(20);\n\t\t\t}}\n\t\t\tonMouseLeave={() => {\n\t\t\t\tsetElevation(3);\n\t\t\t}}\n\t\t\televation={elevation}\n\t\t>\n\t\t\t<AccordionSummary>{summary}</AccordionSummary>\n\t\t\t<AccordionDetails>\n\t\t\t\t<Grid container direction=\"column\" spacing={2} justify=\"center\" alignItems=\"stretch\">\n\t\t\t\t\t{gridItems}\n\t\t\t\t</Grid>\n\t\t\t</AccordionDetails>\n\t\t</Accordion>\n\t);\n};\n","import { CardConfig } from \"../../cards/model\";\nimport { toCardGridItemsWithDividers } from \"./toCardGridItemsWithDividers\";\nimport { useMemo } from \"react\";\nimport { CardRiverAccordion } from \"./CardRiverAccordion\";\nimport React from \"react\";\n\nexport const ChildCardRiver = ({ riverID, riverCards }: { riverID: string; riverCards: CardConfig[] }) => {\n\t// this should only change if the store values change\n\tconst gridItems = useMemo(() => toCardGridItemsWithDividers(riverCards, riverID), [riverCards, riverID]);\n\n\treturn riverCards.length > 0 ? (\n\t\t<CardRiverAccordion gridItems={gridItems} summary={riverID}></CardRiverAccordion>\n\t) : null;\n};\n","import React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { getActiveRiverCards, getActiveRiverMakeUpID } from \"../selectors\";\nimport { ChildCardRiver } from \"./ChildCardRiver\";\n\n//TODO: mark cards that are hovered over in the contextmenu, so that we see where the content would end up\n// canvas?\n\n//TODO: selection in CardRiver should stay highlighted when the contextMenu opens?\n\n//TODO: contextMenu as permant element, maybe sidebar? Selected String in ContextMenu to show what was selected?\n\n//TODO: make butto where you can choose from the Card-field in the Card-River and then select what should go in there (reverse selection idea?)\n\n//TODO, one note card, new A, new Q, SummaryNotes, jump to section\nexport const ActiveCardRiver = () => {\n\tconst riverID = useSelector(getActiveRiverMakeUpID);\n\tconst riverCards = useSelector(getActiveRiverCards);\n\n\treturn <ChildCardRiver riverID={riverID} riverCards={riverCards}></ChildCardRiver>;\n};\n","import { NAME } from \"./constants\";\n\nexport const RIVER_SHOW_STATE = NAME + \"/RIVER_SHOW_STATE\";\n","import { useState } from \"react\";\nimport SpeakerNotesOutlinedIcon from \"@material-ui/icons/SpeakerNotesOutlined\";\nimport SpeakerNotesTwoToneIcon from \"@material-ui/icons/SpeakerNotesTwoTone\";\nimport React from \"react\";\nimport { IconButton } from \"@material-ui/core\";\nimport { useDispatch } from \"react-redux\";\nimport { toggleRiverShowState } from \"../actions\";\n\nexport const ShowRiverButton = () => {\n\tconst [outlined, setOutlined] = useState(true);\n\tconst dispatch = useDispatch();\n\treturn (\n\t\t<IconButton\n\t\t\ttype=\"button\"\n\t\t\tonClick={() => {\n\t\t\t\tdispatch(toggleRiverShowState());\n\t\t\t\tsetOutlined(!outlined);\n\t\t\t}}\n\t\t>\n\t\t\t{outlined ? (\n\t\t\t\t<SpeakerNotesOutlinedIcon></SpeakerNotesOutlinedIcon>\n\t\t\t) : (\n\t\t\t\t<SpeakerNotesTwoToneIcon></SpeakerNotesTwoToneIcon>\n\t\t\t)}\n\t\t</IconButton>\n\t);\n};\n","import * as t from \"./actionTypes\";\nimport { riverShowStateIsShow } from \"./selectors\";\nimport { Dispatch } from \"redux\";\n\nexport const toggleRiverShowState = () => (dispatch: Dispatch, getState: Function) => {\n\tdispatch({ type: t.RIVER_SHOW_STATE, payload: riverShowStateIsShow(getState()) ? \"HIDE\" : \"SHOW\" });\n};\n","import { Paper, Typography } from \"@material-ui/core\";\nimport { useSelector } from \"react-redux\";\nimport { getRiverMakeUps } from \"../selectors\";\nimport React from \"react\";\nimport cards from \"../../cards\";\nimport { ChildCardRiver } from \"./ChildCardRiver\";\n\n//TODO: SummaryRiver \"searchable\", so that you can zoom to certain rivers and also look at them next to each other\n\nexport const SummaryRiver = () => {\n\tconst cardConfigs = useSelector(cards.selectors.getCards);\n\tconst riverMakeUps = Object.values(useSelector(getRiverMakeUps));\n\n\treturn (\n\t\t<Paper elevation={5}>\n\t\t\t<Typography variant=\"h4\" align=\"center\">\n\t\t\t\tSummaryRiver\n\t\t\t</Typography>\n\t\t\t{riverMakeUps.map((makeUp) => (\n\t\t\t\t<ChildCardRiver\n\t\t\t\t\triverID={makeUp.riverID}\n\t\t\t\t\triverCards={makeUp.cardIDs.length > 0 ? makeUp.cardIDs.map((id) => cardConfigs[id]) : []}\n\t\t\t\t></ChildCardRiver>\n\t\t\t))}\n\t\t</Paper>\n\t);\n};\n","export type RiverMakeUp = { riverID: string; cardIDs: string[]; active: boolean };\n\ntype RiverMakeUps = { [riverID: string]: RiverMakeUp };\n\nexport type RiverShowState = \"SHOW\" | \"HIDE\";\n\nexport type CardRiverState = {\n\triverMakeUps: RiverMakeUps;\n\tactiveRiverMakeUpID: string;\n\tlastRiverIDNumber: number;\n\triverShowState: RiverShowState;\n};\n\nexport const pageNumberToRiverMakeUpID = (page: number) => \"CardRiver \" + page;\n","import { CardRiverState, RiverShowState, pageNumberToRiverMakeUpID, RiverMakeUp } from \"./model\";\nimport { FinalizedCardPayload } from \"../cards/model\";\nimport cards from \"../cards\";\nimport * as t from \"./actionTypes\";\nimport display from \"../display\";\n\nconst intialState: CardRiverState = {\n\triverMakeUps: {\n\t\t[pageNumberToRiverMakeUpID(1)]: {\n\t\t\triverID: pageNumberToRiverMakeUpID(1),\n\t\t\tcardIDs: [\"2\", \"0\", \"1\"],\n\t\t\tactive: true,\n\t\t},\n\t},\n\tactiveRiverMakeUpID: pageNumberToRiverMakeUpID(1),\n\tlastRiverIDNumber: 1,\n\triverShowState: \"SHOW\",\n};\n\nconst emptyCardRiver = (page: number): RiverMakeUp => {\n\treturn {\n\t\triverID: pageNumberToRiverMakeUpID(page),\n\t\tcardIDs: [],\n\t\tactive: true,\n\t};\n};\n\nconst updateStateWithMakeUps = (state: CardRiverState, ...makeUps: RiverMakeUp[]) => {\n\tconst updatedState = { ...state };\n\tmakeUps.forEach((makeUp) => {\n\t\tupdatedState.riverMakeUps[makeUp.riverID] = makeUp;\n\t});\n\treturn updatedState;\n};\n\nconst deactivateActiveCardRiver = (state: CardRiverState) => {\n\treturn { ...state.riverMakeUps[state.activeRiverMakeUpID], active: false };\n};\n\nconst removeCardFromRivers = (state: CardRiverState, cardID: string): CardRiverState => {\n\tconst riverMakeUps = Object.fromEntries(\n\t\tObject.entries(state.riverMakeUps).map((entry) => [\n\t\t\tentry[0],\n\t\t\t{ ...entry[1], cardIDs: entry[1].cardIDs.filter((id) => id !== cardID) },\n\t\t])\n\t);\n\treturn { ...state, riverMakeUps };\n};\n\nconst cardRiverState = (state = intialState, { type, payload }: { type: string; payload: any }) => {\n\tlet riverMakeUp;\n\tlet riverMakeUps;\n\tswitch (type) {\n\t\tcase display.actionTypes.PAGE_UPDATE:\n\t\t\tlet activeRiver;\n\t\t\tif (!state.riverMakeUps[pageNumberToRiverMakeUpID(payload as number)]) {\n\t\t\t\tactiveRiver = emptyCardRiver(payload as number);\n\t\t\t} else {\n\t\t\t\tactiveRiver = { ...state.riverMakeUps[pageNumberToRiverMakeUpID(payload as number)], active: true };\n\t\t\t}\n\n\t\t\tconst oldRiver = deactivateActiveCardRiver(state);\n\n\t\t\treturn { ...updateStateWithMakeUps(state, activeRiver, oldRiver), activeRiverMakeUpID: activeRiver.riverID };\n\n\t\tcase cards.actionTypes.CARD_PUSH:\n\t\t\triverMakeUp = {\n\t\t\t\t...state.riverMakeUps[(payload as FinalizedCardPayload).riverID],\n\t\t\t\tcardIDs: [\n\t\t\t\t\t...state.riverMakeUps[(payload as FinalizedCardPayload).riverID].cardIDs,\n\t\t\t\t\t(payload as FinalizedCardPayload).card.cardID,\n\t\t\t\t],\n\t\t\t};\n\t\t\triverMakeUps = { ...state.riverMakeUps };\n\t\t\triverMakeUps[(payload as FinalizedCardPayload).riverID] = riverMakeUp;\n\n\t\t\treturn { ...state, riverMakeUps: riverMakeUps };\n\t\tcase cards.actionTypes.CARD_REMOVE:\n\t\t\treturn removeCardFromRivers(state, payload as string);\n\t\tcase t.RIVER_SHOW_STATE:\n\t\t\treturn { ...state, riverShowState: payload as RiverShowState };\n\t\tdefault:\n\t\t\treturn state;\n\t}\n};\n\nexport default cardRiverState;\n","import * as constants from \"./constants\";\nimport * as components from \"./components\";\nimport reducer from \"./reducer\";\nimport * as selectors from \"./selectors\";\n\nexport default { constants, components, reducer, selectors };\n","import { NAME } from \"./constants\";\nimport { createSelector } from \"reselect\";\nimport { CreationData } from \"./model\";\nimport river from \"../river\";\n\nexport const getAll = (state: any) => state[NAME];\n\nexport const getContextMenuState = createSelector(getAll, (state: CreationData) => state.open);\n\nexport const getContextMenuRef = createSelector(getAll, (state: CreationData) => state.menuRef);\n\nexport const getContextMenuQARefs = createSelector(getAll, (state: CreationData) => state.qaRefs);\n\n//TODO: position in store\nexport const getCurrentSelectionPosition = (state: any) => {\n\treturn { x: 0, y: 0 };\n};\n\nexport const getContextMenuInitData = createSelector(\n\tgetCurrentSelectionPosition,\n\tgetContextMenuState,\n\tgetContextMenuRef,\n\tgetContextMenuQARefs,\n\triver.selectors.getActiveRiverCards,\n\t(position, state, menuRef, qaRefs, riverCards) => {\n\t\treturn { position, state, menuRef, qaRefs, riverCards };\n\t}\n);\n\nexport const getCurrentSelectedString = createSelector(getAll, (state: CreationData) => state.manuallySelectedString);\n\nexport const getCurrentSelectedParent = createSelector(getAll, (state: CreationData) => state.selectedParentSpan);\n","import * as t from \"./actionTypes\";\nimport { CardType, CreationType, CardOrigin } from \"../cards/model\";\nimport cards from \"../cards\";\nimport focus from \"../focus\";\nimport { getCurrentSelectedString, getCurrentSelectedParent } from \"./selectors\";\nimport display from \"../display\";\n\nexport const toggleContextMenu = () => {\n\treturn (dispatch: any) => {\n\t\tdispatch({ type: t.TOGGLE_CONTEXT_MENU });\n\t\tdispatch(focus.actions.toggleContextMenuFocus());\n\t};\n};\n\nexport const closeContextMenu = () => {\n\treturn (dispatch: any) => {\n\t\tdispatch({ type: t.CLOSE_CONTEXT_MENU });\n\t\tdispatch(focus.actions.updateFocus(\"SELECTION\"));\n\t};\n};\n\nexport const openContextMenu = () => {\n\treturn (dispatch: any) => {\n\t\tdispatch({ type: t.OPEN_CONTEXT_MENU });\n\t\tdispatch(focus.actions.updateFocus(\"SELECTION\"));\n\t};\n};\n\nexport const triggerSelectionGrab = (riverID: string, type: CardType, creationType: CreationType, cardID?: string) => {\n\treturn (dispatch: Function, getState: Function) => {\n\t\tdispatch(closeContextMenu());\n\n\t\tconst state = getState();\n\n\t\t//TODO: seems like a sensible default, make configurable?\n\t\tconst updateType = type === \"Q-A\" ? \"REPLACE\" : \"APPEND\";\n\n\t\tconst selectedString = getCurrentSelectedString(state);\n\t\tconst isUpdate = cardID !== undefined;\n\n\t\t//TODO: if selection is from card then copy card-origin\n\t\tconst selectedParent = getCurrentSelectedParent(state);\n\t\tconst origin: CardOrigin | undefined = selectedParent\n\t\t\t? {\n\t\t\t\t\tspanIndex: display.selectors.getSpanIndex(state, selectedParent),\n\t\t\t\t\tpage: display.selectors.getCurrentPage(state),\n\t\t\t  }\n\t\t\t: undefined;\n\n\t\tif (isUpdate) {\n\t\t\tdispatch(\n\t\t\t\tcards.actions.updateCardContent(selectedString, cardID as string, creationType, updateType, riverID, origin)\n\t\t\t);\n\t\t} else {\n\t\t\tdispatch(cards.actions.pushCardContent(selectedString, creationType, updateType, riverID, type, origin));\n\t\t}\n\t};\n};\n\nexport const updateManuallySelectedString = (str: string) => {\n\treturn { type: t.SELECTED_STRING, payload: str };\n};\n\nexport const resetManuallySelectedString = () => {\n\treturn updateManuallySelectedString(\"\");\n};\n\nexport const selectedParent = (span: null | HTMLSpanElement) => {\n\treturn { type: t.SELECTED_PARENT, payload: span };\n};\n","import * as t from \"./actionTypes\";\nimport { CreationData } from \"./model\";\nimport { createRef } from \"react\";\nimport { CardPayload } from \"../cards/model\";\nimport cards from \"../cards\";\n\nconst initialState: CreationData = {\n\topen: false,\n\tmenuRef: createRef(),\n\tqaRefs: [createRef(), createRef()],\n\tmanuallySelectedString: \"\",\n\tselectedParentSpan: null,\n};\n\nconst creationData = (state = initialState, { type, payload }: { type: string; payload: any }): CreationData => {\n\tswitch (type) {\n\t\tcase t.TOGGLE_CONTEXT_MENU:\n\t\t\treturn { ...state, open: !state.open };\n\t\tcase t.CLOSE_CONTEXT_MENU:\n\t\t\treturn { ...state, open: false };\n\t\tcase t.OPEN_CONTEXT_MENU:\n\t\t\treturn { ...state, open: true };\n\t\tcase cards.actionTypes.CARD_PUSH:\n\t\t\t//TODO: state from local storage does not have all the refs\n\t\t\t//TODO: reliance on order of refs and coupling to the fact that a new card was pushed\n\t\t\t// no support for multiple rivers\n\t\t\tif ((payload as CardPayload).card.type === \"Q-A\") return { ...state, qaRefs: [...state.qaRefs, createRef()] };\n\t\t\treturn state;\n\t\tcase t.SELECTED_STRING:\n\t\t\treturn { ...state, manuallySelectedString: payload as string };\n\t\tcase t.SELECTED_PARENT:\n\t\t\treturn { ...state, selectedParentSpan: payload };\n\t\tdefault:\n\t\t\treturn state;\n\t}\n};\n\nexport default creationData;\n","import React, { RefObject } from \"react\";\nimport Menu from \"@material-ui/core/Menu\";\nimport NestedMenuItem from \"material-ui-nested-menu-item\";\nimport { MenuItem, Divider } from \"@material-ui/core\";\nimport { useDispatch, useSelector, connect } from \"react-redux\";\nimport { getContextMenuInitData } from \"../selectors\";\nimport { triggerSelectionGrab } from \"../actions\";\nimport { incrementer } from \"../../../shared/utils\";\nimport river from \"../../river\";\nimport { CardConfig, CardType, CreationType } from \"../../cards/model\";\n\nconst NewQACard = ({ onClick }: any) => <MenuItem onClick={onClick}>New: Q-A</MenuItem>;\nconst NewNoteCard = ({ onClick }: any) => <MenuItem onClick={onClick}>New: Note</MenuItem>;\n\nconst SingleOptionItem = ({ cardConfig, dispatchRiver }: { cardConfig: CardConfig; dispatchRiver: dispatchRiver }) => (\n\t<MenuItem\n\t\tonClick={() => {\n\t\t\tdispatchRiver(cardConfig.type, \"NOTE\", cardConfig.cardID);\n\t\t}}\n\t>\n\t\t{cardConfig.type}\n\t</MenuItem>\n);\n\ntype dispatchRiver = (type: CardType, creationType: CreationType, cardID?: string | undefined) => void;\n\nconst QAOptionItem = ({\n\tcardConfig,\n\tdispatchRiver,\n\tqaRef,\n}: {\n\tcardConfig: CardConfig;\n\tdispatchRiver: dispatchRiver;\n\tqaRef: RefObject<any> | undefined;\n}) => (\n\t<NestedMenuItem label=\"Q-A\" parentMenuOpen={true}>\n\t\t<MenuItem\n\t\t\tref={qaRef}\n\t\t\tonClick={() => {\n\t\t\t\tdispatchRiver(\"Q-A\", \"Q\", cardConfig.cardID);\n\t\t\t}}\n\t\t>\n\t\t\tQ\n\t\t</MenuItem>\n\t\t<MenuItem\n\t\t\tonClick={() => {\n\t\t\t\tdispatchRiver(\"Q-A\", \"A\", cardConfig.cardID);\n\t\t\t}}\n\t\t>\n\t\t\tA\n\t\t</MenuItem>\n\t</NestedMenuItem>\n);\n\nconst CardConfigItem = ({\n\tcardConfig,\n\tdispatchRiver,\n\tqaRef,\n}: {\n\tcardConfig: CardConfig;\n\tdispatchRiver: dispatchRiver;\n\tqaRef?: RefObject<any>;\n}) => {\n\tswitch (cardConfig.type) {\n\t\tcase \"Q-A\":\n\t\t\treturn <QAOptionItem cardConfig={cardConfig} dispatchRiver={dispatchRiver} qaRef={qaRef}></QAOptionItem>;\n\t\tdefault:\n\t\t\treturn <SingleOptionItem cardConfig={cardConfig} dispatchRiver={dispatchRiver}></SingleOptionItem>;\n\t}\n};\n\nconst partialRiverDispatch = (riverID: string, dispatch: any) => {\n\treturn (type: CardType, creationType: CreationType, cardID?: string) => {\n\t\tdispatch(triggerSelectionGrab(riverID, type, creationType, cardID));\n\t};\n};\n\nfunction ContextMenu({\n\tposition,\n\tstate,\n\tmenuRef,\n\tqaRefs,\n\triverCards,\n}: {\n\tposition: { x: number; y: number };\n\tstate: boolean;\n\tmenuRef: RefObject<any>;\n\tqaRefs: RefObject<any>[];\n\triverCards: CardConfig[];\n}) {\n\tconst dispatch = useDispatch();\n\tconst riverID = useSelector(river.selectors.getActiveRiverMakeUpID);\n\tconst dispatchRiverOne = partialRiverDispatch(riverID, dispatch);\n\n\tconst increment = incrementer();\n\tconst qaRefIndex = incrementer();\n\n\t// TODO: need to check for state before rendering MenuItems,\n\t// otherwise it shows up for a split-second when switching the menu off after adding to the river\n\t// weird Race Condition even if I dispatch closeContextMenu first?\n\treturn (\n\t\t<Menu\n\t\t\tref={menuRef}\n\t\t\tkeepMounted\n\t\t\topen={state}\n\t\t\tanchorReference=\"anchorPosition\"\n\t\t\tanchorPosition={state ? { top: position.y, left: position.x } : undefined}\n\t\t>\n\t\t\t{state &&\n\t\t\t\triverCards.map((cardConfig) => (\n\t\t\t\t\t<CardConfigItem\n\t\t\t\t\t\tcardConfig={cardConfig}\n\t\t\t\t\t\tdispatchRiver={dispatchRiverOne}\n\t\t\t\t\t\tkey={increment()}\n\t\t\t\t\t\tqaRef={cardConfig.type === \"Q-A\" ? qaRefs[qaRefIndex()] : undefined}\n\t\t\t\t\t></CardConfigItem>\n\t\t\t\t))}\n\t\t\t{state && riverCards.length > 0 && <Divider />}\n\n\t\t\t<NewQACard\n\t\t\t\tonClick={() => {\n\t\t\t\t\tdispatchRiverOne(\"Q-A\", \"Q\");\n\t\t\t\t}}\n\t\t\t></NewQACard>\n\t\t\t<NewNoteCard\n\t\t\t\tonClick={() => {\n\t\t\t\t\tdispatchRiverOne(\"Note\", \"NOTE\");\n\t\t\t\t}}\n\t\t\t></NewNoteCard>\n\t\t</Menu>\n\t);\n}\n\nexport const ContextMenuContainer = connect(getContextMenuInitData)(ContextMenu);\n","import { getContextMenuRef, getContextMenuQARefs } from \"./selectors\";\n\n// the root div for the menu invisibly covers the whole screen\n// the actual div that is visible is this\nconst baseContextMenuSelector = \"div.MuiPaper-root\";\n\nexport const contextMenuContainsTargetNode = (state: any, event: Event) => {\n\tconst menuRef = getContextMenuRef(state).current;\n\n\t// the nested items are rendered under a different menu\n\t// the current api does not allow access\n\t// so the qa-refs refer to the Q-button\n\t// we check the click against his parent,\n\t// which is the div that contains the Q and A buttons\n\tconst qaRefs = getContextMenuQARefs(state)\n\t\t.map((refObject) => refObject.current)\n\t\t.filter((cur) => !!cur)\n\t\t.map((ref) => ref.parentNode);\n\n\tconst target = event.target as Node;\n\n\tif (menuRef?.querySelector(baseContextMenuSelector)?.contains(target)) return true;\n\n\tfor (const qaRef of qaRefs) {\n\t\tif (qaRef.contains(target)) return true;\n\t}\n\n\treturn false;\n};\n","import * as actions from \"./actions\";\nimport * as constants from \"./constants\";\nimport * as actionTypes from \"./actionTypes\";\nimport reducer from \"./reducer\";\nimport * as selectors from \"./selectors\";\nimport * as components from \"./components\";\nimport * as utils from \"./utils\";\n\nexport default { actions, actionTypes, constants, components, reducer, selectors, utils };\n","import { Dispatch } from \"redux\";\nimport focus from \"../../focus\";\nimport display from \"../../display\";\nimport creation from \"../../creation\";\nimport { UserFocus } from \"../../focus/model\";\n\ntype KeyActionMap = { [key: string]: any };\n\ntype KeyEventDispatcher = (event: KeyboardEvent, dispatch: any, state?: any) => void;\n\nconst keyEventDispatcher = (keyMap: KeyActionMap) => (event: KeyboardEvent, dispatch: any) => {\n\tconst action = keyMap[event.key];\n\tif (action) {\n\t\tevent.preventDefault();\n\t\tdispatch(action);\n\t}\n};\n\nconst pageControlKeyMap: KeyActionMap = {\n\tArrowLeft: display.actions.previousPage(),\n\tArrowRight: display.actions.nextPage(),\n};\n\nconst contextMenuControlKeyMap: KeyActionMap = {\n\tt: creation.actions.toggleContextMenu(),\n};\n\nconst selectionFocusKeyMap = {\n\t...pageControlKeyMap,\n\t...contextMenuControlKeyMap,\n};\n\nconst selectionFocusDispatcher = keyEventDispatcher(selectionFocusKeyMap);\n\nconst contextMenuFocusKeyMap = { ...contextMenuControlKeyMap };\nconst contextMenuFocusDispatcher = keyEventDispatcher(contextMenuFocusKeyMap);\n\nconst focusDispatcherMap: { [focus in UserFocus]: KeyEventDispatcher } = {\n\tSELECTION: selectionFocusDispatcher,\n\tCONTEXT_MENU: contextMenuFocusDispatcher,\n\tEDITOR: (event, dispatch) => {},\n\tCONTROL: (event, dispatch) => {},\n};\n\nexport const keyDownControl = (event: KeyboardEvent) => {\n\treturn (dispatch: Dispatch | any, getState: Function) => {\n\t\tconst state = getState();\n\t\tconst userFocus = focus.selectors.getFocus(state);\n\t\tconst dispatcher = focusDispatcherMap[userFocus];\n\n\t\tdispatcher(event, dispatch, state);\n\t};\n};\n","import { connect } from \"react-redux\";\nimport { useEventListener } from \"../hooks/useEventListener\";\nimport { keyDownControl } from \"../services/keyboardControl\";\nimport { mouseDownControl, mouseUpControl } from \"../services/mouseControl\";\n\nfunction Control({\n\tkeyDownControl,\n\tmouseDownControl,\n\tmouseUpControl,\n}: {\n\tkeyDownControl: (event: KeyboardEvent) => void;\n\tmouseDownControl: (event: MouseEvent) => void;\n\tmouseUpControl: (event: MouseEvent) => void;\n}) {\n\tuseEventListener(\"keydown\", keyDownControl);\n\tuseEventListener(\"mousedown\", mouseDownControl);\n\tuseEventListener(\"mouseup\", mouseUpControl);\n\treturn null;\n}\n\nexport const ControlContainer = connect(\n\t() => {\n\t\treturn {};\n\t},\n\t{\n\t\tkeyDownControl,\n\t\tmouseDownControl,\n\t\tmouseUpControl,\n\t}\n)(Control);\n","import creation from \"../../creation\";\nimport focus from \"../../focus\";\n\nexport const mouseDownControl = (event: MouseEvent) => {\n\treturn (dispatch: any, getState: Function) => {\n\t\tconst state = getState();\n\t\tconst contextMenuState = creation.selectors.getContextMenuState(state);\n\t\tif (contextMenuState) {\n\t\t\tconst clickOutSideOfMenu = !creation.utils.contextMenuContainsTargetNode(state, event);\n\n\t\t\tif (clickOutSideOfMenu) {\n\t\t\t\tdispatch(creation.actions.closeContextMenu());\n\t\t\t}\n\t\t}\n\t};\n};\n\nexport const mouseUpControl = (_: any) => {\n\treturn (dispatch: any, getState: Function) => {\n\t\tconst selection = document.getSelection();\n\t\tif (selection) {\n\t\t\tconst selectedStr = selection.toString();\n\t\t\tif (selectedStr !== \"\") {\n\t\t\t\tconst state = getState();\n\t\t\t\tconst userFocus = focus.selectors.getFocus(state);\n\t\t\t\tif (userFocus === \"SELECTION\" || userFocus === \"EDITOR\") {\n\t\t\t\t\tdispatch(creation.actions.selectedParent(selection.anchorNode?.parentNode as HTMLSpanElement));\n\t\t\t\t\tdispatch(creation.actions.updateManuallySelectedString(selectedStr));\n\t\t\t\t\tdispatch(creation.actions.openContextMenu());\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t};\n};\n","import display from \"../../display\";\nimport river from \"../../river\";\nimport React from \"react\";\nimport { AppBar, Toolbar, Grid, Divider } from \"@material-ui/core\";\nimport { useSelector } from \"react-redux\";\n\nexport const ControlBar = () => {\n\tconst totalPages = useSelector(display.selectors.getTotalPages);\n\n\treturn (\n\t\t<AppBar position=\"static\">\n\t\t\t<Toolbar variant=\"dense\">\n\t\t\t\t<Grid></Grid>\n\t\t\t\t<river.components.ShowRiverButton></river.components.ShowRiverButton>\n\t\t\t\t<display.components.ShowMaterialButton></display.components.ShowMaterialButton>\n\t\t\t\t<Divider orientation=\"vertical\" flexItem />\n\t\t\t\t{totalPages && <display.components.PageChooser></display.components.PageChooser>}\n\t\t\t\t{totalPages && <display.components.PreviousButton></display.components.PreviousButton>}\n\t\t\t\t{totalPages && <display.components.NextButton></display.components.NextButton>}\n\t\t\t</Toolbar>\n\t\t</AppBar>\n\t);\n};\n","import * as components from \"./components\";\n\nexport default { components };\n","import React, { useState } from \"react\";\nimport Grid from \"@material-ui/core/Grid\";\nimport { withSize } from \"react-sizeme\";\nimport Paper from \"@material-ui/core/Paper\";\nimport display from \"../modules/display\";\nimport control from \"../modules/control\";\nimport river from \"../modules/river\";\nimport creation from \"../modules/creation\";\nimport focus from \"../modules/focus\";\nimport { Divider } from \"@material-ui/core\";\nimport { useDispatch, useSelector } from \"react-redux\";\n\nconst ReaderSceneRiverColumn = () => {\n\treturn (\n\t\t<Grid\n\t\t\titem\n\t\t\tstyle={{\n\t\t\t\twidth: \"38%\",\n\t\t\t}}\n\t\t>\n\t\t\t<Grid container justify=\"center\" direction=\"row\" alignItems=\"stretch\" spacing={1}>\n\t\t\t\t<Grid item>\n\t\t\t\t\t<river.components.SummaryRiver></river.components.SummaryRiver>\n\t\t\t\t</Grid>\n\t\t\t\t<Grid item>\n\t\t\t\t\t<river.components.ActiveCardRiver></river.components.ActiveCardRiver>\n\t\t\t\t</Grid>\n\t\t\t</Grid>\n\t\t</Grid>\n\t);\n};\n\nfunction ReaderSceneMaterialColumn({ size }: any) {\n\tconst dispatch = useDispatch();\n\n\tconst [elevation, setElevation] = useState(3);\n\n\treturn (\n\t\t<Grid\n\t\t\titem\n\t\t\tstyle={{\n\t\t\t\twidth: \"60%\",\n\t\t\t}}\n\t\t\tonMouseEnter={() => {\n\t\t\t\tdispatch(focus.actions.tryUpdateFocus(\"SELECTION\"));\n\t\t\t\tsetElevation(20);\n\t\t\t}}\n\t\t\tonMouseLeave={() => {\n\t\t\t\tsetElevation(3);\n\t\t\t}}\n\t\t>\n\t\t\t<Paper elevation={elevation}>\n\t\t\t\t<Divider></Divider>\n\t\t\t\t<display.components.PDFDocumentContainer parentSize={size}></display.components.PDFDocumentContainer>\n\t\t\t\t<display.components.PDFUploadContainer></display.components.PDFUploadContainer>\n\t\t\t</Paper>\n\t\t</Grid>\n\t);\n}\n\nconst ReaderSceneMaterialColumnWithSize = withSize({ monitorHeight: true, noPlaceholder: true })(\n\tReaderSceneMaterialColumn\n);\n\nexport function ReaderScene() {\n\tconst dispatch = useDispatch();\n\n\t// TODO: use memoize to make re-showing of pdf faster, this is wasteful right now\n\tconst showMaterial = useSelector(display.selectors.displayStatusIsShow);\n\tconst showRiver = useSelector(river.selectors.riverShowStateIsShow);\n\treturn (\n\t\t<div>\n\t\t\t<control.components.ControlContainer></control.components.ControlContainer>\n\t\t\t<Grid container justify=\"center\" direction=\"column\" alignItems=\"stretch\" spacing={1}>\n\t\t\t\t<Grid\n\t\t\t\t\titem\n\t\t\t\t\tonMouseEnter={() => {\n\t\t\t\t\t\tdispatch(focus.actions.tryUpdateFocus(\"CONTROL\"));\n\t\t\t\t\t}}\n\t\t\t\t>\n\t\t\t\t\t<control.components.ControlBar></control.components.ControlBar>\n\t\t\t\t</Grid>\n\n\t\t\t\t<Grid\n\t\t\t\t\titem\n\t\t\t\t\tonMouseEnter={() => {\n\t\t\t\t\t\tdispatch(focus.actions.tryUpdateFocus(\"EDITOR\"));\n\t\t\t\t\t}}\n\t\t\t\t>\n\t\t\t\t\t<Grid container justify=\"space-around\" direction=\"row\" alignItems=\"stretch\">\n\t\t\t\t\t\t{showRiver && <ReaderSceneRiverColumn></ReaderSceneRiverColumn>}\n\t\t\t\t\t\t{showMaterial && <ReaderSceneMaterialColumnWithSize></ReaderSceneMaterialColumnWithSize>}\n\t\t\t\t\t</Grid>\n\t\t\t\t</Grid>\n\t\t\t</Grid>\n\t\t\t<creation.components.ContextMenuContainer></creation.components.ContextMenuContainer>\n\t\t</div>\n\t);\n}\n","import { createStore } from \"redux\";\nimport { applyMiddleware } from \"redux\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport thunk from \"redux-thunk\";\nimport { combineReducers } from \"redux\";\nimport focus from \"./modules/focus\";\nimport creation from \"./modules/creation\";\nimport river from \"./modules/river\";\nimport display from \"./modules/display\";\nimport cards from \"./modules/cards\";\nimport { persistStore, persistReducer, createTransform } from \"redux-persist\";\nimport storage from \"redux-persist/lib/storage\"; // defaults to localStorage for web\nimport { CreationData } from \"./modules/creation/model\";\nimport { createRef } from \"react\";\nimport { DisplayData } from \"./modules/display/model\";\n\nconst rootReducer = combineReducers({\n\t[focus.constants.NAME]: focus.reducer,\n\t[creation.constants.NAME]: creation.reducer,\n\t[river.constants.NAME]: river.reducer,\n\t[display.constants.NAME]: display.reducer,\n\t[cards.constants.NAME]: cards.reducer,\n});\n\nconst stateSanitizer = (state: any) => {\n\treturn state.displayData.pdf ? { ...state, displayData: { ...state.displayData, pdf: \"PDF_FILE_IS_HERE\" } } : state;\n};\n\nconst creationTransform = createTransform(\n\t(inboundState: CreationData) => {\n\t\treturn { ...inboundState, menuRef: null, qaRefs: inboundState.qaRefs.map((_) => null), selectedParentSpan: null };\n\t},\n\t(outboundState): CreationData => {\n\t\treturn { ...outboundState, menuRef: createRef(), qaRefs: outboundState.qaRefs.map((_) => createRef()) };\n\t},\n\t{ whitelist: [creation.constants.NAME] }\n);\nconst displayTransform = createTransform(\n\t(inboundState: DisplayData) => {\n\t\treturn { ...inboundState, pdf: null, documentRef: null, materialData: null };\n\t},\n\t(outboundState): DisplayData => {\n\t\treturn {\n\t\t\t...outboundState,\n\t\t\tpdf: undefined,\n\t\t\tdocumentRef: createRef(),\n\t\t\tmaterialData: { materialDataTimeStamp: -Infinity },\n\t\t};\n\t},\n\t{ whitelist: [display.constants.NAME] }\n);\n\nconst persistConfig = {\n\tkey: \"root\",\n\tstorage,\n\ttransforms: [creationTransform, displayTransform],\n};\n\nconst persistedReducer = persistReducer(persistConfig, rootReducer);\n\nconst composeEnhancers = composeWithDevTools({ stateSanitizer });\nconst enhancer = composeEnhancers(applyMiddleware(thunk));\n\nexport const store = createStore(persistedReducer, enhancer);\n\nexport const persistor = persistStore(store);\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { ReaderScene } from \"./scenes/ReaderScene\";\nimport { Provider } from \"react-redux\";\nimport { store, persistor } from \"./store\";\nimport { PersistGate } from \"redux-persist/es/integration/react\";\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<Provider store={store}>\n\t\t\t<PersistGate loading={null} persistor={persistor}>\n\t\t\t\t<ReaderScene></ReaderScene>\n\t\t\t</PersistGate>\n\t\t</Provider>\n\t</React.StrictMode>,\n\tdocument.getElementById(\"root\")\n);\n","function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 66;"],"sourceRoot":""}