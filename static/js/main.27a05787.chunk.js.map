{"version":3,"sources":["modules/display/constants.ts","modules/display/actionTypes.ts","modules/display/selectors.ts","shared/utils.ts","modules/display/services/span.ts","modules/display/services/materialData.ts","modules/display/actions.ts","modules/display/components/NavigationButtons.tsx","shared/tooltips.ts","modules/display/components/PageChooser/PageChooser.tsx","modules/focus/constants.ts","modules/focus/actionTypes.ts","modules/focus/selectors.ts","modules/focus/actions.ts","modules/focus/reducer.ts","modules/focus/index.ts","modules/display/components/PDFDocument/PDFDocument.tsx","shared/text.ts","modules/display/components/MaterialDisplayColumn.tsx","modules/display/reducer.ts","modules/display/index.ts","modules/cards/model/model-origin.ts","modules/cards/services/transformInputOrigin.ts","modules/cards/constants.ts","modules/cards/actionTypes.ts","modules/cards/selectors.ts","modules/cards/services/contentStringToConfig.ts","modules/cards/actions.ts","modules/db/constants.ts","modules/db/actionTypes.ts","modules/db/actions.ts","modules/db/reducer.ts","modules/db/selectors.ts","modules/db/index.ts","modules/cards/reducer.ts","modules/cards/index.ts","modules/river/constants.ts","modules/river/selectors.ts","modules/river/components/CardRiver/HybridCardField.tsx","modules/river/components/CardRiver/Buttons/DeleteCardButton.tsx","modules/river/components/CardRiver/Buttons/JumpToOriginButton.tsx","modules/river/components/CardRiver/Buttons/GrabForFieldButton.tsx","modules/river/actionTypes.ts","modules/river/actions.ts","modules/river/components/CardRiver/Cards/QACard.tsx","modules/river/components/CardRiver/Cards/NoteCard.tsx","modules/river/components/CardRiver/Cards/ClayCard.tsx","modules/river/components/CardRiver/toCardGridItemsWithDividers.tsx","modules/river/components/CardRiver/Buttons/AddNoteButton.tsx","modules/river/components/CardRiver/Buttons/AddQAButton.tsx","modules/river/components/CardRiver/CardRiverAccordion.tsx","modules/river/components/CardRiver/ChildCardRiver.tsx","modules/river/model.ts","modules/river/components/SummaryRiver/SummaryRiver.tsx","modules/river/components/SummaryRiver/SummaryRiverView.tsx","modules/river/components/ActiveRiver/ActiveCardRiver.tsx","modules/river/components/ActiveRiver/ActiveRiverColumn.tsx","modules/river/components/ActiveRiver/ActiveRiverView.tsx","shared/GreenCheckbox.tsx","modules/river/components/RiverContentFormGroup.tsx","modules/river/reducer.ts","modules/river/index.ts","modules/control/selectors.ts","modules/control/actions.ts","modules/control/hooks/useEventListener.tsx","modules/creation/constants.ts","modules/creation/actionTypes.ts","modules/creation/selectors.ts","modules/creation/actions.ts","modules/creation/reducer.ts","modules/creation/components/CardItems.tsx","modules/creation/components/NewButtons.tsx","modules/creation/components/ContextMenu.tsx","modules/creation/components/SelectionSnackbar.tsx","modules/creation/services/contextMenuContainsTargetNode.ts","modules/creation/index.ts","modules/control/services/keyboardControl.ts","modules/control/components/Control.tsx","modules/control/services/mouseControl.ts","modules/control/components/Options.tsx","modules/control/components/CardSearchBar.tsx","modules/control/components/UndoRedoButtons.tsx","modules/control/components/ShowHideButton.tsx","modules/control/components/ControlBar.tsx","modules/control/index.ts","scenes/ReaderScene.tsx","persist.ts","store.ts","index.tsx","../node_modules/pdfjs-dist/build sync"],"names":["NAME","PDF_UPLOADED","MATERIAL_LOADED","DISPLAY_STATUS","PAGE_UPDATE","ZOOM_QUEUE","MATERIAL_DATA","MATERIAL_HEIGHT","getAll","state","getPDF","createSelector","pdf","getPDFName","pdfName","getRenderCritialData","currentPage","documentRef","getTotalPages","totalPages","getCurrentPage","getPageControlData","getDocumentRef","getMaterialData","materialData","getTimeStamp","materialDataTimeStamp","getMaterialSpans","materialSpans","getSpanIndex","span","indexOf","getMaterialBoundingRects","materialBoundingRects","getDataExists","timestamp","getDisplayStatus","displayStatus","displayStatusIsShow","status","getZoomQueue","zoomQueue","getMaterialHeight","materialHeight","incrementer","counter","curCounter","expandSpan","rect","getBoundingClientRect","container","startingSpans","Array","from","querySelectorAll","length","expandedSpans","spans","boundingRects","exSpan","push","splitExpandedSpans","map","expandSpans","sort","exSpan2","y","pdfUpload","type","t","payload","materialUploaded","event","dispatch","files","target","materialLoaded","tryInterval","tries","ms","func","increment","timeout","setInterval","clearInterval","captureMaterialData","getState","current","startTime","Date","now","curMaterialGroupData","setPage","page","pageCorrections","newPage","movePage","nextPage","previousPage","toggleDisplayState","displayState","setZoomQueue","spanIndex","zoomToCardOrigin","console","log","emptyZoomQueue","scrollIntoView","behavior","block","inline","setMaterialHeight","height","PreviousButton","useDispatch","Tooltip","title","enterDelay","enterNextDelay","IconButton","onClick","NextButton","PageNavigation","Card","variant","Grid","direction","item","Divider","orientation","nonDigitRegEx","PageChooser","useSelector","useState","error","value","toString","userInput","setState","alignItems","justify","style","width","TextField","inputProps","padding","fontSize","fontFamily","fontWeight","lineHeight","letterSpacing","onKeyDown","key","preventDefault","submittedValue","parseInt","onChange","possiblePage","trim","match","asInt","validatePageChoice","Typography","FOCUS_UPDATE","DISPLAY_FOCUS_UPDATE","getFocus","userFocus","getDisplayFocus","displayFocus","updateFocus","focus","tryUpdateFocus","toggleContextMenuFocus","updateDisplayFocus","initialState","actions","constants","reducer","selectors","actionTypes","pdfjs","GlobalWorkerOptions","workerSrc","version","options","cMapUrl","cMapPacked","PDFDocumentContainer","connect","parentSize","useEffect","file","onLoadSuccess","numPages","inputRef","onItemClick","pageNumber","loading","noData","onRenderSuccess","document","forEach","layer","top","left","transform","MaterialDisplayColumnWithSize","withSize","monitorHeight","noPlaceholder","size","hidden","elevation","setElevation","onMouseEnter","onMouseLeave","Paper","createRef","pageSpans","Infinity","components","name","extractSingleOrigin","inputOrigin","field","transformInputOrigin","inputField","outputField","oldOrigin","mergeSimilarCardOrigins","isNullOrUndefined","q","isQAOrigin","a","partialQAOrigin","flipPartialQAOrigin","CARD_UPDATE","CARD_PUSH","CARD_REMOVE","CARD_GOAL","DOCUMENT_CHANGE","present","getLastCardIDNumber","lastCardIDNumber","getCards","cards","getGoalCard","goalCard","updateContentStrFunctions","REPLACE","_","newStr","APPEND","oldStr","creationFunctions","note","oldConfig","partialUpdateFunction","content","contentStringToConfig","contentStr","updateType","existingCard","createPartialUpdateContentStrFunction","cardPush","cardPayload","card","cardID","cardUpdate","updateCardContent","contentString","creationType","origin","currentCard","config","pushCardContent","removeCard","setGoalCard","cardConfig","resetGoalCard","ARCHIVE_CURRENT_DATA","LOAD_DOCUMENT_DATA_SETS","archiveDBData","dbData","loadDocumentDataSets","newActiveDataSet","documentDB","reduce","prev","getDocumentDB","getDocumentNames","db","Object","keys","getDocumentDataSets","values","intialState","services","cardObj","getRiverMakeUps","riverMakeUps","getActiveRiverMakeUpID","activeRiverMakeUpID","getPushToRiver","pushToRiverID","getPushToRiverMakeUp","makeUps","id","getActiveRiverMakeUp","getPushToRiverCardIDs","makeUp","cardIDs","getPushToRiverCards","makeUpCardIDs","getActiveRiverCardIDs","getActiveRiverCards","getRiverShowState","riverShowState","riverShowStateIsShow","getHoveredCardData","highlightedCardID","highlightedCardField","getSourceCard","sourceCard","getLastRiverIDNumber","lastRiverIDNumber","getRiverContentState","riverContentState","getRiverContentFilter","contentFilter","HybridCardField","storeValue","saveChanges","rest","mutableValue","multiline","onBlur","DeleteCardButton","JumpToOriginButton","cardOrigin","display","GrabForFieldButton","outlined","setOutlined","isGoalCard","RIVER_SHOW_STATE","RIVER_CONTENT_STATE","RIVER_PUSH_STATE","RIVER_HOVERED_CARD","RIVER_CARD_SOURCE","RIVER_CONTENT_FILTER","toggleRiverShowState","setRiverContentState","setPushToRiver","trySetPushToRiver","setHoveredCard","trySetHoveredCard","highlightedCardIDData","setSourceCard","sourceField","trySetSourceCard","resetSourceCard","tryResetSourceCard","setContentFilter","filter","QACard","isHoveredCard","isActiveRiver","ref","useRef","spacing","borderStyle","undefined","label","backgroundColor","InputLabelProps","color","NoteCard","border","borderRadius","ClayCard","riverID","GridDivider","AddNoteButton","AddQAButton","CardRiverAccordion","gridItems","summary","pushToRiver","Accordion","defaultExpanded","overflowY","maxHeight","AccordionSummary","align","MozUserSelect","WebkitUserSelect","msUserSelect","AccordionDetails","ChildCardRiver","riverCards","useMemo","inputCards","noteConfig","includes","noteContainsContentFilter","qaConfig","qaContainsContentFilter","index","arr","toCardGridItemsWithDividers","pageNumberToRiverMakeUpID","SummaryRiver","cardConfigs","focusRef","window","scrollTo","replace","SummaryRiverView","ActiveCardRiver","ActiveRiverColumn","ActiveRiverView","showMaterial","showRiver","GreenCheckbox","withStyles","root","green","checked","props","Checkbox","RiverContentFormGroup","showQAs","showNotes","changeContentState","clickedState","FormGroup","FormControlLabel","control","emptyCardRiver","updateStateWithMakeUps","updatedState","deactivateActiveCardRiver","active","removeCardFromRivers","fromEntries","entries","entry","riverMakeUp","activeRiver","oldRiver","collectCurrentDBData","river","archiveCurrentDBData","fileDownload","require","downloadDBData","documentDataSets","localString","toLocaleString","JSON","stringify","changeDocument","newPDFName","currentPDFName","newDocumentData","ActionCreators","clearHistory","useEventListener","eventName","handler","savedHandler","eventListener","addEventListener","removeEventListener","TOGGLE_CONTEXT_MENU","CLOSE_CONTEXT_MENU","OPEN_CONTEXT_MENU","SELECTED_STRING","SELECTED_PARENT","DOCUMENT_POSITION","getContextMenuState","open","getContextMenuRef","menuRef","getContextMenuFullCardsRef","fullCardRef","getContextMenuQARefs","qaRefs","getCurrentSelectionPosition","selectionPosition","getContextMenuInitData","position","getCurrentSelectedString","manuallySelectedString","getCurrentSelectedParent","selectedParentSpan","getCurrentOrigin","selectedParent","toggleContextMenu","closeContextMenu","openContextMenu","grabSelectionForContextMenu","transformedOrigin","isUpdate","selectedString","resetManuallySelectedString","hasNonEmptyOrigin","grabSelectionForSourceMenu","newOrigin","updateManuallySelectedString","str","updateSelectionPosition","x","creationData","noteCardIsEmpty","qaCardIsNotFull","SingleOptionItem","dispatchRiver","MenuItem","QAOptionItem","qaRef","parentMenuOpen","CardConfigItem","NewQACardQ","NewQACardA","NewNoteCard","NewButtons","noteDispatch","qDispatch","aDispatch","ContextMenuContainer","fullCardsRef","openState","qaRefIndex","anchorPosition","nonFullRiverCards","fullRiverCards","Menu","keepMounted","anchorReference","SelectionSnackbar","setOpen","message","Snackbar","anchorOrigin","vertical","horizontal","onClose","reason","action","aria-label","contextMenuContainsTargetNode","parentNode","refObject","cur","querySelector","contains","keyEventDispatcher","keyMap","pageControlKeyMap","ArrowLeft","ArrowRight","pageControlDispatcher","contextMenuControlKeyMap","creation","contextMenuControlDispatcher","doNothing","focusDispatcherMap","DOCUMENT","CONTEXT_MENU","RIVER","RIVER_CONTROL","CONTROL","ControlContainer","keyDownControl","dispatcher","mouseDownControl","mouseUpControl","selection","getSelection","selectedStr","createRange","text","activeElement","substring","selectionStart","selectionEnd","e","getSelectionText","anchorNode","rightClickControl","InputDocument","handleClose","click","accept","InputDataSets","activeDocument","reader","FileReader","readAsText","onload","uploadedDataSets","parse","result","foundDataSet","find","Options","documents","React","anchorEl","setAnchorEl","currentTarget","Boolean","CardSearchBar","placeholder","newValue","onCancelSearch","onRequestSearch","UndoButton","undo","RedoButton","redo","UndoRedoCard","ShowRiverCheckbox","ShowMaterialCheckbox","displayShowState","ShowHideButton","ControlBar","materialName","AppBar","Toolbar","Tabs","Tab","disableFocusListener","flexGrow","useStyles","makeStyles","theme","createStyles","bottom","right","ScrollTop","children","classes","trigger","useScrollTrigger","disableHysteresis","threshold","Zoom","in","anchor","ownerDocument","role","className","ReaderScene","Fab","removeDOMObjectsFromCreationData","inboundState","addDOMObjectsToCreationData","outboundState","creationTransform","createTransform","future","past","whitelist","displayTransform","removeDOMObjectsFromDisplayData","addDOMObjectsToDisplayData","persistConfig","storage","transforms","rootReducer","combineReducers","undoable","includeAction","persistedReducer","persistReducer","enhancer","composeWithDevTools","stateSanitizer","displayData","composeEnhancers","applyMiddleware","thunk","store","createStore","persistor","persistStore","ReactDOM","render","StrictMode","getElementById","webpackEmptyContext","req","Error","code","resolve","module","exports"],"mappings":"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","file":"static/js/main.27a05787.chunk.js","sourcesContent":["export const NAME = \"displayData\";\n","import { NAME } from \"./constants\";\n\nexport const PDF_UPLOADED = NAME + \"/PDF_UPLOADED\";\nexport const MATERIAL_LOADED = NAME + \"/MATERIAL_LOADED\";\nexport const DISPLAY_STATUS = NAME + \"/DISPLAY_STATUS\";\nexport const PAGE_UPDATE = NAME + \"/PAGE_UPDATE\";\nexport const ZOOM_QUEUE = NAME + \"/ZOOM_QUEUE\";\nexport const MATERIAL_DATA = NAME + \"/MATERIAL_DATA\";\nexport const MATERIAL_HEIGHT = NAME + \"/MATERIAL_HEIGHT\";\n","import { createSelector } from \"reselect\";\nimport { DisplayData, MaterialData, MaterialGroupData } from \"./model\";\nimport { NAME } from \"./constants\";\n\nexport const getAll = (state: any): DisplayData => state[NAME];\n\nexport const getPDF = createSelector(getAll, (state: DisplayData) => {\n\treturn { pdf: state.pdf ? state.pdf : null };\n});\n\nexport const getPDFName = createSelector(getAll, (state) => state.pdfName);\n\nexport const getRenderCritialData = createSelector(getAll, (state: DisplayData) => {\n\treturn {\n\t\tpdf: state.pdf,\n\t\tcurrentPage: state.currentPage,\n\t\tdocumentRef: state.documentRef,\n\t};\n});\n\nexport const getTotalPages = createSelector(getAll, (state: DisplayData) => state.totalPages);\n\nexport const getCurrentPage = createSelector(getAll, (state: DisplayData) => state.currentPage);\n\nexport const getPageControlData = createSelector(getTotalPages, getCurrentPage, (totalPages, currentPage) => {\n\treturn { currentPage, totalPages };\n});\n\nexport const getDocumentRef = createSelector(getAll, (state: DisplayData) => state.documentRef);\n\nexport const getMaterialData = createSelector(getAll, (state: DisplayData) => state.materialData);\n\nexport const getTimeStamp = createSelector(getMaterialData, (state: MaterialData) => state.materialDataTimeStamp);\n\nexport const getMaterialSpans = createSelector(\n\tgetMaterialData as (state: any) => MaterialGroupData,\n\t(state: MaterialGroupData) => state.materialSpans\n);\n\nexport const getSpanIndex = (state: any, span: HTMLSpanElement) => {\n\tconst spans = getMaterialSpans(state);\n\treturn spans.indexOf(span);\n};\n\nexport const getMaterialBoundingRects = createSelector(\n\tgetMaterialData as (state: any) => MaterialGroupData,\n\t(state: MaterialGroupData) => state.materialBoundingRects\n);\n\nexport const getDataExists = createSelector(getTimeStamp, (timestamp) => timestamp > 0);\n\nexport const getDisplayStatus = createSelector(getAll, (state: DisplayData) => state.displayStatus);\n\nexport const displayStatusIsShow = createSelector(getDisplayStatus, (status) => status === \"SHOW\");\n\nexport const getZoomQueue = createSelector(getAll, (state: DisplayData) => state.zoomQueue);\n\nexport const getMaterialHeight = createSelector(getAll, (state: DisplayData) => state.materialHeight);\n","export const incrementer = () => {\n\tlet counter = 0;\n\treturn () => {\n\t\tconst curCounter = counter;\n\t\tcounter++;\n\t\treturn curCounter;\n\t};\n};\n\n//TODO-NICE: return selection and string, so that selection is not accessed twice\nexport function getSelectionText() {\n\tif (window.getSelection) {\n\t\ttry {\n\t\t\tvar activeElement = document.activeElement;\n\t\t\tif (activeElement && (activeElement as HTMLInputElement).value) {\n\t\t\t\t// firefox bug https://bugzilla.mozilla.org/show_bug.cgi?id=85686\n\t\t\t\treturn (activeElement as HTMLInputElement).value.substring(\n\t\t\t\t\t(activeElement as HTMLInputElement).selectionStart as number,\n\t\t\t\t\t(activeElement as HTMLInputElement).selectionEnd as number\n\t\t\t\t);\n\t\t\t} else {\n\t\t\t\treturn window.getSelection()?.toString();\n\t\t\t}\n\t\t} catch (e) {\n\t\t\treturn \"\";\n\t\t}\n\t} else if (\n\t\t((document as unknown) as { selection: Selection }).selection &&\n\t\t((document as unknown) as { selection: Selection }).selection.type !== \"Control\"\n\t) {\n\t\t// For IE\n\t\treturn ((((document as unknown) as { selection: Selection }).selection as unknown) as {\n\t\t\tcreateRange: () => { text: string };\n\t\t}).createRange().text;\n\t} else {\n\t\treturn \"\";\n\t}\n}\n","export const splitExpandedSpans = (expandedSpans: ExpandedSpan[]) => {\n\tconst spans = [];\n\tconst boundingRects = [];\n\n\tfor (const exSpan of expandedSpans) {\n\t\tspans.push(exSpan.span);\n\t\tboundingRects.push(exSpan.rect);\n\t}\n\n\treturn { spans, boundingRects };\n};\n\nexport const sortExpandedSpansAccordingToX = (expandedSpans: ExpandedSpan[]) =>\n\texpandedSpans.sort((exSpan, exSpan2) => exSpan.rect.x - exSpan2.rect.x);\n\nexport const sortExpandedSpansAccordingToY = (expandedSpans: ExpandedSpan[]) =>\n\texpandedSpans.sort((exSpan, exSpan2) => exSpan.rect.y - exSpan2.rect.y);\n\ntype ExpandedSpan = { span: HTMLSpanElement; rect: DOMRect };\n\nexport const expandSpans = (spans: HTMLSpanElement[]) => spans.map(expandSpan);\n\nconst expandSpan = (span: HTMLSpanElement): ExpandedSpan => {\n\treturn { span, rect: span.getBoundingClientRect() };\n};\n","import { MaterialGroupData } from \"../model\";\nimport { expandSpans, sortExpandedSpansAccordingToY, splitExpandedSpans } from \"./span\";\n\nexport const materialData = (container: HTMLDivElement): MaterialGroupData | null => {\n\t// assumes all spans inside the document are relevant (potentially multiple pages)\n\tconst startingSpans = Array.from(container.querySelectorAll(\"span\"));\n\tif (startingSpans.length === 0) return null;\n\n\tconst { spans, boundingRects } = splitExpandedSpans(sortExpandedSpansAccordingToY(expandSpans(startingSpans)));\n\n\treturn {\n\t\tmaterialSpans: spans,\n\t\tmaterialBoundingRects: boundingRects,\n\t};\n};\n","import { ChangeEvent, RefObject } from \"react\";\nimport { Dispatch } from \"redux\";\nimport * as t from \"./actionTypes\";\nimport { PageMove, MaterialData } from \"./model\";\nimport { getPageControlData, getDisplayStatus, getZoomQueue, getTimeStamp, getMaterialSpans } from \"./selectors\";\nimport { incrementer } from \"../../shared/utils\";\nimport { materialData } from \"./services/materialData\";\n\nexport const pdfUpload = (pdf: File) => {\n\treturn { type: t.PDF_UPLOADED, payload: pdf };\n};\n\nexport const materialUploaded = (event: ChangeEvent<HTMLInputElement>) => {\n\treturn (dispatch: Dispatch) => {\n\t\tconst files = event.target.files;\n\t\tconst pdf = files ? files[0] : null;\n\t\tif (pdf) dispatch(pdfUpload(pdf));\n\t};\n};\n\nexport const materialLoaded = (totalPages: number) => {\n\treturn { type: t.MATERIAL_LOADED, payload: totalPages };\n};\n\nexport const tryInterval = (tries: number, ms: number, func: () => boolean) => {\n\tconst increment = incrementer();\n\tconst timeout = setInterval(() => {\n\t\tif (increment() > tries) {\n\t\t\tclearInterval(timeout);\n\t\t\treturn;\n\t\t}\n\n\t\tif (func()) clearInterval(timeout);\n\t}, ms);\n};\n\n// text-layer is not really guaranteed to be rendered on render \"success\",\n// so we use this ugly \"try ten times\" approach\nexport function captureMaterialData(documentRef: RefObject<any>) {\n\treturn (dispatch: any, getState: Function) => {\n\t\tconst state = getState();\n\t\tconst container = documentRef.current;\n\t\tif (container) {\n\t\t\t// TODO-NICE: still possibility of race-condition,\n\n\t\t\tconst startTime = Date.now();\n\n\t\t\t// try once before going into intervals (most times once should work)\n\t\t\tconst curMaterialGroupData = materialData(container as HTMLDivElement);\n\t\t\tif (curMaterialGroupData && getTimeStamp(state) < startTime) {\n\t\t\t\tconst payload: MaterialData = {\n\t\t\t\t\t...curMaterialGroupData,\n\t\t\t\t\tmaterialDataTimeStamp: startTime,\n\t\t\t\t};\n\t\t\t\tdispatch({ type: t.MATERIAL_DATA, payload });\n\t\t\t} else {\n\t\t\t\ttryInterval(10, 20, () => {\n\t\t\t\t\tconst curMaterialGroupData = materialData(container as HTMLDivElement);\n\t\t\t\t\tif (curMaterialGroupData && getTimeStamp(getState()) < startTime) {\n\t\t\t\t\t\tconst payload: MaterialData = {\n\t\t\t\t\t\t\t...curMaterialGroupData,\n\t\t\t\t\t\t\tmaterialDataTimeStamp: startTime,\n\t\t\t\t\t\t};\n\t\t\t\t\t\tdispatch({ type: t.MATERIAL_DATA, payload });\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t}\n\t\t\t\t\treturn false;\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t};\n}\n\n// assumes outside validation/correction\nexport const setPage = (page: number) => {\n\treturn { type: t.PAGE_UPDATE, payload: page };\n};\n\nconst pageCorrections = {\n\tADD: (newPage: number, totalPages: number) => (newPage === totalPages + 1 ? 1 : newPage),\n\tREMOVE: (newPage: number, totalPages: number) => (newPage === 0 ? totalPages : newPage),\n};\n\n//TODO-PERF: maybe hide all rendered pages but not shown instead of re-rendering for faster switching?\nexport const movePage = (type: PageMove) => {\n\treturn (dispatch: Dispatch, getState: Function) => {\n\t\tconst { currentPage, totalPages } = getPageControlData(getState());\n\t\tswitch (type) {\n\t\t\tcase \"NEXT\":\n\t\t\t\tdispatch({ type: t.PAGE_UPDATE, payload: pageCorrections[\"ADD\"](currentPage + 1, totalPages) });\n\t\t\t\tbreak;\n\t\t\tcase \"PREVIOUS\":\n\t\t\t\tdispatch({ type: t.PAGE_UPDATE, payload: pageCorrections[\"REMOVE\"](currentPage - 1, totalPages) });\n\t\t\t\tbreak;\n\t\t}\n\t};\n};\nexport const nextPage = () => movePage(\"NEXT\");\nexport const previousPage = () => movePage(\"PREVIOUS\");\n\nexport const toggleDisplayState = () => {\n\treturn (dispatch: Dispatch, getState: Function) => {\n\t\tconst displayState = getDisplayStatus(getState()) === \"SHOW\" ? \"HIDE\" : \"SHOW\";\n\n\t\tdispatch({ type: t.DISPLAY_STATUS, payload: displayState });\n\t};\n};\n\nexport const setZoomQueue = (spanIndex: number | null) => {\n\treturn { type: t.ZOOM_QUEUE, payload: spanIndex };\n};\n\nexport const zoomToCardOrigin = (spanIndex: number, page: number) => {\n\treturn (dispatch: Dispatch) => {\n\t\tconsole.log(page, spanIndex);\n\t\tdispatch(setPage(page));\n\t\tdispatch(setZoomQueue(spanIndex));\n\t};\n};\n//TODO-RC: make snackbar for big changes, so that the user notices that he deleted e.g. a document, or document confirmation? yes, confirmation is better\nexport const emptyZoomQueue = () => {\n\treturn (dispatch: Dispatch, getState: Function) => {\n\t\tconst state = getState();\n\t\tconst spanIndex = getZoomQueue(state);\n\t\tif (!!spanIndex) {\n\t\t\tconst materialSpans = getMaterialSpans(state);\n\t\t\tif (materialSpans) {\n\t\t\t\t// this way when no pdf was present we prevent the race-condition of pdf being loaded later\n\t\t\t\tconst originSpan = materialSpans[spanIndex];\n\t\t\t\toriginSpan.scrollIntoView({ behavior: \"smooth\", block: \"center\", inline: \"center\" });\n\t\t\t}\n\t\t\tdispatch(setZoomQueue(null));\n\t\t}\n\t};\n};\n\nexport const setMaterialHeight = (height: number) => {\n\treturn { type: t.MATERIAL_HEIGHT, payload: height };\n};\n","import React from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { IconButton, Card, Grid, Divider, Tooltip } from \"@material-ui/core\";\nimport ArrowForwardIosIcon from \"@material-ui/icons/ArrowForwardIos\";\nimport ArrowBackIosIcon from \"@material-ui/icons/ArrowBackIos\";\nimport { nextPage, previousPage } from \"../actions\";\nimport { previousPageTooltip, nextPageTooltip } from \"../../../shared/tooltips\";\n\nexport const PreviousButton = () => {\n\tconst dispatch = useDispatch();\n\treturn (\n\t\t<Tooltip title={previousPageTooltip} enterDelay={500} enterNextDelay={1000}>\n\t\t\t<IconButton\n\t\t\t\ttype=\"button\"\n\t\t\t\tonClick={() => {\n\t\t\t\t\tdispatch(previousPage());\n\t\t\t\t}}\n\t\t\t>\n\t\t\t\t<ArrowBackIosIcon></ArrowBackIosIcon>\n\t\t\t</IconButton>\n\t\t</Tooltip>\n\t);\n};\n\nexport const NextButton = () => {\n\tconst dispatch = useDispatch();\n\treturn (\n\t\t<Tooltip title={nextPageTooltip} enterDelay={500} enterNextDelay={1000}>\n\t\t\t<IconButton\n\t\t\t\ttype=\"button\"\n\t\t\t\tonClick={() => {\n\t\t\t\t\tdispatch(nextPage());\n\t\t\t\t}}\n\t\t\t>\n\t\t\t\t<ArrowForwardIosIcon></ArrowForwardIosIcon>\n\t\t\t</IconButton>\n\t\t</Tooltip>\n\t);\n};\n\nexport const PageNavigation = () => {\n\treturn (\n\t\t<Card variant=\"outlined\">\n\t\t\t<Grid container direction=\"row\">\n\t\t\t\t<Grid item>\n\t\t\t\t\t<PreviousButton></PreviousButton>\n\t\t\t\t</Grid>\n\t\t\t\t<Grid item>\n\t\t\t\t\t<Divider orientation=\"vertical\"></Divider>\n\t\t\t\t</Grid>\n\t\t\t\t<Grid item>\n\t\t\t\t\t<NextButton></NextButton>\n\t\t\t\t</Grid>\n\t\t\t</Grid>\n\t\t</Card>\n\t);\n};\n","export const switchToActiveRiverTooltip = \"Switch to the Active-River view\";\nexport const switchToSummaryRiverTooltip = \"Switch to the Summary-River view\";\n\nexport const undoTooltip = \"Undo last action\";\nexport const redoTooltip = \"Redo last action\";\n\nexport const nextPageTooltip = \"Next page\";\nexport const previousPageTooltip = \"Previous page\";\n\nexport const deleteCardTooltip = \"Delete this card\";\nexport const grabForCardTooltip = \"Activate the document-selection grab for this card(-field)\";\nexport const jumpToOriginTooltip = \"Jump to the origin of the card content\";\n\nexport const newQACardTooltip = \"Create new QA-card\";\nexport const newNoteCardTooltip = \"Create new Note-card\";\n","import React, { useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Typography, TextField, Card, Grid } from \"@material-ui/core\";\nimport { setPage } from \"../../actions\";\nimport { getPageControlData } from \"../../selectors\";\n\nconst nonDigitRegEx = /(\\D)/;\n\nexport const validatePageChoice = (possiblePage: string, totalPages: number) => {\n\tif (possiblePage === \"\" || possiblePage.trim().match(nonDigitRegEx) !== null) return false;\n\n\tconst asInt = parseInt(possiblePage);\n\tif (asInt < 1 || totalPages < asInt) return false;\n\n\treturn true;\n};\n\nexport const PageChooser = () => {\n\tconst dispatch = useDispatch();\n\tconst { currentPage, totalPages } = useSelector(getPageControlData);\n\n\tconst [state, setState] = useState({\n\t\terror: false,\n\t\tvalue: currentPage?.toString(),\n\t\tuserInput: currentPage?.toString(),\n\t});\n\n\t// with this we can trigger a re-render onChange,\n\t// while making sure that if a new currentPage arrives, we reset the component\n\tif (state.value !== currentPage.toString()) {\n\t\tsetState({ error: false, value: currentPage.toString(), userInput: currentPage.toString() });\n\t}\n\n\treturn (\n\t\t<Card variant=\"outlined\">\n\t\t\t<Grid item>\n\t\t\t\t<Grid container direction=\"row\" alignItems=\"center\" justify=\"space-between\">\n\t\t\t\t\t<Grid item style={{ width: \"37%\" }}>\n\t\t\t\t\t\t<TextField\n\t\t\t\t\t\t\tinputProps={{\n\t\t\t\t\t\t\t\tstyle: {\n\t\t\t\t\t\t\t\t\tpadding: \"0px\",\n\t\t\t\t\t\t\t\t\t//h6 Typography style\n\t\t\t\t\t\t\t\t\tfontSize: \"1.25rem\",\n\t\t\t\t\t\t\t\t\tfontFamily: '\"Roboto\", \"Helvetica\", \"Arial\", sansSerif',\n\t\t\t\t\t\t\t\t\tfontWeight: 500,\n\t\t\t\t\t\t\t\t\tlineHeight: 1.6,\n\t\t\t\t\t\t\t\t\tletterSpacing: \"0.0075em\",\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\tvariant=\"filled\"\n\t\t\t\t\t\t\tvalue={state.userInput}\n\t\t\t\t\t\t\tonKeyDown={(event) => {\n\t\t\t\t\t\t\t\tif (event.key === \"Enter\") {\n\t\t\t\t\t\t\t\t\tevent.preventDefault();\n\t\t\t\t\t\t\t\t\tconst submittedValue = (event.target as HTMLFormElement).value;\n\t\t\t\t\t\t\t\t\tif (!state.error) {\n\t\t\t\t\t\t\t\t\t\tdispatch(setPage(parseInt(submittedValue)));\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\tonChange={(event) => {\n\t\t\t\t\t\t\t\tconst submittedValue = (event.target as HTMLTextAreaElement).value;\n\t\t\t\t\t\t\t\tif (validatePageChoice(submittedValue, totalPages as number)) {\n\t\t\t\t\t\t\t\t\tsetState({ ...state, error: false, userInput: submittedValue });\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\tsetState({ ...state, error: true, userInput: submittedValue });\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\terror={state.error}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</Grid>\n\n\t\t\t\t\t<Grid item style={{ width: \"61%\" }}>\n\t\t\t\t\t\t<Typography variant=\"h6\">of {totalPages}</Typography>\n\t\t\t\t\t</Grid>\n\t\t\t\t</Grid>\n\t\t\t</Grid>\n\t\t</Card>\n\t);\n};\n","export const NAME = \"appFocus\";\n","import { NAME } from \"./constants\";\n\nexport const FOCUS_UPDATE = NAME + \"/FOCUS_UPDATE\";\nexport const DISPLAY_FOCUS_UPDATE = NAME + \"/DISPLAY_FOCUS_UPDATE\";\n","import { createSelector } from \"reselect\";\nimport { NAME } from \"./constants\";\nimport { FocusState } from \"./model\";\n\nexport const getAll = (state: any) => state[NAME];\n\nexport const getFocus = createSelector(getAll, (state: FocusState) => state.userFocus);\n\nexport const getDisplayFocus = createSelector(getAll, (state: FocusState) => state.displayFocus);\n","import * as t from \"./actionTypes\";\nimport { UserFocus, DisplayFocus } from \"./model\";\nimport { Dispatch } from \"redux\";\nimport { getFocus } from \"./selectors\";\n\nexport const updateFocus = (focus: UserFocus) => {\n\treturn { type: t.FOCUS_UPDATE, payload: focus };\n};\n\nexport const tryUpdateFocus = (focus: UserFocus) => {\n\treturn (dispatch: Dispatch, getState: Function) => {\n\t\tif (getFocus(getState()) !== focus) dispatch(updateFocus(focus));\n\t};\n};\n\nexport const toggleContextMenuFocus = () => {\n\treturn (dispatch: Dispatch, getState: Function) => {\n\t\tconst currentFocus = getFocus(getState());\n\t\tswitch (currentFocus) {\n\t\t\tcase \"CONTEXT_MENU\":\n\t\t\t\tdispatch(updateFocus(\"DOCUMENT\"));\n\t\t\t\tbreak;\n\t\t\tcase \"DOCUMENT\":\n\t\t\t\tdispatch(updateFocus(\"CONTEXT_MENU\"));\n\t\t\t\tbreak;\n\t\t}\n\t};\n};\n\nexport const updateDisplayFocus = (focus: DisplayFocus) => {\n\treturn { type: t.DISPLAY_FOCUS_UPDATE, payload: focus };\n};\n","import { FocusState, UserFocus, DisplayFocus } from \"./model\";\nimport * as t from \"./actionTypes\";\n\nconst initialState: FocusState = { userFocus: \"CONTROL\", displayFocus: \"ACTIVE_RIVER\" };\n\nconst focus = (state = initialState, { type, payload }: { type: string; payload: any }): FocusState => {\n\tswitch (type) {\n\t\tcase t.FOCUS_UPDATE:\n\t\t\treturn { ...state, userFocus: payload as UserFocus };\n\t\tcase t.DISPLAY_FOCUS_UPDATE:\n\t\t\treturn { ...state, displayFocus: payload as DisplayFocus };\n\t\tdefault:\n\t\t\treturn state;\n\t}\n};\n\nexport default focus;\n","import * as actions from \"./actions\";\nimport * as constants from \"./constants\";\nimport reducer from \"./reducer\";\nimport * as selectors from \"./selectors\";\nimport * as actionTypes from \"./actionTypes\";\n\nexport default { actions, constants, reducer, selectors, actionTypes };\n","import \"./PDFDocument.css\";\nimport \"./AnnotationLayer.css\";\nimport React, { RefObject, useEffect } from \"react\";\nimport { pdfjs, Document, Page } from \"react-pdf\";\nimport { connect, useDispatch, useSelector } from \"react-redux\";\nimport { materialLoaded, setPage, captureMaterialData, setMaterialHeight, emptyZoomQueue } from \"../../actions\";\nimport { getRenderCritialData, getMaterialHeight, getZoomQueue } from \"../../selectors\";\nimport { loadingMaterialText, noMaterialText } from \"../../../../shared/text\";\npdfjs.GlobalWorkerOptions.workerSrc = `//cdnjs.cloudflare.com/ajax/libs/pdf.js/${pdfjs.version}/pdf.worker.js`;\n\n//TODO-NICE: implent more pdf-reader functionality, like zoom\n\nfunction removeTextLayerOffset() {\n\tconst textLayers = document.querySelectorAll(\".react-pdf__Page__textContent\");\n\ttextLayers.forEach((layer) => {\n\t\tconst { style }: any = layer;\n\t\tstyle.top = \"0\";\n\t\tstyle.left = \"0\";\n\t\tstyle.transform = \"\";\n\t});\n}\n\nconst options = {\n\tcMapUrl: \"cmaps/\",\n\tcMapPacked: true,\n};\n\nfunction PDFDocument({\n\tparentSize,\n\tpdf,\n\tcurrentPage,\n\tmaterialLoaded,\n\tcaptureMaterialData,\n\tdocumentRef,\n}: {\n\tparentSize: any;\n\tpdf: File | undefined;\n\tcurrentPage: number;\n\tmaterialLoaded: (numPages: number) => void;\n\tcaptureMaterialData: Function;\n\tdocumentRef: RefObject<any>;\n}) {\n\tconst dispatch = useDispatch();\n\n\tconst materialHeight = useSelector(getMaterialHeight);\n\n\t// first setting\n\tif (!materialHeight) {\n\t\tdispatch(setMaterialHeight(parentSize.height));\n\t}\n\n\t// setting if changed\n\tif (materialHeight && materialHeight !== parentSize.height) {\n\t\tdispatch(setMaterialHeight(parentSize.height));\n\t}\n\t//TODO-NICE: this is not a queue...\n\tconst zoomQueue = useSelector(getZoomQueue);\n\n\tuseEffect(() => {\n\t\tif (!!zoomQueue && pdf) {\n\t\t\tdispatch(emptyZoomQueue());\n\t\t}\n\t}, [zoomQueue, pdf, dispatch]);\n\n\treturn (\n\t\t<Document\n\t\t\tfile={pdf}\n\t\t\toptions={options}\n\t\t\tonLoadSuccess={({ numPages }) => {\n\t\t\t\tmaterialLoaded(numPages);\n\t\t\t}}\n\t\t\tinputRef={documentRef}\n\t\t\tonItemClick={({ pageNumber }) => {\n\t\t\t\tdispatch(setPage(parseInt(pageNumber)));\n\t\t\t}}\n\t\t\tloading={loadingMaterialText}\n\t\t\tnoData={noMaterialText}\n\t\t>\n\t\t\t{pdf && (\n\t\t\t\t<Page\n\t\t\t\t\twidth={parentSize.width}\n\t\t\t\t\tpageNumber={currentPage}\n\t\t\t\t\tonRenderSuccess={() => {\n\t\t\t\t\t\tremoveTextLayerOffset();\n\t\t\t\t\t\tcaptureMaterialData(documentRef);\n\t\t\t\t\t}}\n\t\t\t\t/>\n\t\t\t)}\n\t\t</Document>\n\t);\n}\n\nexport const PDFDocumentContainer = connect(getRenderCritialData, {\n\tmaterialLoaded,\n\tcaptureMaterialData,\n})(PDFDocument);\n","export const noMaterialText = \"No PDF file specified.\";\nexport const loadingMaterialText = \"Loading PDF…\";\n\nexport const activeDocumentText = \"Active Document:\";\nexport const existingDataText = \"Documents with existing data:\";\nexport const loadMaterialText = \"Load document\";\nexport const downloadDatasetsText = \"Download document datasets\";\nexport const uploadDatasetsText = \"Upload document datasets\";\n\nexport const noteText = \"Note\";\nexport const questionText = \"Question\";\nexport const answerText = \"Answer\";\n","import React, { useState } from \"react\";\nimport Grid from \"@material-ui/core/Grid\";\nimport { withSize } from \"react-sizeme\";\nimport Paper from \"@material-ui/core/Paper\";\nimport focus from \"../../focus\";\n\nimport { useDispatch } from \"react-redux\";\nimport { PDFDocumentContainer } from \"./PDFDocument/PDFDocument\";\n\nfunction MaterialDisplayColumn({ size, hidden }: any) {\n\tconst dispatch = useDispatch();\n\n\tconst [elevation, setElevation] = useState(3);\n\n\treturn (\n\t\t<Grid\n\t\t\titem\n\t\t\tstyle={{\n\t\t\t\twidth: \"60%\",\n\t\t\t}}\n\t\t\tonMouseEnter={() => {\n\t\t\t\tdispatch(focus.actions.tryUpdateFocus(\"DOCUMENT\"));\n\t\t\t\tsetElevation(20);\n\t\t\t}}\n\t\t\tonMouseLeave={() => {\n\t\t\t\tsetElevation(3);\n\t\t\t}}\n\t\t\thidden={hidden}\n\t\t>\n\t\t\t<Paper elevation={elevation}>\n\t\t\t\t<PDFDocumentContainer parentSize={size}></PDFDocumentContainer>\n\t\t\t</Paper>\n\t\t</Grid>\n\t);\n}\n\nexport const MaterialDisplayColumnWithSize = withSize({ monitorHeight: true, noPlaceholder: true })(\n\tMaterialDisplayColumn\n);\n","import * as t from \"./actionTypes\";\nimport type { DisplayData, DisplayStatus, MaterialGroupData } from \"./model\";\nimport { createRef } from \"react\";\n\nconst initialState: DisplayData = {\n\tdisplayStatus: \"SHOW\",\n\ttotalPages: 1000,\n\tcurrentPage: 1,\n\tdocumentRef: createRef(),\n\tpageSpans: {},\n\tzoomQueue: null,\n\tmaterialData: { materialDataTimeStamp: -Infinity },\n};\n\nconst displayData = (state = initialState, { type, payload }: { type: string; payload: any }): DisplayData => {\n\tswitch (type) {\n\t\tcase t.PDF_UPLOADED:\n\t\t\treturn { ...state, pdf: payload as File, pdfName: (payload as File).name };\n\t\tcase t.MATERIAL_LOADED:\n\t\t\treturn { ...state, totalPages: payload as number };\n\t\tcase t.PAGE_UPDATE:\n\t\t\treturn { ...state, currentPage: payload as number };\n\t\tcase t.DISPLAY_STATUS:\n\t\t\treturn { ...state, displayStatus: payload as DisplayStatus };\n\t\tcase t.MATERIAL_DATA:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tmaterialData: payload,\n\t\t\t\tpageSpans: { ...state.pageSpans, [state.currentPage]: (payload as MaterialGroupData).materialSpans.length - 1 },\n\t\t\t};\n\t\tcase t.MATERIAL_HEIGHT:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tmaterialHeight: payload,\n\t\t\t};\n\t\tcase t.ZOOM_QUEUE:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tzoomQueue: payload,\n\t\t\t};\n\t\tdefault:\n\t\t\treturn state;\n\t}\n};\n\nexport default displayData;\n","import * as actions from \"./actions\";\nimport * as actionTypes from \"./actionTypes\";\nimport * as components from \"./components\";\nimport * as constants from \"./constants\";\nimport reducer from \"./reducer\";\nimport * as selectors from \"./selectors\";\n\nexport default { actions, actionTypes, components, constants, reducer, selectors };\n","import { isNullOrUndefined } from \"util\";\nimport { QACardField } from \"./model-content\";\n\nexport type SingleOrigin = { spanIndex: number; page: number };\nexport type QOnlyQAOrigin = { q: SingleOrigin; a: {} };\nexport type AOnlyQAOrigin = { q: {}; a: SingleOrigin };\nexport type PartialQAOrigin = QOnlyQAOrigin | AOnlyQAOrigin;\nexport const partialQAOrigin = (inputOrigin: SingleOrigin, field: QACardField): PartialQAOrigin => {\n\treturn { q: {}, a: {}, [field]: inputOrigin } as PartialQAOrigin;\n};\nexport type FullQAOrigin = { q: SingleOrigin; a: SingleOrigin };\nexport const extractSingleOrigin = (inputOrigin: QAOrigin, field: QACardField): SingleOrigin => {\n\t// existence needs to be checked prior\n\treturn (inputOrigin as FullQAOrigin)[field];\n};\nexport const flipQACardField = (field: QACardField): QACardField => (field === \"q\" ? \"a\" : \"q\");\nexport const flipPartialQAOrigin = (\n\tinputOrigin: PartialQAOrigin,\n\tinputField: QACardField,\n\toutputField: QACardField\n): PartialQAOrigin => {\n\treturn { [inputField]: {}, [outputField]: inputOrigin[inputField] } as PartialQAOrigin;\n};\nexport type QAOrigin = FullQAOrigin | PartialQAOrigin;\nexport const isQAOrigin = (inputOrigin: CardOrigin) => !isNullOrUndefined((inputOrigin as QAOrigin).q);\nexport type NoteOrigin = SingleOrigin;\nexport type CardOrigin = NoteOrigin | QAOrigin;\nexport const mergeSimilarCardOrigins = (inputOrigin: CardOrigin, oldOrigin: CardOrigin): CardOrigin => {\n\treturn { ...oldOrigin, ...inputOrigin };\n};\n","import { CardField, QACardField } from \"../model/model-content\";\nimport {\n\tCardOrigin,\n\tQAOrigin,\n\tPartialQAOrigin,\n\tpartialQAOrigin,\n\textractSingleOrigin,\n\tSingleOrigin,\n\tflipPartialQAOrigin,\n\tmergeSimilarCardOrigins,\n\tisQAOrigin,\n} from \"../model/model-origin\";\n\n//TODO-NICE: make this non-redundant, but for now it works\n\nexport const transformInputOrigin = (\n\tinputOrigin: CardOrigin,\n\tinputField: CardField,\n\toutputField: CardField,\n\toldOrigin?: CardOrigin\n): CardOrigin => {\n\tif (!oldOrigin) {\n\t\tif (inputField === outputField) return inputOrigin;\n\n\t\tif (inputField === \"note\") {\n\t\t\treturn partialQAOrigin(inputOrigin as SingleOrigin, outputField as QACardField);\n\t\t}\n\n\t\tif (outputField === \"note\") {\n\t\t\treturn extractSingleOrigin(inputOrigin as QAOrigin, inputField as QACardField);\n\t\t}\n\n\t\treturn flipPartialQAOrigin(inputOrigin as PartialQAOrigin, inputField, outputField);\n\t} else {\n\t\tif (inputField === outputField) return mergeSimilarCardOrigins(inputOrigin, oldOrigin);\n\n\t\tif (inputField === \"note\" && isQAOrigin(oldOrigin)) {\n\t\t\t// this means SingleOrigin to QAOrigin\n\t\t\treturn { ...oldOrigin, [outputField]: inputOrigin };\n\t\t}\n\n\t\tif (outputField === \"note\") {\n\t\t\treturn extractSingleOrigin(inputOrigin as QAOrigin, inputField as QACardField);\n\t\t}\n\n\t\t// swap cases\n\t\tif (outputField === \"q\") {\n\t\t\treturn { q: (inputOrigin as QAOrigin).a, a: (oldOrigin as QAOrigin).a } as QAOrigin;\n\t\t} else {\n\t\t\t//A\n\t\t\treturn { a: (inputOrigin as QAOrigin).q, q: (oldOrigin as QAOrigin).q } as QAOrigin;\n\t\t}\n\t}\n};\n","export const NAME = \"cards\";\n","import { NAME } from \"./constants\";\n\nexport const CARD_UPDATE = NAME + \"/CARD_UPDATE\";\nexport const CARD_PUSH = NAME + \"/CARD_PUSH\";\nexport const CARD_REMOVE = NAME + \"/CARD_REMOVE\";\nexport const CARD_GOAL = NAME + \"/CARD_GOAL\";\n\n// TODO-NICE: dont know where to put this else, cards is the lowest module\n// this is used for loading a new Document-DataSet / resetting if new Document\nexport const DOCUMENT_CHANGE = NAME + \"/DOCUMENT_CHANGE\";\n","import { createSelector } from \"reselect\";\nimport { CardsState } from \"./model/model\";\nimport { NAME } from \"./constants\";\n\nexport const getAll = (state: any) => state[NAME].present;\n\nexport const getLastCardIDNumber = createSelector(getAll, (state) => state.lastCardIDNumber);\n\nexport const getCards = createSelector(getAll, (state: CardsState) => state.cards);\n\nexport const getGoalCard = createSelector(getAll, (state: CardsState) => state.goalCard);\n","import { UpdateType, CardPayloadConfig, CardType } from \"../model/model\";\nimport { QACardContent, CardField } from \"../model/model-content\";\n\ntype UpdateContentStrFunction = (oldStr: string, newStr: string) => string;\n\nconst updateContentStrFunctions: { [key in UpdateType]: UpdateContentStrFunction } = {\n\tREPLACE: (_: string, newStr: string) => newStr,\n\tAPPEND: (oldStr: string, newStr: string) => oldStr + newStr,\n};\n\ntype partialUpdateContentStrFunction = (oldStr: string) => string;\n\nconst createPartialUpdateContentStrFunction = (updateType: UpdateType, newStr: string) => (oldStr: string) =>\n\tupdateContentStrFunctions[updateType](oldStr, newStr);\n\ntype creationFunction = (\n\toldConfig: CardPayloadConfig,\n\tpartialUpdateFunction: partialUpdateContentStrFunction\n) => CardPayloadConfig;\n\nconst defaultCreationFunction: creationFunction = (oldConfig, partialUpdateFunction) => {\n\treturn { ...oldConfig, content: partialUpdateFunction(oldConfig.content as string) };\n};\n\nconst creationFunctions: {\n\t[key in CardField]: creationFunction;\n} = {\n\tnote: defaultCreationFunction,\n\tq: (oldConfig, partialUpdateFunction) => {\n\t\tconst content = oldConfig.content as QACardContent;\n\t\treturn { ...oldConfig, content: { ...content, q: partialUpdateFunction(content.q) } };\n\t},\n\ta: (oldConfig, partialUpdateFunction) => {\n\t\tconst content = oldConfig.content as QACardContent;\n\t\treturn { ...oldConfig, content: { ...content, a: partialUpdateFunction(content.a) } };\n\t},\n};\n\nexport const contentStringToConfig = (\n\tcontentStr: string,\n\ttype: CardType,\n\toutputField: CardField,\n\tupdateType: UpdateType,\n\texistingCard?: CardPayloadConfig\n): CardPayloadConfig => {\n\tconst partialUpdateFunction = createPartialUpdateContentStrFunction(updateType, contentStr);\n\tconst isCardUpdate = !!existingCard;\n\treturn isCardUpdate\n\t\t? creationFunctions[outputField](existingCard as CardPayloadConfig, partialUpdateFunction)\n\t\t: creationFunctions[outputField]({ type, content: type === \"Q-A\" ? { q: \"\", a: \"\" } : \"\" }, partialUpdateFunction);\n};\n","import {\n\tCardPayload,\n\tFinalizedCardPayload,\n\tCreationType,\n\tUpdateType,\n\tCardType,\n\tCardConfig,\n\tCardID,\n} from \"./model/model\";\nimport { CardOrigin } from \"./model/model-origin\";\nimport * as t from \"./actionTypes\";\nimport { Dispatch } from \"redux\";\nimport { getLastCardIDNumber, getCards } from \"./selectors\";\nimport { contentStringToConfig } from \"./services/contentStringToConfig\";\n\nconst createCardID = (lastCardIDNumber: number) => (lastCardIDNumber + 1).toString();\n\nexport const cardPush = (cardPayload: CardPayload) => {\n\treturn (dispatch: Dispatch, getState: Function) => {\n\t\tdispatch({\n\t\t\ttype: t.CARD_PUSH,\n\t\t\tpayload: {\n\t\t\t\t...cardPayload,\n\t\t\t\tcard: { ...cardPayload.card, cardID: createCardID(getLastCardIDNumber(getState())) },\n\t\t\t} as FinalizedCardPayload,\n\t\t});\n\t};\n};\n\nexport const cardUpdate = (card: CardPayload) => {\n\treturn { type: t.CARD_UPDATE, payload: card };\n};\n\nexport const updateCardContent = (\n\tcontentString: string,\n\tcardID: CardID,\n\tcreationType: CreationType,\n\tupdateType: UpdateType,\n\torigin?: CardOrigin\n) => {\n\treturn (dispatch: Dispatch, getState: Function) => {\n\t\tconst state = getState();\n\n\t\tconst currentCard = getCards(state)[cardID as string];\n\t\tconst config = contentStringToConfig(contentString, currentCard.type, creationType, updateType, currentCard);\n\n\t\tdispatch(\n\t\t\tcardUpdate({\n\t\t\t\tcard: { ...config, origin },\n\t\t\t})\n\t\t);\n\t};\n};\n\nexport const pushCardContent = (\n\tcontentString: string,\n\tcreationType: CreationType,\n\tupdateType: UpdateType,\n\ttype: CardType,\n\torigin?: CardOrigin\n) => {\n\tconst config = contentStringToConfig(contentString, type, creationType, updateType);\n\n\treturn cardPush({ card: { ...config, origin } });\n};\n\nexport const removeCard = (cardID: CardID) => {\n\treturn { type: t.CARD_REMOVE, payload: cardID };\n};\n\nexport const setGoalCard = (cardConfig: CardConfig, creationType: CreationType) => {\n\treturn { type: t.CARD_GOAL, payload: { ...cardConfig, creationType } };\n};\n\nexport const resetGoalCard = () => {\n\treturn { type: t.CARD_GOAL, payload: null };\n};\n","export const NAME = \"documentDB\";\n","import { NAME } from \"./constants\";\n\nexport const ARCHIVE_CURRENT_DATA = NAME + \"/ARCHIVE_CURRENT_DATA\";\nexport const LOAD_DOCUMENT_DATA_SETS = NAME + \"/LOAD_DOCUMENT_DATA_SETS\";\n","import { DocumentData } from \"./model\";\nimport * as t from \"./actionTypes\";\n\nexport const archiveDBData = (dbData: DocumentData) => {\n\treturn { type: t.ARCHIVE_CURRENT_DATA, payload: dbData };\n};\n\nexport const loadDocumentDataSets = (dbData: DocumentData[], newActiveDataSet?: DocumentData) => {\n\treturn { type: t.LOAD_DOCUMENT_DATA_SETS, payload: { dbData, newActiveDataSet } };\n};\n","import { DocumentDBState, DocumentData, DocumentDB } from \"./model\";\nimport * as t from \"./actionTypes\";\n\nconst initialState: DocumentDBState = { documentDB: {} };\n\n//TODO-NICE: PDF-date gets saved with name, better use some hash or something (rename of document file is likely) -> use size or last-modified or smth like that instead of name\n\nconst documentDB = (\n\tstate = initialState,\n\t{ type, payload }: { type: string; payload: DocumentData | DocumentData[] | { dbData: DocumentData[] } }\n): DocumentDBState => {\n\tswitch (type) {\n\t\t// dont need to undo this, because if we change the active river and then change the document, the archive version gets overwritten\n\t\tcase t.ARCHIVE_CURRENT_DATA:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tdocumentDB: { ...state.documentDB, [(payload as DocumentData).name]: payload as DocumentData },\n\t\t\t};\n\t\tcase t.LOAD_DOCUMENT_DATA_SETS:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tdocumentDB: {\n\t\t\t\t\t...state.documentDB,\n\t\t\t\t\t...((payload as { dbData: DocumentData[] }).dbData as DocumentData[]).reduce((prev, dbData) => {\n\t\t\t\t\t\tprev[dbData.name] = dbData;\n\t\t\t\t\t\treturn prev;\n\t\t\t\t\t}, {} as DocumentDB),\n\t\t\t\t},\n\t\t\t};\n\t\tdefault:\n\t\t\treturn state;\n\t}\n};\n\nexport default documentDB;\n","import { createSelector } from \"reselect\";\nimport { DocumentDBState } from \"./model\";\nimport { NAME } from \"./constants\";\n\nexport const getAll = (state: any) => state[NAME].present;\n\nexport const getDocumentDB = createSelector(getAll, (state: DocumentDBState) => state.documentDB);\n\nexport const getDocumentNames = createSelector(getDocumentDB, (db) => Object.keys(db));\n\nexport const getDocumentDataSets = createSelector(getDocumentDB, (db) => Object.values(db));\n","import * as actions from \"./actions\";\nimport * as actionTypes from \"./actionTypes\";\nimport * as constants from \"./constants\";\nimport reducer from \"./reducer\";\nimport * as selectors from \"./selectors\";\n\nexport default { actions, actionTypes, constants, reducer, selectors };\n","import * as t from \"./actionTypes\";\nimport { CardsState, FinalizedCardPayload, CardID } from \"./model/model\";\nimport { ArchiveCards } from \"../db/model\";\nimport db from \"../db\";\n\nconst intialState: CardsState = {\n\tcards: {\n\t\t\"0\": {\n\t\t\tcardID: \"0\",\n\t\t\ttype: \"Q-A\",\n\t\t\tcontent: { q: \"Was ist der Sinn des Lebens?\", a: \"42\" },\n\t\t},\n\t\t\"1\": {\n\t\t\tcardID: \"1\",\n\t\t\ttype: \"Q-A\",\n\t\t\tcontent: { q: \"Welches Layout macht mehr Sinn?\", a: \"??\" },\n\t\t},\n\t\t\"2\": { cardID: \"2\", type: \"Note\", content: \"Note here\" },\n\t},\n\tlastCardIDNumber: 2,\n\tgoalCard: null,\n};\n\nconst removeCard = (state: CardsState, cardID: CardID) => {\n\tconst cards = { ...state.cards };\n\n\t// we do not reset the ID counter\n\n\tdelete cards[cardID];\n\n\treturn { ...state, cards };\n};\n\nconst cards = (state = intialState, { type, payload }: { type: string; payload?: any }) => {\n\tlet cardID;\n\tlet cardObj;\n\tswitch (type) {\n\t\tcase t.CARD_PUSH:\n\t\t\tconst lastCardIDNumber = state.lastCardIDNumber + 1;\n\n\t\t\tcardObj = { ...state.cards };\n\t\t\tcardObj[(payload as FinalizedCardPayload).card.cardID] = (payload as FinalizedCardPayload).card;\n\n\t\t\treturn { ...state, cards: cardObj, lastCardIDNumber };\n\t\tcase t.CARD_UPDATE:\n\t\t\tcardID = (payload as FinalizedCardPayload).card.cardID as string;\n\t\t\tcardObj = { ...state.cards };\n\t\t\tcardObj[cardID] = (payload as FinalizedCardPayload).card;\n\n\t\t\treturn { ...state, cards: cardObj };\n\t\tcase t.CARD_REMOVE:\n\t\t\treturn removeCard(state, payload as string);\n\t\tcase t.CARD_GOAL:\n\t\t\treturn { ...state, goalCard: payload };\n\t\tcase t.DOCUMENT_CHANGE:\n\t\t\tif (payload) {\n\t\t\t\treturn {\n\t\t\t\t\t...intialState,\n\t\t\t\t\tcards: (payload as ArchiveCards).cards,\n\t\t\t\t\tlastCardIDNumber: (payload as ArchiveCards).lastCardIDNumber,\n\t\t\t\t};\n\t\t\t} else {\n\t\t\t\treturn intialState;\n\t\t\t}\n\t\tcase db.actionTypes.LOAD_DOCUMENT_DATA_SETS:\n\t\t\t// basically the same as DOCUMENT_CHANGE, just only triggered\n\t\t\t// when uploading data that corresponds to current document\n\t\t\t// and if not we dont reset\n\t\t\tif (payload.newActiveDataSet) {\n\t\t\t\treturn {\n\t\t\t\t\t...intialState,\n\t\t\t\t\tcards: (payload.newActiveDataSet as ArchiveCards).cards,\n\t\t\t\t\tlastCardIDNumber: (payload.newActiveDataSet as ArchiveCards).lastCardIDNumber,\n\t\t\t\t};\n\t\t\t} else {\n\t\t\t\treturn state;\n\t\t\t}\n\t\tdefault:\n\t\t\treturn state;\n\t}\n};\n\nexport default cards;\n","import * as services from \"./services\";\nimport * as constants from \"./constants\";\nimport * as actionTypes from \"./actionTypes\";\nimport * as actions from \"./actions\";\nimport * as selectors from \"./selectors\";\nimport reducer from \"./reducer\";\n\nexport default { services, constants, actionTypes, actions, reducer, selectors };\n","export const NAME = \"cardRiverState\";\n","import { NAME } from \"./constants\";\nimport { createSelector } from \"reselect\";\nimport { CardRiverState } from \"./model\";\nimport cards from \"../cards\";\n\nexport const getAll = (state: any) => state[NAME].present;\n\nexport const getRiverMakeUps = createSelector(getAll, (state: CardRiverState) => state.riverMakeUps);\n\nexport const getActiveRiverMakeUpID = createSelector(getAll, (state: CardRiverState) => state.activeRiverMakeUpID);\n\nexport const getPushToRiver = createSelector(getAll, (state: CardRiverState) => state.pushToRiverID);\n\nexport const getPushToRiverMakeUp = createSelector(getRiverMakeUps, getPushToRiver, (makeUps, id) => makeUps[id]);\n\nexport const getActiveRiverMakeUp = createSelector(\n\tgetRiverMakeUps,\n\tgetActiveRiverMakeUpID,\n\t(makeUps, id) => makeUps[id]\n);\n\nexport const getPushToRiverCardIDs = createSelector(getPushToRiverMakeUp, (makeUp) => makeUp.cardIDs);\n\nexport const getPushToRiverCards = createSelector(\n\tgetPushToRiverCardIDs,\n\tcards.selectors.getCards,\n\t(makeUpCardIDs, cards) => makeUpCardIDs.map((id) => cards[id])\n);\n\n//TODO-NICE: rename active=page-wise or smth like that for clarity\nexport const getActiveRiverCardIDs = createSelector(getActiveRiverMakeUp, (makeUp) => makeUp.cardIDs);\n\nexport const getActiveRiverCards = createSelector(\n\tgetActiveRiverCardIDs,\n\tcards.selectors.getCards,\n\t(makeUpCardIDs, cards) => makeUpCardIDs.map((id) => cards[id])\n);\n\nexport const getRiverShowState = createSelector(getAll, (state: CardRiverState) => state.riverShowState);\n\nexport const riverShowStateIsShow = createSelector(getRiverShowState, (state) => state === \"SHOW\");\n\nexport const getHoveredCardData = createSelector(getAll, (state: CardRiverState) => {\n\treturn { id: state.highlightedCardID, field: state.highlightedCardField };\n});\n\nexport const getSourceCard = createSelector(getAll, cards.selectors.getCards, (state, cards) =>\n\t// only return sourceCard if it still exists\n\tstate.sourceCard && cards[state.sourceCard] ? state.sourceCard : null\n);\n\nexport const getLastRiverIDNumber = createSelector(getAll, (state: CardRiverState) => state.lastRiverIDNumber);\n\nexport const getRiverContentState = createSelector(getAll, (state: CardRiverState) => state.riverContentState);\n\nexport const getRiverContentFilter = createSelector(getAll, (state: CardRiverState) => state.contentFilter);\n","import React, { useState } from \"react\";\nimport { TextField, TextFieldProps } from \"@material-ui/core\";\n\nexport const HybridCardField = ({\n\tstoreValue = \"\",\n\tsaveChanges,\n\tstyle,\n\t...rest\n}: {\n\tstoreValue?: string;\n\tsaveChanges: (value: string) => void;\n\tstyle: any;\n} & TextFieldProps) => {\n\tconst [state, setState] = useState({ storeValue, mutableValue: storeValue });\n\n\t// reset if new storeValue, otherwise keep user-mutated value\n\tif (state.storeValue !== storeValue) {\n\t\tsetState({ storeValue, mutableValue: storeValue });\n\t}\n\n\t// need the onChange-pattern, because we want to be able to pre-fill the field from the store\n\treturn (\n\t\t<TextField\n\t\t\tmultiline\n\t\t\tvariant=\"filled\"\n\t\t\tvalue={state.mutableValue}\n\t\t\tonChange={(event) => {\n\t\t\t\tconst submittedValue = (event.target as HTMLTextAreaElement).value;\n\t\t\t\tsetState({ ...state, mutableValue: submittedValue });\n\t\t\t}}\n\t\t\tonBlur={(event: any) => {\n\t\t\t\tsaveChanges(event.target.value);\n\t\t\t}}\n\t\t\tstyle={style}\n\t\t\t{...rest}\n\t\t></TextField>\n\t);\n};\n","import DeleteForeverIcon from \"@material-ui/icons/DeleteForever\";\nimport React from \"react\";\nimport { IconButton, Tooltip } from \"@material-ui/core\";\nimport { useDispatch } from \"react-redux\";\nimport cards from \"../../../../cards\";\nimport focus from \"../../../../focus\";\nimport { CardID } from \"../../../../cards/model/model\";\nimport { deleteCardTooltip } from \"../../../../../shared/tooltips\";\n\n//TODO-NICE: use storybook for visual component testing\n\nexport const DeleteCardButton = ({ cardID }: { cardID: CardID }) => {\n\tconst dispatch = useDispatch();\n\treturn (\n\t\t<Tooltip title={deleteCardTooltip} enterDelay={500} enterNextDelay={1000}>\n\t\t\t<IconButton\n\t\t\t\ttype=\"button\"\n\t\t\t\tonClick={() => {\n\t\t\t\t\tdispatch(cards.actions.removeCard(cardID));\n\t\t\t\t}}\n\t\t\t\tonMouseEnter={() => {\n\t\t\t\t\tdispatch(focus.actions.tryUpdateFocus(\"RIVER_CONTROL\"));\n\t\t\t\t}}\n\t\t\t>\n\t\t\t\t<DeleteForeverIcon fontSize=\"small\"></DeleteForeverIcon>\n\t\t\t</IconButton>\n\t\t</Tooltip>\n\t);\n};\n","import FindInPageIcon from \"@material-ui/icons/FindInPage\";\nimport React from \"react\";\nimport { IconButton, Tooltip } from \"@material-ui/core\";\nimport { useDispatch } from \"react-redux\";\nimport display from \"../../../../display\";\nimport { SingleOrigin } from \"../../../../cards/model/model-origin\";\nimport focus from \"../../../../focus\";\nimport { jumpToOriginTooltip } from \"../../../../../shared/tooltips\";\n\nexport const JumpToOriginButton = ({ cardOrigin }: { cardOrigin: SingleOrigin }) => {\n\tconst dispatch = useDispatch();\n\treturn (\n\t\t<Tooltip title={jumpToOriginTooltip} enterDelay={500} enterNextDelay={1000}>\n\t\t\t<IconButton\n\t\t\t\ttype=\"button\"\n\t\t\t\tonClick={() => {\n\t\t\t\t\tdispatch(focus.actions.updateDisplayFocus(\"ACTIVE_RIVER\"));\n\t\t\t\t\tdispatch(display.actions.zoomToCardOrigin(cardOrigin.spanIndex, cardOrigin.page));\n\t\t\t\t}}\n\t\t\t>\n\t\t\t\t<FindInPageIcon fontSize=\"small\"></FindInPageIcon>\n\t\t\t</IconButton>\n\t\t</Tooltip>\n\t);\n};\n","import PanToolIcon from \"@material-ui/icons/PanTool\";\nimport PanToolOutlinedIcon from \"@material-ui/icons/PanToolOutlined\";\nimport React, { useState } from \"react\";\nimport { IconButton, Tooltip } from \"@material-ui/core\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { CardConfig, CreationType, GoalCard } from \"../../../../cards/model/model\";\nimport cards from \"../../../../cards\";\nimport focus from \"../../../../focus\";\nimport { grabForCardTooltip } from \"../../../../../shared/tooltips\";\n\nconst isGoalCard = (cardConfig: CardConfig, creationType: CreationType, goalCard: GoalCard) =>\n\tcardConfig.cardID === goalCard.cardID && creationType === goalCard.creationType;\n\nexport const GrabForFieldButton = ({\n\tcardConfig,\n\tcreationType,\n}: {\n\tcardConfig: CardConfig;\n\tcreationType: CreationType;\n}) => {\n\tconst dispatch = useDispatch();\n\tconst goalCard = useSelector(cards.selectors.getGoalCard);\n\tconst [outlined, setOutlined] = useState(true);\n\n\tif (goalCard) {\n\t\tconst isGoal = isGoalCard(cardConfig, creationType, goalCard);\n\t\tif (isGoal) {\n\t\t\tif (outlined) setOutlined(false);\n\t\t} else {\n\t\t\tif (!outlined) setOutlined(true);\n\t\t}\n\t} else {\n\t\tif (!outlined) setOutlined(true);\n\t}\n\n\treturn (\n\t\t<Tooltip title={grabForCardTooltip} enterDelay={500} enterNextDelay={1000}>\n\t\t\t<IconButton\n\t\t\t\ttype=\"button\"\n\t\t\t\tonMouseEnter={() => {\n\t\t\t\t\tdispatch(focus.actions.tryUpdateFocus(\"RIVER_CONTROL\"));\n\t\t\t\t}}\n\t\t\t\tonClick={() => {\n\t\t\t\t\tif (outlined) {\n\t\t\t\t\t\tdispatch(cards.actions.setGoalCard(cardConfig, creationType));\n\t\t\t\t\t} else {\n\t\t\t\t\t\tdispatch(cards.actions.resetGoalCard());\n\t\t\t\t\t}\n\t\t\t\t}}\n\t\t\t>\n\t\t\t\t{outlined ? (\n\t\t\t\t\t<PanToolOutlinedIcon fontSize=\"small\"></PanToolOutlinedIcon>\n\t\t\t\t) : (\n\t\t\t\t\t<PanToolIcon fontSize=\"small\"></PanToolIcon>\n\t\t\t\t)}\n\t\t\t</IconButton>\n\t\t</Tooltip>\n\t);\n};\n","import { NAME } from \"./constants\";\n\nexport const RIVER_SHOW_STATE = NAME + \"/RIVER_SHOW_STATE\";\nexport const RIVER_CONTENT_STATE = NAME + \"/RIVER_CONTENT_STATE\";\nexport const RIVER_PUSH_STATE = NAME + \"/RIVER_PUSH_STATE\";\nexport const RIVER_HOVERED_CARD = NAME + \"/RIVER_HOVERED_CARD\";\nexport const RIVER_CARD_SOURCE = NAME + \"/RIVER_CARD_SOURCE\";\nexport const RIVER_CONTENT_FILTER = NAME + \"/RIVER_CONTENT_FILTER\";\n","import * as t from \"./actionTypes\";\nimport { riverShowStateIsShow, getPushToRiver, getHoveredCardData, getSourceCard } from \"./selectors\";\nimport { Dispatch } from \"redux\";\nimport { CardID } from \"../cards/model/model\";\nimport { CardField } from \"../cards/model/model-content\";\nimport { CardOrigin } from \"../cards/model/model-origin\";\nimport { RiverContentState, ContentFilter } from \"./model\";\n\nexport const toggleRiverShowState = () => (dispatch: Dispatch, getState: Function) => {\n\tdispatch({ type: t.RIVER_SHOW_STATE, payload: riverShowStateIsShow(getState()) ? \"HIDE\" : \"SHOW\" });\n};\n\nexport const setRiverContentState = (state: RiverContentState) => {\n\treturn { type: t.RIVER_CONTENT_STATE, payload: state };\n};\n\nexport const setPushToRiver = (id: string) => {\n\treturn { type: t.RIVER_PUSH_STATE, payload: id };\n};\n\nexport const trySetPushToRiver = (id: string) => {\n\treturn (dispatch: Dispatch, getState: Function) => {\n\t\tif (getPushToRiver(getState()) !== id) dispatch(setPushToRiver(id));\n\t};\n};\n\nexport const setHoveredCard = (cardID: CardID, field: CardField) => {\n\treturn { payload: { id: cardID, field }, type: t.RIVER_HOVERED_CARD };\n};\n\nexport const trySetHoveredCard = (cardID: CardID, field: CardField) => {\n\treturn (dispatch: Dispatch, getState: Function) => {\n\t\tconst state = getState();\n\t\tconst highlightedCardIDData = getHoveredCardData(state);\n\t\tif (highlightedCardIDData.id !== cardID || highlightedCardIDData.field !== field)\n\t\t\tdispatch(setHoveredCard(cardID, field));\n\t};\n};\n\nexport const setSourceCard = (sourceField: CardField, origin?: CardOrigin) => {\n\treturn { type: t.RIVER_CARD_SOURCE, payload: { origin, sourceField } };\n};\n\nexport const trySetSourceCard = (sourceField: CardField, origin?: CardOrigin) => {\n\treturn (dispatch: Dispatch, getState: Function) => {\n\t\tconst sourceCard = getSourceCard(getState());\n\t\tif (!sourceCard || sourceCard.sourceField !== sourceField || sourceCard.origin !== origin)\n\t\t\tdispatch(setSourceCard(sourceField, origin));\n\t};\n};\n\nexport const resetSourceCard = () => {\n\treturn { type: t.RIVER_CARD_SOURCE, payload: null };\n};\n\nexport const tryResetSourceCard = () => {\n\treturn (dispatch: Dispatch, getState: Function) => {\n\t\tconst sourceCardExits = getSourceCard(getState()) !== null;\n\t\tif (sourceCardExits) dispatch(resetSourceCard());\n\t};\n};\n\nexport const setContentFilter = (filter: ContentFilter) => {\n\treturn { type: t.RIVER_CONTENT_FILTER, payload: filter };\n};\n","import Grid from \"@material-ui/core/Grid\";\nimport React, { useRef, useEffect, MutableRefObject } from \"react\";\nimport { HybridCardField } from \"../HybridCardField\";\nimport { QACardContent } from \"../../../../cards/model/model-content\";\nimport { SingleOrigin, QAOrigin, QOnlyQAOrigin, AOnlyQAOrigin } from \"../../../../cards/model/model-origin\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport cards from \"../../../../cards\";\nimport { DeleteCardButton } from \"../Buttons/DeleteCardButton\";\nimport { JumpToOriginButton } from \"../Buttons/JumpToOriginButton\";\nimport { GrabForFieldButton } from \"../Buttons/GrabForFieldButton\";\nimport { isNullOrUndefined } from \"util\";\nimport { getHoveredCardData } from \"../../../selectors\";\nimport focus from \"../../../../focus\";\nimport { trySetSourceCard } from \"../../../actions\";\nimport { Card, Paper } from \"@material-ui/core\";\nimport { questionText, answerText } from \"../../../../../shared/text\";\nimport { CardProps, borderStyle } from \"./ClayCard\";\n//TODO-RC: make Q/A in menu bigger so that you dont accidentially move off it\n//TODO-RC: make Q/A as a general field for hoevered data, so that it does not jank so much\n//TODO-NICE: think of way to not have menu over the cards, because you cant read them this way? end of card?\n//TODO-RC: use dark color pallet (theme?)\n\nexport const QACard = ({ config }: CardProps) => {\n\tconst dispatch = useDispatch();\n\tconst { id, field } = useSelector(getHoveredCardData);\n\tconst isHoveredCard = config.cardID === id;\n\n\t// we only offer one way to use card-content in other cards: extract\n\t// we do not allow grabbing from other cards, just from the document, so we only need the grab button in the ActiveRiver\n\tconst isActiveRiver = useSelector(focus.selectors.getDisplayFocus) === \"ACTIVE_RIVER\";\n\n\tconst ref: MutableRefObject<undefined | HTMLDivElement> = useRef();\n\tuseEffect(() => {\n\t\tif (ref.current && isHoveredCard) {\n\t\t\t(ref.current as HTMLDivElement).scrollIntoView({ behavior: \"smooth\", block: \"center\", inline: \"center\" });\n\t\t}\n\t});\n\n\treturn (\n\t\t<Card variant=\"elevation\" elevation={5} ref={ref} style={{ padding: \"3px\" }}>\n\t\t\t<Grid container direction=\"row\" justify=\"space-between\">\n\t\t\t\t<Grid item>\n\t\t\t\t\t<Grid container direction=\"column\" spacing={1}>\n\t\t\t\t\t\t<Grid item>\n\t\t\t\t\t\t\t<Grid container direction=\"row\" spacing={1}>\n\t\t\t\t\t\t\t\t<Grid item>\n\t\t\t\t\t\t\t\t\t<div style={isHoveredCard && field === \"q\" ? borderStyle : undefined}>\n\t\t\t\t\t\t\t\t\t\t<HybridCardField\n\t\t\t\t\t\t\t\t\t\t\tsaveChanges={(value) => {\n\t\t\t\t\t\t\t\t\t\t\t\tdispatch(cards.actions.updateCardContent(value, config.cardID, \"q\", \"REPLACE\", config.origin));\n\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t\tstoreValue={(config.content as QACardContent).q}\n\t\t\t\t\t\t\t\t\t\t\tlabel={questionText}\n\t\t\t\t\t\t\t\t\t\t\tvariant=\"filled\"\n\t\t\t\t\t\t\t\t\t\t\tstyle={{ backgroundColor: \"#FFBF69\" }}\n\t\t\t\t\t\t\t\t\t\t\tInputLabelProps={{ style: { color: \"#000000\" } }}\n\t\t\t\t\t\t\t\t\t\t\tonMouseEnter={() => {\n\t\t\t\t\t\t\t\t\t\t\t\tdispatch(focus.actions.tryUpdateFocus(\"RIVER\"));\n\t\t\t\t\t\t\t\t\t\t\t\tdispatch(trySetSourceCard(\"q\", config.origin));\n\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t></HybridCardField>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t</Grid>\n\n\t\t\t\t\t\t\t\t<Grid item>\n\t\t\t\t\t\t\t\t\t<Paper variant=\"outlined\">\n\t\t\t\t\t\t\t\t\t\t<Grid container direction=\"column\">\n\t\t\t\t\t\t\t\t\t\t\t{isActiveRiver && <GrabForFieldButton cardConfig={config} creationType=\"q\"></GrabForFieldButton>}\n\t\t\t\t\t\t\t\t\t\t\t{config.origin && !isNullOrUndefined((config.origin as QOnlyQAOrigin).q?.spanIndex) && (\n\t\t\t\t\t\t\t\t\t\t\t\t<JumpToOriginButton\n\t\t\t\t\t\t\t\t\t\t\t\t\tcardOrigin={(config.origin as QAOrigin).q as SingleOrigin}\n\t\t\t\t\t\t\t\t\t\t\t\t></JumpToOriginButton>\n\t\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t\t\t</Paper>\n\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t<Grid item>\n\t\t\t\t\t\t\t<Grid container direction=\"row\" spacing={1}>\n\t\t\t\t\t\t\t\t<Grid item>\n\t\t\t\t\t\t\t\t\t<div style={isHoveredCard && field === \"a\" ? borderStyle : undefined}>\n\t\t\t\t\t\t\t\t\t\t<HybridCardField\n\t\t\t\t\t\t\t\t\t\t\tsaveChanges={(value) => {\n\t\t\t\t\t\t\t\t\t\t\t\tdispatch(cards.actions.updateCardContent(value, config.cardID, \"a\", \"REPLACE\", config.origin));\n\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t\tstoreValue={(config.content as QACardContent).a}\n\t\t\t\t\t\t\t\t\t\t\tlabel={answerText}\n\t\t\t\t\t\t\t\t\t\t\tstyle={{ backgroundColor: \"#2EC4B6\" }}\n\t\t\t\t\t\t\t\t\t\t\tInputLabelProps={{ style: { color: \"#000000\" } }}\n\t\t\t\t\t\t\t\t\t\t\tonMouseEnter={() => {\n\t\t\t\t\t\t\t\t\t\t\t\tdispatch(focus.actions.tryUpdateFocus(\"RIVER\"));\n\t\t\t\t\t\t\t\t\t\t\t\tdispatch(trySetSourceCard(\"a\", config.origin));\n\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t></HybridCardField>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t\t<Grid item>\n\t\t\t\t\t\t\t\t\t<Paper variant=\"outlined\">\n\t\t\t\t\t\t\t\t\t\t<Grid container direction=\"column\">\n\t\t\t\t\t\t\t\t\t\t\t{isActiveRiver && <GrabForFieldButton cardConfig={config} creationType=\"a\"></GrabForFieldButton>}\n\t\t\t\t\t\t\t\t\t\t\t{config.origin && !isNullOrUndefined((config.origin as AOnlyQAOrigin).a?.spanIndex) && (\n\t\t\t\t\t\t\t\t\t\t\t\t<JumpToOriginButton\n\t\t\t\t\t\t\t\t\t\t\t\t\tcardOrigin={(config.origin as QAOrigin).a as SingleOrigin}\n\t\t\t\t\t\t\t\t\t\t\t\t></JumpToOriginButton>\n\t\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t\t\t</Paper>\n\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t</Grid>\n\t\t\t\t\t</Grid>\n\t\t\t\t</Grid>\n\n\t\t\t\t<Grid item>\n\t\t\t\t\t<DeleteCardButton cardID={config.cardID}></DeleteCardButton>\n\t\t\t\t</Grid>\n\t\t\t</Grid>\n\t\t</Card>\n\t);\n};\n","import React, { useRef, useEffect, MutableRefObject } from \"react\";\nimport { HybridCardField } from \"../HybridCardField\";\nimport { NoteOrigin } from \"../../../../cards/model/model-origin\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport cards from \"../../../../cards\";\nimport { DeleteCardButton } from \"../Buttons/DeleteCardButton\";\nimport { JumpToOriginButton } from \"../Buttons/JumpToOriginButton\";\nimport { GrabForFieldButton } from \"../Buttons/GrabForFieldButton\";\nimport { getHoveredCardData } from \"../../../selectors\";\nimport focus from \"../../../../focus\";\nimport { trySetSourceCard } from \"../../../actions\";\nimport { Card, Paper, Grid } from \"@material-ui/core\";\nimport { noteText } from \"../../../../../shared/text\";\nimport { CardProps, borderStyle } from \"./ClayCard\";\n//TODO-PERF: investigate if this hover-store approach is too slow, useRef instead?\nexport const NoteCard = ({ config }: CardProps) => {\n\tconst dispatch = useDispatch();\n\tconst { id } = useSelector(getHoveredCardData);\n\tconst isHoveredCard = config.cardID === id;\n\n\t// we only offer one way to use card-content in other cards: extract\n\t// we do not allow grabbing from other cards, just from the document, so we only need the grab button in the ActiveRiver\n\t//TODO-NICE: allow grabbing from other cards\n\tconst isActiveRiver = useSelector(focus.selectors.getDisplayFocus) === \"ACTIVE_RIVER\";\n\n\tconst ref: MutableRefObject<undefined | HTMLDivElement> = useRef();\n\tuseEffect(() => {\n\t\tif (ref.current && isHoveredCard) {\n\t\t\t(ref.current as HTMLDivElement).scrollIntoView({ behavior: \"smooth\", block: \"center\", inline: \"center\" });\n\t\t}\n\t});\n\n\treturn (\n\t\t<Card\n\t\t\tvariant=\"elevation\"\n\t\t\televation={5}\n\t\t\tstyle={isHoveredCard ? { ...borderStyle, padding: \"3px\" } : { padding: \"3px\" }}\n\t\t\tref={ref}\n\t\t>\n\t\t\t<Grid container direction=\"row\" justify=\"space-between\">\n\t\t\t\t<Grid item>\n\t\t\t\t\t<Grid container direction=\"row\" spacing={1}>\n\t\t\t\t\t\t<Grid item>\n\t\t\t\t\t\t\t<HybridCardField\n\t\t\t\t\t\t\t\tsaveChanges={(value) => {\n\t\t\t\t\t\t\t\t\tdispatch(cards.actions.updateCardContent(value, config.cardID, \"note\", \"REPLACE\", config.origin));\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\tstoreValue={config.content as string}\n\t\t\t\t\t\t\t\tlabel={noteText}\n\t\t\t\t\t\t\t\tvariant=\"filled\"\n\t\t\t\t\t\t\t\tstyle={{ backgroundColor: \"#CBF3F0\" }}\n\t\t\t\t\t\t\t\tInputLabelProps={{ style: { color: \"#000000\" } }}\n\t\t\t\t\t\t\t\tonMouseEnter={() => {\n\t\t\t\t\t\t\t\t\tdispatch(focus.actions.tryUpdateFocus(\"RIVER\"));\n\t\t\t\t\t\t\t\t\tdispatch(trySetSourceCard(\"note\", config.origin));\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t></HybridCardField>\n\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t<Grid item>\n\t\t\t\t\t\t\t<Paper variant=\"outlined\">\n\t\t\t\t\t\t\t\t<Grid container direction=\"column\">\n\t\t\t\t\t\t\t\t\t<Grid item>\n\t\t\t\t\t\t\t\t\t\t{isActiveRiver && <GrabForFieldButton cardConfig={config} creationType=\"note\"></GrabForFieldButton>}\n\t\t\t\t\t\t\t\t\t</Grid>\n\n\t\t\t\t\t\t\t\t\t<Grid item>\n\t\t\t\t\t\t\t\t\t\t{config.origin && (\n\t\t\t\t\t\t\t\t\t\t\t<JumpToOriginButton cardOrigin={config.origin as NoteOrigin}></JumpToOriginButton>\n\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t</Paper>\n\t\t\t\t\t\t</Grid>\n\t\t\t\t\t</Grid>\n\t\t\t\t</Grid>\n\n\t\t\t\t<Grid item>\n\t\t\t\t\t<DeleteCardButton cardID={config.cardID}></DeleteCardButton>\n\t\t\t\t</Grid>\n\t\t\t</Grid>\n\t\t</Card>\n\t);\n};\n","import React from \"react\";\nimport { CardConfig } from \"../../../../cards/model/model\";\nimport { QACard } from \"./QACard\";\nimport { NoteCard } from \"./NoteCard\";\n\nexport type CardProps = { config: CardConfig; riverID: string };\n\nexport const borderStyle = { border: \"4px solid green\", borderRadius: \"4px\" };\n\nexport const ClayCard = ({ config, riverID }: CardProps) => {\n\tswitch (config.type) {\n\t\tcase \"Note\":\n\t\t\treturn <NoteCard config={config} riverID={riverID}></NoteCard>;\n\t\tcase \"Q-A\":\n\t\t\treturn <QACard config={config} riverID={riverID}></QACard>;\n\t}\n};\n","import Grid from \"@material-ui/core/Grid\";\nimport React from \"react\";\nimport { incrementer } from \"../../../../shared/utils\";\nimport { ClayCard } from \"./Cards/ClayCard\";\nimport { CardConfig } from \"../../../cards/model/model\";\nimport { Divider } from \"@material-ui/core\";\n\n//TODO-RC: remove saved documents / load documents via menu vs via uploading\n\nconst GridDivider = () => (\n\t<Grid item>\n\t\t<Divider></Divider>\n\t</Grid>\n);\n\nexport const toCardGridItemsWithDividers = (cards: CardConfig[], riverID: string) => {\n\tconst increment = incrementer();\n\n\treturn cards.reduce((prev, currentCard, index, arr) => {\n\t\tprev.push(\n\t\t\t<Grid item key={increment()}>\n\t\t\t\t<ClayCard config={currentCard} riverID={riverID} key={increment()}></ClayCard>\n\t\t\t</Grid>\n\t\t);\n\n\t\tconst notLastCard = index < arr.length - 1;\n\t\tif (notLastCard) prev.push(<GridDivider key={increment()}></GridDivider>);\n\t\treturn prev;\n\t}, [] as any[]);\n};\n","import FeaturedVideoIcon from \"@material-ui/icons/FeaturedVideo\";\nimport React from \"react\";\nimport { IconButton, Tooltip } from \"@material-ui/core\";\nimport { useDispatch } from \"react-redux\";\nimport cards from \"../../../../cards\";\nimport focus from \"../../../../focus\";\nimport { newNoteCardTooltip } from \"../../../../../shared/tooltips\";\n\nexport const AddNoteButton = () => {\n\tconst dispatch = useDispatch();\n\treturn (\n\t\t<Tooltip title={newNoteCardTooltip} enterDelay={500} enterNextDelay={1000}>\n\t\t\t<IconButton\n\t\t\t\ttype=\"button\"\n\t\t\t\tonClick={() => {\n\t\t\t\t\tdispatch(cards.actions.cardPush({ card: { type: \"Note\", content: \"\" } }));\n\t\t\t\t}}\n\t\t\t\tonMouseEnter={() => {\n\t\t\t\t\tdispatch(focus.actions.tryUpdateFocus(\"RIVER_CONTROL\"));\n\t\t\t\t}}\n\t\t\t>\n\t\t\t\t<FeaturedVideoIcon></FeaturedVideoIcon>\n\t\t\t</IconButton>\n\t\t</Tooltip>\n\t);\n};\n","import FeaturedPlayListIcon from \"@material-ui/icons/FeaturedPlayList\";\nimport React from \"react\";\nimport { IconButton, Tooltip } from \"@material-ui/core\";\nimport { useDispatch } from \"react-redux\";\nimport cards from \"../../../../cards\";\nimport focus from \"../../../../focus\";\nimport { newQACardTooltip } from \"../../../../../shared/tooltips\";\n\nexport const AddQAButton = () => {\n\tconst dispatch = useDispatch();\n\treturn (\n\t\t<Tooltip title={newQACardTooltip} enterDelay={500} enterNextDelay={1000}>\n\t\t\t<IconButton\n\t\t\t\ttype=\"button\"\n\t\t\t\tonClick={() => {\n\t\t\t\t\tdispatch(cards.actions.cardPush({ card: { type: \"Q-A\", content: { q: \"\", a: \"\" } } }));\n\t\t\t\t}}\n\t\t\t\tonMouseEnter={() => {\n\t\t\t\t\tdispatch(focus.actions.tryUpdateFocus(\"RIVER_CONTROL\"));\n\t\t\t\t}}\n\t\t\t>\n\t\t\t\t<FeaturedPlayListIcon></FeaturedPlayListIcon>\n\t\t\t</IconButton>\n\t\t</Tooltip>\n\t);\n};\n","import { Typography, Divider } from \"@material-ui/core\";\nimport Accordion from \"@material-ui/core/Accordion\";\nimport AccordionSummary from \"@material-ui/core/AccordionSummary\";\nimport AccordionDetails from \"@material-ui/core/AccordionDetails\";\nimport Grid from \"@material-ui/core/Grid\";\nimport React, { useState } from \"react\";\nimport { trySetPushToRiver } from \"../../actions\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { AddNoteButton } from \"./Buttons/AddNoteButton\";\nimport { AddQAButton } from \"./Buttons/AddQAButton\";\nimport { getPushToRiver } from \"../../selectors\";\nimport display from \"../../../display\";\nimport focus from \"../../../focus\";\n\n//TODO-NICE: make it not be accordion but closeable?\n//TODO-NICE: make local show / hide notes\nexport const CardRiverAccordion = ({\n\triverID,\n\tgridItems,\n\tsummary,\n}: {\n\triverID: string;\n\tgridItems: any;\n\tsummary: string;\n}) => {\n\tconst defaultElevation = 3;\n\tconst highlightElevation = 20;\n\tconst [elevation, setElevation] = useState(defaultElevation);\n\tconst pushToRiver = useSelector(getPushToRiver);\n\n\tif (riverID === pushToRiver && elevation === defaultElevation) {\n\t\tsetElevation(highlightElevation);\n\t} else if (riverID !== pushToRiver && elevation !== defaultElevation) {\n\t\tsetElevation(defaultElevation);\n\t}\n\n\tconst materialHeight = useSelector(display.selectors.getMaterialHeight);\n\tconst displayFocus = useSelector(focus.selectors.getDisplayFocus);\n\n\tconst dispatch = useDispatch();\n\n\t//TODO-NICE: make HalfFull-sub-menu for half-full QAs\n\t//TODO-NICE: if you start without any document and then load one, the current cards should be merged into that one\n\t//TODO-NICE: scroll-to-top for overflowing river\n\treturn (\n\t\t<Accordion\n\t\t\tdefaultExpanded={true}\n\t\t\tonMouseEnter={() => {\n\t\t\t\tdispatch(trySetPushToRiver(riverID));\n\t\t\t}}\n\t\t\televation={elevation}\n\t\t\t//TODO-NICE: I use 1400 to prevent non-overflow on reloading (the site would be stretched)\n\t\t\t// if the river is bigger than the pdf-page would be, then the site is stretchted and the pdf-page-element assumes the size of the river\n\t\t\t// this solution assumes the pdf page is always bigger than 1400 (true on 22'), need solution to get height of pdf-page-element itself and not its parent\n\t\t\tstyle={\n\t\t\t\tdisplayFocus === \"ACTIVE_RIVER\"\n\t\t\t\t\t? {\n\t\t\t\t\t\t\toverflowY: \"auto\",\n\t\t\t\t\t\t\tmaxHeight: materialHeight ? materialHeight : \"1400px\",\n\t\t\t\t\t  }\n\t\t\t\t\t: {}\n\t\t\t}\n\t\t>\n\t\t\t<AccordionSummary>\n\t\t\t\t<Typography\n\t\t\t\t\tvariant=\"h6\"\n\t\t\t\t\talign=\"center\"\n\t\t\t\t\tstyle={{ MozUserSelect: \"none\", WebkitUserSelect: \"none\", msUserSelect: \"none\" }}\n\t\t\t\t>\n\t\t\t\t\t{summary}\n\t\t\t\t</Typography>\n\t\t\t</AccordionSummary>\n\t\t\t<AccordionDetails>\n\t\t\t\t<Grid container direction=\"column\" spacing={2} justify=\"center\" alignItems=\"stretch\">\n\t\t\t\t\t<Grid item>\n\t\t\t\t\t\t<AddQAButton></AddQAButton>\n\t\t\t\t\t\t<AddNoteButton></AddNoteButton>\n\t\t\t\t\t\t<Divider></Divider>\n\t\t\t\t\t</Grid>\n\n\t\t\t\t\t<Grid item>\n\t\t\t\t\t\t<Grid container direction=\"column\" spacing={2} justify=\"center\" alignItems=\"stretch\">\n\t\t\t\t\t\t\t{gridItems}\n\t\t\t\t\t\t</Grid>\n\t\t\t\t\t</Grid>\n\t\t\t\t</Grid>\n\t\t\t</AccordionDetails>\n\t\t</Accordion>\n\t);\n};\n\n//TODO-RC: find way to use space for cards (right now they take up maybe 50%), maybe make Notes and QAs connected? I can display two in one line, or make notes bigger, so that each line has one qa, one note?\n","import { CardConfig, NoteConfig, QAConfig } from \"../../../cards/model/model\";\nimport { toCardGridItemsWithDividers } from \"./toCardGridItemsWithDividers\";\nimport { useMemo } from \"react\";\nimport { CardRiverAccordion } from \"./CardRiverAccordion\";\nimport React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { getRiverContentState, getRiverContentFilter } from \"../../selectors\";\nimport { ContentFilter } from \"../../model\";\n\n//TODO-NICE: untangle these components, dont need to so many subs?\n\nconst noteContainsContentFilter = (noteConfig: NoteConfig, contentFilter: ContentFilter) =>\n\tnoteConfig.content.includes(contentFilter);\n\nconst qaContainsContentFilter = (qaConfig: QAConfig, contentFilter: ContentFilter) =>\n\tqaConfig.content.a.includes(contentFilter) || qaConfig.content.q.includes(contentFilter);\n\nexport const ChildCardRiver = ({ riverID, riverCards }: { riverID: string; riverCards: CardConfig[] }) => {\n\tconst riverContentState = useSelector(getRiverContentState);\n\n\t//TODO-NICE: use regex for upper/lower-case\n\tconst contentFilter = useSelector(getRiverContentFilter);\n\n\t// this should only change if the store values change\n\tconst gridItems = useMemo(() => {\n\t\tlet inputCards = riverCards;\n\n\t\tif (riverContentState === \"NONE\") {\n\t\t\treturn [];\n\t\t}\n\n\t\tif (riverContentState !== \"ALL\") {\n\t\t\tif (riverContentState === \"QAS\") {\n\t\t\t\tinputCards = riverCards.filter((config) => config.type === \"Q-A\");\n\t\t\t}\n\t\t\tif (riverContentState === \"NOTES\") {\n\t\t\t\tinputCards = riverCards.filter((config) => config.type === \"Note\");\n\t\t\t}\n\t\t}\n\t\t//TODO-NICE: optimize this waste, move this out of the memo as it changes more rapidly\n\t\tif (contentFilter !== \"\")\n\t\t\tinputCards = inputCards.filter((card) => {\n\t\t\t\tswitch (card.type) {\n\t\t\t\t\tcase \"Note\":\n\t\t\t\t\t\treturn noteContainsContentFilter(card as NoteConfig, contentFilter);\n\t\t\t\t\tcase \"Q-A\":\n\t\t\t\t\t\treturn qaContainsContentFilter(card as QAConfig, contentFilter);\n\t\t\t\t}\n\t\t\t\treturn false;\n\t\t\t});\n\n\t\treturn toCardGridItemsWithDividers(inputCards, riverID);\n\t}, [riverCards, riverID, riverContentState, contentFilter]);\n\n\treturn <CardRiverAccordion riverID={riverID} gridItems={gridItems} summary={riverID}></CardRiverAccordion>;\n};\n","import { CardID } from \"../cards/model/model\";\nimport { CardField } from \"../cards/model/model-content\";\nimport { CardOrigin } from \"../cards/model/model-origin\";\n\nexport type RiverMakeUp = { riverID: string; cardIDs: CardID[] };\n\nexport type RiverMakeUps = { [riverID: string]: RiverMakeUp };\n\nexport type RiverShowState = \"SHOW\" | \"HIDE\";\n\nexport type RiverContentState = \"ALL\" | \"NOTES\" | \"QAS\" | \"NONE\";\n\n//TODO-NICE: rename pushto/active river\n\n// SourceCard is used when selecting/extracting from a card\nexport type SourceCard = { origin?: CardOrigin; sourceField: CardField };\n\nexport type ContentFilter = string;\n\nexport type CardRiverState = {\n\triverMakeUps: RiverMakeUps;\n\tactiveRiverMakeUpID: string;\n\tpushToRiverID: string;\n\tlastRiverIDNumber: number;\n\t// show/hide river\n\triverShowState: RiverShowState;\n\t// filter content\n\triverContentState: RiverContentState;\n\t// this is used to determine which card should be highlighted in reaction to hovering over it in the context-menu\n\thighlightedCardID: null | CardID;\n\thighlightedCardField: null | CardField;\n\t// is used to determine if we are extracting from a card\n\tsourceCard: SourceCard | null;\n\tcontentFilter: ContentFilter | \"\";\n};\n\nexport const pageNumberToRiverMakeUpID = (page: number) => \"CardRiver \" + page;\n\nexport const riverMakeUpIDToPageNumber = (riverID: string) => parseInt(riverID.replace(\"CardRiver \", \"\"));\n","import { Grid } from \"@material-ui/core\";\nimport { useSelector } from \"react-redux\";\nimport { getRiverMakeUps } from \"../../selectors\";\nimport React, { useRef, useEffect } from \"react\";\nimport cards from \"../../../cards\";\nimport focus from \"../../../focus\";\nimport display from \"../../../display\";\nimport { incrementer } from \"../../../../shared/utils\";\nimport { ChildCardRiver } from \"../CardRiver/ChildCardRiver\";\nimport { riverMakeUpIDToPageNumber } from \"../../model\";\n\n//TODO-PREF: memoize Rivers (not necessary right now, because we just hide)\n\nexport const SummaryRiver = () => {\n\tconst displayFocus = useSelector(focus.selectors.getDisplayFocus);\n\tconst currentPage = useSelector(display.selectors.getCurrentPage);\n\tconst cardConfigs = useSelector(cards.selectors.getCards);\n\tconst riverMakeUps = Object.values(useSelector(getRiverMakeUps));\n\tconst focusRef = useRef<HTMLDivElement | null>(null);\n\n\t// the current-page river is scrolled into view\n\tuseEffect(() => {\n\t\tif (displayFocus === \"SUMMARY_RIVER\" && focusRef.current !== null) {\n\t\t\tconst boundingRect = (focusRef.current as HTMLDivElement).getBoundingClientRect();\n\t\t\t//TODO-NICE: 100 is just experience on 22', I assume that then the River is in the top row\n\t\t\t// we need to scroll to top otherwise it is covered by the AppBar\n\t\t\tif (boundingRect.y < 100) {\n\t\t\t\twindow.scrollTo({ top: 0, behavior: \"smooth\" });\n\t\t\t} else {\n\t\t\t\t(focusRef.current as HTMLDivElement).scrollIntoView({ behavior: \"smooth\", block: \"start\", inline: \"start\" });\n\t\t\t}\n\t\t}\n\t}, [displayFocus, currentPage]);\n\n\tconst increment = incrementer();\n\t//TODO-NICE: find way to make UI-text unselectable globally, maybe different focus? But might be unperformant\n\treturn (\n\t\t<Grid container justify=\"flex-start\" direction=\"row\" alignItems=\"stretch\" spacing={1}>\n\t\t\t{riverMakeUps.map((makeUp) =>\n\t\t\t\tmakeUp.cardIDs.length > 0 ? (\n\t\t\t\t\t<Grid\n\t\t\t\t\t\titem\n\t\t\t\t\t\tref={riverMakeUpIDToPageNumber(makeUp.riverID) === currentPage ? focusRef : null}\n\t\t\t\t\t\tkey={increment()}\n\t\t\t\t\t>\n\t\t\t\t\t\t<ChildCardRiver\n\t\t\t\t\t\t\triverID={makeUp.riverID}\n\t\t\t\t\t\t\triverCards={makeUp.cardIDs.map((id) => cardConfigs[id])}\n\t\t\t\t\t\t\tkey={increment()}\n\t\t\t\t\t\t></ChildCardRiver>\n\t\t\t\t\t</Grid>\n\t\t\t\t) : null\n\t\t\t)}\n\t\t</Grid>\n\t);\n};\n","import React from \"react\";\nimport Grid from \"@material-ui/core/Grid\";\nimport focus from \"../../../focus\";\nimport { useSelector } from \"react-redux\";\nimport { SummaryRiver } from \"./SummaryRiver\";\n\n//TODO-NICE: dont show empty rivers in summary, make dropdown/create empty river button\n\nexport const SummaryRiverView = () => {\n\tconst displayFocus = useSelector(focus.selectors.getDisplayFocus);\n\n\treturn (\n\t\t<Grid item hidden={displayFocus !== \"SUMMARY_RIVER\"}>\n\t\t\t<SummaryRiver></SummaryRiver>\n\t\t</Grid>\n\t);\n};\n","import React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { getActiveRiverCards, getActiveRiverMakeUpID } from \"../../selectors\";\nimport { ChildCardRiver } from \"../CardRiver/ChildCardRiver\";\n\n//TODO-NICE: selection in CardRiver should stay highlighted when the contextMenu opens?\n\n//TODO-NICE: contextMenu as permant element, maybe sidebar?\n//TODO-NICE: preview in ContextMenu of how selected string would be used\n\nexport const ActiveCardRiver = () => {\n\tconst riverID = useSelector(getActiveRiverMakeUpID);\n\tconst riverCards = useSelector(getActiveRiverCards);\n\n\treturn <ChildCardRiver riverID={riverID} riverCards={riverCards}></ChildCardRiver>;\n};\n","import React from \"react\";\nimport Grid from \"@material-ui/core/Grid\";\nimport { ActiveCardRiver } from \"./ActiveCardRiver\";\n//TODO-NICE: make River-View, where you can just see one card and can make it smaller? Maybe just button to zoom \"in\" / just seeing the current river\n//TODO-NICE: mark Origin-Span or maybe rect over whole page-section?\n//TODO-NICE: make reconciliation algorithm for origin when new PDF versions come out\n\nexport const ActiveRiverColumn = ({ hidden }: any) => {\n\treturn (\n\t\t<Grid\n\t\t\titem\n\t\t\tstyle={{\n\t\t\t\twidth: \"38%\",\n\t\t\t}}\n\t\t\thidden={hidden}\n\t\t>\n\t\t\t<ActiveCardRiver></ActiveCardRiver>\n\t\t</Grid>\n\t);\n};\n","import React from \"react\";\nimport Grid from \"@material-ui/core/Grid\";\nimport display from \"../../../display\";\nimport focus from \"../../../focus\";\nimport { useSelector } from \"react-redux\";\nimport { ActiveRiverColumn } from \"./ActiveRiverColumn\";\nimport { riverShowStateIsShow } from \"../../selectors\";\n\nexport const ActiveRiverView = () => {\n\tconst displayFocus = useSelector(focus.selectors.getDisplayFocus);\n\tconst showMaterial = useSelector(display.selectors.displayStatusIsShow);\n\tconst showRiver = useSelector(riverShowStateIsShow);\n\treturn (\n\t\t<Grid item hidden={displayFocus !== \"ACTIVE_RIVER\"}>\n\t\t\t<Grid container justify=\"space-around\" direction=\"row\" alignItems=\"stretch\">\n\t\t\t\t<ActiveRiverColumn hidden={!showRiver}></ActiveRiverColumn>\n\t\t\t\t<display.components.MaterialDisplayColumnWithSize\n\t\t\t\t\thidden={!showMaterial}\n\t\t\t\t></display.components.MaterialDisplayColumnWithSize>\n\t\t\t</Grid>\n\t\t</Grid>\n\t);\n};\n","import { withStyles, CheckboxProps, Checkbox } from \"@material-ui/core\";\nimport React from \"react\";\nimport { green } from \"@material-ui/core/colors\";\nexport const GreenCheckbox = withStyles({\n\troot: {\n\t\tcolor: green[400],\n\t\t\"&$checked\": {\n\t\t\tcolor: green[600],\n\t\t},\n\t},\n\tchecked: {},\n})((props: CheckboxProps) => <Checkbox color=\"default\" {...props} />);\n","import { FormGroup, FormControlLabel } from \"@material-ui/core\";\nimport React from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { getRiverContentState } from \"../selectors\";\nimport { RiverContentState } from \"../model\";\nimport { setRiverContentState } from \"../actions\";\nimport { GreenCheckbox } from \"../../../shared/GreenCheckbox\";\n\nexport const RiverContentFormGroup = () => {\n\tconst riverContentState = useSelector(getRiverContentState);\n\tconst dispatch = useDispatch();\n\n\tconst showQAs = riverContentState === \"ALL\" || riverContentState === \"QAS\";\n\tconst showNotes = riverContentState === \"ALL\" || riverContentState === \"NOTES\";\n\n\tconst changeContentState = (clickedState: RiverContentState) => {\n\t\tif (!showQAs && clickedState === \"QAS\") {\n\t\t\tif (showNotes) {\n\t\t\t\tdispatch(setRiverContentState(\"ALL\"));\n\t\t\t} else {\n\t\t\t\tdispatch(setRiverContentState(\"QAS\"));\n\t\t\t}\n\t\t\treturn;\n\t\t}\n\n\t\tif (!showNotes && clickedState === \"NOTES\") {\n\t\t\tif (showQAs) {\n\t\t\t\tdispatch(setRiverContentState(\"ALL\"));\n\t\t\t} else {\n\t\t\t\tdispatch(setRiverContentState(\"NOTES\"));\n\t\t\t}\n\t\t\treturn;\n\t\t}\n\n\t\tif (showQAs && clickedState === \"QAS\") {\n\t\t\tif (!showNotes) {\n\t\t\t\tdispatch(setRiverContentState(\"NONE\"));\n\t\t\t} else {\n\t\t\t\tdispatch(setRiverContentState(\"NOTES\"));\n\t\t\t}\n\t\t\treturn;\n\t\t}\n\n\t\tif (showNotes && clickedState === \"NOTES\") {\n\t\t\tif (!showQAs) {\n\t\t\t\tdispatch(setRiverContentState(\"NONE\"));\n\t\t\t} else {\n\t\t\t\tdispatch(setRiverContentState(\"QAS\"));\n\t\t\t}\n\t\t\treturn;\n\t\t}\n\t};\n\n\treturn (\n\t\t<FormGroup>\n\t\t\t<FormControlLabel\n\t\t\t\tcontrol={\n\t\t\t\t\t<GreenCheckbox\n\t\t\t\t\t\tchecked={showQAs}\n\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\tchangeContentState(\"QAS\");\n\t\t\t\t\t\t}}\n\t\t\t\t\t/>\n\t\t\t\t}\n\t\t\t\tlabel=\"QAs\"\n\t\t\t/>\n\t\t\t<FormControlLabel\n\t\t\t\tcontrol={\n\t\t\t\t\t<GreenCheckbox\n\t\t\t\t\t\tchecked={showNotes}\n\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\tchangeContentState(\"NOTES\");\n\t\t\t\t\t\t}}\n\t\t\t\t\t/>\n\t\t\t\t}\n\t\t\t\tlabel=\"Notes\"\n\t\t\t/>\n\t\t</FormGroup>\n\t);\n};\n","import { CardRiverState, RiverShowState, pageNumberToRiverMakeUpID, RiverMakeUp, RiverContentState } from \"./model\";\nimport { FinalizedCardPayload, CardID } from \"../cards/model/model\";\nimport cards from \"../cards\";\nimport * as t from \"./actionTypes\";\nimport display from \"../display\";\nimport focus from \"../focus\";\nimport { UserFocus } from \"../focus/model\";\nimport { ArchiveRiver } from \"../db/model\";\nimport db from \"../db\";\n\nconst initialState: CardRiverState = {\n\triverMakeUps: {\n\t\t[pageNumberToRiverMakeUpID(1)]: {\n\t\t\triverID: pageNumberToRiverMakeUpID(1),\n\t\t\tcardIDs: [\"2\", \"0\", \"1\"],\n\t\t},\n\t},\n\tpushToRiverID: pageNumberToRiverMakeUpID(1),\n\tactiveRiverMakeUpID: pageNumberToRiverMakeUpID(1),\n\tlastRiverIDNumber: 1,\n\triverShowState: \"SHOW\",\n\thighlightedCardID: null,\n\thighlightedCardField: null,\n\triverContentState: \"ALL\",\n\tsourceCard: null,\n\tcontentFilter: \"\",\n};\n\nconst emptyCardRiver = (page: number): RiverMakeUp => {\n\treturn {\n\t\triverID: pageNumberToRiverMakeUpID(page),\n\t\tcardIDs: [],\n\t};\n};\n\nconst updateStateWithMakeUps = (state: CardRiverState, ...makeUps: RiverMakeUp[]) => {\n\tconst updatedState = { ...state };\n\tmakeUps.forEach((makeUp) => {\n\t\tupdatedState.riverMakeUps[makeUp.riverID] = makeUp;\n\t});\n\treturn updatedState;\n};\n\nconst deactivateActiveCardRiver = (state: CardRiverState) => {\n\treturn { ...state.riverMakeUps[state.activeRiverMakeUpID], active: false };\n};\n\nconst removeCardFromRivers = (state: CardRiverState, cardID: CardID): CardRiverState => {\n\tconst riverMakeUps = Object.fromEntries(\n\t\tObject.entries(state.riverMakeUps).map((entry) => [\n\t\t\tentry[0],\n\t\t\t{ ...entry[1], cardIDs: entry[1].cardIDs.filter((id) => id !== cardID) },\n\t\t])\n\t);\n\treturn { ...state, riverMakeUps };\n};\n\nconst cardRiverState = (state = initialState, { type, payload }: { type: string; payload: any }) => {\n\tlet riverMakeUp;\n\tlet riverMakeUps;\n\tswitch (type) {\n\t\tcase display.actionTypes.PAGE_UPDATE:\n\t\t\tlet activeRiver;\n\t\t\tif (!state.riverMakeUps[pageNumberToRiverMakeUpID(payload as number)]) {\n\t\t\t\tactiveRiver = emptyCardRiver(payload as number);\n\t\t\t} else {\n\t\t\t\tactiveRiver = { ...state.riverMakeUps[pageNumberToRiverMakeUpID(payload as number)] };\n\t\t\t}\n\n\t\t\tconst oldRiver = deactivateActiveCardRiver(state);\n\n\t\t\treturn {\n\t\t\t\t...updateStateWithMakeUps(state, activeRiver, oldRiver),\n\t\t\t\tactiveRiverMakeUpID: activeRiver.riverID,\n\t\t\t\tpushToRiverID: activeRiver.riverID,\n\t\t\t};\n\n\t\tcase cards.actionTypes.CARD_PUSH:\n\t\t\triverMakeUp = {\n\t\t\t\t...state.riverMakeUps[state.pushToRiverID],\n\t\t\t\tcardIDs: [...state.riverMakeUps[state.pushToRiverID].cardIDs, (payload as FinalizedCardPayload).card.cardID],\n\t\t\t};\n\t\t\triverMakeUps = { ...state.riverMakeUps };\n\t\t\triverMakeUps[state.pushToRiverID] = riverMakeUp;\n\n\t\t\treturn { ...state, riverMakeUps: riverMakeUps };\n\t\tcase cards.actionTypes.CARD_REMOVE:\n\t\t\treturn removeCardFromRivers(state, payload as string);\n\t\tcase t.RIVER_SHOW_STATE:\n\t\t\treturn { ...state, riverShowState: payload as RiverShowState };\n\t\tcase t.RIVER_CONTENT_STATE:\n\t\t\treturn { ...state, riverContentState: payload as RiverContentState };\n\t\tcase t.RIVER_PUSH_STATE:\n\t\t\treturn { ...state, pushToRiverID: payload };\n\t\tcase t.RIVER_HOVERED_CARD:\n\t\t\treturn { ...state, highlightedCardID: payload.id, highlightedCardField: payload.field };\n\t\tcase focus.actionTypes.FOCUS_UPDATE:\n\t\t\tlet sourceCard = state.sourceCard;\n\n\t\t\t//TODO-NICE: untangle the focus logic, might be that I can just reset in the first case\n\t\t\t// need to reset sourceCard because we want to trigger the correct Selection-Grab when in the document\n\t\t\tif ((payload as UserFocus) === \"DOCUMENT\" && sourceCard) {\n\t\t\t\tsourceCard = null;\n\t\t\t}\n\n\t\t\t// reset hovered-card once we are not focused on the context menu\n\t\t\t//TODO-NICE: investigate a better factoring for the relation between river and creation\n\t\t\tif (state.highlightedCardID !== null && (payload as UserFocus) !== \"CONTEXT_MENU\") {\n\t\t\t\treturn { ...state, highlightedCardID: null, highlightedCardField: null, sourceCard };\n\t\t\t} else {\n\t\t\t\treturn { ...state, sourceCard };\n\t\t\t}\n\t\tcase cards.actionTypes.DOCUMENT_CHANGE:\n\t\t\tif (payload) {\n\t\t\t\treturn {\n\t\t\t\t\t...initialState,\n\t\t\t\t\triverMakeUps: (payload as ArchiveRiver).riverMakeUps,\n\t\t\t\t\tactiveRiverMakeUpID: (payload as ArchiveRiver).activeRiverMakeUpID,\n\t\t\t\t\tpushToRiverID: (payload as ArchiveRiver).pushToRiverID,\n\t\t\t\t\tlastRiverIDNumber: (payload as ArchiveRiver).lastRiverIDNumber,\n\t\t\t\t};\n\t\t\t} else {\n\t\t\t\treturn initialState;\n\t\t\t}\n\t\tcase db.actionTypes.LOAD_DOCUMENT_DATA_SETS:\n\t\t\t// basically the same as DOCUMENT_CHANGE, just only triggered\n\t\t\t//when uploading data that corresponds to current document\n\t\t\t// and if not, we dont reset\n\t\t\tif (payload.newActiveDataSet) {\n\t\t\t\treturn {\n\t\t\t\t\t...initialState,\n\t\t\t\t\triverMakeUps: (payload.newActiveDataSet as ArchiveRiver).riverMakeUps,\n\t\t\t\t\tactiveRiverMakeUpID: (payload.newActiveDataSet as ArchiveRiver).activeRiverMakeUpID,\n\t\t\t\t\tpushToRiverID: (payload.newActiveDataSet as ArchiveRiver).pushToRiverID,\n\t\t\t\t\tlastRiverIDNumber: (payload.newActiveDataSet as ArchiveRiver).lastRiverIDNumber,\n\t\t\t\t};\n\t\t\t} else {\n\t\t\t\treturn state;\n\t\t\t}\n\t\tcase t.RIVER_CARD_SOURCE:\n\t\t\treturn { ...state, sourceCard: payload };\n\t\tcase t.RIVER_CONTENT_FILTER:\n\t\t\treturn { ...state, contentFilter: payload };\n\t\tdefault:\n\t\t\treturn state;\n\t}\n};\n\nexport default cardRiverState;\n","import * as constants from \"./constants\";\nimport * as components from \"./components\";\nimport reducer from \"./reducer\";\nimport * as selectors from \"./selectors\";\nimport * as actions from \"./actions\";\n\nexport default { constants, components, reducer, selectors, actions };\n","import { createSelector } from \"reselect\";\nimport display from \"../display\";\nimport river from \"../river\";\nimport cards from \"../cards\";\nimport { DocumentData } from \"../db/model\";\n\nexport const collectCurrentDBData: (state: any) => DocumentData | null = createSelector(\n\tdisplay.selectors.getPDFName,\n\triver.selectors.getRiverMakeUps,\n\triver.selectors.getActiveRiverMakeUpID,\n\triver.selectors.getPushToRiver,\n\triver.selectors.getLastRiverIDNumber,\n\tcards.selectors.getCards,\n\tcards.selectors.getLastCardIDNumber,\n\t(pdfName, riverMakeUps, activeRiverMakeUpID, pushToRiverID, lastRiverIDNumber, cards, lastCardIDNumber) => {\n\t\treturn {\n\t\t\tname: pdfName as string,\n\t\t\triverMakeUps,\n\t\t\tactiveRiverMakeUpID,\n\t\t\tpushToRiverID,\n\t\t\tlastRiverIDNumber,\n\t\t\tcards,\n\t\t\tlastCardIDNumber,\n\t\t};\n\t}\n);\n","import { Dispatch } from \"redux\";\nimport display from \"../display\";\nimport cards from \"../cards\";\nimport { ActionCreators } from \"redux-undo\";\nimport db from \"../db\";\nimport { collectCurrentDBData } from \"./selectors\";\nimport { DocumentData } from \"../db/model\";\n\nexport const archiveCurrentDBData = () => {\n\treturn (dispatch: Dispatch, getState: Function) => {\n\t\tconst state = getState();\n\t\tconst currentPDFName = display.selectors.getPDFName(state);\n\n\t\tif (currentPDFName !== undefined) {\n\t\t\tconst dbData = collectCurrentDBData(state) as DocumentData;\n\t\t\tdispatch(db.actions.archiveDBData(dbData));\n\t\t}\n\t};\n};\n\nconst fileDownload = require(\"js-file-download\");\nexport const downloadDBData = () => {\n\treturn (dispatch: any, getState: Function) => {\n\t\t//actualize the db before downloading\n\t\tdispatch(archiveCurrentDBData());\n\n\t\tconst documentDataSets = db.selectors.getDocumentDataSets(getState());\n\t\tconst localString = new Date().toLocaleString();\n\t\tfileDownload(JSON.stringify(documentDataSets), localString + \" ClayMemory.txt\");\n\t};\n};\n\nexport const changeDocument = (pdf: File) => {\n\treturn (dispatch: Dispatch, getState: Function) => {\n\t\tconst newPDFName = pdf.name;\n\n\t\tconst state = getState();\n\t\tconst currentPDFName = display.selectors.getPDFName(state);\n\n\t\tconst documentDB = db.selectors.getDocumentDB(state);\n\n\t\t// save current data only if pdf has been uploaded / there is an active document\n\t\tif (currentPDFName !== undefined) {\n\t\t\tconst dbData = collectCurrentDBData(state) as DocumentData;\n\t\t\tdispatch(db.actions.archiveDBData(dbData));\n\t\t}\n\n\t\tdispatch(display.actions.pdfUpload(pdf));\n\n\t\t// if the uploaded pdf is the same as the active one, then we just reloaded the app (lost the pdf)\n\t\t// and dont need load data (loading data would lead to overwrite because of the syncing order)\n\t\t//TODO-NICE: make the sync between documentDB and active document for explicit, right now I just sync when a PDF is uploaded\n\t\tif (newPDFName === currentPDFName) {\n\t\t\treturn;\n\t\t}\n\t\t// load new data or reset\n\t\tconst newDocumentData = documentDB[newPDFName];\n\t\tif (newDocumentData) {\n\t\t\tdispatch({ type: cards.actionTypes.DOCUMENT_CHANGE, payload: newDocumentData });\n\t\t} else {\n\t\t\tdispatch({ type: cards.actionTypes.DOCUMENT_CHANGE });\n\t\t}\n\n\t\t// no undo-redo across documents\n\t\tdispatch(ActionCreators.clearHistory());\n\t};\n};\n","import { useRef, useEffect, MutableRefObject } from \"react\";\n\n// only global eventListener for now\nexport const useEventListener = (eventName: string, handler: any) => {\n\tconst savedHandler: MutableRefObject<Function> = useRef(() => {});\n\n\tuseEffect(() => {\n\t\tsavedHandler.current = handler;\n\t}, [handler]);\n\n\tuseEffect(() => {\n\t\tconst eventListener = (event: Event) => savedHandler.current(event);\n\t\tdocument.addEventListener(eventName, eventListener);\n\t\treturn () => {\n\t\t\tdocument.removeEventListener(eventName, eventListener);\n\t\t};\n\t}, [eventName]);\n};\n","export const NAME = \"creationData\";\n","import { NAME } from \"./constants\";\n\nexport const TOGGLE_CONTEXT_MENU = NAME + \"/TOGGLE_CONTEXT_MENU\";\nexport const CLOSE_CONTEXT_MENU = NAME + \"/CLOSE_CONTEXT_MENU\";\nexport const OPEN_CONTEXT_MENU = NAME + \"/OPEN_CONTEXT_MENU\";\nexport const SELECTED_STRING = NAME + \"/SELECTED_STRING\";\nexport const SELECTED_PARENT = NAME + \"/SELECTED_PARENT\";\nexport const DOCUMENT_POSITION = NAME + \"/SELECITON_POSITION\";\n","import { NAME } from \"./constants\";\nimport { createSelector } from \"reselect\";\nimport { CreationData } from \"./model\";\nimport river from \"../river\";\nimport display from \"../display\";\nimport { SingleOrigin } from \"../cards/model/model-origin\";\n\nexport const getAll = (state: any) => state[NAME].present;\n\nexport const getContextMenuState = createSelector(getAll, (state: CreationData) => state.open);\n\nexport const getContextMenuRef = createSelector(getAll, (state: CreationData) => state.menuRef);\n\nexport const getContextMenuFullCardsRef = createSelector(getAll, (state: CreationData) => state.fullCardRef);\n\nexport const getContextMenuQARefs = createSelector(getAll, (state: CreationData) => state.qaRefs);\n\nexport const getCurrentSelectionPosition = createSelector(getAll, (state: CreationData) => state.selectionPosition);\n\nexport const getContextMenuInitData = createSelector(\n\tgetCurrentSelectionPosition,\n\tgetContextMenuState,\n\tgetContextMenuRef,\n\tgetContextMenuQARefs,\n\triver.selectors.getPushToRiverCards,\n\t(position, state, menuRef, qaRefs, riverCards) => {\n\t\treturn { position, state, menuRef, qaRefs, riverCards };\n\t}\n);\n\nexport const getCurrentSelectedString = createSelector(getAll, (state: CreationData) => state.manuallySelectedString);\n\nexport const getCurrentSelectedParent = createSelector(getAll, (state: CreationData) => state.selectedParentSpan);\n\nexport const getCurrentOrigin = createSelector(\n\t(state: any) => state,\n\tdisplay.selectors.getCurrentPage,\n\tgetCurrentSelectedParent,\n\t(state, currentPage, selectedParent): SingleOrigin => {\n\t\treturn {\n\t\t\tspanIndex: display.selectors.getSpanIndex(state, selectedParent as HTMLSpanElement),\n\t\t\tpage: currentPage,\n\t\t};\n\t}\n);\n","import * as t from \"./actionTypes\";\nimport { CardType, CreationType } from \"../cards/model/model\";\nimport { CardOrigin, SingleOrigin, AOnlyQAOrigin, QOnlyQAOrigin } from \"../cards/model/model-origin\";\nimport cards from \"../cards\";\nimport focus from \"../focus\";\nimport { getCurrentSelectedString, getCurrentSelectedParent, getContextMenuState, getCurrentOrigin } from \"./selectors\";\nimport { isNullOrUndefined } from \"util\";\nimport display from \"../display\";\nimport river from \"../river\";\n\nexport const toggleContextMenu = () => {\n\treturn (dispatch: any, getState: Function) => {\n\t\tconst state = getState();\n\t\tif (display.selectors.getDataExists(state)) {\n\t\t\tdispatch({ type: t.TOGGLE_CONTEXT_MENU });\n\t\t\tdispatch(focus.actions.toggleContextMenuFocus());\n\t\t}\n\t};\n};\n\nexport const closeContextMenu = () => {\n\treturn (dispatch: any, getState: Function) => {\n\t\tif (getContextMenuState(getState())) {\n\t\t\tdispatch({ type: t.CLOSE_CONTEXT_MENU });\n\t\t\tdispatch(focus.actions.updateFocus(\"DOCUMENT\"));\n\t\t}\n\t};\n};\n\nexport const openContextMenu = () => {\n\treturn (dispatch: any) => {\n\t\tdispatch({ type: t.OPEN_CONTEXT_MENU });\n\t\tdispatch(focus.actions.updateFocus(\"DOCUMENT\"));\n\t};\n};\n\nexport const grabSelectionForContextMenu = (type: CardType, creationType: CreationType, cardID?: string) => {\n\treturn (dispatch: Function, getState: Function) => {\n\t\tdispatch(closeContextMenu());\n\n\t\tconst state = getState();\n\n\t\t//TODO-NICE: think of a way to make this intuitive\n\t\t//const updateType = type === \"Q-A\" ? \"REPLACE\" : \"APPEND\";\n\t\tconst updateType = \"REPLACE\";\n\t\tconst isUpdate = cardID !== undefined;\n\n\t\t// this should be from the document\n\t\tconst selectedString = getCurrentSelectedString(state);\n\t\tconst selectedParent = getCurrentSelectedParent(state);\n\n\t\t// always overwrite origin, even if isUpdate, because updateType==replace\n\t\tconst origin: CardOrigin | undefined = selectedParent ? getCurrentOrigin(state) : undefined;\n\n\t\tlet transformedOrigin;\n\t\tif (origin) {\n\t\t\t// we exploit that the input from the document is always just a SingleOrigin=NoteOrigin\n\t\t\t// need to transform it because we can create als QA-Cards from document\n\t\t\ttransformedOrigin = cards.services.transformInputOrigin(\n\t\t\t\torigin,\n\t\t\t\t\"note\",\n\t\t\t\tcreationType,\n\t\t\t\tisUpdate ? (cards.selectors.getCards(state)[cardID as string].origin as CardOrigin) : undefined\n\t\t\t);\n\t\t\tconsole.log(origin, transformedOrigin);\n\t\t}\n\n\t\tif (isUpdate) {\n\t\t\tdispatch(\n\t\t\t\tcards.actions.updateCardContent(\n\t\t\t\t\tselectedString,\n\t\t\t\t\tcardID as string,\n\t\t\t\t\tcreationType,\n\t\t\t\t\tupdateType,\n\t\t\t\t\ttransformedOrigin as CardOrigin\n\t\t\t\t)\n\t\t\t);\n\t\t} else {\n\t\t\tdispatch(\n\t\t\t\tcards.actions.pushCardContent(selectedString, creationType, updateType, type, transformedOrigin as CardOrigin)\n\t\t\t);\n\t\t}\n\n\t\tdispatch(resetManuallySelectedString());\n\t};\n};\n\nexport const hasNonEmptyOrigin = (origin?: CardOrigin) =>\n\t!!origin &&\n\t(!isNullOrUndefined((origin as SingleOrigin).spanIndex) ||\n\t\t!isNullOrUndefined((origin as AOnlyQAOrigin).a?.spanIndex) ||\n\t\t!isNullOrUndefined((origin as QOnlyQAOrigin).q?.spanIndex));\n\nexport const grabSelectionForSourceMenu = (\n\ttype: CardType,\n\tcreationType: CreationType,\n\tsourceField: CreationType,\n\torigin?: CardOrigin,\n\tcardID?: string\n) => {\n\treturn (dispatch: Function, getState: Function) => {\n\t\tdispatch(closeContextMenu());\n\n\t\tconst state = getState();\n\n\t\tconst updateType = \"REPLACE\";\n\t\tconst isUpdate = cardID !== undefined;\n\n\t\t//  this should be from the SourceCard in which the extract button has been clicked\n\t\t//\tthe SourceCard can or can not have an origin\n\t\tconst sourceHasNonEmptyOrigin = hasNonEmptyOrigin(origin);\n\t\tconst newOrigin = sourceHasNonEmptyOrigin\n\t\t\t? cards.services.transformInputOrigin(\n\t\t\t\t\torigin as CardOrigin,\n\t\t\t\t\tsourceField,\n\t\t\t\t\tcreationType,\n\t\t\t\t\tisUpdate ? (cards.selectors.getCards(state)[cardID as string].origin as CardOrigin) : undefined\n\t\t\t  )\n\t\t\t: undefined;\n\t\tconst selectedString = getCurrentSelectedString(state);\n\n\t\t//TODO-NICE: untangle the types so that the as CardOrigin is not necessary in the dispatch,\n\t\t//maybe merge content and origin to avoid two object hierarchies?\n\t\tif (isUpdate) {\n\t\t\tdispatch(\n\t\t\t\tcards.actions.updateCardContent(\n\t\t\t\t\tselectedString,\n\t\t\t\t\tcardID as string,\n\t\t\t\t\tcreationType,\n\t\t\t\t\tupdateType,\n\t\t\t\t\tnewOrigin as CardOrigin\n\t\t\t\t)\n\t\t\t);\n\t\t} else {\n\t\t\tdispatch(cards.actions.pushCardContent(selectedString, creationType, updateType, type, newOrigin as CardOrigin));\n\t\t}\n\n\t\tdispatch(resetManuallySelectedString());\n\t\tdispatch(river.actions.resetSourceCard());\n\t};\n};\n\nexport const updateManuallySelectedString = (str: string) => {\n\treturn { type: t.SELECTED_STRING, payload: str };\n};\n\nexport const resetManuallySelectedString = () => {\n\treturn updateManuallySelectedString(\"\");\n};\n\nexport const selectedParent = (span: null | HTMLSpanElement) => {\n\treturn { type: t.SELECTED_PARENT, payload: span };\n};\n\nexport const updateSelectionPosition = (x: number, y: number) => {\n\treturn { type: t.DOCUMENT_POSITION, payload: { x, y } };\n};\n","import * as t from \"./actionTypes\";\nimport { CreationData } from \"./model\";\nimport { createRef } from \"react\";\nimport { CardPayload } from \"../cards/model/model\";\nimport cards from \"../cards\";\n\nconst initialState: CreationData = {\n\topen: false,\n\tmenuRef: createRef(),\n\tfullCardRef: createRef(),\n\tqaRefs: [createRef(), createRef()],\n\tmanuallySelectedString: \"\",\n\tselectedParentSpan: null,\n\tselectionPosition: { x: 0, y: 0 },\n};\n\nconst creationData = (state = initialState, { type, payload }: { type: string; payload: any }): CreationData => {\n\tswitch (type) {\n\t\tcase t.TOGGLE_CONTEXT_MENU:\n\t\t\treturn { ...state, open: !state.open };\n\t\tcase t.CLOSE_CONTEXT_MENU:\n\t\t\treturn { ...state, open: false };\n\t\tcase t.OPEN_CONTEXT_MENU:\n\t\t\treturn { ...state, open: true };\n\t\tcase cards.actionTypes.CARD_PUSH:\n\t\t\t//TODO-NICE: reliance on order of refs (needs to be the same as order of qaRefs) and coupling to the fact that a new card was pushed\n\t\t\t// might need to change if I allow moving the cards\n\t\t\t//TODO-NICE: no support for multiple rivers\n\t\t\tif ((payload as CardPayload).card.type === \"Q-A\") return { ...state, qaRefs: [...state.qaRefs, createRef()] };\n\t\t\treturn state;\n\t\tcase t.SELECTED_STRING:\n\t\t\treturn { ...state, manuallySelectedString: payload as string };\n\t\tcase t.SELECTED_PARENT:\n\t\t\treturn { ...state, selectedParentSpan: payload };\n\t\tcase t.DOCUMENT_POSITION:\n\t\t\treturn { ...state, selectionPosition: payload };\n\t\tdefault:\n\t\t\treturn state;\n\t}\n};\n\nexport default creationData;\n","import React, { RefObject } from \"react\";\nimport NestedMenuItem from \"material-ui-nested-menu-item\";\nimport { MenuItem } from \"@material-ui/core\";\nimport { CardConfig, CardType, CreationType } from \"../../cards/model/model\";\nimport { QACardContent } from \"../../cards/model/model-content\";\nimport { useDispatch } from \"react-redux\";\nimport river from \"../../river\";\n\n//TODO-NICE: move to cards\nexport const noteCardIsEmpty = (content: string) => content === \"\";\nexport const qaCardIsNotFull = (content: QACardContent) =>\n\t(content as QACardContent).q === \"\" || (content as QACardContent).a === \"\";\n\ntype dispatchRiver = (type: CardType, creationType: CreationType, cardID?: string | undefined) => void;\n\n//TODO-NICE: rename this to note\n//TODO-NICE: entangle this dispatchRiver buisness and use hooks in the card components instead\n\nconst SingleOptionItem = ({ cardConfig, dispatchRiver }: { cardConfig: CardConfig; dispatchRiver: dispatchRiver }) => {\n\tconst dispatch = useDispatch();\n\n\treturn (\n\t\t<MenuItem\n\t\t\tonClick={() => {\n\t\t\t\tdispatchRiver(cardConfig.type, \"note\", cardConfig.cardID);\n\t\t\t}}\n\t\t\tonMouseEnter={() => {\n\t\t\t\tdispatch(river.actions.trySetHoveredCard(cardConfig.cardID, \"note\"));\n\t\t\t}}\n\t\t>\n\t\t\t{cardConfig.type}\n\t\t</MenuItem>\n\t);\n};\n\nconst QAOptionItem = ({\n\tcardConfig,\n\tdispatchRiver,\n\tqaRef,\n}: {\n\tcardConfig: CardConfig;\n\tdispatchRiver: dispatchRiver;\n\tqaRef: RefObject<any> | undefined;\n}) => {\n\tconst dispatch = useDispatch();\n\n\treturn (\n\t\t<NestedMenuItem label=\"Q-A\" parentMenuOpen={true}>\n\t\t\t<MenuItem\n\t\t\t\tref={qaRef}\n\t\t\t\tonClick={() => {\n\t\t\t\t\tdispatchRiver(\"Q-A\", \"q\", cardConfig.cardID);\n\t\t\t\t}}\n\t\t\t\tonMouseEnter={() => {\n\t\t\t\t\tdispatch(river.actions.trySetHoveredCard(cardConfig.cardID, \"q\"));\n\t\t\t\t}}\n\t\t\t>\n\t\t\t\tQ\n\t\t\t</MenuItem>\n\t\t\t<MenuItem\n\t\t\t\tonClick={() => {\n\t\t\t\t\tdispatchRiver(\"Q-A\", \"a\", cardConfig.cardID);\n\t\t\t\t}}\n\t\t\t\tonMouseEnter={() => {\n\t\t\t\t\tdispatch(river.actions.trySetHoveredCard(cardConfig.cardID, \"a\"));\n\t\t\t\t}}\n\t\t\t>\n\t\t\t\tA\n\t\t\t</MenuItem>\n\t\t</NestedMenuItem>\n\t);\n};\n\nexport const CardConfigItem = ({\n\tcardConfig,\n\tdispatchRiver,\n\tqaRef,\n}: {\n\tcardConfig: CardConfig;\n\tdispatchRiver: dispatchRiver;\n\tqaRef?: RefObject<any>;\n}) => {\n\tswitch (cardConfig.type) {\n\t\tcase \"Q-A\":\n\t\t\treturn <QAOptionItem cardConfig={cardConfig} dispatchRiver={dispatchRiver} qaRef={qaRef}></QAOptionItem>;\n\t\tdefault:\n\t\t\treturn <SingleOptionItem cardConfig={cardConfig} dispatchRiver={dispatchRiver}></SingleOptionItem>;\n\t}\n};\n","import { Fragment } from \"react\";\nimport { MenuItem } from \"@material-ui/core\";\nimport React from \"react\";\n\n//TODO-NICE: clear qa-field button\n\nconst NewQACardQ = ({ onClick }: any) => <MenuItem onClick={onClick}>New: Q (Q-A)</MenuItem>;\nconst NewQACardA = ({ onClick }: any) => <MenuItem onClick={onClick}>New: A (Q-A)</MenuItem>;\nconst NewNoteCard = ({ onClick }: any) => <MenuItem onClick={onClick}>New: Note</MenuItem>;\n\nexport const NewButtons = ({ noteDispatch, qDispatch, aDispatch }: any) => {\n\treturn (\n\t\t<Fragment>\n\t\t\t<NewNoteCard onClick={noteDispatch}></NewNoteCard>\n\t\t\t<NewQACardQ onClick={qDispatch}></NewQACardQ>\n\t\t\t<NewQACardA onClick={aDispatch}></NewQACardA>\n\t\t</Fragment>\n\t);\n};\n","import React, { RefObject } from \"react\";\nimport Menu from \"@material-ui/core/Menu\";\nimport { Divider, MenuItem } from \"@material-ui/core\";\nimport { useDispatch, connect, useSelector } from \"react-redux\";\nimport { getContextMenuInitData, getContextMenuFullCardsRef } from \"../selectors\";\nimport { grabSelectionForContextMenu, grabSelectionForSourceMenu } from \"../actions\";\nimport { incrementer } from \"../../../shared/utils\";\nimport { CardConfig, CardType, CreationType } from \"../../cards/model/model\";\nimport { QACardContent } from \"../../cards/model/model-content\";\nimport { CardConfigItem, noteCardIsEmpty, qaCardIsNotFull } from \"./CardItems\";\nimport { NewButtons } from \"./NewButtons\";\nimport NestedMenuItem from \"material-ui-nested-menu-item\";\nimport river from \"../../river\";\nimport { SourceCard } from \"../../river/model\";\n\nfunction ContextMenu({\n\tposition,\n\tstate,\n\tmenuRef,\n\tqaRefs,\n\triverCards,\n}: {\n\tposition: { x: number; y: number };\n\tstate: boolean;\n\tmenuRef: RefObject<any>;\n\tqaRefs: RefObject<any>[];\n\triverCards: CardConfig[];\n}) {\n\tconst fullCardsRef = useSelector(getContextMenuFullCardsRef);\n\n\tconst dispatch = useDispatch();\n\tconst sourceCard = useSelector(river.selectors.getSourceCard);\n\n\t//TODO-NICE: open menu in editor to the right not over the document\n\n\tconst openState = state;\n\tconst dispatchRiver = (type: CardType, creationType: CreationType, cardID?: string) => {\n\t\tif (sourceCard) {\n\t\t\tdispatch(\n\t\t\t\tgrabSelectionForSourceMenu(\n\t\t\t\t\ttype,\n\t\t\t\t\tcreationType,\n\t\t\t\t\t(sourceCard as SourceCard).sourceField,\n\t\t\t\t\t(sourceCard as SourceCard).origin,\n\t\t\t\t\tcardID\n\t\t\t\t)\n\t\t\t);\n\t\t} else {\n\t\t\tdispatch(grabSelectionForContextMenu(type, creationType, cardID));\n\t\t}\n\t};\n\n\tconst increment = incrementer();\n\tconst qaRefIndex = incrementer();\n\n\tconst anchorPosition = openState ? { top: position.y, left: position.x } : undefined;\n\n\t//TODO-PERF: use partition function, or loop to avoid double iteration\n\t//TODO-NICE: abstract menu, this is doubled\n\tconst nonFullRiverCards = riverCards.filter((card) => {\n\t\tif (typeof card.content === \"string\") {\n\t\t\treturn noteCardIsEmpty(card.content);\n\t\t} else {\n\t\t\treturn qaCardIsNotFull(card.content as QACardContent);\n\t\t}\n\t});\n\n\tconst fullRiverCards = riverCards.filter((card) => {\n\t\tif (typeof card.content === \"string\") {\n\t\t\treturn !noteCardIsEmpty(card.content);\n\t\t} else {\n\t\t\treturn !qaCardIsNotFull(card.content as QACardContent);\n\t\t}\n\t});\n\n\t// TODO-NICE: use hidden MenuItem-pattern also for qa-ref\n\n\t// TODO-NICE: need to check for state before rendering MenuItems,\n\t// otherwise it shows up for a split-second when switching the menu off after adding to the river\n\t// weird Race Condition even if I dispatch closeContextMenu first?\n\treturn (\n\t\t<Menu\n\t\t\tref={openState ? menuRef : null}\n\t\t\tkeepMounted\n\t\t\topen={openState}\n\t\t\tanchorReference=\"anchorPosition\"\n\t\t\tanchorPosition={anchorPosition}\n\t\t>\n\t\t\t{openState &&\n\t\t\t\tnonFullRiverCards.map((cardConfig) => (\n\t\t\t\t\t<CardConfigItem\n\t\t\t\t\t\tcardConfig={cardConfig}\n\t\t\t\t\t\tdispatchRiver={dispatchRiver}\n\t\t\t\t\t\tkey={increment()}\n\t\t\t\t\t\tqaRef={cardConfig.type === \"Q-A\" ? qaRefs[qaRefIndex()] : undefined}\n\t\t\t\t\t></CardConfigItem>\n\t\t\t\t))}\n\t\t\t{openState && nonFullRiverCards.length > 0 && <Divider />}\n\n\t\t\t{openState && (\n\t\t\t\t<NewButtons\n\t\t\t\t\tnoteDispatch={() => {\n\t\t\t\t\t\tdispatchRiver(\"Note\", \"note\");\n\t\t\t\t\t}}\n\t\t\t\t\tqDispatch={() => {\n\t\t\t\t\t\tdispatchRiver(\"Q-A\", \"q\");\n\t\t\t\t\t}}\n\t\t\t\t\taDispatch={() => {\n\t\t\t\t\t\tdispatchRiver(\"Q-A\", \"a\");\n\t\t\t\t\t}}\n\t\t\t\t></NewButtons>\n\t\t\t)}\n\n\t\t\t{openState && fullRiverCards.length > 0 && <Divider />}\n\t\t\t{openState && fullRiverCards.length > 0 && (\n\t\t\t\t<NestedMenuItem label=\"Full cards: \" parentMenuOpen={true}>\n\t\t\t\t\t<MenuItem ref={fullCardsRef} style={{ position: \"absolute\" }}></MenuItem>\n\t\t\t\t\t{fullRiverCards.map((cardConfig) => (\n\t\t\t\t\t\t<CardConfigItem\n\t\t\t\t\t\t\tcardConfig={cardConfig}\n\t\t\t\t\t\t\tdispatchRiver={dispatchRiver}\n\t\t\t\t\t\t\tkey={increment()}\n\t\t\t\t\t\t\tqaRef={cardConfig.type === \"Q-A\" ? qaRefs[qaRefIndex()] : undefined}\n\t\t\t\t\t\t></CardConfigItem>\n\t\t\t\t\t))}\n\t\t\t\t</NestedMenuItem>\n\t\t\t)}\n\t\t</Menu>\n\t);\n}\n\nexport const ContextMenuContainer = connect(getContextMenuInitData)(ContextMenu);\n","import React, { useState, Fragment } from \"react\";\nimport { Snackbar, IconButton } from \"@material-ui/core\";\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { resetManuallySelectedString } from \"../actions\";\nimport { getCurrentSelectedString } from \"../selectors\";\nimport focus from \"../../focus\";\n\nexport const SelectionSnackbar = () => {\n\tconst [open, setOpen] = useState(false);\n\tconst dispatch = useDispatch();\n\tconst selectedString = useSelector(getCurrentSelectedString);\n\n\tif (selectedString === \"\" && open) setOpen(false);\n\n\tif (selectedString !== \"\" && !open) setOpen(true);\n\n\tconst handleClose = (event: any, reason: string) => {\n\t\tif (reason === \"clickaway\") {\n\t\t\t// do not close on clickaway\n\t\t\tevent.preventDefault();\n\t\t} else {\n\t\t\tsetOpen(false);\n\t\t\tdispatch(resetManuallySelectedString());\n\t\t}\n\t};\n\n\tconst handleDismiss = () => {\n\t\tsetOpen(false);\n\t\tdispatch(resetManuallySelectedString());\n\t};\n\n\tconst message = (\n\t\t<Fragment>\n\t\t\t<div>{\"Current Selection: \"}</div>\n\t\t\t<div style={{ color: \"green\" }}> {selectedString}</div>\n\t\t</Fragment>\n\t);\n\n\treturn (\n\t\t<Snackbar\n\t\t\tonMouseEnter={() => {\n\t\t\t\tdispatch(focus.actions.tryUpdateFocus(\"CONTROL\"));\n\t\t\t}}\n\t\t\tanchorOrigin={{ vertical: \"top\", horizontal: \"center\" }}\n\t\t\topen={open}\n\t\t\tonClose={handleClose}\n\t\t\tmessage={message}\n\t\t\taction={\n\t\t\t\t<IconButton size=\"small\" aria-label=\"close\" color=\"inherit\" onClick={handleDismiss}>\n\t\t\t\t\t<CloseIcon fontSize=\"small\" />\n\t\t\t\t</IconButton>\n\t\t\t}\n\t\t/>\n\t);\n};\n","import { getContextMenuRef, getContextMenuQARefs, getContextMenuFullCardsRef } from \"../selectors\";\n\n// the root div for the menu invisibly covers the whole screen\n// the actual div that is visible is this\nconst baseContextMenuSelector = \"div.MuiPaper-root\";\n\nexport const contextMenuContainsTargetNode = (state: any, event: Event) => {\n\tconst menuRef = getContextMenuRef(state).current;\n\tconst fullCardsRef = getContextMenuFullCardsRef(state).current?.parentNode;\n\n\t// the nested items are rendered under a different menu\n\t// the current api does not allow access\n\t// so the qa-refs refer to the Q-button\n\t// we check the click against his parent,\n\t// which is the div that contains the Q and A buttons\n\tconst qaRefs = getContextMenuQARefs(state)\n\t\t.map((refObject) => refObject.current)\n\t\t.filter((cur) => !!cur)\n\t\t.map((ref) => ref.parentNode);\n\n\tconst target = event.target as Node;\n\n\tif (menuRef?.querySelector(baseContextMenuSelector)?.contains(target)) return true;\n\n\tif (fullCardsRef?.contains(target)) return true;\n\n\tfor (const qaRef of qaRefs) {\n\t\tif (qaRef.contains(target)) return true;\n\t}\n\n\treturn false;\n};\n","import * as actions from \"./actions\";\nimport * as constants from \"./constants\";\nimport * as actionTypes from \"./actionTypes\";\nimport reducer from \"./reducer\";\nimport * as selectors from \"./selectors\";\nimport * as components from \"./components\";\nimport * as services from \"./services\";\n\nexport default { actions, actionTypes, constants, components, reducer, selectors, services };\n","import { Dispatch } from \"redux\";\nimport focus from \"../../focus\";\nimport display from \"../../display\";\nimport creation from \"../../creation\";\nimport { UserFocus } from \"../../focus/model\";\n\ntype KeyActionMap = { [key: string]: any };\n\ntype KeyEventDispatcher = (event: KeyboardEvent, dispatch: any, state?: any) => void;\n\nconst keyEventDispatcher = (keyMap: KeyActionMap) => (event: KeyboardEvent, dispatch: any) => {\n\tconst action = keyMap[event.key];\n\tif (action) {\n\t\tevent.preventDefault();\n\t\tdispatch(action);\n\t}\n};\n\nconst pageControlKeyMap: KeyActionMap = {\n\tArrowLeft: display.actions.previousPage(),\n\tArrowRight: display.actions.nextPage(),\n};\n\nconst pageControlDispatcher = keyEventDispatcher(pageControlKeyMap);\n\nconst contextMenuControlKeyMap: KeyActionMap = {\n\tt: creation.actions.toggleContextMenu(),\n};\n\nconst contextMenuControlDispatcher = keyEventDispatcher(contextMenuControlKeyMap);\n\nconst documentFocusKeyMap = {\n\t...pageControlKeyMap,\n\t...contextMenuControlKeyMap,\n};\n\nconst documentFocusDispatcher = keyEventDispatcher(documentFocusKeyMap);\n\nconst doNothing = (event: any, dispatch: any) => {};\n\nconst focusDispatcherMap: { [focus in UserFocus]: KeyEventDispatcher } = {\n\tDOCUMENT: documentFocusDispatcher,\n\tCONTEXT_MENU: contextMenuControlDispatcher,\n\tRIVER: doNothing,\n\tRIVER_CONTROL: doNothing,\n\tCONTROL: pageControlDispatcher,\n};\n\nexport const keyDownControl = (event: KeyboardEvent) => {\n\treturn (dispatch: Dispatch | any, getState: Function) => {\n\t\tconst state = getState();\n\t\tconst userFocus = focus.selectors.getFocus(state);\n\t\tconst dispatcher = focusDispatcherMap[userFocus];\n\n\t\tdispatcher(event, dispatch, state);\n\t};\n};\n","import { connect } from \"react-redux\";\nimport { useEventListener } from \"../hooks/useEventListener\";\nimport { keyDownControl } from \"../services/keyboardControl\";\nimport { mouseDownControl, mouseUpControl, rightClickControl } from \"../services/mouseControl\";\n\nfunction Control({\n\tkeyDownControl,\n\tmouseDownControl,\n\tmouseUpControl,\n\trightClickControl,\n}: {\n\tkeyDownControl: (event: KeyboardEvent) => void;\n\tmouseDownControl: (event: MouseEvent) => void;\n\tmouseUpControl: (event: MouseEvent) => void;\n\trightClickControl: (event: MouseEvent) => void;\n}) {\n\tuseEventListener(\"keydown\", keyDownControl);\n\tuseEventListener(\"mousedown\", mouseDownControl);\n\tuseEventListener(\"mouseup\", mouseUpControl);\n\tuseEventListener(\"contextmenu\", rightClickControl);\n\treturn null;\n}\n\nexport const ControlContainer = connect(\n\t() => {\n\t\treturn {};\n\t},\n\t{\n\t\tkeyDownControl,\n\t\tmouseDownControl,\n\t\tmouseUpControl,\n\t\trightClickControl,\n\t}\n)(Control);\n","import creation from \"../../creation\";\nimport focus from \"../../focus\";\nimport cards from \"../../cards\";\nimport river from \"../../river\";\nimport { getSelectionText } from \"../../../shared/utils\";\n\nexport const mouseDownControl = (event: MouseEvent) => {\n\treturn (dispatch: any, getState: Function) => {\n\t\tconst clickOutSideOfMenu = !creation.services.contextMenuContainsTargetNode(getState(), event);\n\t\tif (clickOutSideOfMenu) {\n\t\t\tdispatch(creation.actions.closeContextMenu());\n\t\t}\n\t};\n};\n\nexport const mouseUpControl = (event: MouseEvent) => {\n\treturn (dispatch: any, getState: Function) => {\n\t\t// if the menu is already open, this means we have opened it in the editor\n\t\tif (creation.selectors.getContextMenuState(getState())) return;\n\n\t\tconst selection = document.getSelection();\n\n\t\tif (selection) {\n\t\t\tconst selectedStr = getSelectionText();\n\n\t\t\tif (selectedStr && selectedStr !== \"\") {\n\t\t\t\tconst state = getState();\n\t\t\t\tconst goalCard = cards.selectors.getGoalCard(state);\n\t\t\t\tconst userFocus = focus.selectors.getFocus(state);\n\n\t\t\t\tconst shouldGrab = userFocus === \"RIVER\" || userFocus === \"DOCUMENT\";\n\n\t\t\t\tif (goalCard && shouldGrab) {\n\t\t\t\t\t// this is the dispatch for the grab for field button\n\t\t\t\t\t//(which has been pressed before the mouse-up if goalCard is not null), here we actually update the goal card\n\n\t\t\t\t\t//TODO-NICE: allow grabbing from other cards\n\t\t\t\t\t// for now we dont allow grabbing from other cards to simplifiy the card->card workflow\n\t\t\t\t\tif (userFocus !== \"RIVER\")\n\t\t\t\t\t\tdispatch(\n\t\t\t\t\t\t\tcards.actions.updateCardContent(\n\t\t\t\t\t\t\t\tselectedStr,\n\t\t\t\t\t\t\t\tgoalCard.cardID,\n\t\t\t\t\t\t\t\tgoalCard.creationType,\n\t\t\t\t\t\t\t\t\"REPLACE\",\n\t\t\t\t\t\t\t\tgoalCard.origin\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t);\n\t\t\t\t\tdispatch(cards.actions.resetGoalCard());\n\t\t\t\t} else {\n\t\t\t\t\t// this is the dispatch for the ContextMenu\n\t\t\t\t\tif (userFocus === \"DOCUMENT\") {\n\t\t\t\t\t\t//if the user is focused on the document, the push-to river should always be the active=page-wise river\n\t\t\t\t\t\tdispatch(river.actions.setPushToRiver(river.selectors.getActiveRiverMakeUpID(state)));\n\t\t\t\t\t\tdispatch(creation.actions.selectedParent(selection.anchorNode?.parentNode as HTMLSpanElement));\n\t\t\t\t\t\tdispatch(creation.actions.updateManuallySelectedString(selectedStr));\n\t\t\t\t\t\tdispatch(creation.actions.updateSelectionPosition(event.x, event.y));\n\t\t\t\t\t\tdispatch(creation.actions.openContextMenu());\n\t\t\t\t\t}\n\n\t\t\t\t\t// this is the dispatch to prepare for extraction from card\n\t\t\t\t\tif (userFocus === \"RIVER\") {\n\t\t\t\t\t\tdispatch(creation.actions.updateManuallySelectedString(selectedStr));\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t};\n};\n\n//TODO-NICE: make selection-dropable on buttons, so that they can be send to cards, make this the default instead of context-menu?\n// imagine: toolbar with new Note, new A, new Q | all the cards and you can drop off\n\n//TODO-NICE: delete extracted str in source\n\nexport const rightClickControl = (event: MouseEvent) => {\n\treturn (dispatch: any, getState: Function) => {\n\t\tconst state = getState();\n\t\tconst userFocus = focus.selectors.getFocus(state);\n\n\t\t// this is set via left-click\n\t\tconst selectedStr = creation.selectors.getCurrentSelectedString(state);\n\n\t\tif (selectedStr === \"\") return;\n\n\t\tevent.preventDefault();\n\n\t\t// this is the dispatch for the ContextMenu inside the editor\n\t\tif (userFocus === \"RIVER\") {\n\t\t\tdispatch(creation.actions.updateSelectionPosition(event.x, event.y));\n\t\t\tdispatch(creation.actions.openContextMenu());\n\t\t}\n\t};\n};\n","import { useSelector, useDispatch } from \"react-redux\";\nimport React, { ChangeEvent, Fragment, useRef, MutableRefObject } from \"react\";\nimport { Divider, Menu, MenuItem, IconButton, Typography } from \"@material-ui/core\";\nimport { changeDocument, downloadDBData } from \"../actions\";\nimport MoreVertIcon from \"@material-ui/icons/MoreVert\";\nimport display from \"../../display\";\nimport db from \"../../db\";\nimport { DocumentData } from \"../../db/model\";\nimport { uploadDatasetsText, activeDocumentText, existingDataText, downloadDatasetsText } from \"../../../shared/text\";\n\n//TODO-NICE: have way to merge two document-workspaces\n\nconst InputDocument = ({ handleClose, label }: any) => {\n\tconst dispatch = useDispatch();\n\n\tconst ref: MutableRefObject<null | HTMLInputElement> = useRef(null);\n\n\treturn (\n\t\t<Fragment>\n\t\t\t<MenuItem\n\t\t\t\tonClick={() => {\n\t\t\t\t\t(ref.current as HTMLInputElement).click();\n\t\t\t\t}}\n\t\t\t>\n\t\t\t\t<Typography>{label}</Typography>\n\t\t\t</MenuItem>\n\t\t\t<input\n\t\t\t\tref={ref}\n\t\t\t\tstyle={{ display: \"none\" }}\n\t\t\t\tonChange={(event: ChangeEvent<HTMLInputElement>) => {\n\t\t\t\t\tconst files = event.target.files;\n\t\t\t\t\tconst pdf = files ? files[0] : null;\n\t\t\t\t\tif (pdf) {\n\t\t\t\t\t\tdispatch(changeDocument(pdf));\n\t\t\t\t\t}\n\t\t\t\t\thandleClose();\n\t\t\t\t}}\n\t\t\t\ttype=\"file\"\n\t\t\t\taccept=\".pdf\"\n\t\t\t/>\n\t\t</Fragment>\n\t);\n};\n\nconst InputDataSets = ({ handleClose, label }: any) => {\n\tconst dispatch = useDispatch();\n\n\tconst activeDocument = useSelector(display.selectors.getPDFName);\n\n\tconst ref: MutableRefObject<null | HTMLInputElement> = useRef(null);\n\n\treturn (\n\t\t<Fragment>\n\t\t\t<MenuItem\n\t\t\t\tonClick={() => {\n\t\t\t\t\t(ref.current as HTMLInputElement).click();\n\t\t\t\t}}\n\t\t\t>\n\t\t\t\t<Typography>{label}</Typography>\n\t\t\t</MenuItem>\n\t\t\t<input\n\t\t\t\tref={ref}\n\t\t\t\tstyle={{ display: \"none\" }}\n\t\t\t\tonChange={(event: ChangeEvent<HTMLInputElement>) => {\n\t\t\t\t\t// fun fact: uploading a file with the same file-name does not trigger this event\n\n\t\t\t\t\tconst files = event.target.files;\n\t\t\t\t\tconst file = files ? files[0] : null;\n\t\t\t\t\tif (file) {\n\t\t\t\t\t\tconst reader = new FileReader();\n\t\t\t\t\t\treader.readAsText(file);\n\t\t\t\t\t\treader.onload = () => {\n\t\t\t\t\t\t\t//TODO-NICE: sanitize, escape os new line difference, prepare multimedia cards\n\t\t\t\t\t\t\t//TODO-NICE: merge same name-pdfs and think about collision in general\n\t\t\t\t\t\t\t//TODO-NICE: merge uploaded state with current-one and dont overwrite\n\n\t\t\t\t\t\t\tconst uploadedDataSets = JSON.parse(reader.result as string);\n\t\t\t\t\t\t\t// if the uploaded dataset corresponds to the current document, overwrite current with uploaded\n\t\t\t\t\t\t\tconst foundDataSet = (uploadedDataSets as DocumentData[]).find(\n\t\t\t\t\t\t\t\t(dbData) => dbData.name === activeDocument\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\tdispatch(db.actions.loadDocumentDataSets(uploadedDataSets, foundDataSet));\n\t\t\t\t\t\t};\n\t\t\t\t\t}\n\t\t\t\t\thandleClose();\n\t\t\t\t}}\n\t\t\t\ttype=\"file\"\n\t\t\t\taccept=\".txt\"\n\t\t\t/>\n\t\t</Fragment>\n\t);\n};\n\nexport const Options = () => {\n\tconst activeDocument = useSelector(display.selectors.getPDFName);\n\tconst documents = useSelector(db.selectors.getDocumentNames);\n\n\tconst [anchorEl, setAnchorEl] = React.useState<null | HTMLElement>(null);\n\n\tconst handleClick = (event: React.MouseEvent<HTMLButtonElement>) => {\n\t\tsetAnchorEl(event.currentTarget);\n\t};\n\n\tconst handleClose = () => {\n\t\tsetAnchorEl(null);\n\t};\n\n\tconst dispatch = useDispatch();\n\n\treturn (\n\t\t<div>\n\t\t\t<IconButton type=\"button\" onClick={handleClick}>\n\t\t\t\t<MoreVertIcon></MoreVertIcon>\n\t\t\t</IconButton>\n\t\t\t<Menu id=\"simple-menu\" anchorEl={anchorEl} keepMounted open={Boolean(anchorEl)} onClose={handleClose}>\n\t\t\t\t<Typography>{activeDocumentText}</Typography>\n\t\t\t\t<Typography>{activeDocument?.replace(\".pdf\", \"\")}</Typography>\n\t\t\t\t<Divider />\n\t\t\t\t<Typography>{existingDataText}</Typography>\n\t\t\t\t<Typography>\n\t\t\t\t\t<ul>{documents.map((document) => (document ? <li>{document.replace(\".pdf\", \"\")}</li> : null))}</ul>\n\t\t\t\t</Typography>\n\t\t\t\t<Divider />\n\t\t\t\t<InputDocument handleClose={handleClose} label={\"Load document\"}></InputDocument>\n\t\t\t\t<Divider />\n\t\t\t\t<MenuItem\n\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\tdispatch(downloadDBData());\n\t\t\t\t\t\thandleClose();\n\t\t\t\t\t}}\n\t\t\t\t>\n\t\t\t\t\t{downloadDatasetsText}\n\t\t\t\t</MenuItem>\n\t\t\t\t<Divider />\n\t\t\t\t<InputDataSets handleClose={handleClose} label={uploadDatasetsText}></InputDataSets>\n\t\t\t</Menu>\n\t\t</div>\n\t);\n};\n","import React, { useState } from \"react\";\nimport SearchBar from \"material-ui-search-bar\";\nimport river from \"../../river\";\nimport { useDispatch, useSelector } from \"react-redux\";\n\n//TODO-NICE: make search for PDF\nexport const CardSearchBar = () => {\n\tconst dispatch = useDispatch();\n\tconst contentFilter = useSelector(river.selectors.getRiverContentFilter);\n\tconst [state, setState] = useState(contentFilter);\n\n\t//TODO-NICE: search in other rivers/same river when composing to show similar cards (like in the Anki Addon)\n\t//TODO-NICE: change the color / border or something to indicate when a filter is active\n\treturn (\n\t\t<SearchBar\n\t\t\tvalue={state}\n\t\t\tplaceholder=\"Search in cards\"\n\t\t\tonChange={(newValue) => {\n\t\t\t\t// reset on delete\n\t\t\t\tif (newValue === \"\") dispatch(river.actions.setContentFilter(\"\"));\n\t\t\t\tsetState(newValue);\n\t\t\t}}\n\t\t\tonCancelSearch={() => {\n\t\t\t\tdispatch(river.actions.setContentFilter(\"\"));\n\t\t\t}}\n\t\t\tonRequestSearch={() => dispatch(river.actions.setContentFilter(state))}\n\t\t/>\n\t);\n};\n","import React from \"react\";\nimport { IconButton, Card, Divider, Grid, Tooltip } from \"@material-ui/core\";\nimport { useDispatch } from \"react-redux\";\nimport UndoIcon from \"@material-ui/icons/Undo\";\nimport RedoIcon from \"@material-ui/icons/Redo\";\nimport { ActionCreators } from \"redux-undo\";\nimport { undoTooltip, redoTooltip } from \"../../../shared/tooltips\";\n// we support undo/redo instead of lengthy confirmation (see The Humane Interface)\nconst UndoButton = () => {\n\tconst dispatch = useDispatch();\n\treturn (\n\t\t<Tooltip title={undoTooltip} enterDelay={500} enterNextDelay={1000}>\n\t\t\t<IconButton\n\t\t\t\ttype=\"button\"\n\t\t\t\tonClick={() => {\n\t\t\t\t\tdispatch(ActionCreators.undo());\n\t\t\t\t}}\n\t\t\t>\n\t\t\t\t<UndoIcon></UndoIcon>\n\t\t\t</IconButton>\n\t\t</Tooltip>\n\t);\n};\nconst RedoButton = () => {\n\tconst dispatch = useDispatch();\n\treturn (\n\t\t<Tooltip title={redoTooltip} enterDelay={500} enterNextDelay={1000}>\n\t\t\t<IconButton\n\t\t\t\ttype=\"button\"\n\t\t\t\tonClick={() => {\n\t\t\t\t\tdispatch(ActionCreators.redo());\n\t\t\t\t}}\n\t\t\t>\n\t\t\t\t<RedoIcon></RedoIcon>\n\t\t\t</IconButton>\n\t\t</Tooltip>\n\t);\n};\n\nexport const UndoRedoCard = () => {\n\treturn (\n\t\t<Card variant=\"outlined\">\n\t\t\t<Grid container direction=\"row\">\n\t\t\t\t<Grid item>\n\t\t\t\t\t<UndoButton></UndoButton>\n\t\t\t\t</Grid>\n\t\t\t\t<Grid item>\n\t\t\t\t\t<Divider orientation=\"vertical\"></Divider>\n\t\t\t\t</Grid>\n\t\t\t\t<Grid item>\n\t\t\t\t\t<RedoButton></RedoButton>\n\t\t\t\t</Grid>\n\t\t\t</Grid>\n\t\t</Card>\n\t);\n};\n","import display from \"../../display\";\nimport focus from \"../../focus\";\nimport river from \"../../river\";\nimport React from \"react\";\nimport { IconButton, Menu, FormControlLabel, Typography, Divider, Grid } from \"@material-ui/core\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport VisibilityIcon from \"@material-ui/icons/Visibility\";\nimport { GreenCheckbox } from \"../../../shared/GreenCheckbox\";\nconst ShowRiverCheckbox = () => {\n\tconst dispatch = useDispatch();\n\tconst riverShowState = useSelector(river.selectors.getRiverShowState);\n\n\treturn (\n\t\t<FormControlLabel\n\t\t\tcontrol={\n\t\t\t\t<GreenCheckbox\n\t\t\t\t\tchecked={riverShowState === \"SHOW\"}\n\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\tdispatch(river.actions.toggleRiverShowState());\n\t\t\t\t\t}}\n\t\t\t\t/>\n\t\t\t}\n\t\t\tlabel=\"River\"\n\t\t/>\n\t);\n};\nconst ShowMaterialCheckbox = () => {\n\tconst dispatch = useDispatch();\n\tconst displayShowState = useSelector(display.selectors.getDisplayStatus);\n\n\treturn (\n\t\t<FormControlLabel\n\t\t\tcontrol={\n\t\t\t\t<GreenCheckbox\n\t\t\t\t\tchecked={displayShowState === \"SHOW\"}\n\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\tdispatch(display.actions.toggleDisplayState());\n\t\t\t\t\t}}\n\t\t\t\t/>\n\t\t\t}\n\t\t\tlabel=\"Material\"\n\t\t/>\n\t);\n};\nexport const ShowHideButton = () => {\n\tconst [anchorEl, setAnchorEl] = React.useState<null | HTMLElement>(null);\n\n\tconst handleClick = (event: React.MouseEvent<HTMLButtonElement>) => {\n\t\tsetAnchorEl(event.currentTarget);\n\t};\n\n\tconst handleClose = () => {\n\t\tsetAnchorEl(null);\n\t};\n\n\tconst displayFocus = useSelector(focus.selectors.getDisplayFocus);\n\n\treturn (\n\t\t<div>\n\t\t\t<IconButton type=\"button\" onClick={handleClick}>\n\t\t\t\t<VisibilityIcon></VisibilityIcon>\n\t\t\t</IconButton>\n\t\t\t<Menu anchorEl={anchorEl} keepMounted open={Boolean(anchorEl)} onClose={handleClose}>\n\t\t\t\t<Typography>Show:</Typography>\n\t\t\t\t<Divider></Divider>\n\t\t\t\t<Grid container direction=\"row\">\n\t\t\t\t\t<Grid item>\n\t\t\t\t\t\t<river.components.RiverContentFormGroup></river.components.RiverContentFormGroup>\n\t\t\t\t\t</Grid>\n\t\t\t\t\t<Grid item>\n\t\t\t\t\t\t<Divider orientation=\"vertical\"></Divider>\n\t\t\t\t\t</Grid>\n\t\t\t\t\t<Grid item>\n\t\t\t\t\t\t{displayFocus === \"ACTIVE_RIVER\" && (\n\t\t\t\t\t\t\t<Grid container direction=\"column\">\n\t\t\t\t\t\t\t\t<Grid item>\n\t\t\t\t\t\t\t\t\t<ShowRiverCheckbox></ShowRiverCheckbox>\n\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t\t<Grid item>\n\t\t\t\t\t\t\t\t\t<ShowMaterialCheckbox></ShowMaterialCheckbox>\n\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t)}\n\t\t\t\t\t</Grid>\n\t\t\t\t</Grid>\n\t\t\t</Menu>\n\t\t</div>\n\t);\n};\n","import display from \"../../display\";\nimport focus from \"../../focus\";\nimport React, { ChangeEvent } from \"react\";\nimport { AppBar, Toolbar, Tabs, Tab, Grid, Card, Typography, Tooltip } from \"@material-ui/core\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { Options } from \"./Options\";\nimport { CardSearchBar } from \"./CardSearchBar\";\nimport { UndoRedoCard } from \"./UndoRedoButtons\";\nimport { ShowHideButton } from \"./ShowHideButton\";\nimport { switchToActiveRiverTooltip, switchToSummaryRiverTooltip } from \"../../../shared/tooltips\";\n//TODO-NICE: download/load csv for Anki\nexport const ControlBar = () => {\n\tconst dispatch = useDispatch();\n\tconst displayFocus = useSelector(focus.selectors.getDisplayFocus);\n\n\tconst value = displayFocus === \"ACTIVE_RIVER\" ? 0 : 1;\n\n\tconst handleChange = (_: ChangeEvent<{}>, newValue: number) => {\n\t\tdispatch(\n\t\t\tnewValue === 0\n\t\t\t\t? focus.actions.updateDisplayFocus(\"ACTIVE_RIVER\")\n\t\t\t\t: focus.actions.updateDisplayFocus(\"SUMMARY_RIVER\")\n\t\t);\n\t};\n\n\tconst materialName = useSelector(display.selectors.getPDFName);\n\n\treturn (\n\t\t<Grid\n\t\t\titem\n\t\t\tonMouseEnter={() => {\n\t\t\t\tdispatch(focus.actions.tryUpdateFocus(\"CONTROL\"));\n\t\t\t}}\n\t\t>\n\t\t\t<AppBar>\n\t\t\t\t<Toolbar variant=\"regular\">\n\t\t\t\t\t<Grid item>\n\t\t\t\t\t\t<Grid container spacing={1} direction=\"row\" alignItems=\"center\" justify=\"flex-start\">\n\t\t\t\t\t\t\t<Grid item style={{ width: \"12%\" }}>\n\t\t\t\t\t\t\t\t<display.components.PageChooser></display.components.PageChooser>\n\t\t\t\t\t\t\t</Grid>\n\n\t\t\t\t\t\t\t<Grid item>\n\t\t\t\t\t\t\t\t<display.components.PageNavigation></display.components.PageNavigation>\n\t\t\t\t\t\t\t</Grid>\n\n\t\t\t\t\t\t\t<Grid item>\n\t\t\t\t\t\t\t\t<Card variant=\"outlined\">\n\t\t\t\t\t\t\t\t\t<Tabs value={value} onChange={handleChange}>\n\t\t\t\t\t\t\t\t\t\t<Tab\n\t\t\t\t\t\t\t\t\t\t\tlabel={\n\t\t\t\t\t\t\t\t\t\t\t\t<Tooltip\n\t\t\t\t\t\t\t\t\t\t\t\t\ttitle={switchToActiveRiverTooltip}\n\t\t\t\t\t\t\t\t\t\t\t\t\tenterDelay={500}\n\t\t\t\t\t\t\t\t\t\t\t\t\tenterNextDelay={500}\n\t\t\t\t\t\t\t\t\t\t\t\t\tdisableFocusListener={true}\n\t\t\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<span>ActiveRiver</span>\n\t\t\t\t\t\t\t\t\t\t\t\t</Tooltip>\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t></Tab>\n\t\t\t\t\t\t\t\t\t\t<Tab\n\t\t\t\t\t\t\t\t\t\t\tlabel={\n\t\t\t\t\t\t\t\t\t\t\t\t<Tooltip\n\t\t\t\t\t\t\t\t\t\t\t\t\ttitle={switchToSummaryRiverTooltip}\n\t\t\t\t\t\t\t\t\t\t\t\t\tenterDelay={500}\n\t\t\t\t\t\t\t\t\t\t\t\t\tenterNextDelay={500}\n\t\t\t\t\t\t\t\t\t\t\t\t\tdisableFocusListener={true}\n\t\t\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<span>SummaryRiver</span>\n\t\t\t\t\t\t\t\t\t\t\t\t</Tooltip>\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t</Tabs>\n\t\t\t\t\t\t\t\t</Card>\n\t\t\t\t\t\t\t</Grid>\n\n\t\t\t\t\t\t\t<Grid item>\n\t\t\t\t\t\t\t\t<UndoRedoCard></UndoRedoCard>\n\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t</Grid>\n\t\t\t\t\t</Grid>\n\n\t\t\t\t\t<Typography style={{ flexGrow: 1 }}>{materialName?.replace(\".pdf\", \"\")}</Typography>\n\n\t\t\t\t\t<ShowHideButton></ShowHideButton>\n\t\t\t\t\t<Options></Options>\n\t\t\t\t\t<CardSearchBar></CardSearchBar>\n\t\t\t\t</Toolbar>\n\t\t\t</AppBar>\n\t\t</Grid>\n\t);\n};\n","import * as actions from \"./actions\";\nimport * as components from \"./components\";\nimport * as selectors from \"./selectors\";\n\nexport default { actions, components, selectors };\n","import React from \"react\";\nimport Grid from \"@material-ui/core/Grid\";\nimport control from \"../modules/control\";\nimport creation from \"../modules/creation\";\nimport river from \"../modules/river\";\nimport { makeStyles, Theme, createStyles, useScrollTrigger, Zoom, Toolbar, Fab } from \"@material-ui/core\";\nimport KeyboardArrowUpIcon from \"@material-ui/icons/KeyboardArrowUp\";\n\n//TODO: make show/hide depdendant on tab, also Page choice, control-bar dependant on tab\n\nconst useStyles = makeStyles((theme: Theme) =>\n\tcreateStyles({\n\t\troot: {\n\t\t\tposition: \"fixed\",\n\t\t\tbottom: theme.spacing(2),\n\t\t\tright: theme.spacing(2),\n\t\t},\n\t})\n);\n\nfunction ScrollTop(props: any) {\n\tconst { children } = props;\n\tconst classes = useStyles();\n\tconst trigger = useScrollTrigger({\n\t\tdisableHysteresis: true,\n\t\tthreshold: 100,\n\t});\n\n\tconst handleClick = (event: React.MouseEvent<HTMLDivElement>) => {\n\t\tconst anchor = ((event.target as HTMLDivElement).ownerDocument || document).querySelector(\"#back-to-top-anchor\");\n\n\t\tif (anchor) {\n\t\t\tanchor.scrollIntoView({ behavior: \"smooth\", block: \"center\" });\n\t\t}\n\t};\n\n\treturn (\n\t\t<Zoom in={trigger}>\n\t\t\t<div onClick={handleClick} role=\"presentation\" className={classes.root}>\n\t\t\t\t{children}\n\t\t\t</div>\n\t\t</Zoom>\n\t);\n}\n\nexport function ReaderScene() {\n\treturn (\n\t\t<div>\n\t\t\t<control.components.ControlContainer></control.components.ControlContainer>\n\t\t\t<Grid container justify=\"center\" direction=\"column\" alignItems=\"stretch\" spacing={1}>\n\t\t\t\t<control.components.ControlBar></control.components.ControlBar>\n\t\t\t\t<Toolbar id=\"back-to-top-anchor\" />\n\n\t\t\t\t<river.components.ActiveRiverView></river.components.ActiveRiverView>\n\t\t\t\t<river.components.SummaryRiverView></river.components.SummaryRiverView>\n\t\t\t</Grid>\n\t\t\t<ScrollTop>\n\t\t\t\t<Fab color=\"secondary\" size=\"small\" aria-label=\"scroll back to top\">\n\t\t\t\t\t<KeyboardArrowUpIcon />\n\t\t\t\t</Fab>\n\t\t\t</ScrollTop>\n\t\t\t<creation.components.ContextMenuContainer></creation.components.ContextMenuContainer>\n\t\t\t<creation.components.SelectionSnackbar></creation.components.SelectionSnackbar>\n\t\t</div>\n\t);\n}\n","import storage from \"redux-persist/lib/storage\"; // defaults to localStorage for web\nimport { createTransform } from \"redux-persist\";\nimport { CreationData } from \"./modules/creation/model\";\nimport { createRef } from \"react\";\nimport creation from \"./modules/creation\";\nimport { DisplayData, DisplayStatus, PerPageSpans } from \"./modules/display/model\";\nimport display from \"./modules/display\";\n\n// to get the correct object with reselect, I added .present to all getAll that belong do undoable modules\n\nconst removeDOMObjectsFromCreationData = (inboundState: CreationData) => {\n\treturn {\n\t\t...inboundState,\n\t\tmenuRef: null,\n\t\tfullCardRef: null,\n\t\tqaRefs: inboundState.qaRefs.map((_) => null),\n\t\tselectedParentSpan: null,\n\t};\n};\n\nconst addDOMObjectsToCreationData = (outboundState: {\n\topen: boolean;\n\tmenuRef: null;\n\tfullCardRef: null;\n\tqaRefs: null[];\n\tmanuallySelectedString: string;\n\tselectedParentSpan: null;\n\tselectionPosition: { x: number; y: number };\n}): CreationData => {\n\treturn {\n\t\t...outboundState,\n\t\tmenuRef: createRef(),\n\t\tfullCardRef: createRef(),\n\t\tqaRefs: outboundState.qaRefs.map((_) => createRef()),\n\t};\n};\n\nconst creationTransform = createTransform(\n\t(inboundState: { future: CreationData[]; past: CreationData[]; present: CreationData }) => {\n\t\treturn {\n\t\t\t...inboundState,\n\t\t\tfuture: inboundState.future.map(removeDOMObjectsFromCreationData),\n\t\t\tpast: inboundState.past.map(removeDOMObjectsFromCreationData),\n\t\t\tpresent: removeDOMObjectsFromCreationData(inboundState.present),\n\t\t};\n\t},\n\t(outboundState): { future: CreationData[]; past: CreationData[]; present: CreationData } => {\n\t\treturn {\n\t\t\t...outboundState,\n\t\t\tfuture: outboundState.future.map(addDOMObjectsToCreationData),\n\t\t\tpast: outboundState.past.map(addDOMObjectsToCreationData),\n\t\t\tpresent: addDOMObjectsToCreationData(outboundState.present),\n\t\t};\n\t},\n\t{ whitelist: [creation.constants.NAME] }\n);\n\n//TODO-NICE: find way to save PDF in browser, maybe manually use indexeddb and use that in transform?\n// idea: make store-field pdfAsBase64 and use thunk for async-filling the field, then when reloading, use thunk to format\n// const reader = new FileReaderSync();\n\n// function readFileAsync(file: File) {\n// \treturn new Promise((resolve) => {\n// \t\treader.onload = () => {\n// \t\t\tresolve(reader.result);\n// \t\t};\n// \t\treader.onerror = () => resolve(null);\n\n// \t\treader.readAsDataURL(file);\n// \t});\n// }\n\nconst removeDOMObjectsFromDisplayData = (inboundState: DisplayData) => {\n\tlet pdf = null;\n\t// if (inboundState.pdf) {\n\t// \tpdf = await readFileAsync(inboundState.pdf);\n\t// }\n\tconst result = { ...inboundState, documentRef: null, materialData: null, pdf };\n\treturn result;\n};\n\n//TODO-NICE: create persistable type for the state in model\n\nconst addDOMObjectsToDisplayData = (outboundState: {\n\tpdf: null;\n\tpdfName?: string;\n\tdisplayStatus: DisplayStatus;\n\tcurrentPage: number;\n\ttotalPages: number;\n\t//TODO-NICE:might need amount of spans per page for validation? if yes, use this\n\tpageSpans: PerPageSpans;\n\tdocumentRef: null;\n\tzoomQueue: number | null;\n\tmaterialData: null;\n}): DisplayData => {\n\treturn {\n\t\t...outboundState,\n\t\tpdf: undefined,\n\t\tdocumentRef: createRef(),\n\t\tmaterialData: { materialDataTimeStamp: -Infinity },\n\t};\n};\n\nconst displayTransform = createTransform(\n\t(inboundState: DisplayData) => {\n\t\treturn removeDOMObjectsFromDisplayData(inboundState);\n\t},\n\t(outboundState): DisplayData => {\n\t\treturn addDOMObjectsToDisplayData(outboundState);\n\t},\n\t{ whitelist: [display.constants.NAME] }\n);\n\nexport const persistConfig = {\n\tkey: \"root\",\n\tstorage,\n\ttransforms: [creationTransform, displayTransform],\n};\n","import { createStore } from \"redux\";\nimport { applyMiddleware } from \"redux\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport thunk from \"redux-thunk\";\nimport { combineReducers } from \"redux\";\nimport focus from \"./modules/focus\";\nimport creation from \"./modules/creation\";\nimport river from \"./modules/river\";\nimport display from \"./modules/display\";\nimport cards from \"./modules/cards\";\nimport { persistStore, persistReducer } from \"redux-persist\";\nimport undoable, { includeAction } from \"redux-undo\";\nimport { persistConfig } from \"./persist\";\nimport db from \"./modules/db\";\n\n//TODO-NICE: make limit for undo (right now its fine, if we reset on document-upload)\n//TODO-NICE: make snackbar for which action is undone/redone\n//TODO-NICE: this undo-buisness is not very transparent, I just list each action that is state-relevant and not view, make action list in constants.ts?\n\nconst rootReducer = combineReducers({\n\t[focus.constants.NAME]: focus.reducer,\n\t[creation.constants.NAME]: undoable(creation.reducer, {\n\t\tfilter: includeAction([cards.actionTypes.CARD_PUSH, creation.actionTypes.SELECTED_STRING]),\n\t}),\n\t[river.constants.NAME]: undoable(river.reducer, {\n\t\tfilter: includeAction([\n\t\t\tcards.actionTypes.CARD_PUSH,\n\t\t\tcards.actionTypes.CARD_REMOVE,\n\t\t\tdb.actionTypes.LOAD_DOCUMENT_DATA_SETS,\n\t\t]),\n\t}),\n\t[display.constants.NAME]: display.reducer,\n\t[cards.constants.NAME]: undoable(cards.reducer, {\n\t\tfilter: includeAction([\n\t\t\tdb.actionTypes.LOAD_DOCUMENT_DATA_SETS,\n\t\t\tcards.actionTypes.CARD_PUSH,\n\t\t\tcards.actionTypes.CARD_UPDATE,\n\t\t\tcards.actionTypes.CARD_REMOVE,\n\t\t\t//this needs to be here, because we use display it to the user with the grab-icon\n\t\t\tcards.actionTypes.CARD_GOAL,\n\t\t]),\n\t}),\n\t[db.constants.NAME]: undoable(db.reducer, {\n\t\tfilter: includeAction([db.actionTypes.LOAD_DOCUMENT_DATA_SETS]),\n\t}),\n});\n\nconst stateSanitizer = (state: any) => {\n\treturn state.displayData.pdf ? { ...state, displayData: { ...state.displayData, pdf: \"PDF_FILE_IS_HERE\" } } : state;\n};\n\nconst persistedReducer = persistReducer(persistConfig, rootReducer);\n\nconst composeEnhancers = composeWithDevTools({ stateSanitizer });\nconst enhancer = composeEnhancers(applyMiddleware(thunk));\n\nexport const store = createStore(persistedReducer, enhancer);\n\nexport const persistor = persistStore(store);\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { ReaderScene } from \"./scenes/ReaderScene\";\nimport { Provider } from \"react-redux\";\nimport { store, persistor } from \"./store\";\nimport { PersistGate } from \"redux-persist/es/integration/react\";\n// Load Roboto typeface\nrequire(\"typeface-roboto\");\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<Provider store={store}>\n\t\t\t<PersistGate loading={null} persistor={persistor}>\n\t\t\t\t<ReaderScene></ReaderScene>\n\t\t\t</PersistGate>\n\t\t</Provider>\n\t</React.StrictMode>,\n\tdocument.getElementById(\"root\")\n);\n","function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 92;"],"sourceRoot":""}