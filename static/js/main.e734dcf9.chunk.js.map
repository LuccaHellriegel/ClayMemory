{"version":3,"sources":["modules/control/hooks/useEventListener.tsx","modules/focus/constants.ts","modules/focus/actionTypes.ts","modules/focus/selectors.ts","modules/focus/actions.ts","modules/focus/reducer.ts","modules/focus/index.ts","modules/display/constants.ts","modules/display/actionTypes.ts","modules/display/selectors.ts","shared/utils.ts","modules/display/services/span.ts","modules/display/services/materialData.ts","modules/display/actions.ts","modules/display/components/NavigationButtons.tsx","modules/display/components/ShowMaterialButton.tsx","modules/display/components/PageChooser/PageChooser.tsx","modules/display/components/PDFDocument/PDFDocument.tsx","modules/display/components/PDFUpload.tsx","modules/display/components/MaterialDisplayColumn.tsx","modules/display/reducer.ts","modules/display/index.ts","modules/creation/constants.ts","modules/creation/actionTypes.ts","modules/cards/services/config.ts","modules/cards/constants.ts","modules/cards/actionTypes.ts","modules/cards/selectors.ts","modules/cards/actions.ts","modules/cards/reducer.ts","modules/cards/index.ts","modules/river/constants.ts","modules/river/selectors.ts","modules/river/components/CardRiver/HybridCardField.tsx","modules/river/components/CardRiver/Buttons/DeleteCardButton.tsx","modules/river/components/CardRiver/Buttons/JumpToOriginButton.tsx","modules/river/components/CardRiver/Buttons/GrabForFieldButton.tsx","modules/river/components/CardRiver/Buttons/ExtractFromFieldButton.tsx","modules/river/components/CardRiver/Card.tsx","modules/river/components/CardRiver/toCardGridItemsWithDividers.tsx","modules/river/actionTypes.ts","modules/river/actions.ts","modules/river/components/CardRiver/Buttons/AddNoteButton.tsx","modules/river/components/CardRiver/Buttons/AddQAButton.tsx","modules/river/components/CardRiver/CardRiverAccordion.tsx","modules/river/components/CardRiver/ChildCardRiver.tsx","modules/river/model.ts","modules/river/components/SummaryRiver/SummaryRiver.tsx","modules/river/components/SummaryRiver/SummaryRiverView.tsx","modules/river/components/ActiveRiver/ActiveCardRiver.tsx","modules/river/components/ActiveRiver/ActiveRiverColumn.tsx","modules/river/components/ActiveRiver/ActiveRiverView.tsx","modules/river/reducer.ts","modules/river/index.ts","modules/creation/selectors.ts","modules/creation/actions.ts","modules/creation/services/transformInputOrigin.ts","modules/creation/reducer.ts","modules/creation/components/CardConfigItem.tsx","modules/creation/components/NewButtons.tsx","modules/creation/components/ContextMenu.tsx","modules/creation/components/SourceMenu.tsx","modules/creation/utils.ts","modules/creation/index.ts","modules/control/services/keyboardControl.ts","modules/control/components/Control.tsx","modules/control/services/mouseControl.ts","modules/control/components/ShowRiverButton.tsx","modules/control/components/ControlBar.tsx","modules/control/index.ts","scenes/ReaderScene.tsx","store.ts","index.tsx","../node_modules/pdfjs-dist/build sync"],"names":["useEventListener","eventName","handler","savedHandler","useRef","useEffect","current","eventListener","event","document","addEventListener","removeEventListener","NAME","FOCUS_UPDATE","DISPLAY_FOCUS_UPDATE","getAll","state","getFocus","createSelector","userFocus","getDisplayFocus","displayFocus","updateFocus","focus","type","t","payload","tryUpdateFocus","dispatch","getState","toggleContextMenuFocus","updateDisplayFocus","initialState","actions","constants","reducer","selectors","actionTypes","PDF_UPLOADED","MATERIAL_LOADED","DISPLAY_STATUS","PAGE_UPDATE","ZOOM_QUEUE","MATERIAL_DATA","getPDF","pdf","getRenderCritialData","currentPage","documentRef","getTotalPages","totalPages","getCurrentPage","getPageControlData","getDocumentRef","getMaterialData","materialData","getTimeStamp","materialDataTimeStamp","getMaterialSpans","materialSpans","getSpanIndex","span","indexOf","getMaterialBoundingRects","materialBoundingRects","getDataExists","timestamp","getDisplayStatus","displayStatus","displayStatusIsShow","status","getZoomQueue","zoomQueue","incrementer","counter","curCounter","expandSpan","rect","getBoundingClientRect","container","startingSpans","Array","from","querySelectorAll","length","expandedSpans","spans","boundingRects","exSpan","push","splitExpandedSpans","map","expandSpans","sort","exSpan2","y","materialUploaded","files","target","materialLoaded","tryInterval","tries","ms","func","increment","timeout","setInterval","clearInterval","captureMaterialData","startTime","Date","now","curMaterialGroupData","emptyZoomQueue","setPage","page","pageCorrections","newPage","movePage","nextPage","previousPage","toggleDisplayState","displayState","setZoomQueue","spanIndex","zoomToCardOrigin","originSpan","scrollIntoView","behavior","block","inline","PreviousButton","useDispatch","IconButton","onClick","NextButton","ShowMaterialButton","useState","outlined","setOutlined","nonDigitRegEx","PageChooser","useSelector","error","value","toString","userInput","setState","Typography","variant","TextField","onKeyDown","key","preventDefault","submittedValue","parseInt","onChange","possiblePage","trim","match","asInt","validatePageChoice","pdfjs","GlobalWorkerOptions","workerSrc","version","options","cMapUrl","cMapPacked","PDFDocumentContainer","connect","parentSize","file","onLoadSuccess","numPages","inputRef","onItemClick","pageNumber","width","onRenderSuccess","forEach","layer","style","top","left","transform","PDFUploadContainer","onUpload","accept","MaterialDisplayColumnWithSize","withSize","monitorHeight","noPlaceholder","size","hidden","elevation","setElevation","Grid","item","onMouseEnter","onMouseLeave","Paper","createRef","pageSpans","Infinity","components","TOGGLE_CONTEXT_MENU","CLOSE_CONTEXT_MENU","OPEN_CONTEXT_MENU","SELECTED_STRING","SELECTED_PARENT","SELECTION_POSITION","updateContentStrFunctions","REPLACE","_","newStr","APPEND","oldStr","creationFunctions","NOTE","oldConfig","partialUpdateFunction","content","Q","q","A","a","contentStringToConfig","contentStr","creationType","updateType","currentCard","createPartialUpdateContentStrFunction","CARD_UPDATE","CARD_PUSH","CARD_REMOVE","CARD_GOAL","CARD_SOURCE","cards","getLastCardIDNumber","lastCardIDNumber","getCards","getGoalCard","goalCard","getSourceCard","sourceCard","cardPush","cardPayload","card","cardID","cardUpdate","updateCardContent","contentString","origin","config","pushCardContent","removeCard","setGoalCard","cardConfig","resetGoalCard","setSourceCard","x","sourceField","resetSourceCard","tryResetSourceCard","intialState","services","cardObj","getRiverMakeUps","riverMakeUps","getActiveRiverMakeUpID","activeRiverMakeUpID","getPushToRiver","pushToRiverID","getPushToRiverMakeUp","makeUps","id","getActiveRiverMakeUp","getPushToRiverCardIDs","makeUp","cardIDs","getPushToRiverCards","makeUpCardIDs","getActiveRiverCardIDs","getActiveRiverCards","getRiverShowState","riverShowState","riverShowStateIsShow","getHoveredCardData","hoveredCard","field","hoveredField","HybridCardField","storeValue","saveChanges","rest","mutableValue","multiline","onBlur","DeleteCardButton","JumpToOriginButton","cardOrigin","display","GrabForFieldButton","isGoalCard","ExtractFromFieldButton","clientX","clientY","borderStyle","border","borderRadius","NoteCard","isHoveredCard","undefined","label","backgroundColor","InputLabelProps","color","QACard","direction","spacing","isNullOrUndefined","Card","riverID","GridDivider","Divider","RIVER_SHOW_STATE","RIVER_PUSH_STATE","RIVER_HOVERED_CARD","toggleRiverShowState","setPushToRiver","trySetPushToRiver","setHoveredCard","trySetHoveredCard","hoveredCardData","AddNoteButton","AddQAButton","CardRiverAccordion","gridItems","summary","pushToRiver","Accordion","defaultExpanded","AccordionSummary","align","MozUserSelect","WebkitUserSelect","msUserSelect","AccordionDetails","justify","alignItems","ChildCardRiver","riverCards","useMemo","reduce","prev","index","arr","toCardGridItemsWithDividers","pageNumberToRiverMakeUpID","SummaryRiver","cardConfigs","Object","values","focusRef","ref","replace","SummaryRiverView","ActiveCardRiver","ActiveRiverColumn","ActiveRiverView","showMaterial","showRiver","active","lastRiverIDNumber","emptyCardRiver","updateStateWithMakeUps","updatedState","deactivateActiveCardRiver","removeCardFromRivers","fromEntries","entries","entry","filter","riverMakeUp","activeRiver","oldRiver","getContextMenuState","open","getContextMenuRef","menuRef","getContextMenuQARefs","qaRefs","getCurrentSelectionPosition","selectionPosition","getContextMenuInitData","river","position","getCurrentSelectedString","manuallySelectedString","getCurrentSelectedParent","selectedParentSpan","getCurrentOrigin","selectedParent","toggleContextMenu","closeContextMenu","openContextMenu","grabSelectionForContextMenu","isUpdate","selectedString","hasNonEmptyOrigin","grabSelectionForSourceMenu","newOrigin","sourceOrigin","goalOrigin","transformInputOrigin","updateManuallySelectedString","str","resetManuallySelectedString","updateSelectionPosition","creationData","SingleOptionItem","dispatchRiver","MenuItem","QAOptionItem","qaRef","parentMenuOpen","CardConfigItem","NewQACardQ","NewQACardA","NewNoteCard","NewButtons","noteClick","qClick","aClick","ContextMenuContainer","openState","qaRefIndex","anchorPosition","Menu","keepMounted","anchorReference","SourceMenuContainer","contextMenuContainsTargetNode","refObject","cur","parentNode","querySelector","contains","utils","keyEventDispatcher","keyMap","action","pageControlKeyMap","ArrowLeft","ArrowRight","contextMenuControlKeyMap","creation","doNothing","focusDispatcherMap","SELECTION","CONTEXT_MENU","EDITOR","CONTROL","EDITOR_CONTROL","ControlContainer","keyDownControl","dispatcher","mouseDownControl","mouseUpControl","selection","getSelection","selectedStr","anchorNode","ShowRiverButton","ControlBar","AppBar","Toolbar","Tabs","newValue","Tab","orientation","flexItem","useStyles","makeStyles","theme","createStyles","root","bottom","right","ScrollTop","props","children","classes","trigger","useScrollTrigger","disableHysteresis","threshold","Zoom","in","anchor","ownerDocument","role","className","ReaderScene","control","Fab","aria-label","rootReducer","combineReducers","creationTransform","createTransform","inboundState","outboundState","whitelist","displayTransform","persistConfig","storage","transforms","persistedReducer","persistReducer","enhancer","composeWithDevTools","stateSanitizer","displayData","composeEnhancers","applyMiddleware","thunk","store","createStore","persistor","persistStore","ReactDOM","render","StrictMode","loading","getElementById","webpackEmptyContext","req","e","Error","code","keys","resolve","module","exports"],"mappings":"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","file":"static/js/main.e734dcf9.chunk.js","sourcesContent":["import { useRef, useEffect, MutableRefObject } from \"react\";\n\n// only global eventListener for now\nexport const useEventListener = (eventName: string, handler: any) => {\n\tconst savedHandler: MutableRefObject<Function> = useRef(() => {});\n\n\tuseEffect(() => {\n\t\tsavedHandler.current = handler;\n\t}, [handler]);\n\n\tuseEffect(() => {\n\t\tconst eventListener = (event: Event) => savedHandler.current(event);\n\t\tdocument.addEventListener(eventName, eventListener);\n\t\treturn () => {\n\t\t\tdocument.removeEventListener(eventName, eventListener);\n\t\t};\n\t}, [eventName]);\n};\n","export const NAME = \"appFocus\";\n","import { NAME } from \"./constants\";\n\nexport const FOCUS_UPDATE = NAME + \"/FOCUS_UPDATE\";\nexport const DISPLAY_FOCUS_UPDATE = NAME + \"/DISPLAY_FOCUS_UPDATE\";\n","import { createSelector } from \"reselect\";\nimport { NAME } from \"./constants\";\nimport { FocusState } from \"./model\";\n\nexport const getAll = (state: any) => state[NAME];\n\nexport const getFocus = createSelector(getAll, (state: FocusState) => state.userFocus);\n\nexport const getDisplayFocus = createSelector(getAll, (state: FocusState) => state.displayFocus);\n","import * as t from \"./actionTypes\";\nimport { UserFocus, DisplayFocus } from \"./model\";\nimport { Dispatch } from \"redux\";\nimport { getFocus } from \"./selectors\";\n\nexport const updateFocus = (focus: UserFocus) => {\n\treturn { type: t.FOCUS_UPDATE, payload: focus };\n};\n\nexport const tryUpdateFocus = (focus: UserFocus) => {\n\treturn (dispatch: Dispatch, getState: Function) => {\n\t\tif (getFocus(getState()) !== focus) dispatch(updateFocus(focus));\n\t};\n};\n\nexport const toggleContextMenuFocus = () => {\n\treturn (dispatch: Dispatch, getState: Function) => {\n\t\tconst currentFocus = getFocus(getState());\n\t\tswitch (currentFocus) {\n\t\t\tcase \"CONTEXT_MENU\":\n\t\t\t\tdispatch(updateFocus(\"SELECTION\"));\n\t\t\t\tbreak;\n\t\t\tcase \"SELECTION\":\n\t\t\t\tdispatch(updateFocus(\"CONTEXT_MENU\"));\n\t\t\t\tbreak;\n\t\t}\n\t};\n};\n\nexport const updateDisplayFocus = (focus: DisplayFocus) => {\n\treturn { type: t.DISPLAY_FOCUS_UPDATE, payload: focus };\n};\n","import { FocusState, UserFocus, DisplayFocus } from \"./model\";\nimport * as t from \"./actionTypes\";\n\nconst initialState: FocusState = { userFocus: \"CONTROL\", displayFocus: \"ACTIVE_RIVER\" };\n\nconst focus = (state = initialState, { type, payload }: { type: string; payload: any }): FocusState => {\n\tswitch (type) {\n\t\tcase t.FOCUS_UPDATE:\n\t\t\treturn { ...state, userFocus: payload as UserFocus };\n\t\tcase t.DISPLAY_FOCUS_UPDATE:\n\t\t\treturn { ...state, displayFocus: payload as DisplayFocus };\n\n\t\tdefault:\n\t\t\treturn state;\n\t}\n};\n\nexport default focus;\n","import * as actions from \"./actions\";\nimport * as constants from \"./constants\";\nimport reducer from \"./reducer\";\nimport * as selectors from \"./selectors\";\nimport * as actionTypes from \"./actionTypes\";\n\nexport default { actions, constants, reducer, selectors, actionTypes };\n","export const NAME = \"displayData\";\n","import { NAME } from \"./constants\";\n\nexport const PDF_UPLOADED = NAME + \"/PDF_UPLOADED\";\nexport const MATERIAL_LOADED = NAME + \"/MATERIAL_LOADED\";\nexport const DISPLAY_STATUS = NAME + \"/DISPLAY_STATUS\";\nexport const PAGE_UPDATE = NAME + \"/PAGE_UPDATE\";\nexport const ZOOM_QUEUE = NAME + \"/ZOOM_QUEUE\";\nexport const MATERIAL_DATA = NAME + \"/MATERIAL_DATA\";\n","import { createSelector } from \"reselect\";\nimport { DisplayData, MaterialData, MaterialGroupData } from \"./model\";\nimport { NAME } from \"./constants\";\n\nexport const getAll = (state: any) => state[NAME];\n\nexport const getPDF = createSelector(getAll, (state: DisplayData) => {\n\treturn { pdf: state.pdf };\n});\n\nexport const getRenderCritialData = createSelector(getAll, (state: DisplayData) => {\n\treturn {\n\t\tpdf: state.pdf,\n\t\tcurrentPage: state.currentPage,\n\t\tdocumentRef: state.documentRef,\n\t};\n});\n\nexport const getTotalPages = createSelector(getAll, (state: DisplayData) => state.totalPages);\n\nexport const getCurrentPage = createSelector(getAll, (state: DisplayData) => state.currentPage);\n\nexport const getPageControlData = createSelector(\n\tgetTotalPages,\n\tgetCurrentPage,\n\t(totalPages: number | undefined, currentPage: number) => {\n\t\treturn { currentPage, totalPages };\n\t}\n);\n\nexport const getDocumentRef = createSelector(getAll, (state: DisplayData) => state.documentRef);\n\nexport const getMaterialData = createSelector(getAll, (state: DisplayData) => state.materialData);\n\nexport const getTimeStamp = createSelector(getMaterialData, (state: MaterialData) => state.materialDataTimeStamp);\n\nexport const getMaterialSpans = createSelector(\n\tgetMaterialData as (state: any) => MaterialGroupData,\n\t(state: MaterialGroupData) => state.materialSpans\n);\n\nexport const getSpanIndex = (state: any, span: HTMLSpanElement) => {\n\tconst spans = getMaterialSpans(state);\n\treturn spans.indexOf(span);\n};\n\nexport const getMaterialBoundingRects = createSelector(\n\tgetMaterialData as (state: any) => MaterialGroupData,\n\t(state: MaterialGroupData) => state.materialBoundingRects\n);\n\nexport const getDataExists = createSelector(getTimeStamp, (timestamp) => timestamp > 0);\n\nexport const getDisplayStatus = createSelector(getAll, (state: DisplayData) => state.displayStatus);\n\nexport const displayStatusIsShow = createSelector(getDisplayStatus, (status) => status === \"SHOW\");\n\nexport const getZoomQueue = createSelector(getAll, (state: DisplayData) => state.zoomQueue);\n","export const incrementer = () => {\n\tlet counter = 0;\n\treturn () => {\n\t\tconst curCounter = counter;\n\t\tcounter++;\n\t\treturn curCounter;\n\t};\n};\n","export const splitExpandedSpans = (expandedSpans: ExpandedSpan[]) => {\n\tconst spans = [];\n\tconst boundingRects = [];\n\n\tfor (const exSpan of expandedSpans) {\n\t\tspans.push(exSpan.span);\n\t\tboundingRects.push(exSpan.rect);\n\t}\n\n\treturn { spans, boundingRects };\n};\n\nexport const sortExpandedSpansAccordingToX = (expandedSpans: ExpandedSpan[]) =>\n\texpandedSpans.sort((exSpan, exSpan2) => exSpan.rect.x - exSpan2.rect.x);\n\nexport const sortExpandedSpansAccordingToY = (expandedSpans: ExpandedSpan[]) =>\n\texpandedSpans.sort((exSpan, exSpan2) => exSpan.rect.y - exSpan2.rect.y);\n\ntype ExpandedSpan = { span: HTMLSpanElement; rect: DOMRect };\n\nexport const expandSpans = (spans: HTMLSpanElement[]) => spans.map(expandSpan);\n\nconst expandSpan = (span: HTMLSpanElement): ExpandedSpan => {\n\treturn { span, rect: span.getBoundingClientRect() };\n};\n","import { MaterialGroupData } from \"../model\";\nimport { expandSpans, sortExpandedSpansAccordingToY, splitExpandedSpans } from \"./span\";\n\nexport const materialData = (container: HTMLDivElement): MaterialGroupData | null => {\n\t// assumes all spans inside the document are relevant (potentially multiple pages)\n\tconst startingSpans = Array.from(container.querySelectorAll(\"span\"));\n\tif (startingSpans.length === 0) return null;\n\n\tconst { spans, boundingRects } = splitExpandedSpans(sortExpandedSpansAccordingToY(expandSpans(startingSpans)));\n\n\treturn {\n\t\tmaterialSpans: spans,\n\t\tmaterialBoundingRects: boundingRects,\n\t};\n};\n","import { ChangeEvent, RefObject } from \"react\";\nimport { Dispatch } from \"redux\";\nimport * as t from \"./actionTypes\";\nimport { PageMove, MaterialData } from \"./model\";\nimport { getPageControlData, getDisplayStatus, getZoomQueue, getTimeStamp, getMaterialSpans } from \"./selectors\";\nimport { incrementer } from \"../../shared/utils\";\nimport { materialData } from \"./services/materialData\";\n\nexport const materialUploaded = (event: ChangeEvent<HTMLInputElement>) => {\n\treturn (dispatch: Dispatch) => {\n\t\tconst files = event.target.files;\n\t\tconst pdf = files ? files[0] : null;\n\t\tif (pdf) dispatch({ type: t.PDF_UPLOADED, payload: pdf });\n\t};\n};\n\nexport const materialLoaded = (totalPages: number) => {\n\treturn { type: t.MATERIAL_LOADED, payload: totalPages };\n};\n\nexport const tryInterval = (tries: number, ms: number, func: () => boolean) => {\n\tconst increment = incrementer();\n\tconst timeout = setInterval(() => {\n\t\tif (increment() > tries) {\n\t\t\tclearInterval(timeout);\n\t\t\treturn;\n\t\t}\n\n\t\tif (func()) clearInterval(timeout);\n\t}, ms);\n};\n\n// text-layer is not really guaranteed to be rendered on render \"success\",\n// so we use this ugly \"try ten times\" approach\nexport function captureMaterialData(documentRef: RefObject<any>) {\n\treturn (dispatch: any, getState: Function) => {\n\t\tconst state = getState();\n\t\tconst container = documentRef.current;\n\t\tif (container) {\n\t\t\t// TODO-NICE: still possibility of race-condition,\n\n\t\t\tconst startTime = Date.now();\n\n\t\t\t// try once before going into intervals (most times once should work)\n\t\t\tconst curMaterialGroupData = materialData(container as HTMLDivElement);\n\t\t\tif (curMaterialGroupData && getTimeStamp(state) < startTime) {\n\t\t\t\tconst payload: MaterialData = {\n\t\t\t\t\t...curMaterialGroupData,\n\t\t\t\t\tmaterialDataTimeStamp: startTime,\n\t\t\t\t};\n\t\t\t\tdispatch({ type: t.MATERIAL_DATA, payload });\n\t\t\t\tdispatch(emptyZoomQueue());\n\t\t\t} else {\n\t\t\t\ttryInterval(10, 20, () => {\n\t\t\t\t\tconst curMaterialGroupData = materialData(container as HTMLDivElement);\n\t\t\t\t\tif (curMaterialGroupData && getTimeStamp(getState()) < startTime) {\n\t\t\t\t\t\tconst payload: MaterialData = {\n\t\t\t\t\t\t\t...curMaterialGroupData,\n\t\t\t\t\t\t\tmaterialDataTimeStamp: startTime,\n\t\t\t\t\t\t};\n\t\t\t\t\t\tdispatch({ type: t.MATERIAL_DATA, payload });\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t}\n\t\t\t\t\treturn false;\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t};\n}\n\n// assumes outside validation/correction\nexport const setPage = (page: number) => {\n\treturn { type: t.PAGE_UPDATE, payload: page };\n};\n\nconst pageCorrections = {\n\tADD: (newPage: number, totalPages: number) => (newPage === totalPages + 1 ? 1 : newPage),\n\tREMOVE: (newPage: number, totalPages: number) => (newPage === 0 ? totalPages : newPage),\n};\n\n//TODO-PERF: maybe hide all rendered pages but not shown instead of re-rendering for faster switching?\nexport const movePage = (type: PageMove) => {\n\treturn (dispatch: Dispatch, getState: Function) => {\n\t\tconst { currentPage, totalPages } = getPageControlData(getState());\n\t\tif (totalPages) {\n\t\t\tswitch (type) {\n\t\t\t\tcase \"NEXT\":\n\t\t\t\t\tdispatch({ type: t.PAGE_UPDATE, payload: pageCorrections[\"ADD\"](currentPage + 1, totalPages) });\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"PREVIOUS\":\n\t\t\t\t\tdispatch({ type: t.PAGE_UPDATE, payload: pageCorrections[\"REMOVE\"](currentPage - 1, totalPages) });\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t};\n};\nexport const nextPage = () => movePage(\"NEXT\");\nexport const previousPage = () => movePage(\"PREVIOUS\");\n\nexport const toggleDisplayState = () => {\n\treturn (dispatch: Dispatch, getState: Function) => {\n\t\tconst displayState = getDisplayStatus(getState()) === \"SHOW\" ? \"HIDE\" : \"SHOW\";\n\n\t\tdispatch({ type: t.DISPLAY_STATUS, payload: displayState });\n\t};\n};\n\nexport const setZoomQueue = (spanIndex: number | null) => {\n\treturn { type: t.ZOOM_QUEUE, payload: spanIndex };\n};\n\nexport const zoomToCardOrigin = (spanIndex: number, page: number) => {\n\treturn (dispatch: Dispatch) => {\n\t\tdispatch(setPage(page));\n\t\tdispatch(setZoomQueue(spanIndex));\n\t};\n};\n\nexport const emptyZoomQueue = () => {\n\treturn (dispatch: Dispatch, getState: Function) => {\n\t\tconst state = getState();\n\t\tconst spanIndex = getZoomQueue(state);\n\t\tif (spanIndex) {\n\t\t\tconst originSpan = getMaterialSpans(state)[spanIndex];\n\t\t\toriginSpan.focus();\n\t\t\toriginSpan.scrollIntoView({ behavior: \"smooth\", block: \"center\", inline: \"center\" });\n\n\t\t\tdispatch(setZoomQueue(null));\n\t\t}\n\t};\n};\n","import React from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { IconButton } from \"@material-ui/core\";\nimport ArrowForwardIosIcon from \"@material-ui/icons/ArrowForwardIos\";\nimport ArrowBackIosIcon from \"@material-ui/icons/ArrowBackIos\";\nimport { nextPage, previousPage } from \"../actions\";\n\nexport const PreviousButton = () => {\n\tconst dispatch = useDispatch();\n\treturn (\n\t\t<IconButton\n\t\t\ttype=\"button\"\n\t\t\tonClick={() => {\n\t\t\t\tdispatch(previousPage());\n\t\t\t}}\n\t\t>\n\t\t\t<ArrowBackIosIcon></ArrowBackIosIcon>\n\t\t</IconButton>\n\t);\n};\n\nexport const NextButton = () => {\n\tconst dispatch = useDispatch();\n\treturn (\n\t\t<IconButton\n\t\t\ttype=\"button\"\n\t\t\tonClick={() => {\n\t\t\t\tdispatch(nextPage());\n\t\t\t}}\n\t\t>\n\t\t\t<ArrowForwardIosIcon></ArrowForwardIosIcon>\n\t\t</IconButton>\n\t);\n};\n","import { useState } from \"react\";\nimport DescriptionOutlinedIcon from \"@material-ui/icons/DescriptionOutlined\";\nimport DescriptionTwoToneIcon from \"@material-ui/icons/DescriptionTwoTone\";\nimport React from \"react\";\nimport { IconButton } from \"@material-ui/core\";\nimport { useDispatch } from \"react-redux\";\nimport { toggleDisplayState } from \"../actions\";\n\nexport const ShowMaterialButton = () => {\n\tconst [outlined, setOutlined] = useState(true);\n\tconst dispatch = useDispatch();\n\n\treturn (\n\t\t<IconButton\n\t\t\ttype=\"button\"\n\t\t\tonClick={() => {\n\t\t\t\tdispatch(toggleDisplayState());\n\t\t\t\tsetOutlined(!outlined);\n\t\t\t}}\n\t\t>\n\t\t\t{outlined ? (\n\t\t\t\t<DescriptionOutlinedIcon></DescriptionOutlinedIcon>\n\t\t\t) : (\n\t\t\t\t<DescriptionTwoToneIcon></DescriptionTwoToneIcon>\n\t\t\t)}\n\t\t</IconButton>\n\t);\n};\n","import React, { useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Typography, TextField } from \"@material-ui/core\";\nimport { setPage } from \"../../actions\";\nimport { getPageControlData } from \"../../selectors\";\n\nconst nonDigitRegEx = /(\\D)/;\n\nexport const validatePageChoice = (possiblePage: string, totalPages: number) => {\n\tif (possiblePage === \"\" || possiblePage.trim().match(nonDigitRegEx) !== null) return false;\n\n\tconst asInt = parseInt(possiblePage);\n\tif (asInt < 1 || totalPages < asInt) return false;\n\n\treturn true;\n};\n\nexport const PageChooser = () => {\n\tconst dispatch = useDispatch();\n\t// parent only renders this component if these values exist\n\tconst { currentPage, totalPages }: { currentPage?: number; totalPages?: number } = useSelector(getPageControlData);\n\n\tconst [state, setState] = useState({\n\t\terror: false,\n\t\tvalue: currentPage?.toString(),\n\t\tuserInput: currentPage?.toString(),\n\t});\n\n\t// with this we can trigger a re-render onChange,\n\t// while making sure that if a new currentPage arrives, we reset the component\n\tif (state.value !== currentPage.toString()) {\n\t\tsetState({ error: false, value: currentPage.toString(), userInput: currentPage.toString() });\n\t}\n\n\treturn (\n\t\t<Typography variant=\"h6\">\n\t\t\t<TextField\n\t\t\t\ttype=\"text\"\n\t\t\t\tvariant=\"filled\"\n\t\t\t\tvalue={state.userInput}\n\t\t\t\tonKeyDown={(event) => {\n\t\t\t\t\tif (event.key === \"Enter\") {\n\t\t\t\t\t\tevent.preventDefault();\n\t\t\t\t\t\tconst submittedValue = (event.target as HTMLFormElement).value;\n\t\t\t\t\t\tif (!state.error) {\n\t\t\t\t\t\t\tdispatch(setPage(parseInt(submittedValue)));\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}}\n\t\t\t\tonChange={(event) => {\n\t\t\t\t\tconst submittedValue = (event.target as HTMLTextAreaElement).value;\n\t\t\t\t\tif (validatePageChoice(submittedValue, totalPages as number)) {\n\t\t\t\t\t\tsetState({ ...state, error: false, userInput: submittedValue });\n\t\t\t\t\t} else {\n\t\t\t\t\t\tsetState({ ...state, error: true, userInput: submittedValue });\n\t\t\t\t\t}\n\t\t\t\t}}\n\t\t\t\terror={state.error}\n\t\t\t/>\n\t\t\tof {totalPages}\n\t\t</Typography>\n\t);\n};\n","import \"./PDFDocument.css\";\nimport \"./AnnotationLayer.css\";\nimport React, { RefObject } from \"react\";\nimport { pdfjs, Document, Page } from \"react-pdf\";\nimport { connect, useDispatch } from \"react-redux\";\nimport { materialLoaded, setPage, captureMaterialData } from \"../../actions\";\nimport { getRenderCritialData } from \"../../selectors\";\npdfjs.GlobalWorkerOptions.workerSrc = `//cdnjs.cloudflare.com/ajax/libs/pdf.js/${pdfjs.version}/pdf.worker.js`;\n\nfunction removeTextLayerOffset() {\n\tconst textLayers = document.querySelectorAll(\".react-pdf__Page__textContent\");\n\ttextLayers.forEach((layer) => {\n\t\tconst { style }: any = layer;\n\t\tstyle.top = \"0\";\n\t\tstyle.left = \"0\";\n\t\tstyle.transform = \"\";\n\t});\n}\n\nconst options = {\n\tcMapUrl: \"cmaps/\",\n\tcMapPacked: true,\n};\n\nfunction PDFDocument({\n\tparentSize,\n\tpdf,\n\tcurrentPage,\n\tmaterialLoaded,\n\tcaptureMaterialData,\n\tdocumentRef,\n}: {\n\tparentSize: any;\n\tpdf: File | undefined;\n\tcurrentPage: number;\n\tmaterialLoaded: (numPages: number) => void;\n\tcaptureMaterialData: Function;\n\tdocumentRef: RefObject<any>;\n}) {\n\tconst dispatch = useDispatch();\n\treturn (\n\t\t<Document\n\t\t\tfile={pdf}\n\t\t\toptions={options}\n\t\t\tonLoadSuccess={({ numPages }) => {\n\t\t\t\tmaterialLoaded(numPages);\n\t\t\t}}\n\t\t\tinputRef={documentRef}\n\t\t\tonItemClick={({ pageNumber }) => {\n\t\t\t\tdispatch(setPage(parseInt(pageNumber)));\n\t\t\t}}\n\t\t>\n\t\t\t{pdf && (\n\t\t\t\t<Page\n\t\t\t\t\twidth={parentSize.width}\n\t\t\t\t\tpageNumber={currentPage}\n\t\t\t\t\tonRenderSuccess={() => {\n\t\t\t\t\t\tremoveTextLayerOffset();\n\t\t\t\t\t\tcaptureMaterialData(documentRef);\n\t\t\t\t\t}}\n\t\t\t\t/>\n\t\t\t)}\n\t\t</Document>\n\t);\n}\n\nexport const PDFDocumentContainer = connect(getRenderCritialData, {\n\tmaterialLoaded,\n\tcaptureMaterialData,\n})(PDFDocument);\n","import { connect } from \"react-redux\";\nimport React, { ChangeEvent } from \"react\";\nimport { materialUploaded } from \"../actions\";\nimport { getPDF } from \"../selectors\";\n\nfunction PDFUpload({\n\tpdf,\n\tonUpload,\n}: {\n\tpdf: File | undefined;\n\tonUpload: (event: ChangeEvent<HTMLInputElement>) => void;\n}) {\n\treturn pdf ? null : <input onChange={onUpload} type=\"file\" accept=\".pdf\" />;\n}\n\nexport const PDFUploadContainer = connect(getPDF, { onUpload: materialUploaded })(PDFUpload);\n","import React, { useState } from \"react\";\nimport Grid from \"@material-ui/core/Grid\";\nimport { withSize } from \"react-sizeme\";\nimport Paper from \"@material-ui/core/Paper\";\nimport focus from \"../../focus\";\nimport { useDispatch } from \"react-redux\";\nimport { PDFDocumentContainer } from \"./PDFDocument/PDFDocument\";\nimport { PDFUploadContainer } from \"./PDFUpload\";\n\nfunction MaterialDisplayColumn({ size, hidden }: any) {\n\tconst dispatch = useDispatch();\n\n\tconst [elevation, setElevation] = useState(3);\n\n\treturn (\n\t\t<Grid\n\t\t\titem\n\t\t\tstyle={{\n\t\t\t\twidth: \"60%\",\n\t\t\t}}\n\t\t\tonMouseEnter={() => {\n\t\t\t\tdispatch(focus.actions.tryUpdateFocus(\"SELECTION\"));\n\t\t\t\tsetElevation(20);\n\t\t\t}}\n\t\t\tonMouseLeave={() => {\n\t\t\t\tsetElevation(3);\n\t\t\t}}\n\t\t\thidden={hidden}\n\t\t>\n\t\t\t<Paper elevation={elevation}>\n\t\t\t\t<PDFDocumentContainer parentSize={size}></PDFDocumentContainer>\n\t\t\t\t<PDFUploadContainer></PDFUploadContainer>\n\t\t\t</Paper>\n\t\t</Grid>\n\t);\n}\n\nexport const MaterialDisplayColumnWithSize = withSize({ monitorHeight: true, noPlaceholder: true })(\n\tMaterialDisplayColumn\n);\n","import * as t from \"./actionTypes\";\nimport type { DisplayData, DisplayStatus, MaterialGroupData } from \"./model\";\nimport { createRef } from \"react\";\n\nconst initialState: DisplayData = {\n\tdisplayStatus: \"SHOW\",\n\tcurrentPage: 1,\n\tdocumentRef: createRef(),\n\tpageSpans: {},\n\tzoomQueue: null,\n\tmaterialData: { materialDataTimeStamp: -Infinity },\n};\n\nconst displayData = (state = initialState, { type, payload }: { type: string; payload: any }): DisplayData => {\n\tswitch (type) {\n\t\tcase t.PDF_UPLOADED:\n\t\t\treturn { ...state, pdf: payload as File };\n\t\tcase t.MATERIAL_LOADED:\n\t\t\treturn { ...state, totalPages: payload as number };\n\t\tcase t.PAGE_UPDATE:\n\t\t\treturn { ...state, currentPage: payload as number };\n\t\tcase t.DISPLAY_STATUS:\n\t\t\treturn { ...state, displayStatus: payload as DisplayStatus };\n\t\tcase t.MATERIAL_DATA:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tmaterialData: payload,\n\t\t\t\tpageSpans: { ...state.pageSpans, [state.currentPage]: (payload as MaterialGroupData).materialSpans.length - 1 },\n\t\t\t};\n\t\tdefault:\n\t\t\treturn state;\n\t}\n};\n\nexport default displayData;\n","import * as actions from \"./actions\";\nimport * as actionTypes from \"./actionTypes\";\nimport * as components from \"./components\";\nimport * as constants from \"./constants\";\nimport reducer from \"./reducer\";\nimport * as selectors from \"./selectors\";\n\nexport default { actions, actionTypes, components, constants, reducer, selectors };\n","export const NAME = \"creationData\";\n","import { NAME } from \"./constants\";\n\nexport const TOGGLE_CONTEXT_MENU = NAME + \"/TOGGLE_CONTEXT_MENU\";\nexport const CLOSE_CONTEXT_MENU = NAME + \"/CLOSE_CONTEXT_MENU\";\nexport const OPEN_CONTEXT_MENU = NAME + \"/OPEN_CONTEXT_MENU\";\nexport const SELECTED_STRING = NAME + \"/SELECTED_STRING\";\nexport const SELECTED_PARENT = NAME + \"/SELECTED_PARENT\";\nexport const SELECTION_POSITION = NAME + \"/SELECITON_POSITION\";\n","import { UpdateType, CardPayloadConfig, CreationType, QACardContent, CardType } from \"../model\";\n\ntype updateContentStrFunction = (oldStr: string, newStr: string) => string;\n\ntype partialUpdateContentStrFunction = (oldStr: string) => string;\n\nconst updateContentStrFunctions: { [key in UpdateType]: updateContentStrFunction } = {\n\tREPLACE: (_: string, newStr: string) => newStr,\n\tAPPEND: (oldStr: string, newStr: string) => oldStr + newStr,\n};\n\nconst createPartialUpdateContentStrFunction = (updateType: UpdateType, newStr: string) => (oldStr: string) =>\n\tupdateContentStrFunctions[updateType](oldStr, newStr);\n\ntype creationFunction = (\n\toldConfig: CardPayloadConfig,\n\tpartialUpdateFunction: partialUpdateContentStrFunction\n) => CardPayloadConfig;\n\nconst defaultCreationFunction: creationFunction = (oldConfig, partialUpdateFunction) => {\n\treturn { ...oldConfig, content: partialUpdateFunction(oldConfig.content as string) };\n};\n\nconst creationFunctions: {\n\t[key in CreationType]: creationFunction;\n} = {\n\tNOTE: defaultCreationFunction,\n\tQ: (oldConfig, partialUpdateFunction) => {\n\t\tconst content = oldConfig.content as QACardContent;\n\t\treturn { ...oldConfig, content: { ...content, q: partialUpdateFunction(content.q) } };\n\t},\n\tA: (oldConfig, partialUpdateFunction) => {\n\t\tconst content = oldConfig.content as QACardContent;\n\t\treturn { ...oldConfig, content: { ...content, a: partialUpdateFunction(content.a) } };\n\t},\n};\n\nexport const contentStringToConfig = (\n\tcontentStr: string,\n\ttype: CardType,\n\tcreationType: CreationType,\n\tupdateType: UpdateType,\n\tcurrentCard?: CardPayloadConfig\n): CardPayloadConfig => {\n\tconst partialUpdateFunction = createPartialUpdateContentStrFunction(updateType, contentStr);\n\tconst isCardUpdate = !!currentCard;\n\treturn isCardUpdate\n\t\t? creationFunctions[creationType](currentCard as CardPayloadConfig, partialUpdateFunction)\n\t\t: creationFunctions[creationType]({ type, content: type === \"Q-A\" ? { q: \"\", a: \"\" } : \"\" }, partialUpdateFunction);\n};\n","export const NAME = \"cards\";\n","import { NAME } from \"./constants\";\n\nexport const CARD_UPDATE = NAME + \"/CARD_UPDATE\";\nexport const CARD_PUSH = NAME + \"/CARD_PUSH\";\nexport const CARD_REMOVE = NAME + \"/CARD_REMOVE\";\nexport const CARD_GOAL = NAME + \"/CARD_GOAL\";\nexport const CARD_SOURCE = NAME + \"/CARD_SOURCE\";\n","import { createSelector } from \"reselect\";\nimport { CardsState } from \"./model\";\n\nexport const getAll = (state: any) => state.cards as CardsState;\n\nexport const getLastCardIDNumber = createSelector(getAll, (state) => state.lastCardIDNumber);\n\nexport const getCards = createSelector(getAll, (state: CardsState) => state.cards);\n\nexport const getGoalCard = createSelector(getAll, (state: CardsState) => state.goalCard);\n\nexport const getSourceCard = createSelector(getAll, (state: CardsState) => state.sourceCard);\n","import { CardPayload, FinalizedCardPayload, CreationType, UpdateType, CardType, CardOrigin, CardConfig } from \"./model\";\nimport * as t from \"./actionTypes\";\nimport { Dispatch } from \"redux\";\nimport { getLastCardIDNumber, getCards, getSourceCard } from \"./selectors\";\nimport { contentStringToConfig } from \"./services/config\";\n\nconst createCardID = (lastCardIDNumber: number) => (lastCardIDNumber + 1).toString();\n\nexport const cardPush = (cardPayload: CardPayload) => {\n\treturn (dispatch: Dispatch, getState: Function) => {\n\t\tdispatch({\n\t\t\ttype: t.CARD_PUSH,\n\t\t\tpayload: {\n\t\t\t\t...cardPayload,\n\t\t\t\tcard: { ...cardPayload.card, cardID: createCardID(getLastCardIDNumber(getState())) },\n\t\t\t} as FinalizedCardPayload,\n\t\t});\n\t};\n};\n\nexport const cardUpdate = (card: CardPayload) => {\n\treturn { type: t.CARD_UPDATE, payload: card };\n};\n\nexport const updateCardContent = (\n\tcontentString: string,\n\tcardID: string,\n\tcreationType: CreationType,\n\tupdateType: UpdateType,\n\torigin?: CardOrigin\n) => {\n\treturn (dispatch: Dispatch, getState: Function) => {\n\t\tconst state = getState();\n\n\t\tconst currentCard = getCards(state)[cardID as string];\n\t\tconst config = contentStringToConfig(contentString, currentCard.type, creationType, updateType, currentCard);\n\n\t\tdispatch(\n\t\t\tcardUpdate({\n\t\t\t\tcard: { ...config, origin },\n\t\t\t})\n\t\t);\n\t};\n};\n\nexport const pushCardContent = (\n\tcontentString: string,\n\tcreationType: CreationType,\n\tupdateType: UpdateType,\n\ttype: CardType,\n\torigin?: CardOrigin\n) => {\n\tconst config = contentStringToConfig(contentString, type, creationType, updateType);\n\n\treturn cardPush({ card: { ...config, origin } });\n};\n\nexport const removeCard = (cardID: string) => {\n\treturn { type: t.CARD_REMOVE, payload: cardID };\n};\n\nexport const setGoalCard = (cardConfig: CardConfig, creationType: CreationType) => {\n\treturn { type: t.CARD_GOAL, payload: { ...cardConfig, creationType } };\n};\n\nexport const resetGoalCard = () => {\n\treturn { type: t.CARD_GOAL, payload: null };\n};\n\nexport const setSourceCard = (x: number, y: number, sourceField: CreationType, origin?: CardOrigin) => {\n\treturn { type: t.CARD_SOURCE, payload: { origin, x, y, sourceField } };\n};\n\nexport const resetSourceCard = () => {\n\treturn { type: t.CARD_SOURCE, payload: null };\n};\n\nexport const tryResetSourceCard = () => {\n\treturn (dispatch: Dispatch, getState: Function) => {\n\t\tconst sourceCardExits = getSourceCard(getState()) !== null;\n\t\tif (sourceCardExits) dispatch(resetSourceCard());\n\t};\n};\n","import * as t from \"./actionTypes\";\nimport { CardsState, FinalizedCardPayload } from \"./model\";\n\nconst intialState: CardsState = {\n\tcards: {\n\t\t\"0\": {\n\t\t\tcardID: \"0\",\n\t\t\ttype: \"Q-A\",\n\t\t\tcontent: { q: \"Was ist der Sinn des Lebens?\", a: \"42\" },\n\t\t},\n\t\t\"1\": {\n\t\t\tcardID: \"1\",\n\t\t\ttype: \"Q-A\",\n\t\t\tcontent: { q: \"Welches Layout macht mehr Sinn?\", a: \"??\" },\n\t\t},\n\t\t\"2\": { cardID: \"2\", type: \"Note\", content: \"Note here\" },\n\t},\n\tlastCardIDNumber: 2,\n\tgoalCard: null,\n\tsourceCard: null,\n};\n\nconst removeCard = (state: CardsState, cardID: string) => {\n\tconst cards = { ...state.cards };\n\n\t// we do not reset the ID counter\n\n\tdelete cards[cardID];\n\n\treturn { ...state, cards };\n};\n\nconst cards = (state = intialState, { type, payload }: { type: string; payload?: any }) => {\n\tlet cardID;\n\tlet cardObj;\n\tswitch (type) {\n\t\tcase t.CARD_PUSH:\n\t\t\tconst lastCardIDNumber = state.lastCardIDNumber + 1;\n\n\t\t\tcardObj = { ...state.cards };\n\t\t\tcardObj[(payload as FinalizedCardPayload).card.cardID] = (payload as FinalizedCardPayload).card;\n\n\t\t\treturn { ...state, cards: cardObj, lastCardIDNumber };\n\t\tcase t.CARD_UPDATE:\n\t\t\tcardID = (payload as FinalizedCardPayload).card.cardID as string;\n\t\t\tcardObj = { ...state.cards };\n\t\t\tcardObj[cardID] = (payload as FinalizedCardPayload).card;\n\n\t\t\treturn { ...state, cards: cardObj };\n\t\tcase t.CARD_REMOVE:\n\t\t\treturn removeCard(state, payload as string);\n\t\tcase t.CARD_GOAL:\n\t\t\treturn { ...state, goalCard: payload };\n\t\tcase t.CARD_SOURCE:\n\t\t\treturn { ...state, sourceCard: payload };\n\t\tdefault:\n\t\t\treturn state;\n\t}\n};\n\nexport default cards;\n","import * as services from \"./services\";\nimport * as constants from \"./constants\";\nimport * as actionTypes from \"./actionTypes\";\nimport * as actions from \"./actions\";\nimport * as selectors from \"./selectors\";\nimport reducer from \"./reducer\";\n\nexport default { services, constants, actionTypes, actions, reducer, selectors };\n","export const NAME = \"cardRiverState\";\n","import { NAME } from \"./constants\";\nimport { createSelector } from \"reselect\";\nimport { CardRiverState } from \"./model\";\nimport cards from \"../cards\";\n\nexport const getAll = (state: any) => state[NAME];\n\nexport const getRiverMakeUps = createSelector(getAll, (state: CardRiverState) => state.riverMakeUps);\n\nexport const getActiveRiverMakeUpID = createSelector(getAll, (state: CardRiverState) => state.activeRiverMakeUpID);\n\nexport const getPushToRiver = createSelector(getAll, (state: CardRiverState) => state.pushToRiverID);\n\nexport const getPushToRiverMakeUp = createSelector(getRiverMakeUps, getPushToRiver, (makeUps, id) => makeUps[id]);\n\nexport const getActiveRiverMakeUp = createSelector(\n\tgetRiverMakeUps,\n\tgetActiveRiverMakeUpID,\n\t(makeUps, id) => makeUps[id]\n);\n\nexport const getPushToRiverCardIDs = createSelector(getPushToRiverMakeUp, (makeUp) => makeUp.cardIDs);\n\nexport const getPushToRiverCards = createSelector(\n\tgetPushToRiverCardIDs,\n\tcards.selectors.getCards,\n\t(makeUpCardIDs, cards) => makeUpCardIDs.map((id) => cards[id])\n);\n\n//TODO-NICE: rename active=page-wise or smth like that for clarity\nexport const getActiveRiverCardIDs = createSelector(getActiveRiverMakeUp, (makeUp) => makeUp.cardIDs);\n\nexport const getActiveRiverCards = createSelector(\n\tgetActiveRiverCardIDs,\n\tcards.selectors.getCards,\n\t(makeUpCardIDs, cards) => makeUpCardIDs.map((id) => cards[id])\n);\n\nexport const getRiverShowState = createSelector(getAll, (state: CardRiverState) => state.riverShowState);\n\nexport const riverShowStateIsShow = createSelector(getRiverShowState, (state) => state === \"SHOW\");\n\nexport const getHoveredCardData = createSelector(getAll, (state: CardRiverState) => {\n\treturn { id: state.hoveredCard, field: state.hoveredField };\n});\n","import React, { useState } from \"react\";\nimport { TextField, TextFieldProps } from \"@material-ui/core\";\nimport focus from \"../../../focus\";\nimport { useDispatch } from \"react-redux\";\n\nexport const HybridCardField = ({\n\tstoreValue = \"\",\n\tsaveChanges,\n\tstyle,\n\t...rest\n}: {\n\tstoreValue?: string;\n\tsaveChanges: (value: string) => void;\n\tstyle: any;\n} & TextFieldProps) => {\n\tconst dispatch = useDispatch();\n\tconst [state, setState] = useState({ storeValue, mutableValue: storeValue });\n\n\t// reset if new storeValue, otherwise keep user-mutated value\n\tif (state.storeValue !== storeValue) {\n\t\tsetState({ storeValue, mutableValue: storeValue });\n\t}\n\n\t// need the onChange-pattern, because we want to be able to pre-fill the field from the store\n\treturn (\n\t\t<TextField\n\t\t\tonMouseEnter={() => {\n\t\t\t\tdispatch(focus.actions.tryUpdateFocus(\"EDITOR\"));\n\t\t\t}}\n\t\t\tmultiline\n\t\t\tvariant=\"filled\"\n\t\t\tvalue={state.mutableValue}\n\t\t\tonChange={(event) => {\n\t\t\t\tconst submittedValue = (event.target as HTMLTextAreaElement).value;\n\t\t\t\tsetState({ ...state, mutableValue: submittedValue });\n\t\t\t}}\n\t\t\tonBlur={(event: any) => {\n\t\t\t\tsaveChanges(event.target.value);\n\t\t\t}}\n\t\t\tstyle={style}\n\t\t\t{...rest}\n\t\t></TextField>\n\t);\n};\n","import DeleteForeverIcon from \"@material-ui/icons/DeleteForever\";\nimport React from \"react\";\nimport { IconButton } from \"@material-ui/core\";\nimport { useDispatch } from \"react-redux\";\nimport cards from \"../../../../cards\";\nimport focus from \"../../../../focus\";\n\n//TODO-RC: Undo / Redo for Card-Deletions and also Card_Push and Card_Updates\n//TODO-RC: make confirmation overlap\n//TODO-NICE: use storybook for visual component testing\n\nexport const DeleteCardButton = ({ cardID }: { cardID: string }) => {\n\tconst dispatch = useDispatch();\n\treturn (\n\t\t<IconButton\n\t\t\ttype=\"button\"\n\t\t\tonClick={() => {\n\t\t\t\tdispatch(cards.actions.removeCard(cardID));\n\t\t\t}}\n\t\t\tonMouseEnter={() => {\n\t\t\t\tdispatch(focus.actions.tryUpdateFocus(\"EDITOR_CONTROL\"));\n\t\t\t}}\n\t\t>\n\t\t\t<DeleteForeverIcon></DeleteForeverIcon>\n\t\t</IconButton>\n\t);\n};\n","import FindInPageIcon from \"@material-ui/icons/FindInPage\";\nimport React from \"react\";\nimport { IconButton } from \"@material-ui/core\";\nimport { useDispatch } from \"react-redux\";\nimport display from \"../../../../display\";\nimport { SingleOrigin } from \"../../../../cards/model\";\nimport focus from \"../../../../focus\";\n\nexport const JumpToOriginButton = ({ cardOrigin }: { cardOrigin: SingleOrigin }) => {\n\tconst dispatch = useDispatch();\n\treturn (\n\t\t<IconButton\n\t\t\ttype=\"button\"\n\t\t\tonClick={() => {\n\t\t\t\tdispatch(focus.actions.updateDisplayFocus(\"ACTIVE_RIVER\"));\n\t\t\t\tdispatch(display.actions.zoomToCardOrigin(cardOrigin.spanIndex, cardOrigin.page));\n\t\t\t}}\n\t\t>\n\t\t\t<FindInPageIcon></FindInPageIcon>\n\t\t</IconButton>\n\t);\n};\n","import PanToolIcon from \"@material-ui/icons/PanTool\";\nimport PanToolOutlinedIcon from \"@material-ui/icons/PanToolOutlined\";\nimport React, { useState } from \"react\";\nimport { IconButton } from \"@material-ui/core\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { CardConfig, CreationType, GoalCard } from \"../../../../cards/model\";\nimport cards from \"../../../../cards\";\nimport focus from \"../../../../focus\";\n\nconst isGoalCard = (cardConfig: CardConfig, creationType: CreationType, goalCard: GoalCard) =>\n\tcardConfig.cardID === goalCard.cardID && creationType === goalCard.creationType;\n\nexport const GrabForFieldButton = ({\n\tcardConfig,\n\tcreationType,\n}: {\n\tcardConfig: CardConfig;\n\tcreationType: CreationType;\n}) => {\n\tconst dispatch = useDispatch();\n\tconst goalCard = useSelector(cards.selectors.getGoalCard);\n\tconst [outlined, setOutlined] = useState(true);\n\n\tif (goalCard) {\n\t\tconst isGoal = isGoalCard(cardConfig, creationType, goalCard);\n\t\tif (isGoal) {\n\t\t\tif (outlined) setOutlined(false);\n\t\t} else {\n\t\t\tif (!outlined) setOutlined(true);\n\t\t}\n\t} else {\n\t\tif (!outlined) setOutlined(true);\n\t}\n\n\treturn (\n\t\t<IconButton\n\t\t\ttype=\"button\"\n\t\t\tonMouseEnter={() => {\n\t\t\t\tdispatch(focus.actions.tryUpdateFocus(\"EDITOR_CONTROL\"));\n\t\t\t}}\n\t\t\tonClick={() => {\n\t\t\t\tif (outlined) {\n\t\t\t\t\tdispatch(cards.actions.setGoalCard(cardConfig, creationType));\n\t\t\t\t} else {\n\t\t\t\t\tdispatch(cards.actions.resetGoalCard());\n\t\t\t\t}\n\t\t\t}}\n\t\t>\n\t\t\t{outlined ? <PanToolOutlinedIcon></PanToolOutlinedIcon> : <PanToolIcon></PanToolIcon>}\n\t\t</IconButton>\n\t);\n};\n","import ExtensionIcon from \"@material-ui/icons/Extension\";\nimport React from \"react\";\nimport { IconButton } from \"@material-ui/core\";\nimport { useDispatch } from \"react-redux\";\nimport { CardOrigin, CreationType } from \"../../../../cards/model\";\nimport cards from \"../../../../cards\";\nimport focus from \"../../../../focus\";\n\n//TODO-NICE: make selection-dropable on buttons, so that they can be send to cards, make this the default instead of context-menu?\n// imagine: toolbar with new Note, new A, new Q | all the cards and you can drop off\n//TODO-NICE: delete extracted str in source\n\n//TODO-RC, bug: if text from the field was already extracted this just opens the menu\n\n// need this button: mouse-up in editor should not trigger context menu (cant select directly), because I cant delete selections then\nexport const ExtractFromFieldButton = ({\n\tcardOrigin,\n\tsourceField,\n}: {\n\tcardOrigin?: CardOrigin;\n\tsourceField: CreationType;\n}) => {\n\tconst dispatch = useDispatch();\n\n\treturn (\n\t\t<IconButton\n\t\t\ttype=\"button\"\n\t\t\tonMouseEnter={() => {\n\t\t\t\tdispatch(focus.actions.tryUpdateFocus(\"EDITOR_CONTROL\"));\n\t\t\t}}\n\t\t\tonClick={(event: any) => {\n\t\t\t\tdispatch(\n\t\t\t\t\tcards.actions.setSourceCard(event.clientX as number, event.clientY as number, sourceField, cardOrigin)\n\t\t\t\t);\n\t\t\t}}\n\t\t>\n\t\t\t<ExtensionIcon></ExtensionIcon>\n\t\t</IconButton>\n\t);\n};\n","import Grid from \"@material-ui/core/Grid\";\nimport React from \"react\";\nimport { HybridCardField } from \"./HybridCardField\";\nimport { CardConfig, QACardContent, NoteOrigin, SingleOrigin, QAOrigin } from \"../../../cards/model\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport cards from \"../../../cards\";\nimport { DeleteCardButton } from \"./Buttons/DeleteCardButton\";\nimport { JumpToOriginButton } from \"./Buttons/JumpToOriginButton\";\nimport { GrabForFieldButton } from \"./Buttons/GrabForFieldButton\";\nimport { ExtractFromFieldButton } from \"./Buttons/ExtractFromFieldButton\";\nimport { isNullOrUndefined } from \"util\";\nimport { getHoveredCardData } from \"../../selectors\";\n\n//TODO-RC: tooltips for all buttons, multiple languages?\n\n//TODO-RC: mouse-up in editor should not trigger context menu, because I cant delete selections then, better use the Pinsel-Idea for inside the card\n\n//TODO-RC: make full cards be not visible to the context menu by default (need to unmark them or sub-menu)\n\ntype CardProps = { config: CardConfig; riverID: string };\n\nconst borderStyle = { border: \"2px solid green\", borderRadius: \"4px\" };\n\n//TODO-RC: investigate if this hover-store approach is too slow, useRef instead?\n\nconst NoteCard = ({ config }: CardProps) => {\n\tconst dispatch = useDispatch();\n\tconst { id } = useSelector(getHoveredCardData);\n\tconst isHoveredCard = config.cardID === id;\n\n\treturn (\n\t\t<div style={isHoveredCard ? borderStyle : undefined}>\n\t\t\t<HybridCardField\n\t\t\t\tsaveChanges={(value) => {\n\t\t\t\t\tdispatch(cards.actions.updateCardContent(value, config.cardID, \"NOTE\", \"REPLACE\", config.origin));\n\t\t\t\t}}\n\t\t\t\tstoreValue={config.content as string}\n\t\t\t\tlabel=\"Note\"\n\t\t\t\tvariant=\"filled\"\n\t\t\t\tstyle={{ backgroundColor: \"#CBF3F0\" }}\n\t\t\t\tInputLabelProps={{ style: { color: \"#000000\" } }}\n\t\t\t></HybridCardField>\n\t\t\t<DeleteCardButton cardID={config.cardID}></DeleteCardButton>\n\t\t\t<GrabForFieldButton cardConfig={config} creationType=\"NOTE\"></GrabForFieldButton>\n\t\t\t<ExtractFromFieldButton cardOrigin={config.origin} sourceField=\"NOTE\"></ExtractFromFieldButton>\n\t\t\t{config.origin && <JumpToOriginButton cardOrigin={config.origin as NoteOrigin}></JumpToOriginButton>}\n\t\t</div>\n\t);\n};\n\nconst QACard = ({ config }: CardProps) => {\n\tconst dispatch = useDispatch();\n\tconst { id, field } = useSelector(getHoveredCardData);\n\tconst isHoveredCard = config.cardID === id;\n\n\treturn (\n\t\t<Grid container direction=\"column\" spacing={1}>\n\t\t\t<Grid item style={isHoveredCard && field === \"Q\" ? borderStyle : undefined}>\n\t\t\t\t<HybridCardField\n\t\t\t\t\tsaveChanges={(value) => {\n\t\t\t\t\t\tdispatch(cards.actions.updateCardContent(value, config.cardID, \"Q\", \"REPLACE\", config.origin));\n\t\t\t\t\t}}\n\t\t\t\t\tstoreValue={(config.content as QACardContent).q}\n\t\t\t\t\tlabel={\"Question\"}\n\t\t\t\t\tvariant=\"filled\"\n\t\t\t\t\tstyle={{ backgroundColor: \"#FFBF69\" }}\n\t\t\t\t\tInputLabelProps={{ style: { color: \"#000000\" } }}\n\t\t\t\t></HybridCardField>\n\t\t\t\t<GrabForFieldButton cardConfig={config} creationType=\"Q\"></GrabForFieldButton>\n\t\t\t\t<ExtractFromFieldButton cardOrigin={config.origin} sourceField=\"Q\"></ExtractFromFieldButton>\n\t\t\t\t{config.origin && !isNullOrUndefined((config.origin as QAOrigin).q?.spanIndex) && (\n\t\t\t\t\t<JumpToOriginButton cardOrigin={(config.origin as QAOrigin).q as SingleOrigin}></JumpToOriginButton>\n\t\t\t\t)}\n\t\t\t</Grid>\n\t\t\t<Grid item style={isHoveredCard && field === \"A\" ? borderStyle : undefined}>\n\t\t\t\t<HybridCardField\n\t\t\t\t\tsaveChanges={(value) => {\n\t\t\t\t\t\tdispatch(cards.actions.updateCardContent(value, config.cardID, \"A\", \"REPLACE\", config.origin));\n\t\t\t\t\t}}\n\t\t\t\t\tstoreValue={(config.content as QACardContent).a}\n\t\t\t\t\tlabel={\"Answer\"}\n\t\t\t\t\tvariant=\"filled\"\n\t\t\t\t\tstyle={{ backgroundColor: \"#2EC4B6\" }}\n\t\t\t\t\tInputLabelProps={{ style: { color: \"#000000\" } }}\n\t\t\t\t></HybridCardField>\n\t\t\t\t<GrabForFieldButton cardConfig={config} creationType=\"A\"></GrabForFieldButton>\n\t\t\t\t<ExtractFromFieldButton cardOrigin={config.origin} sourceField=\"A\"></ExtractFromFieldButton>\n\t\t\t\t{config.origin && !isNullOrUndefined((config.origin as QAOrigin).a?.spanIndex) && (\n\t\t\t\t\t<JumpToOriginButton cardOrigin={(config.origin as QAOrigin).a as SingleOrigin}></JumpToOriginButton>\n\t\t\t\t)}\n\t\t\t</Grid>\n\t\t\t<Grid item>\n\t\t\t\t<DeleteCardButton cardID={config.cardID}></DeleteCardButton>\n\t\t\t</Grid>\n\t\t</Grid>\n\t);\n};\n\nexport const Card = ({ config, riverID }: CardProps) => {\n\tswitch (config.type) {\n\t\tcase \"Note\":\n\t\t\treturn <NoteCard config={config} riverID={riverID}></NoteCard>;\n\t\tcase \"Q-A\":\n\t\t\treturn <QACard config={config} riverID={riverID}></QACard>;\n\t}\n};\n","import Grid from \"@material-ui/core/Grid\";\nimport React from \"react\";\nimport { incrementer } from \"../../../../shared/utils\";\nimport { Card } from \"./Card\";\nimport { CardConfig } from \"../../../cards/model\";\nimport { Divider } from \"@material-ui/core\";\n\nconst GridDivider = () => (\n\t<Grid item>\n\t\t<Divider></Divider>\n\t</Grid>\n);\n\nexport const toCardGridItemsWithDividers = (cards: CardConfig[], riverID: string) => {\n\tconst increment = incrementer();\n\n\treturn cards.reduce((prev, currentCard, index, arr) => {\n\t\tprev.push(\n\t\t\t<Grid item key={increment()}>\n\t\t\t\t<Card config={currentCard} riverID={riverID} key={increment()}></Card>\n\t\t\t</Grid>\n\t\t);\n\n\t\tconst notLastCard = index < arr.length - 1;\n\t\tif (notLastCard) prev.push(<GridDivider key={increment()}></GridDivider>);\n\t\treturn prev;\n\t}, [] as any[]);\n};\n","import { NAME } from \"./constants\";\n\nexport const RIVER_SHOW_STATE = NAME + \"/RIVER_SHOW_STATE\";\nexport const RIVER_PUSH_STATE = NAME + \"/RIVER_PUSH_STATE\";\nexport const RIVER_HOVERED_CARD = NAME + \"/RIVER_HOVERED_CARD\";\n","import * as t from \"./actionTypes\";\nimport { riverShowStateIsShow, getPushToRiver, getHoveredCardData } from \"./selectors\";\nimport { Dispatch } from \"redux\";\nimport { CreationType } from \"../cards/model\";\n\nexport const toggleRiverShowState = () => (dispatch: Dispatch, getState: Function) => {\n\tdispatch({ type: t.RIVER_SHOW_STATE, payload: riverShowStateIsShow(getState()) ? \"HIDE\" : \"SHOW\" });\n};\n\nexport const setPushToRiver = (id: string) => {\n\treturn { type: t.RIVER_PUSH_STATE, payload: id };\n};\n\nexport const trySetPushToRiver = (id: string) => {\n\treturn (dispatch: Dispatch, getState: Function) => {\n\t\tif (getPushToRiver(getState()) !== id) dispatch(setPushToRiver(id));\n\t};\n};\n\nexport const setHoveredCard = (cardID: string, field: CreationType) => {\n\treturn { payload: { id: cardID, field }, type: t.RIVER_HOVERED_CARD };\n};\n\nexport const trySetHoveredCard = (cardID: string, field: CreationType) => {\n\treturn (dispatch: Dispatch, getState: Function) => {\n\t\tconst state = getState();\n\t\tconst hoveredCardData = getHoveredCardData(state);\n\t\tif (hoveredCardData.id !== cardID || hoveredCardData.field !== field) dispatch(setHoveredCard(cardID, field));\n\t};\n};\n","import FeaturedVideoIcon from \"@material-ui/icons/FeaturedVideo\";\nimport React from \"react\";\nimport { IconButton } from \"@material-ui/core\";\nimport { useDispatch } from \"react-redux\";\nimport cards from \"../../../../cards\";\nimport focus from \"../../../../focus\";\n\nexport const AddNoteButton = () => {\n\tconst dispatch = useDispatch();\n\treturn (\n\t\t<IconButton\n\t\t\ttype=\"button\"\n\t\t\tonClick={() => {\n\t\t\t\tdispatch(cards.actions.cardPush({ card: { type: \"Note\", content: \"\" } }));\n\t\t\t}}\n\t\t\tonMouseEnter={() => {\n\t\t\t\tdispatch(focus.actions.tryUpdateFocus(\"EDITOR_CONTROL\"));\n\t\t\t}}\n\t\t>\n\t\t\t<FeaturedVideoIcon></FeaturedVideoIcon>\n\t\t</IconButton>\n\t);\n};\n","import FeaturedPlayListIcon from \"@material-ui/icons/FeaturedPlayList\";\nimport React from \"react\";\nimport { IconButton } from \"@material-ui/core\";\nimport { useDispatch } from \"react-redux\";\nimport cards from \"../../../../cards\";\nimport focus from \"../../../../focus\";\n\nexport const AddQAButton = () => {\n\tconst dispatch = useDispatch();\n\treturn (\n\t\t<IconButton\n\t\t\ttype=\"button\"\n\t\t\tonClick={() => {\n\t\t\t\tdispatch(cards.actions.cardPush({ card: { type: \"Q-A\", content: { q: \"\", a: \"\" } } }));\n\t\t\t}}\n\t\t\tonMouseEnter={() => {\n\t\t\t\tdispatch(focus.actions.tryUpdateFocus(\"EDITOR_CONTROL\"));\n\t\t\t}}\n\t\t>\n\t\t\t<FeaturedPlayListIcon></FeaturedPlayListIcon>\n\t\t</IconButton>\n\t);\n};\n","import { Typography, Divider } from \"@material-ui/core\";\nimport Accordion from \"@material-ui/core/Accordion\";\nimport AccordionSummary from \"@material-ui/core/AccordionSummary\";\nimport AccordionDetails from \"@material-ui/core/AccordionDetails\";\nimport Grid from \"@material-ui/core/Grid\";\nimport React, { useState } from \"react\";\nimport { trySetPushToRiver } from \"../../actions\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { AddNoteButton } from \"./Buttons/AddNoteButton\";\nimport { AddQAButton } from \"./Buttons/AddQAButton\";\nimport { getPushToRiver } from \"../../selectors\";\n\n//TODO-NICE: make it not be accordion but closeable?\n\nexport const CardRiverAccordion = ({\n\triverID,\n\tgridItems,\n\tsummary,\n}: {\n\triverID: string;\n\tgridItems: any;\n\tsummary: string;\n}) => {\n\tconst defaultElevation = 3;\n\tconst highlightElevation = 20;\n\tconst [elevation, setElevation] = useState(defaultElevation);\n\tconst pushToRiver = useSelector(getPushToRiver);\n\n\tif (riverID === pushToRiver && elevation === defaultElevation) {\n\t\tsetElevation(highlightElevation);\n\t} else if (riverID !== pushToRiver && elevation !== defaultElevation) {\n\t\tsetElevation(defaultElevation);\n\t}\n\n\tconst dispatch = useDispatch();\n\treturn (\n\t\t<Accordion\n\t\t\tdefaultExpanded={true}\n\t\t\tonMouseEnter={() => {\n\t\t\t\tdispatch(trySetPushToRiver(riverID));\n\t\t\t}}\n\t\t\televation={elevation}\n\t\t>\n\t\t\t<AccordionSummary>\n\t\t\t\t<Typography\n\t\t\t\t\tvariant=\"h6\"\n\t\t\t\t\talign=\"center\"\n\t\t\t\t\tstyle={{ MozUserSelect: \"none\", WebkitUserSelect: \"none\", msUserSelect: \"none\" }}\n\t\t\t\t>\n\t\t\t\t\t{summary}\n\t\t\t\t</Typography>\n\t\t\t</AccordionSummary>\n\t\t\t<AccordionDetails>\n\t\t\t\t<Grid container direction=\"column\" spacing={2} justify=\"center\" alignItems=\"stretch\">\n\t\t\t\t\t<Grid item>\n\t\t\t\t\t\t<AddQAButton></AddQAButton>\n\t\t\t\t\t\t<AddNoteButton></AddNoteButton>\n\t\t\t\t\t\t<Divider></Divider>\n\t\t\t\t\t</Grid>\n\t\t\t\t\t{gridItems}\n\t\t\t\t</Grid>\n\t\t\t</AccordionDetails>\n\t\t</Accordion>\n\t);\n};\n","import { CardConfig } from \"../../../cards/model\";\nimport { toCardGridItemsWithDividers } from \"./toCardGridItemsWithDividers\";\nimport { useMemo } from \"react\";\nimport { CardRiverAccordion } from \"./CardRiverAccordion\";\nimport React from \"react\";\n\n//TODO-RC: make Card-River non-overlapping and scroll the cards that we are considering from the Menus into view\n\nexport const ChildCardRiver = ({ riverID, riverCards }: { riverID: string; riverCards: CardConfig[] }) => {\n\t// this should only change if the store values change\n\tconst gridItems = useMemo(() => toCardGridItemsWithDividers(riverCards, riverID), [riverCards, riverID]);\n\n\treturn <CardRiverAccordion riverID={riverID} gridItems={gridItems} summary={riverID}></CardRiverAccordion>;\n};\n","import { CreationType } from \"../cards/model\";\n\nexport type RiverMakeUp = { riverID: string; cardIDs: string[]; active: boolean };\n\ntype RiverMakeUps = { [riverID: string]: RiverMakeUp };\n\nexport type RiverShowState = \"SHOW\" | \"HIDE\";\n\n//TODO-NICE: rename pushto/active river\n\nexport type CardRiverState = {\n\triverMakeUps: RiverMakeUps;\n\tactiveRiverMakeUpID: string;\n\tpushToRiverID: string;\n\tlastRiverIDNumber: number;\n\triverShowState: RiverShowState;\n\thoveredCard: null | string;\n\thoveredField: null | CreationType;\n};\n\nexport const pageNumberToRiverMakeUpID = (page: number) => \"CardRiver \" + page;\n\nexport const riverMakeUpIDToPageNumber = (riverID: string) => parseInt(riverID.replace(\"CardRiver \", \"\"));\n","import { Grid } from \"@material-ui/core\";\nimport { useSelector } from \"react-redux\";\nimport { getRiverMakeUps } from \"../../selectors\";\nimport React, { useRef, useEffect } from \"react\";\nimport cards from \"../../../cards\";\nimport focus from \"../../../focus\";\nimport display from \"../../../display\";\nimport { incrementer } from \"../../../../shared/utils\";\nimport { ChildCardRiver } from \"../CardRiver/ChildCardRiver\";\nimport { riverMakeUpIDToPageNumber } from \"../../model\";\n\n//TODO-RC: SummaryRiver \"searchable\", so that you can zoom to certain rivers and also look at them next to each other (like PageChooser but needs different visuals)\n//TODO-RC: make cards searchable when looking at River/Material\n//TODO-RC: make separate Summary View that goes from left to right -> focus on active River\n//TODO-PREF: memoize Rivers (not necessary right now, because we just hide)\n\nexport const SummaryRiver = () => {\n\tconst displayFocus = useSelector(focus.selectors.getDisplayFocus);\n\tconst currentPage = useSelector(display.selectors.getCurrentPage);\n\tconst cardConfigs = useSelector(cards.selectors.getCards);\n\tconst riverMakeUps = Object.values(useSelector(getRiverMakeUps));\n\tconst focusRef = useRef<HTMLDivElement | null>(null);\n\n\t// the current-page river is scrolled into view\n\tuseEffect(() => {\n\t\tif (displayFocus === \"SUMMARY_RIVER\" && focusRef.current !== null) {\n\t\t\t(focusRef.current as HTMLDivElement).focus();\n\t\t\t(focusRef.current as HTMLDivElement).scrollIntoView({ behavior: \"smooth\", block: \"center\", inline: \"center\" });\n\t\t}\n\t}, [displayFocus, currentPage]);\n\n\tconst increment = incrementer();\n\t//TODO-NICE: find way to make UI-text unselectable globally, maybe different focus? But might be unperformant\n\treturn (\n\t\t<Grid container justify=\"flex-start\" direction=\"row\" alignItems=\"stretch\" spacing={1}>\n\t\t\t{riverMakeUps.map((makeUp) =>\n\t\t\t\tmakeUp.cardIDs.length > 0 ? (\n\t\t\t\t\t<Grid\n\t\t\t\t\t\titem\n\t\t\t\t\t\tref={riverMakeUpIDToPageNumber(makeUp.riverID) === currentPage ? focusRef : null}\n\t\t\t\t\t\tkey={increment()}\n\t\t\t\t\t>\n\t\t\t\t\t\t<ChildCardRiver\n\t\t\t\t\t\t\triverID={makeUp.riverID}\n\t\t\t\t\t\t\triverCards={makeUp.cardIDs.map((id) => cardConfigs[id])}\n\t\t\t\t\t\t\tkey={increment()}\n\t\t\t\t\t\t></ChildCardRiver>\n\t\t\t\t\t</Grid>\n\t\t\t\t) : null\n\t\t\t)}\n\t\t</Grid>\n\t);\n};\n","import React from \"react\";\nimport Grid from \"@material-ui/core/Grid\";\nimport focus from \"../../../focus\";\nimport { useSelector } from \"react-redux\";\nimport { SummaryRiver } from \"./SummaryRiver\";\n\n//TODO-RC: dont show empty rivers in summary, make dropdown/create empty river button\n//TODO-RC: remove GrabButton in SummaryRiver\n\nexport const SummaryRiverView = () => {\n\tconst displayFocus = useSelector(focus.selectors.getDisplayFocus);\n\n\treturn (\n\t\t<Grid item hidden={displayFocus !== \"SUMMARY_RIVER\"}>\n\t\t\t<SummaryRiver></SummaryRiver>\n\t\t</Grid>\n\t);\n};\n","import React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { getActiveRiverCards, getActiveRiverMakeUpID } from \"../../selectors\";\nimport { ChildCardRiver } from \"../CardRiver/ChildCardRiver\";\n\n//TODO-RC: improve visual clarity of mapping ContextMenu to River\n\n//TODO-RC: mark cards that are hovered over in the contextmenu, so that we see where the content would end up\n// canvas?\n\n//TODO-RC: selection in CardRiver should stay highlighted when the contextMenu opens?\n\n//TODO-RC: move filled cards to separate sub-menu at the bottom, so they can be filled either way\n//TODO-RC make border around hovered card\n\n//TODO-NICE: contextMenu as permant element, maybe sidebar?\n//TODO-NICE: preview in ContextMenu of how selected string would be used\n\n//TODO-RC: SummaryNotes (maybe just SummaryRiver but with filter clickable?)\nexport const ActiveCardRiver = () => {\n\tconst riverID = useSelector(getActiveRiverMakeUpID);\n\tconst riverCards = useSelector(getActiveRiverCards);\n\n\treturn <ChildCardRiver riverID={riverID} riverCards={riverCards}></ChildCardRiver>;\n};\n","import React from \"react\";\nimport Grid from \"@material-ui/core/Grid\";\nimport { ActiveCardRiver } from \"./ActiveCardRiver\";\n//TODO-RC: on top of SummaryRiver make field for navigating the river (jumping to sub-river, maybe also in sub-river for jumping around?)\n//TODO-RC: make way for me to upload and download cards so I can prepare the user-study\n//TODO-NICE: make River-View, where you can just see one card and can make it smaller? Maybe just button to zoom \"in\" / just seeing the current river\n//TODO-NICE: mark Origin-Span or maybe rect over whole page-section?\n//TODO-NICE: make reconciliation algorithm for origin when new PDF versions come out\n\nexport const ActiveRiverColumn = ({ hidden }: any) => {\n\treturn (\n\t\t<Grid\n\t\t\titem\n\t\t\tstyle={{\n\t\t\t\twidth: \"38%\",\n\t\t\t}}\n\t\t\thidden={hidden}\n\t\t>\n\t\t\t<ActiveCardRiver></ActiveCardRiver>\n\t\t</Grid>\n\t);\n};\n","import React from \"react\";\nimport Grid from \"@material-ui/core/Grid\";\nimport display from \"../../../display\";\nimport focus from \"../../../focus\";\nimport { useSelector } from \"react-redux\";\nimport { ActiveRiverColumn } from \"./ActiveRiverColumn\";\nimport { riverShowStateIsShow } from \"../../selectors\";\n\nexport const ActiveRiverView = () => {\n\tconst displayFocus = useSelector(focus.selectors.getDisplayFocus);\n\tconst showMaterial = useSelector(display.selectors.displayStatusIsShow);\n\tconst showRiver = useSelector(riverShowStateIsShow);\n\n\treturn (\n\t\t<Grid item hidden={displayFocus !== \"ACTIVE_RIVER\"}>\n\t\t\t<Grid container justify=\"space-around\" direction=\"row\" alignItems=\"stretch\">\n\t\t\t\t<ActiveRiverColumn hidden={!showRiver}></ActiveRiverColumn>\n\t\t\t\t<display.components.MaterialDisplayColumnWithSize\n\t\t\t\t\thidden={!showMaterial}\n\t\t\t\t></display.components.MaterialDisplayColumnWithSize>\n\t\t\t</Grid>\n\t\t</Grid>\n\t);\n};\n","import { CardRiverState, RiverShowState, pageNumberToRiverMakeUpID, RiverMakeUp } from \"./model\";\nimport { FinalizedCardPayload } from \"../cards/model\";\nimport cards from \"../cards\";\nimport * as t from \"./actionTypes\";\nimport display from \"../display\";\nimport focus from \"../focus\";\nimport { UserFocus } from \"../focus/model\";\n\nconst intialState: CardRiverState = {\n\triverMakeUps: {\n\t\t[pageNumberToRiverMakeUpID(1)]: {\n\t\t\triverID: pageNumberToRiverMakeUpID(1),\n\t\t\tcardIDs: [\"2\", \"0\", \"1\"],\n\t\t\t//TODO-NICE: might remove this active-flag, because I dont use it? Maybe for multiple documents?\n\t\t\tactive: true,\n\t\t},\n\t},\n\tpushToRiverID: pageNumberToRiverMakeUpID(1),\n\tactiveRiverMakeUpID: pageNumberToRiverMakeUpID(1),\n\tlastRiverIDNumber: 1,\n\triverShowState: \"SHOW\",\n\thoveredCard: null,\n\thoveredField: null,\n};\n\nconst emptyCardRiver = (page: number): RiverMakeUp => {\n\treturn {\n\t\triverID: pageNumberToRiverMakeUpID(page),\n\t\tcardIDs: [],\n\t\tactive: true,\n\t};\n};\n\nconst updateStateWithMakeUps = (state: CardRiverState, ...makeUps: RiverMakeUp[]) => {\n\tconst updatedState = { ...state };\n\tmakeUps.forEach((makeUp) => {\n\t\tupdatedState.riverMakeUps[makeUp.riverID] = makeUp;\n\t});\n\treturn updatedState;\n};\n\nconst deactivateActiveCardRiver = (state: CardRiverState) => {\n\treturn { ...state.riverMakeUps[state.activeRiverMakeUpID], active: false };\n};\n\nconst removeCardFromRivers = (state: CardRiverState, cardID: string): CardRiverState => {\n\tconst riverMakeUps = Object.fromEntries(\n\t\tObject.entries(state.riverMakeUps).map((entry) => [\n\t\t\tentry[0],\n\t\t\t{ ...entry[1], cardIDs: entry[1].cardIDs.filter((id) => id !== cardID) },\n\t\t])\n\t);\n\treturn { ...state, riverMakeUps };\n};\n\nconst cardRiverState = (state = intialState, { type, payload }: { type: string; payload: any }) => {\n\tlet riverMakeUp;\n\tlet riverMakeUps;\n\tswitch (type) {\n\t\tcase display.actionTypes.PAGE_UPDATE:\n\t\t\tlet activeRiver;\n\t\t\tif (!state.riverMakeUps[pageNumberToRiverMakeUpID(payload as number)]) {\n\t\t\t\tactiveRiver = emptyCardRiver(payload as number);\n\t\t\t} else {\n\t\t\t\tactiveRiver = { ...state.riverMakeUps[pageNumberToRiverMakeUpID(payload as number)], active: true };\n\t\t\t}\n\n\t\t\tconst oldRiver = deactivateActiveCardRiver(state);\n\n\t\t\treturn {\n\t\t\t\t...updateStateWithMakeUps(state, activeRiver, oldRiver),\n\t\t\t\tactiveRiverMakeUpID: activeRiver.riverID,\n\t\t\t\tpushToRiverID: activeRiver.riverID,\n\t\t\t};\n\n\t\tcase cards.actionTypes.CARD_PUSH:\n\t\t\triverMakeUp = {\n\t\t\t\t...state.riverMakeUps[state.pushToRiverID],\n\t\t\t\tcardIDs: [...state.riverMakeUps[state.pushToRiverID].cardIDs, (payload as FinalizedCardPayload).card.cardID],\n\t\t\t};\n\t\t\triverMakeUps = { ...state.riverMakeUps };\n\t\t\triverMakeUps[state.pushToRiverID] = riverMakeUp;\n\n\t\t\treturn { ...state, riverMakeUps: riverMakeUps };\n\t\tcase cards.actionTypes.CARD_REMOVE:\n\t\t\treturn removeCardFromRivers(state, payload as string);\n\t\tcase t.RIVER_SHOW_STATE:\n\t\t\treturn { ...state, riverShowState: payload as RiverShowState };\n\t\tcase t.RIVER_PUSH_STATE:\n\t\t\treturn { ...state, pushToRiverID: payload };\n\t\tcase t.RIVER_HOVERED_CARD:\n\t\t\treturn { ...state, hoveredCard: payload.id, hoveredField: payload.field };\n\t\tcase focus.actionTypes.FOCUS_UPDATE:\n\t\t\t// reset hovered-card once we are not focused on the context menu\n\t\t\t//TODO-NICE: investigate a better factoring for the relation between river and creation\n\t\t\tif (state.hoveredCard !== null && (payload as UserFocus) !== \"CONTEXT_MENU\") {\n\t\t\t\treturn { ...state, hoveredCard: null, hoveredField: null };\n\t\t\t} else {\n\t\t\t\treturn state;\n\t\t\t}\n\t\tdefault:\n\t\t\treturn state;\n\t}\n};\n\nexport default cardRiverState;\n","import * as constants from \"./constants\";\nimport * as components from \"./components\";\nimport reducer from \"./reducer\";\nimport * as selectors from \"./selectors\";\nimport * as actions from \"./actions\";\n\nexport default { constants, components, reducer, selectors, actions };\n","import { NAME } from \"./constants\";\nimport { createSelector } from \"reselect\";\nimport { CreationData } from \"./model\";\nimport river from \"../river\";\nimport display from \"../display\";\nimport { SingleOrigin } from \"../cards/model\";\n\nexport const getAll = (state: any) => state[NAME];\n\nexport const getContextMenuState = createSelector(getAll, (state: CreationData) => state.open);\n\nexport const getContextMenuRef = createSelector(getAll, (state: CreationData) => state.menuRef);\n\nexport const getContextMenuQARefs = createSelector(getAll, (state: CreationData) => state.qaRefs);\n\nexport const getCurrentSelectionPosition = createSelector(getAll, (state: CreationData) => state.selectionPosition);\n\nexport const getContextMenuInitData = createSelector(\n\tgetCurrentSelectionPosition,\n\tgetContextMenuState,\n\tgetContextMenuRef,\n\tgetContextMenuQARefs,\n\triver.selectors.getPushToRiverCards,\n\t(position, state, menuRef, qaRefs, riverCards) => {\n\t\treturn { position, state, menuRef, qaRefs, riverCards };\n\t}\n);\n\nexport const getCurrentSelectedString = createSelector(getAll, (state: CreationData) => state.manuallySelectedString);\n\nexport const getCurrentSelectedParent = createSelector(getAll, (state: CreationData) => state.selectedParentSpan);\n\nexport const getCurrentOrigin = createSelector(\n\t(state: any) => state,\n\tdisplay.selectors.getCurrentPage,\n\tgetCurrentSelectedParent,\n\t(state, currentPage, selectedParent): SingleOrigin => {\n\t\treturn {\n\t\t\tspanIndex: display.selectors.getSpanIndex(state, selectedParent as HTMLSpanElement),\n\t\t\tpage: currentPage,\n\t\t};\n\t}\n);\n","import * as t from \"./actionTypes\";\nimport { CardType, CreationType, CardOrigin, QAOrigin, SingleOrigin } from \"../cards/model\";\nimport cards from \"../cards\";\nimport focus from \"../focus\";\nimport { getCurrentSelectedString, getCurrentSelectedParent, getContextMenuState, getCurrentOrigin } from \"./selectors\";\nimport { isNullOrUndefined } from \"util\";\nimport { transformInputOrigin } from \"./services/transformInputOrigin\";\nimport display from \"../display\";\n\nexport const toggleContextMenu = () => {\n\treturn (dispatch: any, getState: Function) => {\n\t\tconst state = getState();\n\t\tif (display.selectors.getDataExists(state)) {\n\t\t\tdispatch({ type: t.TOGGLE_CONTEXT_MENU });\n\t\t\tdispatch(focus.actions.toggleContextMenuFocus());\n\t\t}\n\t};\n};\n\nexport const closeContextMenu = () => {\n\treturn (dispatch: any, getState: Function) => {\n\t\tif (getContextMenuState(getState())) {\n\t\t\tdispatch({ type: t.CLOSE_CONTEXT_MENU });\n\t\t\tdispatch(focus.actions.updateFocus(\"SELECTION\"));\n\t\t}\n\t};\n};\n\nexport const openContextMenu = () => {\n\treturn (dispatch: any) => {\n\t\tdispatch({ type: t.OPEN_CONTEXT_MENU });\n\t\tdispatch(focus.actions.updateFocus(\"SELECTION\"));\n\t};\n};\n\nexport const grabSelectionForContextMenu = (type: CardType, creationType: CreationType, cardID?: string) => {\n\treturn (dispatch: Function, getState: Function) => {\n\t\tdispatch(closeContextMenu());\n\n\t\tconst state = getState();\n\n\t\t//TODO-NICE: think of a way to make this intuitive\n\t\t//const updateType = type === \"Q-A\" ? \"REPLACE\" : \"APPEND\";\n\t\tconst updateType = \"REPLACE\";\n\t\tconst isUpdate = cardID !== undefined;\n\n\t\t// this should be from the document\n\t\tconst selectedString = getCurrentSelectedString(state);\n\t\tconst selectedParent = getCurrentSelectedParent(state);\n\n\t\t// always overwrite origin, even if isUpdate, because updateType==replace\n\t\tconst origin: CardOrigin | undefined = selectedParent ? getCurrentOrigin(state) : undefined;\n\n\t\tif (isUpdate) {\n\t\t\tdispatch(cards.actions.updateCardContent(selectedString, cardID as string, creationType, updateType, origin));\n\t\t} else {\n\t\t\tdispatch(cards.actions.pushCardContent(selectedString, creationType, updateType, type, origin));\n\t\t}\n\t};\n};\n\nexport const hasNonEmptyOrigin = (origin?: CardOrigin) =>\n\t!!origin &&\n\t(!isNullOrUndefined((origin as SingleOrigin).spanIndex) ||\n\t\t!isNullOrUndefined((origin as QAOrigin).a?.spanIndex) ||\n\t\t!isNullOrUndefined((origin as QAOrigin).q?.spanIndex));\n\nexport const grabSelectionForSourceMenu = (\n\ttype: CardType,\n\tcreationType: CreationType,\n\tsourceField: CreationType,\n\torigin?: CardOrigin,\n\tcardID?: string\n) => {\n\treturn (dispatch: Function, getState: Function) => {\n\t\t// this is called, after the source-card has been set, the SourceMenu has been opened and been clicked\n\t\tconst state = getState();\n\n\t\t// close SourceMenu by resetting SourceCard\n\t\tdispatch(cards.actions.resetSourceCard());\n\n\t\tconst updateType = \"REPLACE\";\n\t\tconst isUpdate = cardID !== undefined;\n\n\t\t//  this should be from the SourceCard in which the extract button has been clicked\n\t\t//\tthe SourceCard can or can not have an origin\n\t\tconst sourceHasNonEmptyOrigin = hasNonEmptyOrigin(origin);\n\t\tconst newOrigin = sourceHasNonEmptyOrigin\n\t\t\t? transformInputOrigin(\n\t\t\t\t\torigin as CardOrigin,\n\t\t\t\t\tsourceField,\n\t\t\t\t\tcreationType,\n\t\t\t\t\tisUpdate ? (cards.selectors.getCards(state)[cardID as string].origin as CardOrigin) : undefined\n\t\t\t  )\n\t\t\t: undefined;\n\t\tconst selectedString = getCurrentSelectedString(state);\n\n\t\t//TODO-NICE: untangle the types so that the as CardOrigin is not necessary in the dispatch,\n\t\t//maybe merge content and origin to avoid two object hierarchies?\n\t\tif (isUpdate) {\n\t\t\tdispatch(\n\t\t\t\tcards.actions.updateCardContent(\n\t\t\t\t\tselectedString,\n\t\t\t\t\tcardID as string,\n\t\t\t\t\tcreationType,\n\t\t\t\t\tupdateType,\n\t\t\t\t\tnewOrigin as CardOrigin\n\t\t\t\t)\n\t\t\t);\n\t\t} else {\n\t\t\tdispatch(cards.actions.pushCardContent(selectedString, creationType, updateType, type, newOrigin as CardOrigin));\n\t\t}\n\t};\n};\n\nexport const updateManuallySelectedString = (str: string) => {\n\treturn { type: t.SELECTED_STRING, payload: str };\n};\n\nexport const resetManuallySelectedString = () => {\n\treturn updateManuallySelectedString(\"\");\n};\n\nexport const selectedParent = (span: null | HTMLSpanElement) => {\n\treturn { type: t.SELECTED_PARENT, payload: span };\n};\n\nexport const updateSelectionPosition = (x: number, y: number) => {\n\treturn { type: t.SELECTION_POSITION, payload: { x, y } };\n};\n","import { CreationType, CardOrigin, QAOrigin } from \"../../cards/model\";\nimport { isNullOrUndefined } from \"util\";\n\n//TODO-NICE: make this non-redundant, but for now it works\n\nexport const transformInputOrigin = (\n\tsourceOrigin: CardOrigin,\n\tsourceField: CreationType,\n\tcreationType: CreationType,\n\tgoalOrigin?: CardOrigin\n) => {\n\tif (!goalOrigin) {\n\t\tif (sourceField === creationType) return sourceOrigin;\n\n\t\tif (sourceField === \"NOTE\") {\n\t\t\t// this means SingleOrigin\n\t\t\treturn { q: {}, a: {}, [creationType === \"Q\" ? \"q\" : \"a\"]: sourceOrigin };\n\t\t}\n\n\t\tif (creationType === \"NOTE\") {\n\t\t\t//this means we need to transfrom QAOrigin to SingleOrigin\n\t\t\treturn { ...(sourceOrigin as QAOrigin)[sourceField === \"Q\" ? \"q\" : \"a\"] };\n\t\t}\n\n\t\t// swap cases\n\t\tif (creationType === \"Q\") {\n\t\t\treturn { q: (sourceOrigin as QAOrigin).a, a: {} };\n\t\t} else {\n\t\t\t//A\n\t\t\treturn { a: (sourceOrigin as QAOrigin).q, q: {} };\n\t\t}\n\t} else {\n\t\tif (sourceField === creationType) return { ...goalOrigin, ...sourceOrigin };\n\n\t\tif (sourceField === \"NOTE\" && !isNullOrUndefined((goalOrigin as QAOrigin).q)) {\n\t\t\t// this means SingleOrigin to QAOrigin\n\t\t\treturn { ...goalOrigin, [creationType === \"Q\" ? \"q\" : \"a\"]: sourceOrigin };\n\t\t}\n\n\t\tif (creationType === \"NOTE\") {\n\t\t\t//this means we need to transfrom QAOrigin to SingleOrigin\n\t\t\treturn { ...(sourceOrigin as QAOrigin)[sourceField === \"Q\" ? \"q\" : \"a\"] };\n\t\t}\n\n\t\t// swap cases\n\t\tif (creationType === \"Q\") {\n\t\t\treturn { q: (sourceOrigin as QAOrigin).a, a: (goalOrigin as QAOrigin).a };\n\t\t} else {\n\t\t\t//A\n\t\t\treturn { a: (sourceOrigin as QAOrigin).q, q: (goalOrigin as QAOrigin).q };\n\t\t}\n\t}\n};\n","import * as t from \"./actionTypes\";\nimport { CreationData } from \"./model\";\nimport { createRef } from \"react\";\nimport { CardPayload } from \"../cards/model\";\nimport cards from \"../cards\";\n\nconst initialState: CreationData = {\n\topen: false,\n\tmenuRef: createRef(),\n\tqaRefs: [createRef(), createRef()],\n\tmanuallySelectedString: \"\",\n\tselectedParentSpan: null,\n\tselectionPosition: { x: 0, y: 0 },\n};\n\nconst creationData = (state = initialState, { type, payload }: { type: string; payload: any }): CreationData => {\n\tswitch (type) {\n\t\tcase t.TOGGLE_CONTEXT_MENU:\n\t\t\treturn { ...state, open: !state.open };\n\t\tcase t.CLOSE_CONTEXT_MENU:\n\t\t\treturn { ...state, open: false };\n\t\tcase t.OPEN_CONTEXT_MENU:\n\t\t\treturn { ...state, open: true };\n\t\tcase cards.actionTypes.CARD_PUSH:\n\t\t\t//TODO-NICE: reliance on order of refs (needs to be the same as order of qaRefs) and coupling to the fact that a new card was pushed\n\t\t\t// might need to change if I allow moving the cards\n\t\t\t//TODO-NICE: no support for multiple rivers\n\t\t\tif ((payload as CardPayload).card.type === \"Q-A\") return { ...state, qaRefs: [...state.qaRefs, createRef()] };\n\t\t\treturn state;\n\t\tcase t.SELECTED_STRING:\n\t\t\treturn { ...state, manuallySelectedString: payload as string };\n\t\tcase t.SELECTED_PARENT:\n\t\t\treturn { ...state, selectedParentSpan: payload };\n\t\tcase t.SELECTION_POSITION:\n\t\t\treturn { ...state, selectionPosition: payload };\n\t\tdefault:\n\t\t\treturn state;\n\t}\n};\n\nexport default creationData;\n","import React, { RefObject } from \"react\";\nimport NestedMenuItem from \"material-ui-nested-menu-item\";\nimport { MenuItem } from \"@material-ui/core\";\nimport { CardConfig, CardType, CreationType } from \"../../cards/model\";\nimport { useDispatch } from \"react-redux\";\nimport river from \"../../river\";\n\ntype dispatchRiver = (type: CardType, creationType: CreationType, cardID?: string | undefined) => void;\n\n//TODO-NICE: rename this to note\n//TODO-NICE: entangle this dispatchRiver buisness and use hooks in the card components instead\n\nconst SingleOptionItem = ({ cardConfig, dispatchRiver }: { cardConfig: CardConfig; dispatchRiver: dispatchRiver }) => {\n\tconst dispatch = useDispatch();\n\n\treturn (\n\t\t<MenuItem\n\t\t\tonClick={() => {\n\t\t\t\tdispatchRiver(cardConfig.type, \"NOTE\", cardConfig.cardID);\n\t\t\t}}\n\t\t\tonMouseEnter={() => {\n\t\t\t\tdispatch(river.actions.trySetHoveredCard(cardConfig.cardID, \"NOTE\"));\n\t\t\t}}\n\t\t>\n\t\t\t{cardConfig.type}\n\t\t</MenuItem>\n\t);\n};\n\nconst QAOptionItem = ({\n\tcardConfig,\n\tdispatchRiver,\n\tqaRef,\n}: {\n\tcardConfig: CardConfig;\n\tdispatchRiver: dispatchRiver;\n\tqaRef: RefObject<any> | undefined;\n}) => {\n\tconst dispatch = useDispatch();\n\n\treturn (\n\t\t<NestedMenuItem label=\"Q-A\" parentMenuOpen={true}>\n\t\t\t<MenuItem\n\t\t\t\tref={qaRef}\n\t\t\t\tonClick={() => {\n\t\t\t\t\tdispatchRiver(\"Q-A\", \"Q\", cardConfig.cardID);\n\t\t\t\t}}\n\t\t\t\tonMouseEnter={() => {\n\t\t\t\t\tdispatch(river.actions.trySetHoveredCard(cardConfig.cardID, \"Q\"));\n\t\t\t\t}}\n\t\t\t>\n\t\t\t\tQ\n\t\t\t</MenuItem>\n\t\t\t<MenuItem\n\t\t\t\tonClick={() => {\n\t\t\t\t\tdispatchRiver(\"Q-A\", \"A\", cardConfig.cardID);\n\t\t\t\t}}\n\t\t\t\tonMouseEnter={() => {\n\t\t\t\t\tdispatch(river.actions.trySetHoveredCard(cardConfig.cardID, \"A\"));\n\t\t\t\t}}\n\t\t\t>\n\t\t\t\tA\n\t\t\t</MenuItem>\n\t\t</NestedMenuItem>\n\t);\n};\n\nexport const CardConfigItem = ({\n\tcardConfig,\n\tdispatchRiver,\n\tqaRef,\n}: {\n\tcardConfig: CardConfig;\n\tdispatchRiver: dispatchRiver;\n\tqaRef?: RefObject<any>;\n}) => {\n\tswitch (cardConfig.type) {\n\t\tcase \"Q-A\":\n\t\t\treturn <QAOptionItem cardConfig={cardConfig} dispatchRiver={dispatchRiver} qaRef={qaRef}></QAOptionItem>;\n\t\tdefault:\n\t\t\treturn <SingleOptionItem cardConfig={cardConfig} dispatchRiver={dispatchRiver}></SingleOptionItem>;\n\t}\n};\n","import { Fragment } from \"react\";\nimport { MenuItem } from \"@material-ui/core\";\nimport React from \"react\";\n\n//TODO-RC: clear qa-field button\n\nconst NewQACardQ = ({ onClick }: any) => <MenuItem onClick={onClick}>New: Q (Q-A)</MenuItem>;\nconst NewQACardA = ({ onClick }: any) => <MenuItem onClick={onClick}>New: A (Q-A)</MenuItem>;\nconst NewNoteCard = ({ onClick }: any) => <MenuItem onClick={onClick}>New: Note</MenuItem>;\n\nexport const NewButtons = ({ noteClick, qClick, aClick }: any) => {\n\treturn (\n\t\t<Fragment>\n\t\t\t<NewNoteCard onClick={noteClick}></NewNoteCard>\n\t\t\t<NewQACardQ> onClick={qClick}</NewQACardQ>\n\t\t\t<NewQACardA> onClick={aClick}</NewQACardA>\n\t\t</Fragment>\n\t);\n};\n","import React, { RefObject } from \"react\";\nimport Menu from \"@material-ui/core/Menu\";\nimport { Divider } from \"@material-ui/core\";\nimport { useDispatch, connect } from \"react-redux\";\nimport { getContextMenuInitData } from \"../selectors\";\nimport { grabSelectionForContextMenu } from \"../actions\";\nimport { incrementer } from \"../../../shared/utils\";\nimport { CardConfig, CardType, CreationType } from \"../../cards/model\";\nimport { CardConfigItem } from \"./CardConfigItem\";\nimport { NewButtons } from \"./NewButtons\";\n\nfunction ContextMenu({\n\tposition,\n\tstate,\n\tmenuRef,\n\tqaRefs,\n\triverCards,\n}: {\n\tposition: { x: number; y: number };\n\tstate: boolean;\n\tmenuRef: RefObject<any>;\n\tqaRefs: RefObject<any>[];\n\triverCards: CardConfig[];\n}) {\n\tconst dispatch = useDispatch();\n\tconst openState = state;\n\tconst dispatchRiver = (type: CardType, creationType: CreationType, cardID?: string) => {\n\t\tdispatch(grabSelectionForContextMenu(type, creationType, cardID));\n\t};\n\n\tconst increment = incrementer();\n\tconst qaRefIndex = incrementer();\n\n\tconst anchorPosition = openState ? { top: position.y, left: position.x } : undefined;\n\n\t// TODO-NICE: need to check for state before rendering MenuItems,\n\t// otherwise it shows up for a split-second when switching the menu off after adding to the river\n\t// weird Race Condition even if I dispatch closeContextMenu first?\n\treturn (\n\t\t<Menu\n\t\t\tref={openState ? menuRef : null}\n\t\t\tkeepMounted\n\t\t\topen={openState}\n\t\t\tanchorReference=\"anchorPosition\"\n\t\t\tanchorPosition={anchorPosition}\n\t\t>\n\t\t\t{openState &&\n\t\t\t\triverCards.map((cardConfig) => (\n\t\t\t\t\t<CardConfigItem\n\t\t\t\t\t\tcardConfig={cardConfig}\n\t\t\t\t\t\tdispatchRiver={dispatchRiver}\n\t\t\t\t\t\tkey={increment()}\n\t\t\t\t\t\tqaRef={cardConfig.type === \"Q-A\" ? qaRefs[qaRefIndex()] : undefined}\n\t\t\t\t\t></CardConfigItem>\n\t\t\t\t))}\n\t\t\t{openState && riverCards.length > 0 && <Divider />}\n\n\t\t\t{openState && (\n\t\t\t\t<NewButtons\n\t\t\t\t\tnoteClick={() => {\n\t\t\t\t\t\tdispatchRiver(\"Note\", \"NOTE\");\n\t\t\t\t\t}}\n\t\t\t\t\tqClick={() => {\n\t\t\t\t\t\tdispatchRiver(\"Q-A\", \"Q\");\n\t\t\t\t\t}}\n\t\t\t\t\taClick={() => {\n\t\t\t\t\t\tdispatchRiver(\"Q-A\", \"A\");\n\t\t\t\t\t}}\n\t\t\t\t></NewButtons>\n\t\t\t)}\n\t\t</Menu>\n\t);\n}\n\nexport const ContextMenuContainer = connect(getContextMenuInitData)(ContextMenu);\n","import React, { RefObject } from \"react\";\nimport Menu from \"@material-ui/core/Menu\";\nimport { Divider } from \"@material-ui/core\";\nimport { useDispatch, useSelector, connect } from \"react-redux\";\nimport { getContextMenuInitData } from \"../selectors\";\nimport { grabSelectionForSourceMenu } from \"../actions\";\nimport { incrementer } from \"../../../shared/utils\";\nimport { CardConfig, CardType, CreationType, SourceCard } from \"../../cards/model\";\nimport cards from \"../../cards\";\nimport { CardConfigItem } from \"./CardConfigItem\";\nimport { NewButtons } from \"./NewButtons\";\n\nfunction SourceMenu({\n\tmenuRef,\n\tqaRefs,\n\triverCards,\n}: {\n\tmenuRef: RefObject<any>;\n\tqaRefs: RefObject<any>[];\n\triverCards: CardConfig[];\n}) {\n\tconst dispatch = useDispatch();\n\tconst sourceCard = useSelector(cards.selectors.getSourceCard);\n\tconst openState = !!sourceCard;\n\tconst dispatchRiver = (type: CardType, creationType: CreationType, cardID?: string) => {\n\t\tdispatch(\n\t\t\tgrabSelectionForSourceMenu(\n\t\t\t\ttype,\n\t\t\t\tcreationType,\n\t\t\t\t(sourceCard as SourceCard).sourceField,\n\t\t\t\t(sourceCard as SourceCard).origin,\n\t\t\t\tcardID\n\t\t\t)\n\t\t);\n\t};\n\n\tconst increment = incrementer();\n\tconst qaRefIndex = incrementer();\n\tconst anchorPosition = sourceCard ? { top: sourceCard.y, left: sourceCard.x } : undefined;\n\n\treturn (\n\t\t<Menu\n\t\t\tref={openState ? menuRef : null}\n\t\t\tkeepMounted\n\t\t\topen={openState}\n\t\t\tanchorReference=\"anchorPosition\"\n\t\t\tanchorPosition={anchorPosition}\n\t\t>\n\t\t\t{openState &&\n\t\t\t\triverCards.map((cardConfig) => (\n\t\t\t\t\t<CardConfigItem\n\t\t\t\t\t\tcardConfig={cardConfig}\n\t\t\t\t\t\tdispatchRiver={dispatchRiver}\n\t\t\t\t\t\tkey={increment()}\n\t\t\t\t\t\tqaRef={cardConfig.type === \"Q-A\" ? qaRefs[qaRefIndex()] : undefined}\n\t\t\t\t\t></CardConfigItem>\n\t\t\t\t))}\n\t\t\t{openState && riverCards.length > 0 && <Divider />}\n\n\t\t\t{openState && (\n\t\t\t\t<NewButtons\n\t\t\t\t\tnoteClick={() => {\n\t\t\t\t\t\tdispatchRiver(\"Note\", \"NOTE\");\n\t\t\t\t\t}}\n\t\t\t\t\tqClick={() => {\n\t\t\t\t\t\tdispatchRiver(\"Q-A\", \"Q\");\n\t\t\t\t\t}}\n\t\t\t\t\taClick={() => {\n\t\t\t\t\t\tdispatchRiver(\"Q-A\", \"A\");\n\t\t\t\t\t}}\n\t\t\t\t></NewButtons>\n\t\t\t)}\n\t\t</Menu>\n\t);\n}\n\nexport const SourceMenuContainer = connect(getContextMenuInitData)(SourceMenu);\n","import { getContextMenuRef, getContextMenuQARefs } from \"./selectors\";\n\n// the root div for the menu invisibly covers the whole screen\n// the actual div that is visible is this\nconst baseContextMenuSelector = \"div.MuiPaper-root\";\n\nexport const contextMenuContainsTargetNode = (state: any, event: Event) => {\n\tconst menuRef = getContextMenuRef(state).current;\n\n\t// the nested items are rendered under a different menu\n\t// the current api does not allow access\n\t// so the qa-refs refer to the Q-button\n\t// we check the click against his parent,\n\t// which is the div that contains the Q and A buttons\n\tconst qaRefs = getContextMenuQARefs(state)\n\t\t.map((refObject) => refObject.current)\n\t\t.filter((cur) => !!cur)\n\t\t.map((ref) => ref.parentNode);\n\n\tconst target = event.target as Node;\n\n\tif (menuRef?.querySelector(baseContextMenuSelector)?.contains(target)) return true;\n\n\tfor (const qaRef of qaRefs) {\n\t\tif (qaRef.contains(target)) return true;\n\t}\n\n\treturn false;\n};\n","import * as actions from \"./actions\";\nimport * as constants from \"./constants\";\nimport * as actionTypes from \"./actionTypes\";\nimport reducer from \"./reducer\";\nimport * as selectors from \"./selectors\";\nimport * as components from \"./components\";\nimport * as utils from \"./utils\";\n\nexport default { actions, actionTypes, constants, components, reducer, selectors, utils };\n","import { Dispatch } from \"redux\";\nimport focus from \"../../focus\";\nimport display from \"../../display\";\nimport creation from \"../../creation\";\nimport { UserFocus } from \"../../focus/model\";\n\ntype KeyActionMap = { [key: string]: any };\n\ntype KeyEventDispatcher = (event: KeyboardEvent, dispatch: any, state?: any) => void;\n\nconst keyEventDispatcher = (keyMap: KeyActionMap) => (event: KeyboardEvent, dispatch: any) => {\n\tconst action = keyMap[event.key];\n\tif (action) {\n\t\tevent.preventDefault();\n\t\tdispatch(action);\n\t}\n};\n\nconst pageControlKeyMap: KeyActionMap = {\n\tArrowLeft: display.actions.previousPage(),\n\tArrowRight: display.actions.nextPage(),\n};\n\nconst contextMenuControlKeyMap: KeyActionMap = {\n\tt: creation.actions.toggleContextMenu(),\n};\n\nconst selectionFocusKeyMap = {\n\t...pageControlKeyMap,\n\t...contextMenuControlKeyMap,\n};\n\nconst selectionFocusDispatcher = keyEventDispatcher(selectionFocusKeyMap);\n\nconst contextMenuFocusKeyMap = { ...contextMenuControlKeyMap };\nconst contextMenuFocusDispatcher = keyEventDispatcher(contextMenuFocusKeyMap);\n\nconst doNothing = (event: any, dispatch: any) => {};\n\nconst focusDispatcherMap: { [focus in UserFocus]: KeyEventDispatcher } = {\n\tSELECTION: selectionFocusDispatcher,\n\tCONTEXT_MENU: contextMenuFocusDispatcher,\n\tEDITOR: doNothing,\n\tCONTROL: doNothing,\n\tEDITOR_CONTROL: doNothing,\n};\n\nexport const keyDownControl = (event: KeyboardEvent) => {\n\treturn (dispatch: Dispatch | any, getState: Function) => {\n\t\tconst state = getState();\n\t\tconst userFocus = focus.selectors.getFocus(state);\n\t\tconst dispatcher = focusDispatcherMap[userFocus];\n\n\t\tdispatcher(event, dispatch, state);\n\t};\n};\n","import { connect } from \"react-redux\";\nimport { useEventListener } from \"../hooks/useEventListener\";\nimport { keyDownControl } from \"../services/keyboardControl\";\nimport { mouseDownControl, mouseUpControl } from \"../services/mouseControl\";\n\nfunction Control({\n\tkeyDownControl,\n\tmouseDownControl,\n\tmouseUpControl,\n}: {\n\tkeyDownControl: (event: KeyboardEvent) => void;\n\tmouseDownControl: (event: MouseEvent) => void;\n\tmouseUpControl: (event: MouseEvent) => void;\n}) {\n\tuseEventListener(\"keydown\", keyDownControl);\n\tuseEventListener(\"mousedown\", mouseDownControl);\n\tuseEventListener(\"mouseup\", mouseUpControl);\n\treturn null;\n}\n\nexport const ControlContainer = connect(\n\t() => {\n\t\treturn {};\n\t},\n\t{\n\t\tkeyDownControl,\n\t\tmouseDownControl,\n\t\tmouseUpControl,\n\t}\n)(Control);\n","import creation from \"../../creation\";\nimport focus from \"../../focus\";\nimport cards from \"../../cards\";\nimport river from \"../../river\";\n\nexport const mouseDownControl = (event: MouseEvent) => {\n\treturn (dispatch: any, getState: Function) => {\n\t\tconst state = getState();\n\t\t// the menu-ref is used for all drop-down menus, so this closes all of them\n\t\tconst clickOutSideOfMenu = !creation.utils.contextMenuContainsTargetNode(state, event);\n\t\tif (clickOutSideOfMenu) {\n\t\t\tdispatch(cards.actions.tryResetSourceCard());\n\t\t\tdispatch(creation.actions.closeContextMenu());\n\t\t}\n\t};\n};\n\nexport const mouseUpControl = (event: MouseEvent) => {\n\treturn (dispatch: any, getState: Function) => {\n\t\tconst selection = document.getSelection();\n\t\tif (selection) {\n\t\t\tconst selectedStr = selection.toString();\n\t\t\tif (selectedStr !== \"\") {\n\t\t\t\tconst state = getState();\n\t\t\t\tconst goalCard = cards.selectors.getGoalCard(state);\n\t\t\t\tconst userFocus = focus.selectors.getFocus(state);\n\n\t\t\t\tconst shouldGrab = userFocus === \"EDITOR\" || userFocus === \"SELECTION\";\n\n\t\t\t\tif (goalCard && shouldGrab) {\n\t\t\t\t\t// this is the dispatch for the grab for field button\n\t\t\t\t\t//(which has been pressed before the mouse-up if goalCard is not null), here we actually update the goal card\n\n\t\t\t\t\t//TODO-RC: what if another card is the source? if userFocus === \"EDITOR\" it is from another card\n\t\t\t\t\t//We actually want to copy that origin or get the new origin, if we select from the document\n\t\t\t\t\tdispatch(\n\t\t\t\t\t\tcards.actions.updateCardContent(\n\t\t\t\t\t\t\tselectedStr,\n\t\t\t\t\t\t\tgoalCard.cardID,\n\t\t\t\t\t\t\tgoalCard.creationType,\n\t\t\t\t\t\t\t\"REPLACE\",\n\t\t\t\t\t\t\tgoalCard.origin\n\t\t\t\t\t\t)\n\t\t\t\t\t);\n\t\t\t\t\tdispatch(cards.actions.resetGoalCard());\n\t\t\t\t} else {\n\t\t\t\t\t// this is the dispatch for the ContextMenu\n\t\t\t\t\tif (userFocus === \"SELECTION\") {\n\t\t\t\t\t\t//if the user is focused on the document, the push-to river should always be the active=page-wise river\n\t\t\t\t\t\tdispatch(river.actions.setPushToRiver(river.selectors.getActiveRiverMakeUpID(state)));\n\t\t\t\t\t\tdispatch(creation.actions.selectedParent(selection.anchorNode?.parentNode as HTMLSpanElement));\n\t\t\t\t\t\tdispatch(creation.actions.updateManuallySelectedString(selectedStr));\n\t\t\t\t\t\tdispatch(creation.actions.updateSelectionPosition(event.x, event.y));\n\t\t\t\t\t\tdispatch(creation.actions.openContextMenu());\n\t\t\t\t\t}\n\n\t\t\t\t\t// this is the dispatch to prepare for extraction from card\n\t\t\t\t\tif (userFocus === \"EDITOR\") {\n\t\t\t\t\t\tdispatch(creation.actions.updateManuallySelectedString(selectedStr));\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t};\n};\n","import { useState } from \"react\";\nimport SpeakerNotesOutlinedIcon from \"@material-ui/icons/SpeakerNotesOutlined\";\nimport SpeakerNotesTwoToneIcon from \"@material-ui/icons/SpeakerNotesTwoTone\";\nimport React from \"react\";\nimport { IconButton } from \"@material-ui/core\";\nimport { useDispatch } from \"react-redux\";\nimport river from \"../../river\";\n\nexport const ShowRiverButton = () => {\n\tconst [outlined, setOutlined] = useState(true);\n\tconst dispatch = useDispatch();\n\treturn (\n\t\t<IconButton\n\t\t\ttype=\"button\"\n\t\t\tonClick={() => {\n\t\t\t\tdispatch(river.actions.toggleRiverShowState());\n\t\t\t\tsetOutlined(!outlined);\n\t\t\t}}\n\t\t>\n\t\t\t{outlined ? (\n\t\t\t\t<SpeakerNotesOutlinedIcon></SpeakerNotesOutlinedIcon>\n\t\t\t) : (\n\t\t\t\t<SpeakerNotesTwoToneIcon></SpeakerNotesTwoToneIcon>\n\t\t\t)}\n\t\t</IconButton>\n\t);\n};\n","import display from \"../../display\";\nimport focus from \"../../focus\";\nimport React, { ChangeEvent } from \"react\";\nimport { AppBar, Toolbar, Divider, Tabs, Tab, Grid } from \"@material-ui/core\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { ShowRiverButton } from \"./ShowRiverButton\";\n\n//TODO-RC: make dropdown menu (or drawer?) for switching documents (how to make cross-document stapels?), download csv for Anki / json for loading, loading option\n//TODO-NICE: save PDF somehow\nexport const ControlBar = () => {\n\tconst dispatch = useDispatch();\n\tconst displayFocus = useSelector(focus.selectors.getDisplayFocus);\n\n\tconst value = displayFocus === \"ACTIVE_RIVER\" ? 0 : 1;\n\n\tconst handleChange = (_: ChangeEvent<{}>, newValue: number) => {\n\t\tdispatch(\n\t\t\tnewValue === 0\n\t\t\t\t? focus.actions.updateDisplayFocus(\"ACTIVE_RIVER\")\n\t\t\t\t: focus.actions.updateDisplayFocus(\"SUMMARY_RIVER\")\n\t\t);\n\t};\n\n\tconst totalPages = useSelector(display.selectors.getTotalPages);\n\treturn (\n\t\t<Grid\n\t\t\titem\n\t\t\tonMouseEnter={() => {\n\t\t\t\tdispatch(focus.actions.tryUpdateFocus(\"CONTROL\"));\n\t\t\t}}\n\t\t>\n\t\t\t<AppBar>\n\t\t\t\t<Toolbar variant=\"dense\">\n\t\t\t\t\t<Tabs value={value} onChange={handleChange}>\n\t\t\t\t\t\t<Tab label=\"ActiveRiver\" />\n\t\t\t\t\t\t<Tab label=\"SummaryRiver\" />\n\t\t\t\t\t</Tabs>\n\t\t\t\t\t<Divider orientation=\"vertical\" flexItem />\n\t\t\t\t\t{totalPages && <display.components.PageChooser></display.components.PageChooser>}\n\t\t\t\t\t{totalPages && <display.components.PreviousButton></display.components.PreviousButton>}\n\t\t\t\t\t{totalPages && <display.components.NextButton></display.components.NextButton>}\n\t\t\t\t\t<Divider orientation=\"vertical\" flexItem />\n\t\t\t\t\t{value === 0 && <ShowRiverButton></ShowRiverButton>}\n\t\t\t\t\t{value === 0 && <display.components.ShowMaterialButton></display.components.ShowMaterialButton>}\n\t\t\t\t</Toolbar>\n\t\t\t</AppBar>\n\t\t</Grid>\n\t);\n};\n","import * as components from \"./components\";\n\nexport default { components };\n","import React from \"react\";\nimport Grid from \"@material-ui/core/Grid\";\nimport control from \"../modules/control\";\nimport creation from \"../modules/creation\";\nimport river from \"../modules/river\";\nimport { makeStyles, Theme, createStyles, useScrollTrigger, Zoom, Toolbar, Fab } from \"@material-ui/core\";\nimport KeyboardArrowUpIcon from \"@material-ui/icons/KeyboardArrowUp\";\n\n//TODO: make show/hide depdendant on tab, also Page choice, control-bar dependant on tab\n\nconst useStyles = makeStyles((theme: Theme) =>\n\tcreateStyles({\n\t\troot: {\n\t\t\tposition: \"fixed\",\n\t\t\tbottom: theme.spacing(2),\n\t\t\tright: theme.spacing(2),\n\t\t},\n\t})\n);\n\nfunction ScrollTop(props: any) {\n\tconst { children } = props;\n\tconst classes = useStyles();\n\tconst trigger = useScrollTrigger({\n\t\tdisableHysteresis: true,\n\t\tthreshold: 100,\n\t});\n\n\tconst handleClick = (event: React.MouseEvent<HTMLDivElement>) => {\n\t\tconst anchor = ((event.target as HTMLDivElement).ownerDocument || document).querySelector(\"#back-to-top-anchor\");\n\n\t\tif (anchor) {\n\t\t\tanchor.scrollIntoView({ behavior: \"smooth\", block: \"center\" });\n\t\t}\n\t};\n\n\treturn (\n\t\t<Zoom in={trigger}>\n\t\t\t<div onClick={handleClick} role=\"presentation\" className={classes.root}>\n\t\t\t\t{children}\n\t\t\t</div>\n\t\t</Zoom>\n\t);\n}\n\nexport function ReaderScene() {\n\treturn (\n\t\t<div>\n\t\t\t<control.components.ControlContainer></control.components.ControlContainer>\n\t\t\t<Grid container justify=\"center\" direction=\"column\" alignItems=\"stretch\" spacing={1}>\n\t\t\t\t<control.components.ControlBar></control.components.ControlBar>\n\t\t\t\t<Toolbar id=\"back-to-top-anchor\" />\n\n\t\t\t\t<river.components.ActiveRiverView></river.components.ActiveRiverView>\n\t\t\t\t<river.components.SummaryRiverView></river.components.SummaryRiverView>\n\t\t\t</Grid>\n\t\t\t<ScrollTop>\n\t\t\t\t<Fab color=\"secondary\" size=\"small\" aria-label=\"scroll back to top\">\n\t\t\t\t\t<KeyboardArrowUpIcon />\n\t\t\t\t</Fab>\n\t\t\t</ScrollTop>\n\t\t\t<creation.components.SourceMenuContainer></creation.components.SourceMenuContainer>\n\t\t\t<creation.components.ContextMenuContainer></creation.components.ContextMenuContainer>\n\t\t</div>\n\t);\n}\n","import { createStore } from \"redux\";\nimport { applyMiddleware } from \"redux\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport thunk from \"redux-thunk\";\nimport { combineReducers } from \"redux\";\nimport focus from \"./modules/focus\";\nimport creation from \"./modules/creation\";\nimport river from \"./modules/river\";\nimport display from \"./modules/display\";\nimport cards from \"./modules/cards\";\nimport { persistStore, persistReducer, createTransform } from \"redux-persist\";\nimport { CreationData } from \"./modules/creation/model\";\nimport { createRef } from \"react\";\nimport { DisplayData } from \"./modules/display/model\";\nimport storage from \"redux-persist/lib/storage\"; // defaults to localStorage for web\n\nconst rootReducer = combineReducers({\n\t[focus.constants.NAME]: focus.reducer,\n\t[creation.constants.NAME]: creation.reducer,\n\t[river.constants.NAME]: river.reducer,\n\t[display.constants.NAME]: display.reducer,\n\t[cards.constants.NAME]: cards.reducer,\n});\n\nconst stateSanitizer = (state: any) => {\n\treturn state.displayData.pdf ? { ...state, displayData: { ...state.displayData, pdf: \"PDF_FILE_IS_HERE\" } } : state;\n};\n\nconst creationTransform = createTransform(\n\t(inboundState: CreationData) => {\n\t\treturn { ...inboundState, menuRef: null, qaRefs: inboundState.qaRefs.map((_) => null), selectedParentSpan: null };\n\t},\n\t(outboundState): CreationData => {\n\t\treturn { ...outboundState, menuRef: createRef(), qaRefs: outboundState.qaRefs.map((_) => createRef()) };\n\t},\n\t{ whitelist: [creation.constants.NAME] }\n);\n\n//TODO-NICE: find way to save PDF in browser, maybe manually use indexeddb and use that in transform?\n// const reader = new FileReaderSync();\n\n// function readFileAsync(file: File) {\n// \treturn new Promise((resolve) => {\n// \t\treader.onload = () => {\n// \t\t\tresolve(reader.result);\n// \t\t};\n// \t\treader.onerror = () => resolve(null);\n\n// \t\treader.readAsDataURL(file);\n// \t});\n// }\n\nconst displayTransform = createTransform(\n\t(inboundState: DisplayData) => {\n\t\tlet pdf = null;\n\t\t// if (inboundState.pdf) {\n\t\t// \tpdf = await readFileAsync(inboundState.pdf);\n\t\t// }\n\t\tconst result = { ...inboundState, documentRef: null, materialData: null, pdf };\n\t\treturn result;\n\t},\n\t(outboundState): DisplayData => {\n\t\treturn {\n\t\t\t...outboundState,\n\t\t\tpdf: undefined,\n\t\t\tdocumentRef: createRef(),\n\t\t\tmaterialData: { materialDataTimeStamp: -Infinity },\n\t\t};\n\t},\n\t{ whitelist: [display.constants.NAME] }\n);\n\nconst persistConfig = {\n\tkey: \"root\",\n\tstorage, //: storage(\"ClayMemory\"),\n\ttransforms: [creationTransform, displayTransform],\n};\n\nconst persistedReducer = persistReducer(persistConfig, rootReducer);\n\nconst composeEnhancers = composeWithDevTools({ stateSanitizer });\nconst enhancer = composeEnhancers(applyMiddleware(thunk));\n\nexport const store = createStore(persistedReducer, enhancer);\n\nexport const persistor = persistStore(store);\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { ReaderScene } from \"./scenes/ReaderScene\";\nimport { Provider } from \"react-redux\";\nimport { store, persistor } from \"./store\";\nimport { PersistGate } from \"redux-persist/es/integration/react\";\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<Provider store={store}>\n\t\t\t<PersistGate loading={null} persistor={persistor}>\n\t\t\t\t<ReaderScene></ReaderScene>\n\t\t\t</PersistGate>\n\t\t</Provider>\n\t</React.StrictMode>,\n\tdocument.getElementById(\"root\")\n);\n","function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 73;"],"sourceRoot":""}