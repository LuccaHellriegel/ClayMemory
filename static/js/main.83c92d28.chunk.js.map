{"version":3,"sources":["modules/display/constants.ts","modules/display/actionTypes.ts","modules/display/selectors.ts","shared/utils.ts","modules/display/services/span.ts","modules/display/services/materialData.ts","modules/display/actions.ts","modules/display/components/PDFDocument/PDFDocument.tsx","modules/display/components/PDFUpload.tsx","modules/display/components/NavigationButtons.tsx","modules/display/components/ShowMaterialButton.tsx","modules/display/components/PageChooser/PageChooser.tsx","modules/display/reducer.ts","modules/display/index.ts","modules/control/hooks/useEventListener.tsx","modules/focus/constants.ts","modules/focus/actionTypes.ts","modules/focus/selectors.ts","modules/focus/actions.ts","modules/focus/reducer.ts","modules/focus/index.ts","modules/creation/constants.ts","modules/creation/actionTypes.ts","modules/cards/services/config.ts","modules/cards/constants.ts","modules/cards/actionTypes.ts","modules/cards/selectors.ts","modules/cards/actions.ts","modules/cards/reducer.ts","modules/cards/index.ts","modules/river/constants.ts","modules/river/selectors.ts","modules/river/components/HybridCardField.tsx","modules/river/components/DeleteCardButton.tsx","modules/river/components/JumpToOriginButton.tsx","modules/river/components/GrabForFieldButton.tsx","modules/river/components/ExtractFromFieldButton.tsx","modules/river/components/Card.tsx","modules/river/components/toCardGridItemsWithDividers.tsx","modules/river/actionTypes.ts","modules/river/actions.ts","modules/river/components/CardRiverAccordion.tsx","modules/river/components/ChildCardRiver.tsx","modules/river/components/ActiveCardRiver.tsx","modules/river/components/ShowRiverButton.tsx","modules/river/components/SummaryRiver.tsx","modules/river/model.ts","modules/river/reducer.ts","modules/river/index.ts","modules/creation/selectors.ts","modules/creation/actions.ts","modules/creation/reducer.ts","modules/creation/components/CardConfigItem.tsx","modules/creation/components/ContextMenu.tsx","modules/creation/components/SourceMenu.tsx","modules/creation/utils.ts","modules/creation/index.ts","modules/control/services/keyboardControl.ts","modules/control/components/Control.tsx","modules/control/services/mouseControl.ts","modules/control/components/ControlBar.tsx","modules/control/index.ts","scenes/ReaderScene.tsx","store.ts","index.tsx","../node_modules/pdfjs-dist/build sync"],"names":["NAME","PDF_UPLOADED","MATERIAL_LOADED","DISPLAY_STATUS","PAGE_UPDATE","ZOOM_QUEUE","MATERIAL_DATA","getAll","state","getPDF","createSelector","pdf","getRenderCritialData","currentPage","documentRef","getTotalPages","totalPages","getCurrentPage","getPageControlData","getDocumentRef","getMaterialData","materialData","getTimeStamp","materialDataTimeStamp","getMaterialSpans","materialSpans","getSpanIndex","span","indexOf","getMaterialBoundingRects","materialBoundingRects","getDataExists","timestamp","getDisplayStatus","displayStatus","displayStatusIsShow","status","getZoomQueue","zoomQueue","incrementer","counter","curCounter","expandSpan","rect","getBoundingClientRect","container","startingSpans","Array","from","querySelectorAll","length","expandedSpans","spans","boundingRects","exSpan","push","splitExpandedSpans","map","expandSpans","sort","exSpan2","y","materialUploaded","event","dispatch","files","target","type","t","payload","materialLoaded","tryInterval","tries","ms","func","increment","timeout","setInterval","clearInterval","captureMaterialData","getState","current","startTime","Date","now","curMaterialGroupData","emptyZoomQueue","setPage","page","pageCorrections","newPage","movePage","nextPage","previousPage","toggleDisplayState","displayState","setZoomQueue","spanIndex","zoomToCardOrigin","originSpan","focus","scrollIntoView","behavior","block","inline","pdfjs","GlobalWorkerOptions","workerSrc","version","options","cMapUrl","cMapPacked","PDFDocumentContainer","connect","parentSize","useDispatch","file","onLoadSuccess","numPages","inputRef","onItemClick","pageNumber","parseInt","width","onRenderSuccess","document","forEach","layer","style","top","left","transform","PDFUploadContainer","onUpload","onChange","accept","PreviousButton","IconButton","onClick","NextButton","ShowMaterialButton","useState","outlined","setOutlined","nonDigitRegEx","PageChooser","useSelector","error","value","toString","userInput","setState","Typography","variant","TextField","onKeyDown","key","preventDefault","submittedValue","possiblePage","trim","match","asInt","validatePageChoice","initialState","createRef","pageSpans","Infinity","actions","actionTypes","components","constants","reducer","selectors","useEventListener","eventName","handler","savedHandler","useRef","useEffect","eventListener","addEventListener","removeEventListener","FOCUS_UPDATE","getFocus","updateFocus","tryUpdateFocus","toggleContextMenuFocus","display","TOGGLE_CONTEXT_MENU","CLOSE_CONTEXT_MENU","OPEN_CONTEXT_MENU","SELECTED_STRING","SELECTED_PARENT","SELECTION_POSITION","updateContentStrFunctions","REPLACE","_","newStr","APPEND","oldStr","creationFunctions","NOTE","oldConfig","partialUpdateFunction","content","Q","q","A","a","contentStringToConfig","contentStr","creationType","updateType","currentCard","createPartialUpdateContentStrFunction","CARD_UPDATE","CARD_PUSH","CARD_REMOVE","CARD_GOAL","CARD_SOURCE","cards","getLastCardIDNumber","lastCardIDNumber","getCards","getGoalCard","goalCard","getSourceCard","sourceCard","cardPush","cardPayload","card","cardID","cardUpdate","updateCardContent","contentString","origin","config","pushCardContent","removeCard","setGoalCard","cardConfig","resetGoalCard","setSourceCard","x","resetSourceCard","tryResetSourceCard","intialState","services","cardObj","getRiverMakeUps","riverMakeUps","getActiveRiverMakeUpID","activeRiverMakeUpID","getPushToRiver","pushToRiverID","getPushToRiverMakeUp","makeUps","id","getActiveRiverMakeUp","getPushToRiverCardIDs","makeUp","cardIDs","getPushToRiverCards","makeUpCardIDs","getActiveRiverCardIDs","getActiveRiverCards","getRiverShowState","riverShowState","riverShowStateIsShow","HybridCardField","storeValue","saveChanges","rest","mutableValue","onMouseEnter","multiline","onBlur","DeleteCardButton","JumpToOriginButton","cardOrigin","GrabForFieldButton","isGoalCard","ExtractFromFieldButton","clientX","clientY","NoteCard","label","backgroundColor","InputLabelProps","color","QACard","Grid","direction","spacing","item","Card","riverID","GridDivider","Divider","RIVER_SHOW_STATE","RIVER_PUSH_STATE","toggleRiverShowState","setPushToRiver","trySetPushToRiver","CardRiverAccordion","gridItems","summary","elevation","setElevation","Accordion","defaultExpanded","onMouseLeave","AccordionSummary","AccordionDetails","justify","alignItems","ChildCardRiver","riverCards","useMemo","reduce","prev","index","arr","toCardGridItemsWithDividers","ActiveCardRiver","ShowRiverButton","SummaryRiver","cardConfigs","Object","values","Paper","align","MozUserSelect","WebkitUserSelect","msUserSelect","pageNumberToRiverMakeUpID","active","lastRiverIDNumber","emptyCardRiver","updateStateWithMakeUps","updatedState","deactivateActiveCardRiver","removeCardFromRivers","fromEntries","entries","entry","filter","riverMakeUp","activeRiver","oldRiver","getContextMenuState","open","getContextMenuRef","menuRef","getContextMenuQARefs","qaRefs","getCurrentSelectionPosition","selectionPosition","getContextMenuInitData","river","position","getCurrentSelectedString","manuallySelectedString","getCurrentSelectedParent","selectedParentSpan","toggleContextMenu","closeContextMenu","openContextMenu","triggerSelectionGrab","selectedString","isUpdate","undefined","selectedParent","newOrigin","updateManuallySelectedString","str","resetManuallySelectedString","updateSelectionPosition","creationData","SingleOptionItem","dispatchRiver","MenuItem","QAOptionItem","qaRef","parentMenuOpen","ref","CardConfigItem","NewQACard","NewNoteCard","ContextMenuContainer","openState","qaRefIndex","anchorPosition","Menu","keepMounted","anchorReference","SourceMenuContainer","contextMenuContainsTargetNode","refObject","cur","parentNode","querySelector","contains","utils","keyEventDispatcher","keyMap","action","pageControlKeyMap","ArrowLeft","ArrowRight","contextMenuControlKeyMap","creation","doNothing","focusDispatcherMap","SELECTION","CONTEXT_MENU","EDITOR","CONTROL","EDITOR_CONTROL","ControlContainer","keyDownControl","userFocus","dispatcher","mouseDownControl","mouseUpControl","selection","getSelection","selectedStr","anchorNode","console","log","ControlBar","AppBar","Toolbar","orientation","flexItem","ReaderSceneRiverColumn","hidden","ReaderSceneMaterialColumnWithSize","withSize","monitorHeight","noPlaceholder","size","ReaderScene","showMaterial","showRiver","control","rootReducer","combineReducers","creationTransform","createTransform","inboundState","outboundState","whitelist","displayTransform","persistConfig","storage","transforms","persistedReducer","persistReducer","enhancer","composeWithDevTools","stateSanitizer","displayData","composeEnhancers","applyMiddleware","thunk","store","createStore","persistor","persistStore","ReactDOM","render","StrictMode","loading","getElementById","webpackEmptyContext","req","e","Error","code","keys","resolve","module","exports"],"mappings":"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","file":"static/js/main.83c92d28.chunk.js","sourcesContent":["export const NAME = \"displayData\";\n","import { NAME } from \"./constants\";\n\nexport const PDF_UPLOADED = NAME + \"/PDF_UPLOADED\";\nexport const MATERIAL_LOADED = NAME + \"/MATERIAL_LOADED\";\nexport const DISPLAY_STATUS = NAME + \"/DISPLAY_STATUS\";\nexport const PAGE_UPDATE = NAME + \"/PAGE_UPDATE\";\nexport const ZOOM_QUEUE = NAME + \"/ZOOM_QUEUE\";\nexport const MATERIAL_DATA = NAME + \"/MATERIAL_DATA\";\n","import { createSelector } from \"reselect\";\nimport { DisplayData, MaterialData, MaterialGroupData } from \"./model\";\nimport { NAME } from \"./constants\";\n\nexport const getAll = (state: any) => state[NAME];\n\nexport const getPDF = createSelector(getAll, (state: DisplayData) => {\n\treturn { pdf: state.pdf };\n});\n\nexport const getRenderCritialData = createSelector(getAll, (state: DisplayData) => {\n\treturn {\n\t\tpdf: state.pdf,\n\t\tcurrentPage: state.currentPage,\n\t\tdocumentRef: state.documentRef,\n\t};\n});\n\nexport const getTotalPages = createSelector(getAll, (state: DisplayData) => state.totalPages);\n\nexport const getCurrentPage = createSelector(getAll, (state: DisplayData) => state.currentPage);\n\nexport const getPageControlData = createSelector(\n\tgetTotalPages,\n\tgetCurrentPage,\n\t(totalPages: number | undefined, currentPage: number) => {\n\t\treturn { currentPage, totalPages };\n\t}\n);\n\nexport const getDocumentRef = createSelector(getAll, (state: DisplayData) => state.documentRef);\n\nexport const getMaterialData = createSelector(getAll, (state: DisplayData) => state.materialData);\n\nexport const getTimeStamp = createSelector(getMaterialData, (state: MaterialData) => state.materialDataTimeStamp);\n\nexport const getMaterialSpans = createSelector(\n\tgetMaterialData as (state: any) => MaterialGroupData,\n\t(state: MaterialGroupData) => state.materialSpans\n);\n\nexport const getSpanIndex = (state: any, span: HTMLSpanElement) => {\n\tconst spans = getMaterialSpans(state);\n\treturn spans.indexOf(span);\n};\n\nexport const getMaterialBoundingRects = createSelector(\n\tgetMaterialData as (state: any) => MaterialGroupData,\n\t(state: MaterialGroupData) => state.materialBoundingRects\n);\n\nexport const getDataExists = createSelector(getTimeStamp, (timestamp) => timestamp > 0);\n\nexport const getDisplayStatus = createSelector(getAll, (state: DisplayData) => state.displayStatus);\n\nexport const displayStatusIsShow = createSelector(getDisplayStatus, (status) => status === \"SHOW\");\n\nexport const getZoomQueue = createSelector(getAll, (state: DisplayData) => state.zoomQueue);\n","export const incrementer = () => {\n\tlet counter = 0;\n\treturn () => {\n\t\tconst curCounter = counter;\n\t\tcounter++;\n\t\treturn curCounter;\n\t};\n};\n","export const splitExpandedSpans = (expandedSpans: ExpandedSpan[]) => {\n\tconst spans = [];\n\tconst boundingRects = [];\n\n\tfor (const exSpan of expandedSpans) {\n\t\tspans.push(exSpan.span);\n\t\tboundingRects.push(exSpan.rect);\n\t}\n\n\treturn { spans, boundingRects };\n};\n\nexport const sortExpandedSpansAccordingToX = (expandedSpans: ExpandedSpan[]) =>\n\texpandedSpans.sort((exSpan, exSpan2) => exSpan.rect.x - exSpan2.rect.x);\n\nexport const sortExpandedSpansAccordingToY = (expandedSpans: ExpandedSpan[]) =>\n\texpandedSpans.sort((exSpan, exSpan2) => exSpan.rect.y - exSpan2.rect.y);\n\ntype ExpandedSpan = { span: HTMLSpanElement; rect: DOMRect };\n\nexport const expandSpans = (spans: HTMLSpanElement[]) => spans.map(expandSpan);\n\nconst expandSpan = (span: HTMLSpanElement): ExpandedSpan => {\n\treturn { span, rect: span.getBoundingClientRect() };\n};\n","import { MaterialGroupData } from \"../model\";\nimport { expandSpans, sortExpandedSpansAccordingToY, splitExpandedSpans } from \"./span\";\n\nexport const materialData = (container: HTMLDivElement): MaterialGroupData | null => {\n\t// assumes all spans inside the document are relevant (potentially multiple pages)\n\tconst startingSpans = Array.from(container.querySelectorAll(\"span\"));\n\tif (startingSpans.length === 0) return null;\n\n\tconst { spans, boundingRects } = splitExpandedSpans(sortExpandedSpansAccordingToY(expandSpans(startingSpans)));\n\n\treturn {\n\t\tmaterialSpans: spans,\n\t\tmaterialBoundingRects: boundingRects,\n\t};\n};\n","import { ChangeEvent, RefObject } from \"react\";\nimport { Dispatch } from \"redux\";\nimport * as t from \"./actionTypes\";\nimport { PageMove, MaterialData } from \"./model\";\nimport { getPageControlData, getDisplayStatus, getZoomQueue, getTimeStamp, getMaterialSpans } from \"./selectors\";\nimport { incrementer } from \"../../shared/utils\";\nimport { materialData } from \"./services/materialData\";\n\nexport const materialUploaded = (event: ChangeEvent<HTMLInputElement>) => {\n\treturn (dispatch: Dispatch) => {\n\t\tconst files = event.target.files;\n\t\tconst pdf = files ? files[0] : null;\n\t\tif (pdf) dispatch({ type: t.PDF_UPLOADED, payload: pdf });\n\t};\n};\n\nexport const materialLoaded = (totalPages: number) => {\n\treturn { type: t.MATERIAL_LOADED, payload: totalPages };\n};\n\nexport const tryInterval = (tries: number, ms: number, func: () => boolean) => {\n\tconst increment = incrementer();\n\tconst timeout = setInterval(() => {\n\t\tif (increment() > tries) {\n\t\t\tclearInterval(timeout);\n\t\t\treturn;\n\t\t}\n\n\t\tif (func()) clearInterval(timeout);\n\t}, ms);\n};\n\n// text-layer is not really guaranteed to be rendered on render \"success\",\n// so we use this ugly \"try ten times\" approach\nexport function captureMaterialData(documentRef: RefObject<any>) {\n\treturn (dispatch: any, getState: Function) => {\n\t\tconst state = getState();\n\t\tconst container = documentRef.current;\n\t\tif (container) {\n\t\t\t// TODO-NICE: still possibility of race-condition,\n\n\t\t\tconst startTime = Date.now();\n\n\t\t\t// try once before going into intervals (most times once should work)\n\t\t\tconst curMaterialGroupData = materialData(container as HTMLDivElement);\n\t\t\tif (curMaterialGroupData && getTimeStamp(state) < startTime) {\n\t\t\t\tconst payload: MaterialData = {\n\t\t\t\t\t...curMaterialGroupData,\n\t\t\t\t\tmaterialDataTimeStamp: startTime,\n\t\t\t\t};\n\t\t\t\tdispatch({ type: t.MATERIAL_DATA, payload });\n\t\t\t\tdispatch(emptyZoomQueue());\n\t\t\t} else {\n\t\t\t\ttryInterval(10, 20, () => {\n\t\t\t\t\tconst curMaterialGroupData = materialData(container as HTMLDivElement);\n\t\t\t\t\tif (curMaterialGroupData && getTimeStamp(getState()) < startTime) {\n\t\t\t\t\t\tconst payload: MaterialData = {\n\t\t\t\t\t\t\t...curMaterialGroupData,\n\t\t\t\t\t\t\tmaterialDataTimeStamp: startTime,\n\t\t\t\t\t\t};\n\t\t\t\t\t\tdispatch({ type: t.MATERIAL_DATA, payload });\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t}\n\t\t\t\t\treturn false;\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t};\n}\n\n// assumes outside validation/correction\nexport const setPage = (page: number) => {\n\treturn { type: t.PAGE_UPDATE, payload: page };\n};\n\nconst pageCorrections = {\n\tADD: (newPage: number, totalPages: number) => (newPage === totalPages + 1 ? 1 : newPage),\n\tREMOVE: (newPage: number, totalPages: number) => (newPage === 0 ? totalPages : newPage),\n};\n\n//TODO-PERF: maybe hide all rendered pages but not shown instead of re-rendering for faster switching?\nexport const movePage = (type: PageMove) => {\n\treturn (dispatch: Dispatch, getState: Function) => {\n\t\tconst { currentPage, totalPages } = getPageControlData(getState());\n\t\tif (totalPages) {\n\t\t\tswitch (type) {\n\t\t\t\tcase \"NEXT\":\n\t\t\t\t\tdispatch({ type: t.PAGE_UPDATE, payload: pageCorrections[\"ADD\"](currentPage + 1, totalPages) });\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"PREVIOUS\":\n\t\t\t\t\tdispatch({ type: t.PAGE_UPDATE, payload: pageCorrections[\"REMOVE\"](currentPage - 1, totalPages) });\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t};\n};\nexport const nextPage = () => movePage(\"NEXT\");\nexport const previousPage = () => movePage(\"PREVIOUS\");\n\nexport const toggleDisplayState = () => {\n\treturn (dispatch: Dispatch, getState: Function) => {\n\t\tconst displayState = getDisplayStatus(getState()) === \"SHOW\" ? \"HIDE\" : \"SHOW\";\n\n\t\tdispatch({ type: t.DISPLAY_STATUS, payload: displayState });\n\t};\n};\n\nexport const setZoomQueue = (spanIndex: number | null) => {\n\treturn { type: t.ZOOM_QUEUE, payload: spanIndex };\n};\n\nexport const zoomToCardOrigin = (spanIndex: number, page: number) => {\n\treturn (dispatch: Dispatch) => {\n\t\tdispatch(setPage(page));\n\t\tdispatch(setZoomQueue(spanIndex));\n\t};\n};\n\nexport const emptyZoomQueue = () => {\n\treturn (dispatch: Dispatch, getState: Function) => {\n\t\tconst state = getState();\n\t\tconst spanIndex = getZoomQueue(state);\n\t\tif (spanIndex) {\n\t\t\tconst originSpan = getMaterialSpans(state)[spanIndex];\n\t\t\toriginSpan.focus();\n\t\t\toriginSpan.scrollIntoView({ behavior: \"smooth\", block: \"center\", inline: \"center\" });\n\n\t\t\tdispatch(setZoomQueue(null));\n\t\t}\n\t};\n};\n","import \"./PDFDocument.css\";\nimport \"./AnnotationLayer.css\";\nimport React, { RefObject } from \"react\";\nimport { pdfjs, Document, Page } from \"react-pdf\";\nimport { connect, useDispatch } from \"react-redux\";\nimport { materialLoaded, setPage, captureMaterialData } from \"../../actions\";\nimport { getRenderCritialData } from \"../../selectors\";\npdfjs.GlobalWorkerOptions.workerSrc = `//cdnjs.cloudflare.com/ajax/libs/pdf.js/${pdfjs.version}/pdf.worker.js`;\n\nfunction removeTextLayerOffset() {\n\tconst textLayers = document.querySelectorAll(\".react-pdf__Page__textContent\");\n\ttextLayers.forEach((layer) => {\n\t\tconst { style }: any = layer;\n\t\tstyle.top = \"0\";\n\t\tstyle.left = \"0\";\n\t\tstyle.transform = \"\";\n\t});\n}\n\nconst options = {\n\tcMapUrl: \"cmaps/\",\n\tcMapPacked: true,\n};\n\nfunction PDFDocument({\n\tparentSize,\n\tpdf,\n\tcurrentPage,\n\tmaterialLoaded,\n\tcaptureMaterialData,\n\tdocumentRef,\n}: {\n\tparentSize: any;\n\tpdf: File | undefined;\n\tcurrentPage: number;\n\tmaterialLoaded: (numPages: number) => void;\n\tcaptureMaterialData: Function;\n\tdocumentRef: RefObject<any>;\n}) {\n\tconst dispatch = useDispatch();\n\treturn (\n\t\t<Document\n\t\t\tfile={pdf}\n\t\t\toptions={options}\n\t\t\tonLoadSuccess={({ numPages }) => {\n\t\t\t\tmaterialLoaded(numPages);\n\t\t\t}}\n\t\t\tinputRef={documentRef}\n\t\t\tonItemClick={({ pageNumber }) => {\n\t\t\t\tdispatch(setPage(parseInt(pageNumber)));\n\t\t\t}}\n\t\t>\n\t\t\t{pdf && (\n\t\t\t\t<Page\n\t\t\t\t\twidth={parentSize.width}\n\t\t\t\t\tpageNumber={currentPage}\n\t\t\t\t\tonRenderSuccess={() => {\n\t\t\t\t\t\tremoveTextLayerOffset();\n\t\t\t\t\t\tcaptureMaterialData(documentRef);\n\t\t\t\t\t}}\n\t\t\t\t/>\n\t\t\t)}\n\t\t</Document>\n\t);\n}\n\nexport const PDFDocumentContainer = connect(getRenderCritialData, {\n\tmaterialLoaded,\n\tcaptureMaterialData,\n})(PDFDocument);\n","import { connect } from \"react-redux\";\nimport React, { ChangeEvent } from \"react\";\nimport { materialUploaded } from \"../actions\";\nimport { getPDF } from \"../selectors\";\n\nfunction PDFUpload({\n\tpdf,\n\tonUpload,\n}: {\n\tpdf: File | undefined;\n\tonUpload: (event: ChangeEvent<HTMLInputElement>) => void;\n}) {\n\treturn pdf ? null : <input onChange={onUpload} type=\"file\" accept=\".pdf\" />;\n}\n\nexport const PDFUploadContainer = connect(getPDF, { onUpload: materialUploaded })(PDFUpload);\n","import React from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { IconButton } from \"@material-ui/core\";\nimport ArrowForwardIosIcon from \"@material-ui/icons/ArrowForwardIos\";\nimport ArrowBackIosIcon from \"@material-ui/icons/ArrowBackIos\";\nimport { nextPage, previousPage } from \"../actions\";\n\nexport const PreviousButton = () => {\n\tconst dispatch = useDispatch();\n\treturn (\n\t\t<IconButton\n\t\t\ttype=\"button\"\n\t\t\tonClick={() => {\n\t\t\t\tdispatch(previousPage());\n\t\t\t}}\n\t\t>\n\t\t\t<ArrowBackIosIcon></ArrowBackIosIcon>\n\t\t</IconButton>\n\t);\n};\n\nexport const NextButton = () => {\n\tconst dispatch = useDispatch();\n\treturn (\n\t\t<IconButton\n\t\t\ttype=\"button\"\n\t\t\tonClick={() => {\n\t\t\t\tdispatch(nextPage());\n\t\t\t}}\n\t\t>\n\t\t\t<ArrowForwardIosIcon></ArrowForwardIosIcon>\n\t\t</IconButton>\n\t);\n};\n","import { useState } from \"react\";\nimport DescriptionOutlinedIcon from \"@material-ui/icons/DescriptionOutlined\";\nimport DescriptionTwoToneIcon from \"@material-ui/icons/DescriptionTwoTone\";\nimport React from \"react\";\nimport { IconButton } from \"@material-ui/core\";\nimport { useDispatch } from \"react-redux\";\nimport { toggleDisplayState } from \"../actions\";\n\nexport const ShowMaterialButton = () => {\n\tconst [outlined, setOutlined] = useState(true);\n\tconst dispatch = useDispatch();\n\n\treturn (\n\t\t<IconButton\n\t\t\ttype=\"button\"\n\t\t\tonClick={() => {\n\t\t\t\tdispatch(toggleDisplayState());\n\t\t\t\tsetOutlined(!outlined);\n\t\t\t}}\n\t\t>\n\t\t\t{outlined ? (\n\t\t\t\t<DescriptionOutlinedIcon></DescriptionOutlinedIcon>\n\t\t\t) : (\n\t\t\t\t<DescriptionTwoToneIcon></DescriptionTwoToneIcon>\n\t\t\t)}\n\t\t</IconButton>\n\t);\n};\n","import React, { useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Typography, TextField } from \"@material-ui/core\";\nimport { setPage } from \"../../actions\";\nimport { getPageControlData } from \"../../selectors\";\n\nconst nonDigitRegEx = /(\\D)/;\n\nexport const validatePageChoice = (possiblePage: string, totalPages: number) => {\n\tif (possiblePage === \"\" || possiblePage.trim().match(nonDigitRegEx) !== null) return false;\n\n\tconst asInt = parseInt(possiblePage);\n\tif (asInt < 1 || totalPages < asInt) return false;\n\n\treturn true;\n};\n\nexport const PageChooser = () => {\n\tconst dispatch = useDispatch();\n\t// parent only renders this component if these values exist\n\tconst { currentPage, totalPages }: { currentPage?: number; totalPages?: number } = useSelector(getPageControlData);\n\n\tconst [state, setState] = useState({\n\t\terror: false,\n\t\tvalue: currentPage?.toString(),\n\t\tuserInput: currentPage?.toString(),\n\t});\n\n\t// with this we can trigger a re-render onChange,\n\t// while making sure that if a new currentPage arrives, we reset the component\n\tif (state.value !== currentPage.toString()) {\n\t\tsetState({ error: false, value: currentPage.toString(), userInput: currentPage.toString() });\n\t}\n\n\treturn (\n\t\t<Typography variant=\"h6\">\n\t\t\t<TextField\n\t\t\t\ttype=\"text\"\n\t\t\t\tvariant=\"filled\"\n\t\t\t\tvalue={state.userInput}\n\t\t\t\tonKeyDown={(event) => {\n\t\t\t\t\tif (event.key === \"Enter\") {\n\t\t\t\t\t\tevent.preventDefault();\n\t\t\t\t\t\tconst submittedValue = (event.target as HTMLFormElement).value;\n\t\t\t\t\t\tif (!state.error) {\n\t\t\t\t\t\t\tdispatch(setPage(parseInt(submittedValue)));\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}}\n\t\t\t\tonChange={(event) => {\n\t\t\t\t\tconst submittedValue = (event.target as HTMLTextAreaElement).value;\n\t\t\t\t\tif (validatePageChoice(submittedValue, totalPages as number)) {\n\t\t\t\t\t\tsetState({ ...state, error: false, userInput: submittedValue });\n\t\t\t\t\t} else {\n\t\t\t\t\t\tsetState({ ...state, error: true, userInput: submittedValue });\n\t\t\t\t\t}\n\t\t\t\t}}\n\t\t\t\terror={state.error}\n\t\t\t/>\n\t\t\tof {totalPages}\n\t\t</Typography>\n\t);\n};\n","import * as t from \"./actionTypes\";\nimport type { DisplayData, DisplayStatus, MaterialGroupData } from \"./model\";\nimport { createRef } from \"react\";\n\nconst initialState: DisplayData = {\n\tdisplayStatus: \"SHOW\",\n\tcurrentPage: 1,\n\tdocumentRef: createRef(),\n\tpageSpans: {},\n\tzoomQueue: null,\n\tmaterialData: { materialDataTimeStamp: -Infinity },\n};\n\nconst displayData = (state = initialState, { type, payload }: { type: string; payload: any }): DisplayData => {\n\tswitch (type) {\n\t\tcase t.PDF_UPLOADED:\n\t\t\treturn { ...state, pdf: payload as File };\n\t\tcase t.MATERIAL_LOADED:\n\t\t\treturn { ...state, totalPages: payload as number };\n\t\tcase t.PAGE_UPDATE:\n\t\t\treturn { ...state, currentPage: payload as number };\n\t\tcase t.DISPLAY_STATUS:\n\t\t\treturn { ...state, displayStatus: payload as DisplayStatus };\n\t\tcase t.MATERIAL_DATA:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tmaterialData: payload,\n\t\t\t\tpageSpans: { ...state.pageSpans, [state.currentPage]: (payload as MaterialGroupData).materialSpans.length - 1 },\n\t\t\t};\n\t\tdefault:\n\t\t\treturn state;\n\t}\n};\n\nexport default displayData;\n","import * as actions from \"./actions\";\nimport * as actionTypes from \"./actionTypes\";\nimport * as components from \"./components\";\nimport * as constants from \"./constants\";\nimport reducer from \"./reducer\";\nimport * as selectors from \"./selectors\";\n\nexport default { actions, actionTypes, components, constants, reducer, selectors };\n","import { useRef, useEffect, MutableRefObject } from \"react\";\n\n// only global eventListener for now\nexport const useEventListener = (eventName: string, handler: any) => {\n\tconst savedHandler: MutableRefObject<Function> = useRef(() => {});\n\n\tuseEffect(() => {\n\t\tsavedHandler.current = handler;\n\t}, [handler]);\n\n\tuseEffect(() => {\n\t\tconst eventListener = (event: Event) => savedHandler.current(event);\n\t\tdocument.addEventListener(eventName, eventListener);\n\t\treturn () => {\n\t\t\tdocument.removeEventListener(eventName, eventListener);\n\t\t};\n\t}, [eventName]);\n};\n","export const NAME = \"userFocus\";\n","import { NAME } from \"./constants\";\n\nexport const FOCUS_UPDATE = NAME + \"/FOCUS_UPDATE\";\n","import { createSelector } from \"reselect\";\nimport { NAME } from \"./constants\";\nimport { FocusState } from \"./model\";\n\nexport const getAll = (state: any) => state[NAME];\n\nexport const getFocus = createSelector(getAll, (state: FocusState) => state.focus);\n","import * as t from \"./actionTypes\";\nimport { UserFocus } from \"./model\";\nimport { Dispatch } from \"redux\";\nimport { getFocus } from \"./selectors\";\nimport display from \"../display\";\n\nexport const updateFocus = (focus: UserFocus) => {\n\treturn { type: t.FOCUS_UPDATE, payload: focus };\n};\n\nexport const tryUpdateFocus = (focus: UserFocus) => {\n\treturn (dispatch: Dispatch, getState: Function) => {\n\t\tif (getFocus(getState()) !== focus) dispatch(updateFocus(focus));\n\t};\n};\n\nexport const toggleContextMenuFocus = () => {\n\treturn (dispatch: Dispatch, getState: Function) => {\n\t\tconst state = getState();\n\t\tif (display.selectors.getDataExists(state)) {\n\t\t\tconst currentFocus = getFocus(getState());\n\t\t\tswitch (currentFocus) {\n\t\t\t\tcase \"CONTEXT_MENU\":\n\t\t\t\t\tdispatch(updateFocus(\"SELECTION\"));\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"SELECTION\":\n\t\t\t\t\tdispatch(updateFocus(\"CONTEXT_MENU\"));\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t};\n};\n","import { FocusState, UserFocus } from \"./model\";\nimport * as t from \"./actionTypes\";\n\nconst initialState: FocusState = { focus: \"CONTROL\" };\n\nconst focus = (state = initialState, { type, payload }: { type: string; payload: any }): FocusState => {\n\tswitch (type) {\n\t\tcase t.FOCUS_UPDATE:\n\t\t\treturn { ...state, focus: payload as UserFocus };\n\t\tdefault:\n\t\t\treturn state;\n\t}\n};\n\nexport default focus;\n","import * as actions from \"./actions\";\nimport * as constants from \"./constants\";\nimport reducer from \"./reducer\";\nimport * as selectors from \"./selectors\";\n\nexport default { actions, constants, reducer, selectors };\n","export const NAME = \"creationData\";\n","import { NAME } from \"./constants\";\n\nexport const TOGGLE_CONTEXT_MENU = NAME + \"/TOGGLE_CONTEXT_MENU\";\nexport const CLOSE_CONTEXT_MENU = NAME + \"/CLOSE_CONTEXT_MENU\";\nexport const OPEN_CONTEXT_MENU = NAME + \"/OPEN_CONTEXT_MENU\";\nexport const SELECTED_STRING = NAME + \"/SELECTED_STRING\";\nexport const SELECTED_PARENT = NAME + \"/SELECTED_PARENT\";\nexport const SELECTION_POSITION = NAME + \"/SELECITON_POSITION\";\n","import { UpdateType, CardPayloadConfig, CreationType, QACardContent, CardType } from \"../model\";\n\ntype updateContentStrFunction = (oldStr: string, newStr: string) => string;\n\ntype partialUpdateContentStrFunction = (oldStr: string) => string;\n\nconst updateContentStrFunctions: { [key in UpdateType]: updateContentStrFunction } = {\n\tREPLACE: (_: string, newStr: string) => newStr,\n\tAPPEND: (oldStr: string, newStr: string) => oldStr + newStr,\n};\n\nconst createPartialUpdateContentStrFunction = (updateType: UpdateType, newStr: string) => (oldStr: string) =>\n\tupdateContentStrFunctions[updateType](oldStr, newStr);\n\ntype creationFunction = (\n\toldConfig: CardPayloadConfig,\n\tpartialUpdateFunction: partialUpdateContentStrFunction\n) => CardPayloadConfig;\n\nconst defaultCreationFunction: creationFunction = (oldConfig, partialUpdateFunction) => {\n\treturn { ...oldConfig, content: partialUpdateFunction(oldConfig.content as string) };\n};\n\nconst creationFunctions: {\n\t[key in CreationType]: creationFunction;\n} = {\n\tNOTE: defaultCreationFunction,\n\tQ: (oldConfig, partialUpdateFunction) => {\n\t\tconst content = oldConfig.content as QACardContent;\n\t\treturn { ...oldConfig, content: { ...content, q: partialUpdateFunction(content.q) } };\n\t},\n\tA: (oldConfig, partialUpdateFunction) => {\n\t\tconst content = oldConfig.content as QACardContent;\n\t\treturn { ...oldConfig, content: { ...content, a: partialUpdateFunction(content.a) } };\n\t},\n};\n\nexport const contentStringToConfig = (\n\tcontentStr: string,\n\ttype: CardType,\n\tcreationType: CreationType,\n\tupdateType: UpdateType,\n\tcurrentCard?: CardPayloadConfig\n): CardPayloadConfig => {\n\tconst partialUpdateFunction = createPartialUpdateContentStrFunction(updateType, contentStr);\n\tconst isCardUpdate = !!currentCard;\n\treturn isCardUpdate\n\t\t? creationFunctions[creationType](currentCard as CardPayloadConfig, partialUpdateFunction)\n\t\t: creationFunctions[creationType]({ type, content: type === \"Q-A\" ? { q: \"\", a: \"\" } : \"\" }, partialUpdateFunction);\n};\n","export const NAME = \"cards\";\n","import { NAME } from \"./constants\";\n\nexport const CARD_UPDATE = NAME + \"/CARD_UPDATE\";\nexport const CARD_PUSH = NAME + \"/CARD_PUSH\";\nexport const CARD_REMOVE = NAME + \"/CARD_REMOVE\";\nexport const CARD_GOAL = NAME + \"/CARD_GOAL\";\nexport const CARD_SOURCE = NAME + \"/CARD_SOURCE\";\n","import { createSelector } from \"reselect\";\nimport { CardsState } from \"./model\";\n\nexport const getAll = (state: any) => state.cards as CardsState;\n\nexport const getLastCardIDNumber = createSelector(getAll, (state) => state.lastCardIDNumber);\n\nexport const getCards = createSelector(getAll, (state: CardsState) => state.cards);\n\nexport const getGoalCard = createSelector(getAll, (state: CardsState) => state.goalCard);\n\nexport const getSourceCard = createSelector(getAll, (state: CardsState) => state.sourceCard);\n","import { CardPayload, FinalizedCardPayload, CreationType, UpdateType, CardType, CardOrigin, CardConfig } from \"./model\";\nimport * as t from \"./actionTypes\";\nimport { Dispatch } from \"redux\";\nimport { getLastCardIDNumber, getCards, getSourceCard } from \"./selectors\";\nimport { contentStringToConfig } from \"./services/config\";\n\nconst createCardID = (lastCardIDNumber: number) => (lastCardIDNumber + 1).toString();\n\nexport const cardPush = (cardPayload: CardPayload) => {\n\treturn (dispatch: Dispatch, getState: Function) => {\n\t\tdispatch({\n\t\t\ttype: t.CARD_PUSH,\n\t\t\tpayload: {\n\t\t\t\t...cardPayload,\n\t\t\t\tcard: { ...cardPayload.card, cardID: createCardID(getLastCardIDNumber(getState())) },\n\t\t\t} as FinalizedCardPayload,\n\t\t});\n\t};\n};\n\nexport const cardUpdate = (card: CardPayload) => {\n\treturn { type: t.CARD_UPDATE, payload: card };\n};\n\nexport const updateCardContent = (\n\tcontentString: string,\n\tcardID: string,\n\tcreationType: CreationType,\n\tupdateType: UpdateType,\n\torigin?: CardOrigin\n) => {\n\treturn (dispatch: Dispatch, getState: Function) => {\n\t\tconst state = getState();\n\n\t\tconst currentCard = getCards(state)[cardID as string];\n\t\tconst config = contentStringToConfig(contentString, currentCard.type, creationType, updateType, currentCard);\n\n\t\tdispatch(\n\t\t\tcardUpdate({\n\t\t\t\tcard: origin ? { ...config, origin } : config,\n\t\t\t})\n\t\t);\n\t};\n};\n\nexport const pushCardContent = (\n\tcontentString: string,\n\tcreationType: CreationType,\n\tupdateType: UpdateType,\n\ttype: CardType,\n\torigin?: CardOrigin\n) => {\n\tconst config = contentStringToConfig(contentString, type, creationType, updateType);\n\treturn origin ? cardPush({ card: { ...config, origin } }) : cardPush({ card: config });\n};\n\nexport const removeCard = (cardID: string) => {\n\treturn { type: t.CARD_REMOVE, payload: cardID };\n};\n\nexport const setGoalCard = (cardConfig: CardConfig, creationType: CreationType) => {\n\treturn { type: t.CARD_GOAL, payload: { ...cardConfig, creationType } };\n};\n\nexport const resetGoalCard = () => {\n\treturn { type: t.CARD_GOAL, payload: null };\n};\n\nexport const setSourceCard = (x: number, y: number, origin?: CardOrigin) => {\n\treturn { type: t.CARD_SOURCE, payload: { origin, x, y } };\n};\n\nexport const resetSourceCard = () => {\n\treturn { type: t.CARD_SOURCE, payload: null };\n};\n\nexport const tryResetSourceCard = () => {\n\treturn (dispatch: Dispatch, getState: Function) => {\n\t\tconst sourceCardExits = getSourceCard(getState()) !== null;\n\t\tif (sourceCardExits) dispatch(resetSourceCard());\n\t};\n};\n","import * as t from \"./actionTypes\";\nimport { CardsState, FinalizedCardPayload } from \"./model\";\n\nconst intialState: CardsState = {\n\tcards: {\n\t\t\"0\": { cardID: \"0\", type: \"Q-A\", content: { q: \"Was ist der Sinn des Lebens?\", a: \"42\" } },\n\t\t\"1\": { cardID: \"1\", type: \"Q-A\", content: { q: \"Welches Layout macht mehr Sinn?\", a: \"??\" } },\n\t\t\"2\": { cardID: \"2\", type: \"Note\", content: \"Note here\" },\n\t},\n\tlastCardIDNumber: 2,\n\tgoalCard: null,\n\tsourceCard: null,\n};\n\nconst removeCard = (state: CardsState, cardID: string) => {\n\tconst cards = { ...state.cards };\n\n\t// we do not reset the ID counter\n\n\tdelete cards[cardID];\n\n\treturn { ...state, cards };\n};\n\nconst cards = (state = intialState, { type, payload }: { type: string; payload?: any }) => {\n\tlet cardID;\n\tlet cardObj;\n\tswitch (type) {\n\t\tcase t.CARD_PUSH:\n\t\t\tconst lastCardIDNumber = state.lastCardIDNumber + 1;\n\n\t\t\tcardObj = { ...state.cards };\n\t\t\tcardObj[(payload as FinalizedCardPayload).card.cardID] = (payload as FinalizedCardPayload).card;\n\n\t\t\treturn { ...state, cards: cardObj, lastCardIDNumber };\n\t\tcase t.CARD_UPDATE:\n\t\t\tcardID = (payload as FinalizedCardPayload).card.cardID as string;\n\t\t\tcardObj = { ...state.cards };\n\t\t\tcardObj[cardID] = (payload as FinalizedCardPayload).card;\n\n\t\t\treturn { ...state, cards: cardObj };\n\t\tcase t.CARD_REMOVE:\n\t\t\treturn removeCard(state, payload as string);\n\t\tcase t.CARD_GOAL:\n\t\t\treturn { ...state, goalCard: payload };\n\t\tcase t.CARD_SOURCE:\n\t\t\treturn { ...state, sourceCard: payload };\n\t\tdefault:\n\t\t\treturn state;\n\t}\n};\n\nexport default cards;\n","import * as services from \"./services\";\nimport * as constants from \"./constants\";\nimport * as actionTypes from \"./actionTypes\";\nimport * as actions from \"./actions\";\nimport * as selectors from \"./selectors\";\nimport reducer from \"./reducer\";\n\nexport default { services, constants, actionTypes, actions, reducer, selectors };\n","export const NAME = \"cardRiverState\";\n","import { NAME } from \"./constants\";\nimport { createSelector } from \"reselect\";\nimport { CardRiverState } from \"./model\";\nimport cards from \"../cards\";\n\nexport const getAll = (state: any) => state[NAME];\n\nexport const getRiverMakeUps = createSelector(getAll, (state: CardRiverState) => state.riverMakeUps);\n\nexport const getActiveRiverMakeUpID = createSelector(getAll, (state: CardRiverState) => state.activeRiverMakeUpID);\n\nexport const getPushToRiver = createSelector(getAll, (state: CardRiverState) => state.pushToRiverID);\n\nexport const getPushToRiverMakeUp = createSelector(getRiverMakeUps, getPushToRiver, (makeUps, id) => makeUps[id]);\n\nexport const getActiveRiverMakeUp = createSelector(\n\tgetRiverMakeUps,\n\tgetActiveRiverMakeUpID,\n\t(makeUps, id) => makeUps[id]\n);\n\nexport const getPushToRiverCardIDs = createSelector(getPushToRiverMakeUp, (makeUp) => makeUp.cardIDs);\n\nexport const getPushToRiverCards = createSelector(\n\tgetPushToRiverCardIDs,\n\tcards.selectors.getCards,\n\t(makeUpCardIDs, cards) => makeUpCardIDs.map((id) => cards[id])\n);\n\n//TODO-NICE: rename active=page-wise or smth like that for clarity\nexport const getActiveRiverCardIDs = createSelector(getActiveRiverMakeUp, (makeUp) => makeUp.cardIDs);\n\nexport const getActiveRiverCards = createSelector(\n\tgetActiveRiverCardIDs,\n\tcards.selectors.getCards,\n\t(makeUpCardIDs, cards) => makeUpCardIDs.map((id) => cards[id])\n);\n\nexport const getRiverShowState = createSelector(getAll, (state: CardRiverState) => state.riverShowState);\n\nexport const riverShowStateIsShow = createSelector(getRiverShowState, (state) => state === \"SHOW\");\n","import React, { useState } from \"react\";\nimport { TextField, TextFieldProps } from \"@material-ui/core\";\nimport focus from \"../../focus\";\nimport { useDispatch } from \"react-redux\";\n\nexport const HybridCardField = ({\n\tstoreValue = \"\",\n\tsaveChanges,\n\tstyle,\n\t...rest\n}: {\n\tstoreValue?: string;\n\tsaveChanges: (value: string) => void;\n\tstyle: any;\n} & TextFieldProps) => {\n\tconst dispatch = useDispatch();\n\tconst [state, setState] = useState({ storeValue, mutableValue: storeValue });\n\n\t// reset if new storeValue, otherwise keep user-mutated value\n\tif (state.storeValue !== storeValue) {\n\t\tsetState({ storeValue, mutableValue: storeValue });\n\t}\n\n\t// need the onChange-pattern, because we want to be able to pre-fill the field from the store\n\treturn (\n\t\t<TextField\n\t\t\tonMouseEnter={() => {\n\t\t\t\tdispatch(focus.actions.tryUpdateFocus(\"EDITOR\"));\n\t\t\t}}\n\t\t\tmultiline\n\t\t\tvariant=\"filled\"\n\t\t\tvalue={state.mutableValue}\n\t\t\tonChange={(event) => {\n\t\t\t\tconst submittedValue = (event.target as HTMLTextAreaElement).value;\n\t\t\t\tsetState({ ...state, mutableValue: submittedValue });\n\t\t\t}}\n\t\t\tonBlur={(event: any) => {\n\t\t\t\tsaveChanges(event.target.value);\n\t\t\t}}\n\t\t\tstyle={style}\n\t\t\t{...rest}\n\t\t></TextField>\n\t);\n};\n","import DeleteForeverIcon from \"@material-ui/icons/DeleteForever\";\nimport React from \"react\";\nimport { IconButton } from \"@material-ui/core\";\nimport { useDispatch } from \"react-redux\";\nimport cards from \"../../cards\";\nimport focus from \"../../focus\";\n\n//TODO-RC: Undo / Redo for Card-Deletions and also Card_Push and Card_Updates\n//TODO-RC: make confirmation overlap\n//TODO-NICE: use storybook for visual component testing\n\nexport const DeleteCardButton = ({ cardID }: { cardID: string }) => {\n\tconst dispatch = useDispatch();\n\treturn (\n\t\t<IconButton\n\t\t\ttype=\"button\"\n\t\t\tonClick={() => {\n\t\t\t\tdispatch(cards.actions.removeCard(cardID));\n\t\t\t}}\n\t\t\tonMouseEnter={() => {\n\t\t\t\tdispatch(focus.actions.tryUpdateFocus(\"EDITOR_CONTROL\"));\n\t\t\t}}\n\t\t>\n\t\t\t<DeleteForeverIcon></DeleteForeverIcon>\n\t\t</IconButton>\n\t);\n};\n","import FindInPageIcon from \"@material-ui/icons/FindInPage\";\nimport React from \"react\";\nimport { IconButton } from \"@material-ui/core\";\nimport { useDispatch } from \"react-redux\";\nimport display from \"../../display\";\nimport { CardOrigin } from \"../../cards/model\";\n\nexport const JumpToOriginButton = ({ cardOrigin }: { cardOrigin: CardOrigin }) => {\n\tconst dispatch = useDispatch();\n\treturn (\n\t\t<IconButton\n\t\t\ttype=\"button\"\n\t\t\tonClick={() => {\n\t\t\t\tdispatch(display.actions.zoomToCardOrigin(cardOrigin.spanIndex, cardOrigin.page));\n\t\t\t}}\n\t\t>\n\t\t\t<FindInPageIcon></FindInPageIcon>\n\t\t</IconButton>\n\t);\n};\n","import PanToolIcon from \"@material-ui/icons/PanTool\";\nimport PanToolOutlinedIcon from \"@material-ui/icons/PanToolOutlined\";\nimport React, { useState } from \"react\";\nimport { IconButton } from \"@material-ui/core\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { CardConfig, CreationType, GoalCard } from \"../../cards/model\";\nimport cards from \"../../cards\";\nimport { getGoalCard } from \"../../cards/selectors\";\nimport focus from \"../../focus\";\n\nconst isGoalCard = (cardConfig: CardConfig, creationType: CreationType, goalCard: GoalCard) =>\n\tcardConfig.cardID === goalCard.cardID && creationType === goalCard.creationType;\n\nexport const GrabForFieldButton = ({\n\tcardConfig,\n\tcreationType,\n}: {\n\tcardConfig: CardConfig;\n\tcreationType: CreationType;\n}) => {\n\tconst dispatch = useDispatch();\n\tconst goalCard = useSelector(getGoalCard);\n\tconst [outlined, setOutlined] = useState(true);\n\n\tif (goalCard) {\n\t\tconst isGoal = isGoalCard(cardConfig, creationType, goalCard);\n\t\tif (isGoal) {\n\t\t\tif (outlined) setOutlined(false);\n\t\t} else {\n\t\t\tif (!outlined) setOutlined(true);\n\t\t}\n\t} else {\n\t\tif (!outlined) setOutlined(true);\n\t}\n\n\treturn (\n\t\t<IconButton\n\t\t\ttype=\"button\"\n\t\t\tonMouseEnter={() => {\n\t\t\t\tdispatch(focus.actions.tryUpdateFocus(\"EDITOR_CONTROL\"));\n\t\t\t}}\n\t\t\tonClick={() => {\n\t\t\t\tif (outlined) {\n\t\t\t\t\tdispatch(cards.actions.setGoalCard(cardConfig, creationType));\n\t\t\t\t} else {\n\t\t\t\t\tdispatch(cards.actions.resetGoalCard());\n\t\t\t\t}\n\t\t\t}}\n\t\t>\n\t\t\t{outlined ? <PanToolOutlinedIcon></PanToolOutlinedIcon> : <PanToolIcon></PanToolIcon>}\n\t\t</IconButton>\n\t);\n};\n","import ExtensionIcon from \"@material-ui/icons/Extension\";\nimport React from \"react\";\nimport { IconButton } from \"@material-ui/core\";\nimport { useDispatch } from \"react-redux\";\nimport { CardOrigin } from \"../../cards/model\";\nimport cards from \"../../cards\";\nimport focus from \"../../focus\";\n\n//TODO-NICe: make selection-dropable on buttons, so that they can be send to cards, make this the default instead of context-menu?\n// imagine: toolbar with new Note, new A, new Q | all the cards and you can drop off\n\n//TODO-RC, if text from the filed was already extracted this just opens the menu\n\nexport const ExtractFromFieldButton = ({ cardOrigin }: { cardOrigin?: CardOrigin }) => {\n\tconst dispatch = useDispatch();\n\n\treturn (\n\t\t<IconButton\n\t\t\ttype=\"button\"\n\t\t\tonMouseEnter={() => {\n\t\t\t\tdispatch(focus.actions.tryUpdateFocus(\"EDITOR_CONTROL\"));\n\t\t\t}}\n\t\t\tonClick={(event: any) => {\n\t\t\t\tdispatch(cards.actions.setSourceCard(event.clientX as number, event.clientY as number, cardOrigin));\n\t\t\t}}\n\t\t>\n\t\t\t<ExtensionIcon></ExtensionIcon>\n\t\t</IconButton>\n\t);\n};\n","import Grid from \"@material-ui/core/Grid\";\nimport React from \"react\";\nimport { HybridCardField } from \"./HybridCardField\";\nimport { CardConfig, QACardContent } from \"../../cards/model\";\nimport { useDispatch } from \"react-redux\";\nimport cards from \"../../cards\";\nimport { DeleteCardButton } from \"./DeleteCardButton\";\nimport { JumpToOriginButton } from \"./JumpToOriginButton\";\nimport { GrabForFieldButton } from \"./GrabForFieldButton\";\nimport { ExtractFromFieldButton } from \"./ExtractFromFieldButton\";\n\n//TODO-RC: tooltips for all buttons, multiple languages?\n\n//TODO-RC: mouse-up in editor should not trigger context menu, because I cant delete selections then, better use the Pinsel-Idea for inside the card\n\n//TODO-RC: make full cards be not visible to the context menu by default (need to unmark them or sub-menu)\n\ntype CardProps = { config: CardConfig; riverID: string };\n\nconst NoteCard = ({ config }: CardProps) => {\n\tconst dispatch = useDispatch();\n\n\treturn (\n\t\t<div>\n\t\t\t<HybridCardField\n\t\t\t\tsaveChanges={(value) => {\n\t\t\t\t\tdispatch(cards.actions.updateCardContent(value, config.cardID, \"NOTE\", \"REPLACE\", config.origin));\n\t\t\t\t}}\n\t\t\t\tstoreValue={config.content as string}\n\t\t\t\tlabel=\"Note\"\n\t\t\t\tvariant=\"filled\"\n\t\t\t\tstyle={{ backgroundColor: \"#CBF3F0\" }}\n\t\t\t\tInputLabelProps={{ style: { color: \"#000000\" } }}\n\t\t\t></HybridCardField>\n\t\t\t<DeleteCardButton cardID={config.cardID}></DeleteCardButton>\n\t\t\t<GrabForFieldButton cardConfig={config} creationType=\"NOTE\"></GrabForFieldButton>\n\t\t\t<ExtractFromFieldButton cardOrigin={config.origin}></ExtractFromFieldButton>\n\t\t\t{config.origin && <JumpToOriginButton cardOrigin={config.origin}></JumpToOriginButton>}\n\t\t</div>\n\t);\n};\n\nconst QACard = ({ config }: CardProps) => {\n\tconst dispatch = useDispatch();\n\n\treturn (\n\t\t<Grid container direction=\"column\" spacing={1}>\n\t\t\t<Grid item>\n\t\t\t\t<HybridCardField\n\t\t\t\t\tsaveChanges={(value) => {\n\t\t\t\t\t\tdispatch(cards.actions.updateCardContent(value, config.cardID, \"Q\", \"REPLACE\", config.origin));\n\t\t\t\t\t}}\n\t\t\t\t\tstoreValue={(config.content as QACardContent).q}\n\t\t\t\t\tlabel={\"Question\"}\n\t\t\t\t\tvariant=\"filled\"\n\t\t\t\t\tstyle={{ backgroundColor: \"#FFBF69\" }}\n\t\t\t\t\tInputLabelProps={{ style: { color: \"#000000\" } }}\n\t\t\t\t></HybridCardField>\n\t\t\t\t<GrabForFieldButton cardConfig={config} creationType=\"Q\"></GrabForFieldButton>\n\t\t\t\t<ExtractFromFieldButton cardOrigin={config.origin}></ExtractFromFieldButton>\n\t\t\t</Grid>\n\t\t\t<Grid item>\n\t\t\t\t<HybridCardField\n\t\t\t\t\tsaveChanges={(value) => {\n\t\t\t\t\t\tdispatch(cards.actions.updateCardContent(value, config.cardID, \"A\", \"REPLACE\", config.origin));\n\t\t\t\t\t}}\n\t\t\t\t\tstoreValue={(config.content as QACardContent).a}\n\t\t\t\t\tlabel={\"Answer\"}\n\t\t\t\t\tvariant=\"filled\"\n\t\t\t\t\tstyle={{ backgroundColor: \"#2EC4B6\" }}\n\t\t\t\t\tInputLabelProps={{ style: { color: \"#000000\" } }}\n\t\t\t\t></HybridCardField>\n\t\t\t\t<GrabForFieldButton cardConfig={config} creationType=\"A\"></GrabForFieldButton>\n\t\t\t\t<ExtractFromFieldButton cardOrigin={config.origin}></ExtractFromFieldButton>\n\t\t\t</Grid>\n\t\t\t<Grid item>\n\t\t\t\t<DeleteCardButton cardID={config.cardID}></DeleteCardButton>\n\t\t\t\t{config.origin && <JumpToOriginButton cardOrigin={config.origin}></JumpToOriginButton>}\n\t\t\t</Grid>\n\t\t</Grid>\n\t);\n};\n\nexport const Card = ({ config, riverID }: CardProps) => {\n\tswitch (config.type) {\n\t\tcase \"Note\":\n\t\t\treturn <NoteCard config={config} riverID={riverID}></NoteCard>;\n\t\tcase \"Q-A\":\n\t\t\treturn <QACard config={config} riverID={riverID}></QACard>;\n\t}\n};\n","import Grid from \"@material-ui/core/Grid\";\nimport React from \"react\";\nimport { incrementer } from \"../../../shared/utils\";\nimport { Card } from \"./Card\";\nimport { CardConfig } from \"../../cards/model\";\nimport { Divider } from \"@material-ui/core\";\n\nconst GridDivider = () => (\n\t<Grid item>\n\t\t<Divider></Divider>\n\t</Grid>\n);\n\nexport const toCardGridItemsWithDividers = (cards: CardConfig[], riverID: string) => {\n\tconst increment = incrementer();\n\n\treturn cards.reduce((prev, currentCard, index, arr) => {\n\t\tprev.push(\n\t\t\t<Grid item key={increment()}>\n\t\t\t\t<Card config={currentCard} riverID={riverID} key={increment()}></Card>\n\t\t\t</Grid>\n\t\t);\n\n\t\tconst notLastCard = index < arr.length - 1;\n\t\tif (notLastCard) prev.push(<GridDivider key={increment()}></GridDivider>);\n\t\treturn prev;\n\t}, [] as any[]);\n};\n","import { NAME } from \"./constants\";\n\nexport const RIVER_SHOW_STATE = NAME + \"/RIVER_SHOW_STATE\";\nexport const RIVER_PUSH_STATE = NAME + \"/RIVER_PUSH_STATE\";\n","import * as t from \"./actionTypes\";\nimport { riverShowStateIsShow, getPushToRiver } from \"./selectors\";\nimport { Dispatch } from \"redux\";\n\nexport const toggleRiverShowState = () => (dispatch: Dispatch, getState: Function) => {\n\tdispatch({ type: t.RIVER_SHOW_STATE, payload: riverShowStateIsShow(getState()) ? \"HIDE\" : \"SHOW\" });\n};\n\nexport const setPushToRiver = (id: string) => {\n\treturn { type: t.RIVER_PUSH_STATE, payload: id };\n};\n\nexport const trySetPushToRiver = (id: string) => {\n\treturn (dispatch: Dispatch, getState: Function) => {\n\t\tif (getPushToRiver(getState()) !== id) dispatch(setPushToRiver(id));\n\t};\n};\n","import Accordion from \"@material-ui/core/Accordion\";\nimport AccordionSummary from \"@material-ui/core/AccordionSummary\";\nimport AccordionDetails from \"@material-ui/core/AccordionDetails\";\nimport Grid from \"@material-ui/core/Grid\";\nimport React, { useState } from \"react\";\nimport { trySetPushToRiver } from \"../actions\";\nimport { useDispatch } from \"react-redux\";\n\nexport const CardRiverAccordion = ({\n\triverID,\n\tgridItems,\n\tsummary,\n}: {\n\triverID: string;\n\tgridItems: any;\n\tsummary: string;\n}) => {\n\tconst [elevation, setElevation] = useState(3);\n\tconst dispatch = useDispatch();\n\treturn (\n\t\t<Accordion\n\t\t\tdefaultExpanded={true}\n\t\t\tonMouseEnter={() => {\n\t\t\t\tsetElevation(20);\n\t\t\t\tdispatch(trySetPushToRiver(riverID));\n\t\t\t}}\n\t\t\tonMouseLeave={() => {\n\t\t\t\tsetElevation(3);\n\t\t\t}}\n\t\t\televation={elevation}\n\t\t>\n\t\t\t<AccordionSummary>{summary}</AccordionSummary>\n\t\t\t<AccordionDetails>\n\t\t\t\t<Grid container direction=\"column\" spacing={2} justify=\"center\" alignItems=\"stretch\">\n\t\t\t\t\t{gridItems}\n\t\t\t\t</Grid>\n\t\t\t</AccordionDetails>\n\t\t</Accordion>\n\t);\n};\n","import { CardConfig } from \"../../cards/model\";\nimport { toCardGridItemsWithDividers } from \"./toCardGridItemsWithDividers\";\nimport { useMemo } from \"react\";\nimport { CardRiverAccordion } from \"./CardRiverAccordion\";\nimport React from \"react\";\n\n//TODO-RC: make Card-River non-overlapping and scroll the cards that we are considering from the Menus into view\n\nexport const ChildCardRiver = ({ riverID, riverCards }: { riverID: string; riverCards: CardConfig[] }) => {\n\t// this should only change if the store values change\n\tconst gridItems = useMemo(() => toCardGridItemsWithDividers(riverCards, riverID), [riverCards, riverID]);\n\n\treturn riverCards.length > 0 ? (\n\t\t<CardRiverAccordion riverID={riverID} gridItems={gridItems} summary={riverID}></CardRiverAccordion>\n\t) : null;\n};\n","import React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { getActiveRiverCards, getActiveRiverMakeUpID } from \"../selectors\";\nimport { ChildCardRiver } from \"./ChildCardRiver\";\n\n//TODO-RC: improve visual clarity of mapping ContextMenu to River\n\n//TODO-RC: mark cards that are hovered over in the contextmenu, so that we see where the content would end up\n// canvas?\n\n//TODO-RC: selection in CardRiver should stay highlighted when the contextMenu opens?\n\n//TODO-NICE: contextMenu as permant element, maybe sidebar?\n\n//TODO-NICE: preview in ContextMenu of how selected string would be used\n\n//TODO-RC: make butto where you can choose from the Card-field in the Card-River and then select what should go in there (reverse selection idea?)\n\n//TODO-RC, new A, new Q, SummaryNotes\nexport const ActiveCardRiver = () => {\n\tconst riverID = useSelector(getActiveRiverMakeUpID);\n\tconst riverCards = useSelector(getActiveRiverCards);\n\n\treturn <ChildCardRiver riverID={riverID} riverCards={riverCards}></ChildCardRiver>;\n};\n","import { useState } from \"react\";\nimport SpeakerNotesOutlinedIcon from \"@material-ui/icons/SpeakerNotesOutlined\";\nimport SpeakerNotesTwoToneIcon from \"@material-ui/icons/SpeakerNotesTwoTone\";\nimport React from \"react\";\nimport { IconButton } from \"@material-ui/core\";\nimport { useDispatch } from \"react-redux\";\nimport { toggleRiverShowState } from \"../actions\";\n\nexport const ShowRiverButton = () => {\n\tconst [outlined, setOutlined] = useState(true);\n\tconst dispatch = useDispatch();\n\treturn (\n\t\t<IconButton\n\t\t\ttype=\"button\"\n\t\t\tonClick={() => {\n\t\t\t\tdispatch(toggleRiverShowState());\n\t\t\t\tsetOutlined(!outlined);\n\t\t\t}}\n\t\t>\n\t\t\t{outlined ? (\n\t\t\t\t<SpeakerNotesOutlinedIcon></SpeakerNotesOutlinedIcon>\n\t\t\t) : (\n\t\t\t\t<SpeakerNotesTwoToneIcon></SpeakerNotesTwoToneIcon>\n\t\t\t)}\n\t\t</IconButton>\n\t);\n};\n","import { Paper, Typography } from \"@material-ui/core\";\nimport { useSelector } from \"react-redux\";\nimport { getRiverMakeUps } from \"../selectors\";\nimport React from \"react\";\nimport cards from \"../../cards\";\nimport { ChildCardRiver } from \"./ChildCardRiver\";\n\n//TODO-RC: SummaryRiver \"searchable\", so that you can zoom to certain rivers and also look at them next to each other\n\nexport const SummaryRiver = () => {\n\tconst cardConfigs = useSelector(cards.selectors.getCards);\n\tconst riverMakeUps = Object.values(useSelector(getRiverMakeUps));\n\n\t//TODO-NICE: find way to make UI-text unselectable globally, maybe different focus? But might be unperformant\n\treturn (\n\t\t<Paper elevation={5}>\n\t\t\t<Typography\n\t\t\t\tvariant=\"h4\"\n\t\t\t\talign=\"center\"\n\t\t\t\tstyle={{ MozUserSelect: \"none\", WebkitUserSelect: \"none\", msUserSelect: \"none\" }}\n\t\t\t>\n\t\t\t\tSummaryRiver\n\t\t\t</Typography>\n\t\t\t{riverMakeUps.map((makeUp) => (\n\t\t\t\t<ChildCardRiver\n\t\t\t\t\triverID={makeUp.riverID}\n\t\t\t\t\triverCards={makeUp.cardIDs.length > 0 ? makeUp.cardIDs.map((id) => cardConfigs[id]) : []}\n\t\t\t\t></ChildCardRiver>\n\t\t\t))}\n\t\t</Paper>\n\t);\n};\n","export type RiverMakeUp = { riverID: string; cardIDs: string[]; active: boolean };\n\ntype RiverMakeUps = { [riverID: string]: RiverMakeUp };\n\nexport type RiverShowState = \"SHOW\" | \"HIDE\";\n\nexport type CardRiverState = {\n\triverMakeUps: RiverMakeUps;\n\tactiveRiverMakeUpID: string;\n\tpushToRiverID: string;\n\tlastRiverIDNumber: number;\n\triverShowState: RiverShowState;\n};\n\nexport const pageNumberToRiverMakeUpID = (page: number) => \"CardRiver \" + page;\n","import { CardRiverState, RiverShowState, pageNumberToRiverMakeUpID, RiverMakeUp } from \"./model\";\nimport { FinalizedCardPayload } from \"../cards/model\";\nimport cards from \"../cards\";\nimport * as t from \"./actionTypes\";\nimport display from \"../display\";\n\nconst intialState: CardRiverState = {\n\triverMakeUps: {\n\t\t[pageNumberToRiverMakeUpID(1)]: {\n\t\t\triverID: pageNumberToRiverMakeUpID(1),\n\t\t\tcardIDs: [\"2\", \"0\", \"1\"],\n\t\t\t//TODO-NICE: might remove this active-flag, because I dont use it? Maybe for multiple documents?\n\t\t\tactive: true,\n\t\t},\n\t},\n\tpushToRiverID: pageNumberToRiverMakeUpID(1),\n\tactiveRiverMakeUpID: pageNumberToRiverMakeUpID(1),\n\tlastRiverIDNumber: 1,\n\triverShowState: \"SHOW\",\n};\n\nconst emptyCardRiver = (page: number): RiverMakeUp => {\n\treturn {\n\t\triverID: pageNumberToRiverMakeUpID(page),\n\t\tcardIDs: [],\n\t\tactive: true,\n\t};\n};\n\nconst updateStateWithMakeUps = (state: CardRiverState, ...makeUps: RiverMakeUp[]) => {\n\tconst updatedState = { ...state };\n\tmakeUps.forEach((makeUp) => {\n\t\tupdatedState.riverMakeUps[makeUp.riverID] = makeUp;\n\t});\n\treturn updatedState;\n};\n\nconst deactivateActiveCardRiver = (state: CardRiverState) => {\n\treturn { ...state.riverMakeUps[state.activeRiverMakeUpID], active: false };\n};\n\nconst removeCardFromRivers = (state: CardRiverState, cardID: string): CardRiverState => {\n\tconst riverMakeUps = Object.fromEntries(\n\t\tObject.entries(state.riverMakeUps).map((entry) => [\n\t\t\tentry[0],\n\t\t\t{ ...entry[1], cardIDs: entry[1].cardIDs.filter((id) => id !== cardID) },\n\t\t])\n\t);\n\treturn { ...state, riverMakeUps };\n};\n\nconst cardRiverState = (state = intialState, { type, payload }: { type: string; payload: any }) => {\n\tlet riverMakeUp;\n\tlet riverMakeUps;\n\tswitch (type) {\n\t\tcase display.actionTypes.PAGE_UPDATE:\n\t\t\tlet activeRiver;\n\t\t\tif (!state.riverMakeUps[pageNumberToRiverMakeUpID(payload as number)]) {\n\t\t\t\tactiveRiver = emptyCardRiver(payload as number);\n\t\t\t} else {\n\t\t\t\tactiveRiver = { ...state.riverMakeUps[pageNumberToRiverMakeUpID(payload as number)], active: true };\n\t\t\t}\n\n\t\t\tconst oldRiver = deactivateActiveCardRiver(state);\n\n\t\t\treturn {\n\t\t\t\t...updateStateWithMakeUps(state, activeRiver, oldRiver),\n\t\t\t\tactiveRiverMakeUpID: activeRiver.riverID,\n\t\t\t\tpushToRiverID: activeRiver.riverID,\n\t\t\t};\n\n\t\tcase cards.actionTypes.CARD_PUSH:\n\t\t\t//TODO-RC: activeRiver is not set, when using SummaryRiver for editing!\n\t\t\t// how to push in SummaryRiver?\n\t\t\t//TODO-RC: buttons for adding cards in River\n\t\t\triverMakeUp = {\n\t\t\t\t...state.riverMakeUps[state.pushToRiverID],\n\t\t\t\tcardIDs: [...state.riverMakeUps[state.pushToRiverID].cardIDs, (payload as FinalizedCardPayload).card.cardID],\n\t\t\t};\n\t\t\triverMakeUps = { ...state.riverMakeUps };\n\t\t\triverMakeUps[state.pushToRiverID] = riverMakeUp;\n\n\t\t\treturn { ...state, riverMakeUps: riverMakeUps };\n\t\tcase cards.actionTypes.CARD_REMOVE:\n\t\t\treturn removeCardFromRivers(state, payload as string);\n\t\tcase t.RIVER_SHOW_STATE:\n\t\t\treturn { ...state, riverShowState: payload as RiverShowState };\n\t\tcase t.RIVER_PUSH_STATE:\n\t\t\treturn { ...state, pushToRiverID: payload };\n\t\tdefault:\n\t\t\treturn state;\n\t}\n};\n\nexport default cardRiverState;\n","import * as constants from \"./constants\";\nimport * as components from \"./components\";\nimport reducer from \"./reducer\";\nimport * as selectors from \"./selectors\";\nimport * as actions from \"./actions\";\n\nexport default { constants, components, reducer, selectors, actions };\n","import { NAME } from \"./constants\";\nimport { createSelector } from \"reselect\";\nimport { CreationData } from \"./model\";\nimport river from \"../river\";\n\nexport const getAll = (state: any) => state[NAME];\n\nexport const getContextMenuState = createSelector(getAll, (state: CreationData) => state.open);\n\nexport const getContextMenuRef = createSelector(getAll, (state: CreationData) => state.menuRef);\n\nexport const getContextMenuQARefs = createSelector(getAll, (state: CreationData) => state.qaRefs);\n\nexport const getCurrentSelectionPosition = createSelector(getAll, (state: CreationData) => state.selectionPosition);\n\nexport const getContextMenuInitData = createSelector(\n\tgetCurrentSelectionPosition,\n\tgetContextMenuState,\n\tgetContextMenuRef,\n\tgetContextMenuQARefs,\n\triver.selectors.getPushToRiverCards,\n\t(position, state, menuRef, qaRefs, riverCards) => {\n\t\treturn { position, state, menuRef, qaRefs, riverCards };\n\t}\n);\n\nexport const getCurrentSelectedString = createSelector(getAll, (state: CreationData) => state.manuallySelectedString);\n\nexport const getCurrentSelectedParent = createSelector(getAll, (state: CreationData) => state.selectedParentSpan);\n","import * as t from \"./actionTypes\";\nimport { CardType, CreationType, CardOrigin } from \"../cards/model\";\nimport cards from \"../cards\";\nimport focus from \"../focus\";\nimport { getCurrentSelectedString, getCurrentSelectedParent, getContextMenuState } from \"./selectors\";\nimport display from \"../display\";\n\nexport const toggleContextMenu = () => {\n\treturn (dispatch: any) => {\n\t\tdispatch({ type: t.TOGGLE_CONTEXT_MENU });\n\t\tdispatch(focus.actions.toggleContextMenuFocus());\n\t};\n};\n\nexport const closeContextMenu = () => {\n\treturn (dispatch: any, getState: Function) => {\n\t\tif (getContextMenuState(getState())) {\n\t\t\tdispatch({ type: t.CLOSE_CONTEXT_MENU });\n\t\t\tdispatch(focus.actions.updateFocus(\"SELECTION\"));\n\t\t}\n\t};\n};\n\nexport const openContextMenu = () => {\n\treturn (dispatch: any) => {\n\t\tdispatch({ type: t.OPEN_CONTEXT_MENU });\n\t\tdispatch(focus.actions.updateFocus(\"SELECTION\"));\n\t};\n};\n\nexport const triggerSelectionGrab = (\n\ttype: CardType,\n\tcreationType: CreationType,\n\tcardID?: string,\n\torigin?: CardOrigin\n) => {\n\treturn (dispatch: Function, getState: Function) => {\n\t\tdispatch(closeContextMenu());\n\n\t\tconst state = getState();\n\n\t\t//TODO-NICE: think of a way to make this intuitive\n\t\t//const updateType = type === \"Q-A\" ? \"REPLACE\" : \"APPEND\";\n\t\tconst updateType = \"REPLACE\";\n\n\t\tconst selectedString = getCurrentSelectedString(state);\n\t\tconst isUpdate = cardID !== undefined;\n\n\t\t//TODO-RC: if selection is from card then copy card-origin\n\t\tconst selectedParent = getCurrentSelectedParent(state);\n\t\tconst newOrigin: CardOrigin | undefined =\n\t\t\tselectedParent && !origin\n\t\t\t\t? {\n\t\t\t\t\t\tspanIndex: display.selectors.getSpanIndex(state, selectedParent),\n\t\t\t\t\t\tpage: display.selectors.getCurrentPage(state),\n\t\t\t\t  }\n\t\t\t\t: origin;\n\n\t\tif (isUpdate) {\n\t\t\tdispatch(cards.actions.updateCardContent(selectedString, cardID as string, creationType, updateType, newOrigin));\n\t\t} else {\n\t\t\tdispatch(cards.actions.pushCardContent(selectedString, creationType, updateType, type, newOrigin));\n\t\t}\n\t};\n};\n\nexport const updateManuallySelectedString = (str: string) => {\n\treturn { type: t.SELECTED_STRING, payload: str };\n};\n\nexport const resetManuallySelectedString = () => {\n\treturn updateManuallySelectedString(\"\");\n};\n\nexport const selectedParent = (span: null | HTMLSpanElement) => {\n\treturn { type: t.SELECTED_PARENT, payload: span };\n};\n\nexport const updateSelectionPosition = (x: number, y: number) => {\n\treturn { type: t.SELECTION_POSITION, payload: { x, y } };\n};\n","import * as t from \"./actionTypes\";\nimport { CreationData } from \"./model\";\nimport { createRef } from \"react\";\nimport { CardPayload } from \"../cards/model\";\nimport cards from \"../cards\";\n\nconst initialState: CreationData = {\n\topen: false,\n\tmenuRef: createRef(),\n\tqaRefs: [createRef(), createRef()],\n\tmanuallySelectedString: \"\",\n\tselectedParentSpan: null,\n\tselectionPosition: { x: 0, y: 0 },\n};\n\nconst creationData = (state = initialState, { type, payload }: { type: string; payload: any }): CreationData => {\n\tswitch (type) {\n\t\tcase t.TOGGLE_CONTEXT_MENU:\n\t\t\treturn { ...state, open: !state.open };\n\t\tcase t.CLOSE_CONTEXT_MENU:\n\t\t\treturn { ...state, open: false };\n\t\tcase t.OPEN_CONTEXT_MENU:\n\t\t\treturn { ...state, open: true };\n\t\tcase cards.actionTypes.CARD_PUSH:\n\t\t\t//TODO-NICE: reliance on order of refs (needs to be the same as order of qaRefs) and coupling to the fact that a new card was pushed\n\t\t\t// might need to change if I allow moving the cards\n\t\t\t//TODO-NICE: no support for multiple rivers\n\t\t\tif ((payload as CardPayload).card.type === \"Q-A\") return { ...state, qaRefs: [...state.qaRefs, createRef()] };\n\t\t\treturn state;\n\t\tcase t.SELECTED_STRING:\n\t\t\treturn { ...state, manuallySelectedString: payload as string };\n\t\tcase t.SELECTED_PARENT:\n\t\t\treturn { ...state, selectedParentSpan: payload };\n\t\tcase t.SELECTION_POSITION:\n\t\t\treturn { ...state, selectionPosition: payload };\n\t\tdefault:\n\t\t\treturn state;\n\t}\n};\n\nexport default creationData;\n","import React, { RefObject } from \"react\";\nimport NestedMenuItem from \"material-ui-nested-menu-item\";\nimport { MenuItem } from \"@material-ui/core\";\nimport { CardConfig, CardType, CreationType } from \"../../cards/model\";\n\ntype dispatchRiver = (type: CardType, creationType: CreationType, cardID?: string | undefined) => void;\n\nconst SingleOptionItem = ({ cardConfig, dispatchRiver }: { cardConfig: CardConfig; dispatchRiver: dispatchRiver }) => (\n\t<MenuItem\n\t\tonClick={() => {\n\t\t\tdispatchRiver(cardConfig.type, \"NOTE\", cardConfig.cardID);\n\t\t}}\n\t>\n\t\t{cardConfig.type}\n\t</MenuItem>\n);\n\nconst QAOptionItem = ({\n\tcardConfig,\n\tdispatchRiver,\n\tqaRef,\n}: {\n\tcardConfig: CardConfig;\n\tdispatchRiver: dispatchRiver;\n\tqaRef: RefObject<any> | undefined;\n}) => (\n\t<NestedMenuItem label=\"Q-A\" parentMenuOpen={true}>\n\t\t<MenuItem\n\t\t\tref={qaRef}\n\t\t\tonClick={() => {\n\t\t\t\tdispatchRiver(\"Q-A\", \"Q\", cardConfig.cardID);\n\t\t\t}}\n\t\t>\n\t\t\tQ\n\t\t</MenuItem>\n\t\t<MenuItem\n\t\t\tonClick={() => {\n\t\t\t\tdispatchRiver(\"Q-A\", \"A\", cardConfig.cardID);\n\t\t\t}}\n\t\t>\n\t\t\tA\n\t\t</MenuItem>\n\t</NestedMenuItem>\n);\n\nexport const CardConfigItem = ({\n\tcardConfig,\n\tdispatchRiver,\n\tqaRef,\n}: {\n\tcardConfig: CardConfig;\n\tdispatchRiver: dispatchRiver;\n\tqaRef?: RefObject<any>;\n}) => {\n\tswitch (cardConfig.type) {\n\t\tcase \"Q-A\":\n\t\t\treturn <QAOptionItem cardConfig={cardConfig} dispatchRiver={dispatchRiver} qaRef={qaRef}></QAOptionItem>;\n\t\tdefault:\n\t\t\treturn <SingleOptionItem cardConfig={cardConfig} dispatchRiver={dispatchRiver}></SingleOptionItem>;\n\t}\n};\n","import React, { RefObject } from \"react\";\nimport Menu from \"@material-ui/core/Menu\";\nimport { MenuItem, Divider } from \"@material-ui/core\";\nimport { useDispatch, connect } from \"react-redux\";\nimport { getContextMenuInitData } from \"../selectors\";\nimport { triggerSelectionGrab } from \"../actions\";\nimport { incrementer } from \"../../../shared/utils\";\nimport { CardConfig, CardType, CreationType } from \"../../cards/model\";\nimport { CardConfigItem } from \"./CardConfigItem\";\n\nconst NewQACard = ({ onClick }: any) => <MenuItem onClick={onClick}>New: Q-A</MenuItem>;\nconst NewNoteCard = ({ onClick }: any) => <MenuItem onClick={onClick}>New: Note</MenuItem>;\n\nfunction ContextMenu({\n\tposition,\n\tstate,\n\tmenuRef,\n\tqaRefs,\n\triverCards,\n}: {\n\tposition: { x: number; y: number };\n\tstate: boolean;\n\tmenuRef: RefObject<any>;\n\tqaRefs: RefObject<any>[];\n\triverCards: CardConfig[];\n}) {\n\tconst dispatch = useDispatch();\n\tconst openState = state;\n\tconst dispatchRiver = (type: CardType, creationType: CreationType, cardID?: string) => {\n\t\tdispatch(triggerSelectionGrab(type, creationType, cardID));\n\t};\n\n\tconst increment = incrementer();\n\tconst qaRefIndex = incrementer();\n\n\tconst anchorPosition = openState ? { top: position.y, left: position.x } : undefined;\n\n\t// TODO-NICE: need to check for state before rendering MenuItems,\n\t// otherwise it shows up for a split-second when switching the menu off after adding to the river\n\t// weird Race Condition even if I dispatch closeContextMenu first?\n\treturn (\n\t\t<Menu\n\t\t\tref={openState ? menuRef : null}\n\t\t\tkeepMounted\n\t\t\topen={openState}\n\t\t\tanchorReference=\"anchorPosition\"\n\t\t\tanchorPosition={anchorPosition}\n\t\t>\n\t\t\t{openState &&\n\t\t\t\triverCards.map((cardConfig) => (\n\t\t\t\t\t<CardConfigItem\n\t\t\t\t\t\tcardConfig={cardConfig}\n\t\t\t\t\t\tdispatchRiver={dispatchRiver}\n\t\t\t\t\t\tkey={increment()}\n\t\t\t\t\t\tqaRef={cardConfig.type === \"Q-A\" ? qaRefs[qaRefIndex()] : undefined}\n\t\t\t\t\t></CardConfigItem>\n\t\t\t\t))}\n\t\t\t{openState && riverCards.length > 0 && <Divider />}\n\n\t\t\t{openState && [\n\t\t\t\t<NewQACard\n\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\tdispatchRiver(\"Q-A\", \"Q\");\n\t\t\t\t\t}}\n\t\t\t\t></NewQACard>,\n\t\t\t\t<NewNoteCard\n\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\tdispatchRiver(\"Note\", \"NOTE\");\n\t\t\t\t\t}}\n\t\t\t\t></NewNoteCard>,\n\t\t\t]}\n\t\t</Menu>\n\t);\n}\n\nexport const ContextMenuContainer = connect(getContextMenuInitData)(ContextMenu);\n","import React, { RefObject } from \"react\";\nimport Menu from \"@material-ui/core/Menu\";\nimport { MenuItem, Divider } from \"@material-ui/core\";\nimport { useDispatch, useSelector, connect } from \"react-redux\";\nimport { getContextMenuInitData } from \"../selectors\";\nimport { triggerSelectionGrab } from \"../actions\";\nimport { incrementer } from \"../../../shared/utils\";\nimport { CardConfig, CardType, CreationType } from \"../../cards/model\";\nimport cards from \"../../cards\";\nimport { CardConfigItem } from \"./CardConfigItem\";\n\nconst NewQACard = ({ onClick }: any) => <MenuItem onClick={onClick}>New: Q-A</MenuItem>;\nconst NewNoteCard = ({ onClick }: any) => <MenuItem onClick={onClick}>New: Note</MenuItem>;\n\nfunction SourceMenu({\n\tmenuRef,\n\tqaRefs,\n\triverCards,\n}: {\n\tmenuRef: RefObject<any>;\n\tqaRefs: RefObject<any>[];\n\triverCards: CardConfig[];\n}) {\n\tconst dispatch = useDispatch();\n\tconst sourceCard = useSelector(cards.selectors.getSourceCard);\n\tconst openState = !!sourceCard;\n\tconst dispatchRiver = (type: CardType, creationType: CreationType, cardID?: string) => {\n\t\tdispatch(triggerSelectionGrab(type, creationType, cardID, sourceCard?.origin));\n\t\tdispatch(cards.actions.tryResetSourceCard());\n\t};\n\n\tconst increment = incrementer();\n\tconst qaRefIndex = incrementer();\n\tconst anchorPosition = sourceCard ? { top: sourceCard.y, left: sourceCard.x } : undefined;\n\n\treturn (\n\t\t<Menu\n\t\t\tref={openState ? menuRef : null}\n\t\t\tkeepMounted\n\t\t\topen={openState}\n\t\t\tanchorReference=\"anchorPosition\"\n\t\t\tanchorPosition={anchorPosition}\n\t\t>\n\t\t\t{openState &&\n\t\t\t\triverCards.map((cardConfig) => (\n\t\t\t\t\t<CardConfigItem\n\t\t\t\t\t\tcardConfig={cardConfig}\n\t\t\t\t\t\tdispatchRiver={dispatchRiver}\n\t\t\t\t\t\tkey={increment()}\n\t\t\t\t\t\tqaRef={cardConfig.type === \"Q-A\" ? qaRefs[qaRefIndex()] : undefined}\n\t\t\t\t\t></CardConfigItem>\n\t\t\t\t))}\n\t\t\t{openState && riverCards.length > 0 && <Divider />}\n\n\t\t\t{openState && [\n\t\t\t\t<NewQACard\n\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\tdispatchRiver(\"Q-A\", \"Q\");\n\t\t\t\t\t}}\n\t\t\t\t></NewQACard>,\n\t\t\t\t<NewNoteCard\n\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\tdispatchRiver(\"Note\", \"NOTE\");\n\t\t\t\t\t}}\n\t\t\t\t></NewNoteCard>,\n\t\t\t]}\n\t\t</Menu>\n\t);\n}\n\nexport const SourceMenuContainer = connect(getContextMenuInitData)(SourceMenu);\n","import { getContextMenuRef, getContextMenuQARefs } from \"./selectors\";\n\n// the root div for the menu invisibly covers the whole screen\n// the actual div that is visible is this\nconst baseContextMenuSelector = \"div.MuiPaper-root\";\n\nexport const contextMenuContainsTargetNode = (state: any, event: Event) => {\n\tconst menuRef = getContextMenuRef(state).current;\n\n\t// the nested items are rendered under a different menu\n\t// the current api does not allow access\n\t// so the qa-refs refer to the Q-button\n\t// we check the click against his parent,\n\t// which is the div that contains the Q and A buttons\n\tconst qaRefs = getContextMenuQARefs(state)\n\t\t.map((refObject) => refObject.current)\n\t\t.filter((cur) => !!cur)\n\t\t.map((ref) => ref.parentNode);\n\n\tconst target = event.target as Node;\n\n\tif (menuRef?.querySelector(baseContextMenuSelector)?.contains(target)) return true;\n\n\tfor (const qaRef of qaRefs) {\n\t\tif (qaRef.contains(target)) return true;\n\t}\n\n\treturn false;\n};\n","import * as actions from \"./actions\";\nimport * as constants from \"./constants\";\nimport * as actionTypes from \"./actionTypes\";\nimport reducer from \"./reducer\";\nimport * as selectors from \"./selectors\";\nimport * as components from \"./components\";\nimport * as utils from \"./utils\";\n\nexport default { actions, actionTypes, constants, components, reducer, selectors, utils };\n","import { Dispatch } from \"redux\";\nimport focus from \"../../focus\";\nimport display from \"../../display\";\nimport creation from \"../../creation\";\nimport { UserFocus } from \"../../focus/model\";\n\ntype KeyActionMap = { [key: string]: any };\n\ntype KeyEventDispatcher = (event: KeyboardEvent, dispatch: any, state?: any) => void;\n\nconst keyEventDispatcher = (keyMap: KeyActionMap) => (event: KeyboardEvent, dispatch: any) => {\n\tconst action = keyMap[event.key];\n\tif (action) {\n\t\tevent.preventDefault();\n\t\tdispatch(action);\n\t}\n};\n\nconst pageControlKeyMap: KeyActionMap = {\n\tArrowLeft: display.actions.previousPage(),\n\tArrowRight: display.actions.nextPage(),\n};\n\nconst contextMenuControlKeyMap: KeyActionMap = {\n\tt: creation.actions.toggleContextMenu(),\n};\n\nconst selectionFocusKeyMap = {\n\t...pageControlKeyMap,\n\t...contextMenuControlKeyMap,\n};\n\nconst selectionFocusDispatcher = keyEventDispatcher(selectionFocusKeyMap);\n\nconst contextMenuFocusKeyMap = { ...contextMenuControlKeyMap };\nconst contextMenuFocusDispatcher = keyEventDispatcher(contextMenuFocusKeyMap);\n\nconst doNothing = (event: any, dispatch: any) => {};\n\nconst focusDispatcherMap: { [focus in UserFocus]: KeyEventDispatcher } = {\n\tSELECTION: selectionFocusDispatcher,\n\tCONTEXT_MENU: contextMenuFocusDispatcher,\n\tEDITOR: doNothing,\n\tCONTROL: doNothing,\n\tEDITOR_CONTROL: doNothing,\n};\n\nexport const keyDownControl = (event: KeyboardEvent) => {\n\treturn (dispatch: Dispatch | any, getState: Function) => {\n\t\tconst state = getState();\n\t\tconst userFocus = focus.selectors.getFocus(state);\n\t\tconst dispatcher = focusDispatcherMap[userFocus];\n\n\t\tdispatcher(event, dispatch, state);\n\t};\n};\n","import { connect } from \"react-redux\";\nimport { useEventListener } from \"../hooks/useEventListener\";\nimport { keyDownControl } from \"../services/keyboardControl\";\nimport { mouseDownControl, mouseUpControl } from \"../services/mouseControl\";\n\nfunction Control({\n\tkeyDownControl,\n\tmouseDownControl,\n\tmouseUpControl,\n}: {\n\tkeyDownControl: (event: KeyboardEvent) => void;\n\tmouseDownControl: (event: MouseEvent) => void;\n\tmouseUpControl: (event: MouseEvent) => void;\n}) {\n\tuseEventListener(\"keydown\", keyDownControl);\n\tuseEventListener(\"mousedown\", mouseDownControl);\n\tuseEventListener(\"mouseup\", mouseUpControl);\n\treturn null;\n}\n\nexport const ControlContainer = connect(\n\t() => {\n\t\treturn {};\n\t},\n\t{\n\t\tkeyDownControl,\n\t\tmouseDownControl,\n\t\tmouseUpControl,\n\t}\n)(Control);\n","import creation from \"../../creation\";\nimport focus from \"../../focus\";\nimport cards from \"../../cards\";\nimport river from \"../../river\";\n\nexport const mouseDownControl = (event: MouseEvent) => {\n\treturn (dispatch: any, getState: Function) => {\n\t\tconst state = getState();\n\t\t// the menu-ref is used for all drop-down menus, so this closes all of them\n\t\tconst clickOutSideOfMenu = !creation.utils.contextMenuContainsTargetNode(state, event);\n\t\tif (clickOutSideOfMenu) {\n\t\t\tdispatch(cards.actions.tryResetSourceCard());\n\t\t\tdispatch(creation.actions.closeContextMenu());\n\t\t}\n\t};\n};\n\nexport const mouseUpControl = (event: MouseEvent) => {\n\treturn (dispatch: any, getState: Function) => {\n\t\tconst selection = document.getSelection();\n\t\tif (selection) {\n\t\t\tconst selectedStr = selection.toString();\n\t\t\tif (selectedStr !== \"\") {\n\t\t\t\tconst state = getState();\n\t\t\t\tconst goalCard = cards.selectors.getGoalCard(state);\n\t\t\t\tconst userFocus = focus.selectors.getFocus(state);\n\n\t\t\t\tif (goalCard && (userFocus === \"EDITOR\" || userFocus === \"SELECTION\")) {\n\t\t\t\t\tconsole.log(event.target);\n\t\t\t\t\tdispatch(\n\t\t\t\t\t\tcards.actions.updateCardContent(\n\t\t\t\t\t\t\tselectedStr,\n\t\t\t\t\t\t\tgoalCard.cardID,\n\t\t\t\t\t\t\tgoalCard.creationType,\n\t\t\t\t\t\t\t\"REPLACE\",\n\t\t\t\t\t\t\tgoalCard.origin\n\t\t\t\t\t\t)\n\t\t\t\t\t);\n\t\t\t\t\tdispatch(cards.actions.resetGoalCard());\n\t\t\t\t} else {\n\t\t\t\t\tif (userFocus === \"SELECTION\") {\n\t\t\t\t\t\t//if the user is focused on the document, the push-to river should always be the active=page-wise river\n\t\t\t\t\t\tdispatch(river.actions.setPushToRiver(river.selectors.getActiveRiverMakeUpID(state)));\n\t\t\t\t\t\tdispatch(creation.actions.selectedParent(selection.anchorNode?.parentNode as HTMLSpanElement));\n\t\t\t\t\t\tdispatch(creation.actions.updateManuallySelectedString(selectedStr));\n\t\t\t\t\t\tdispatch(creation.actions.updateSelectionPosition(event.x, event.y));\n\t\t\t\t\t\tdispatch(creation.actions.openContextMenu());\n\t\t\t\t\t}\n\n\t\t\t\t\tif (userFocus === \"EDITOR\") {\n\t\t\t\t\t\tdispatch(creation.actions.selectedParent(selection.anchorNode?.parentNode as HTMLSpanElement));\n\t\t\t\t\t\tdispatch(creation.actions.updateManuallySelectedString(selectedStr));\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t};\n};\n","import display from \"../../display\";\nimport river from \"../../river\";\nimport React from \"react\";\nimport { AppBar, Toolbar, Grid, Divider } from \"@material-ui/core\";\nimport { useSelector } from \"react-redux\";\n\nexport const ControlBar = () => {\n\tconst totalPages = useSelector(display.selectors.getTotalPages);\n\t//TODO-RC: show active River ID or higlight it in some way? with the mouse-enter pattern this could lead to weird edge cases otherwise\n\treturn (\n\t\t<AppBar position=\"static\">\n\t\t\t<Toolbar variant=\"dense\">\n\t\t\t\t<Grid></Grid>\n\t\t\t\t<river.components.ShowRiverButton></river.components.ShowRiverButton>\n\t\t\t\t<display.components.ShowMaterialButton></display.components.ShowMaterialButton>\n\t\t\t\t<Divider orientation=\"vertical\" flexItem />\n\t\t\t\t{totalPages && <display.components.PageChooser></display.components.PageChooser>}\n\t\t\t\t{totalPages && <display.components.PreviousButton></display.components.PreviousButton>}\n\t\t\t\t{totalPages && <display.components.NextButton></display.components.NextButton>}\n\t\t\t</Toolbar>\n\t\t</AppBar>\n\t);\n};\n","import * as components from \"./components\";\n\nexport default { components };\n","import React, { useState } from \"react\";\nimport Grid from \"@material-ui/core/Grid\";\nimport { withSize } from \"react-sizeme\";\nimport Paper from \"@material-ui/core/Paper\";\nimport display from \"../modules/display\";\nimport control from \"../modules/control\";\nimport river from \"../modules/river\";\nimport creation from \"../modules/creation\";\nimport focus from \"../modules/focus\";\nimport { Divider } from \"@material-ui/core\";\nimport { useDispatch, useSelector } from \"react-redux\";\n\n//TODO-RC: tabbing system for SummaryRiver/Material\n//TODO-RC: make it possible to either show Active River / (Material/ SummaryRiver) or SummaryRiver / Material\n//TODO-RC: in SummaryRiver make Buttons to jump to page of the rivers\n\nconst ReaderSceneRiverColumn = ({ hidden }: any) => {\n\treturn (\n\t\t<Grid\n\t\t\titem\n\t\t\tstyle={{\n\t\t\t\twidth: \"38%\",\n\t\t\t}}\n\t\t\thidden={hidden}\n\t\t>\n\t\t\t<Grid container justify=\"center\" direction=\"row\" alignItems=\"stretch\" spacing={1}>\n\t\t\t\t<Grid item>\n\t\t\t\t\t<river.components.SummaryRiver></river.components.SummaryRiver>\n\t\t\t\t</Grid>\n\t\t\t\t<Grid item>\n\t\t\t\t\t<river.components.ActiveCardRiver></river.components.ActiveCardRiver>\n\t\t\t\t</Grid>\n\t\t\t</Grid>\n\t\t</Grid>\n\t);\n};\n\nfunction ReaderSceneMaterialColumn({ size, hidden }: any) {\n\tconst dispatch = useDispatch();\n\n\tconst [elevation, setElevation] = useState(3);\n\n\treturn (\n\t\t<Grid\n\t\t\titem\n\t\t\tstyle={{\n\t\t\t\twidth: \"60%\",\n\t\t\t}}\n\t\t\tonMouseEnter={() => {\n\t\t\t\tdispatch(focus.actions.tryUpdateFocus(\"SELECTION\"));\n\t\t\t\tsetElevation(20);\n\t\t\t}}\n\t\t\tonMouseLeave={() => {\n\t\t\t\tsetElevation(3);\n\t\t\t}}\n\t\t\thidden={hidden}\n\t\t>\n\t\t\t<Paper elevation={elevation}>\n\t\t\t\t<Divider></Divider>\n\t\t\t\t<display.components.PDFDocumentContainer parentSize={size}></display.components.PDFDocumentContainer>\n\t\t\t\t<display.components.PDFUploadContainer></display.components.PDFUploadContainer>\n\t\t\t</Paper>\n\t\t</Grid>\n\t);\n}\n\nconst ReaderSceneMaterialColumnWithSize = withSize({ monitorHeight: true, noPlaceholder: true })(\n\tReaderSceneMaterialColumn\n);\n\nexport function ReaderScene() {\n\tconst dispatch = useDispatch();\n\n\tconst showMaterial = useSelector(display.selectors.displayStatusIsShow);\n\tconst showRiver = useSelector(river.selectors.riverShowStateIsShow);\n\treturn (\n\t\t<div>\n\t\t\t<control.components.ControlContainer></control.components.ControlContainer>\n\t\t\t<Grid container justify=\"center\" direction=\"column\" alignItems=\"stretch\" spacing={1}>\n\t\t\t\t<Grid\n\t\t\t\t\titem\n\t\t\t\t\tonMouseEnter={() => {\n\t\t\t\t\t\tdispatch(focus.actions.tryUpdateFocus(\"CONTROL\"));\n\t\t\t\t\t}}\n\t\t\t\t>\n\t\t\t\t\t<control.components.ControlBar></control.components.ControlBar>\n\t\t\t\t</Grid>\n\n\t\t\t\t<Grid item>\n\t\t\t\t\t<Grid container justify=\"space-around\" direction=\"row\" alignItems=\"stretch\">\n\t\t\t\t\t\t<ReaderSceneRiverColumn hidden={!showRiver}></ReaderSceneRiverColumn>\n\t\t\t\t\t\t<ReaderSceneMaterialColumnWithSize hidden={!showMaterial}></ReaderSceneMaterialColumnWithSize>\n\t\t\t\t\t</Grid>\n\t\t\t\t</Grid>\n\t\t\t</Grid>\n\t\t\t<creation.components.SourceMenuContainer></creation.components.SourceMenuContainer>\n\t\t\t<creation.components.ContextMenuContainer></creation.components.ContextMenuContainer>\n\t\t</div>\n\t);\n}\n","import { createStore } from \"redux\";\nimport { applyMiddleware } from \"redux\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport thunk from \"redux-thunk\";\nimport { combineReducers } from \"redux\";\nimport focus from \"./modules/focus\";\nimport creation from \"./modules/creation\";\nimport river from \"./modules/river\";\nimport display from \"./modules/display\";\nimport cards from \"./modules/cards\";\nimport { persistStore, persistReducer, createTransform } from \"redux-persist\";\nimport storage from \"redux-persist/lib/storage\"; // defaults to localStorage for web\nimport { CreationData } from \"./modules/creation/model\";\nimport { createRef } from \"react\";\nimport { DisplayData } from \"./modules/display/model\";\n\nconst rootReducer = combineReducers({\n\t[focus.constants.NAME]: focus.reducer,\n\t[creation.constants.NAME]: creation.reducer,\n\t[river.constants.NAME]: river.reducer,\n\t[display.constants.NAME]: display.reducer,\n\t[cards.constants.NAME]: cards.reducer,\n});\n\nconst stateSanitizer = (state: any) => {\n\treturn state.displayData.pdf ? { ...state, displayData: { ...state.displayData, pdf: \"PDF_FILE_IS_HERE\" } } : state;\n};\n\nconst creationTransform = createTransform(\n\t(inboundState: CreationData) => {\n\t\treturn { ...inboundState, menuRef: null, qaRefs: inboundState.qaRefs.map((_) => null), selectedParentSpan: null };\n\t},\n\t(outboundState): CreationData => {\n\t\treturn { ...outboundState, menuRef: createRef(), qaRefs: outboundState.qaRefs.map((_) => createRef()) };\n\t},\n\t{ whitelist: [creation.constants.NAME] }\n);\nconst displayTransform = createTransform(\n\t(inboundState: DisplayData) => {\n\t\treturn { ...inboundState, pdf: null, documentRef: null, materialData: null };\n\t},\n\t(outboundState): DisplayData => {\n\t\treturn {\n\t\t\t...outboundState,\n\t\t\tpdf: undefined,\n\t\t\tdocumentRef: createRef(),\n\t\t\tmaterialData: { materialDataTimeStamp: -Infinity },\n\t\t};\n\t},\n\t{ whitelist: [display.constants.NAME] }\n);\n\nconst persistConfig = {\n\tkey: \"root\",\n\tstorage,\n\ttransforms: [creationTransform, displayTransform],\n};\n\nconst persistedReducer = persistReducer(persistConfig, rootReducer);\n\nconst composeEnhancers = composeWithDevTools({ stateSanitizer });\nconst enhancer = composeEnhancers(applyMiddleware(thunk));\n\nexport const store = createStore(persistedReducer, enhancer);\n\nexport const persistor = persistStore(store);\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { ReaderScene } from \"./scenes/ReaderScene\";\nimport { Provider } from \"react-redux\";\nimport { store, persistor } from \"./store\";\nimport { PersistGate } from \"redux-persist/es/integration/react\";\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<Provider store={store}>\n\t\t\t<PersistGate loading={null} persistor={persistor}>\n\t\t\t\t<ReaderScene></ReaderScene>\n\t\t\t</PersistGate>\n\t\t</Provider>\n\t</React.StrictMode>,\n\tdocument.getElementById(\"root\")\n);\n","function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 66;"],"sourceRoot":""}