{"version":3,"sources":["modules/display/constants.ts","modules/display/actionTypes.ts","modules/display/model.ts","modules/display/selectors.ts","shared/utils.ts","modules/display/actions.ts","modules/text/constants.ts","modules/text/components/NewNoteCardTooltip.tsx","modules/text/components/AddQAButtonTooltip.tsx","modules/text/components/DeleteCardButtonTooltip.tsx","modules/text/components/AppendButtonTooltip.tsx","modules/text/index.ts","modules/display/components/NavigationButtons.tsx","modules/display/components/PageChooser/PageChooser.tsx","modules/display/components/PDFDocument/PageKeyboardControl.tsx","modules/cards/model/model-permutation.ts","modules/cards/model/model-origin.ts","modules/cards/services/transformInputOrigin.ts","modules/cards/constants.ts","modules/cards/actionTypes.ts","modules/cards/model/model-content.ts","modules/cards/model/model-config.ts","modules/cards/selectors.ts","modules/cards/model/model-payload.ts","modules/cards/actions.ts","modules/cards/components/AddNoteButton.tsx","modules/cards/components/AddQAButton.tsx","modules/cards/components/DeleteCardButton.tsx","modules/cards/model/model-state.ts","modules/db/constants.ts","modules/db/actionTypes.ts","modules/db/actions.ts","modules/db/model.ts","modules/db/reducer.ts","modules/db/selectors.ts","modules/db/index.ts","modules/cards/reducer.ts","modules/cards/index.ts","modules/river/constants.ts","modules/river/selectors.ts","modules/river/actionTypes.ts","modules/river/actions.ts","shared/GreenCheckbox.tsx","modules/river/components/RiverContentFormGroup.tsx","modules/selection/constants.ts","modules/selection/actionTypes.ts","modules/selection/selectors.ts","modules/selection/services/use-selection.ts","modules/selection/model.ts","modules/selection/services/get-selection.ts","modules/selection/actions.ts","modules/selection/reducer.ts","modules/selection/components/SelectionSnackbar.tsx","modules/selection/components/MaterialMouseUp.tsx","modules/selection/components/CardMouseUp.tsx","modules/selection/index.ts","modules/river/components/CardRiver/Cards/ClayCardField.tsx","modules/river/components/CardRiver/Buttons/JumpToOriginButton.tsx","modules/river/components/CardRiver/Buttons/GrabForFieldButton.tsx","modules/river/components/CardRiver/Buttons/AppendButton.tsx","modules/river/components/CardRiver/Cards/ClayCardFieldButtons.tsx","modules/river/components/CardRiver/Cards/QACard.tsx","modules/river/components/CardRiver/Cards/NoteCard.tsx","modules/river/components/CardRiver/Cards/ClayCard.tsx","modules/river/components/CardRiver/toCardGridItemsWithDividers.tsx","modules/river/components/CardRiver/CardRiver.tsx","modules/river/components/SwitchActiveRiver.tsx","modules/river/model.ts","modules/river/reducer.ts","modules/river/index.ts","modules/display/components/PDFDocument/GridItemPDFPage.tsx","modules/display/components/PDFDocument/PageMaterialPair.tsx","modules/display/components/PDFDocument/PageMaterialPairList.tsx","modules/display/components/PDFDocument/PDFDocument.tsx","modules/display/components/PDFDocument/cachePageDimensions.tsx","modules/display/reducer.ts","modules/display/index.ts","modules/control/selectors.ts","modules/control/actions.ts","modules/control/components/Options/DeleteDocumentButton.tsx","modules/control/components/Options/InputDataSets.tsx","modules/control/components/Options/InputDocument.tsx","modules/control/components/Options/LoadDocumentDataButton.tsx","modules/control/components/Options/DocumentOptionItem.tsx","modules/control/components/Options/Options.tsx","modules/control/components/CardSearchBar.tsx","modules/control/components/UndoRedoButtons.tsx","modules/control/components/ShowHideButton.tsx","modules/control/components/ControlBar.tsx","modules/control/index.ts","modules/extraction/constants.ts","modules/extraction/actionTypes.ts","modules/extraction/selectors.ts","modules/extraction/services/contextMenuContainsTargetNode.ts","modules/extraction/actions.ts","modules/extraction/reducer.ts","modules/extraction/components/CardConfigItem.tsx","modules/extraction/components/NewButtons.tsx","shared/useEventListener.tsx","modules/extraction/components/ContextMenu.tsx","modules/extraction/index.ts","scene/ReaderScene.tsx","persist.ts","store.ts","index.tsx"],"names":["NAME","PDF_UPLOADED","MATERIAL_LOADED","DISPLAY_STATUS","PAGE_UPDATE","ZOOM_QUEUE","pageCorrections","newPage","totalPages","getAll","state","getPDF","createSelector","pdf","getPDFName","pdfName","getTotalPages","getCurrentPage","currentPage","getPageControlData","getDocumentRef","documentRef","getDisplayStatus","displayStatus","displayStatusIsShow","status","getZoomTarget","zoomTargetSpanIndex","incrementer","counter","curCounter","keyMap","pdfUpload","type","t","payload","materialLoaded","setPage","page","movePage","dispatch","getState","nextPage","previousPage","pageControlKeyMap","ArrowLeft","ArrowRight","pageControlDispatcher","event","action","key","preventDefault","toggleDisplayState","displayState","setZoomTarget","spanIndex","zoomToCardOrigin","console","log","scrollToZoomTarget","switchToActiveRiverTooltip","switchToSummaryRiverTooltip","undoTooltip","redoTooltip","nextPageTooltip","previousPageTooltip","deleteCardTooltip","grabForCardTooltip","jumpToOriginTooltip","appendToCardTooltip","newQACardTooltip","newNoteCardTooltip","deleteDocumentTooltip","loadSavedDocumentTooltip","noMaterialText","loadingMaterialText","activeDocumentText","existingDataText","loadMaterialText","downloadDatasetsText","uploadDatasetsText","noteText","questionText","answerText","defaultEnterDelay","defaultEnterNextDelay","NewNoteCardTooltip","children","Tooltip","title","enterDelay","enterNextDelay","AddQAButtonTooltip","DeleteCardButtonTooltip","AppendButtonTooltip","components","constants","PreviousButton","useDispatch","text","IconButton","onClick","NextButton","PageNavigation","Card","variant","Grid","container","direction","item","Divider","orientation","nonDigitRegEx","PageChooser","useSelector","useState","error","value","toString","userInput","setState","alignItems","justify","style","width","TextField","inputProps","padding","fontSize","fontFamily","fontWeight","lineHeight","letterSpacing","onKeyDown","submittedValue","target","parseInt","onChange","possiblePage","trim","match","asInt","validatePageChoice","Typography","PageKeyboardControl","ref","useRef","tabIndex","FieldValueAccessorMap","note","cardObject","q","a","toFieldValue","field","FieldValueModifierMap","modify","createReplace","inputValue","_","changeCardObject","spec","inputField","inputObject","createModify","modifyFieldValue","fieldToBeChanged","objectToBeChanged","emptyQAOrigin","EmptyOriginMap","emptyOrigin","singleOriginToCardOrigin","singleOrigin","outputField","baseOrigin","changeSpec","transformInputOrigin","inputOrigin","oldOrigin","CARD_REPLACE","CARD_PUSH","CARD_REMOVE","emptyQAContent","EmptyContentMap","emptyContent","noteContentIsEmpty","content","qaContentIsNotFull","UpdateTypeCreateModifyMap","APPEND","oldValue","REPLACE","updateTypeToCreateModify","updateType","strToCardContent","contentStr","existingContent","strToNewCardContent","empty","cardIDToNumber","cardID","nextCardID","lastCardIDNumber","CardIsFullMap","Note","config","cardIsNotFull","strToCardConfig","baseCard","changedContent","CardFieldToTypeMap","cardFieldToType","present","getLastCardIDNumber","getCards","cards","getCardByID","emptyNotePayload","emptyQAPayload","strToCardPayload","EmptyPayloadFieldMap","cardFieldToEmptyPayload","cardPayloadToCardConfig","cardPush","cardPayload","emptyNoteCard","emptyQACard","cardReplace","card","replaceCardFieldContent","cardField","cardConfig","newValue","removeCard","AddNoteButton","AddQAButton","DeleteCardButton","removeCardFromCardsState","replaceCardsInCardsState","updateCardInCards","toBeUpdated","cardObj","addCardToCards","ARCHIVE_CURRENT_DATA","LOAD_DOCUMENT_DATA_SETS","DELETE_DOCUMENT_DATA_SET","DOCUMENT_CHANGE","archiveDBData","dbData","loadDocumentDataSets","newActiveDataSet","deleteDocumentDataSet","document","updateDocumentDataInDocumentDB","documentData","documentDB","name","updateDocumentDataSetsInDocumentDB","documentDataSets","reduce","prev","removeDocumentDataFromDocumentDB","Object","fromEntries","entries","filter","arr","initialState","getDocumentDB","getDocumentNames","db","keys","getDocumentDataSets","values","actions","actionTypes","reducer","selectors","intialState","services","goalCard","model","getRiverMakeUps","riverMakeUps","getActiveRiverMakeUpID","activeRiverMakeUpID","getActiveRiverMakeUp","makeUps","id","makeUp","cardIDs","getActiveRiverCardIDs","getActiveRiverCards","makeUpCardIDs","map","getRiverShowState","riverShowState","riverShowStateIsShow","getHoveredCardData","highlightedCardID","highlightedCardField","getLastRiverIDNumber","lastRiverIDNumber","getRiverContentState","riverContentState","getRiverContentFilter","contentFilter","RIVER_HOVERED_CARD","RIVER_ACTIVE_ID","RIVER_SHOW_STATE","RIVER_CONTENT_STATE","RIVER_CONTENT_FILTER","toggleRiverShowState","setRiverContentState","setActiveRiver","trySetActiveRiver","setHoveredCard","trySetHoveredCard","highlightedCardIDData","resetHoveredCard","setContentFilter","resetContentFilter","GreenCheckbox","withStyles","root","color","green","checked","props","Checkbox","RiverContentFormGroup","showQAs","showNotes","changeContentState","clickedState","FormGroup","FormControlLabel","control","label","SELECTION_SOURCE","SELECTION_GOAL","getGoalConfig","goalConfig","getSourceConfig","sourceConfig","sourceConfigExists","selectionToCard","goalIsCreation","contentOrigin","model_config","model_content","origin","model_origin","undefined","selectionConfigToCardPayload","existingCard","selectionConfigToActualizedCardConfig","getSelectionWorkaround","selection","window","getSelection","activeElement","str","substring","selectionStart","selectionEnd","selStr","e","getSelectionSourceFromMaterial","selectionData","selectedParent","anchorNode","parentNode","nodeName","divTextLayerParent","spanChildren","Array","from","length","index","indexOf","materialSelectionDataToSourceConfig","resetSelectionSource","resetSelectionGoal","addSelectionSource","setSelectionSource","addMaterialSelectionSource","addCardSelectionSource","getSelectionSourceFromCard","addSelectionGoal","setSelectionGoal","SelectionSnackbar","open","setOpen","message","Snackbar","anchorOrigin","vertical","horizontal","onClose","reason","size","aria-label","MaterialMouseUp","onMouseUp","materialSelectionSourceAction","CardFieldMouseUp","fieldOrigin","cardSelectionSourceAction","ClayCardField","storeValue","saveChanges","rest","mutableValue","InputProps","disableUnderline","minWidth","multiline","onBlur","JumpToOriginButton","cardOrigin","GrabForFieldButton","outlined","setOutlined","isGoal","model_permutation","AppendButton","useStore","ClayCardFieldButtons","Paper","QACard","isHoveredCard","useEffect","current","scrollIntoView","behavior","block","inline","elevation","spacing","borderStyle","backgroundColor","InputLabelProps","NoteCard","border","borderRadius","ClayCard","riverID","GridItemDivider","CardRiver","riverCards","materialHeight","gridItems","useMemo","inputCards","noteConfig","includes","noteContainsContentFilter","qaConfig","qaContainsContentFilter","increment","currentCard","push","toCardGridItemsWithDividers","Accordion","defaultExpanded","overflowY","maxHeight","AccordionSummary","align","MozUserSelect","WebkitUserSelect","msUserSelect","AccordionDetails","SwitchActiveRiver","onMouseEnter","pageNumberToRiverMakeUpID","riverMakeUpIDToPageNumber","replace","emptyCardRiver","updateStateWithMakeUps","updatedState","forEach","removeCardFromRivers","entry","riverMakeUp","PDFPage","pageNumber","numPages","triggerResize","onRenderSuccess","querySelectorAll","layer","top","left","transform","onLoadSuccess","GridItemPDFPage","withSize","monitorHeight","pdfPageOuterProps","setMaterialHeight","useLayoutEffect","height","PageMaterialPair","data","cardConfigs","river","pages","pageNumbers","has","set","get","PageZoomControl","PageMaterialPairList","pdfProxyRef","pageDimensions","containerHeight","initialContainerHeight","responsiveScale","listSizeData","setListSizeData","currentPageRef","listRef","itemCount","itemSize","cachedPageDimensions","computeRowHeight","itemData","setSizeData","newResponsiveScale","node","clientHeight","computeResponsiveScale","handleResize","resetAfterIndex","overscanCount","onItemsRendered","pdfjs","GlobalWorkerOptions","workerSrc","version","options","cMapUrl","cMapPacked","PDFDocument","setPageDimensions","pdfNameRef","loading","noData","file","renderMode","inputRef","pdfProxy","promises","i","getPage","Promise","all","then","Map","w","view","h","_pageIndex","WeakMap","cachePageDimensions","onItemClick","createRef","collectCurrentDBData","display","archiveCurrentDBData","fileDownload","require","downloadDBData","localString","Date","toLocaleString","JSON","stringify","changeDocument","newPDFName","currentPDFName","newDocumentData","ActionCreators","clearHistory","loadSavedDocument","deleteDocument","activeDocument","DeleteDocumentDialogAlert","handleClose","Dialog","aria-labelledby","aria-describedby","DialogTitle","DialogContent","DialogContentText","DialogActions","Button","autoFocus","DeleteDocumentButton","InputDataSets","MenuItem","click","disableElevation","startIcon","files","reader","FileReader","readAsText","onload","uploadedDataSets","parse","result","foundDataSet","find","accept","InputDocument","LoadDocumentDataButton","DocumentOptionItemButtonRow","DocumentOptionItem","ActiveDocumentOptionItem","Options","documents","doc","React","anchorEl","setAnchorEl","currentTarget","Menu","keepMounted","Boolean","MenuListProps","paddingLeft","paddingRight","component","marginTop","listStyleType","CardSearchBar","placeholder","onCancelSearch","onRequestSearch","UndoButton","undo","RedoButton","redo","UndoRedoCard","ShowRiverCheckbox","ShowMaterialCheckbox","displayShowState","ShowHideButton","ControlBar","materialName","AppBar","Toolbar","flexGrow","CLOSE_CONTEXT_MENU","OPEN_CONTEXT_MENU","getContextMenuRef","menuRef","getContextMenuFullCardsRef","fullCardRef","getContextMenuQARefs","qaRefs","getContextMenuPosition","position","getContextMenuInitData","contextMenuContainsTargetNode","fullCardsRef","refObject","cur","querySelector","contains","closeContextMenu","openContextMenu","mouseDownControl","rightClickControl","x","y","dispatchCreationFromContextMenu","creationType","creationData","SingleOptionItem","QAOptionItem","qaRef","parentMenuOpen","CardConfigItem","NewQACardQ","NewQACardA","NewNoteCard","NewButtons","useEventListener","eventName","handler","savedHandler","eventListener","addEventListener","removeEventListener","ContextMenuContainer","connect","openState","qaRefIndex","anchorPosition","array","pass","fail","partition","nonFullRiverCards","fullRiverCards","anchorReference","ReaderScene","removeDOMObjectsFromCreationData","inboundState","addDOMObjectsToCreationData","outboundState","extractionTransform","createTransform","future","past","whitelist","extraction","displayTransform","materialData","removeDOMObjectsFromDisplayData","addDOMObjectsToDisplayData","persistConfig","storage","transforms","rootReducer","combineReducers","undoable","includeAction","creation","persistedReducer","persistReducer","enhancer","composeWithDevTools","stateSanitizer","displayData","composeEnhancers","applyMiddleware","thunk","store","createStore","persistor","persistStore","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.6785d872.chunk.js","sourcesContent":["export const NAME = \"displayData\";\n","import { NAME } from \"./constants\";\n\nexport const PDF_UPLOADED = NAME + \"/PDF_UPLOADED\";\nexport const MATERIAL_LOADED = NAME + \"/MATERIAL_LOADED\";\n\nexport const DISPLAY_STATUS = NAME + \"/DISPLAY_STATUS\";\n\nexport const PAGE_UPDATE = NAME + \"/PAGE_UPDATE\";\nexport const ZOOM_QUEUE = NAME + \"/ZOOM_QUEUE\";\n","import { RefObject } from \"react\";\n\nexport type DisplayStatus = \"SHOW\" | \"HIDE\";\n\nexport type DisplayData = {\n\tpdf?: File;\n\tpdfName?: string;\n\tdisplayStatus: DisplayStatus;\n\tcurrentPage: number;\n\ttotalPages: number;\n\tdocumentRef: RefObject<HTMLDivElement>;\n\tzoomTargetSpanIndex: number | null;\n};\n\nexport type PageMove = \"PREVIOUS\" | \"NEXT\";\n\nexport const pageCorrections = {\n\tADD: (newPage: number, totalPages: number) => (newPage === totalPages + 1 ? 1 : newPage),\n\tREMOVE: (newPage: number, totalPages: number) => (newPage === 0 ? totalPages : newPage),\n};\n","import { createSelector } from \"reselect\";\nimport { DisplayData } from \"./model\";\nimport { NAME } from \"./constants\";\n// import selection from \"../selection\";\n// import { SingleOrigin } from \"../cards/model/model-origin\";\n\nexport const getAll = (state: any): DisplayData => state[NAME];\n\nexport const getPDF = createSelector(getAll, (state: DisplayData) => state.pdf);\n\nexport const getPDFName = createSelector(getAll, (state) => state.pdfName);\n\nexport const getTotalPages = createSelector(getAll, (state: DisplayData) => state.totalPages);\n\nexport const getCurrentPage = createSelector(getAll, (state: DisplayData) => state.currentPage);\n\nexport const getPageControlData = createSelector(getTotalPages, getCurrentPage, (totalPages, currentPage) => {\n\treturn { currentPage, totalPages };\n});\n\nexport const getDocumentRef = createSelector(getAll, (state: DisplayData) => state.documentRef);\n\nexport const getDisplayStatus = createSelector(getAll, (state: DisplayData) => state.displayStatus);\n\nexport const displayStatusIsShow = createSelector(getDisplayStatus, (status) => status === \"SHOW\");\n\nexport const getZoomTarget = createSelector(getAll, (state: DisplayData) => state.zoomTargetSpanIndex);\n","import { KeyboardEvent } from \"react\";\n\nexport const incrementer = () => {\n\tlet counter = 0;\n\treturn () => {\n\t\tconst curCounter = counter;\n\t\tcounter++;\n\t\treturn curCounter;\n\t};\n};\n\nexport type KeyActionMap = { [key: string]: any };\n\ntype KeyEventDispatcher = (event: KeyboardEvent<Element>, dispatch: any, state?: any) => void;\n\nexport const keyEventDispatcherCreator = (keyMap: KeyActionMap): KeyEventDispatcher => (\n\tevent: KeyboardEvent,\n\tdispatch: any\n) => {\n\tconst action = keyMap[event.key];\n\tif (action) {\n\t\tevent.preventDefault();\n\t\tdispatch(action);\n\t}\n};\n\nexport function partition(array: Array<any>, filter: (val: any) => boolean) {\n\tlet pass: any[] = [],\n\t\tfail: any[] = [];\n\tarray.forEach((e) => (filter(e) ? pass : fail).push(e));\n\treturn [pass, fail];\n}\n\nexport const tryInterval = (tries: number, ms: number, func: () => boolean) => {\n\tconst increment = incrementer();\n\tconst timeout = setInterval(() => {\n\t\tif (increment() > tries) {\n\t\t\tclearInterval(timeout);\n\t\t\treturn;\n\t\t}\n\n\t\tif (func()) clearInterval(timeout);\n\t}, ms);\n};\n","import { Dispatch } from \"redux\";\nimport * as t from \"./actionTypes\";\nimport { PageMove, pageCorrections } from \"./model\";\nimport { getPageControlData, getDisplayStatus, getZoomTarget } from \"./selectors\";\nimport { keyEventDispatcherCreator, KeyActionMap } from \"../../shared/utils\";\n\nexport const pdfUpload = (pdf: File) => {\n\treturn { type: t.PDF_UPLOADED, payload: pdf };\n};\n\nexport const materialLoaded = (totalPages: number) => {\n\treturn { type: t.MATERIAL_LOADED, payload: totalPages };\n};\n\nexport const setPage = (page: number) => {\n\treturn { type: t.PAGE_UPDATE, payload: page };\n};\n\n//TODO-PERF: maybe hide all rendered pages but not shown instead of re-rendering for faster switching?\nexport const movePage = (type: PageMove) => {\n\treturn (dispatch: Dispatch, getState: Function) => {\n\t\tconst { currentPage, totalPages } = getPageControlData(getState());\n\t\tswitch (type) {\n\t\t\tcase \"NEXT\":\n\t\t\t\tdispatch(setPage(pageCorrections[\"ADD\"](currentPage + 1, totalPages)));\n\t\t\t\tbreak;\n\t\t\tcase \"PREVIOUS\":\n\t\t\t\tdispatch(setPage(pageCorrections[\"REMOVE\"](currentPage - 1, totalPages)));\n\t\t\t\tbreak;\n\t\t}\n\t};\n};\nexport const nextPage = () => movePage(\"NEXT\");\nexport const previousPage = () => movePage(\"PREVIOUS\");\nconst pageControlKeyMap: KeyActionMap = {\n\tArrowLeft: previousPage(),\n\tArrowRight: nextPage(),\n};\nexport const pageControlDispatcher = keyEventDispatcherCreator(pageControlKeyMap);\n\nexport const toggleDisplayState = () => {\n\treturn (dispatch: Dispatch, getState: Function) => {\n\t\tconst displayState = getDisplayStatus(getState()) === \"SHOW\" ? \"HIDE\" : \"SHOW\";\n\n\t\tdispatch({ type: t.DISPLAY_STATUS, payload: displayState });\n\t};\n};\n\nexport const setZoomTarget = (spanIndex: number | null) => {\n\treturn { type: t.ZOOM_QUEUE, payload: spanIndex };\n};\n\nexport const zoomToCardOrigin = (spanIndex: number, page: number) => {\n\treturn (dispatch: Dispatch) => {\n\t\tconsole.log(page, spanIndex);\n\t\tdispatch(setPage(page));\n\t\tdispatch(setZoomTarget(spanIndex));\n\t};\n};\n\nexport const scrollToZoomTarget = () => {\n\treturn (dispatch: Dispatch, getState: Function) => {\n\t\t// \tconst state = getState();\n\t\t// \tconst spanIndex = getZoomTarget(state);\n\t\t// \tif (!!spanIndex) {\n\t\t// \t\tconst materialSpans = getMaterialSpans(state);\n\t\t// \t\tif (materialSpans) {\n\t\t// \t\t\t// this way when no pdf was present we prevent the race-condition of pdf being loaded later\n\t\t// \t\t\tconst originSpan = materialSpans[spanIndex];\n\t\t// \t\t\toriginSpan.scrollIntoView({ behavior: \"smooth\", block: \"center\", inline: \"center\" });\n\t\t// \t\t}\n\t\t// \t\tdispatch(setZoomTarget(null));\n\t\t// \t}\n\t};\n};\n","/// Tooltip-Text\n\nexport const switchToActiveRiverTooltip = \"Switch to the Active-River view\";\nexport const switchToSummaryRiverTooltip = \"Switch to the Summary-River view\";\n\nexport const undoTooltip = \"Undo last action\";\nexport const redoTooltip = \"Redo last action\";\n\nexport const nextPageTooltip = \"Next page\";\nexport const previousPageTooltip = \"Previous page\";\n\nexport const deleteCardTooltip = \"Delete this card\";\nexport const grabForCardTooltip = \"Activate the document-selection grab for this card(-field)\";\nexport const jumpToOriginTooltip = \"Jump to the origin of the card content\";\nexport const appendToCardTooltip = \"Add the current selection to this card (only from document)\";\n\nexport const newQACardTooltip = \"Create new QA-card\";\nexport const newNoteCardTooltip = \"Create new Note-card\";\n\nexport const deleteDocumentTooltip = \"Delete this document and all its corresponding cards\";\nexport const loadSavedDocumentTooltip = \"Load the card data of this document\";\n\n/// Text\n\nexport const noMaterialText = \"No PDF file specified.\";\nexport const loadingMaterialText = \"Loading PDF…\";\n\nexport const activeDocumentText = \"Active Document:\";\nexport const existingDataText = \"Inactive documents with existing data:\";\nexport const loadMaterialText = \"Load document\";\nexport const downloadDatasetsText = \"Download document datasets\";\nexport const uploadDatasetsText = \"Upload document datasets\";\n\nexport const noteText = \"Note\";\nexport const questionText = \"Question\";\nexport const answerText = \"Answer\";\n\n/// Delay\n\nexport const defaultEnterDelay = 500;\nexport const defaultEnterNextDelay = 1000;\n","import React, { ReactElement } from \"react\";\nimport { Tooltip } from \"@material-ui/core\";\nimport { newNoteCardTooltip, defaultEnterDelay, defaultEnterNextDelay } from \"../constants\";\n\nexport const NewNoteCardTooltip = ({ children }: { children: ReactElement }) => {\n\treturn (\n\t\t<Tooltip title={newNoteCardTooltip} enterDelay={defaultEnterDelay} enterNextDelay={defaultEnterNextDelay}>\n\t\t\t{children}\n\t\t</Tooltip>\n\t);\n};\n","import React, { ReactElement } from \"react\";\nimport { Tooltip } from \"@material-ui/core\";\nimport { defaultEnterDelay, defaultEnterNextDelay, newQACardTooltip } from \"../constants\";\n\nexport const AddQAButtonTooltip = ({ children }: { children: ReactElement }) => {\n\treturn (\n\t\t<Tooltip title={newQACardTooltip} enterDelay={defaultEnterDelay} enterNextDelay={defaultEnterNextDelay}>\n\t\t\t{children}\n\t\t</Tooltip>\n\t);\n};\n","import React, { ReactElement } from \"react\";\nimport { Tooltip } from \"@material-ui/core\";\nimport { defaultEnterDelay, defaultEnterNextDelay, deleteCardTooltip } from \"../constants\";\n\nexport const DeleteCardButtonTooltip = ({ children }: { children: ReactElement }) => {\n\treturn (\n\t\t<Tooltip title={deleteCardTooltip} enterDelay={defaultEnterDelay} enterNextDelay={defaultEnterNextDelay}>\n\t\t\t{children}\n\t\t</Tooltip>\n\t);\n};\n","import React, { ReactElement } from \"react\";\nimport { Tooltip } from \"@material-ui/core\";\nimport { defaultEnterDelay, defaultEnterNextDelay, appendToCardTooltip } from \"../constants\";\n\nexport const AppendButtonTooltip = ({ children }: { children: ReactElement }) => {\n\treturn (\n\t\t<Tooltip title={appendToCardTooltip} enterDelay={defaultEnterDelay} enterNextDelay={defaultEnterNextDelay}>\n\t\t\t{children}\n\t\t</Tooltip>\n\t);\n};\n","import * as components from \"./components\";\nimport * as constants from \"./constants\";\n\nexport default { components, constants };\n","import React from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { IconButton, Card, Grid, Divider, Tooltip } from \"@material-ui/core\";\nimport ArrowForwardIosIcon from \"@material-ui/icons/ArrowForwardIos\";\nimport ArrowBackIosIcon from \"@material-ui/icons/ArrowBackIos\";\nimport { nextPage, previousPage } from \"../actions\";\nimport text from \"../../text\";\n\nconst PreviousButton = () => {\n\tconst dispatch = useDispatch();\n\treturn (\n\t\t<Tooltip\n\t\t\ttitle={text.constants.previousPageTooltip}\n\t\t\tenterDelay={text.constants.defaultEnterDelay}\n\t\t\tenterNextDelay={text.constants.defaultEnterNextDelay}\n\t\t>\n\t\t\t<IconButton\n\t\t\t\ttype=\"button\"\n\t\t\t\tonClick={() => {\n\t\t\t\t\tdispatch(previousPage());\n\t\t\t\t}}\n\t\t\t>\n\t\t\t\t<ArrowBackIosIcon></ArrowBackIosIcon>\n\t\t\t</IconButton>\n\t\t</Tooltip>\n\t);\n};\n\nconst NextButton = () => {\n\tconst dispatch = useDispatch();\n\treturn (\n\t\t<Tooltip\n\t\t\ttitle={text.constants.nextPageTooltip}\n\t\t\tenterDelay={text.constants.defaultEnterDelay}\n\t\t\tenterNextDelay={text.constants.defaultEnterNextDelay}\n\t\t>\n\t\t\t<IconButton\n\t\t\t\ttype=\"button\"\n\t\t\t\tonClick={() => {\n\t\t\t\t\tdispatch(nextPage());\n\t\t\t\t}}\n\t\t\t>\n\t\t\t\t<ArrowForwardIosIcon></ArrowForwardIosIcon>\n\t\t\t</IconButton>\n\t\t</Tooltip>\n\t);\n};\n\nexport const PageNavigation = () => {\n\treturn (\n\t\t<Card variant=\"outlined\">\n\t\t\t<Grid container direction=\"row\">\n\t\t\t\t<Grid item>\n\t\t\t\t\t<PreviousButton></PreviousButton>\n\t\t\t\t</Grid>\n\t\t\t\t<Grid item>\n\t\t\t\t\t<Divider orientation=\"vertical\"></Divider>\n\t\t\t\t</Grid>\n\t\t\t\t<Grid item>\n\t\t\t\t\t<NextButton></NextButton>\n\t\t\t\t</Grid>\n\t\t\t</Grid>\n\t\t</Card>\n\t);\n};\n","import React, { useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Typography, TextField, Card, Grid } from \"@material-ui/core\";\nimport { setPage } from \"../../actions\";\nimport { getPageControlData } from \"../../selectors\";\n\nconst nonDigitRegEx = /(\\D)/;\n\nexport const validatePageChoice = (possiblePage: string, totalPages: number) => {\n\tif (possiblePage === \"\" || possiblePage.trim().match(nonDigitRegEx) !== null) return false;\n\n\tconst asInt = parseInt(possiblePage);\n\tif (asInt < 1 || totalPages < asInt) return false;\n\n\treturn true;\n};\n\nexport const PageChooser = () => {\n\tconst dispatch = useDispatch();\n\tconst { currentPage, totalPages } = useSelector(getPageControlData);\n\n\tconst [state, setState] = useState({\n\t\terror: false,\n\t\tvalue: currentPage?.toString(),\n\t\tuserInput: currentPage?.toString(),\n\t});\n\n\t// with this we can trigger a re-render onChange,\n\t// while making sure that if a new currentPage arrives, we reset the component\n\tif (state.value !== currentPage.toString()) {\n\t\tsetState({ error: false, value: currentPage.toString(), userInput: currentPage.toString() });\n\t}\n\n\treturn (\n\t\t<Card variant=\"outlined\">\n\t\t\t<Grid item>\n\t\t\t\t<Grid container direction=\"row\" alignItems=\"center\" justify=\"space-between\">\n\t\t\t\t\t<Grid item style={{ width: \"37%\" }}>\n\t\t\t\t\t\t<TextField\n\t\t\t\t\t\t\tinputProps={{\n\t\t\t\t\t\t\t\tstyle: {\n\t\t\t\t\t\t\t\t\tpadding: \"0px\",\n\t\t\t\t\t\t\t\t\t//h6 Typography style\n\t\t\t\t\t\t\t\t\tfontSize: \"1.25rem\",\n\t\t\t\t\t\t\t\t\tfontFamily: '\"Roboto\", \"Helvetica\", \"Arial\", sansSerif',\n\t\t\t\t\t\t\t\t\tfontWeight: 500,\n\t\t\t\t\t\t\t\t\tlineHeight: 1.6,\n\t\t\t\t\t\t\t\t\tletterSpacing: \"0.0075em\",\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\tvariant=\"filled\"\n\t\t\t\t\t\t\tvalue={state.userInput}\n\t\t\t\t\t\t\tonKeyDown={(event) => {\n\t\t\t\t\t\t\t\tif (event.key === \"Enter\") {\n\t\t\t\t\t\t\t\t\tevent.preventDefault();\n\t\t\t\t\t\t\t\t\tconst submittedValue = (event.target as HTMLFormElement).value;\n\t\t\t\t\t\t\t\t\tif (!state.error) {\n\t\t\t\t\t\t\t\t\t\tdispatch(setPage(parseInt(submittedValue)));\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\tonChange={(event) => {\n\t\t\t\t\t\t\t\tconst submittedValue = (event.target as HTMLTextAreaElement).value;\n\t\t\t\t\t\t\t\tif (validatePageChoice(submittedValue, totalPages as number)) {\n\t\t\t\t\t\t\t\t\tsetState({ ...state, error: false, userInput: submittedValue });\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\tsetState({ ...state, error: true, userInput: submittedValue });\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\terror={state.error}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</Grid>\n\n\t\t\t\t\t<Grid item style={{ width: \"61%\" }}>\n\t\t\t\t\t\t<Typography variant=\"h6\">of {totalPages}</Typography>\n\t\t\t\t\t</Grid>\n\t\t\t\t</Grid>\n\t\t\t</Grid>\n\t\t</Card>\n\t);\n};\n","import { ReactNode, KeyboardEvent, useRef, MutableRefObject } from \"react\";\nimport { pageControlDispatcher } from \"../../actions\";\nimport React from \"react\";\nimport { useDispatch } from \"react-redux\";\n\n// note to self: prefer to expose components and not implementation details (actions etc.)\n\nexport const PageKeyboardControl = ({ children }: { children: ReactNode }) => {\n\tconst dispatch = useDispatch();\n\tconst ref: MutableRefObject<null | HTMLInputElement> = useRef(null);\n\n\treturn (\n\t\t<span\n\t\t\tref={ref}\n\t\t\tonKeyDown={(event: KeyboardEvent<HTMLSpanElement>) => {\n\t\t\t\tpageControlDispatcher(event, dispatch);\n\t\t\t}}\n\t\t\ttabIndex={0}\n\t\t>\n\t\t\t{children}\n\t\t</span>\n\t);\n};\n","import { CardField, QACardField } from \"./model-content\";\n\n// for origin and content the same object structure is used,\n// so same permutation api should be used\n\ntype NoteObject = any;\ntype QAObject = { [key in QACardField]: any };\ntype CardObject = NoteObject | QAObject;\n\nconst FieldValueAccessorMap: { [field in CardField]: (cardObject: CardObject) => any } = {\n\tnote: (cardObject) => cardObject,\n\tq: (cardObject) => (cardObject as QAObject).q,\n\ta: (cardObject) => (cardObject as QAObject).a,\n};\nexport const toFieldValue = (field: CardField, cardObject: CardObject) => FieldValueAccessorMap[field](cardObject);\n\ntype Modify = (oldValue: any) => any;\nconst FieldValueModifierMap: { [key in CardField]: (cardObject: CardObject, modify: Modify) => any } = {\n\tnote: (cardObject, modify) => modify(cardObject),\n\tq: (cardObject, modify) => {\n\t\treturn { ...(cardObject as QAObject), q: modify((cardObject as QAObject).q) };\n\t},\n\ta: (cardObject, modify) => {\n\t\treturn { ...(cardObject as QAObject), a: modify((cardObject as QAObject).a) };\n\t},\n};\nconst modifyFieldValue = (field: CardField, cardObject: CardObject, modify: Modify) =>\n\tFieldValueModifierMap[field](cardObject, modify);\n\nexport type CreateModify = (inputValue: any) => Modify;\n\n// this replace is generic, I dont put append here, because that is object specific\nexport const createReplace: CreateModify = (inputValue: any) => (_: any) => inputValue;\n\nexport type CardObjectChangeSpec = {\n\tinputField: CardField;\n\tinputObject: CardObject;\n\tfieldToBeChanged: CardField;\n\tobjectToBeChanged: CardObject;\n\tcreateModify: CreateModify;\n};\nexport const changeCardObject = (spec: CardObjectChangeSpec) => {\n\tconst inputValue = toFieldValue(spec.inputField, spec.inputObject);\n\tconst modify = spec.createModify(inputValue);\n\treturn modifyFieldValue(spec.fieldToBeChanged, spec.objectToBeChanged, modify);\n};\n","import { CardField } from \"./model-content\";\nimport { createReplace, changeCardObject } from \"./model-permutation\";\n\nexport type SingleOrigin = { spanIndex: number; page: number };\nexport type QOnlyQAOrigin = { q: SingleOrigin; a: {} };\nexport type AOnlyQAOrigin = { q: {}; a: SingleOrigin };\nexport type PartialQAOrigin = QOnlyQAOrigin | AOnlyQAOrigin;\nconst emptyQAOrigin = () => {\n\treturn { q: {}, a: {} };\n};\ntype EmptyOrigin = { q: {}; a: {} } | \"\";\nconst EmptyOriginMap: { [field in CardField]: () => EmptyOrigin } = {\n\tq: emptyQAOrigin,\n\ta: emptyQAOrigin,\n\tnote: () => \"\",\n};\nexport const emptyOrigin = (field: CardField) => {\n\treturn EmptyOriginMap[field]();\n};\ntype FullQAOrigin = { q: SingleOrigin; a: SingleOrigin };\nexport type QAOrigin = FullQAOrigin | PartialQAOrigin;\nexport type NoteOrigin = SingleOrigin;\nexport type CardOrigin = NoteOrigin | QAOrigin;\n\nexport const singleOriginToCardOrigin = (\n\tsingleOrigin: SingleOrigin,\n\toutputField: CardField,\n\tbaseOrigin?: CardOrigin\n): CardOrigin => {\n\tconst changeSpec = {\n\t\tinputObject: singleOrigin,\n\t\tinputField: \"note\" as CardField,\n\t\tfieldToBeChanged: outputField,\n\t\tobjectToBeChanged: baseOrigin ? baseOrigin : emptyOrigin(outputField),\n\t\tcreateModify: createReplace,\n\t};\n\n\treturn changeCardObject(changeSpec);\n};\n","import { CardField } from \"../model/model-content\";\nimport { CardOrigin, emptyOrigin } from \"../model/model-origin\";\nimport { changeCardObject, createReplace } from \"../model/model-permutation\";\n\nexport const transformInputOrigin = (\n\tinputOrigin: CardOrigin,\n\tinputField: CardField,\n\toutputField: CardField,\n\toldOrigin?: CardOrigin\n): CardOrigin => {\n\tconst objectToBeChanged = oldOrigin ? oldOrigin : emptyOrigin(outputField);\n\tconst changeSpec = {\n\t\tinputField,\n\t\tfieldToBeChanged: outputField,\n\t\tobjectToBeChanged,\n\t\tinputObject: inputOrigin,\n\t\tcreateModify: createReplace,\n\t};\n\treturn changeCardObject(changeSpec);\n};\n","export const NAME = \"cards\";\n","import { NAME } from \"./constants\";\n\nexport const CARD_REPLACE = NAME + \"/CARD_REPLACE\";\nexport const CARD_PUSH = NAME + \"/CARD_PUSH\";\nexport const CARD_REMOVE = NAME + \"/CARD_REMOVE\";\n","import { CreateModify, changeCardObject, createReplace } from \"./model-permutation\";\nimport { UpdateType } from \"./model-config\";\n\nexport type QACardField = \"q\" | \"a\";\nexport type CardField = \"note\" | QACardField;\n\nexport type StringCardContent = string;\nexport type NoteCardContent = StringCardContent;\nexport type QACardContent = {\n\t[field in QACardField]: StringCardContent;\n};\nexport type CardContent = NoteCardContent | QACardContent;\n\ntype EmptyContent = { q: \"\"; a: \"\" } | \"\";\nconst emptyQAContent = (): EmptyContent => {\n\treturn { q: \"\", a: \"\" };\n};\nconst EmptyContentMap: { [field in CardField]: () => EmptyContent } = {\n\tq: emptyQAContent,\n\ta: emptyQAContent,\n\tnote: () => \"\",\n};\nexport const emptyContent = (field: CardField) => {\n\treturn EmptyContentMap[field]();\n};\n\nexport const noteContentIsEmpty = (content: string) => content === \"\";\nexport const qaContentIsNotFull = (content: QACardContent) =>\n\t(content as QACardContent).q === \"\" || (content as QACardContent).a === \"\";\n\nconst createAppendStr: CreateModify = (inputValue: string) => (oldValue: string) => oldValue + inputValue;\nconst UpdateTypeCreateModifyMap: { [updateType in UpdateType]: CreateModify } = {\n\tAPPEND: createAppendStr,\n\tREPLACE: createReplace,\n};\nconst updateTypeToCreateModify = (updateType: UpdateType) => UpdateTypeCreateModifyMap[updateType];\n\n// noteObjects are a single value like the selectedString, so we use them as a field for convenience\n// TODO-NICE: make single value generic CardObject definition\nconst inputField: CardField = \"note\";\n\nexport const strToCardContent = (\n\tcontentStr: string,\n\toutputField: CardField,\n\tupdateType: UpdateType,\n\texistingContent: CardContent\n): CardContent => {\n\tconst changeSpec = {\n\t\tinputObject: contentStr,\n\t\tinputField,\n\t\tfieldToBeChanged: outputField,\n\t\tobjectToBeChanged: existingContent,\n\t\tcreateModify: updateTypeToCreateModify(updateType),\n\t};\n\treturn changeCardObject(changeSpec);\n};\n\nexport const strToNewCardContent = (contentStr: string, outputField: CardField) => {\n\t// new is always empty and we replace the input in the empty shell\n\tconst empty = emptyContent(outputField);\n\treturn strToCardContent(contentStr, outputField, \"REPLACE\", empty);\n};\n","import { NoteOrigin, QAOrigin } from \"./model-origin\";\nimport {\n\tNoteCardContent,\n\tQACardContent,\n\tnoteContentIsEmpty,\n\tqaContentIsNotFull,\n\tstrToCardContent,\n\tCardField,\n} from \"./model-content\";\n\nexport type CardID = string;\nexport const cardIDToNumber = (cardID: CardID) => parseInt(cardID);\nexport const nextCardID = (lastCardIDNumber: number) => (lastCardIDNumber + 1).toString();\n\nexport type CardType = \"Note\" | \"Q-A\";\nexport type NoteConfig = { cardID: CardID; type: CardType; content: NoteCardContent; origin?: NoteOrigin };\nexport type QAConfig = { cardID: CardID; type: CardType; content: QACardContent; origin?: QAOrigin };\nexport type CardConfig = NoteConfig | QAConfig;\n\nconst CardIsFullMap: { [card in CardType]: (config: CardConfig) => boolean } = {\n\tNote: (config) => noteContentIsEmpty(config.content as NoteCardContent),\n\t\"Q-A\": (config) => qaContentIsNotFull(config.content as QACardContent),\n};\nexport const cardIsNotFull = (config: CardConfig) => CardIsFullMap[config.type](config);\n\nexport type UpdateType = \"REPLACE\" | \"APPEND\";\n\nexport type CreationType = \"note\" | \"q\" | \"a\";\n\nexport const strToCardConfig = (\n\tcontentStr: string,\n\toutputField: CardField,\n\tupdateType: UpdateType,\n\tbaseCard: CardConfig\n): CardConfig => {\n\tconst changedContent = strToCardContent(contentStr, outputField, updateType, baseCard.content);\n\treturn { ...baseCard, content: changedContent } as CardConfig;\n};\n\nconst CardFieldToTypeMap: { [field in CardField]: CardType } = {\n\tq: \"Q-A\",\n\ta: \"Q-A\",\n\tnote: \"Note\",\n};\n\nexport const cardFieldToType = (field: CardField) => CardFieldToTypeMap[field];\n\nexport type CardFieldIdentifier = { cardID: CardID; cardField: CardField };\n","import { createSelector } from \"reselect\";\nimport { CardsState } from \"./model/model-state\";\nimport { NAME } from \"./constants\";\n\nexport const getAll = (state: any) => state[NAME].present;\n\nexport const getLastCardIDNumber = createSelector(getAll, (state) => state.lastCardIDNumber);\n\nexport const getCards = createSelector(getAll, (state: CardsState) => state.cards);\n\nexport const getCardByID = (state: any, cardID: string) => getCards(state)[cardID];\n","import { CardField, strToCardContent } from \"./model-content\";\nimport { getLastCardIDNumber } from \"../selectors\";\nimport { CardConfig, nextCardID, UpdateType } from \"./model-config\";\nimport { CardsState } from \"./model-state\";\n\nexport type CardPayload = Omit<CardConfig, \"cardID\">;\nexport const emptyNotePayload = (): CardPayload => {\n\treturn { type: \"Note\", content: \"\" };\n};\nexport const emptyQAPayload = (): CardPayload => {\n\treturn { type: \"Q-A\", content: { q: \"\", a: \"\" } };\n};\n\nexport const strToCardPayload = (\n\tcontentStr: string,\n\toutputField: CardField,\n\tupdateType: UpdateType,\n\tbaseCard: CardPayload\n): CardPayload => {\n\tconst changedContent = strToCardContent(contentStr, outputField, updateType, baseCard.content);\n\treturn { ...baseCard, content: changedContent };\n};\n\nconst EmptyPayloadFieldMap: {\n\t[key in CardField]: () => CardPayload;\n} = {\n\tnote: emptyNotePayload,\n\tq: emptyQAPayload,\n\ta: emptyQAPayload,\n};\nexport const cardFieldToEmptyPayload = (field: CardField) => EmptyPayloadFieldMap[field]();\n\nexport const cardPayloadToCardConfig = (payload: CardPayload, state: CardsState) => {\n\treturn { ...payload, cardID: nextCardID(getLastCardIDNumber(state)) } as CardConfig;\n};\n","import { CardConfig, CardID, strToCardConfig } from \"./model/model-config\";\nimport { CardPayload, cardPayloadToCardConfig, emptyNotePayload, emptyQAPayload } from \"./model/model-payload\";\nimport * as t from \"./actionTypes\";\nimport { Dispatch } from \"redux\";\nimport { CardField } from \"./model/model-content\";\n\nexport const cardPush = (cardPayload: CardPayload) => {\n\treturn (dispatch: Dispatch, getState: Function) => {\n\t\tdispatch({\n\t\t\ttype: t.CARD_PUSH,\n\t\t\tpayload: cardPayloadToCardConfig(cardPayload, getState()),\n\t\t});\n\t};\n};\nexport const emptyNoteCard = () => cardPush(emptyNotePayload());\nexport const emptyQACard = () => cardPush(emptyQAPayload());\n\nexport const cardReplace = (card: CardConfig) => {\n\treturn { type: t.CARD_REPLACE, payload: card };\n};\nexport const replaceCardFieldContent = (cardField: CardField, cardConfig: CardConfig, newValue: string) => {\n\treturn cardReplace(strToCardConfig(newValue, cardField, \"REPLACE\", cardConfig));\n};\n\nexport const removeCard = (cardID: CardID) => {\n\treturn { type: t.CARD_REMOVE, payload: cardID };\n};\n","import FeaturedVideoIcon from \"@material-ui/icons/FeaturedVideo\";\nimport React from \"react\";\nimport { IconButton } from \"@material-ui/core\";\nimport { useDispatch } from \"react-redux\";\nimport text from \"../../text\";\nimport { emptyNoteCard } from \"../actions\";\n\nexport const AddNoteButton = () => {\n\tconst dispatch = useDispatch();\n\treturn (\n\t\t<text.components.NewNoteCardTooltip>\n\t\t\t<IconButton\n\t\t\t\ttype=\"button\"\n\t\t\t\tonClick={() => {\n\t\t\t\t\tdispatch(emptyNoteCard());\n\t\t\t\t}}\n\t\t\t>\n\t\t\t\t<FeaturedVideoIcon></FeaturedVideoIcon>\n\t\t\t</IconButton>\n\t\t</text.components.NewNoteCardTooltip>\n\t);\n};\n","import FeaturedPlayListIcon from \"@material-ui/icons/FeaturedPlayList\";\nimport React from \"react\";\nimport { IconButton } from \"@material-ui/core\";\nimport { useDispatch } from \"react-redux\";\nimport text from \"../../text\";\nimport { emptyQACard } from \"../actions\";\n\nexport const AddQAButton = () => {\n\tconst dispatch = useDispatch();\n\treturn (\n\t\t<text.components.AddQAButtonTooltip>\n\t\t\t<IconButton\n\t\t\t\ttype=\"button\"\n\t\t\t\tonClick={() => {\n\t\t\t\t\tdispatch(emptyQACard());\n\t\t\t\t}}\n\t\t\t>\n\t\t\t\t<FeaturedPlayListIcon></FeaturedPlayListIcon>\n\t\t\t</IconButton>\n\t\t</text.components.AddQAButtonTooltip>\n\t);\n};\n","import DeleteForeverIcon from \"@material-ui/icons/DeleteForever\";\nimport React from \"react\";\nimport { IconButton } from \"@material-ui/core\";\nimport { useDispatch } from \"react-redux\";\nimport { CardID } from \"../model/model-config\";\nimport text from \"../../text\";\nimport { removeCard } from \"../actions\";\n\n//TODO-NICE: use storybook for visual component testing\n\nexport const DeleteCardButton = ({ cardID }: { cardID: CardID }) => {\n\tconst dispatch = useDispatch();\n\treturn (\n\t\t<text.components.DeleteCardButtonTooltip>\n\t\t\t<IconButton\n\t\t\t\ttype=\"button\"\n\t\t\t\tonClick={() => {\n\t\t\t\t\tdispatch(removeCard(cardID));\n\t\t\t\t}}\n\t\t\t>\n\t\t\t\t<DeleteForeverIcon fontSize=\"small\"></DeleteForeverIcon>\n\t\t\t</IconButton>\n\t\t</text.components.DeleteCardButtonTooltip>\n\t);\n};\n","import { CardConfig, CardID } from \"./model-config\";\n\ntype Cards = { [cardID: string]: CardConfig };\n\nexport type CardsState = {\n\tcards: Cards;\n\tlastCardIDNumber: number;\n};\nexport const removeCardFromCardsState = (state: CardsState, cardID: CardID) => {\n\tconst cards = { ...state.cards };\n\n\t// we do not reset the ID counter\n\tdelete cards[cardID];\n\n\treturn { ...state, cards };\n};\nexport const replaceCardsInCardsState = (state: CardsState, cards: Cards, lastCardIDNumber: number) => {\n\treturn {\n\t\t...state,\n\t\tcards,\n\t\tlastCardIDNumber,\n\t};\n};\nexport const updateCardInCards = (cards: Cards, toBeUpdated: CardConfig) => {\n\tconst cardObj = { ...cards };\n\tcardObj[toBeUpdated.cardID] = toBeUpdated;\n\treturn cardObj;\n};\nexport const addCardToCards = updateCardInCards;\n","export const NAME = \"documentDB\";\n","import { NAME } from \"./constants\";\n\nexport const ARCHIVE_CURRENT_DATA = NAME + \"/ARCHIVE_CURRENT_DATA\";\nexport const LOAD_DOCUMENT_DATA_SETS = NAME + \"/LOAD_DOCUMENT_DATA_SETS\";\nexport const DELETE_DOCUMENT_DATA_SET = NAME + \"/DELETE_DOCUMENT_DATA_SET\";\nexport const DOCUMENT_CHANGE = NAME + \"/DOCUMENT_CHANGE\";\n","import { DocumentData } from \"./model\";\nimport * as t from \"./actionTypes\";\n\nexport const archiveDBData = (dbData: DocumentData) => {\n\treturn { type: t.ARCHIVE_CURRENT_DATA, payload: dbData };\n};\n\nexport const loadDocumentDataSets = (dbData: DocumentData[], newActiveDataSet?: DocumentData) => {\n\treturn { type: t.LOAD_DOCUMENT_DATA_SETS, payload: { dbData, newActiveDataSet } };\n};\n\n//TODO-NICE: might need to make my convention of always using payload as data-field obvious?\n\nexport const deleteDocumentDataSet = (document: string) => {\n\treturn { type: t.DELETE_DOCUMENT_DATA_SET, payload: document };\n};\n","import { CardRiverState } from \"../river/model\";\nimport { CardsState } from \"../cards/model/model-state\";\nimport { DisplayData } from \"../display/model\";\n\nexport type ArchiveRiver = Pick<CardRiverState, \"riverMakeUps\" | \"lastRiverIDNumber\">;\n\nexport type ArchiveCards = Pick<CardsState, \"cards\" | \"lastCardIDNumber\">;\n\ntype ArchiveDisplay = Pick<DisplayData, \"currentPage\" | \"totalPages\">;\n\nexport type DocumentData = {\n\tname: string;\n} & ArchiveDisplay &\n\tArchiveRiver &\n\tArchiveCards;\n\nexport type DocumentDB = { [name: string]: DocumentData };\n\nexport type DocumentDBState = { documentDB: DocumentDB };\n\nexport const updateDocumentDataInDocumentDB = (state: DocumentDBState, documentData: DocumentData): DocumentDBState => {\n\treturn {\n\t\t...state,\n\t\tdocumentDB: { ...state.documentDB, [documentData.name]: documentData },\n\t};\n};\n\nexport const updateDocumentDataSetsInDocumentDB = (\n\tstate: DocumentDBState,\n\tdocumentDataSets: DocumentData[]\n): DocumentDBState => {\n\treturn {\n\t\t...state,\n\t\tdocumentDB: {\n\t\t\t...state.documentDB,\n\t\t\t...documentDataSets.reduce((prev, dbData) => {\n\t\t\t\tprev[dbData.name] = dbData;\n\t\t\t\treturn prev;\n\t\t\t}, {} as DocumentDB),\n\t\t},\n\t};\n};\n\nexport const removeDocumentDataFromDocumentDB = (state: DocumentDBState, document: string): DocumentDBState => {\n\treturn {\n\t\t...state,\n\t\tdocumentDB: Object.fromEntries(Object.entries(state.documentDB).filter((arr) => arr[0] !== document)),\n\t};\n};\n","import {\n\tDocumentDBState,\n\tDocumentData,\n\tupdateDocumentDataInDocumentDB,\n\tupdateDocumentDataSetsInDocumentDB,\n\tremoveDocumentDataFromDocumentDB,\n} from \"./model\";\nimport * as t from \"./actionTypes\";\n\nconst initialState: DocumentDBState = { documentDB: {} };\n\n//TODO-NICE: PDF-date gets saved with name, better use some hash or something (rename of document file is likely) -> use size or last-modified or smth like that instead of name\n\nconst documentDB = (\n\tstate = initialState,\n\t{ type, payload }: { type: string; payload: DocumentData | DocumentData[] | string | { dbData: DocumentData[] } }\n): DocumentDBState => {\n\tswitch (type) {\n\t\t// dont need to undo this, because if we change the active river and then change the document, the archive version gets overwritten\n\t\tcase t.ARCHIVE_CURRENT_DATA:\n\t\t\treturn updateDocumentDataInDocumentDB(state, payload as DocumentData);\n\t\tcase t.LOAD_DOCUMENT_DATA_SETS:\n\t\t\treturn updateDocumentDataSetsInDocumentDB(\n\t\t\t\tstate,\n\t\t\t\t(payload as { dbData: DocumentData[] }).dbData as DocumentData[]\n\t\t\t);\n\t\tcase t.DELETE_DOCUMENT_DATA_SET:\n\t\t\treturn removeDocumentDataFromDocumentDB(state, payload as string);\n\t\tdefault:\n\t\t\treturn state;\n\t}\n};\n\nexport default documentDB;\n","import { createSelector } from \"reselect\";\nimport { DocumentDBState } from \"./model\";\nimport { NAME } from \"./constants\";\n\nexport const getAll = (state: any) => state[NAME].present;\n\nexport const getDocumentDB = createSelector(getAll, (state: DocumentDBState) => state.documentDB);\n\nexport const getDocumentNames = createSelector(getDocumentDB, (db) => Object.keys(db));\n\nexport const getDocumentDataSets = createSelector(getDocumentDB, (db) => Object.values(db));\n","import * as actions from \"./actions\";\nimport * as actionTypes from \"./actionTypes\";\nimport * as constants from \"./constants\";\nimport reducer from \"./reducer\";\nimport * as selectors from \"./selectors\";\n\nexport default { actions, actionTypes, constants, reducer, selectors };\n","import * as t from \"./actionTypes\";\nimport { cardIDToNumber } from \"./model/model-config\";\nimport {\n\tCardsState,\n\tremoveCardFromCardsState,\n\tupdateCardInCards,\n\taddCardToCards,\n\treplaceCardsInCardsState,\n} from \"./model/model-state\";\nimport { ArchiveCards } from \"../db/model\";\nimport db from \"../db\";\n\nconst intialState: CardsState = {\n\tcards: {\n\t\t\"0\": {\n\t\t\tcardID: \"0\",\n\t\t\ttype: \"Q-A\",\n\t\t\tcontent: { q: \"Was ist der Sinn des Lebens?\", a: \"42\" },\n\t\t},\n\t\t\"1\": {\n\t\t\tcardID: \"1\",\n\t\t\ttype: \"Q-A\",\n\t\t\tcontent: { q: \"Welches Layout macht mehr Sinn?\", a: \"??\" },\n\t\t},\n\t\t\"2\": { cardID: \"2\", type: \"Note\", content: \"Note here\" },\n\t},\n\tlastCardIDNumber: 2,\n};\n\nconst cards = (state = intialState, { type, payload }: { type: string; payload?: any }) => {\n\tswitch (type) {\n\t\tcase t.CARD_PUSH:\n\t\t\tconst lastCardIDNumber = cardIDToNumber(payload.cardID) + 1;\n\t\t\treturn { ...state, cards: addCardToCards(state.cards, payload), lastCardIDNumber };\n\t\tcase t.CARD_REPLACE:\n\t\t\t// either the update was for a goalCard, then we want to reset it\n\t\t\t// or the update was not for a goalCard, then there should not be a goalCard anyways\n\t\t\tconst goalCard = null;\n\n\t\t\treturn { ...state, cards: updateCardInCards(state.cards, payload), goalCard };\n\t\tcase t.CARD_REMOVE:\n\t\t\treturn removeCardFromCardsState(state, payload as string);\n\t\tcase db.actionTypes.DOCUMENT_CHANGE:\n\t\t\tif (payload) {\n\t\t\t\treturn replaceCardsInCardsState(\n\t\t\t\t\tintialState,\n\t\t\t\t\t(payload as ArchiveCards).cards,\n\t\t\t\t\t(payload as ArchiveCards).lastCardIDNumber\n\t\t\t\t);\n\t\t\t} else {\n\t\t\t\treturn intialState;\n\t\t\t}\n\t\tcase db.actionTypes.LOAD_DOCUMENT_DATA_SETS:\n\t\t\t// basically the same as DOCUMENT_CHANGE, just only triggered\n\t\t\t// when uploading data that corresponds to current document\n\t\t\t// and if not we dont reset\n\t\t\tif (payload.newActiveDataSet) {\n\t\t\t\treturn replaceCardsInCardsState(\n\t\t\t\t\tintialState,\n\t\t\t\t\t(payload as ArchiveCards).cards,\n\t\t\t\t\t(payload as ArchiveCards).lastCardIDNumber\n\t\t\t\t);\n\t\t\t} else {\n\t\t\t\treturn state;\n\t\t\t}\n\t\tdefault:\n\t\t\treturn state;\n\t}\n};\n\nexport default cards;\n","import * as services from \"./services\";\nimport * as constants from \"./constants\";\nimport * as actionTypes from \"./actionTypes\";\nimport * as actions from \"./actions\";\nimport * as selectors from \"./selectors\";\nimport * as components from \"./components\";\nimport * as model from \"./model\";\nimport reducer from \"./reducer\";\n\nexport default { services, constants, actionTypes, actions, reducer, selectors, components, model };\n","export const NAME = \"cardRiverState\";\n","import { NAME } from \"./constants\";\nimport { createSelector } from \"reselect\";\nimport { CardRiverState } from \"./model\";\nimport cards from \"../cards\";\nimport { CardID } from \"../cards/model/model-config\";\n\nexport const getAll = (state: any) => state[NAME].present;\n\nexport const getRiverMakeUps = createSelector(getAll, (state: CardRiverState) => state.riverMakeUps);\n\nexport const getActiveRiverMakeUpID = createSelector(getAll, (state: CardRiverState) => state.activeRiverMakeUpID);\n\nexport const getActiveRiverMakeUp = createSelector(getRiverMakeUps, getActiveRiverMakeUpID, (makeUps, id) => {\n\tconst makeUp = makeUps[id];\n\treturn makeUp ? makeUp : { cardIDs: [] };\n});\n\n//TODO-NICE: rename active=page-wise or smth like that for clarity\nexport const getActiveRiverCardIDs = createSelector(getActiveRiverMakeUp, (makeUp): CardID[] => makeUp.cardIDs);\n\nexport const getActiveRiverCards = createSelector(\n\tgetActiveRiverCardIDs,\n\tcards.selectors.getCards,\n\t(makeUpCardIDs, cards) => makeUpCardIDs.map((id) => cards[id])\n);\n\nexport const getRiverShowState = createSelector(getAll, (state: CardRiverState) => state.riverShowState);\n\nexport const riverShowStateIsShow = createSelector(getRiverShowState, (state) => state === \"SHOW\");\n\nexport const getHoveredCardData = createSelector(getAll, (state: CardRiverState) => {\n\treturn { id: state.highlightedCardID, field: state.highlightedCardField };\n});\n\nexport const getLastRiverIDNumber = createSelector(getAll, (state: CardRiverState) => state.lastRiverIDNumber);\n\nexport const getRiverContentState = createSelector(getAll, (state: CardRiverState) => state.riverContentState);\n\nexport const getRiverContentFilter = createSelector(getAll, (state: CardRiverState) => state.contentFilter);\n","import { NAME } from \"./constants\";\n\nexport const RIVER_HOVERED_CARD = NAME + \"/RIVER_HOVERED_CARD\";\n\nexport const RIVER_ACTIVE_ID = NAME + \"/RIVER_ACTIVE_ID\";\n\nexport const RIVER_SHOW_STATE = NAME + \"/RIVER_SHOW_STATE\";\nexport const RIVER_CONTENT_STATE = NAME + \"/RIVER_CONTENT_STATE\";\nexport const RIVER_CONTENT_FILTER = NAME + \"/RIVER_CONTENT_FILTER\";\n","import * as t from \"./actionTypes\";\nimport { riverShowStateIsShow, getHoveredCardData, getActiveRiverMakeUpID } from \"./selectors\";\nimport { Dispatch } from \"redux\";\nimport { CardID } from \"../cards/model/model-config\";\nimport { CardField } from \"../cards/model/model-content\";\nimport { RiverContentState, ContentFilter } from \"./model\";\n\nexport const toggleRiverShowState = () => (dispatch: Dispatch, getState: Function) => {\n\tdispatch({ type: t.RIVER_SHOW_STATE, payload: riverShowStateIsShow(getState()) ? \"HIDE\" : \"SHOW\" });\n};\n\nexport const setRiverContentState = (state: RiverContentState) => {\n\treturn { type: t.RIVER_CONTENT_STATE, payload: state };\n};\n\nexport const setActiveRiver = (id: string) => {\n\treturn { type: t.RIVER_ACTIVE_ID, payload: id };\n};\n\nexport const trySetActiveRiver = (id: string) => {\n\treturn (dispatch: Dispatch, getState: Function) => {\n\t\tconsole.log(id, getActiveRiverMakeUpID(getState()) !== id);\n\t\tif (getActiveRiverMakeUpID(getState()) !== id) dispatch(setActiveRiver(id));\n\t};\n};\n\nexport const setHoveredCard = (cardID: CardID, field: CardField) => {\n\treturn { payload: { id: cardID, field }, type: t.RIVER_HOVERED_CARD };\n};\n\nexport const trySetHoveredCard = (cardID: CardID, field: CardField) => {\n\treturn (dispatch: Dispatch, getState: Function) => {\n\t\tconst state = getState();\n\t\tconst highlightedCardIDData = getHoveredCardData(state);\n\t\tif (highlightedCardIDData.id !== cardID || highlightedCardIDData.field !== field)\n\t\t\tdispatch(setHoveredCard(cardID, field));\n\t};\n};\n\nexport const resetHoveredCard = () => {\n\treturn { payload: { id: null, field: null }, type: t.RIVER_HOVERED_CARD };\n};\n\nexport const setContentFilter = (filter: ContentFilter) => {\n\treturn { type: t.RIVER_CONTENT_FILTER, payload: filter };\n};\n\nexport const resetContentFilter = () => {\n\treturn { type: t.RIVER_CONTENT_FILTER, payload: \"\" };\n};\n","import { withStyles, CheckboxProps, Checkbox } from \"@material-ui/core\";\nimport React from \"react\";\nimport { green } from \"@material-ui/core/colors\";\nexport const GreenCheckbox = withStyles({\n\troot: {\n\t\tcolor: green[400],\n\t\t\"&$checked\": {\n\t\t\tcolor: green[600],\n\t\t},\n\t},\n\tchecked: {},\n})((props: CheckboxProps) => <Checkbox color=\"default\" {...props} />);\n","import { FormGroup, FormControlLabel } from \"@material-ui/core\";\nimport React from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { getRiverContentState } from \"../selectors\";\nimport { RiverContentState } from \"../model\";\nimport { setRiverContentState } from \"../actions\";\nimport { GreenCheckbox } from \"../../../shared/GreenCheckbox\";\n\nexport const RiverContentFormGroup = () => {\n\tconst riverContentState = useSelector(getRiverContentState);\n\tconst dispatch = useDispatch();\n\n\tconst showQAs = riverContentState === \"ALL\" || riverContentState === \"QAS\";\n\tconst showNotes = riverContentState === \"ALL\" || riverContentState === \"NOTES\";\n\n\tconst changeContentState = (clickedState: RiverContentState) => {\n\t\tif (!showQAs && clickedState === \"QAS\") {\n\t\t\tif (showNotes) {\n\t\t\t\tdispatch(setRiverContentState(\"ALL\"));\n\t\t\t} else {\n\t\t\t\tdispatch(setRiverContentState(\"QAS\"));\n\t\t\t}\n\t\t\treturn;\n\t\t}\n\n\t\tif (!showNotes && clickedState === \"NOTES\") {\n\t\t\tif (showQAs) {\n\t\t\t\tdispatch(setRiverContentState(\"ALL\"));\n\t\t\t} else {\n\t\t\t\tdispatch(setRiverContentState(\"NOTES\"));\n\t\t\t}\n\t\t\treturn;\n\t\t}\n\n\t\tif (showQAs && clickedState === \"QAS\") {\n\t\t\tif (!showNotes) {\n\t\t\t\tdispatch(setRiverContentState(\"NONE\"));\n\t\t\t} else {\n\t\t\t\tdispatch(setRiverContentState(\"NOTES\"));\n\t\t\t}\n\t\t\treturn;\n\t\t}\n\n\t\tif (showNotes && clickedState === \"NOTES\") {\n\t\t\tif (!showQAs) {\n\t\t\t\tdispatch(setRiverContentState(\"NONE\"));\n\t\t\t} else {\n\t\t\t\tdispatch(setRiverContentState(\"QAS\"));\n\t\t\t}\n\t\t\treturn;\n\t\t}\n\t};\n\n\treturn (\n\t\t<FormGroup>\n\t\t\t<FormControlLabel\n\t\t\t\tcontrol={\n\t\t\t\t\t<GreenCheckbox\n\t\t\t\t\t\tchecked={showQAs}\n\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\tchangeContentState(\"QAS\");\n\t\t\t\t\t\t}}\n\t\t\t\t\t/>\n\t\t\t\t}\n\t\t\t\tlabel=\"QAs\"\n\t\t\t/>\n\t\t\t<FormControlLabel\n\t\t\t\tcontrol={\n\t\t\t\t\t<GreenCheckbox\n\t\t\t\t\t\tchecked={showNotes}\n\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\tchangeContentState(\"NOTES\");\n\t\t\t\t\t\t}}\n\t\t\t\t\t/>\n\t\t\t\t}\n\t\t\t\tlabel=\"Notes\"\n\t\t\t/>\n\t\t</FormGroup>\n\t);\n};\n","export const NAME = \"selectionData\";\n","import { NAME } from \"./constants\";\nexport const SELECTION_SOURCE = NAME + \"/SELECTION_SOURCE\";\nexport const SELECTION_GOAL = NAME + \"/SELECTION_GOAL\";\n","import { NAME } from \"./constants\";\nimport { createSelector } from \"reselect\";\nimport { SelectionData } from \"./model\";\n\nexport const getAll = (state: any): SelectionData => state[NAME].present;\n\nexport const getGoalConfig = createSelector(getAll, (state) => state.goalConfig);\nexport const getSourceConfig = createSelector(getAll, (state) => state.sourceConfig);\n\nexport const sourceConfigExists = createSelector(getSourceConfig, (config) => !!config);\n","import { CardConfig } from \"../../cards/model/model-config\";\nimport cards from \"../../cards\";\nimport { SelectionGoalConfig, SelectionSourceConfig, goalIsCreation, SelectionExistingCardGoalConfig } from \"../model\";\nimport { CardPayload } from \"../../cards/model/model-payload\";\n\nconst selectionConfigToCardPayload = (sourceConfig: SelectionSourceConfig, goalConfig: SelectionGoalConfig) => {\n\tconst inputOrigin = sourceConfig.contentOrigin;\n\tconst inputValue = sourceConfig.contentStr;\n\n\tconst outputField = goalConfig.cardField;\n\n\treturn {\n\t\ttype: cards.model.model_config.cardFieldToType(outputField),\n\t\tcontent: cards.model.model_content.strToNewCardContent(inputValue, outputField),\n\t\torigin: inputOrigin ? cards.model.model_origin.singleOriginToCardOrigin(inputOrigin, outputField) : undefined,\n\t};\n};\n\nconst selectionConfigToActualizedCardConfig = (\n\tsourceConfig: SelectionSourceConfig,\n\tgoalConfig: SelectionExistingCardGoalConfig,\n\tstate: any\n): CardConfig => {\n\tconst existingCard = cards.selectors.getCardByID(state, goalConfig.cardID);\n\n\tconst inputOrigin = sourceConfig.contentOrigin;\n\tconst inputValue = sourceConfig.contentStr;\n\n\tconst outputField = goalConfig.cardField;\n\n\treturn {\n\t\t...existingCard,\n\t\tcontent: cards.model.model_content.strToCardContent(\n\t\t\tinputValue,\n\t\t\toutputField,\n\t\t\tgoalConfig.updateType,\n\t\t\texistingCard.content\n\t\t),\n\t\torigin: inputOrigin\n\t\t\t? cards.model.model_origin.singleOriginToCardOrigin(inputOrigin, outputField, existingCard.origin)\n\t\t\t: existingCard.origin,\n\t} as CardConfig;\n};\n\nexport const selectionToCard = (\n\tsourceConfig: SelectionSourceConfig,\n\tgoalConfig: SelectionGoalConfig,\n\tdispatch: any,\n\tstate?: any\n) => {\n\tconst isCreation = goalIsCreation(goalConfig);\n\tif (isCreation) {\n\t\tconst cardPayload: CardPayload = selectionConfigToCardPayload(sourceConfig, goalConfig);\n\t\tdispatch(cards.actions.cardPush(cardPayload));\n\t} else {\n\t\tconst cardConfig = selectionConfigToActualizedCardConfig(\n\t\t\tsourceConfig,\n\t\t\tgoalConfig as SelectionExistingCardGoalConfig,\n\t\t\tstate\n\t\t);\n\t\tdispatch(cards.actions.cardReplace(cardConfig));\n\t}\n};\n","import { SingleOrigin } from \"../cards/model/model-origin\";\nimport { CardField } from \"../cards/model/model-content\";\nimport { CardFieldIdentifier, UpdateType } from \"../cards/model/model-config\";\n\nexport type SelectionSourceConfig = { contentStr: string; contentOrigin?: SingleOrigin };\n\nexport type SelectionExistingCardGoalConfig = CardFieldIdentifier & { updateType: UpdateType };\nexport type SelectionGoalConfig = SelectionExistingCardGoalConfig | { cardField: CardField };\nexport const goalIsCreation = (goalConfig: SelectionGoalConfig) => {\n\t// each existing card has an ID\n\tconst idExists = !!(goalConfig as CardFieldIdentifier).cardID;\n\treturn !idExists;\n};\n\n// Selection is made up of two parts: selecting and executing\n\nexport type SelectionData = {\n\tsourceConfig: SelectionSourceConfig | null;\n\tgoalConfig: SelectionGoalConfig | null;\n};\n","import { SelectionSourceConfig } from \"../model\";\nimport { SingleOrigin } from \"../../cards/model/model-origin\";\n\ntype SelectionData = { text: string; selection: Selection };\n\nexport const getSelectionWorkaround = (): SelectionData | null => {\n\tconst selection = window.getSelection();\n\n\tif (!selection) return null;\n\n\ttry {\n\t\tvar activeElement = document.activeElement;\n\t\tif (activeElement && (activeElement as HTMLInputElement).value) {\n\t\t\t// firefox bug https://bugzilla.mozilla.org/show_bug.cgi?id=85686\n\t\t\tconst str = (activeElement as HTMLInputElement).value.substring(\n\t\t\t\t(activeElement as HTMLInputElement).selectionStart as number,\n\t\t\t\t(activeElement as HTMLInputElement).selectionEnd as number\n\t\t\t);\n\n\t\t\tif (str === \"\") return null;\n\n\t\t\treturn { text: str, selection };\n\t\t} else {\n\t\t\tconst selStr = selection.toString();\n\n\t\t\tif (selStr === \"\") return null;\n\n\t\t\treturn { text: selStr, selection };\n\t\t}\n\t} catch (e) {\n\t\treturn null;\n\t}\n};\n\n// TODO-RC: selection from other cards\n\nconst materialSelectionDataToSourceConfig = (\n\tselectionData: SelectionData,\n\tpage: number\n): SelectionSourceConfig | false => {\n\t//TODO-NICE: think about race-conditions for the delayed rendering, this might mess up the index\n\t//TODO-NICE: this also depends on the rendering order of the spans to be the same, might not be a good idea\n\t//maybe can do this async if it gets more complex?\n\n\tconst selectedParent = selectionData.selection.anchorNode?.parentNode as HTMLSpanElement;\n\tif (!!!selectedParent || selectedParent.nodeName !== \"SPAN\") return false;\n\n\tconst divTextLayerParent = selectedParent.parentNode;\n\tif (!!!divTextLayerParent || divTextLayerParent.nodeName !== \"DIV\") return false;\n\n\tconst spanChildren = Array.from(divTextLayerParent.children);\n\tif (spanChildren.length === 0) return false;\n\n\tconst index = spanChildren.indexOf(selectedParent);\n\tif (index < 0) return false;\n\n\treturn { contentStr: selectionData.text, contentOrigin: { spanIndex: index, page } };\n};\n\nexport const getSelectionSourceFromMaterial = (page: number): SelectionSourceConfig | false => {\n\tconst selectionData = getSelectionWorkaround();\n\tif (!selectionData) return false;\n\n\treturn materialSelectionDataToSourceConfig(selectionData, page);\n};\n\nexport const getSelectionSourceFromCard = (contentOrigin?: SingleOrigin): SelectionSourceConfig | false => {\n\tconst selectionData = getSelectionWorkaround();\n\tif (!selectionData) return false;\n\n\treturn { contentStr: selectionData.text, contentOrigin };\n};\n","import * as t from \"./actionTypes\";\nimport { SingleOrigin } from \"../cards/model/model-origin\";\nimport { SelectionSourceConfig, SelectionGoalConfig } from \"./model\";\nimport { Dispatch } from \"redux\";\nimport { getGoalConfig, getSourceConfig } from \"./selectors\";\nimport { selectionToCard } from \"./services/use-selection\";\nimport { getSelectionSourceFromMaterial, getSelectionSourceFromCard } from \"./services/get-selection\";\n\nconst setSelectionSource = (config: SelectionSourceConfig) => {\n\treturn { type: t.SELECTION_SOURCE, payload: config };\n};\nexport const resetSelectionSource = () => {\n\treturn { type: t.SELECTION_SOURCE, payload: null };\n};\nconst setSelectionGoal = (config: SelectionGoalConfig) => {\n\treturn { type: t.SELECTION_GOAL, payload: config };\n};\nexport const resetSelectionGoal = () => {\n\treturn { type: t.SELECTION_GOAL, payload: null };\n};\n\n// we want to support either direction, first adding Goal or first adding Source\nexport const addSelectionSource = (config: SelectionSourceConfig) => {\n\treturn (dispatch: Dispatch, getState: Function) => {\n\t\tconst state = getState();\n\t\tconst goalConfig = getGoalConfig(state);\n\t\tif (!goalConfig) {\n\t\t\tdispatch(setSelectionSource(config));\n\t\t\treturn;\n\t\t}\n\t\tselectionToCard(config, goalConfig as SelectionGoalConfig, dispatch, state);\n\t\tdispatch(resetSelectionGoal());\n\t};\n};\n\nexport const addMaterialSelectionSource = (page: number) => {\n\tconst sourceConfig = getSelectionSourceFromMaterial(page);\n\tif (sourceConfig) {\n\t\treturn addSelectionSource(sourceConfig);\n\t}\n\treturn false;\n};\n\nexport const addCardSelectionSource = (contentOrigin?: SingleOrigin) => {\n\tconst sourceConfig = getSelectionSourceFromCard(contentOrigin);\n\tif (sourceConfig) {\n\t\treturn addSelectionSource(sourceConfig);\n\t}\n\treturn false;\n};\n\nexport const addSelectionGoal = (config: SelectionGoalConfig) => {\n\treturn (dispatch: Dispatch, getState: Function) => {\n\t\tconst state = getState();\n\t\tconst sourceConfig = getSourceConfig(state);\n\t\tif (!sourceConfig) {\n\t\t\tdispatch(setSelectionGoal(config));\n\t\t\treturn;\n\t\t}\n\t\tselectionToCard(sourceConfig as SelectionSourceConfig, config, dispatch, state);\n\t\tdispatch(resetSelectionSource());\n\t};\n};\n","import * as t from \"./actionTypes\";\nimport { SelectionData } from \"./model\";\n\nconst initialState: SelectionData = {\n\tsourceConfig: null,\n\tgoalConfig: null,\n};\n\nconst selectionData = (state = initialState, { type, payload }: { type: string; payload: any }): SelectionData => {\n\tswitch (type) {\n\t\tcase t.SELECTION_SOURCE:\n\t\t\treturn { ...state, sourceConfig: payload };\n\t\tcase t.SELECTION_GOAL:\n\t\t\treturn { ...state, goalConfig: payload };\n\t\tdefault:\n\t\t\treturn state;\n\t}\n};\n\nexport default selectionData;\n","import React, { useState, Fragment } from \"react\";\nimport { Snackbar, IconButton } from \"@material-ui/core\";\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { resetSelectionSource } from \"../actions\";\nimport { getSourceConfig } from \"../selectors\";\n\nexport const SelectionSnackbar = () => {\n\tconst [open, setOpen] = useState(false);\n\tconst dispatch = useDispatch();\n\tconst sourceConfig = useSelector(getSourceConfig);\n\n\tif (!!!sourceConfig && open) setOpen(false);\n\n\tif (!!sourceConfig && !open) setOpen(true);\n\n\tconst handleClose = (event: any, reason: string) => {\n\t\tif (reason === \"clickaway\") {\n\t\t\t// do not close on clickaway\n\t\t\tevent.preventDefault();\n\t\t} else {\n\t\t\tsetOpen(false);\n\t\t\tdispatch(resetSelectionSource());\n\t\t}\n\t};\n\n\tconst handleDismiss = () => {\n\t\tsetOpen(false);\n\t\tdispatch(resetSelectionSource());\n\t};\n\n\tconst message = (\n\t\t<Fragment>\n\t\t\t<div>{\"Current Selection: \"}</div>\n\t\t\t<div style={{ color: \"green\" }}> {sourceConfig?.contentStr}</div>\n\t\t</Fragment>\n\t);\n\n\treturn (\n\t\t<Snackbar\n\t\t\tanchorOrigin={{ vertical: \"top\", horizontal: \"center\" }}\n\t\t\topen={open}\n\t\t\tonClose={handleClose}\n\t\t\tmessage={message}\n\t\t\taction={\n\t\t\t\t<IconButton size=\"small\" aria-label=\"close\" color=\"inherit\" onClick={handleDismiss}>\n\t\t\t\t\t<CloseIcon fontSize=\"small\" />\n\t\t\t\t</IconButton>\n\t\t\t}\n\t\t/>\n\t);\n};\n","import React, { ReactNode } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { addMaterialSelectionSource } from \"../actions\";\n\n// should only be used once material/pdf exists\nexport const MaterialMouseUp = ({ children, page }: { children: ReactNode; page: number }) => {\n\tconst dispatch = useDispatch();\n\n\treturn (\n\t\t<span\n\t\t\tonMouseUp={() => {\n\t\t\t\tconst materialSelectionSourceAction = addMaterialSelectionSource(page);\n\t\t\t\tif (materialSelectionSourceAction) dispatch(materialSelectionSourceAction);\n\t\t\t}}\n\t\t>\n\t\t\t{children}\n\t\t</span>\n\t);\n};\n","import React, { ReactNode } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { addCardSelectionSource } from \"../actions\";\nimport { SingleOrigin } from \"../../cards/model/model-origin\";\n\nexport const CardFieldMouseUp = ({ children, fieldOrigin }: { children: ReactNode; fieldOrigin?: SingleOrigin }) => {\n\tconst dispatch = useDispatch();\n\n\treturn (\n\t\t<span\n\t\t\tonMouseUp={() => {\n\t\t\t\tconst cardSelectionSourceAction = addCardSelectionSource(fieldOrigin);\n\t\t\t\tif (cardSelectionSourceAction) dispatch(cardSelectionSourceAction);\n\t\t\t}}\n\t\t>\n\t\t\t{children}\n\t\t</span>\n\t);\n};\n","import * as actions from \"./actions\";\nimport * as constants from \"./constants\";\nimport * as actionTypes from \"./actionTypes\";\nimport reducer from \"./reducer\";\nimport * as selectors from \"./selectors\";\nimport * as components from \"./components\";\nimport * as services from \"./services\";\n\nexport default { actions, actionTypes, constants, components, reducer, selectors, services };\n","import React, { useState } from \"react\";\nimport { TextField, TextFieldProps } from \"@material-ui/core\";\nimport selection from \"../../../../selection\";\nimport { useDispatch } from \"react-redux\";\nimport { SingleOrigin } from \"../../../../cards/model/model-origin\";\n\nexport const ClayCardField = ({\n\tstoreValue = \"\",\n\tsaveChanges,\n\tfieldOrigin,\n\tstyle,\n\t...rest\n}: {\n\tstoreValue?: string;\n\t// {} is an empty field of the QA-origin\n\tfieldOrigin?: SingleOrigin | {};\n\tsaveChanges: (value: string) => void;\n\tstyle: any;\n} & TextFieldProps) => {\n\tconst [state, setState] = useState({ storeValue, mutableValue: storeValue });\n\tconst dispatch = useDispatch();\n\n\t// reset if new storeValue, otherwise keep user-mutated value\n\tif (state.storeValue !== storeValue) {\n\t\tsetState({ storeValue, mutableValue: storeValue });\n\t}\n\n\t// need the onChange-pattern, because we want to be able to pre-fill the field from the store\n\treturn (\n\t\t<selection.components.CardFieldMouseUp\n\t\t\tfieldOrigin={\n\t\t\t\tfieldOrigin && (fieldOrigin as SingleOrigin).spanIndex !== undefined ? (fieldOrigin as SingleOrigin) : undefined\n\t\t\t}\n\t\t>\n\t\t\t<TextField\n\t\t\t\tInputProps={{ disableUnderline: true, style: { minWidth: \"400px\" } }}\n\t\t\t\tmultiline\n\t\t\t\tvariant=\"filled\"\n\t\t\t\tvalue={state.mutableValue}\n\t\t\t\tonChange={(event) => {\n\t\t\t\t\tconst submittedValue = (event.target as HTMLTextAreaElement).value;\n\t\t\t\t\tsetState({ ...state, mutableValue: submittedValue });\n\t\t\t\t}}\n\t\t\t\tonBlur={(event: any) => {\n\t\t\t\t\tsaveChanges(event.target.value);\n\t\t\t\t}}\n\t\t\t\tstyle={style}\n\t\t\t\t{...rest}\n\t\t\t></TextField>\n\t\t</selection.components.CardFieldMouseUp>\n\t);\n};\n","import FindInPageIcon from \"@material-ui/icons/FindInPage\";\nimport React from \"react\";\nimport { IconButton, Tooltip } from \"@material-ui/core\";\nimport { useDispatch } from \"react-redux\";\n//import display from \"../../../../display\";\nimport { SingleOrigin } from \"../../../../cards/model/model-origin\";\nimport text from \"../../../../text\";\n\nexport const JumpToOriginButton = ({ cardOrigin }: { cardOrigin: SingleOrigin }) => {\n\tconst dispatch = useDispatch();\n\treturn (\n\t\t<Tooltip\n\t\t\ttitle={text.constants.jumpToOriginTooltip}\n\t\t\tenterDelay={text.constants.defaultEnterDelay}\n\t\t\tenterNextDelay={text.constants.defaultEnterNextDelay}\n\t\t>\n\t\t\t<IconButton\n\t\t\t\ttype=\"button\"\n\t\t\t\tonClick={() => {\n\t\t\t\t\t//TODO-RC: needs to show the Document. If it is hiden this does not make sense.\n\t\t\t\t\t//TODO-RC: needs to change with multiple pages\n\t\t\t\t\t//dispatch(display.actions.zoomToCardOrigin(cardOrigin.spanIndex, cardOrigin.page));\n\t\t\t\t}}\n\t\t\t>\n\t\t\t\t<FindInPageIcon fontSize=\"small\"></FindInPageIcon>\n\t\t\t</IconButton>\n\t\t</Tooltip>\n\t);\n};\n","import PanToolIcon from \"@material-ui/icons/PanTool\";\nimport PanToolOutlinedIcon from \"@material-ui/icons/PanToolOutlined\";\nimport React, { useState } from \"react\";\nimport { IconButton, Tooltip } from \"@material-ui/core\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { CardConfig, CardFieldIdentifier } from \"../../../../cards/model/model-config\";\nimport cards from \"../../../../cards\";\nimport text from \"../../../../text\";\nimport { CardField } from \"../../../../cards/model/model-content\";\nimport selection from \"../../../../selection\";\n\nexport const GrabForFieldButton = ({ cardConfig, cardField }: { cardConfig: CardConfig; cardField: CardField }) => {\n\tconst dispatch = useDispatch();\n\tconst goalConfig = useSelector(selection.selectors.getGoalConfig);\n\tconst [outlined, setOutlined] = useState(true);\n\n\tconst isGoal =\n\t\t!!goalConfig &&\n\t\t!!(goalConfig as CardFieldIdentifier).cardID &&\n\t\t(goalConfig as CardFieldIdentifier).cardID === cardConfig.cardID &&\n\t\tgoalConfig.cardField === cardField;\n\n\tif (isGoal) {\n\t\tif (outlined) setOutlined(false);\n\t} else {\n\t\tif (!outlined) setOutlined(true);\n\t}\n\n\treturn (\n\t\t<Tooltip\n\t\t\ttitle={text.constants.grabForCardTooltip}\n\t\t\tenterDelay={text.constants.defaultEnterDelay}\n\t\t\tenterNextDelay={text.constants.defaultEnterNextDelay}\n\t\t>\n\t\t\t<IconButton\n\t\t\t\ttype=\"button\"\n\t\t\t\tonClick={() => {\n\t\t\t\t\tif (outlined && !!!goalConfig) {\n\t\t\t\t\t\tdispatch(\n\t\t\t\t\t\t\tselection.actions.addCardSelectionSource(\n\t\t\t\t\t\t\t\tcards.model.model_permutation.toFieldValue(cardField, cardConfig.origin)\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t);\n\t\t\t\t\t} else if (isGoal) {\n\t\t\t\t\t\tdispatch(selection.actions.resetSelectionGoal());\n\t\t\t\t\t}\n\t\t\t\t}}\n\t\t\t>\n\t\t\t\t{outlined ? (\n\t\t\t\t\t<PanToolOutlinedIcon fontSize=\"small\"></PanToolOutlinedIcon>\n\t\t\t\t) : (\n\t\t\t\t\t<PanToolIcon fontSize=\"small\"></PanToolIcon>\n\t\t\t\t)}\n\t\t\t</IconButton>\n\t\t</Tooltip>\n\t);\n};\n","import AddCircleOutlineIcon from \"@material-ui/icons/AddCircleOutline\";\nimport React from \"react\";\nimport { IconButton } from \"@material-ui/core\";\nimport { useDispatch, useSelector, useStore } from \"react-redux\";\nimport text from \"../../../../text\";\nimport selection from \"../../../../selection\";\nimport { CreationType } from \"../../../../cards/model/model-config\";\n//import display from \"../../../../display\";\nimport { CardOrigin } from \"../../../../cards/model/model-origin\";\n\nexport const AppendButton = ({ cardField, cardID }: { cardField: CreationType; cardID?: string }) => {\n\tconst dispatch = useDispatch();\n\tconst store = useStore();\n\n\treturn (\n\t\t<text.components.AppendButtonTooltip>\n\t\t\t<IconButton\n\t\t\t\ttype=\"button\"\n\t\t\t\tonClick={() => {\n\t\t\t\t\t//TODO-NICE: allow append from other cards (origin-copying is the work here)\n\t\t\t\t\t//TODO-RC: with multiple pages, origin needs to be grabbed differently\n\t\t\t\t\t// if (selectionParent) {\n\t\t\t\t\t// \tconst origin: CardOrigin | undefined = display.selectors.getCurrentOrigin(store.getState());\n\t\t\t\t\t// \tdispatch(selection.services.use_selection.selectionToCardAppend(cardField, origin, cardID));\n\t\t\t\t\t// }\n\t\t\t\t}}\n\t\t\t>\n\t\t\t\t<AddCircleOutlineIcon fontSize=\"small\"></AddCircleOutlineIcon>\n\t\t\t</IconButton>\n\t\t</text.components.AppendButtonTooltip>\n\t);\n};\n","import React from \"react\";\nimport cards from \"../../../../cards\";\nimport { JumpToOriginButton } from \"../Buttons/JumpToOriginButton\";\nimport { GrabForFieldButton } from \"../Buttons/GrabForFieldButton\";\nimport { Paper, Grid } from \"@material-ui/core\";\nimport { AppendButton } from \"../Buttons/AppendButton\";\nimport { CardConfig } from \"../../../../cards/model/model-config\";\nimport { CardField } from \"../../../../cards/model/model-content\";\n\nexport const ClayCardFieldButtons = ({ config, cardField }: { config: CardConfig; cardField: CardField }) => {\n\t// we only offer one way to use card-content in other cards: extract\n\t// we do not allow grabbing from other cards, just from the document, so we only need the grab button in the ActiveRiver\n\t//TODO-RC: new view concept\n\t// can show / hide rivers (indivdual?) and filter cards (indivdual?)\n\t// now with scrolling I dont need the SummaryRiver\n\t// but need to be able to switch orientation ?\n\t// the good thing of the SummaryRiver is that it is more compact and sideways\n\n\treturn (\n\t\t<Paper variant=\"outlined\">\n\t\t\t<Grid container direction=\"row\">\n\t\t\t\t<Grid item>{<AppendButton cardID={config.cardID} cardField={cardField}></AppendButton>}</Grid>\n\n\t\t\t\t<Grid item>{<GrabForFieldButton cardConfig={config} cardField={cardField}></GrabForFieldButton>}</Grid>\n\t\t\t\t<Grid item>\n\t\t\t\t\t{config.origin && (\n\t\t\t\t\t\t<JumpToOriginButton\n\t\t\t\t\t\t\tcardOrigin={cards.model.model_permutation.toFieldValue(cardField, config.origin)}\n\t\t\t\t\t\t></JumpToOriginButton>\n\t\t\t\t\t)}\n\t\t\t\t</Grid>\n\t\t\t</Grid>\n\t\t</Paper>\n\t);\n};\n","import Grid from \"@material-ui/core/Grid\";\nimport React, { useRef, useEffect, MutableRefObject } from \"react\";\nimport { ClayCardField } from \"./ClayCardField\";\nimport { QACardContent } from \"../../../../cards/model/model-content\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport cards from \"../../../../cards\";\nimport { getHoveredCardData } from \"../../../selectors\";\nimport { Card } from \"@material-ui/core\";\nimport { borderStyle } from \"./ClayCard\";\nimport text from \"../../../../text\";\nimport { ClayCardFieldButtons } from \"./ClayCardFieldButtons\";\nimport { QAConfig } from \"../../../../cards/model/model-config\";\n\n//TODO-NICE:\n// make dropdown / menu for selection to create card from selection snackbar?\n// show if selection has origin / button jump to origin at snackbar?\n// make REPLACE-button for River\n// replace Context-Menu with APPEND/REPLACE button flow? / allow both?\n\n//TODO-NICE: think of way to not have menu over the cards, because you cant read them this way? end of card?\n//TODO-NICE: use dark color pallet (theme?)\n\nexport const QACard = ({ config }: { config: QAConfig }) => {\n\tconst dispatch = useDispatch();\n\tconst { id, field } = useSelector(getHoveredCardData);\n\tconst isHoveredCard = config.cardID === id;\n\n\tconst ref: MutableRefObject<undefined | HTMLDivElement> = useRef();\n\tuseEffect(() => {\n\t\tif (ref.current && isHoveredCard) {\n\t\t\t(ref.current as HTMLDivElement).scrollIntoView({ behavior: \"smooth\", block: \"center\", inline: \"center\" });\n\t\t}\n\t});\n\n\treturn (\n\t\t<Card variant=\"elevation\" elevation={5} ref={ref} style={{ padding: \"3px\" }}>\n\t\t\t<Grid container direction=\"row\" justify=\"space-between\">\n\t\t\t\t<Grid item>\n\t\t\t\t\t<Grid container direction=\"column\" spacing={1}>\n\t\t\t\t\t\t<Grid item>\n\t\t\t\t\t\t\t<Grid container direction=\"row\" spacing={1}>\n\t\t\t\t\t\t\t\t<Grid item>\n\t\t\t\t\t\t\t\t\t<div style={isHoveredCard && field === \"q\" ? borderStyle : undefined}>\n\t\t\t\t\t\t\t\t\t\t<ClayCardField\n\t\t\t\t\t\t\t\t\t\t\tsaveChanges={(value) => {\n\t\t\t\t\t\t\t\t\t\t\t\tdispatch(cards.actions.replaceCardFieldContent(\"q\", config, value));\n\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t\tstoreValue={(config.content as QACardContent).q}\n\t\t\t\t\t\t\t\t\t\t\tlabel={text.constants.questionText}\n\t\t\t\t\t\t\t\t\t\t\tvariant=\"filled\"\n\t\t\t\t\t\t\t\t\t\t\tstyle={{ backgroundColor: \"#FFBF69\" }}\n\t\t\t\t\t\t\t\t\t\t\tInputLabelProps={{ style: { color: \"#000000\" } }}\n\t\t\t\t\t\t\t\t\t\t\tfieldOrigin={config.origin?.q}\n\t\t\t\t\t\t\t\t\t\t></ClayCardField>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t</Grid>\n\n\t\t\t\t\t\t\t\t<Grid item>\n\t\t\t\t\t\t\t\t\t<ClayCardFieldButtons cardField=\"q\" config={config}></ClayCardFieldButtons>\n\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t<Grid item>\n\t\t\t\t\t\t\t<Grid container direction=\"row\" spacing={1}>\n\t\t\t\t\t\t\t\t<Grid item>\n\t\t\t\t\t\t\t\t\t<div style={isHoveredCard && field === \"a\" ? borderStyle : undefined}>\n\t\t\t\t\t\t\t\t\t\t<ClayCardField\n\t\t\t\t\t\t\t\t\t\t\tsaveChanges={(value) => {\n\t\t\t\t\t\t\t\t\t\t\t\tdispatch(cards.actions.replaceCardFieldContent(\"a\", config, value));\n\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t\tstoreValue={(config.content as QACardContent).a}\n\t\t\t\t\t\t\t\t\t\t\tlabel={text.constants.answerText}\n\t\t\t\t\t\t\t\t\t\t\tstyle={{ backgroundColor: \"#2EC4B6\" }}\n\t\t\t\t\t\t\t\t\t\t\tInputLabelProps={{ style: { color: \"#000000\" } }}\n\t\t\t\t\t\t\t\t\t\t\tfieldOrigin={config.origin?.a}\n\t\t\t\t\t\t\t\t\t\t></ClayCardField>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t\t<Grid item>\n\t\t\t\t\t\t\t\t\t<ClayCardFieldButtons cardField=\"a\" config={config}></ClayCardFieldButtons>\n\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t</Grid>\n\t\t\t\t\t</Grid>\n\t\t\t\t</Grid>\n\n\t\t\t\t<Grid item>\n\t\t\t\t\t<cards.components.DeleteCardButton cardID={config.cardID}></cards.components.DeleteCardButton>\n\t\t\t\t</Grid>\n\t\t\t</Grid>\n\t\t</Card>\n\t);\n};\n","import React, { useRef, useEffect, MutableRefObject } from \"react\";\nimport { ClayCardField } from \"./ClayCardField\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport cards from \"../../../../cards\";\nimport { getHoveredCardData } from \"../../../selectors\";\nimport { Card, Grid } from \"@material-ui/core\";\nimport { CardProps, borderStyle } from \"./ClayCard\";\nimport text from \"../../../../text\";\nimport selection from \"../../../../selection\";\nimport { NoteConfig } from \"../../../../cards/model/model-config\";\nimport { ClayCardFieldButtons } from \"./ClayCardFieldButtons\";\n\n//TODO-PERF: investigate if this hover-store approach is too slow, useRef instead?\nexport const NoteCard = ({ config }: { config: NoteConfig }) => {\n\tconst dispatch = useDispatch();\n\tconst { id } = useSelector(getHoveredCardData);\n\tconst isHoveredCard = config.cardID === id;\n\n\t// we only offer one way to use card-content in other cards: extract\n\t// we do not allow grabbing from other cards, just from the document, so we only need the grab button in the ActiveRiver\n\t//TODO-NICE: allow grabbing from other cards\n\n\tconst ref: MutableRefObject<undefined | HTMLDivElement> = useRef();\n\tuseEffect(() => {\n\t\tif (ref.current && isHoveredCard) {\n\t\t\t(ref.current as HTMLDivElement).scrollIntoView({ behavior: \"smooth\", block: \"center\", inline: \"center\" });\n\t\t}\n\t});\n\n\treturn (\n\t\t<Card\n\t\t\tvariant=\"elevation\"\n\t\t\televation={5}\n\t\t\tstyle={isHoveredCard ? { ...borderStyle, padding: \"3px\" } : { padding: \"3px\" }}\n\t\t\tref={ref}\n\t\t>\n\t\t\t<Grid container direction=\"row\" justify=\"space-between\">\n\t\t\t\t<Grid item>\n\t\t\t\t\t<Grid container direction=\"row\" spacing={1}>\n\t\t\t\t\t\t<Grid item>\n\t\t\t\t\t\t\t<ClayCardField\n\t\t\t\t\t\t\t\tsaveChanges={(value) => {\n\t\t\t\t\t\t\t\t\tdispatch(cards.actions.cardReplace({ ...config, content: value } as NoteConfig));\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\tstoreValue={config.content as string}\n\t\t\t\t\t\t\t\tlabel={text.constants.noteText}\n\t\t\t\t\t\t\t\tvariant=\"filled\"\n\t\t\t\t\t\t\t\tstyle={{ backgroundColor: \"#CBF3F0\" }}\n\t\t\t\t\t\t\t\tInputLabelProps={{ style: { color: \"#000000\" } }}\n\t\t\t\t\t\t\t\tfieldOrigin={config.origin}\n\t\t\t\t\t\t\t></ClayCardField>\n\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t<Grid item>\n\t\t\t\t\t\t\t<ClayCardFieldButtons cardField=\"note\" config={config}></ClayCardFieldButtons>\n\t\t\t\t\t\t</Grid>\n\t\t\t\t\t</Grid>\n\t\t\t\t</Grid>\n\n\t\t\t\t<Grid item>\n\t\t\t\t\t<cards.components.DeleteCardButton cardID={config.cardID}></cards.components.DeleteCardButton>\n\t\t\t\t</Grid>\n\t\t\t</Grid>\n\t\t</Card>\n\t);\n};\n","import React from \"react\";\nimport { CardConfig, NoteConfig, QAConfig } from \"../../../../cards/model/model-config\";\nimport { QACard } from \"./QACard\";\nimport { NoteCard } from \"./NoteCard\";\n\nexport type CardProps = { config: CardConfig; riverID: string };\n\nexport const borderStyle = { border: \"4px solid green\", borderRadius: \"4px\" };\n\nexport const ClayCard = ({ config, riverID }: CardProps) => {\n\tswitch (config.type) {\n\t\tcase \"Note\":\n\t\t\treturn <NoteCard config={config as NoteConfig}></NoteCard>;\n\t\tcase \"Q-A\":\n\t\t\treturn <QACard config={config as QAConfig}></QACard>;\n\t}\n};\n","import Grid from \"@material-ui/core/Grid\";\nimport React from \"react\";\nimport { incrementer } from \"../../../../shared/utils\";\nimport { ClayCard } from \"./Cards/ClayCard\";\nimport { CardConfig } from \"../../../cards/model/model-config\";\nimport { Divider } from \"@material-ui/core\";\n\nconst GridItemDivider = () => (\n\t<Grid item>\n\t\t<Divider></Divider>\n\t</Grid>\n);\n\nexport const toCardGridItemsWithDividers = (cards: CardConfig[], riverID: string) => {\n\tconst increment = incrementer();\n\n\treturn cards.reduce((prev, currentCard, index, arr) => {\n\t\tprev.push(\n\t\t\t<Grid item key={increment()}>\n\t\t\t\t<ClayCard config={currentCard} riverID={riverID} key={increment()}></ClayCard>\n\t\t\t</Grid>\n\t\t);\n\n\t\tconst notLastCard = index < arr.length - 1;\n\t\tif (notLastCard) prev.push(<GridItemDivider key={increment()}></GridItemDivider>);\n\t\treturn prev;\n\t}, [] as any[]);\n};\n","import { Typography, Divider } from \"@material-ui/core\";\nimport Accordion from \"@material-ui/core/Accordion\";\nimport AccordionSummary from \"@material-ui/core/AccordionSummary\";\nimport AccordionDetails from \"@material-ui/core/AccordionDetails\";\nimport Grid from \"@material-ui/core/Grid\";\nimport React, { useMemo } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { getRiverContentState, getRiverContentFilter, getActiveRiverMakeUpID } from \"../../selectors\";\nimport cards from \"../../../cards\";\nimport { NoteConfig, QAConfig, CardConfig } from \"../../../cards/model/model-config\";\nimport { ContentFilter } from \"../../model\";\nimport { toCardGridItemsWithDividers } from \"./toCardGridItemsWithDividers\";\n\n//TODO-NICE: make it not be accordion but closeable?\n//TODO-NICE: make local show / hide notes\n//TODO-NICE: untangle these components, dont need to so many subs?\n\nconst noteContainsContentFilter = (noteConfig: NoteConfig, contentFilter: ContentFilter) =>\n\tnoteConfig.content.includes(contentFilter);\n\nconst qaContainsContentFilter = (qaConfig: QAConfig, contentFilter: ContentFilter) =>\n\tqaConfig.content.a.includes(contentFilter) || qaConfig.content.q.includes(contentFilter);\n\nexport const CardRiver = ({\n\triverID,\n\triverCards,\n\tmaterialHeight,\n}: {\n\triverID: string;\n\triverCards: CardConfig[];\n\tmaterialHeight: number;\n}) => {\n\tconst riverContentState = useSelector(getRiverContentState);\n\n\t//TODO-NICE: use regex for upper/lower-case\n\tconst contentFilter = useSelector(getRiverContentFilter);\n\n\t// this should only change if the store values change\n\tconst gridItems = useMemo(() => {\n\t\tlet inputCards = riverCards;\n\n\t\tif (riverContentState === \"NONE\") {\n\t\t\treturn [];\n\t\t}\n\n\t\tif (riverContentState !== \"ALL\") {\n\t\t\tif (riverContentState === \"QAS\") {\n\t\t\t\tinputCards = riverCards.filter((config) => config.type === \"Q-A\");\n\t\t\t}\n\t\t\tif (riverContentState === \"NOTES\") {\n\t\t\t\tinputCards = riverCards.filter((config) => config.type === \"Note\");\n\t\t\t}\n\t\t}\n\t\t//TODO-NICE: optimize this waste, move this out of the memo as it changes more rapidly\n\t\tif (contentFilter !== \"\")\n\t\t\tinputCards = inputCards.filter((card) => {\n\t\t\t\tswitch (card.type) {\n\t\t\t\t\tcase \"Note\":\n\t\t\t\t\t\treturn noteContainsContentFilter(card as NoteConfig, contentFilter);\n\t\t\t\t\tcase \"Q-A\":\n\t\t\t\t\t\treturn qaContainsContentFilter(card as QAConfig, contentFilter);\n\t\t\t\t}\n\t\t\t\treturn false;\n\t\t\t});\n\n\t\treturn toCardGridItemsWithDividers(inputCards, riverID);\n\t}, [riverCards, riverID, riverContentState, contentFilter]);\n\n\tconst dispatch = useDispatch();\n\n\t//TODO-NICE: make HalfFull-sub-menu for half-full QAs\n\t//TODO-NICE: if you start without any document and then load one, the current cards should be merged into that one\n\t//TODO-NICE: scroll-to-top for overflowing river\n\n\treturn (\n\t\t<Accordion\n\t\t\tdefaultExpanded={true}\n\t\t\t//TODO-NICE: I use 1400 to prevent non-overflow on reloading (the site would be stretched)\n\t\t\t// if the river is bigger than the pdf-page would be, then the site is stretchted and the pdf-page-element assumes the size of the river\n\t\t\t// this solution assumes the pdf page is always bigger than 1400 (true on 22'), need solution to get height of pdf-page-element itself and not its parent\n\t\t\tstyle={{\n\t\t\t\toverflowY: \"auto\",\n\t\t\t\tmaxHeight: materialHeight,\n\t\t\t}}\n\t\t\televation={5}\n\t\t>\n\t\t\t<AccordionSummary>\n\t\t\t\t<Typography\n\t\t\t\t\tvariant=\"h6\"\n\t\t\t\t\talign=\"center\"\n\t\t\t\t\tstyle={{ MozUserSelect: \"none\", WebkitUserSelect: \"none\", msUserSelect: \"none\" }}\n\t\t\t\t>\n\t\t\t\t\t{riverID}\n\t\t\t\t</Typography>\n\t\t\t</AccordionSummary>\n\t\t\t<AccordionDetails>\n\t\t\t\t<Grid container direction=\"column\" spacing={2} justify=\"center\" alignItems=\"stretch\">\n\t\t\t\t\t<Grid item>\n\t\t\t\t\t\t<cards.components.AddQAButton></cards.components.AddQAButton>\n\t\t\t\t\t\t<cards.components.AddNoteButton></cards.components.AddNoteButton>\n\t\t\t\t\t\t<Divider></Divider>\n\t\t\t\t\t</Grid>\n\n\t\t\t\t\t<Grid item>\n\t\t\t\t\t\t<Grid container direction=\"column\" spacing={2} justify=\"center\" alignItems=\"stretch\">\n\t\t\t\t\t\t\t{gridItems}\n\t\t\t\t\t\t</Grid>\n\t\t\t\t\t</Grid>\n\t\t\t\t</Grid>\n\t\t\t</AccordionDetails>\n\t\t</Accordion>\n\t);\n};\n","import { useDispatch } from \"react-redux\";\nimport { trySetActiveRiver } from \"../actions\";\nimport { ReactNode } from \"react\";\nimport React from \"react\";\n\nexport const SwitchActiveRiver = ({ children, riverID }: { children: ReactNode; riverID: string }) => {\n\tconst dispatch = useDispatch();\n\n\treturn (\n\t\t<span\n\t\t\tonMouseEnter={() => {\n\t\t\t\tdispatch(trySetActiveRiver(riverID));\n\t\t\t}}\n\t\t>\n\t\t\t{children}\n\t\t</span>\n\t);\n};\n","import { CardID } from \"../cards/model/model-config\";\nimport { CardField } from \"../cards/model/model-content\";\n\nexport type RiverMakeUp = { riverID: string; cardIDs: CardID[] };\n\nexport type RiverMakeUps = { [riverID: string]: RiverMakeUp };\n\nexport type RiverShowState = \"SHOW\" | \"HIDE\";\n\nexport type RiverContentState = \"ALL\" | \"NOTES\" | \"QAS\" | \"NONE\";\n\n//TODO-NICE: rename pushto/active river\n\nexport type ContentFilter = string;\n\nexport type CardRiverState = {\n\triverMakeUps: RiverMakeUps;\n\tactiveRiverMakeUpID: string;\n\t//pushToRiverID: string;\n\tlastRiverIDNumber: number;\n\t// show/hide river\n\triverShowState: RiverShowState;\n\t// filter content\n\triverContentState: RiverContentState;\n\t// this is used to determine which card should be highlighted in reaction to hovering over it in the context-menu\n\thighlightedCardID: null | CardID;\n\thighlightedCardField: null | CardField;\n\tcontentFilter: ContentFilter | \"\";\n};\n\nexport const pageNumberToRiverMakeUpID = (page: number) => \"CardRiver \" + page;\n\nexport const riverMakeUpIDToPageNumber = (riverID: string) => parseInt(riverID.replace(\"CardRiver \", \"\"));\n\nexport const emptyCardRiver = (page: number): RiverMakeUp => {\n\treturn {\n\t\triverID: pageNumberToRiverMakeUpID(page),\n\t\tcardIDs: [],\n\t};\n};\n\nexport const updateStateWithMakeUps = (state: CardRiverState, ...makeUps: RiverMakeUp[]) => {\n\tconst updatedState = { ...state };\n\tmakeUps.forEach((makeUp) => {\n\t\tupdatedState.riverMakeUps[makeUp.riverID] = makeUp;\n\t});\n\treturn updatedState;\n};\n\n// export const deactivateActiveCardRiver = (state: CardRiverState) => {\n// \treturn { ...state.riverMakeUps[state.activeRiverMakeUpID], active: false };\n// };\n\nexport const removeCardFromRivers = (state: CardRiverState, cardID: CardID): CardRiverState => {\n\tconst riverMakeUps = Object.fromEntries(\n\t\tObject.entries(state.riverMakeUps).map((entry) => [\n\t\t\tentry[0],\n\t\t\t{ ...entry[1], cardIDs: entry[1].cardIDs.filter((id) => id !== cardID) },\n\t\t])\n\t);\n\treturn { ...state, riverMakeUps };\n};\n","import {\n\tCardRiverState,\n\tRiverShowState,\n\tpageNumberToRiverMakeUpID,\n\tRiverContentState,\n\tremoveCardFromRivers,\n} from \"./model\";\nimport { CardConfig } from \"../cards/model/model-config\";\nimport cards from \"../cards\";\nimport * as t from \"./actionTypes\";\nimport { ArchiveRiver } from \"../db/model\";\nimport db from \"../db\";\n\nconst initialState: CardRiverState = {\n\triverMakeUps: {\n\t\t[pageNumberToRiverMakeUpID(1)]: {\n\t\t\triverID: pageNumberToRiverMakeUpID(1),\n\t\t\tcardIDs: [\"2\", \"0\", \"1\"],\n\t\t},\n\t},\n\tactiveRiverMakeUpID: pageNumberToRiverMakeUpID(1),\n\tlastRiverIDNumber: 1,\n\triverShowState: \"SHOW\",\n\thighlightedCardID: null,\n\thighlightedCardField: null,\n\triverContentState: \"ALL\",\n\tcontentFilter: \"\",\n};\n\nconst cardRiverState = (state = initialState, { type, payload }: { type: string; payload: any }): CardRiverState => {\n\tlet riverMakeUp;\n\tlet riverMakeUps;\n\tswitch (type) {\n\t\tcase t.RIVER_ACTIVE_ID:\n\t\t\treturn { ...state, activeRiverMakeUpID: payload };\n\t\tcase t.RIVER_SHOW_STATE:\n\t\t\treturn { ...state, riverShowState: payload as RiverShowState };\n\t\tcase t.RIVER_CONTENT_STATE:\n\t\t\treturn { ...state, riverContentState: payload as RiverContentState };\n\t\tcase t.RIVER_HOVERED_CARD:\n\t\t\treturn { ...state, highlightedCardID: payload.id, highlightedCardField: payload.field };\n\t\tcase cards.actionTypes.CARD_PUSH:\n\t\t\tif (state.riverMakeUps[state.activeRiverMakeUpID]) {\n\t\t\t\triverMakeUp = {\n\t\t\t\t\t...state.riverMakeUps[state.activeRiverMakeUpID],\n\t\t\t\t\tcardIDs: [...state.riverMakeUps[state.activeRiverMakeUpID].cardIDs, (payload as CardConfig).cardID],\n\t\t\t\t};\n\t\t\t} else {\n\t\t\t\t// create new river\n\t\t\t\triverMakeUp = {\n\t\t\t\t\triverID: state.activeRiverMakeUpID,\n\t\t\t\t\tcardIDs: [(payload as CardConfig).cardID],\n\t\t\t\t};\n\t\t\t}\n\t\t\triverMakeUps = { ...state.riverMakeUps };\n\t\t\triverMakeUps[state.activeRiverMakeUpID] = riverMakeUp;\n\n\t\t\treturn { ...state, riverMakeUps: riverMakeUps };\n\t\tcase cards.actionTypes.CARD_REMOVE:\n\t\t\treturn removeCardFromRivers(state, payload as string);\n\t\tcase db.actionTypes.DOCUMENT_CHANGE:\n\t\t\tif (payload) {\n\t\t\t\treturn {\n\t\t\t\t\t...initialState,\n\t\t\t\t\triverMakeUps: (payload as ArchiveRiver).riverMakeUps,\n\t\t\t\t\tlastRiverIDNumber: (payload as ArchiveRiver).lastRiverIDNumber,\n\t\t\t\t};\n\t\t\t} else {\n\t\t\t\treturn initialState;\n\t\t\t}\n\t\tcase db.actionTypes.LOAD_DOCUMENT_DATA_SETS:\n\t\t\t// basically the same as DOCUMENT_CHANGE, just only triggered\n\t\t\t//when uploading data that corresponds to current document\n\t\t\t// and if not, we dont reset\n\t\t\tif (payload.newActiveDataSet) {\n\t\t\t\treturn {\n\t\t\t\t\t...initialState,\n\t\t\t\t\triverMakeUps: (payload.newActiveDataSet as ArchiveRiver).riverMakeUps,\n\t\t\t\t\tlastRiverIDNumber: (payload.newActiveDataSet as ArchiveRiver).lastRiverIDNumber,\n\t\t\t\t};\n\t\t\t} else {\n\t\t\t\treturn state;\n\t\t\t}\n\t\tcase t.RIVER_CONTENT_FILTER:\n\t\t\treturn { ...state, contentFilter: payload };\n\t\tdefault:\n\t\t\treturn state;\n\t}\n};\n\nexport default cardRiverState;\n","import * as constants from \"./constants\";\nimport * as components from \"./components\";\nimport reducer from \"./reducer\";\nimport * as selectors from \"./selectors\";\nimport * as actions from \"./actions\";\nimport * as model from \"./model\";\n\nexport default { constants, components, reducer, selectors, actions, model };\n","import React, { useLayoutEffect } from \"react\";\nimport { Page } from \"react-pdf\";\nimport { Grid } from \"@material-ui/core\";\nimport { withSize } from \"react-sizeme\";\nimport { PageKeyboardControl } from \"./PageKeyboardControl\";\nimport selection from \"../../../selection\";\n\nconst removeTextLayerOffset = () => {\n\tconst textLayers = document.querySelectorAll(\".react-pdf__Page__textContent\");\n\ttextLayers.forEach((layer) => {\n\t\tconst { style }: any = layer;\n\t\tstyle.top = \"0\";\n\t\tstyle.left = \"0\";\n\t\tstyle.transform = \"\";\n\t});\n};\n\ntype PDFPageProps = {\n\tpageNumber: number;\n\tnumPages: number;\n\twidth: number;\n\ttriggerResize: () => void;\n};\n\nconst PDFPage = ({ pageNumber, numPages, width, triggerResize }: PDFPageProps) => {\n\t//TODO-RC: fix resize problem\n\t// const widthRef = useRef<number>(width);\n\t// // // can not use dependency-arr because we DONT want to execute on first render\n\t// // // only if after that the width changed\n\t// // // height is not important, because we overflow anyways\n\t// useLayoutEffect(() => {\n\t// \t// need > 50 to avoid glitches where width is only slightly corrected\n\t// \t//TODO-NICE: depend on height change, but maybe same problem?\n\t// \tif (widthRef.current !== width) {\n\t// \t\tconsole.log(\"resizing PageList because of width-change\", widthRef.current, width);\n\t// \t\twidthRef.current = width;\n\t// \t\ttriggerResize();\n\t// \t}\n\t// });\n\n\treturn (\n\t\t<selection.components.MaterialMouseUp page={pageNumber}>\n\t\t\t<PageKeyboardControl>\n\t\t\t\t<Page\n\t\t\t\t\tpageNumber={pageNumber}\n\t\t\t\t\twidth={width}\n\t\t\t\t\tonRenderSuccess={() => {\n\t\t\t\t\t\t//TODO-RC: pretty sure react-window just renders everything instead of only partly...\n\t\t\t\t\t\t// test this with a test-list\n\t\t\t\t\t\t//TODO-RC: make Width-measurement either by hand or make extra component, re-rendering the page is too slow\n\t\t\t\t\t\tconsole.log(\"rendering \" + pageNumber);\n\t\t\t\t\t\tremoveTextLayerOffset();\n\t\t\t\t\t}}\n\t\t\t\t\tonLoadSuccess={(page) => {\n\t\t\t\t\t\t// This is necessary to ensure the row heights of\n\t\t\t\t\t\t// the variable list are correctly initialised on the first render.\n\t\t\t\t\t\tif (page.pageNumber === numPages) {\n\t\t\t\t\t\t\ttriggerResize();\n\t\t\t\t\t\t}\n\t\t\t\t\t}}\n\t\t\t\t/>\n\t\t\t</PageKeyboardControl>\n\t\t</selection.components.MaterialMouseUp>\n\t);\n};\n\nexport const GridItemPDFPage = withSize({ monitorHeight: true })(\n\t({\n\t\tpdfPageOuterProps,\n\t\tstyle,\n\t\tsize,\n\t\tmaterialHeight,\n\t\tsetMaterialHeight,\n\t}: {\n\t\tpdfPageOuterProps: Omit<PDFPageProps, \"width\">;\n\t\tstyle: any;\n\t\tsize: { width: number; height: number };\n\t\tmaterialHeight: number;\n\t\tsetMaterialHeight: (materialHeight: number) => void;\n\t}) => {\n\t\t//TODO-RC: fix resize problem\n\t\tuseLayoutEffect(() => {\n\t\t\tif (size.height !== materialHeight) {\n\t\t\t\tsetMaterialHeight(size.height);\n\t\t\t}\n\t\t});\n\n\t\treturn (\n\t\t\t<Grid item style={style}>\n\t\t\t\t<PDFPage {...pdfPageOuterProps} width={size.width}></PDFPage>\n\t\t\t</Grid>\n\t\t);\n\t}\n);\n","import React, { useState } from \"react\";\nimport { Divider, Grid } from \"@material-ui/core\";\nimport { useSelector } from \"react-redux\";\nimport cards from \"../../../cards\";\nimport river from \"../../../river\";\nimport { GridItemPDFPage } from \"./GridItemPDFPage\";\n\nexport const PageMaterialPair = ({\n\tindex,\n\tdata,\n\tstyle,\n}: {\n\tindex: number;\n\tdata: {\n\t\tcurrentPage: number;\n\t\tnumPages: number;\n\t\tpages: WeakMap<any, any>;\n\t\tpageNumbers: Map<any, any>;\n\t\ttriggerResize: () => void;\n\t};\n\tstyle: any;\n}) => {\n\tconst cardConfigs = useSelector(cards.selectors.getCards);\n\tconst pageNumber = index + 1;\n\tconst riverID = river.model.pageNumberToRiverMakeUpID(pageNumber);\n\tconst riverMakeUp = useSelector(river.selectors.getRiverMakeUps)[riverID];\n\tconst riverCards = riverMakeUp ? riverMakeUp.cardIDs.map((id) => cardConfigs[id]) : [];\n\tconst { numPages, triggerResize, pages, pageNumbers } = data;\n\n\tconst [materialHeight, setMaterialHeight] = useState(1400);\n\n\t//TODO-RC: if I leave the river, selection should be deleted or save riverID in selection?\n\t// seems to be more robust, but then selection is mixed with river?\n\t// maybe just save Page for origin? Right now I compile the page once we actually save it,\n\t// but this is not robust\n\n\treturn (\n\t\t<div {...{ style }}>\n\t\t\t<div\n\t\t\t\tref={(ref) => {\n\t\t\t\t\tif (!pageNumbers.has(pageNumber)) {\n\t\t\t\t\t\tconst key = { pageNumber };\n\t\t\t\t\t\tpageNumbers.set(pageNumber, key);\n\t\t\t\t\t}\n\t\t\t\t\tpages.set(pageNumbers.get(pageNumber), ref);\n\t\t\t\t}}\n\t\t\t>\n\t\t\t\t<river.components.SwitchActiveRiver riverID={riverID}>\n\t\t\t\t\t<Grid container justify=\"space-around\" direction=\"row\" alignItems=\"stretch\">\n\t\t\t\t\t\t<Grid\n\t\t\t\t\t\t\titem\n\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\twidth: \"38%\",\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<river.components.CardRiver\n\t\t\t\t\t\t\t\triverID={riverID}\n\t\t\t\t\t\t\t\triverCards={riverCards}\n\t\t\t\t\t\t\t\tmaterialHeight={materialHeight}\n\t\t\t\t\t\t\t></river.components.CardRiver>\n\t\t\t\t\t\t</Grid>\n\n\t\t\t\t\t\t<GridItemPDFPage\n\t\t\t\t\t\t\tpdfPageOuterProps={{ pageNumber, numPages, triggerResize }}\n\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\twidth: \"60%\",\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\tmaterialHeight={materialHeight}\n\t\t\t\t\t\t\tsetMaterialHeight={setMaterialHeight}\n\t\t\t\t\t\t></GridItemPDFPage>\n\t\t\t\t\t</Grid>\n\t\t\t\t</river.components.SwitchActiveRiver>\n\n\t\t\t\t<Divider\n\t\t\t\t\tstyle={\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t//TOOD-RC: fix this somehow, this leads to constant re-render loop?\n\t\t\t\t\t\t\t// margin: \"6px\",\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t></Divider>\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n","import React, { RefObject, useRef, useLayoutEffect, useState, Fragment, useEffect } from \"react\";\nimport { pdfjs } from \"react-pdf\";\nimport { VariableSizeList } from \"react-window\";\nimport { PageMaterialPair } from \"./PageMaterialPair\";\nimport { CachedPageDimensions, Pages, PageNumbers, SizeData, PageDimensions } from \"./PDFDocument\";\nimport { getCurrentPage } from \"../../selectors\";\nimport { useSelector } from \"react-redux\";\n\nconst computeRowHeight = (index: number, cachedPageDimensions: CachedPageDimensions, responsiveScale: number) => {\n\treturn (cachedPageDimensions.get(index + 1) as [number, number])[1] / responsiveScale;\n};\n\nfunction computeResponsiveScale(\n\tpageNumber: number,\n\tcachedPageDimensions: CachedPageDimensions,\n\tpages: Pages,\n\tpageNumbers: PageNumbers\n) {\n\tconst node = pages.get(pageNumbers.get(pageNumber));\n\n\tif (!node) return;\n\n\treturn (cachedPageDimensions.get(pageNumber) as [number, number])[1] / node.clientHeight;\n}\n\nfunction handleResize(\n\tcurrentPageRef: RefObject<number>,\n\tcachedPageDimensions: CachedPageDimensions,\n\tpages: Pages,\n\tpageNumbers: PageNumbers,\n\tresponsiveScale: number,\n\tinitialContainerHeight: number,\n\tsetSizeData: (sizeData: SizeData) => void\n) {\n\t// Recompute the responsive scale factor on window resize\n\tconst newResponsiveScale = computeResponsiveScale(\n\t\tcurrentPageRef.current as number,\n\t\tcachedPageDimensions,\n\t\tpages,\n\t\tpageNumbers\n\t);\n\n\tif (newResponsiveScale && responsiveScale !== newResponsiveScale) {\n\t\tconst containerHeight = initialContainerHeight / newResponsiveScale;\n\n\t\tsetSizeData({ responsiveScale: newResponsiveScale, containerHeight });\n\t}\n}\n\nconst PageZoomControl = ({ pages, pageNumbers }: { pages: Pages; pageNumbers: PageNumbers }) => {\n\t//TODO-RC: zoom queue\n\t//TODO-RC: correct for AppBar height (useRef?)\n\tconst currentPage = useSelector(getCurrentPage);\n\tuseEffect(() => {\n\t\t// this does do nothing for whatever reason?\n\t\t//listRef.current?.scrollToItem(pageToIndex(currentPage), \"start\");\n\t\tconst pageNode = pages.get(pageNumbers.get(currentPage));\n\t\t(pageNode as HTMLDivElement).scrollIntoView({ behavior: \"smooth\", block: \"start\", inline: \"start\" });\n\t}, [currentPage, pages, pageNumbers]);\n\n\treturn null;\n};\n\nexport const PageMaterialPairList = ({\n\tpdfProxyRef,\n\tpageDimensions,\n}: {\n\tpdfProxyRef: RefObject<pdfjs.PDFDocumentProxy | undefined>;\n\tpageDimensions: PageDimensions;\n}) => {\n\tconst [listSizeData, setListSizeData] = useState({\n\t\tcontainerHeight: pageDimensions.initialContainerHeight,\n\t\tresponsiveScale: 1,\n\t});\n\tconst currentPageRef = useRef(1);\n\tconst listRef = useRef<VariableSizeList>();\n\n\tconst resizeHandler = () => {\n\t\thandleResize(\n\t\t\tcurrentPageRef,\n\t\t\tpageDimensions.cachedPageDimensions,\n\t\t\tpageDimensions.pages,\n\t\t\tpageDimensions.pageNumbers,\n\t\t\tlistSizeData.responsiveScale,\n\t\t\tlistSizeData.containerHeight,\n\t\t\tsetListSizeData\n\t\t);\n\t\tlistRef.current?.resetAfterIndex(0);\n\t};\n\n\t//const widthRef = useRef<number>(window.innerWidth);\n\t// can not use dependency-arr because we DONT want to execute on first render\n\t// only if after that the width changed\n\t// height is not important, because we overflow anyways\n\t// useEffect(() => {\n\t// \tdocument.addEventListener(\"resize\", resizeHandler);\n\t// \t// const innerWidth =\n\t// \t// // need > 50 to avoid glitches where width is only slightly corrected\n\t// \t// //TODO-NICE: depend on height change, but maybe same problem?\n\t// \t// if (widthRef.current !== window.innerWidth) {\n\t// \t// \tconsole.log(\"resizing PageList because of width-change\", widthRef.current, width);\n\t// \t// \twidthRef.current = width;\n\t// \t// \tresizeHandler();\n\t// \t// }\n\t// \treturn () => {\n\t// \t\tdocument.removeEventListener(\"resize\", resizeHandler);\n\t// \t};\n\t// });\n\n\t// const widthRef = useRef<number>(width);\n\t// // can not use dependency-arr because we DONT want to execute on first render\n\t// // only if after that the width changed\n\t// // height is not important, because we overflow anyways\n\t// useLayoutEffect(() => {\n\t// \t// need > 50 to avoid glitches where width is only slightly corrected\n\t// \t//TODO-NICE: depend on height change, but maybe same problem?\n\t// \tif (widthRef.current !== width && Math.abs(widthRef.current - width) > 50) {\n\t// \t\tconsole.log(\"resizing PageList because of width-change\", widthRef.current, width);\n\t// \t\twidthRef.current = width;\n\t// \t\tresizeHandler();\n\t// \t}\n\t// });\n\n\treturn (\n\t\t<Fragment>\n\t\t\t<VariableSizeList\n\t\t\t\theight={listSizeData.containerHeight}\n\t\t\t\titemCount={(pdfProxyRef.current as pdfjs.PDFDocumentProxy).numPages}\n\t\t\t\titemSize={(index: number) =>\n\t\t\t\t\tcomputeRowHeight(index, pageDimensions.cachedPageDimensions, listSizeData.responsiveScale)\n\t\t\t\t}\n\t\t\t\titemData={{\n\t\t\t\t\tnumPages: (pdfProxyRef.current as pdfjs.PDFDocumentProxy).numPages,\n\t\t\t\t\tlistRef,\n\t\t\t\t\ttriggerResize: resizeHandler,\n\t\t\t\t\tpages: pageDimensions.pages,\n\t\t\t\t\tpageNumbers: pageDimensions.pageNumbers,\n\t\t\t\t}}\n\t\t\t\toverscanCount={2}\n\t\t\t\tonItemsRendered={(props: { visibleStopIndex: number }) => {\n\t\t\t\t\tconsole.log(props);\n\t\t\t\t\t//currentPageRef.current = visibleStopIndex + 1;\n\t\t\t\t}}\n\t\t\t\tref={listRef as RefObject<VariableSizeList>}\n\t\t\t\twidth=\"100%\"\n\t\t\t>\n\t\t\t\t{PageMaterialPair}\n\t\t\t</VariableSizeList>\n\t\t\t<PageZoomControl pages={pageDimensions.pages} pageNumbers={pageDimensions.pageNumbers}></PageZoomControl>\n\t\t</Fragment>\n\t);\n};\n","import \"./PDFDocument.css\";\nimport \"./AnnotationLayer.css\";\nimport React, { useState, useRef } from \"react\";\nimport { pdfjs, Document } from \"react-pdf\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { materialLoaded, setPage } from \"../../actions\";\nimport { getPDF, getDocumentRef } from \"../../selectors\";\nimport text from \"../../../text\";\nimport { cachePageDimensions } from \"./cachePageDimensions\";\nimport { PageMaterialPairList } from \"./PageMaterialPairList\";\npdfjs.GlobalWorkerOptions.workerSrc = `//cdnjs.cloudflare.com/ajax/libs/pdf.js/${pdfjs.version}/pdf.worker.js`;\n\nexport type CachedPageDimensions = Map<number, [number, number]>;\n\nexport type PageDimensions = {\n\t// width and height per page\n\tcachedPageDimensions: CachedPageDimensions;\n\tinitialContainerHeight: number;\n\tpages: Pages;\n\tpageNumbers: PageNumbers;\n};\n\nexport type SizeData = { containerHeight: number; responsiveScale: number };\n\n// this saves the dom nodes for all the pages\n// to measure client-height when computing the current responsive scale\n// it is a WeakMap because if the refs change, we want them to be garbage collected still\n// e.g. on resize\nexport type Pages = WeakMap<any, any>;\n// this saves {pageNumber : number} for all the pageNumbers as keys for the Pages-WeakMap\nexport type PageNumbers = Map<any, any>;\n\nconst options = {\n\tcMapUrl: \"cmaps/\",\n\tcMapPacked: true,\n};\n\n//TODO-NICE: implement more pdf-reader functionality, like zoom\n\n//TODO-RC: zoom to current page if it is already set on reload\n\nexport const PDFDocument = () => {\n\tconst pdf = useSelector(getPDF);\n\tconst documentRef = useSelector(getDocumentRef);\n\n\tconst [pageDimensions, setPageDimensions] = useState<PageDimensions | undefined>();\n\n\tconst pdfProxyRef = useRef<pdfjs.PDFDocumentProxy | undefined>();\n\n\tconst dispatch = useDispatch();\n\n\t// used for abborting pageDimension-cache-collection\n\tconst pdfName = pdf?.name;\n\tconst pdfNameRef = useRef(pdfName);\n\tif (pdfNameRef.current !== pdfName) {\n\t\tpdfNameRef.current = pdfName;\n\t}\n\n\t//TODO-RC: race condition if loading a longer PDF after a shorter one?\n\n\t//TODO-RC:\n\t// const zoomTargetSpanIndex = useSelector(getZoomTarget);\n\n\t// useEffect(() => {\n\t// \tif (!!zoomTargetSpanIndex && pdf) {\n\t// \t\tdispatch(scrollToZoomTarget());\n\t// \t}\n\t// }, [zoomTargetSpanIndex, pdf, dispatch]);\n\n\treturn (\n\t\t<Document\n\t\t\tloading={text.constants.loadingMaterialText}\n\t\t\tnoData={text.constants.noMaterialText}\n\t\t\toptions={options}\n\t\t\tfile={pdf}\n\t\t\trenderMode=\"canvas\"\n\t\t\tinputRef={documentRef}\n\t\t\tonLoadSuccess={(pdfProxy) => {\n\t\t\t\tdispatch(materialLoaded(pdfProxy.numPages));\n\t\t\t\tif (pdf) cachePageDimensions(pdfProxy, pdfName as string, pdfNameRef, setPageDimensions);\n\t\t\t\tpdfProxyRef.current = pdfProxy;\n\t\t\t}}\n\t\t\tonItemClick={({ pageNumber }) => {\n\t\t\t\tdispatch(setPage(parseInt(pageNumber)));\n\t\t\t}}\n\t\t>\n\t\t\t{pageDimensions && pdfNameRef.current === pdfName && (\n\t\t\t\t<PageMaterialPairList pdfProxyRef={pdfProxyRef} pageDimensions={pageDimensions}></PageMaterialPairList>\n\t\t\t)}\n\t\t</Document>\n\t);\n};\n","import { RefObject } from \"react\";\nimport { pdfjs } from \"react-pdf\";\nimport { PageDimensions } from \"./PDFDocument\";\n\n//TODO-NICE: use more robust method than pdfName to differentiate pdfs\n\nexport const cachePageDimensions = (\n\tpdfProxy: pdfjs.PDFDocumentProxy,\n\tpdfName: string,\n\tpdfNameRef: RefObject<string | null | undefined>,\n\tsetPageDimensions: (dims: PageDimensions) => void\n) => {\n\tconst promises = Array.from({ length: pdfProxy.numPages }, (_, i) => i + 1).map((pageNumber) =>\n\t\tpdfProxy.getPage(pageNumber)\n\t);\n\n\tlet height = 0;\n\n\t// Assuming all pages may have different heights. Otherwise we can just\n\t// load the first page and use its height for determining all the row\n\t// heights.\n\tPromise.all((promises as unknown) as Promise<any>[]).then((pages: pdfjs.PDFPageProxy[]) => {\n\t\t// a different pdf was loaded while these promises where executing\n\t\tif (pdfName !== pdfNameRef.current) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst pageDimensions = new Map();\n\n\t\t//TODO-NICE: zooming needs a scale\n\t\tconst scale = 1;\n\t\tfor (const page of pages) {\n\t\t\tconst w = page.view[2] * scale;\n\t\t\tconst h = page.view[3] * scale;\n\n\t\t\t// react-pdf 4.0.5 types are incorrect, _pageIndex is correct and not just pageIndex\n\t\t\tpageDimensions.set(((page as unknown) as { _pageIndex: number })._pageIndex + 1, [w, h]);\n\t\t\theight += h;\n\t\t}\n\n\t\tsetPageDimensions({\n\t\t\tcachedPageDimensions: pageDimensions,\n\t\t\tinitialContainerHeight: height,\n\t\t\tpages: new WeakMap(),\n\t\t\tpageNumbers: new Map(),\n\t\t});\n\t});\n};\n","import * as t from \"./actionTypes\";\nimport type { DisplayData, DisplayStatus } from \"./model\";\nimport { createRef } from \"react\";\nimport db from \"../db\";\n\nconst initialState: DisplayData = {\n\tdisplayStatus: \"SHOW\",\n\ttotalPages: 1000,\n\tcurrentPage: 1,\n\tdocumentRef: createRef(),\n\tzoomTargetSpanIndex: null,\n};\n\nconst displayData = (state = initialState, { type, payload }: { type: string; payload: any }): DisplayData => {\n\tswitch (type) {\n\t\tcase t.PDF_UPLOADED:\n\t\t\treturn { ...state, pdf: payload as File, pdfName: (payload as File).name };\n\t\tcase db.actionTypes.DOCUMENT_CHANGE:\n\t\t\tif (payload) {\n\t\t\t\t// this means the pdf has been already uploaded (Load Document) and this was not triggered not via options\n\t\t\t\tif (payload.name === state.pdfName) {\n\t\t\t\t\treturn state;\n\t\t\t\t}\n\t\t\t\treturn {\n\t\t\t\t\t...initialState,\n\t\t\t\t\tpdf: undefined,\n\t\t\t\t\tpdfName: payload.name,\n\t\t\t\t\ttotalPages: payload.totalPages,\n\t\t\t\t\tcurrentPage: payload.currentPage,\n\t\t\t\t};\n\t\t\t} else {\n\t\t\t\t// dont need to reset here because when loading pdf we set automatically via other actions\n\t\t\t\treturn state;\n\t\t\t}\n\t\tcase t.MATERIAL_LOADED:\n\t\t\treturn { ...state, totalPages: payload as number };\n\t\tcase t.PAGE_UPDATE:\n\t\t\treturn { ...state, currentPage: payload as number };\n\t\tcase t.DISPLAY_STATUS:\n\t\t\treturn { ...state, displayStatus: payload as DisplayStatus };\n\t\tcase t.ZOOM_QUEUE:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tzoomTargetSpanIndex: payload,\n\t\t\t};\n\t\tdefault:\n\t\t\treturn state;\n\t}\n};\n\nexport default displayData;\n","import * as actions from \"./actions\";\nimport * as actionTypes from \"./actionTypes\";\nimport * as components from \"./components\";\nimport * as constants from \"./constants\";\nimport reducer from \"./reducer\";\nimport * as selectors from \"./selectors\";\n\nexport default { actions, actionTypes, components, constants, reducer, selectors };\n","import { createSelector } from \"reselect\";\nimport display from \"../display\";\nimport river from \"../river\";\nimport cards from \"../cards\";\nimport { DocumentData } from \"../db/model\";\n\nexport const collectCurrentDBData: (state: any) => DocumentData | null = createSelector(\n\tdisplay.selectors.getPDFName,\n\tdisplay.selectors.getTotalPages,\n\tdisplay.selectors.getCurrentPage,\n\triver.selectors.getRiverMakeUps,\n\triver.selectors.getActiveRiverMakeUpID,\n\triver.selectors.getLastRiverIDNumber,\n\tcards.selectors.getCards,\n\tcards.selectors.getLastCardIDNumber,\n\t(pdfName, totalPages, currentPage, riverMakeUps, activeRiverMakeUpID, lastRiverIDNumber, cards, lastCardIDNumber) => {\n\t\treturn {\n\t\t\tname: pdfName as string,\n\t\t\ttotalPages,\n\t\t\tcurrentPage,\n\t\t\triverMakeUps,\n\t\t\tactiveRiverMakeUpID,\n\t\t\tlastRiverIDNumber,\n\t\t\tcards,\n\t\t\tlastCardIDNumber,\n\t\t};\n\t}\n);\n","import { Dispatch } from \"redux\";\nimport display from \"../display\";\nimport { ActionCreators } from \"redux-undo\";\nimport db from \"../db\";\nimport { collectCurrentDBData } from \"./selectors\";\nimport { DocumentData } from \"../db/model\";\n\nexport const archiveCurrentDBData = () => {\n\treturn (dispatch: Dispatch, getState: Function) => {\n\t\tconst state = getState();\n\t\tconst currentPDFName = display.selectors.getPDFName(state);\n\n\t\tif (currentPDFName !== undefined) {\n\t\t\tconst dbData = collectCurrentDBData(state) as DocumentData;\n\t\t\tdispatch(db.actions.archiveDBData(dbData));\n\t\t}\n\t};\n};\n\nconst fileDownload = require(\"js-file-download\");\nexport const downloadDBData = () => {\n\treturn (dispatch: any, getState: Function) => {\n\t\t//actualize the db before downloading\n\t\tdispatch(archiveCurrentDBData());\n\n\t\tconst documentDataSets = db.selectors.getDocumentDataSets(getState());\n\t\tconst localString = new Date().toLocaleString();\n\t\tfileDownload(JSON.stringify(documentDataSets), localString + \" ClayMemory.txt\");\n\t};\n};\n\nexport const changeDocument = (pdf: File) => {\n\treturn (dispatch: Dispatch, getState: Function) => {\n\t\tconst newPDFName = pdf.name;\n\n\t\tconst state = getState();\n\t\tconst currentPDFName = display.selectors.getPDFName(state);\n\n\t\tconst documentDB = db.selectors.getDocumentDB(state);\n\n\t\t// save current data only if pdf has been uploaded / there is an active document\n\t\tif (currentPDFName !== undefined) {\n\t\t\tconst dbData = collectCurrentDBData(state) as DocumentData;\n\t\t\tdispatch(db.actions.archiveDBData(dbData));\n\t\t}\n\n\t\tdispatch(display.actions.pdfUpload(pdf));\n\n\t\t// if the uploaded pdf is the same as the active one, then we just reloaded the app (lost the pdf)\n\t\t// and dont need load data (loading data would lead to overwrite because of the syncing order)\n\t\t//TODO-NICE: make the sync between documentDB and active document for explicit, right now I just sync when a PDF is uploaded\n\t\tif (newPDFName === currentPDFName) {\n\t\t\treturn;\n\t\t}\n\t\t// load new data or reset\n\t\tconst newDocumentData = documentDB[newPDFName];\n\t\tif (newDocumentData) {\n\t\t\tdispatch({ type: db.actionTypes.DOCUMENT_CHANGE, payload: newDocumentData });\n\t\t} else {\n\t\t\tdispatch({ type: db.actionTypes.DOCUMENT_CHANGE });\n\t\t}\n\n\t\t// no undo-redo across documents\n\t\tdispatch(ActionCreators.clearHistory());\n\t};\n};\n\n//TODO-NICE: remove save redundancy\nexport const loadSavedDocument = (document: string) => {\n\treturn (dispatch: Dispatch, getState: Function) => {\n\t\tconst state = getState();\n\t\tconst currentPDFName = display.selectors.getPDFName(state);\n\n\t\tconst documentDB = db.selectors.getDocumentDB(state);\n\n\t\t// save current data only if pdf has been uploaded / there is an active document\n\t\tif (currentPDFName !== undefined) {\n\t\t\tconst dbData = collectCurrentDBData(state) as DocumentData;\n\t\t\tdispatch(db.actions.archiveDBData(dbData));\n\t\t}\n\n\t\t// load new data\n\t\tconst newDocumentData = documentDB[document];\n\t\tdispatch({ type: db.actionTypes.DOCUMENT_CHANGE, payload: newDocumentData });\n\n\t\t// no undo-redo across documents\n\t\tdispatch(ActionCreators.clearHistory());\n\t};\n};\n\nexport const deleteDocument = (document: string) => {\n\treturn (dispatch: Dispatch, getState: Function) => {\n\t\tconst state = getState();\n\t\tconst activeDocument = display.selectors.getPDFName(state);\n\t\tif (activeDocument && activeDocument === document) {\n\t\t\t// reset data\n\t\t\tdispatch({ type: db.actionTypes.DOCUMENT_CHANGE });\n\n\t\t\t// keeping the undo history leads to weird edge cases and makes no sense\n\t\t\tdispatch(ActionCreators.clearHistory());\n\t\t}\n\n\t\t// note: no undo of this\n\t\tdispatch(db.actions.deleteDocumentDataSet(document));\n\t};\n};\n","import { useDispatch } from \"react-redux\";\nimport React, { useState } from \"react\";\nimport {\n\tIconButton,\n\tTooltip,\n\tDialog,\n\tDialogTitle,\n\tDialogContent,\n\tDialogContentText,\n\tDialogActions,\n\tButton,\n} from \"@material-ui/core\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport text from \"../../../text\";\nimport { deleteDocument } from \"../../actions\";\n\nconst DeleteDocumentDialogAlert = ({\n\tdocument,\n\thandleClose,\n\topen,\n}: {\n\tdocument: string;\n\thandleClose: () => void;\n\topen: boolean;\n}) => {\n\tconst dispatch = useDispatch();\n\n\treturn (\n\t\t<Dialog\n\t\t\topen={open}\n\t\t\tonClose={handleClose}\n\t\t\taria-labelledby=\"alert-dialog-title\"\n\t\t\taria-describedby=\"alert-dialog-description\"\n\t\t>\n\t\t\t<DialogTitle id=\"alert-dialog-title\">{\"Delete \" + document + \" and all associated card data?\"}</DialogTitle>\n\t\t\t<DialogContent>\n\t\t\t\t<DialogContentText id=\"alert-dialog-description\">This change can not be undone.</DialogContentText>\n\t\t\t</DialogContent>\n\t\t\t<DialogActions>\n\t\t\t\t<Button onClick={handleClose} color=\"primary\">\n\t\t\t\t\tAbort\n\t\t\t\t</Button>\n\t\t\t\t<Button\n\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\tdispatch(deleteDocument(document));\n\t\t\t\t\t\thandleClose();\n\t\t\t\t\t}}\n\t\t\t\t\tcolor=\"primary\"\n\t\t\t\t\tautoFocus\n\t\t\t\t>\n\t\t\t\t\tDelete document and associated card data\n\t\t\t\t</Button>\n\t\t\t</DialogActions>\n\t\t</Dialog>\n\t);\n};\n\n//TODO-NICE: deleting the active document leads only to reset it, not really delete it\nexport const DeleteDocumentButton = ({ document }: { document: string }) => {\n\tconst [open, setOpen] = useState(false);\n\n\tconst handleClose = () => {\n\t\tsetOpen(false);\n\t};\n\treturn (\n\t\t<div>\n\t\t\t<Tooltip\n\t\t\t\ttitle={text.constants.deleteDocumentTooltip}\n\t\t\t\tenterDelay={text.constants.defaultEnterDelay}\n\t\t\t\tenterNextDelay={text.constants.defaultEnterNextDelay}\n\t\t\t>\n\t\t\t\t<IconButton\n\t\t\t\t\ttype=\"button\"\n\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\tsetOpen(true);\n\t\t\t\t\t}}\n\t\t\t\t>\n\t\t\t\t\t<DeleteIcon fontSize=\"small\"></DeleteIcon>\n\t\t\t\t</IconButton>\n\t\t\t</Tooltip>\n\t\t\t<DeleteDocumentDialogAlert document={document} open={open} handleClose={handleClose}></DeleteDocumentDialogAlert>\n\t\t</div>\n\t);\n};\n","import { useSelector, useDispatch } from \"react-redux\";\nimport React, { ChangeEvent, Fragment, useRef, MutableRefObject } from \"react\";\nimport { MenuItem, Button } from \"@material-ui/core\";\nimport display from \"../../../display\";\nimport db from \"../../../db\";\nimport { DocumentData } from \"../../../db/model\";\nimport PublishIcon from \"@material-ui/icons/Publish\";\n\nexport const InputDataSets = ({ handleClose, label }: any) => {\n\tconst dispatch = useDispatch();\n\n\tconst activeDocument = useSelector(display.selectors.getPDFName);\n\n\tconst ref: MutableRefObject<null | HTMLInputElement> = useRef(null);\n\n\treturn (\n\t\t<Fragment>\n\t\t\t<MenuItem\n\t\t\t\tonClick={() => {\n\t\t\t\t\t(ref.current as HTMLInputElement).click();\n\t\t\t\t}}\n\t\t\t>\n\t\t\t\t<Button variant=\"contained\" color=\"primary\" disableElevation startIcon={<PublishIcon></PublishIcon>}>\n\t\t\t\t\t{label}\n\t\t\t\t</Button>\n\t\t\t</MenuItem>\n\t\t\t<input\n\t\t\t\tref={ref}\n\t\t\t\tstyle={{ display: \"none\" }}\n\t\t\t\tonChange={(event: ChangeEvent<HTMLInputElement>) => {\n\t\t\t\t\t// fun fact: uploading a file with the same file-name does not trigger this event\n\t\t\t\t\tconst files = event.target.files;\n\t\t\t\t\tconst file = files ? files[0] : null;\n\t\t\t\t\tif (file) {\n\t\t\t\t\t\tconst reader = new FileReader();\n\t\t\t\t\t\treader.readAsText(file);\n\t\t\t\t\t\treader.onload = () => {\n\t\t\t\t\t\t\t//TODO-NICE: sanitize, escape os new line difference, prepare multimedia cards\n\t\t\t\t\t\t\t//TODO-NICE: merge same name-pdfs and think about collision in general\n\t\t\t\t\t\t\t//TODO-NICE: merge uploaded state with current-one and dont overwrite\n\t\t\t\t\t\t\tconst uploadedDataSets = JSON.parse(reader.result as string);\n\t\t\t\t\t\t\t// if the uploaded dataset corresponds to the current document, overwrite current with uploaded\n\t\t\t\t\t\t\tconst foundDataSet = (uploadedDataSets as DocumentData[]).find(\n\t\t\t\t\t\t\t\t(dbData) => dbData.name === activeDocument\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\tdispatch(db.actions.loadDocumentDataSets(uploadedDataSets, foundDataSet));\n\t\t\t\t\t\t};\n\t\t\t\t\t}\n\t\t\t\t\thandleClose();\n\t\t\t\t}}\n\t\t\t\ttype=\"file\"\n\t\t\t\taccept=\".txt\"\n\t\t\t/>\n\t\t</Fragment>\n\t);\n};\n","import { useDispatch } from \"react-redux\";\nimport React, { ChangeEvent, Fragment, useRef, MutableRefObject } from \"react\";\nimport { MenuItem, Button } from \"@material-ui/core\";\nimport { changeDocument } from \"../../actions\";\nimport InsertDriveFileIcon from \"@material-ui/icons/InsertDriveFile\";\n//TODO-NICE: have way to merge two document-workspaces\nexport const InputDocument = ({ handleClose, label }: any) => {\n\tconst dispatch = useDispatch();\n\n\tconst ref: MutableRefObject<null | HTMLInputElement> = useRef(null);\n\n\treturn (\n\t\t<Fragment>\n\t\t\t<MenuItem\n\t\t\t\tonClick={() => {\n\t\t\t\t\t(ref.current as HTMLInputElement).click();\n\t\t\t\t}}\n\t\t\t>\n\t\t\t\t<Button\n\t\t\t\t\tvariant=\"contained\"\n\t\t\t\t\tcolor=\"primary\"\n\t\t\t\t\tdisableElevation\n\t\t\t\t\tstartIcon={<InsertDriveFileIcon></InsertDriveFileIcon>}\n\t\t\t\t>\n\t\t\t\t\t{label}\n\t\t\t\t</Button>\n\t\t\t</MenuItem>\n\t\t\t<input\n\t\t\t\tref={ref}\n\t\t\t\tstyle={{ display: \"none\" }}\n\t\t\t\tonChange={(event: ChangeEvent<HTMLInputElement>) => {\n\t\t\t\t\tconst files = event.target.files;\n\t\t\t\t\tconst pdf = files ? files[0] : null;\n\t\t\t\t\tif (pdf) {\n\t\t\t\t\t\tdispatch(changeDocument(pdf));\n\t\t\t\t\t}\n\t\t\t\t\thandleClose();\n\t\t\t\t}}\n\t\t\t\ttype=\"file\"\n\t\t\t\taccept=\".pdf\"\n\t\t\t/>\n\t\t</Fragment>\n\t);\n};\n","import { useDispatch } from \"react-redux\";\nimport React from \"react\";\nimport { IconButton, Tooltip } from \"@material-ui/core\";\nimport ImportContactsIcon from \"@material-ui/icons/ImportContacts\";\nimport { loadSavedDocument } from \"../../actions\";\nimport text from \"../../../text\";\nexport const LoadDocumentDataButton = ({ document }: { document: string }) => {\n\tconst dispatch = useDispatch();\n\treturn (\n\t\t<Tooltip\n\t\t\ttitle={text.constants.loadSavedDocumentTooltip}\n\t\t\tenterDelay={text.constants.defaultEnterDelay}\n\t\t\tenterNextDelay={text.constants.defaultEnterNextDelay}\n\t\t>\n\t\t\t<IconButton\n\t\t\t\ttype=\"button\"\n\t\t\t\tonClick={() => {\n\t\t\t\t\tdispatch(loadSavedDocument(document));\n\t\t\t\t}}\n\t\t\t>\n\t\t\t\t<ImportContactsIcon fontSize=\"small\"></ImportContactsIcon>\n\t\t\t</IconButton>\n\t\t</Tooltip>\n\t);\n};\n","import React from \"react\";\nimport { Divider, Card, Grid } from \"@material-ui/core\";\nimport { DeleteDocumentButton } from \"./DeleteDocumentButton\";\nimport { LoadDocumentDataButton } from \"./LoadDocumentDataButton\";\n\nconst DocumentOptionItemButtonRow = ({ document }: { document: string }) => {\n\treturn (\n\t\t<Grid container direction=\"row\">\n\t\t\t<Grid item>\n\t\t\t\t<LoadDocumentDataButton document={document}></LoadDocumentDataButton>\n\t\t\t</Grid>\n\n\t\t\t<Grid item>\n\t\t\t\t<Divider orientation=\"vertical\"></Divider>\n\t\t\t</Grid>\n\n\t\t\t<Grid item>\n\t\t\t\t<DeleteDocumentButton document={document}></DeleteDocumentButton>\n\t\t\t</Grid>\n\t\t</Grid>\n\t);\n};\n\nexport const DocumentOptionItem = ({ document }: { document: string }) => {\n\treturn (\n\t\t<Grid container direction=\"row\" justify=\"space-between\" alignItems=\"center\" spacing={1}>\n\t\t\t<Grid item>{document.replace(\".pdf\", \"\")}</Grid>\n\n\t\t\t<Grid item>\n\t\t\t\t<Card variant=\"outlined\">\n\t\t\t\t\t<DocumentOptionItemButtonRow document={document}></DocumentOptionItemButtonRow>\n\t\t\t\t</Card>\n\t\t\t</Grid>\n\t\t</Grid>\n\t);\n};\n","import { useSelector, useDispatch } from \"react-redux\";\nimport React from \"react\";\nimport { Divider, Menu, MenuItem, IconButton, Typography, Card, Button, Grid } from \"@material-ui/core\";\nimport { downloadDBData } from \"../../actions\";\nimport MoreVertIcon from \"@material-ui/icons/MoreVert\";\nimport display from \"../../../display\";\nimport db from \"../../../db\";\nimport GetAppIcon from \"@material-ui/icons/GetApp\";\nimport { DeleteDocumentButton } from \"./DeleteDocumentButton\";\nimport text from \"../../../text\";\nimport { incrementer } from \"../../../../shared/utils\";\nimport { InputDataSets } from \"./InputDataSets\";\nimport { InputDocument } from \"./InputDocument\";\nimport { DocumentOptionItem } from \"./DocumentOptionItem\";\n\nconst ActiveDocumentOptionItem = ({ document }: { document: string }) => {\n\treturn (\n\t\t<Grid container direction=\"row\" justify=\"space-between\" alignItems=\"center\" spacing={1}>\n\t\t\t<Grid item>{document.replace(\".pdf\", \"\")}</Grid>\n\n\t\t\t<Grid item>\n\t\t\t\t<Card variant=\"outlined\">\n\t\t\t\t\t<DeleteDocumentButton document={document}></DeleteDocumentButton>\n\t\t\t\t</Card>\n\t\t\t</Grid>\n\t\t</Grid>\n\t);\n};\n\nexport const Options = () => {\n\tconst activeDocument = useSelector(display.selectors.getPDFName);\n\tconst documents = useSelector(db.selectors.getDocumentNames).filter((doc) => doc !== activeDocument);\n\n\tconst [anchorEl, setAnchorEl] = React.useState<null | HTMLElement>(null);\n\n\tconst handleClick = (event: React.MouseEvent<HTMLButtonElement>) => {\n\t\tsetAnchorEl(event.currentTarget);\n\t};\n\n\tconst handleClose = () => {\n\t\tsetAnchorEl(null);\n\t};\n\n\tconst dispatch = useDispatch();\n\n\tconst increment = incrementer();\n\n\treturn (\n\t\t<div>\n\t\t\t<IconButton type=\"button\" onClick={handleClick}>\n\t\t\t\t<MoreVertIcon></MoreVertIcon>\n\t\t\t</IconButton>\n\t\t\t<Menu\n\t\t\t\tid=\"simple-menu\"\n\t\t\t\tanchorEl={anchorEl}\n\t\t\t\tkeepMounted\n\t\t\t\topen={Boolean(anchorEl)}\n\t\t\t\tonClose={handleClose}\n\t\t\t\tMenuListProps={{ style: { paddingLeft: \"8px\", paddingRight: \"8px\" } }}\n\t\t\t>\n\t\t\t\t{activeDocument && [\n\t\t\t\t\t<Typography key={increment()} component={\"span\"} variant=\"h6\">\n\t\t\t\t\t\t{text.constants.activeDocumentText}\n\t\t\t\t\t</Typography>,\n\t\t\t\t\t<ActiveDocumentOptionItem key={increment()} document={activeDocument}></ActiveDocumentOptionItem>,\n\t\t\t\t\t<Divider key={increment()} style={{ marginTop: \"6px\" }}></Divider>,\n\t\t\t\t]}\n\t\t\t\t{documents.length > 0 && [\n\t\t\t\t\t<Typography key={increment()} component={\"span\"} variant=\"h6\">\n\t\t\t\t\t\t{text.constants.existingDataText}\n\t\t\t\t\t</Typography>,\n\t\t\t\t\t<Typography key={increment()} component={\"span\"}>\n\t\t\t\t\t\t<ul style={{ listStyleType: \"square\" }}>\n\t\t\t\t\t\t\t{documents.map((document) =>\n\t\t\t\t\t\t\t\tdocument ? (\n\t\t\t\t\t\t\t\t\t<li key={increment()}>\n\t\t\t\t\t\t\t\t\t\t<DocumentOptionItem document={document} key={increment()}></DocumentOptionItem>\n\t\t\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t\t\t) : null\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t</ul>\n\t\t\t\t\t</Typography>,\n\t\t\t\t\t<Divider key={increment()} style={{ marginTop: \"6px\" }} />,\n\t\t\t\t]}\n\t\t\t\t<InputDocument handleClose={handleClose} label={\"Load document\"}></InputDocument>\n\t\t\t\t<Divider />\n\t\t\t\t<MenuItem\n\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\tdispatch(downloadDBData());\n\t\t\t\t\t\thandleClose();\n\t\t\t\t\t}}\n\t\t\t\t>\n\t\t\t\t\t<Button variant=\"contained\" color=\"primary\" disableElevation startIcon={<GetAppIcon></GetAppIcon>}>\n\t\t\t\t\t\t{text.constants.downloadDatasetsText}\n\t\t\t\t\t</Button>\n\t\t\t\t</MenuItem>\n\t\t\t\t<Divider />\n\t\t\t\t<InputDataSets handleClose={handleClose} label={text.constants.uploadDatasetsText}></InputDataSets>\n\t\t\t</Menu>\n\t\t</div>\n\t);\n};\n","import React, { useState } from \"react\";\nimport SearchBar from \"material-ui-search-bar\";\nimport river from \"../../river\";\nimport { useDispatch, useSelector } from \"react-redux\";\n\n//TODO-RC: make search for PDF (right now this would need some work to find the correct text-node and partially color it)\n// https://github.com/wojtekmaj/react-pdf/issues/212\nexport const CardSearchBar = () => {\n\tconst dispatch = useDispatch();\n\tconst contentFilter = useSelector(river.selectors.getRiverContentFilter);\n\tconst [state, setState] = useState(contentFilter);\n\n\t//TODO-NICE: search in other rivers/same river when composing to show similar cards (like in the Anki Addon)\n\t//TODO-NICE: change the color / border or something to indicate when a filter is active\n\treturn (\n\t\t<SearchBar\n\t\t\tvalue={state}\n\t\t\tplaceholder=\"Search in cards\"\n\t\t\tonChange={(newValue) => {\n\t\t\t\t// auto-reset on empty\n\t\t\t\tif (newValue === \"\") dispatch(river.actions.resetContentFilter());\n\t\t\t\tsetState(newValue);\n\t\t\t}}\n\t\t\tonCancelSearch={() => {\n\t\t\t\tdispatch(river.actions.resetContentFilter());\n\t\t\t}}\n\t\t\tonRequestSearch={() => dispatch(river.actions.setContentFilter(state))}\n\t\t/>\n\t);\n};\n","import React from \"react\";\nimport { IconButton, Card, Divider, Grid, Tooltip } from \"@material-ui/core\";\nimport { useDispatch } from \"react-redux\";\nimport UndoIcon from \"@material-ui/icons/Undo\";\nimport RedoIcon from \"@material-ui/icons/Redo\";\nimport { ActionCreators } from \"redux-undo\";\nimport text from \"../../text\";\n\n//TODO-NICE: disable undo/redo buttons if no undo/redo possible, tried custom hook but didnt work,\n// need to check all store-objects which have future/past because they have different undo/redo\n\n// we support undo/redo instead of lengthy confirmation (see The Humane Interface)\nconst UndoButton = () => {\n\tconst dispatch = useDispatch();\n\n\t//tooltip needs non-disabled child component\n\treturn (\n\t\t<Tooltip\n\t\t\ttitle={text.constants.undoTooltip}\n\t\t\tenterDelay={text.constants.defaultEnterDelay}\n\t\t\tenterNextDelay={text.constants.defaultEnterNextDelay}\n\t\t>\n\t\t\t<span>\n\t\t\t\t<IconButton\n\t\t\t\t\ttype=\"button\"\n\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\tdispatch(ActionCreators.undo());\n\t\t\t\t\t}}\n\t\t\t\t>\n\t\t\t\t\t<UndoIcon></UndoIcon>\n\t\t\t\t</IconButton>\n\t\t\t</span>\n\t\t</Tooltip>\n\t);\n};\nconst RedoButton = () => {\n\tconst dispatch = useDispatch();\n\treturn (\n\t\t<Tooltip\n\t\t\ttitle={text.constants.redoTooltip}\n\t\t\tenterDelay={text.constants.defaultEnterDelay}\n\t\t\tenterNextDelay={text.constants.defaultEnterNextDelay}\n\t\t>\n\t\t\t<IconButton\n\t\t\t\ttype=\"button\"\n\t\t\t\tonClick={() => {\n\t\t\t\t\tdispatch(ActionCreators.redo());\n\t\t\t\t}}\n\t\t\t>\n\t\t\t\t<RedoIcon></RedoIcon>\n\t\t\t</IconButton>\n\t\t</Tooltip>\n\t);\n};\n\nexport const UndoRedoCard = () => {\n\treturn (\n\t\t<Card variant=\"outlined\">\n\t\t\t<Grid container direction=\"row\">\n\t\t\t\t<Grid item>\n\t\t\t\t\t<UndoButton></UndoButton>\n\t\t\t\t</Grid>\n\t\t\t\t<Grid item>\n\t\t\t\t\t<Divider orientation=\"vertical\"></Divider>\n\t\t\t\t</Grid>\n\t\t\t\t<Grid item>\n\t\t\t\t\t<RedoButton></RedoButton>\n\t\t\t\t</Grid>\n\t\t\t</Grid>\n\t\t</Card>\n\t);\n};\n","import display from \"../../display\";\nimport river from \"../../river\";\nimport React from \"react\";\nimport { IconButton, Menu, FormControlLabel, Typography, Divider, Grid } from \"@material-ui/core\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport VisibilityIcon from \"@material-ui/icons/Visibility\";\nimport { GreenCheckbox } from \"../../../shared/GreenCheckbox\";\n\nconst ShowRiverCheckbox = () => {\n\tconst dispatch = useDispatch();\n\tconst riverShowState = useSelector(river.selectors.getRiverShowState);\n\n\treturn (\n\t\t<FormControlLabel\n\t\t\tcontrol={\n\t\t\t\t<GreenCheckbox\n\t\t\t\t\tchecked={riverShowState === \"SHOW\"}\n\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\tdispatch(river.actions.toggleRiverShowState());\n\t\t\t\t\t}}\n\t\t\t\t/>\n\t\t\t}\n\t\t\tlabel=\"River\"\n\t\t/>\n\t);\n};\n\nconst ShowMaterialCheckbox = () => {\n\tconst dispatch = useDispatch();\n\tconst displayShowState = useSelector(display.selectors.getDisplayStatus);\n\n\treturn (\n\t\t<FormControlLabel\n\t\t\tcontrol={\n\t\t\t\t<GreenCheckbox\n\t\t\t\t\tchecked={displayShowState === \"SHOW\"}\n\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\tdispatch(display.actions.toggleDisplayState());\n\t\t\t\t\t}}\n\t\t\t\t/>\n\t\t\t}\n\t\t\tlabel=\"Material\"\n\t\t/>\n\t);\n};\n\nexport const ShowHideButton = () => {\n\tconst [anchorEl, setAnchorEl] = React.useState<null | HTMLElement>(null);\n\n\tconst handleClick = (event: React.MouseEvent<HTMLButtonElement>) => {\n\t\tsetAnchorEl(event.currentTarget);\n\t};\n\n\tconst handleClose = () => {\n\t\tsetAnchorEl(null);\n\t};\n\n\treturn (\n\t\t<div>\n\t\t\t<IconButton type=\"button\" onClick={handleClick}>\n\t\t\t\t<VisibilityIcon></VisibilityIcon>\n\t\t\t</IconButton>\n\t\t\t<Menu anchorEl={anchorEl} keepMounted open={Boolean(anchorEl)} onClose={handleClose}>\n\t\t\t\t<Typography>Show:</Typography>\n\t\t\t\t<Divider></Divider>\n\t\t\t\t<Grid container direction=\"row\">\n\t\t\t\t\t<Grid item>\n\t\t\t\t\t\t<river.components.RiverContentFormGroup></river.components.RiverContentFormGroup>\n\t\t\t\t\t</Grid>\n\t\t\t\t\t<Grid item>\n\t\t\t\t\t\t<Divider orientation=\"vertical\"></Divider>\n\t\t\t\t\t</Grid>\n\t\t\t\t\t<Grid item>\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t<Grid container direction=\"column\">\n\t\t\t\t\t\t\t\t<Grid item>\n\t\t\t\t\t\t\t\t\t<ShowRiverCheckbox></ShowRiverCheckbox>\n\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t\t<Grid item>\n\t\t\t\t\t\t\t\t\t<ShowMaterialCheckbox></ShowMaterialCheckbox>\n\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t}\n\t\t\t\t\t</Grid>\n\t\t\t\t</Grid>\n\t\t\t</Menu>\n\t\t</div>\n\t);\n};\n","import display from \"../../display\";\nimport React from \"react\";\nimport { AppBar, Toolbar, Grid, Typography } from \"@material-ui/core\";\nimport { useSelector } from \"react-redux\";\nimport { Options } from \"./Options/Options\";\nimport { CardSearchBar } from \"./CardSearchBar\";\nimport { UndoRedoCard } from \"./UndoRedoButtons\";\nimport { ShowHideButton } from \"./ShowHideButton\";\n\n//TODO-NICE: download/load csv for Anki\nexport const ControlBar = () => {\n\tconst materialName = useSelector(display.selectors.getPDFName);\n\n\treturn (\n\t\t<display.components.PageKeyboardControl>\n\t\t\t<AppBar>\n\t\t\t\t<Toolbar variant=\"regular\">\n\t\t\t\t\t<Grid item>\n\t\t\t\t\t\t<Grid container spacing={1} direction=\"row\" alignItems=\"center\" justify=\"flex-start\">\n\t\t\t\t\t\t\t<Grid item style={{ width: \"20%\" }}>\n\t\t\t\t\t\t\t\t<display.components.PageChooser></display.components.PageChooser>\n\t\t\t\t\t\t\t</Grid>\n\n\t\t\t\t\t\t\t<Grid item>\n\t\t\t\t\t\t\t\t<display.components.PageNavigation></display.components.PageNavigation>\n\t\t\t\t\t\t\t</Grid>\n\n\t\t\t\t\t\t\t<Grid item>\n\t\t\t\t\t\t\t\t<UndoRedoCard></UndoRedoCard>\n\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t</Grid>\n\t\t\t\t\t</Grid>\n\n\t\t\t\t\t<Typography style={{ flexGrow: 1 }}>{materialName?.replace(\".pdf\", \"\")}</Typography>\n\n\t\t\t\t\t<CardSearchBar></CardSearchBar>\n\t\t\t\t\t<ShowHideButton></ShowHideButton>\n\t\t\t\t\t<Options></Options>\n\t\t\t\t</Toolbar>\n\t\t\t</AppBar>\n\t\t</display.components.PageKeyboardControl>\n\t);\n};\n","import * as actions from \"./actions\";\nimport * as components from \"./components\";\nimport * as selectors from \"./selectors\";\n\nexport default { actions, components, selectors };\n","export const NAME = \"extractionData\";\n","import { NAME } from \"./constants\";\n\nexport const CLOSE_CONTEXT_MENU = NAME + \"/CLOSE_CONTEXT_MENU\";\nexport const OPEN_CONTEXT_MENU = NAME + \"/OPEN_CONTEXT_MENU\";\n","import { NAME } from \"./constants\";\nimport { createSelector } from \"reselect\";\nimport { CreationData } from \"./model\";\nimport river from \"../river\";\n\nexport const getAll = (state: any): CreationData => state[NAME].present;\n\nexport const getContextMenuRef = createSelector(getAll, (state: CreationData) => state.menuRef);\n\nexport const getContextMenuFullCardsRef = createSelector(getAll, (state: CreationData) => state.fullCardRef);\n\nexport const getContextMenuQARefs = createSelector(getAll, (state: CreationData) => state.qaRefs);\n\nexport const getContextMenuPosition = createSelector(getAll, (state) => state.position);\n\nexport const getContextMenuInitData = createSelector(\n\tgetContextMenuPosition,\n\tgetContextMenuRef,\n\tgetContextMenuQARefs,\n\triver.selectors.getActiveRiverCards,\n\t(position, menuRef, qaRefs, riverCards) => {\n\t\treturn { position, menuRef, qaRefs, riverCards };\n\t}\n);\n","import { getContextMenuRef, getContextMenuQARefs, getContextMenuFullCardsRef } from \"../selectors\";\n\n// the root div for the menu invisibly covers the whole screen\n// the actual div that is visible is this\nconst baseContextMenuSelector = \"div.MuiPaper-root\";\n\nexport const contextMenuContainsTargetNode = (state: any, event: Event) => {\n\tconst menuRef = getContextMenuRef(state).current;\n\tconst fullCardsRef = getContextMenuFullCardsRef(state).current?.parentNode;\n\n\t// the nested items are rendered under a different menu\n\t// the current api does not allow access\n\t// so the qa-refs refer to the Q-button\n\t// we check the click against his parent,\n\t// which is the div that contains the Q and A buttons\n\tconst qaRefs = getContextMenuQARefs(state)\n\t\t.map((refObject) => refObject.current)\n\t\t.filter((cur) => !!cur)\n\t\t.map((ref) => ref.parentNode);\n\n\tconst target = event.target as Node;\n\n\tif (menuRef?.querySelector(baseContextMenuSelector)?.contains(target)) return true;\n\n\tif (fullCardsRef?.contains(target)) return true;\n\n\tfor (const qaRef of qaRefs) {\n\t\tif (qaRef.contains(target)) return true;\n\t}\n\n\treturn false;\n};\n","import * as t from \"./actionTypes\";\nimport selection from \"../selection\";\nimport { CreationType } from \"../cards/model/model-config\";\nimport { contextMenuContainsTargetNode } from \"./services\";\nimport river from \"../river\";\n\nexport const closeContextMenu = () => {\n\treturn { type: t.CLOSE_CONTEXT_MENU };\n};\n\nexport const openContextMenu = (position: { x: number; y: number }) => {\n\treturn { type: t.OPEN_CONTEXT_MENU, payload: position };\n};\n\nexport const mouseDownControl = (event: MouseEvent) => {\n\treturn (dispatch: any, getState: Function) => {\n\t\tconst clickOutSideOfMenu = !contextMenuContainsTargetNode(getState(), event);\n\t\tif (clickOutSideOfMenu) {\n\t\t\tdispatch(closeContextMenu());\n\t\t\tdispatch(river.actions.resetHoveredCard());\n\t\t}\n\t};\n};\n\nexport const rightClickControl = (event: MouseEvent) => {\n\treturn (dispatch: any, getState: Function) => {\n\t\tconst state = getState();\n\n\t\tif (!selection.selectors.sourceConfigExists(state)) return;\n\n\t\tevent.preventDefault();\n\n\t\tdispatch(openContextMenu({ x: event.x, y: event.y }));\n\n\t\t//TODO-RC: this does not work anymore with multiple pages, simplify?\n\t\t//if the user is focused on the document, the push-to river should always be the active=page-wise river\n\t\t//dispatch(river.actions.setPushToRiver(river.selectors.getActiveRiverMakeUpID(state)));\n\t};\n};\n\nexport const dispatchCreationFromContextMenu = (creationType: CreationType, cardID?: string) => {\n\treturn (dispatch: any, getState: Function) => {\n\t\tdispatch(closeContextMenu());\n\t\tconsole.log(cardID);\n\t\tdispatch(selection.actions.addSelectionGoal({ cardField: creationType, cardID, updateType: \"REPLACE\" }));\n\n\t\t// const state = getState();\n\t\t// // if this does exist, we dont need to provide an origin, because it will be provided by the sourceCard\n\t\t// const sourceCard = selection.selectors.getSourceCard(state);\n\t\t// // always overwrite origin, even if isUpdate, because updateType==replace\n\n\t\t// const origin: CardOrigin | undefined = sourceCard ? undefined : display.selectors.getCurrentOrigin(state);\n\t\t// dispatch(selection.services.use_selection.selectionToCardReplace(creationType, origin, cardID));\n\t};\n};\n","import * as t from \"./actionTypes\";\nimport { CreationData } from \"./model\";\nimport { createRef } from \"react\";\nimport cards from \"../cards\";\nimport { CardConfig } from \"../cards/model/model-config\";\n\nconst initialState: CreationData = {\n\tmenuRef: createRef(),\n\tfullCardRef: createRef(),\n\tqaRefs: [createRef(), createRef()],\n\tposition: null,\n};\n\nconst creationData = (state = initialState, { type, payload }: { type: string; payload: any }): CreationData => {\n\tswitch (type) {\n\t\tcase t.CLOSE_CONTEXT_MENU:\n\t\t\treturn { ...state, position: null };\n\t\tcase t.OPEN_CONTEXT_MENU:\n\t\t\treturn { ...state, position: payload };\n\t\tcase cards.actionTypes.CARD_PUSH:\n\t\t\t//TODO-NICE: reliance on order of refs (needs to be the same as order of qaRefs) and coupling to the fact that a new card was pushed\n\t\t\t// might need to change if I allow moving the cards\n\t\t\t//TODO-NICE: no support for multiple rivers\n\t\t\t// need to check cards, this could lead to unnecessary amounts of refs because I dont check if enough are ready\n\t\t\tif ((payload as CardConfig).type === \"Q-A\") return { ...state, qaRefs: [...state.qaRefs, createRef()] };\n\t\t\treturn state;\n\t\tdefault:\n\t\t\treturn state;\n\t}\n};\n\nexport default creationData;\n","import React, { RefObject } from \"react\";\nimport NestedMenuItem from \"material-ui-nested-menu-item\";\nimport { MenuItem } from \"@material-ui/core\";\nimport { CardConfig } from \"../../cards/model/model-config\";\nimport { useDispatch } from \"react-redux\";\nimport river from \"../../river\";\nimport { dispatchCreationFromContextMenu } from \"../actions\";\n\n//TODO-NICE: rename this to note\n\nconst SingleOptionItem = ({ cardConfig }: { cardConfig: CardConfig }) => {\n\tconst dispatch = useDispatch();\n\n\treturn (\n\t\t<MenuItem\n\t\t\tonClick={() => {\n\t\t\t\tdispatch(dispatchCreationFromContextMenu(\"note\", cardConfig.cardID));\n\t\t\t}}\n\t\t\tonMouseEnter={() => {\n\t\t\t\tdispatch(river.actions.trySetHoveredCard(cardConfig.cardID, \"note\"));\n\t\t\t}}\n\t\t>\n\t\t\t{cardConfig.type}\n\t\t</MenuItem>\n\t);\n};\n\nconst QAOptionItem = ({ cardConfig, qaRef }: { cardConfig: CardConfig; qaRef: RefObject<any> | undefined }) => {\n\tconst dispatch = useDispatch();\n\n\treturn (\n\t\t<NestedMenuItem\n\t\t\tlabel=\"Q-A\"\n\t\t\tparentMenuOpen={true}\n\t\t\tonMouseEnter={() => {\n\t\t\t\t// hover over first field as default\n\t\t\t\tdispatch(river.actions.trySetHoveredCard(cardConfig.cardID, \"q\"));\n\t\t\t}}\n\t\t>\n\t\t\t<MenuItem\n\t\t\t\tref={qaRef}\n\t\t\t\tonClick={() => {\n\t\t\t\t\tdispatch(dispatchCreationFromContextMenu(\"q\", cardConfig.cardID));\n\t\t\t\t}}\n\t\t\t\tonMouseEnter={() => {\n\t\t\t\t\tdispatch(river.actions.trySetHoveredCard(cardConfig.cardID, \"q\"));\n\t\t\t\t}}\n\t\t\t>\n\t\t\t\tQ-field\n\t\t\t</MenuItem>\n\t\t\t<MenuItem\n\t\t\t\tonClick={() => {\n\t\t\t\t\tdispatch(dispatchCreationFromContextMenu(\"a\", cardConfig.cardID));\n\t\t\t\t}}\n\t\t\t\tonMouseEnter={() => {\n\t\t\t\t\tdispatch(river.actions.trySetHoveredCard(cardConfig.cardID, \"a\"));\n\t\t\t\t}}\n\t\t\t>\n\t\t\t\tA-field\n\t\t\t</MenuItem>\n\t\t</NestedMenuItem>\n\t);\n};\n\nexport const CardConfigItem = ({ cardConfig, qaRef }: { cardConfig: CardConfig; qaRef?: RefObject<any> }) => {\n\tswitch (cardConfig.type) {\n\t\tcase \"Q-A\":\n\t\t\treturn <QAOptionItem cardConfig={cardConfig} qaRef={qaRef}></QAOptionItem>;\n\t\tdefault:\n\t\t\treturn <SingleOptionItem cardConfig={cardConfig}></SingleOptionItem>;\n\t}\n};\n","import { Fragment } from \"react\";\nimport { MenuItem } from \"@material-ui/core\";\nimport React from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { dispatchCreationFromContextMenu } from \"../actions\";\n\nconst NewQACardQ = ({ onClick }: any) => <MenuItem onClick={onClick}>New: Q (Q-A)</MenuItem>;\nconst NewQACardA = ({ onClick }: any) => <MenuItem onClick={onClick}>New: A (Q-A)</MenuItem>;\nconst NewNoteCard = ({ onClick }: any) => <MenuItem onClick={onClick}>New: Note</MenuItem>;\n\nexport const NewButtons = () => {\n\tconst dispatch = useDispatch();\n\n\treturn (\n\t\t<Fragment>\n\t\t\t<NewNoteCard\n\t\t\t\tonClick={() => {\n\t\t\t\t\tdispatch(dispatchCreationFromContextMenu(\"note\"));\n\t\t\t\t}}\n\t\t\t></NewNoteCard>\n\t\t\t<NewQACardQ\n\t\t\t\tonClick={() => {\n\t\t\t\t\tdispatch(dispatchCreationFromContextMenu(\"q\"));\n\t\t\t\t}}\n\t\t\t></NewQACardQ>\n\t\t\t<NewQACardA\n\t\t\t\tonClick={() => {\n\t\t\t\t\tdispatch(dispatchCreationFromContextMenu(\"a\"));\n\t\t\t\t}}\n\t\t\t></NewQACardA>\n\t\t</Fragment>\n\t);\n};\n","import { useRef, useEffect, MutableRefObject } from \"react\";\n\n// only global eventListener for now\nexport const useEventListener = (eventName: string, handler: any) => {\n\tconst savedHandler: MutableRefObject<Function> = useRef(() => {});\n\n\tuseEffect(() => {\n\t\tsavedHandler.current = handler;\n\t}, [handler]);\n\n\tuseEffect(() => {\n\t\tconst eventListener = (event: Event) => savedHandler.current(event);\n\t\tdocument.addEventListener(eventName, eventListener);\n\t\treturn () => {\n\t\t\tdocument.removeEventListener(eventName, eventListener);\n\t\t};\n\t}, [eventName]);\n};\n","import React, { RefObject } from \"react\";\nimport Menu from \"@material-ui/core/Menu\";\nimport { Divider, MenuItem } from \"@material-ui/core\";\nimport { useDispatch, connect, useSelector } from \"react-redux\";\nimport { getContextMenuInitData, getContextMenuFullCardsRef } from \"../selectors\";\nimport { rightClickControl, mouseDownControl } from \"../actions\";\nimport { incrementer, partition } from \"../../../shared/utils\";\nimport { CardConfig } from \"../../cards/model/model-config\";\nimport { CardConfigItem } from \"./CardConfigItem\";\nimport { NewButtons } from \"./NewButtons\";\nimport NestedMenuItem from \"material-ui-nested-menu-item\";\nimport { useEventListener } from \"../../../shared/useEventListener\";\nimport cards from \"../../cards\";\nimport { Position } from \"../model\";\nimport { getActiveRiverMakeUpID } from \"../../river/selectors\";\n\nfunction ContextMenu({\n\tposition,\n\tmenuRef,\n\tqaRefs,\n\triverCards,\n}: {\n\tposition: { x: number; y: number } | null;\n\tmenuRef: RefObject<any>;\n\tqaRefs: RefObject<any>[];\n\triverCards: CardConfig[];\n}) {\n\tconst dispatch = useDispatch();\n\n\tconsole.log(useSelector(getActiveRiverMakeUpID));\n\n\tuseEventListener(\"mousedown\", (event: MouseEvent) => {\n\t\tdispatch(mouseDownControl(event));\n\t});\n\n\tuseEventListener(\"contextmenu\", (event: MouseEvent) => {\n\t\tdispatch(rightClickControl(event));\n\t});\n\n\tconst fullCardsRef = useSelector(getContextMenuFullCardsRef);\n\n\tconst openState = !!position;\n\n\tconst increment = incrementer();\n\tconst qaRefIndex = incrementer();\n\n\tconst anchorPosition = openState ? { top: (position as Position).y, left: (position as Position).x } : undefined;\n\n\tconst [nonFullRiverCards, fullRiverCards] = partition(riverCards, cards.model.model_config.cardIsNotFull);\n\n\t// TODO-NICE: use hidden MenuItem-pattern also for qa-ref\n\n\t// TODO-NICE: need to check for state before rendering MenuItems,\n\t// otherwise it shows up for a split-second when switching the menu off after adding to the river\n\t// weird Race Condition even if I dispatch closeContextMenu first?\n\treturn (\n\t\t<Menu\n\t\t\tref={openState ? menuRef : null}\n\t\t\tkeepMounted\n\t\t\topen={openState}\n\t\t\tanchorReference=\"anchorPosition\"\n\t\t\tanchorPosition={anchorPosition}\n\t\t>\n\t\t\t{openState &&\n\t\t\t\tnonFullRiverCards.map((cardConfig) => (\n\t\t\t\t\t<CardConfigItem\n\t\t\t\t\t\tcardConfig={cardConfig}\n\t\t\t\t\t\tkey={increment()}\n\t\t\t\t\t\tqaRef={cardConfig.type === \"Q-A\" ? qaRefs[qaRefIndex()] : undefined}\n\t\t\t\t\t></CardConfigItem>\n\t\t\t\t))}\n\t\t\t{openState && nonFullRiverCards.length > 0 && <Divider />}\n\n\t\t\t{openState && <NewButtons></NewButtons>}\n\n\t\t\t{openState && fullRiverCards.length > 0 && <Divider />}\n\t\t\t{openState && fullRiverCards.length > 0 && (\n\t\t\t\t<NestedMenuItem label=\"Full cards: \" parentMenuOpen={true}>\n\t\t\t\t\t<MenuItem ref={fullCardsRef} style={{ position: \"absolute\" }}></MenuItem>\n\t\t\t\t\t{fullRiverCards.map((cardConfig) => (\n\t\t\t\t\t\t<CardConfigItem\n\t\t\t\t\t\t\tcardConfig={cardConfig}\n\t\t\t\t\t\t\tkey={increment()}\n\t\t\t\t\t\t\tqaRef={cardConfig.type === \"Q-A\" ? qaRefs[qaRefIndex()] : undefined}\n\t\t\t\t\t\t></CardConfigItem>\n\t\t\t\t\t))}\n\t\t\t\t</NestedMenuItem>\n\t\t\t)}\n\t\t</Menu>\n\t);\n}\n\n//TODO-NICE: make selection-dropable on buttons, so that they can be send to cards, make this the default instead of context-menu?\n// imagine: toolbar with new Note, new A, new Q | all the cards and you can drop off\n\n//TODO-NICE: delete extracted str in source\n\nexport const ContextMenuContainer = connect(getContextMenuInitData)(ContextMenu);\n","import * as actions from \"./actions\";\nimport * as constants from \"./constants\";\nimport * as actionTypes from \"./actionTypes\";\nimport reducer from \"./reducer\";\nimport * as selectors from \"./selectors\";\nimport * as components from \"./components\";\nimport * as services from \"./services\";\n\nexport default { actions, actionTypes, constants, components, reducer, selectors, services };\n","import React from \"react\";\nimport Grid from \"@material-ui/core/Grid\";\nimport control from \"../modules/control\";\nimport creation from \"../modules/extraction\";\nimport { Toolbar } from \"@material-ui/core\";\nimport selection from \"../modules/selection\";\nimport display from \"../modules/display\";\n\nexport function ReaderScene() {\n\t//TODO-RC: these need to be set in the PDFDocument?\n\t//TODO-RC: think about hide mechanism\n\t// const showMaterial = useSelector(display.selectors.displayStatusIsShow);\n\t// const showRiver = useSelector(river.selectors.riverShowStateIsShow);\n\n\treturn (\n\t\t<div>\n\t\t\t<Grid container justify=\"center\" direction=\"column\" alignItems=\"stretch\" spacing={1}>\n\t\t\t\t<Grid item>\n\t\t\t\t\t<control.components.ControlBar></control.components.ControlBar>\n\t\t\t\t</Grid>\n\t\t\t\t{/* TODO-RC: need this to keep the document from overlapping the AppBar, but why? */}\n\t\t\t\t<Toolbar id=\"back-to-top-anchor\" />\n\t\t\t\t<Grid item>\n\t\t\t\t\t<display.components.PDFDocument></display.components.PDFDocument>\n\t\t\t\t</Grid>\n\t\t\t</Grid>\n\t\t\t{/* //TODO-RC: switch between single and multiple pages? And then scroll to top makes sense?\t*/}\n\t\t\t<creation.components.ContextMenuContainer></creation.components.ContextMenuContainer>\n\t\t\t<selection.components.SelectionSnackbar></selection.components.SelectionSnackbar>\n\t\t</div>\n\t);\n}\n","import storage from \"redux-persist/lib/storage\"; // defaults to localStorage for web\nimport { createTransform } from \"redux-persist\";\nimport { CreationData, Position } from \"./modules/extraction/model\";\nimport { createRef } from \"react\";\nimport extraction from \"./modules/extraction\";\nimport { DisplayData, DisplayStatus } from \"./modules/display/model\";\nimport display from \"./modules/display\";\n\n// to get the correct object with reselect, I added .present to all getAll that belong do undoable modules\n\nconst removeDOMObjectsFromCreationData = (inboundState: CreationData) => {\n\treturn {\n\t\t...inboundState,\n\t\tmenuRef: null,\n\t\tfullCardRef: null,\n\t\tqaRefs: inboundState.qaRefs.map((_) => null),\n\t};\n};\n\nconst addDOMObjectsToCreationData = (outboundState: {\n\tmenuRef: null;\n\tfullCardRef: null;\n\tqaRefs: null[];\n\tposition: Position | null;\n}): CreationData => {\n\treturn {\n\t\t...outboundState,\n\t\tmenuRef: createRef(),\n\t\tfullCardRef: createRef(),\n\t\tqaRefs: outboundState.qaRefs.map((_) => createRef()),\n\t};\n};\n\nconst extractionTransform = createTransform(\n\t(inboundState: { future: CreationData[]; past: CreationData[]; present: CreationData }) => {\n\t\treturn {\n\t\t\t...inboundState,\n\t\t\tfuture: inboundState.future.map(removeDOMObjectsFromCreationData),\n\t\t\tpast: inboundState.past.map(removeDOMObjectsFromCreationData),\n\t\t\tpresent: removeDOMObjectsFromCreationData(inboundState.present),\n\t\t};\n\t},\n\t(outboundState): { future: CreationData[]; past: CreationData[]; present: CreationData } => {\n\t\treturn {\n\t\t\t...outboundState,\n\t\t\tfuture: outboundState.future.map(addDOMObjectsToCreationData),\n\t\t\tpast: outboundState.past.map(addDOMObjectsToCreationData),\n\t\t\tpresent: addDOMObjectsToCreationData(outboundState.present),\n\t\t};\n\t},\n\t{ whitelist: [extraction.constants.NAME] }\n);\n\n//TODO-NICE: find way to save PDF in browser, maybe manually use indexeddb and use that in transform?\n// idea: make store-field pdfAsBase64 and use thunk for async-filling the field, then when reloading, use thunk to format\n// const reader = new FileReaderSync();\n\n// function readFileAsync(file: File) {\n// \treturn new Promise((resolve) => {\n// \t\treader.onload = () => {\n// \t\t\tresolve(reader.result);\n// \t\t};\n// \t\treader.onerror = () => resolve(null);\n\n// \t\treader.readAsDataURL(file);\n// \t});\n// }\n\nconst removeDOMObjectsFromDisplayData = (inboundState: DisplayData) => {\n\tlet pdf = null;\n\t// if (inboundState.pdf) {\n\t// \tpdf = await readFileAsync(inboundState.pdf);\n\t// }\n\tconst result = { ...inboundState, documentRef: null, materialData: null, pdf };\n\treturn result;\n};\n\n//TODO-NICE: create persistable type for the state in model\n\nconst addDOMObjectsToDisplayData = (outboundState: {\n\tpdf: null;\n\tpdfName?: string;\n\tdisplayStatus: DisplayStatus;\n\tcurrentPage: number;\n\ttotalPages: number;\n\t//TODO-NICE:might need amount of spans per page for validation? if yes, use this\n\tdocumentRef: null;\n\tzoomTargetSpanIndex: number | null;\n}): DisplayData => {\n\treturn {\n\t\t...outboundState,\n\t\tpdf: undefined,\n\t\tdocumentRef: createRef(),\n\t};\n};\n\nconst displayTransform = createTransform(\n\t(inboundState: DisplayData) => {\n\t\treturn removeDOMObjectsFromDisplayData(inboundState);\n\t},\n\t(outboundState): DisplayData => {\n\t\treturn addDOMObjectsToDisplayData(outboundState);\n\t},\n\t{ whitelist: [display.constants.NAME] }\n);\n\nexport const persistConfig = {\n\tkey: \"root\",\n\tstorage,\n\ttransforms: [extractionTransform, displayTransform],\n};\n","import { createStore } from \"redux\";\nimport { applyMiddleware } from \"redux\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport thunk from \"redux-thunk\";\nimport { combineReducers } from \"redux\";\nimport creation from \"./modules/extraction\";\nimport river from \"./modules/river\";\nimport display from \"./modules/display\";\nimport cards from \"./modules/cards\";\nimport { persistStore, persistReducer } from \"redux-persist\";\nimport undoable, { includeAction } from \"redux-undo\";\nimport { persistConfig } from \"./persist\";\nimport db from \"./modules/db\";\nimport selection from \"./modules/selection\";\n\n//TODO-NICE: make limit for undo (right now its fine, if we reset on document-upload)\n//TODO-NICE: make snackbar for which action is undone/redone\n//TODO-NICE: this undo-buisness is not very transparent, I just list each action that is state-relevant and not view, make action list in constants.ts?\n\n//TODO-NICE: can undo selected-string but then the source-card might still be set\n// I think this is not a problem, because then when something else is selected the old-source-Card is overwritten\n// but not as clean as it could be\n\nconst rootReducer = combineReducers({\n\t[selection.constants.NAME]: undoable(selection.reducer, {\n\t\tfilter: includeAction([selection.actionTypes.SELECTION_GOAL, selection.actionTypes.SELECTION_SOURCE]),\n\t}),\n\t[creation.constants.NAME]: undoable(creation.reducer, {\n\t\tfilter: includeAction([cards.actionTypes.CARD_PUSH]),\n\t}),\n\t[river.constants.NAME]: undoable(river.reducer, {\n\t\tfilter: includeAction([\n\t\t\tcards.actionTypes.CARD_PUSH,\n\t\t\tcards.actionTypes.CARD_REMOVE,\n\t\t\tdb.actionTypes.LOAD_DOCUMENT_DATA_SETS,\n\t\t]),\n\t}),\n\t[display.constants.NAME]: display.reducer,\n\t[cards.constants.NAME]: undoable(cards.reducer, {\n\t\tfilter: includeAction([\n\t\t\tdb.actionTypes.LOAD_DOCUMENT_DATA_SETS,\n\t\t\tcards.actionTypes.CARD_PUSH,\n\t\t\tcards.actionTypes.CARD_REPLACE,\n\t\t\tcards.actionTypes.CARD_REMOVE,\n\t\t]),\n\t}),\n\t[db.constants.NAME]: undoable(db.reducer, {\n\t\tfilter: includeAction([db.actionTypes.LOAD_DOCUMENT_DATA_SETS]),\n\t}),\n});\n\nconst stateSanitizer = (state: any) => {\n\treturn state.displayData.pdf ? { ...state, displayData: { ...state.displayData, pdf: \"PDF_FILE_IS_HERE\" } } : state;\n};\n\nconst persistedReducer = persistReducer(persistConfig, rootReducer);\n\nconst composeEnhancers = composeWithDevTools({ stateSanitizer });\nconst enhancer = composeEnhancers(applyMiddleware(thunk));\n\nexport const store = createStore(persistedReducer, enhancer);\n\nexport const persistor = persistStore(store);\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { ReaderScene } from \"./scene/ReaderScene\";\nimport { Provider } from \"react-redux\";\nimport { store, persistor } from \"./store\";\nimport { PersistGate } from \"redux-persist/es/integration/react\";\n// Load Roboto typeface\nrequire(\"typeface-roboto\");\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<Provider store={store}>\n\t\t\t<PersistGate loading={null} persistor={persistor}>\n\t\t\t\t<ReaderScene></ReaderScene>\n\t\t\t</PersistGate>\n\t\t</Provider>\n\t</React.StrictMode>,\n\tdocument.getElementById(\"root\")\n);\n"],"sourceRoot":""}