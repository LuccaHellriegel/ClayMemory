{"version":3,"sources":["modules/display/constants.ts","modules/display/actionTypes.ts","modules/display/selectors.ts","shared/utils.ts","modules/display/services/span.ts","modules/display/services/materialData.ts","modules/display/actions.ts","modules/display/components/PDFDocument/PDFDocument.tsx","modules/display/components/PDFUpload.tsx","modules/display/components/NavigationButtons.tsx","modules/display/components/ShowMaterialButton.tsx","modules/display/components/PageChooser/PageChooser.tsx","modules/display/reducer.ts","modules/display/index.ts","modules/control/hooks/useEventListener.tsx","modules/focus/constants.ts","modules/focus/actionTypes.ts","modules/focus/selectors.ts","modules/focus/actions.ts","modules/focus/reducer.ts","modules/focus/index.ts","modules/creation/constants.ts","modules/creation/actionTypes.ts","modules/cards/services/config.ts","modules/cards/constants.ts","modules/cards/actionTypes.ts","modules/cards/selectors.ts","modules/cards/actions.ts","modules/cards/reducer.ts","modules/cards/index.ts","modules/river/constants.ts","modules/river/selectors.ts","modules/river/components/HybridCardField.tsx","modules/river/components/DeleteCardButton.tsx","modules/river/components/JumpToOriginButton.tsx","modules/river/components/GrabForFieldButton.tsx","modules/river/components/ExtractFromFieldButton.tsx","modules/river/components/Card.tsx","modules/river/components/toCardGridItemsWithDividers.tsx","modules/river/actionTypes.ts","modules/river/actions.ts","modules/river/components/AddNoteButton.tsx","modules/river/components/AddQAButton.tsx","modules/river/components/CardRiverAccordion.tsx","modules/river/components/ChildCardRiver.tsx","modules/river/components/ActiveCardRiver.tsx","modules/river/components/ShowRiverButton.tsx","modules/river/components/SummaryRiver.tsx","modules/river/model.ts","modules/river/reducer.ts","modules/river/index.ts","modules/creation/selectors.ts","modules/creation/actions.ts","modules/creation/services/transformInputOrigin.ts","modules/creation/reducer.ts","modules/creation/components/CardConfigItem.tsx","modules/creation/components/ContextMenu.tsx","modules/creation/components/SourceMenu.tsx","modules/creation/utils.ts","modules/creation/index.ts","modules/control/services/keyboardControl.ts","modules/control/components/Control.tsx","modules/control/services/mouseControl.ts","modules/control/components/ControlBar.tsx","modules/control/index.ts","scenes/ReaderScene.tsx","store.ts","index.tsx","../node_modules/pdfjs-dist/build sync"],"names":["NAME","PDF_UPLOADED","MATERIAL_LOADED","DISPLAY_STATUS","PAGE_UPDATE","ZOOM_QUEUE","MATERIAL_DATA","getAll","state","getPDF","createSelector","pdf","getRenderCritialData","currentPage","documentRef","getTotalPages","totalPages","getCurrentPage","getPageControlData","getDocumentRef","getMaterialData","materialData","getTimeStamp","materialDataTimeStamp","getMaterialSpans","materialSpans","getSpanIndex","span","indexOf","getMaterialBoundingRects","materialBoundingRects","getDataExists","timestamp","getDisplayStatus","displayStatus","displayStatusIsShow","status","getZoomQueue","zoomQueue","incrementer","counter","curCounter","expandSpan","rect","getBoundingClientRect","container","startingSpans","Array","from","querySelectorAll","length","expandedSpans","spans","boundingRects","exSpan","push","splitExpandedSpans","map","expandSpans","sort","exSpan2","y","materialUploaded","event","dispatch","files","target","type","t","payload","materialLoaded","tryInterval","tries","ms","func","increment","timeout","setInterval","clearInterval","captureMaterialData","getState","current","startTime","Date","now","curMaterialGroupData","emptyZoomQueue","setPage","page","pageCorrections","newPage","movePage","nextPage","previousPage","toggleDisplayState","displayState","setZoomQueue","spanIndex","zoomToCardOrigin","originSpan","focus","scrollIntoView","behavior","block","inline","pdfjs","GlobalWorkerOptions","workerSrc","version","options","cMapUrl","cMapPacked","PDFDocumentContainer","connect","parentSize","useDispatch","file","onLoadSuccess","numPages","inputRef","onItemClick","pageNumber","parseInt","width","onRenderSuccess","document","forEach","layer","style","top","left","transform","PDFUploadContainer","onUpload","onChange","accept","PreviousButton","IconButton","onClick","NextButton","ShowMaterialButton","useState","outlined","setOutlined","nonDigitRegEx","PageChooser","useSelector","error","value","toString","userInput","setState","Typography","variant","TextField","onKeyDown","key","preventDefault","submittedValue","possiblePage","trim","match","asInt","validatePageChoice","initialState","createRef","pageSpans","Infinity","actions","actionTypes","components","constants","reducer","selectors","useEventListener","eventName","handler","savedHandler","useRef","useEffect","eventListener","addEventListener","removeEventListener","FOCUS_UPDATE","DISPLAY_FOCUS_UPDATE","getFocus","userFocus","getDisplayFocus","displayFocus","updateFocus","tryUpdateFocus","toggleContextMenuFocus","display","updateDisplayFocus","TOGGLE_CONTEXT_MENU","CLOSE_CONTEXT_MENU","OPEN_CONTEXT_MENU","SELECTED_STRING","SELECTED_PARENT","SELECTION_POSITION","updateContentStrFunctions","REPLACE","_","newStr","APPEND","oldStr","creationFunctions","NOTE","oldConfig","partialUpdateFunction","content","Q","q","A","a","contentStringToConfig","contentStr","creationType","updateType","currentCard","createPartialUpdateContentStrFunction","CARD_UPDATE","CARD_PUSH","CARD_REMOVE","CARD_GOAL","CARD_SOURCE","cards","getLastCardIDNumber","lastCardIDNumber","getCards","getGoalCard","goalCard","getSourceCard","sourceCard","cardPush","cardPayload","card","cardID","cardUpdate","updateCardContent","contentString","origin","config","pushCardContent","removeCard","setGoalCard","cardConfig","resetGoalCard","setSourceCard","x","sourceField","resetSourceCard","tryResetSourceCard","intialState","services","cardObj","getRiverMakeUps","riverMakeUps","getActiveRiverMakeUpID","activeRiverMakeUpID","getPushToRiver","pushToRiverID","getPushToRiverMakeUp","makeUps","id","getActiveRiverMakeUp","getPushToRiverCardIDs","makeUp","cardIDs","getPushToRiverCards","makeUpCardIDs","getActiveRiverCardIDs","getActiveRiverCards","getRiverShowState","riverShowState","riverShowStateIsShow","HybridCardField","storeValue","saveChanges","rest","mutableValue","onMouseEnter","multiline","onBlur","DeleteCardButton","JumpToOriginButton","cardOrigin","GrabForFieldButton","isGoalCard","ExtractFromFieldButton","clientX","clientY","NoteCard","label","backgroundColor","InputLabelProps","color","QACard","Grid","direction","spacing","item","isNullOrUndefined","Card","riverID","GridDivider","Divider","RIVER_SHOW_STATE","RIVER_PUSH_STATE","toggleRiverShowState","setPushToRiver","trySetPushToRiver","AddNoteButton","AddQAButton","CardRiverAccordion","gridItems","summary","elevation","setElevation","Accordion","defaultExpanded","onMouseLeave","AccordionSummary","align","MozUserSelect","WebkitUserSelect","msUserSelect","AccordionDetails","justify","alignItems","ChildCardRiver","riverCards","useMemo","reduce","prev","index","arr","toCardGridItemsWithDividers","ActiveCardRiver","ShowRiverButton","SummaryRiver","cardConfigs","Object","values","pageNumberToRiverMakeUpID","active","lastRiverIDNumber","emptyCardRiver","updateStateWithMakeUps","updatedState","deactivateActiveCardRiver","removeCardFromRivers","fromEntries","entries","entry","filter","riverMakeUp","activeRiver","oldRiver","getContextMenuState","open","getContextMenuRef","menuRef","getContextMenuQARefs","qaRefs","getCurrentSelectionPosition","selectionPosition","getContextMenuInitData","river","position","getCurrentSelectedString","manuallySelectedString","getCurrentSelectedParent","selectedParentSpan","getCurrentOrigin","selectedParent","toggleContextMenu","closeContextMenu","openContextMenu","grabSelectionForContextMenu","isUpdate","undefined","selectedString","hasNonEmptyOrigin","grabSelectionForSourceMenu","newOrigin","sourceOrigin","goalOrigin","transformInputOrigin","updateManuallySelectedString","str","resetManuallySelectedString","updateSelectionPosition","creationData","SingleOptionItem","dispatchRiver","MenuItem","QAOptionItem","qaRef","parentMenuOpen","ref","CardConfigItem","NewQACard","NewNoteCard","ContextMenuContainer","openState","qaRefIndex","anchorPosition","Menu","keepMounted","anchorReference","SourceMenuContainer","contextMenuContainsTargetNode","refObject","cur","parentNode","querySelector","contains","utils","keyEventDispatcher","keyMap","action","pageControlKeyMap","ArrowLeft","ArrowRight","contextMenuControlKeyMap","creation","doNothing","focusDispatcherMap","SELECTION","CONTEXT_MENU","EDITOR","CONTROL","EDITOR_CONTROL","ControlContainer","keyDownControl","dispatcher","mouseDownControl","mouseUpControl","selection","getSelection","selectedStr","anchorNode","ControlBar","AppBar","Toolbar","orientation","flexItem","ReaderSceneRiverColumn","hidden","ReaderSceneMaterialColumnWithSize","withSize","monitorHeight","noPlaceholder","size","Paper","ReaderScene","showMaterial","showRiver","control","Tabs","newValue","Tab","rootReducer","combineReducers","creationTransform","createTransform","inboundState","outboundState","whitelist","displayTransform","persistConfig","storage","transforms","persistedReducer","persistReducer","enhancer","composeWithDevTools","stateSanitizer","displayData","composeEnhancers","applyMiddleware","thunk","store","createStore","persistor","persistStore","ReactDOM","render","StrictMode","loading","getElementById","webpackEmptyContext","req","e","Error","code","keys","resolve","module","exports"],"mappings":"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","file":"static/js/main.49bc5a03.chunk.js","sourcesContent":["export const NAME = \"displayData\";\n","import { NAME } from \"./constants\";\n\nexport const PDF_UPLOADED = NAME + \"/PDF_UPLOADED\";\nexport const MATERIAL_LOADED = NAME + \"/MATERIAL_LOADED\";\nexport const DISPLAY_STATUS = NAME + \"/DISPLAY_STATUS\";\nexport const PAGE_UPDATE = NAME + \"/PAGE_UPDATE\";\nexport const ZOOM_QUEUE = NAME + \"/ZOOM_QUEUE\";\nexport const MATERIAL_DATA = NAME + \"/MATERIAL_DATA\";\n","import { createSelector } from \"reselect\";\nimport { DisplayData, MaterialData, MaterialGroupData } from \"./model\";\nimport { NAME } from \"./constants\";\n\nexport const getAll = (state: any) => state[NAME];\n\nexport const getPDF = createSelector(getAll, (state: DisplayData) => {\n\treturn { pdf: state.pdf };\n});\n\nexport const getRenderCritialData = createSelector(getAll, (state: DisplayData) => {\n\treturn {\n\t\tpdf: state.pdf,\n\t\tcurrentPage: state.currentPage,\n\t\tdocumentRef: state.documentRef,\n\t};\n});\n\nexport const getTotalPages = createSelector(getAll, (state: DisplayData) => state.totalPages);\n\nexport const getCurrentPage = createSelector(getAll, (state: DisplayData) => state.currentPage);\n\nexport const getPageControlData = createSelector(\n\tgetTotalPages,\n\tgetCurrentPage,\n\t(totalPages: number | undefined, currentPage: number) => {\n\t\treturn { currentPage, totalPages };\n\t}\n);\n\nexport const getDocumentRef = createSelector(getAll, (state: DisplayData) => state.documentRef);\n\nexport const getMaterialData = createSelector(getAll, (state: DisplayData) => state.materialData);\n\nexport const getTimeStamp = createSelector(getMaterialData, (state: MaterialData) => state.materialDataTimeStamp);\n\nexport const getMaterialSpans = createSelector(\n\tgetMaterialData as (state: any) => MaterialGroupData,\n\t(state: MaterialGroupData) => state.materialSpans\n);\n\nexport const getSpanIndex = (state: any, span: HTMLSpanElement) => {\n\tconst spans = getMaterialSpans(state);\n\treturn spans.indexOf(span);\n};\n\nexport const getMaterialBoundingRects = createSelector(\n\tgetMaterialData as (state: any) => MaterialGroupData,\n\t(state: MaterialGroupData) => state.materialBoundingRects\n);\n\nexport const getDataExists = createSelector(getTimeStamp, (timestamp) => timestamp > 0);\n\nexport const getDisplayStatus = createSelector(getAll, (state: DisplayData) => state.displayStatus);\n\nexport const displayStatusIsShow = createSelector(getDisplayStatus, (status) => status === \"SHOW\");\n\nexport const getZoomQueue = createSelector(getAll, (state: DisplayData) => state.zoomQueue);\n","export const incrementer = () => {\n\tlet counter = 0;\n\treturn () => {\n\t\tconst curCounter = counter;\n\t\tcounter++;\n\t\treturn curCounter;\n\t};\n};\n","export const splitExpandedSpans = (expandedSpans: ExpandedSpan[]) => {\n\tconst spans = [];\n\tconst boundingRects = [];\n\n\tfor (const exSpan of expandedSpans) {\n\t\tspans.push(exSpan.span);\n\t\tboundingRects.push(exSpan.rect);\n\t}\n\n\treturn { spans, boundingRects };\n};\n\nexport const sortExpandedSpansAccordingToX = (expandedSpans: ExpandedSpan[]) =>\n\texpandedSpans.sort((exSpan, exSpan2) => exSpan.rect.x - exSpan2.rect.x);\n\nexport const sortExpandedSpansAccordingToY = (expandedSpans: ExpandedSpan[]) =>\n\texpandedSpans.sort((exSpan, exSpan2) => exSpan.rect.y - exSpan2.rect.y);\n\ntype ExpandedSpan = { span: HTMLSpanElement; rect: DOMRect };\n\nexport const expandSpans = (spans: HTMLSpanElement[]) => spans.map(expandSpan);\n\nconst expandSpan = (span: HTMLSpanElement): ExpandedSpan => {\n\treturn { span, rect: span.getBoundingClientRect() };\n};\n","import { MaterialGroupData } from \"../model\";\nimport { expandSpans, sortExpandedSpansAccordingToY, splitExpandedSpans } from \"./span\";\n\nexport const materialData = (container: HTMLDivElement): MaterialGroupData | null => {\n\t// assumes all spans inside the document are relevant (potentially multiple pages)\n\tconst startingSpans = Array.from(container.querySelectorAll(\"span\"));\n\tif (startingSpans.length === 0) return null;\n\n\tconst { spans, boundingRects } = splitExpandedSpans(sortExpandedSpansAccordingToY(expandSpans(startingSpans)));\n\n\treturn {\n\t\tmaterialSpans: spans,\n\t\tmaterialBoundingRects: boundingRects,\n\t};\n};\n","import { ChangeEvent, RefObject } from \"react\";\nimport { Dispatch } from \"redux\";\nimport * as t from \"./actionTypes\";\nimport { PageMove, MaterialData } from \"./model\";\nimport { getPageControlData, getDisplayStatus, getZoomQueue, getTimeStamp, getMaterialSpans } from \"./selectors\";\nimport { incrementer } from \"../../shared/utils\";\nimport { materialData } from \"./services/materialData\";\n\nexport const materialUploaded = (event: ChangeEvent<HTMLInputElement>) => {\n\treturn (dispatch: Dispatch) => {\n\t\tconst files = event.target.files;\n\t\tconst pdf = files ? files[0] : null;\n\t\tif (pdf) dispatch({ type: t.PDF_UPLOADED, payload: pdf });\n\t};\n};\n\nexport const materialLoaded = (totalPages: number) => {\n\treturn { type: t.MATERIAL_LOADED, payload: totalPages };\n};\n\nexport const tryInterval = (tries: number, ms: number, func: () => boolean) => {\n\tconst increment = incrementer();\n\tconst timeout = setInterval(() => {\n\t\tif (increment() > tries) {\n\t\t\tclearInterval(timeout);\n\t\t\treturn;\n\t\t}\n\n\t\tif (func()) clearInterval(timeout);\n\t}, ms);\n};\n\n// text-layer is not really guaranteed to be rendered on render \"success\",\n// so we use this ugly \"try ten times\" approach\nexport function captureMaterialData(documentRef: RefObject<any>) {\n\treturn (dispatch: any, getState: Function) => {\n\t\tconst state = getState();\n\t\tconst container = documentRef.current;\n\t\tif (container) {\n\t\t\t// TODO-NICE: still possibility of race-condition,\n\n\t\t\tconst startTime = Date.now();\n\n\t\t\t// try once before going into intervals (most times once should work)\n\t\t\tconst curMaterialGroupData = materialData(container as HTMLDivElement);\n\t\t\tif (curMaterialGroupData && getTimeStamp(state) < startTime) {\n\t\t\t\tconst payload: MaterialData = {\n\t\t\t\t\t...curMaterialGroupData,\n\t\t\t\t\tmaterialDataTimeStamp: startTime,\n\t\t\t\t};\n\t\t\t\tdispatch({ type: t.MATERIAL_DATA, payload });\n\t\t\t\tdispatch(emptyZoomQueue());\n\t\t\t} else {\n\t\t\t\ttryInterval(10, 20, () => {\n\t\t\t\t\tconst curMaterialGroupData = materialData(container as HTMLDivElement);\n\t\t\t\t\tif (curMaterialGroupData && getTimeStamp(getState()) < startTime) {\n\t\t\t\t\t\tconst payload: MaterialData = {\n\t\t\t\t\t\t\t...curMaterialGroupData,\n\t\t\t\t\t\t\tmaterialDataTimeStamp: startTime,\n\t\t\t\t\t\t};\n\t\t\t\t\t\tdispatch({ type: t.MATERIAL_DATA, payload });\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t}\n\t\t\t\t\treturn false;\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t};\n}\n\n// assumes outside validation/correction\nexport const setPage = (page: number) => {\n\treturn { type: t.PAGE_UPDATE, payload: page };\n};\n\nconst pageCorrections = {\n\tADD: (newPage: number, totalPages: number) => (newPage === totalPages + 1 ? 1 : newPage),\n\tREMOVE: (newPage: number, totalPages: number) => (newPage === 0 ? totalPages : newPage),\n};\n\n//TODO-PERF: maybe hide all rendered pages but not shown instead of re-rendering for faster switching?\nexport const movePage = (type: PageMove) => {\n\treturn (dispatch: Dispatch, getState: Function) => {\n\t\tconst { currentPage, totalPages } = getPageControlData(getState());\n\t\tif (totalPages) {\n\t\t\tswitch (type) {\n\t\t\t\tcase \"NEXT\":\n\t\t\t\t\tdispatch({ type: t.PAGE_UPDATE, payload: pageCorrections[\"ADD\"](currentPage + 1, totalPages) });\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"PREVIOUS\":\n\t\t\t\t\tdispatch({ type: t.PAGE_UPDATE, payload: pageCorrections[\"REMOVE\"](currentPage - 1, totalPages) });\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t};\n};\nexport const nextPage = () => movePage(\"NEXT\");\nexport const previousPage = () => movePage(\"PREVIOUS\");\n\nexport const toggleDisplayState = () => {\n\treturn (dispatch: Dispatch, getState: Function) => {\n\t\tconst displayState = getDisplayStatus(getState()) === \"SHOW\" ? \"HIDE\" : \"SHOW\";\n\n\t\tdispatch({ type: t.DISPLAY_STATUS, payload: displayState });\n\t};\n};\n\nexport const setZoomQueue = (spanIndex: number | null) => {\n\treturn { type: t.ZOOM_QUEUE, payload: spanIndex };\n};\n\nexport const zoomToCardOrigin = (spanIndex: number, page: number) => {\n\treturn (dispatch: Dispatch) => {\n\t\tdispatch(setPage(page));\n\t\tdispatch(setZoomQueue(spanIndex));\n\t};\n};\n\nexport const emptyZoomQueue = () => {\n\treturn (dispatch: Dispatch, getState: Function) => {\n\t\tconst state = getState();\n\t\tconst spanIndex = getZoomQueue(state);\n\t\tif (spanIndex) {\n\t\t\tconst originSpan = getMaterialSpans(state)[spanIndex];\n\t\t\toriginSpan.focus();\n\t\t\toriginSpan.scrollIntoView({ behavior: \"smooth\", block: \"center\", inline: \"center\" });\n\n\t\t\tdispatch(setZoomQueue(null));\n\t\t}\n\t};\n};\n","import \"./PDFDocument.css\";\nimport \"./AnnotationLayer.css\";\nimport React, { RefObject } from \"react\";\nimport { pdfjs, Document, Page } from \"react-pdf\";\nimport { connect, useDispatch } from \"react-redux\";\nimport { materialLoaded, setPage, captureMaterialData } from \"../../actions\";\nimport { getRenderCritialData } from \"../../selectors\";\npdfjs.GlobalWorkerOptions.workerSrc = `//cdnjs.cloudflare.com/ajax/libs/pdf.js/${pdfjs.version}/pdf.worker.js`;\n\nfunction removeTextLayerOffset() {\n\tconst textLayers = document.querySelectorAll(\".react-pdf__Page__textContent\");\n\ttextLayers.forEach((layer) => {\n\t\tconst { style }: any = layer;\n\t\tstyle.top = \"0\";\n\t\tstyle.left = \"0\";\n\t\tstyle.transform = \"\";\n\t});\n}\n\nconst options = {\n\tcMapUrl: \"cmaps/\",\n\tcMapPacked: true,\n};\n\nfunction PDFDocument({\n\tparentSize,\n\tpdf,\n\tcurrentPage,\n\tmaterialLoaded,\n\tcaptureMaterialData,\n\tdocumentRef,\n}: {\n\tparentSize: any;\n\tpdf: File | undefined;\n\tcurrentPage: number;\n\tmaterialLoaded: (numPages: number) => void;\n\tcaptureMaterialData: Function;\n\tdocumentRef: RefObject<any>;\n}) {\n\tconst dispatch = useDispatch();\n\treturn (\n\t\t<Document\n\t\t\tfile={pdf}\n\t\t\toptions={options}\n\t\t\tonLoadSuccess={({ numPages }) => {\n\t\t\t\tmaterialLoaded(numPages);\n\t\t\t}}\n\t\t\tinputRef={documentRef}\n\t\t\tonItemClick={({ pageNumber }) => {\n\t\t\t\tdispatch(setPage(parseInt(pageNumber)));\n\t\t\t}}\n\t\t>\n\t\t\t{pdf && (\n\t\t\t\t<Page\n\t\t\t\t\twidth={parentSize.width}\n\t\t\t\t\tpageNumber={currentPage}\n\t\t\t\t\tonRenderSuccess={() => {\n\t\t\t\t\t\tremoveTextLayerOffset();\n\t\t\t\t\t\tcaptureMaterialData(documentRef);\n\t\t\t\t\t}}\n\t\t\t\t/>\n\t\t\t)}\n\t\t</Document>\n\t);\n}\n\nexport const PDFDocumentContainer = connect(getRenderCritialData, {\n\tmaterialLoaded,\n\tcaptureMaterialData,\n})(PDFDocument);\n","import { connect } from \"react-redux\";\nimport React, { ChangeEvent } from \"react\";\nimport { materialUploaded } from \"../actions\";\nimport { getPDF } from \"../selectors\";\n\nfunction PDFUpload({\n\tpdf,\n\tonUpload,\n}: {\n\tpdf: File | undefined;\n\tonUpload: (event: ChangeEvent<HTMLInputElement>) => void;\n}) {\n\treturn pdf ? null : <input onChange={onUpload} type=\"file\" accept=\".pdf\" />;\n}\n\nexport const PDFUploadContainer = connect(getPDF, { onUpload: materialUploaded })(PDFUpload);\n","import React from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { IconButton } from \"@material-ui/core\";\nimport ArrowForwardIosIcon from \"@material-ui/icons/ArrowForwardIos\";\nimport ArrowBackIosIcon from \"@material-ui/icons/ArrowBackIos\";\nimport { nextPage, previousPage } from \"../actions\";\n\nexport const PreviousButton = () => {\n\tconst dispatch = useDispatch();\n\treturn (\n\t\t<IconButton\n\t\t\ttype=\"button\"\n\t\t\tonClick={() => {\n\t\t\t\tdispatch(previousPage());\n\t\t\t}}\n\t\t>\n\t\t\t<ArrowBackIosIcon></ArrowBackIosIcon>\n\t\t</IconButton>\n\t);\n};\n\nexport const NextButton = () => {\n\tconst dispatch = useDispatch();\n\treturn (\n\t\t<IconButton\n\t\t\ttype=\"button\"\n\t\t\tonClick={() => {\n\t\t\t\tdispatch(nextPage());\n\t\t\t}}\n\t\t>\n\t\t\t<ArrowForwardIosIcon></ArrowForwardIosIcon>\n\t\t</IconButton>\n\t);\n};\n","import { useState } from \"react\";\nimport DescriptionOutlinedIcon from \"@material-ui/icons/DescriptionOutlined\";\nimport DescriptionTwoToneIcon from \"@material-ui/icons/DescriptionTwoTone\";\nimport React from \"react\";\nimport { IconButton } from \"@material-ui/core\";\nimport { useDispatch } from \"react-redux\";\nimport { toggleDisplayState } from \"../actions\";\n\nexport const ShowMaterialButton = () => {\n\tconst [outlined, setOutlined] = useState(true);\n\tconst dispatch = useDispatch();\n\n\treturn (\n\t\t<IconButton\n\t\t\ttype=\"button\"\n\t\t\tonClick={() => {\n\t\t\t\tdispatch(toggleDisplayState());\n\t\t\t\tsetOutlined(!outlined);\n\t\t\t}}\n\t\t>\n\t\t\t{outlined ? (\n\t\t\t\t<DescriptionOutlinedIcon></DescriptionOutlinedIcon>\n\t\t\t) : (\n\t\t\t\t<DescriptionTwoToneIcon></DescriptionTwoToneIcon>\n\t\t\t)}\n\t\t</IconButton>\n\t);\n};\n","import React, { useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Typography, TextField } from \"@material-ui/core\";\nimport { setPage } from \"../../actions\";\nimport { getPageControlData } from \"../../selectors\";\n\nconst nonDigitRegEx = /(\\D)/;\n\nexport const validatePageChoice = (possiblePage: string, totalPages: number) => {\n\tif (possiblePage === \"\" || possiblePage.trim().match(nonDigitRegEx) !== null) return false;\n\n\tconst asInt = parseInt(possiblePage);\n\tif (asInt < 1 || totalPages < asInt) return false;\n\n\treturn true;\n};\n\nexport const PageChooser = () => {\n\tconst dispatch = useDispatch();\n\t// parent only renders this component if these values exist\n\tconst { currentPage, totalPages }: { currentPage?: number; totalPages?: number } = useSelector(getPageControlData);\n\n\tconst [state, setState] = useState({\n\t\terror: false,\n\t\tvalue: currentPage?.toString(),\n\t\tuserInput: currentPage?.toString(),\n\t});\n\n\t// with this we can trigger a re-render onChange,\n\t// while making sure that if a new currentPage arrives, we reset the component\n\tif (state.value !== currentPage.toString()) {\n\t\tsetState({ error: false, value: currentPage.toString(), userInput: currentPage.toString() });\n\t}\n\n\treturn (\n\t\t<Typography variant=\"h6\">\n\t\t\t<TextField\n\t\t\t\ttype=\"text\"\n\t\t\t\tvariant=\"filled\"\n\t\t\t\tvalue={state.userInput}\n\t\t\t\tonKeyDown={(event) => {\n\t\t\t\t\tif (event.key === \"Enter\") {\n\t\t\t\t\t\tevent.preventDefault();\n\t\t\t\t\t\tconst submittedValue = (event.target as HTMLFormElement).value;\n\t\t\t\t\t\tif (!state.error) {\n\t\t\t\t\t\t\tdispatch(setPage(parseInt(submittedValue)));\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}}\n\t\t\t\tonChange={(event) => {\n\t\t\t\t\tconst submittedValue = (event.target as HTMLTextAreaElement).value;\n\t\t\t\t\tif (validatePageChoice(submittedValue, totalPages as number)) {\n\t\t\t\t\t\tsetState({ ...state, error: false, userInput: submittedValue });\n\t\t\t\t\t} else {\n\t\t\t\t\t\tsetState({ ...state, error: true, userInput: submittedValue });\n\t\t\t\t\t}\n\t\t\t\t}}\n\t\t\t\terror={state.error}\n\t\t\t/>\n\t\t\tof {totalPages}\n\t\t</Typography>\n\t);\n};\n","import * as t from \"./actionTypes\";\nimport type { DisplayData, DisplayStatus, MaterialGroupData } from \"./model\";\nimport { createRef } from \"react\";\n\nconst initialState: DisplayData = {\n\tdisplayStatus: \"SHOW\",\n\tcurrentPage: 1,\n\tdocumentRef: createRef(),\n\tpageSpans: {},\n\tzoomQueue: null,\n\tmaterialData: { materialDataTimeStamp: -Infinity },\n};\n\nconst displayData = (state = initialState, { type, payload }: { type: string; payload: any }): DisplayData => {\n\tswitch (type) {\n\t\tcase t.PDF_UPLOADED:\n\t\t\treturn { ...state, pdf: payload as File };\n\t\tcase t.MATERIAL_LOADED:\n\t\t\treturn { ...state, totalPages: payload as number };\n\t\tcase t.PAGE_UPDATE:\n\t\t\treturn { ...state, currentPage: payload as number };\n\t\tcase t.DISPLAY_STATUS:\n\t\t\treturn { ...state, displayStatus: payload as DisplayStatus };\n\t\tcase t.MATERIAL_DATA:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tmaterialData: payload,\n\t\t\t\tpageSpans: { ...state.pageSpans, [state.currentPage]: (payload as MaterialGroupData).materialSpans.length - 1 },\n\t\t\t};\n\t\tdefault:\n\t\t\treturn state;\n\t}\n};\n\nexport default displayData;\n","import * as actions from \"./actions\";\nimport * as actionTypes from \"./actionTypes\";\nimport * as components from \"./components\";\nimport * as constants from \"./constants\";\nimport reducer from \"./reducer\";\nimport * as selectors from \"./selectors\";\n\nexport default { actions, actionTypes, components, constants, reducer, selectors };\n","import { useRef, useEffect, MutableRefObject } from \"react\";\n\n// only global eventListener for now\nexport const useEventListener = (eventName: string, handler: any) => {\n\tconst savedHandler: MutableRefObject<Function> = useRef(() => {});\n\n\tuseEffect(() => {\n\t\tsavedHandler.current = handler;\n\t}, [handler]);\n\n\tuseEffect(() => {\n\t\tconst eventListener = (event: Event) => savedHandler.current(event);\n\t\tdocument.addEventListener(eventName, eventListener);\n\t\treturn () => {\n\t\t\tdocument.removeEventListener(eventName, eventListener);\n\t\t};\n\t}, [eventName]);\n};\n","export const NAME = \"appFocus\";\n","import { NAME } from \"./constants\";\n\nexport const FOCUS_UPDATE = NAME + \"/FOCUS_UPDATE\";\nexport const DISPLAY_FOCUS_UPDATE = NAME + \"/DISPLAY_FOCUS_UPDATE\";\n","import { createSelector } from \"reselect\";\nimport { NAME } from \"./constants\";\nimport { FocusState } from \"./model\";\n\nexport const getAll = (state: any) => state[NAME];\n\nexport const getFocus = createSelector(getAll, (state: FocusState) => state.userFocus);\n\nexport const getDisplayFocus = createSelector(getAll, (state: FocusState) => state.displayFocus);\n","import * as t from \"./actionTypes\";\nimport { UserFocus, DisplayFocus } from \"./model\";\nimport { Dispatch } from \"redux\";\nimport { getFocus } from \"./selectors\";\nimport display from \"../display\";\n\nexport const updateFocus = (focus: UserFocus) => {\n\treturn { type: t.FOCUS_UPDATE, payload: focus };\n};\n\nexport const tryUpdateFocus = (focus: UserFocus) => {\n\treturn (dispatch: Dispatch, getState: Function) => {\n\t\tif (getFocus(getState()) !== focus) dispatch(updateFocus(focus));\n\t};\n};\n\nexport const toggleContextMenuFocus = () => {\n\treturn (dispatch: Dispatch, getState: Function) => {\n\t\tconst state = getState();\n\t\tif (display.selectors.getDataExists(state)) {\n\t\t\tconst currentFocus = getFocus(getState());\n\t\t\tswitch (currentFocus) {\n\t\t\t\tcase \"CONTEXT_MENU\":\n\t\t\t\t\tdispatch(updateFocus(\"SELECTION\"));\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"SELECTION\":\n\t\t\t\t\tdispatch(updateFocus(\"CONTEXT_MENU\"));\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t};\n};\n\nexport const updateDisplayFocus = (focus: DisplayFocus) => {\n\treturn { type: t.DISPLAY_FOCUS_UPDATE, payload: focus };\n};\n","import { FocusState, UserFocus, DisplayFocus } from \"./model\";\nimport * as t from \"./actionTypes\";\n\nconst initialState: FocusState = { userFocus: \"CONTROL\", displayFocus: \"ACTIVE_RIVER\" };\n\nconst focus = (state = initialState, { type, payload }: { type: string; payload: any }): FocusState => {\n\tswitch (type) {\n\t\tcase t.FOCUS_UPDATE:\n\t\t\treturn { ...state, userFocus: payload as UserFocus };\n\t\tcase t.DISPLAY_FOCUS_UPDATE:\n\t\t\treturn { ...state, displayFocus: payload as DisplayFocus };\n\n\t\tdefault:\n\t\t\treturn state;\n\t}\n};\n\nexport default focus;\n","import * as actions from \"./actions\";\nimport * as constants from \"./constants\";\nimport reducer from \"./reducer\";\nimport * as selectors from \"./selectors\";\n\nexport default { actions, constants, reducer, selectors };\n","export const NAME = \"creationData\";\n","import { NAME } from \"./constants\";\n\nexport const TOGGLE_CONTEXT_MENU = NAME + \"/TOGGLE_CONTEXT_MENU\";\nexport const CLOSE_CONTEXT_MENU = NAME + \"/CLOSE_CONTEXT_MENU\";\nexport const OPEN_CONTEXT_MENU = NAME + \"/OPEN_CONTEXT_MENU\";\nexport const SELECTED_STRING = NAME + \"/SELECTED_STRING\";\nexport const SELECTED_PARENT = NAME + \"/SELECTED_PARENT\";\nexport const SELECTION_POSITION = NAME + \"/SELECITON_POSITION\";\n","import { UpdateType, CardPayloadConfig, CreationType, QACardContent, CardType } from \"../model\";\n\ntype updateContentStrFunction = (oldStr: string, newStr: string) => string;\n\ntype partialUpdateContentStrFunction = (oldStr: string) => string;\n\nconst updateContentStrFunctions: { [key in UpdateType]: updateContentStrFunction } = {\n\tREPLACE: (_: string, newStr: string) => newStr,\n\tAPPEND: (oldStr: string, newStr: string) => oldStr + newStr,\n};\n\nconst createPartialUpdateContentStrFunction = (updateType: UpdateType, newStr: string) => (oldStr: string) =>\n\tupdateContentStrFunctions[updateType](oldStr, newStr);\n\ntype creationFunction = (\n\toldConfig: CardPayloadConfig,\n\tpartialUpdateFunction: partialUpdateContentStrFunction\n) => CardPayloadConfig;\n\nconst defaultCreationFunction: creationFunction = (oldConfig, partialUpdateFunction) => {\n\treturn { ...oldConfig, content: partialUpdateFunction(oldConfig.content as string) };\n};\n\nconst creationFunctions: {\n\t[key in CreationType]: creationFunction;\n} = {\n\tNOTE: defaultCreationFunction,\n\tQ: (oldConfig, partialUpdateFunction) => {\n\t\tconst content = oldConfig.content as QACardContent;\n\t\treturn { ...oldConfig, content: { ...content, q: partialUpdateFunction(content.q) } };\n\t},\n\tA: (oldConfig, partialUpdateFunction) => {\n\t\tconst content = oldConfig.content as QACardContent;\n\t\treturn { ...oldConfig, content: { ...content, a: partialUpdateFunction(content.a) } };\n\t},\n};\n\nexport const contentStringToConfig = (\n\tcontentStr: string,\n\ttype: CardType,\n\tcreationType: CreationType,\n\tupdateType: UpdateType,\n\tcurrentCard?: CardPayloadConfig\n): CardPayloadConfig => {\n\tconst partialUpdateFunction = createPartialUpdateContentStrFunction(updateType, contentStr);\n\tconst isCardUpdate = !!currentCard;\n\treturn isCardUpdate\n\t\t? creationFunctions[creationType](currentCard as CardPayloadConfig, partialUpdateFunction)\n\t\t: creationFunctions[creationType]({ type, content: type === \"Q-A\" ? { q: \"\", a: \"\" } : \"\" }, partialUpdateFunction);\n};\n","export const NAME = \"cards\";\n","import { NAME } from \"./constants\";\n\nexport const CARD_UPDATE = NAME + \"/CARD_UPDATE\";\nexport const CARD_PUSH = NAME + \"/CARD_PUSH\";\nexport const CARD_REMOVE = NAME + \"/CARD_REMOVE\";\nexport const CARD_GOAL = NAME + \"/CARD_GOAL\";\nexport const CARD_SOURCE = NAME + \"/CARD_SOURCE\";\n","import { createSelector } from \"reselect\";\nimport { CardsState } from \"./model\";\n\nexport const getAll = (state: any) => state.cards as CardsState;\n\nexport const getLastCardIDNumber = createSelector(getAll, (state) => state.lastCardIDNumber);\n\nexport const getCards = createSelector(getAll, (state: CardsState) => state.cards);\n\nexport const getGoalCard = createSelector(getAll, (state: CardsState) => state.goalCard);\n\nexport const getSourceCard = createSelector(getAll, (state: CardsState) => state.sourceCard);\n","import {\n\tCardPayload,\n\tFinalizedCardPayload,\n\tCreationType,\n\tUpdateType,\n\tCardType,\n\tCardOrigin,\n\tCardConfig,\n\tQAOrigin,\n\tSingleOrigin,\n} from \"./model\";\nimport * as t from \"./actionTypes\";\nimport { Dispatch } from \"redux\";\nimport { getLastCardIDNumber, getCards, getSourceCard } from \"./selectors\";\nimport { contentStringToConfig } from \"./services/config\";\n\nconst createCardID = (lastCardIDNumber: number) => (lastCardIDNumber + 1).toString();\n\nexport const cardPush = (cardPayload: CardPayload) => {\n\treturn (dispatch: Dispatch, getState: Function) => {\n\t\tdispatch({\n\t\t\ttype: t.CARD_PUSH,\n\t\t\tpayload: {\n\t\t\t\t...cardPayload,\n\t\t\t\tcard: { ...cardPayload.card, cardID: createCardID(getLastCardIDNumber(getState())) },\n\t\t\t} as FinalizedCardPayload,\n\t\t});\n\t};\n};\n\nexport const cardUpdate = (card: CardPayload) => {\n\treturn { type: t.CARD_UPDATE, payload: card };\n};\n\nexport const updateCardContent = (\n\tcontentString: string,\n\tcardID: string,\n\tcreationType: CreationType,\n\tupdateType: UpdateType,\n\torigin?: CardOrigin\n) => {\n\treturn (dispatch: Dispatch, getState: Function) => {\n\t\tconst state = getState();\n\n\t\tconst currentCard = getCards(state)[cardID as string];\n\t\tconst config = contentStringToConfig(contentString, currentCard.type, creationType, updateType, currentCard);\n\n\t\t// const newOrigin = origin\n\t\t// \t? (currentCard.origin as QAOrigin)?.q\n\t\t// \t\t? { ...currentCard.origin, [creationType === \"Q\" ? \"q\" : \"a\"]: origin }\n\t\t// \t\t: origin\n\t\t// \t: undefined;\n\t\tdispatch(\n\t\t\tcardUpdate({\n\t\t\t\tcard: { ...config, origin },\n\t\t\t})\n\t\t);\n\t};\n};\n\nexport const pushCardContent = (\n\tcontentString: string,\n\tcreationType: CreationType,\n\tupdateType: UpdateType,\n\ttype: CardType,\n\torigin?: CardOrigin\n) => {\n\tconst config = contentStringToConfig(contentString, type, creationType, updateType);\n\t// const newOrigin =\n\t// \tcreationType !== \"NOTE\" && origin ? { q: {}, a: {}, [creationType === \"Q\" ? \"q\" : \"a\"]: origin } : origin;\n\n\t// const newOrigin = origin\n\t// \t? (origin as QAOrigin)?.q\n\t// \t\t? { ...origin, [creationType === \"Q\" ? \"q\" : \"a\"]: origin }\n\t// \t\t: origin\n\t// \t: undefined;\n\treturn cardPush({ card: { ...config, origin } });\n};\n\nexport const removeCard = (cardID: string) => {\n\treturn { type: t.CARD_REMOVE, payload: cardID };\n};\n\nexport const setGoalCard = (cardConfig: CardConfig, creationType: CreationType) => {\n\treturn { type: t.CARD_GOAL, payload: { ...cardConfig, creationType } };\n};\n\nexport const resetGoalCard = () => {\n\treturn { type: t.CARD_GOAL, payload: null };\n};\n\nexport const setSourceCard = (x: number, y: number, sourceField: CreationType, origin?: CardOrigin) => {\n\treturn { type: t.CARD_SOURCE, payload: { origin, x, y, sourceField } };\n};\n\nexport const resetSourceCard = () => {\n\treturn { type: t.CARD_SOURCE, payload: null };\n};\n\nexport const tryResetSourceCard = () => {\n\treturn (dispatch: Dispatch, getState: Function) => {\n\t\tconst sourceCardExits = getSourceCard(getState()) !== null;\n\t\tif (sourceCardExits) dispatch(resetSourceCard());\n\t};\n};\n","import * as t from \"./actionTypes\";\nimport { CardsState, FinalizedCardPayload } from \"./model\";\n\nconst intialState: CardsState = {\n\tcards: {\n\t\t\"0\": {\n\t\t\tcardID: \"0\",\n\t\t\ttype: \"Q-A\",\n\t\t\tcontent: { q: \"Was ist der Sinn des Lebens?\", a: \"42\" },\n\t\t},\n\t\t\"1\": {\n\t\t\tcardID: \"1\",\n\t\t\ttype: \"Q-A\",\n\t\t\tcontent: { q: \"Welches Layout macht mehr Sinn?\", a: \"??\" },\n\t\t},\n\t\t\"2\": { cardID: \"2\", type: \"Note\", content: \"Note here\" },\n\t},\n\tlastCardIDNumber: 2,\n\tgoalCard: null,\n\tsourceCard: null,\n};\n\nconst removeCard = (state: CardsState, cardID: string) => {\n\tconst cards = { ...state.cards };\n\n\t// we do not reset the ID counter\n\n\tdelete cards[cardID];\n\n\treturn { ...state, cards };\n};\n\nconst cards = (state = intialState, { type, payload }: { type: string; payload?: any }) => {\n\tlet cardID;\n\tlet cardObj;\n\tswitch (type) {\n\t\tcase t.CARD_PUSH:\n\t\t\tconst lastCardIDNumber = state.lastCardIDNumber + 1;\n\n\t\t\tcardObj = { ...state.cards };\n\t\t\tcardObj[(payload as FinalizedCardPayload).card.cardID] = (payload as FinalizedCardPayload).card;\n\n\t\t\treturn { ...state, cards: cardObj, lastCardIDNumber };\n\t\tcase t.CARD_UPDATE:\n\t\t\tcardID = (payload as FinalizedCardPayload).card.cardID as string;\n\t\t\tcardObj = { ...state.cards };\n\t\t\tcardObj[cardID] = (payload as FinalizedCardPayload).card;\n\n\t\t\treturn { ...state, cards: cardObj };\n\t\tcase t.CARD_REMOVE:\n\t\t\treturn removeCard(state, payload as string);\n\t\tcase t.CARD_GOAL:\n\t\t\treturn { ...state, goalCard: payload };\n\t\tcase t.CARD_SOURCE:\n\t\t\treturn { ...state, sourceCard: payload };\n\t\tdefault:\n\t\t\treturn state;\n\t}\n};\n\nexport default cards;\n","import * as services from \"./services\";\nimport * as constants from \"./constants\";\nimport * as actionTypes from \"./actionTypes\";\nimport * as actions from \"./actions\";\nimport * as selectors from \"./selectors\";\nimport reducer from \"./reducer\";\n\nexport default { services, constants, actionTypes, actions, reducer, selectors };\n","export const NAME = \"cardRiverState\";\n","import { NAME } from \"./constants\";\nimport { createSelector } from \"reselect\";\nimport { CardRiverState } from \"./model\";\nimport cards from \"../cards\";\n\nexport const getAll = (state: any) => state[NAME];\n\nexport const getRiverMakeUps = createSelector(getAll, (state: CardRiverState) => state.riverMakeUps);\n\nexport const getActiveRiverMakeUpID = createSelector(getAll, (state: CardRiverState) => state.activeRiverMakeUpID);\n\nexport const getPushToRiver = createSelector(getAll, (state: CardRiverState) => state.pushToRiverID);\n\nexport const getPushToRiverMakeUp = createSelector(getRiverMakeUps, getPushToRiver, (makeUps, id) => makeUps[id]);\n\nexport const getActiveRiverMakeUp = createSelector(\n\tgetRiverMakeUps,\n\tgetActiveRiverMakeUpID,\n\t(makeUps, id) => makeUps[id]\n);\n\nexport const getPushToRiverCardIDs = createSelector(getPushToRiverMakeUp, (makeUp) => makeUp.cardIDs);\n\nexport const getPushToRiverCards = createSelector(\n\tgetPushToRiverCardIDs,\n\tcards.selectors.getCards,\n\t(makeUpCardIDs, cards) => makeUpCardIDs.map((id) => cards[id])\n);\n\n//TODO-NICE: rename active=page-wise or smth like that for clarity\nexport const getActiveRiverCardIDs = createSelector(getActiveRiverMakeUp, (makeUp) => makeUp.cardIDs);\n\nexport const getActiveRiverCards = createSelector(\n\tgetActiveRiverCardIDs,\n\tcards.selectors.getCards,\n\t(makeUpCardIDs, cards) => makeUpCardIDs.map((id) => cards[id])\n);\n\nexport const getRiverShowState = createSelector(getAll, (state: CardRiverState) => state.riverShowState);\n\nexport const riverShowStateIsShow = createSelector(getRiverShowState, (state) => state === \"SHOW\");\n","import React, { useState } from \"react\";\nimport { TextField, TextFieldProps } from \"@material-ui/core\";\nimport focus from \"../../focus\";\nimport { useDispatch } from \"react-redux\";\n\nexport const HybridCardField = ({\n\tstoreValue = \"\",\n\tsaveChanges,\n\tstyle,\n\t...rest\n}: {\n\tstoreValue?: string;\n\tsaveChanges: (value: string) => void;\n\tstyle: any;\n} & TextFieldProps) => {\n\tconst dispatch = useDispatch();\n\tconst [state, setState] = useState({ storeValue, mutableValue: storeValue });\n\n\t// reset if new storeValue, otherwise keep user-mutated value\n\tif (state.storeValue !== storeValue) {\n\t\tsetState({ storeValue, mutableValue: storeValue });\n\t}\n\n\t// need the onChange-pattern, because we want to be able to pre-fill the field from the store\n\treturn (\n\t\t<TextField\n\t\t\tonMouseEnter={() => {\n\t\t\t\tdispatch(focus.actions.tryUpdateFocus(\"EDITOR\"));\n\t\t\t}}\n\t\t\tmultiline\n\t\t\tvariant=\"filled\"\n\t\t\tvalue={state.mutableValue}\n\t\t\tonChange={(event) => {\n\t\t\t\tconst submittedValue = (event.target as HTMLTextAreaElement).value;\n\t\t\t\tsetState({ ...state, mutableValue: submittedValue });\n\t\t\t}}\n\t\t\tonBlur={(event: any) => {\n\t\t\t\tsaveChanges(event.target.value);\n\t\t\t}}\n\t\t\tstyle={style}\n\t\t\t{...rest}\n\t\t></TextField>\n\t);\n};\n","import DeleteForeverIcon from \"@material-ui/icons/DeleteForever\";\nimport React from \"react\";\nimport { IconButton } from \"@material-ui/core\";\nimport { useDispatch } from \"react-redux\";\nimport cards from \"../../cards\";\nimport focus from \"../../focus\";\n\n//TODO-RC: Undo / Redo for Card-Deletions and also Card_Push and Card_Updates\n//TODO-RC: make confirmation overlap\n//TODO-NICE: use storybook for visual component testing\n\nexport const DeleteCardButton = ({ cardID }: { cardID: string }) => {\n\tconst dispatch = useDispatch();\n\treturn (\n\t\t<IconButton\n\t\t\ttype=\"button\"\n\t\t\tonClick={() => {\n\t\t\t\tdispatch(cards.actions.removeCard(cardID));\n\t\t\t}}\n\t\t\tonMouseEnter={() => {\n\t\t\t\tdispatch(focus.actions.tryUpdateFocus(\"EDITOR_CONTROL\"));\n\t\t\t}}\n\t\t>\n\t\t\t<DeleteForeverIcon></DeleteForeverIcon>\n\t\t</IconButton>\n\t);\n};\n","import FindInPageIcon from \"@material-ui/icons/FindInPage\";\nimport React from \"react\";\nimport { IconButton } from \"@material-ui/core\";\nimport { useDispatch } from \"react-redux\";\nimport display from \"../../display\";\nimport { SingleOrigin } from \"../../cards/model\";\nimport focus from \"../../focus\";\n\nexport const JumpToOriginButton = ({ cardOrigin }: { cardOrigin: SingleOrigin }) => {\n\tconst dispatch = useDispatch();\n\treturn (\n\t\t<IconButton\n\t\t\ttype=\"button\"\n\t\t\tonClick={() => {\n\t\t\t\tdispatch(focus.actions.updateDisplayFocus(\"ACTIVE_RIVER\"));\n\t\t\t\tdispatch(display.actions.zoomToCardOrigin(cardOrigin.spanIndex, cardOrigin.page));\n\t\t\t}}\n\t\t>\n\t\t\t<FindInPageIcon></FindInPageIcon>\n\t\t</IconButton>\n\t);\n};\n","import PanToolIcon from \"@material-ui/icons/PanTool\";\nimport PanToolOutlinedIcon from \"@material-ui/icons/PanToolOutlined\";\nimport React, { useState } from \"react\";\nimport { IconButton } from \"@material-ui/core\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { CardConfig, CreationType, GoalCard } from \"../../cards/model\";\nimport cards from \"../../cards\";\nimport { getGoalCard } from \"../../cards/selectors\";\nimport focus from \"../../focus\";\n\nconst isGoalCard = (cardConfig: CardConfig, creationType: CreationType, goalCard: GoalCard) =>\n\tcardConfig.cardID === goalCard.cardID && creationType === goalCard.creationType;\n\nexport const GrabForFieldButton = ({\n\tcardConfig,\n\tcreationType,\n}: {\n\tcardConfig: CardConfig;\n\tcreationType: CreationType;\n}) => {\n\tconst dispatch = useDispatch();\n\tconst goalCard = useSelector(getGoalCard);\n\tconst [outlined, setOutlined] = useState(true);\n\n\tif (goalCard) {\n\t\tconst isGoal = isGoalCard(cardConfig, creationType, goalCard);\n\t\tif (isGoal) {\n\t\t\tif (outlined) setOutlined(false);\n\t\t} else {\n\t\t\tif (!outlined) setOutlined(true);\n\t\t}\n\t} else {\n\t\tif (!outlined) setOutlined(true);\n\t}\n\n\treturn (\n\t\t<IconButton\n\t\t\ttype=\"button\"\n\t\t\tonMouseEnter={() => {\n\t\t\t\tdispatch(focus.actions.tryUpdateFocus(\"EDITOR_CONTROL\"));\n\t\t\t}}\n\t\t\tonClick={() => {\n\t\t\t\tif (outlined) {\n\t\t\t\t\tdispatch(cards.actions.setGoalCard(cardConfig, creationType));\n\t\t\t\t} else {\n\t\t\t\t\tdispatch(cards.actions.resetGoalCard());\n\t\t\t\t}\n\t\t\t}}\n\t\t>\n\t\t\t{outlined ? <PanToolOutlinedIcon></PanToolOutlinedIcon> : <PanToolIcon></PanToolIcon>}\n\t\t</IconButton>\n\t);\n};\n","import ExtensionIcon from \"@material-ui/icons/Extension\";\nimport React from \"react\";\nimport { IconButton } from \"@material-ui/core\";\nimport { useDispatch } from \"react-redux\";\nimport { CardOrigin, CreationType } from \"../../cards/model\";\nimport cards from \"../../cards\";\nimport focus from \"../../focus\";\n\n//TODO-NICe: make selection-dropable on buttons, so that they can be send to cards, make this the default instead of context-menu?\n// imagine: toolbar with new Note, new A, new Q | all the cards and you can drop off\n\n//TODO-RC, if text from the field was already extracted this just opens the menu\n\n//TODO-NICE: delete extracted str in source\n\n// need this button: mouse-up in editor should not trigger context menu (cant select directly), because I cant delete selections then\nexport const ExtractFromFieldButton = ({\n\tcardOrigin,\n\tsourceField,\n}: {\n\tcardOrigin?: CardOrigin;\n\tsourceField: CreationType;\n}) => {\n\tconst dispatch = useDispatch();\n\n\treturn (\n\t\t<IconButton\n\t\t\ttype=\"button\"\n\t\t\tonMouseEnter={() => {\n\t\t\t\tdispatch(focus.actions.tryUpdateFocus(\"EDITOR_CONTROL\"));\n\t\t\t}}\n\t\t\tonClick={(event: any) => {\n\t\t\t\tdispatch(\n\t\t\t\t\tcards.actions.setSourceCard(event.clientX as number, event.clientY as number, sourceField, cardOrigin)\n\t\t\t\t);\n\t\t\t}}\n\t\t>\n\t\t\t<ExtensionIcon></ExtensionIcon>\n\t\t</IconButton>\n\t);\n};\n","import Grid from \"@material-ui/core/Grid\";\nimport React from \"react\";\nimport { HybridCardField } from \"./HybridCardField\";\nimport { CardConfig, QACardContent, NoteOrigin, SingleOrigin, QAOrigin } from \"../../cards/model\";\nimport { useDispatch } from \"react-redux\";\nimport cards from \"../../cards\";\nimport { DeleteCardButton } from \"./DeleteCardButton\";\nimport { JumpToOriginButton } from \"./JumpToOriginButton\";\nimport { GrabForFieldButton } from \"./GrabForFieldButton\";\nimport { ExtractFromFieldButton } from \"./ExtractFromFieldButton\";\nimport { isNullOrUndefined } from \"util\";\n\n//TODO-RC: tooltips for all buttons, multiple languages?\n\n//TODO-RC: mouse-up in editor should not trigger context menu, because I cant delete selections then, better use the Pinsel-Idea for inside the card\n\n//TODO-RC: make full cards be not visible to the context menu by default (need to unmark them or sub-menu)\n\ntype CardProps = { config: CardConfig; riverID: string };\n\nconst NoteCard = ({ config }: CardProps) => {\n\tconst dispatch = useDispatch();\n\n\treturn (\n\t\t<div>\n\t\t\t<HybridCardField\n\t\t\t\tsaveChanges={(value) => {\n\t\t\t\t\tdispatch(cards.actions.updateCardContent(value, config.cardID, \"NOTE\", \"REPLACE\", config.origin));\n\t\t\t\t}}\n\t\t\t\tstoreValue={config.content as string}\n\t\t\t\tlabel=\"Note\"\n\t\t\t\tvariant=\"filled\"\n\t\t\t\tstyle={{ backgroundColor: \"#CBF3F0\" }}\n\t\t\t\tInputLabelProps={{ style: { color: \"#000000\" } }}\n\t\t\t></HybridCardField>\n\t\t\t<DeleteCardButton cardID={config.cardID}></DeleteCardButton>\n\t\t\t<GrabForFieldButton cardConfig={config} creationType=\"NOTE\"></GrabForFieldButton>\n\t\t\t<ExtractFromFieldButton cardOrigin={config.origin} sourceField=\"NOTE\"></ExtractFromFieldButton>\n\t\t\t{config.origin && <JumpToOriginButton cardOrigin={config.origin as NoteOrigin}></JumpToOriginButton>}\n\t\t</div>\n\t);\n};\n\nconst QACard = ({ config }: CardProps) => {\n\tconst dispatch = useDispatch();\n\n\treturn (\n\t\t<Grid container direction=\"column\" spacing={1}>\n\t\t\t<Grid item>\n\t\t\t\t<HybridCardField\n\t\t\t\t\tsaveChanges={(value) => {\n\t\t\t\t\t\tdispatch(cards.actions.updateCardContent(value, config.cardID, \"Q\", \"REPLACE\", config.origin));\n\t\t\t\t\t}}\n\t\t\t\t\tstoreValue={(config.content as QACardContent).q}\n\t\t\t\t\tlabel={\"Question\"}\n\t\t\t\t\tvariant=\"filled\"\n\t\t\t\t\tstyle={{ backgroundColor: \"#FFBF69\" }}\n\t\t\t\t\tInputLabelProps={{ style: { color: \"#000000\" } }}\n\t\t\t\t></HybridCardField>\n\t\t\t\t<GrabForFieldButton cardConfig={config} creationType=\"Q\"></GrabForFieldButton>\n\t\t\t\t<ExtractFromFieldButton cardOrigin={config.origin} sourceField=\"Q\"></ExtractFromFieldButton>\n\t\t\t\t{config.origin && !isNullOrUndefined((config.origin as QAOrigin).q?.spanIndex) && (\n\t\t\t\t\t<JumpToOriginButton cardOrigin={(config.origin as QAOrigin).q as SingleOrigin}></JumpToOriginButton>\n\t\t\t\t)}\n\t\t\t</Grid>\n\t\t\t<Grid item>\n\t\t\t\t<HybridCardField\n\t\t\t\t\tsaveChanges={(value) => {\n\t\t\t\t\t\tdispatch(cards.actions.updateCardContent(value, config.cardID, \"A\", \"REPLACE\", config.origin));\n\t\t\t\t\t}}\n\t\t\t\t\tstoreValue={(config.content as QACardContent).a}\n\t\t\t\t\tlabel={\"Answer\"}\n\t\t\t\t\tvariant=\"filled\"\n\t\t\t\t\tstyle={{ backgroundColor: \"#2EC4B6\" }}\n\t\t\t\t\tInputLabelProps={{ style: { color: \"#000000\" } }}\n\t\t\t\t></HybridCardField>\n\t\t\t\t<GrabForFieldButton cardConfig={config} creationType=\"A\"></GrabForFieldButton>\n\t\t\t\t<ExtractFromFieldButton cardOrigin={config.origin} sourceField=\"A\"></ExtractFromFieldButton>\n\t\t\t\t{config.origin && !isNullOrUndefined((config.origin as QAOrigin).a?.spanIndex) && (\n\t\t\t\t\t<JumpToOriginButton cardOrigin={(config.origin as QAOrigin).a as SingleOrigin}></JumpToOriginButton>\n\t\t\t\t)}\n\t\t\t</Grid>\n\t\t\t<Grid item>\n\t\t\t\t<DeleteCardButton cardID={config.cardID}></DeleteCardButton>\n\t\t\t</Grid>\n\t\t</Grid>\n\t);\n};\n\nexport const Card = ({ config, riverID }: CardProps) => {\n\tswitch (config.type) {\n\t\tcase \"Note\":\n\t\t\treturn <NoteCard config={config} riverID={riverID}></NoteCard>;\n\t\tcase \"Q-A\":\n\t\t\treturn <QACard config={config} riverID={riverID}></QACard>;\n\t}\n};\n","import Grid from \"@material-ui/core/Grid\";\nimport React from \"react\";\nimport { incrementer } from \"../../../shared/utils\";\nimport { Card } from \"./Card\";\nimport { CardConfig } from \"../../cards/model\";\nimport { Divider } from \"@material-ui/core\";\n\nconst GridDivider = () => (\n\t<Grid item>\n\t\t<Divider></Divider>\n\t</Grid>\n);\n\nexport const toCardGridItemsWithDividers = (cards: CardConfig[], riverID: string) => {\n\tconst increment = incrementer();\n\n\treturn cards.reduce((prev, currentCard, index, arr) => {\n\t\tprev.push(\n\t\t\t<Grid item key={increment()}>\n\t\t\t\t<Card config={currentCard} riverID={riverID} key={increment()}></Card>\n\t\t\t</Grid>\n\t\t);\n\n\t\tconst notLastCard = index < arr.length - 1;\n\t\tif (notLastCard) prev.push(<GridDivider key={increment()}></GridDivider>);\n\t\treturn prev;\n\t}, [] as any[]);\n};\n","import { NAME } from \"./constants\";\n\nexport const RIVER_SHOW_STATE = NAME + \"/RIVER_SHOW_STATE\";\nexport const RIVER_PUSH_STATE = NAME + \"/RIVER_PUSH_STATE\";\n","import * as t from \"./actionTypes\";\nimport { riverShowStateIsShow, getPushToRiver } from \"./selectors\";\nimport { Dispatch } from \"redux\";\n\nexport const toggleRiverShowState = () => (dispatch: Dispatch, getState: Function) => {\n\tdispatch({ type: t.RIVER_SHOW_STATE, payload: riverShowStateIsShow(getState()) ? \"HIDE\" : \"SHOW\" });\n};\n\nexport const setPushToRiver = (id: string) => {\n\treturn { type: t.RIVER_PUSH_STATE, payload: id };\n};\n\nexport const trySetPushToRiver = (id: string) => {\n\treturn (dispatch: Dispatch, getState: Function) => {\n\t\tif (getPushToRiver(getState()) !== id) dispatch(setPushToRiver(id));\n\t};\n};\n","import FeaturedVideoIcon from \"@material-ui/icons/FeaturedVideo\";\nimport React from \"react\";\nimport { IconButton } from \"@material-ui/core\";\nimport { useDispatch } from \"react-redux\";\nimport cards from \"../../cards\";\nimport focus from \"../../focus\";\n\nexport const AddNoteButton = () => {\n\tconst dispatch = useDispatch();\n\treturn (\n\t\t<IconButton\n\t\t\ttype=\"button\"\n\t\t\tonClick={() => {\n\t\t\t\tdispatch(cards.actions.cardPush({ card: { type: \"Note\", content: \"\" } }));\n\t\t\t}}\n\t\t\tonMouseEnter={() => {\n\t\t\t\tdispatch(focus.actions.tryUpdateFocus(\"EDITOR_CONTROL\"));\n\t\t\t}}\n\t\t>\n\t\t\t<FeaturedVideoIcon></FeaturedVideoIcon>\n\t\t</IconButton>\n\t);\n};\n","import FeaturedPlayListIcon from \"@material-ui/icons/FeaturedPlayList\";\nimport React from \"react\";\nimport { IconButton } from \"@material-ui/core\";\nimport { useDispatch } from \"react-redux\";\nimport cards from \"../../cards\";\nimport focus from \"../../focus\";\n\nexport const AddQAButton = () => {\n\tconst dispatch = useDispatch();\n\treturn (\n\t\t<IconButton\n\t\t\ttype=\"button\"\n\t\t\tonClick={() => {\n\t\t\t\tdispatch(cards.actions.cardPush({ card: { type: \"Q-A\", content: { q: \"\", a: \"\" } } }));\n\t\t\t}}\n\t\t\tonMouseEnter={() => {\n\t\t\t\tdispatch(focus.actions.tryUpdateFocus(\"EDITOR_CONTROL\"));\n\t\t\t}}\n\t\t>\n\t\t\t<FeaturedPlayListIcon></FeaturedPlayListIcon>\n\t\t</IconButton>\n\t);\n};\n","import { Typography, Divider } from \"@material-ui/core\";\nimport Accordion from \"@material-ui/core/Accordion\";\nimport AccordionSummary from \"@material-ui/core/AccordionSummary\";\nimport AccordionDetails from \"@material-ui/core/AccordionDetails\";\nimport Grid from \"@material-ui/core/Grid\";\nimport React, { useState } from \"react\";\nimport { trySetPushToRiver } from \"../actions\";\nimport { useDispatch } from \"react-redux\";\nimport { AddNoteButton } from \"./AddNoteButton\";\nimport { AddQAButton } from \"./AddQAButton\";\n\n//TODO-NICE: make it not be accordion but closeable?\n\nexport const CardRiverAccordion = ({\n\triverID,\n\tgridItems,\n\tsummary,\n}: {\n\triverID: string;\n\tgridItems: any;\n\tsummary: string;\n}) => {\n\tconst [elevation, setElevation] = useState(3);\n\tconst dispatch = useDispatch();\n\treturn (\n\t\t<Accordion\n\t\t\tdefaultExpanded={true}\n\t\t\tonMouseEnter={() => {\n\t\t\t\tsetElevation(20);\n\t\t\t\tdispatch(trySetPushToRiver(riverID));\n\t\t\t}}\n\t\t\tonMouseLeave={() => {\n\t\t\t\tsetElevation(3);\n\t\t\t}}\n\t\t\televation={elevation}\n\t\t>\n\t\t\t<AccordionSummary>\n\t\t\t\t<Typography\n\t\t\t\t\tvariant=\"h6\"\n\t\t\t\t\talign=\"center\"\n\t\t\t\t\tstyle={{ MozUserSelect: \"none\", WebkitUserSelect: \"none\", msUserSelect: \"none\" }}\n\t\t\t\t>\n\t\t\t\t\t{summary}\n\t\t\t\t</Typography>\n\t\t\t</AccordionSummary>\n\t\t\t<AccordionDetails>\n\t\t\t\t<Grid container direction=\"column\" spacing={2} justify=\"center\" alignItems=\"stretch\">\n\t\t\t\t\t<Grid item>\n\t\t\t\t\t\t<AddQAButton></AddQAButton>\n\t\t\t\t\t\t<AddNoteButton></AddNoteButton>\n\t\t\t\t\t\t<Divider></Divider>\n\t\t\t\t\t</Grid>\n\t\t\t\t\t{gridItems}\n\t\t\t\t</Grid>\n\t\t\t</AccordionDetails>\n\t\t</Accordion>\n\t);\n};\n","import { CardConfig } from \"../../cards/model\";\nimport { toCardGridItemsWithDividers } from \"./toCardGridItemsWithDividers\";\nimport { useMemo } from \"react\";\nimport { CardRiverAccordion } from \"./CardRiverAccordion\";\nimport React from \"react\";\n\n//TODO-RC: make Card-River non-overlapping and scroll the cards that we are considering from the Menus into view\n\nexport const ChildCardRiver = ({ riverID, riverCards }: { riverID: string; riverCards: CardConfig[] }) => {\n\t// this should only change if the store values change\n\tconst gridItems = useMemo(() => toCardGridItemsWithDividers(riverCards, riverID), [riverCards, riverID]);\n\n\treturn <CardRiverAccordion riverID={riverID} gridItems={gridItems} summary={riverID}></CardRiverAccordion>;\n};\n","import React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { getActiveRiverCards, getActiveRiverMakeUpID } from \"../selectors\";\nimport { ChildCardRiver } from \"./ChildCardRiver\";\n\n//TODO-RC: improve visual clarity of mapping ContextMenu to River\n\n//TODO-RC: mark cards that are hovered over in the contextmenu, so that we see where the content would end up\n// canvas?\n\n//TODO-RC: selection in CardRiver should stay highlighted when the contextMenu opens?\n\n//TODO-NICE: contextMenu as permant element, maybe sidebar?\n\n//TODO-NICE: preview in ContextMenu of how selected string would be used\n\n//TODO-RC: make butto where you can choose from the Card-field in the Card-River and then select what should go in there (reverse selection idea?)\n\n//TODO-RC, new A, new Q, SummaryNotes (maybe just SummaryRiver but with filter clickable?)\nexport const ActiveCardRiver = () => {\n\tconst riverID = useSelector(getActiveRiverMakeUpID);\n\tconst riverCards = useSelector(getActiveRiverCards);\n\n\treturn <ChildCardRiver riverID={riverID} riverCards={riverCards}></ChildCardRiver>;\n};\n","import { useState } from \"react\";\nimport SpeakerNotesOutlinedIcon from \"@material-ui/icons/SpeakerNotesOutlined\";\nimport SpeakerNotesTwoToneIcon from \"@material-ui/icons/SpeakerNotesTwoTone\";\nimport React from \"react\";\nimport { IconButton } from \"@material-ui/core\";\nimport { useDispatch } from \"react-redux\";\nimport { toggleRiverShowState } from \"../actions\";\n\nexport const ShowRiverButton = () => {\n\tconst [outlined, setOutlined] = useState(true);\n\tconst dispatch = useDispatch();\n\treturn (\n\t\t<IconButton\n\t\t\ttype=\"button\"\n\t\t\tonClick={() => {\n\t\t\t\tdispatch(toggleRiverShowState());\n\t\t\t\tsetOutlined(!outlined);\n\t\t\t}}\n\t\t>\n\t\t\t{outlined ? (\n\t\t\t\t<SpeakerNotesOutlinedIcon></SpeakerNotesOutlinedIcon>\n\t\t\t) : (\n\t\t\t\t<SpeakerNotesTwoToneIcon></SpeakerNotesTwoToneIcon>\n\t\t\t)}\n\t\t</IconButton>\n\t);\n};\n","import { Grid } from \"@material-ui/core\";\nimport { useSelector } from \"react-redux\";\nimport { getRiverMakeUps } from \"../selectors\";\nimport React from \"react\";\nimport cards from \"../../cards\";\nimport { ChildCardRiver } from \"./ChildCardRiver\";\nimport { incrementer } from \"../../../shared/utils\";\n\n//TODO-RC: SummaryRiver \"searchable\", so that you can zoom to certain rivers and also look at them next to each other (like PageChooser but needs different visuals)\n//TODO-RC: make cards searchable when looking at River/Material\n//TODO-RC: make separate Summary View that goes from left to right -> focus on active River\nexport const SummaryRiver = () => {\n\tconst cardConfigs = useSelector(cards.selectors.getCards);\n\tconst riverMakeUps = Object.values(useSelector(getRiverMakeUps));\n\n\tconst increment = incrementer();\n\t//TODO-NICE: find way to make UI-text unselectable globally, maybe different focus? But might be unperformant\n\treturn (\n\t\t<Grid container justify=\"flex-start\" direction=\"row\" alignItems=\"stretch\" spacing={1}>\n\t\t\t{riverMakeUps.map((makeUp) => (\n\t\t\t\t<Grid item>\n\t\t\t\t\t<ChildCardRiver\n\t\t\t\t\t\triverID={makeUp.riverID}\n\t\t\t\t\t\triverCards={makeUp.cardIDs.length > 0 ? makeUp.cardIDs.map((id) => cardConfigs[id]) : []}\n\t\t\t\t\t\tkey={increment()}\n\t\t\t\t\t></ChildCardRiver>\n\t\t\t\t</Grid>\n\t\t\t))}\n\t\t</Grid>\n\t);\n};\n","export type RiverMakeUp = { riverID: string; cardIDs: string[]; active: boolean };\n\ntype RiverMakeUps = { [riverID: string]: RiverMakeUp };\n\nexport type RiverShowState = \"SHOW\" | \"HIDE\";\n\nexport type CardRiverState = {\n\triverMakeUps: RiverMakeUps;\n\tactiveRiverMakeUpID: string;\n\tpushToRiverID: string;\n\tlastRiverIDNumber: number;\n\triverShowState: RiverShowState;\n};\n\nexport const pageNumberToRiverMakeUpID = (page: number) => \"CardRiver \" + page;\n","import { CardRiverState, RiverShowState, pageNumberToRiverMakeUpID, RiverMakeUp } from \"./model\";\nimport { FinalizedCardPayload } from \"../cards/model\";\nimport cards from \"../cards\";\nimport * as t from \"./actionTypes\";\nimport display from \"../display\";\n\nconst intialState: CardRiverState = {\n\triverMakeUps: {\n\t\t[pageNumberToRiverMakeUpID(1)]: {\n\t\t\triverID: pageNumberToRiverMakeUpID(1),\n\t\t\tcardIDs: [\"2\", \"0\", \"1\"],\n\t\t\t//TODO-NICE: might remove this active-flag, because I dont use it? Maybe for multiple documents?\n\t\t\tactive: true,\n\t\t},\n\t},\n\tpushToRiverID: pageNumberToRiverMakeUpID(1),\n\tactiveRiverMakeUpID: pageNumberToRiverMakeUpID(1),\n\tlastRiverIDNumber: 1,\n\triverShowState: \"SHOW\",\n};\n\nconst emptyCardRiver = (page: number): RiverMakeUp => {\n\treturn {\n\t\triverID: pageNumberToRiverMakeUpID(page),\n\t\tcardIDs: [],\n\t\tactive: true,\n\t};\n};\n\nconst updateStateWithMakeUps = (state: CardRiverState, ...makeUps: RiverMakeUp[]) => {\n\tconst updatedState = { ...state };\n\tmakeUps.forEach((makeUp) => {\n\t\tupdatedState.riverMakeUps[makeUp.riverID] = makeUp;\n\t});\n\treturn updatedState;\n};\n\nconst deactivateActiveCardRiver = (state: CardRiverState) => {\n\treturn { ...state.riverMakeUps[state.activeRiverMakeUpID], active: false };\n};\n\nconst removeCardFromRivers = (state: CardRiverState, cardID: string): CardRiverState => {\n\tconst riverMakeUps = Object.fromEntries(\n\t\tObject.entries(state.riverMakeUps).map((entry) => [\n\t\t\tentry[0],\n\t\t\t{ ...entry[1], cardIDs: entry[1].cardIDs.filter((id) => id !== cardID) },\n\t\t])\n\t);\n\treturn { ...state, riverMakeUps };\n};\n\nconst cardRiverState = (state = intialState, { type, payload }: { type: string; payload: any }) => {\n\tlet riverMakeUp;\n\tlet riverMakeUps;\n\tswitch (type) {\n\t\tcase display.actionTypes.PAGE_UPDATE:\n\t\t\tlet activeRiver;\n\t\t\tif (!state.riverMakeUps[pageNumberToRiverMakeUpID(payload as number)]) {\n\t\t\t\tactiveRiver = emptyCardRiver(payload as number);\n\t\t\t} else {\n\t\t\t\tactiveRiver = { ...state.riverMakeUps[pageNumberToRiverMakeUpID(payload as number)], active: true };\n\t\t\t}\n\n\t\t\tconst oldRiver = deactivateActiveCardRiver(state);\n\n\t\t\treturn {\n\t\t\t\t...updateStateWithMakeUps(state, activeRiver, oldRiver),\n\t\t\t\tactiveRiverMakeUpID: activeRiver.riverID,\n\t\t\t\tpushToRiverID: activeRiver.riverID,\n\t\t\t};\n\n\t\tcase cards.actionTypes.CARD_PUSH:\n\t\t\triverMakeUp = {\n\t\t\t\t...state.riverMakeUps[state.pushToRiverID],\n\t\t\t\tcardIDs: [...state.riverMakeUps[state.pushToRiverID].cardIDs, (payload as FinalizedCardPayload).card.cardID],\n\t\t\t};\n\t\t\triverMakeUps = { ...state.riverMakeUps };\n\t\t\triverMakeUps[state.pushToRiverID] = riverMakeUp;\n\n\t\t\treturn { ...state, riverMakeUps: riverMakeUps };\n\t\tcase cards.actionTypes.CARD_REMOVE:\n\t\t\treturn removeCardFromRivers(state, payload as string);\n\t\tcase t.RIVER_SHOW_STATE:\n\t\t\treturn { ...state, riverShowState: payload as RiverShowState };\n\t\tcase t.RIVER_PUSH_STATE:\n\t\t\treturn { ...state, pushToRiverID: payload };\n\t\tdefault:\n\t\t\treturn state;\n\t}\n};\n\nexport default cardRiverState;\n","import * as constants from \"./constants\";\nimport * as components from \"./components\";\nimport reducer from \"./reducer\";\nimport * as selectors from \"./selectors\";\nimport * as actions from \"./actions\";\n\nexport default { constants, components, reducer, selectors, actions };\n","import { NAME } from \"./constants\";\nimport { createSelector } from \"reselect\";\nimport { CreationData } from \"./model\";\nimport river from \"../river\";\nimport display from \"../display\";\nimport { SingleOrigin } from \"../cards/model\";\n\nexport const getAll = (state: any) => state[NAME];\n\nexport const getContextMenuState = createSelector(getAll, (state: CreationData) => state.open);\n\nexport const getContextMenuRef = createSelector(getAll, (state: CreationData) => state.menuRef);\n\nexport const getContextMenuQARefs = createSelector(getAll, (state: CreationData) => state.qaRefs);\n\nexport const getCurrentSelectionPosition = createSelector(getAll, (state: CreationData) => state.selectionPosition);\n\nexport const getContextMenuInitData = createSelector(\n\tgetCurrentSelectionPosition,\n\tgetContextMenuState,\n\tgetContextMenuRef,\n\tgetContextMenuQARefs,\n\triver.selectors.getPushToRiverCards,\n\t(position, state, menuRef, qaRefs, riverCards) => {\n\t\treturn { position, state, menuRef, qaRefs, riverCards };\n\t}\n);\n\nexport const getCurrentSelectedString = createSelector(getAll, (state: CreationData) => state.manuallySelectedString);\n\nexport const getCurrentSelectedParent = createSelector(getAll, (state: CreationData) => state.selectedParentSpan);\n\nexport const getCurrentOrigin = createSelector(\n\t(state: any) => state,\n\tdisplay.selectors.getCurrentPage,\n\tgetCurrentSelectedParent,\n\t(state, currentPage, selectedParent): SingleOrigin => {\n\t\treturn {\n\t\t\tspanIndex: display.selectors.getSpanIndex(state, selectedParent as HTMLSpanElement),\n\t\t\tpage: currentPage,\n\t\t};\n\t}\n);\n","import * as t from \"./actionTypes\";\nimport { CardType, CreationType, CardOrigin, QAOrigin, SingleOrigin } from \"../cards/model\";\nimport cards from \"../cards\";\nimport focus from \"../focus\";\nimport { getCurrentSelectedString, getCurrentSelectedParent, getContextMenuState, getCurrentOrigin } from \"./selectors\";\nimport display from \"../display\";\nimport { isNullOrUndefined } from \"util\";\nimport { transformInputOrigin } from \"./services/transformInputOrigin\";\n\nexport const toggleContextMenu = () => {\n\treturn (dispatch: any) => {\n\t\tdispatch({ type: t.TOGGLE_CONTEXT_MENU });\n\t\tdispatch(focus.actions.toggleContextMenuFocus());\n\t};\n};\n\nexport const closeContextMenu = () => {\n\treturn (dispatch: any, getState: Function) => {\n\t\tif (getContextMenuState(getState())) {\n\t\t\tdispatch({ type: t.CLOSE_CONTEXT_MENU });\n\t\t\tdispatch(focus.actions.updateFocus(\"SELECTION\"));\n\t\t}\n\t};\n};\n\nexport const openContextMenu = () => {\n\treturn (dispatch: any) => {\n\t\tdispatch({ type: t.OPEN_CONTEXT_MENU });\n\t\tdispatch(focus.actions.updateFocus(\"SELECTION\"));\n\t};\n};\n\nexport const grabSelectionForContextMenu = (type: CardType, creationType: CreationType, cardID?: string) => {\n\treturn (dispatch: Function, getState: Function) => {\n\t\tdispatch(closeContextMenu());\n\n\t\tconst state = getState();\n\n\t\t//TODO-NICE: think of a way to make this intuitive\n\t\t//const updateType = type === \"Q-A\" ? \"REPLACE\" : \"APPEND\";\n\t\tconst updateType = \"REPLACE\";\n\t\tconst isUpdate = cardID !== undefined;\n\n\t\t// this should be from the document\n\t\tconst selectedString = getCurrentSelectedString(state);\n\t\tconst selectedParent = getCurrentSelectedParent(state);\n\n\t\t// always overwrite origin, even if isUpdate, because updateType==replace\n\t\tconst origin: CardOrigin | undefined = selectedParent ? getCurrentOrigin(state) : undefined;\n\n\t\tif (isUpdate) {\n\t\t\tdispatch(cards.actions.updateCardContent(selectedString, cardID as string, creationType, updateType, origin));\n\t\t} else {\n\t\t\tdispatch(cards.actions.pushCardContent(selectedString, creationType, updateType, type, origin));\n\t\t}\n\t};\n};\n\nexport const hasNonEmptyOrigin = (origin?: CardOrigin) =>\n\t!!origin &&\n\t(!isNullOrUndefined((origin as SingleOrigin).spanIndex) ||\n\t\t!isNullOrUndefined((origin as QAOrigin).a?.spanIndex) ||\n\t\t!isNullOrUndefined((origin as QAOrigin).q?.spanIndex));\n\nexport const grabSelectionForSourceMenu = (\n\ttype: CardType,\n\tcreationType: CreationType,\n\tsourceField: CreationType,\n\torigin?: CardOrigin,\n\tcardID?: string\n) => {\n\treturn (dispatch: Function, getState: Function) => {\n\t\t// this is called, after the source-card has been set, the SourceMenu has been opened and been clicked\n\t\tconst state = getState();\n\n\t\t// close SourceMenu by resetting SourceCard\n\t\tdispatch(cards.actions.resetSourceCard());\n\n\t\tconst updateType = \"REPLACE\";\n\t\tconst isUpdate = cardID !== undefined;\n\n\t\t//  this should be from the SourceCard in which the extract button has been clicked\n\t\t//\tthe SourceCard can or can not have an origin\n\t\tconst sourceHasNonEmptyOrigin = hasNonEmptyOrigin(origin);\n\t\tconst newOrigin = sourceHasNonEmptyOrigin\n\t\t\t? transformInputOrigin(\n\t\t\t\t\torigin as CardOrigin,\n\t\t\t\t\tsourceField,\n\t\t\t\t\tcreationType,\n\t\t\t\t\tisUpdate ? (cards.selectors.getCards(state)[cardID as string].origin as CardOrigin) : undefined\n\t\t\t  )\n\t\t\t: undefined;\n\t\tconst selectedString = getCurrentSelectedString(state);\n\n\t\t//TODO-NICE: untangle the types so that the as CardOrigin is not necessary in the dispatch,\n\t\t//maybe merge content and origin to avoid two object hierarchies?\n\t\tif (isUpdate) {\n\t\t\tdispatch(\n\t\t\t\tcards.actions.updateCardContent(\n\t\t\t\t\tselectedString,\n\t\t\t\t\tcardID as string,\n\t\t\t\t\tcreationType,\n\t\t\t\t\tupdateType,\n\t\t\t\t\tnewOrigin as CardOrigin\n\t\t\t\t)\n\t\t\t);\n\t\t} else {\n\t\t\tdispatch(cards.actions.pushCardContent(selectedString, creationType, updateType, type, newOrigin as CardOrigin));\n\t\t}\n\t};\n};\n\nexport const updateManuallySelectedString = (str: string) => {\n\treturn { type: t.SELECTED_STRING, payload: str };\n};\n\nexport const resetManuallySelectedString = () => {\n\treturn updateManuallySelectedString(\"\");\n};\n\nexport const selectedParent = (span: null | HTMLSpanElement) => {\n\treturn { type: t.SELECTED_PARENT, payload: span };\n};\n\nexport const updateSelectionPosition = (x: number, y: number) => {\n\treturn { type: t.SELECTION_POSITION, payload: { x, y } };\n};\n","import { CreationType, CardOrigin, QAOrigin } from \"../../cards/model\";\nimport { isNullOrUndefined } from \"util\";\n\n//TODO-NICE: make this non-redundant, but for now it works\n\nexport const transformInputOrigin = (\n\tsourceOrigin: CardOrigin,\n\tsourceField: CreationType,\n\tcreationType: CreationType,\n\tgoalOrigin?: CardOrigin\n) => {\n\tif (!goalOrigin) {\n\t\tif (sourceField === creationType) return sourceOrigin;\n\n\t\tif (sourceField === \"NOTE\") {\n\t\t\t// this means SingleOrigin\n\t\t\treturn { q: {}, a: {}, [creationType === \"Q\" ? \"q\" : \"a\"]: sourceOrigin };\n\t\t}\n\n\t\tif (creationType === \"NOTE\") {\n\t\t\t//this means we need to transfrom QAOrigin to SingleOrigin\n\t\t\treturn { ...(sourceOrigin as QAOrigin)[sourceField === \"Q\" ? \"q\" : \"a\"] };\n\t\t}\n\n\t\t// swap cases\n\t\tif (creationType === \"Q\") {\n\t\t\treturn { q: (sourceOrigin as QAOrigin).a, a: {} };\n\t\t} else {\n\t\t\t//A\n\t\t\treturn { a: (sourceOrigin as QAOrigin).q, q: {} };\n\t\t}\n\t} else {\n\t\tif (sourceField === creationType) return { ...goalOrigin, ...sourceOrigin };\n\n\t\tif (sourceField === \"NOTE\" && !isNullOrUndefined((goalOrigin as QAOrigin).q)) {\n\t\t\t// this means SingleOrigin to QAOrigin\n\t\t\treturn { ...goalOrigin, [creationType === \"Q\" ? \"q\" : \"a\"]: sourceOrigin };\n\t\t}\n\n\t\tif (creationType === \"NOTE\") {\n\t\t\t//this means we need to transfrom QAOrigin to SingleOrigin\n\t\t\treturn { ...(sourceOrigin as QAOrigin)[sourceField === \"Q\" ? \"q\" : \"a\"] };\n\t\t}\n\n\t\t// swap cases\n\t\tif (creationType === \"Q\") {\n\t\t\treturn { q: (sourceOrigin as QAOrigin).a, a: (goalOrigin as QAOrigin).a };\n\t\t} else {\n\t\t\t//A\n\t\t\treturn { a: (sourceOrigin as QAOrigin).q, q: (goalOrigin as QAOrigin).q };\n\t\t}\n\t}\n};\n","import * as t from \"./actionTypes\";\nimport { CreationData } from \"./model\";\nimport { createRef } from \"react\";\nimport { CardPayload } from \"../cards/model\";\nimport cards from \"../cards\";\n\nconst initialState: CreationData = {\n\topen: false,\n\tmenuRef: createRef(),\n\tqaRefs: [createRef(), createRef()],\n\tmanuallySelectedString: \"\",\n\tselectedParentSpan: null,\n\tselectionPosition: { x: 0, y: 0 },\n};\n\nconst creationData = (state = initialState, { type, payload }: { type: string; payload: any }): CreationData => {\n\tswitch (type) {\n\t\tcase t.TOGGLE_CONTEXT_MENU:\n\t\t\treturn { ...state, open: !state.open };\n\t\tcase t.CLOSE_CONTEXT_MENU:\n\t\t\treturn { ...state, open: false };\n\t\tcase t.OPEN_CONTEXT_MENU:\n\t\t\treturn { ...state, open: true };\n\t\tcase cards.actionTypes.CARD_PUSH:\n\t\t\t//TODO-NICE: reliance on order of refs (needs to be the same as order of qaRefs) and coupling to the fact that a new card was pushed\n\t\t\t// might need to change if I allow moving the cards\n\t\t\t//TODO-NICE: no support for multiple rivers\n\t\t\tif ((payload as CardPayload).card.type === \"Q-A\") return { ...state, qaRefs: [...state.qaRefs, createRef()] };\n\t\t\treturn state;\n\t\tcase t.SELECTED_STRING:\n\t\t\treturn { ...state, manuallySelectedString: payload as string };\n\t\tcase t.SELECTED_PARENT:\n\t\t\treturn { ...state, selectedParentSpan: payload };\n\t\tcase t.SELECTION_POSITION:\n\t\t\treturn { ...state, selectionPosition: payload };\n\t\tdefault:\n\t\t\treturn state;\n\t}\n};\n\nexport default creationData;\n","import React, { RefObject } from \"react\";\nimport NestedMenuItem from \"material-ui-nested-menu-item\";\nimport { MenuItem } from \"@material-ui/core\";\nimport { CardConfig, CardType, CreationType } from \"../../cards/model\";\n\ntype dispatchRiver = (type: CardType, creationType: CreationType, cardID?: string | undefined) => void;\n\nconst SingleOptionItem = ({ cardConfig, dispatchRiver }: { cardConfig: CardConfig; dispatchRiver: dispatchRiver }) => (\n\t<MenuItem\n\t\tonClick={() => {\n\t\t\tdispatchRiver(cardConfig.type, \"NOTE\", cardConfig.cardID);\n\t\t}}\n\t>\n\t\t{cardConfig.type}\n\t</MenuItem>\n);\n\nconst QAOptionItem = ({\n\tcardConfig,\n\tdispatchRiver,\n\tqaRef,\n}: {\n\tcardConfig: CardConfig;\n\tdispatchRiver: dispatchRiver;\n\tqaRef: RefObject<any> | undefined;\n}) => (\n\t<NestedMenuItem label=\"Q-A\" parentMenuOpen={true}>\n\t\t<MenuItem\n\t\t\tref={qaRef}\n\t\t\tonClick={() => {\n\t\t\t\tdispatchRiver(\"Q-A\", \"Q\", cardConfig.cardID);\n\t\t\t}}\n\t\t>\n\t\t\tQ\n\t\t</MenuItem>\n\t\t<MenuItem\n\t\t\tonClick={() => {\n\t\t\t\tdispatchRiver(\"Q-A\", \"A\", cardConfig.cardID);\n\t\t\t}}\n\t\t>\n\t\t\tA\n\t\t</MenuItem>\n\t</NestedMenuItem>\n);\n\nexport const CardConfigItem = ({\n\tcardConfig,\n\tdispatchRiver,\n\tqaRef,\n}: {\n\tcardConfig: CardConfig;\n\tdispatchRiver: dispatchRiver;\n\tqaRef?: RefObject<any>;\n}) => {\n\tswitch (cardConfig.type) {\n\t\tcase \"Q-A\":\n\t\t\treturn <QAOptionItem cardConfig={cardConfig} dispatchRiver={dispatchRiver} qaRef={qaRef}></QAOptionItem>;\n\t\tdefault:\n\t\t\treturn <SingleOptionItem cardConfig={cardConfig} dispatchRiver={dispatchRiver}></SingleOptionItem>;\n\t}\n};\n","import React, { RefObject } from \"react\";\nimport Menu from \"@material-ui/core/Menu\";\nimport { MenuItem, Divider } from \"@material-ui/core\";\nimport { useDispatch, connect } from \"react-redux\";\nimport { getContextMenuInitData } from \"../selectors\";\nimport { grabSelectionForContextMenu } from \"../actions\";\nimport { incrementer } from \"../../../shared/utils\";\nimport { CardConfig, CardType, CreationType } from \"../../cards/model\";\nimport { CardConfigItem } from \"./CardConfigItem\";\n\nconst NewQACard = ({ onClick }: any) => <MenuItem onClick={onClick}>New: Q-A</MenuItem>;\nconst NewNoteCard = ({ onClick }: any) => <MenuItem onClick={onClick}>New: Note</MenuItem>;\n\nfunction ContextMenu({\n\tposition,\n\tstate,\n\tmenuRef,\n\tqaRefs,\n\triverCards,\n}: {\n\tposition: { x: number; y: number };\n\tstate: boolean;\n\tmenuRef: RefObject<any>;\n\tqaRefs: RefObject<any>[];\n\triverCards: CardConfig[];\n}) {\n\tconst dispatch = useDispatch();\n\tconst openState = state;\n\tconst dispatchRiver = (type: CardType, creationType: CreationType, cardID?: string) => {\n\t\tdispatch(grabSelectionForContextMenu(type, creationType, cardID));\n\t};\n\n\tconst increment = incrementer();\n\tconst qaRefIndex = incrementer();\n\n\tconst anchorPosition = openState ? { top: position.y, left: position.x } : undefined;\n\n\t// TODO-NICE: need to check for state before rendering MenuItems,\n\t// otherwise it shows up for a split-second when switching the menu off after adding to the river\n\t// weird Race Condition even if I dispatch closeContextMenu first?\n\treturn (\n\t\t<Menu\n\t\t\tref={openState ? menuRef : null}\n\t\t\tkeepMounted\n\t\t\topen={openState}\n\t\t\tanchorReference=\"anchorPosition\"\n\t\t\tanchorPosition={anchorPosition}\n\t\t>\n\t\t\t{openState &&\n\t\t\t\triverCards.map((cardConfig) => (\n\t\t\t\t\t<CardConfigItem\n\t\t\t\t\t\tcardConfig={cardConfig}\n\t\t\t\t\t\tdispatchRiver={dispatchRiver}\n\t\t\t\t\t\tkey={increment()}\n\t\t\t\t\t\tqaRef={cardConfig.type === \"Q-A\" ? qaRefs[qaRefIndex()] : undefined}\n\t\t\t\t\t></CardConfigItem>\n\t\t\t\t))}\n\t\t\t{openState && riverCards.length > 0 && <Divider />}\n\n\t\t\t{openState && [\n\t\t\t\t<NewQACard\n\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\tdispatchRiver(\"Q-A\", \"Q\");\n\t\t\t\t\t}}\n\t\t\t\t></NewQACard>,\n\t\t\t\t<NewNoteCard\n\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\tdispatchRiver(\"Note\", \"NOTE\");\n\t\t\t\t\t}}\n\t\t\t\t></NewNoteCard>,\n\t\t\t]}\n\t\t</Menu>\n\t);\n}\n\nexport const ContextMenuContainer = connect(getContextMenuInitData)(ContextMenu);\n","import React, { RefObject } from \"react\";\nimport Menu from \"@material-ui/core/Menu\";\nimport { MenuItem, Divider } from \"@material-ui/core\";\nimport { useDispatch, useSelector, connect } from \"react-redux\";\nimport { getContextMenuInitData } from \"../selectors\";\nimport { grabSelectionForSourceMenu } from \"../actions\";\nimport { incrementer } from \"../../../shared/utils\";\nimport { CardConfig, CardType, CreationType, SourceCard } from \"../../cards/model\";\nimport cards from \"../../cards\";\nimport { CardConfigItem } from \"./CardConfigItem\";\n\nconst NewQACard = ({ onClick }: any) => <MenuItem onClick={onClick}>New: Q-A</MenuItem>;\nconst NewNoteCard = ({ onClick }: any) => <MenuItem onClick={onClick}>New: Note</MenuItem>;\n\nfunction SourceMenu({\n\tmenuRef,\n\tqaRefs,\n\triverCards,\n}: {\n\tmenuRef: RefObject<any>;\n\tqaRefs: RefObject<any>[];\n\triverCards: CardConfig[];\n}) {\n\tconst dispatch = useDispatch();\n\tconst sourceCard = useSelector(cards.selectors.getSourceCard);\n\tconst openState = !!sourceCard;\n\tconst dispatchRiver = (type: CardType, creationType: CreationType, cardID?: string) => {\n\t\tdispatch(\n\t\t\tgrabSelectionForSourceMenu(\n\t\t\t\ttype,\n\t\t\t\tcreationType,\n\t\t\t\t(sourceCard as SourceCard).sourceField,\n\t\t\t\t(sourceCard as SourceCard).origin,\n\t\t\t\tcardID\n\t\t\t)\n\t\t);\n\t};\n\n\tconst increment = incrementer();\n\tconst qaRefIndex = incrementer();\n\tconst anchorPosition = sourceCard ? { top: sourceCard.y, left: sourceCard.x } : undefined;\n\n\treturn (\n\t\t<Menu\n\t\t\tref={openState ? menuRef : null}\n\t\t\tkeepMounted\n\t\t\topen={openState}\n\t\t\tanchorReference=\"anchorPosition\"\n\t\t\tanchorPosition={anchorPosition}\n\t\t>\n\t\t\t{openState &&\n\t\t\t\triverCards.map((cardConfig) => (\n\t\t\t\t\t<CardConfigItem\n\t\t\t\t\t\tcardConfig={cardConfig}\n\t\t\t\t\t\tdispatchRiver={dispatchRiver}\n\t\t\t\t\t\tkey={increment()}\n\t\t\t\t\t\tqaRef={cardConfig.type === \"Q-A\" ? qaRefs[qaRefIndex()] : undefined}\n\t\t\t\t\t></CardConfigItem>\n\t\t\t\t))}\n\t\t\t{openState && riverCards.length > 0 && <Divider />}\n\n\t\t\t{openState && [\n\t\t\t\t<NewQACard\n\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\tdispatchRiver(\"Q-A\", \"Q\");\n\t\t\t\t\t}}\n\t\t\t\t></NewQACard>,\n\t\t\t\t<NewNoteCard\n\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\tdispatchRiver(\"Note\", \"NOTE\");\n\t\t\t\t\t}}\n\t\t\t\t></NewNoteCard>,\n\t\t\t]}\n\t\t</Menu>\n\t);\n}\n\nexport const SourceMenuContainer = connect(getContextMenuInitData)(SourceMenu);\n","import { getContextMenuRef, getContextMenuQARefs } from \"./selectors\";\n\n// the root div for the menu invisibly covers the whole screen\n// the actual div that is visible is this\nconst baseContextMenuSelector = \"div.MuiPaper-root\";\n\nexport const contextMenuContainsTargetNode = (state: any, event: Event) => {\n\tconst menuRef = getContextMenuRef(state).current;\n\n\t// the nested items are rendered under a different menu\n\t// the current api does not allow access\n\t// so the qa-refs refer to the Q-button\n\t// we check the click against his parent,\n\t// which is the div that contains the Q and A buttons\n\tconst qaRefs = getContextMenuQARefs(state)\n\t\t.map((refObject) => refObject.current)\n\t\t.filter((cur) => !!cur)\n\t\t.map((ref) => ref.parentNode);\n\n\tconst target = event.target as Node;\n\n\tif (menuRef?.querySelector(baseContextMenuSelector)?.contains(target)) return true;\n\n\tfor (const qaRef of qaRefs) {\n\t\tif (qaRef.contains(target)) return true;\n\t}\n\n\treturn false;\n};\n","import * as actions from \"./actions\";\nimport * as constants from \"./constants\";\nimport * as actionTypes from \"./actionTypes\";\nimport reducer from \"./reducer\";\nimport * as selectors from \"./selectors\";\nimport * as components from \"./components\";\nimport * as utils from \"./utils\";\n\nexport default { actions, actionTypes, constants, components, reducer, selectors, utils };\n","import { Dispatch } from \"redux\";\nimport focus from \"../../focus\";\nimport display from \"../../display\";\nimport creation from \"../../creation\";\nimport { UserFocus } from \"../../focus/model\";\n\ntype KeyActionMap = { [key: string]: any };\n\ntype KeyEventDispatcher = (event: KeyboardEvent, dispatch: any, state?: any) => void;\n\nconst keyEventDispatcher = (keyMap: KeyActionMap) => (event: KeyboardEvent, dispatch: any) => {\n\tconst action = keyMap[event.key];\n\tif (action) {\n\t\tevent.preventDefault();\n\t\tdispatch(action);\n\t}\n};\n\nconst pageControlKeyMap: KeyActionMap = {\n\tArrowLeft: display.actions.previousPage(),\n\tArrowRight: display.actions.nextPage(),\n};\n\nconst contextMenuControlKeyMap: KeyActionMap = {\n\tt: creation.actions.toggleContextMenu(),\n};\n\nconst selectionFocusKeyMap = {\n\t...pageControlKeyMap,\n\t...contextMenuControlKeyMap,\n};\n\nconst selectionFocusDispatcher = keyEventDispatcher(selectionFocusKeyMap);\n\nconst contextMenuFocusKeyMap = { ...contextMenuControlKeyMap };\nconst contextMenuFocusDispatcher = keyEventDispatcher(contextMenuFocusKeyMap);\n\nconst doNothing = (event: any, dispatch: any) => {};\n\nconst focusDispatcherMap: { [focus in UserFocus]: KeyEventDispatcher } = {\n\tSELECTION: selectionFocusDispatcher,\n\tCONTEXT_MENU: contextMenuFocusDispatcher,\n\tEDITOR: doNothing,\n\tCONTROL: doNothing,\n\tEDITOR_CONTROL: doNothing,\n};\n\nexport const keyDownControl = (event: KeyboardEvent) => {\n\treturn (dispatch: Dispatch | any, getState: Function) => {\n\t\tconst state = getState();\n\t\tconst userFocus = focus.selectors.getFocus(state);\n\t\tconst dispatcher = focusDispatcherMap[userFocus];\n\n\t\tdispatcher(event, dispatch, state);\n\t};\n};\n","import { connect } from \"react-redux\";\nimport { useEventListener } from \"../hooks/useEventListener\";\nimport { keyDownControl } from \"../services/keyboardControl\";\nimport { mouseDownControl, mouseUpControl } from \"../services/mouseControl\";\n\nfunction Control({\n\tkeyDownControl,\n\tmouseDownControl,\n\tmouseUpControl,\n}: {\n\tkeyDownControl: (event: KeyboardEvent) => void;\n\tmouseDownControl: (event: MouseEvent) => void;\n\tmouseUpControl: (event: MouseEvent) => void;\n}) {\n\tuseEventListener(\"keydown\", keyDownControl);\n\tuseEventListener(\"mousedown\", mouseDownControl);\n\tuseEventListener(\"mouseup\", mouseUpControl);\n\treturn null;\n}\n\nexport const ControlContainer = connect(\n\t() => {\n\t\treturn {};\n\t},\n\t{\n\t\tkeyDownControl,\n\t\tmouseDownControl,\n\t\tmouseUpControl,\n\t}\n)(Control);\n","import creation from \"../../creation\";\nimport focus from \"../../focus\";\nimport cards from \"../../cards\";\nimport river from \"../../river\";\n\nexport const mouseDownControl = (event: MouseEvent) => {\n\treturn (dispatch: any, getState: Function) => {\n\t\tconst state = getState();\n\t\t// the menu-ref is used for all drop-down menus, so this closes all of them\n\t\tconst clickOutSideOfMenu = !creation.utils.contextMenuContainsTargetNode(state, event);\n\t\tif (clickOutSideOfMenu) {\n\t\t\tdispatch(cards.actions.tryResetSourceCard());\n\t\t\tdispatch(creation.actions.closeContextMenu());\n\t\t}\n\t};\n};\n\nexport const mouseUpControl = (event: MouseEvent) => {\n\treturn (dispatch: any, getState: Function) => {\n\t\tconst selection = document.getSelection();\n\t\tif (selection) {\n\t\t\tconst selectedStr = selection.toString();\n\t\t\tif (selectedStr !== \"\") {\n\t\t\t\tconst state = getState();\n\t\t\t\tconst goalCard = cards.selectors.getGoalCard(state);\n\t\t\t\tconst userFocus = focus.selectors.getFocus(state);\n\n\t\t\t\tconst shouldGrab = userFocus === \"EDITOR\" || userFocus === \"SELECTION\";\n\n\t\t\t\tif (goalCard && shouldGrab) {\n\t\t\t\t\t// this is the dispatch for the grab for field button\n\t\t\t\t\t//(which has been pressed before the mouse-up if goalCard is not null), here we actually update the goal card\n\n\t\t\t\t\t//TODO-RC: what if another card is the source? if userFocus === \"EDITOR\" it is from another card\n\t\t\t\t\t//We actually want to copy that origin or get the new origin, if we select from the document\n\t\t\t\t\tdispatch(\n\t\t\t\t\t\tcards.actions.updateCardContent(\n\t\t\t\t\t\t\tselectedStr,\n\t\t\t\t\t\t\tgoalCard.cardID,\n\t\t\t\t\t\t\tgoalCard.creationType,\n\t\t\t\t\t\t\t\"REPLACE\",\n\t\t\t\t\t\t\tgoalCard.origin\n\t\t\t\t\t\t)\n\t\t\t\t\t);\n\t\t\t\t\tdispatch(cards.actions.resetGoalCard());\n\t\t\t\t} else {\n\t\t\t\t\t// this is the dispatch for the ContextMenu\n\t\t\t\t\tif (userFocus === \"SELECTION\") {\n\t\t\t\t\t\t//if the user is focused on the document, the push-to river should always be the active=page-wise river\n\t\t\t\t\t\tdispatch(river.actions.setPushToRiver(river.selectors.getActiveRiverMakeUpID(state)));\n\t\t\t\t\t\tdispatch(creation.actions.selectedParent(selection.anchorNode?.parentNode as HTMLSpanElement));\n\t\t\t\t\t\tdispatch(creation.actions.updateManuallySelectedString(selectedStr));\n\t\t\t\t\t\tdispatch(creation.actions.updateSelectionPosition(event.x, event.y));\n\t\t\t\t\t\tdispatch(creation.actions.openContextMenu());\n\t\t\t\t\t}\n\n\t\t\t\t\t// this is the dispatch to prepare for extraction from card\n\t\t\t\t\tif (userFocus === \"EDITOR\") {\n\t\t\t\t\t\tdispatch(creation.actions.updateManuallySelectedString(selectedStr));\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t};\n};\n","import display from \"../../display\";\nimport river from \"../../river\";\nimport React from \"react\";\nimport { AppBar, Toolbar, Divider } from \"@material-ui/core\";\nimport { useSelector } from \"react-redux\";\n\n//TODO-RC: make dropdown menu (or drawer?) for switching documents (how to make cross-document stapels?), download csv for Anki / json for loading, loading option\n//TODO-RC: save PDF somehow\n//TODO-RC: merge tabs with controlbar\nexport const ControlBar = () => {\n\tconst totalPages = useSelector(display.selectors.getTotalPages);\n\t//TODO-RC: show active River ID or higlight it in some way? with the mouse-enter pattern this could lead to weird edge cases otherwise\n\treturn (\n\t\t<AppBar position=\"static\">\n\t\t\t<Toolbar variant=\"dense\">\n\t\t\t\t<river.components.ShowRiverButton></river.components.ShowRiverButton>\n\t\t\t\t<display.components.ShowMaterialButton></display.components.ShowMaterialButton>\n\t\t\t\t<Divider orientation=\"vertical\" flexItem />\n\t\t\t\t{totalPages && <display.components.PageChooser></display.components.PageChooser>}\n\t\t\t\t{totalPages && <display.components.PreviousButton></display.components.PreviousButton>}\n\t\t\t\t{totalPages && <display.components.NextButton></display.components.NextButton>}\n\t\t\t</Toolbar>\n\t\t</AppBar>\n\t);\n};\n","import * as components from \"./components\";\n\nexport default { components };\n","import React, { useState, ChangeEvent } from \"react\";\nimport Grid from \"@material-ui/core/Grid\";\nimport { withSize } from \"react-sizeme\";\nimport Paper from \"@material-ui/core/Paper\";\nimport display from \"../modules/display\";\nimport control from \"../modules/control\";\nimport river from \"../modules/river\";\nimport creation from \"../modules/creation\";\nimport focus from \"../modules/focus\";\nimport { AppBar, Tabs, Tab } from \"@material-ui/core\";\nimport { useDispatch, useSelector } from \"react-redux\";\n\n//TODO-RC: on top of SummaryRiver make field for navigating the river (jumping to sub-river, maybe also in sub-river for jumping around?)\n//TODO-RC: make way for me to upload and download cards so I can prepare the user-study\n\n//TODO-NICE: make River-View, where you can just see one card and can make it smaller? Maybe just button to zoom \"in\" / just seeing the current river\n//TODO-NICE: mark Origin-Span or maybe rect over whole page-section?\n//TODO-NICE: make reconciliation algorithm for origin when new PDF versions come out\n\nconst ReaderSceneRiverColumn = ({ hidden }: any) => {\n\treturn (\n\t\t<Grid\n\t\t\titem\n\t\t\tstyle={{\n\t\t\t\twidth: \"38%\",\n\t\t\t}}\n\t\t\thidden={hidden}\n\t\t>\n\t\t\t<river.components.ActiveCardRiver></river.components.ActiveCardRiver>\n\t\t</Grid>\n\t);\n};\n\nfunction ReaderSceneMaterialColumn({ size, hidden }: any) {\n\tconst dispatch = useDispatch();\n\n\tconst [elevation, setElevation] = useState(3);\n\n\treturn (\n\t\t<Grid\n\t\t\titem\n\t\t\tstyle={{\n\t\t\t\twidth: \"60%\",\n\t\t\t}}\n\t\t\tonMouseEnter={() => {\n\t\t\t\tdispatch(focus.actions.tryUpdateFocus(\"SELECTION\"));\n\t\t\t\tsetElevation(20);\n\t\t\t}}\n\t\t\tonMouseLeave={() => {\n\t\t\t\tsetElevation(3);\n\t\t\t}}\n\t\t\thidden={hidden}\n\t\t>\n\t\t\t<Paper elevation={elevation}>\n\t\t\t\t<display.components.PDFDocumentContainer parentSize={size}></display.components.PDFDocumentContainer>\n\t\t\t\t<display.components.PDFUploadContainer></display.components.PDFUploadContainer>\n\t\t\t</Paper>\n\t\t</Grid>\n\t);\n}\n\nconst ReaderSceneMaterialColumnWithSize = withSize({ monitorHeight: true, noPlaceholder: true })(\n\tReaderSceneMaterialColumn\n);\n\n//TODO: make show/hide depdendant on tab, also Page choice, control-bar dependant on tab\n\nexport function ReaderScene() {\n\tconst dispatch = useDispatch();\n\n\tconst displayFocus = useSelector(focus.selectors.getDisplayFocus);\n\tconst value = displayFocus === \"ACTIVE_RIVER\" ? 0 : 1;\n\n\tconst handleChange = (_: ChangeEvent<{}>, newValue: number) => {\n\t\tdispatch(\n\t\t\tnewValue === 0\n\t\t\t\t? focus.actions.updateDisplayFocus(\"ACTIVE_RIVER\")\n\t\t\t\t: focus.actions.updateDisplayFocus(\"SUMMARY_RIVER\")\n\t\t);\n\t};\n\n\tconst showMaterial = useSelector(display.selectors.displayStatusIsShow);\n\tconst showRiver = useSelector(river.selectors.riverShowStateIsShow);\n\n\treturn (\n\t\t<div>\n\t\t\t<control.components.ControlContainer></control.components.ControlContainer>\n\t\t\t<Grid container justify=\"center\" direction=\"column\" alignItems=\"stretch\" spacing={1}>\n\t\t\t\t<Grid\n\t\t\t\t\titem\n\t\t\t\t\tonMouseEnter={() => {\n\t\t\t\t\t\tdispatch(focus.actions.tryUpdateFocus(\"CONTROL\"));\n\t\t\t\t\t}}\n\t\t\t\t>\n\t\t\t\t\t<AppBar position=\"static\">\n\t\t\t\t\t\t<Tabs value={value} onChange={handleChange}>\n\t\t\t\t\t\t\t<Tab label=\"ActiveRiver\" />\n\t\t\t\t\t\t\t<Tab label=\"SummaryRiver\" />\n\t\t\t\t\t\t</Tabs>\n\t\t\t\t\t</AppBar>\n\t\t\t\t\t<control.components.ControlBar></control.components.ControlBar>\n\t\t\t\t</Grid>\n\n\t\t\t\t<Grid item hidden={value !== 0}>\n\t\t\t\t\t<Grid container justify=\"space-around\" direction=\"row\" alignItems=\"stretch\">\n\t\t\t\t\t\t<ReaderSceneRiverColumn hidden={!showRiver}></ReaderSceneRiverColumn>\n\t\t\t\t\t\t<ReaderSceneMaterialColumnWithSize hidden={!showMaterial}></ReaderSceneMaterialColumnWithSize>\n\t\t\t\t\t</Grid>\n\t\t\t\t</Grid>\n\t\t\t\t<Grid item hidden={value !== 1}>\n\t\t\t\t\t<river.components.SummaryRiver></river.components.SummaryRiver>\n\t\t\t\t</Grid>\n\t\t\t</Grid>\n\t\t\t<creation.components.SourceMenuContainer></creation.components.SourceMenuContainer>\n\t\t\t<creation.components.ContextMenuContainer></creation.components.ContextMenuContainer>\n\t\t</div>\n\t);\n}\n","import { createStore } from \"redux\";\nimport { applyMiddleware } from \"redux\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport thunk from \"redux-thunk\";\nimport { combineReducers } from \"redux\";\nimport focus from \"./modules/focus\";\nimport creation from \"./modules/creation\";\nimport river from \"./modules/river\";\nimport display from \"./modules/display\";\nimport cards from \"./modules/cards\";\nimport { persistStore, persistReducer, createTransform } from \"redux-persist\";\nimport { CreationData } from \"./modules/creation/model\";\nimport { createRef } from \"react\";\nimport { DisplayData } from \"./modules/display/model\";\nimport storage from \"redux-persist/lib/storage\"; // defaults to localStorage for web\n\nconst rootReducer = combineReducers({\n\t[focus.constants.NAME]: focus.reducer,\n\t[creation.constants.NAME]: creation.reducer,\n\t[river.constants.NAME]: river.reducer,\n\t[display.constants.NAME]: display.reducer,\n\t[cards.constants.NAME]: cards.reducer,\n});\n\nconst stateSanitizer = (state: any) => {\n\treturn state.displayData.pdf ? { ...state, displayData: { ...state.displayData, pdf: \"PDF_FILE_IS_HERE\" } } : state;\n};\n\nconst creationTransform = createTransform(\n\t(inboundState: CreationData) => {\n\t\treturn { ...inboundState, menuRef: null, qaRefs: inboundState.qaRefs.map((_) => null), selectedParentSpan: null };\n\t},\n\t(outboundState): CreationData => {\n\t\treturn { ...outboundState, menuRef: createRef(), qaRefs: outboundState.qaRefs.map((_) => createRef()) };\n\t},\n\t{ whitelist: [creation.constants.NAME] }\n);\n\n//TODO-NICE: find way to save PDF in browser, maybe manually use indexeddb and use that in transform?\n// const reader = new FileReaderSync();\n\n// function readFileAsync(file: File) {\n// \treturn new Promise((resolve) => {\n// \t\treader.onload = () => {\n// \t\t\tresolve(reader.result);\n// \t\t};\n// \t\treader.onerror = () => resolve(null);\n\n// \t\treader.readAsDataURL(file);\n// \t});\n// }\n\nconst displayTransform = createTransform(\n\t(inboundState: DisplayData) => {\n\t\tlet pdf = null;\n\t\t// if (inboundState.pdf) {\n\t\t// \tpdf = await readFileAsync(inboundState.pdf);\n\t\t// }\n\t\tconst result = { ...inboundState, documentRef: null, materialData: null, pdf };\n\t\treturn result;\n\t},\n\t(outboundState): DisplayData => {\n\t\treturn {\n\t\t\t...outboundState,\n\t\t\tpdf: undefined,\n\t\t\tdocumentRef: createRef(),\n\t\t\tmaterialData: { materialDataTimeStamp: -Infinity },\n\t\t};\n\t},\n\t{ whitelist: [display.constants.NAME] }\n);\n\nconst persistConfig = {\n\tkey: \"root\",\n\tstorage, //: storage(\"ClayMemory\"),\n\ttransforms: [creationTransform, displayTransform],\n};\n\nconst persistedReducer = persistReducer(persistConfig, rootReducer);\n\nconst composeEnhancers = composeWithDevTools({ stateSanitizer });\nconst enhancer = composeEnhancers(applyMiddleware(thunk));\n\nexport const store = createStore(persistedReducer, enhancer);\n\nexport const persistor = persistStore(store);\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { ReaderScene } from \"./scenes/ReaderScene\";\nimport { Provider } from \"react-redux\";\nimport { store, persistor } from \"./store\";\nimport { PersistGate } from \"redux-persist/es/integration/react\";\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<Provider store={store}>\n\t\t\t<PersistGate loading={null} persistor={persistor}>\n\t\t\t\t<ReaderScene></ReaderScene>\n\t\t\t</PersistGate>\n\t\t</Provider>\n\t</React.StrictMode>,\n\tdocument.getElementById(\"root\")\n);\n","function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 71;"],"sourceRoot":""}