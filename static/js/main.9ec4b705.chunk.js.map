{"version":3,"sources":["modules/display/constants.ts","modules/display/actionTypes.ts","modules/display/selectors.ts","shared/utils.ts","modules/display/services/span.ts","modules/display/services/materialData.ts","modules/display/actions.ts","modules/display/components/NavigationButtons.tsx","modules/display/components/ShowMaterialButton.tsx","modules/display/components/PageChooser/PageChooser.tsx","modules/focus/constants.ts","modules/focus/actionTypes.ts","modules/focus/selectors.ts","modules/focus/actions.ts","modules/focus/reducer.ts","modules/focus/index.ts","modules/cards/services/config.ts","modules/cards/constants.ts","modules/cards/actionTypes.ts","modules/cards/selectors.ts","modules/cards/actions.ts","modules/cards/reducer.ts","modules/cards/index.ts","modules/display/components/PDFDocument/PDFDocument.tsx","modules/display/components/MaterialDisplayColumn.tsx","modules/display/reducer.ts","modules/display/index.ts","modules/river/constants.ts","modules/river/selectors.ts","modules/river/components/CardRiver/HybridCardField.tsx","modules/river/components/CardRiver/Buttons/DeleteCardButton.tsx","modules/river/components/CardRiver/Buttons/JumpToOriginButton.tsx","modules/river/components/CardRiver/Buttons/GrabForFieldButton.tsx","modules/river/components/CardRiver/Card.tsx","modules/river/components/CardRiver/toCardGridItemsWithDividers.tsx","modules/river/actionTypes.ts","modules/river/actions.ts","modules/river/components/CardRiver/Buttons/AddNoteButton.tsx","modules/river/components/CardRiver/Buttons/AddQAButton.tsx","modules/river/components/CardRiver/CardRiverAccordion.tsx","modules/river/components/CardRiver/ChildCardRiver.tsx","modules/river/model.ts","modules/river/components/SummaryRiver/SummaryRiver.tsx","modules/river/components/SummaryRiver/SummaryRiverView.tsx","modules/river/components/ActiveRiver/ActiveCardRiver.tsx","modules/river/components/ActiveRiver/ActiveRiverColumn.tsx","modules/river/components/ActiveRiver/ActiveRiverView.tsx","modules/river/components/RiverContentFormGroup.tsx","modules/river/reducer.ts","modules/river/index.ts","modules/control/constants.ts","modules/control/selectors.ts","modules/control/actionTypes.ts","modules/control/actions.ts","modules/control/hooks/useEventListener.tsx","modules/creation/constants.ts","modules/creation/actionTypes.ts","modules/creation/selectors.ts","modules/creation/services/transformInputOrigin.ts","modules/creation/actions.ts","modules/creation/reducer.ts","modules/creation/components/CardItems.tsx","modules/creation/components/NewButtons.tsx","modules/creation/components/ContextMenu.tsx","modules/creation/components/SelectionSnackbar.tsx","modules/creation/utils.ts","modules/creation/index.ts","modules/control/services/keyboardControl.ts","modules/control/components/Control.tsx","modules/control/services/mouseControl.ts","modules/control/components/ShowRiverButton.tsx","modules/control/components/Options.tsx","modules/control/components/ControlBar.tsx","modules/control/reducer.ts","modules/control/index.ts","scenes/ReaderScene.tsx","store.ts","index.tsx","../node_modules/pdfjs-dist/build sync"],"names":["NAME","PDF_UPLOADED","MATERIAL_LOADED","DISPLAY_STATUS","PAGE_UPDATE","ZOOM_QUEUE","MATERIAL_DATA","getAll","state","getPDF","createSelector","pdf","getPDFName","pdfName","getRenderCritialData","currentPage","documentRef","getTotalPages","totalPages","getCurrentPage","getPageControlData","getDocumentRef","getMaterialData","materialData","getTimeStamp","materialDataTimeStamp","getMaterialSpans","materialSpans","getSpanIndex","span","indexOf","getMaterialBoundingRects","materialBoundingRects","getDataExists","timestamp","getDisplayStatus","displayStatus","displayStatusIsShow","status","getZoomQueue","zoomQueue","incrementer","counter","curCounter","expandSpan","rect","getBoundingClientRect","container","startingSpans","Array","from","querySelectorAll","length","expandedSpans","spans","boundingRects","exSpan","push","splitExpandedSpans","map","expandSpans","sort","exSpan2","y","pdfUpload","type","t","payload","materialUploaded","event","dispatch","files","target","materialLoaded","tryInterval","tries","ms","func","increment","timeout","setInterval","clearInterval","captureMaterialData","getState","current","startTime","Date","now","curMaterialGroupData","emptyZoomQueue","setPage","page","pageCorrections","newPage","movePage","nextPage","previousPage","toggleDisplayState","displayState","setZoomQueue","spanIndex","zoomToCardOrigin","originSpan","focus","scrollIntoView","behavior","block","inline","PreviousButton","useDispatch","IconButton","onClick","NextButton","ShowMaterialButton","useState","outlined","setOutlined","nonDigitRegEx","PageChooser","useSelector","error","value","toString","userInput","setState","Typography","variant","TextField","onKeyDown","key","preventDefault","submittedValue","parseInt","onChange","possiblePage","trim","match","asInt","validatePageChoice","FOCUS_UPDATE","DISPLAY_FOCUS_UPDATE","getFocus","userFocus","getDisplayFocus","displayFocus","updateFocus","tryUpdateFocus","toggleContextMenuFocus","updateDisplayFocus","initialState","actions","constants","reducer","selectors","actionTypes","updateContentStrFunctions","REPLACE","_","newStr","APPEND","oldStr","creationFunctions","NOTE","oldConfig","partialUpdateFunction","content","Q","q","A","a","contentStringToConfig","contentStr","creationType","updateType","currentCard","createPartialUpdateContentStrFunction","CARD_UPDATE","CARD_PUSH","CARD_REMOVE","CARD_GOAL","CARD_SOURCE","GLOBAL_RESET","cards","getLastCardIDNumber","lastCardIDNumber","getCards","getGoalCard","goalCard","getSourceCard","sourceCard","cardPush","cardPayload","card","cardID","cardUpdate","updateCardContent","contentString","origin","config","pushCardContent","removeCard","setGoalCard","cardConfig","resetGoalCard","setSourceCard","sourceField","trySetSourceCard","resetSourceCard","tryResetSourceCard","intialState","services","cardObj","pdfjs","GlobalWorkerOptions","workerSrc","version","options","cMapUrl","cMapPacked","PDFDocumentContainer","connect","parentSize","file","onLoadSuccess","numPages","inputRef","onItemClick","pageNumber","width","onRenderSuccess","document","forEach","layer","style","top","left","transform","MaterialDisplayColumnWithSize","withSize","monitorHeight","noPlaceholder","size","hidden","elevation","setElevation","Grid","item","onMouseEnter","onMouseLeave","Paper","createRef","pageSpans","Infinity","components","name","getRiverMakeUps","riverMakeUps","getActiveRiverMakeUpID","activeRiverMakeUpID","getPushToRiver","pushToRiverID","getPushToRiverMakeUp","makeUps","id","getActiveRiverMakeUp","getPushToRiverCardIDs","makeUp","cardIDs","getPushToRiverCards","makeUpCardIDs","getActiveRiverCardIDs","getActiveRiverCards","getRiverShowState","riverShowState","riverShowStateIsShow","getHoveredCardData","hoveredCard","field","hoveredField","getLastRiverIDNumber","lastRiverIDNumber","getRiverContentState","riverContentState","HybridCardField","storeValue","saveChanges","rest","mutableValue","multiline","onBlur","DeleteCardButton","JumpToOriginButton","cardOrigin","display","GrabForFieldButton","isGoalCard","borderStyle","border","borderRadius","NoteCard","isHoveredCard","isActiveRiver","undefined","label","backgroundColor","InputLabelProps","color","QACard","direction","spacing","isNullOrUndefined","Card","riverID","GridDivider","Divider","RIVER_SHOW_STATE","RIVER_CONTENT_STATE","RIVER_PUSH_STATE","RIVER_HOVERED_CARD","toggleRiverShowState","setRiverContentState","setPushToRiver","trySetPushToRiver","setHoveredCard","trySetHoveredCard","hoveredCardData","AddNoteButton","AddQAButton","CardRiverAccordion","gridItems","summary","pushToRiver","Accordion","defaultExpanded","AccordionSummary","align","MozUserSelect","WebkitUserSelect","msUserSelect","AccordionDetails","justify","alignItems","ChildCardRiver","riverCards","useMemo","inputCards","filter","reduce","prev","index","arr","toCardGridItemsWithDividers","pageNumberToRiverMakeUpID","SummaryRiver","cardConfigs","Object","values","focusRef","useRef","useEffect","ref","replace","SummaryRiverView","ActiveCardRiver","ActiveRiverColumn","ActiveRiverView","showMaterial","showRiver","GreenCheckbox","withStyles","root","green","checked","props","Checkbox","RiverContentFormGroup","showQAs","showNotes","changeContentState","clickedState","FormGroup","row","FormControlLabel","control","active","emptyCardRiver","updateStateWithMakeUps","updatedState","deactivateActiveCardRiver","removeCardFromRivers","fromEntries","entries","entry","riverMakeUp","activeRiver","oldRiver","getDocumentDB","documentDB","getDocumentNames","db","keys","getDocumentDataSets","getCurrentDBData","river","ARCHIVE_CURRENT_DATA","LOAD_DOCUMENT_DATA_SETS","archiveDBData","dbData","archiveCurrentDBData","fileDownload","require","downloadDBData","documentDataSets","localString","toLocaleString","JSON","stringify","changeDocument","newPDFName","currentPDFName","newDocumentData","loadDocumentDataSets","useEventListener","eventName","handler","savedHandler","eventListener","addEventListener","removeEventListener","TOGGLE_CONTEXT_MENU","CLOSE_CONTEXT_MENU","OPEN_CONTEXT_MENU","SELECTED_STRING","SELECTED_PARENT","SELECTION_POSITION","getContextMenuState","open","getContextMenuRef","menuRef","getContextMenuFullCardsRef","fullCardRef","getContextMenuQARefs","qaRefs","getCurrentSelectionPosition","selectionPosition","getContextMenuInitData","position","getCurrentSelectedString","manuallySelectedString","getCurrentSelectedParent","selectedParentSpan","getCurrentOrigin","selectedParent","transformInputOrigin","sourceOrigin","goalOrigin","toggleContextMenu","closeContextMenu","openContextMenu","grabSelectionForContextMenu","transformedOrigin","isUpdate","selectedString","resetManuallySelectedString","hasNonEmptyOrigin","grabSelectionForSourceMenu","newOrigin","updateManuallySelectedString","str","updateSelectionPosition","x","creationData","noteCardIsEmpty","qaCardIsNotFull","SingleOptionItem","dispatchRiver","MenuItem","QAOptionItem","qaRef","parentMenuOpen","CardConfigItem","NewQACardQ","NewQACardA","NewNoteCard","NewButtons","noteDispatch","qDispatch","aDispatch","ContextMenuContainer","fullCardsRef","openState","qaRefIndex","anchorPosition","nonFullRiverCards","fullRiverCards","Menu","keepMounted","anchorReference","SelectionSnackbar","setOpen","message","Snackbar","anchorOrigin","vertical","horizontal","onClose","reason","action","aria-label","fontSize","contextMenuContainsTargetNode","parentNode","refObject","cur","querySelector","contains","utils","keyEventDispatcher","keyMap","pageControlKeyMap","ArrowLeft","ArrowRight","contextMenuControlKeyMap","creation","doNothing","focusDispatcherMap","SELECTION","CONTEXT_MENU","EDITOR","CONTROL","EDITOR_CONTROL","ControlContainer","keyDownControl","dispatcher","mouseDownControl","mouseUpControl","selection","getSelection","selectedStr","anchorNode","rightClickControl","ShowRiverButton","InputDocument","handleClose","click","accept","InputDataSets","activeDocument","reader","FileReader","readAsText","onload","uploadedDataSets","parse","result","foundDataSet","find","Options","documents","React","anchorEl","setAnchorEl","minWidth","currentTarget","Boolean","ControlBar","AppBar","Toolbar","Tabs","newValue","Tab","orientation","flexItem","useStyles","makeStyles","theme","createStyles","bottom","right","ScrollTop","children","classes","trigger","useScrollTrigger","disableHysteresis","threshold","Zoom","in","anchor","ownerDocument","role","className","ReaderScene","Fab","rootReducer","combineReducers","creationTransform","createTransform","inboundState","outboundState","whitelist","displayTransform","persistConfig","storage","transforms","persistedReducer","persistReducer","enhancer","composeWithDevTools","stateSanitizer","displayData","composeEnhancers","applyMiddleware","thunk","store","createStore","persistor","persistStore","ReactDOM","render","StrictMode","loading","getElementById","webpackEmptyContext","req","e","Error","code","resolve","module","exports"],"mappings":"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","file":"static/js/main.9ec4b705.chunk.js","sourcesContent":["export const NAME = \"displayData\";\n","import { NAME } from \"./constants\";\n\nexport const PDF_UPLOADED = NAME + \"/PDF_UPLOADED\";\nexport const MATERIAL_LOADED = NAME + \"/MATERIAL_LOADED\";\nexport const DISPLAY_STATUS = NAME + \"/DISPLAY_STATUS\";\nexport const PAGE_UPDATE = NAME + \"/PAGE_UPDATE\";\nexport const ZOOM_QUEUE = NAME + \"/ZOOM_QUEUE\";\nexport const MATERIAL_DATA = NAME + \"/MATERIAL_DATA\";\n","import { createSelector } from \"reselect\";\nimport { DisplayData, MaterialData, MaterialGroupData } from \"./model\";\nimport { NAME } from \"./constants\";\n\nexport const getAll = (state: any): DisplayData => state[NAME];\n\nexport const getPDF = createSelector(getAll, (state: DisplayData) => {\n\treturn { pdf: state.pdf ? state.pdf : null };\n});\n\nexport const getPDFName = createSelector(getAll, (state) => state.pdfName);\n\nexport const getRenderCritialData = createSelector(getAll, (state: DisplayData) => {\n\treturn {\n\t\tpdf: state.pdf,\n\t\tcurrentPage: state.currentPage,\n\t\tdocumentRef: state.documentRef,\n\t};\n});\n\nexport const getTotalPages = createSelector(getAll, (state: DisplayData) => state.totalPages);\n\nexport const getCurrentPage = createSelector(getAll, (state: DisplayData) => state.currentPage);\n\nexport const getPageControlData = createSelector(\n\tgetTotalPages,\n\tgetCurrentPage,\n\t(totalPages: number | undefined, currentPage: number) => {\n\t\treturn { currentPage, totalPages };\n\t}\n);\n\nexport const getDocumentRef = createSelector(getAll, (state: DisplayData) => state.documentRef);\n\nexport const getMaterialData = createSelector(getAll, (state: DisplayData) => state.materialData);\n\nexport const getTimeStamp = createSelector(getMaterialData, (state: MaterialData) => state.materialDataTimeStamp);\n\nexport const getMaterialSpans = createSelector(\n\tgetMaterialData as (state: any) => MaterialGroupData,\n\t(state: MaterialGroupData) => state.materialSpans\n);\n\nexport const getSpanIndex = (state: any, span: HTMLSpanElement) => {\n\tconst spans = getMaterialSpans(state);\n\treturn spans.indexOf(span);\n};\n\nexport const getMaterialBoundingRects = createSelector(\n\tgetMaterialData as (state: any) => MaterialGroupData,\n\t(state: MaterialGroupData) => state.materialBoundingRects\n);\n\nexport const getDataExists = createSelector(getTimeStamp, (timestamp) => timestamp > 0);\n\nexport const getDisplayStatus = createSelector(getAll, (state: DisplayData) => state.displayStatus);\n\nexport const displayStatusIsShow = createSelector(getDisplayStatus, (status) => status === \"SHOW\");\n\nexport const getZoomQueue = createSelector(getAll, (state: DisplayData) => state.zoomQueue);\n","export const incrementer = () => {\n\tlet counter = 0;\n\treturn () => {\n\t\tconst curCounter = counter;\n\t\tcounter++;\n\t\treturn curCounter;\n\t};\n};\n","export const splitExpandedSpans = (expandedSpans: ExpandedSpan[]) => {\n\tconst spans = [];\n\tconst boundingRects = [];\n\n\tfor (const exSpan of expandedSpans) {\n\t\tspans.push(exSpan.span);\n\t\tboundingRects.push(exSpan.rect);\n\t}\n\n\treturn { spans, boundingRects };\n};\n\nexport const sortExpandedSpansAccordingToX = (expandedSpans: ExpandedSpan[]) =>\n\texpandedSpans.sort((exSpan, exSpan2) => exSpan.rect.x - exSpan2.rect.x);\n\nexport const sortExpandedSpansAccordingToY = (expandedSpans: ExpandedSpan[]) =>\n\texpandedSpans.sort((exSpan, exSpan2) => exSpan.rect.y - exSpan2.rect.y);\n\ntype ExpandedSpan = { span: HTMLSpanElement; rect: DOMRect };\n\nexport const expandSpans = (spans: HTMLSpanElement[]) => spans.map(expandSpan);\n\nconst expandSpan = (span: HTMLSpanElement): ExpandedSpan => {\n\treturn { span, rect: span.getBoundingClientRect() };\n};\n","import { MaterialGroupData } from \"../model\";\nimport { expandSpans, sortExpandedSpansAccordingToY, splitExpandedSpans } from \"./span\";\n\nexport const materialData = (container: HTMLDivElement): MaterialGroupData | null => {\n\t// assumes all spans inside the document are relevant (potentially multiple pages)\n\tconst startingSpans = Array.from(container.querySelectorAll(\"span\"));\n\tif (startingSpans.length === 0) return null;\n\n\tconst { spans, boundingRects } = splitExpandedSpans(sortExpandedSpansAccordingToY(expandSpans(startingSpans)));\n\n\treturn {\n\t\tmaterialSpans: spans,\n\t\tmaterialBoundingRects: boundingRects,\n\t};\n};\n","import { ChangeEvent, RefObject } from \"react\";\nimport { Dispatch } from \"redux\";\nimport * as t from \"./actionTypes\";\nimport { PageMove, MaterialData } from \"./model\";\nimport { getPageControlData, getDisplayStatus, getZoomQueue, getTimeStamp, getMaterialSpans } from \"./selectors\";\nimport { incrementer } from \"../../shared/utils\";\nimport { materialData } from \"./services/materialData\";\n\nexport const pdfUpload = (pdf: File) => {\n\treturn { type: t.PDF_UPLOADED, payload: pdf };\n};\n\nexport const materialUploaded = (event: ChangeEvent<HTMLInputElement>) => {\n\treturn (dispatch: Dispatch) => {\n\t\tconst files = event.target.files;\n\t\tconst pdf = files ? files[0] : null;\n\t\tif (pdf) dispatch(pdfUpload(pdf));\n\t};\n};\n\nexport const materialLoaded = (totalPages: number) => {\n\treturn { type: t.MATERIAL_LOADED, payload: totalPages };\n};\n\nexport const tryInterval = (tries: number, ms: number, func: () => boolean) => {\n\tconst increment = incrementer();\n\tconst timeout = setInterval(() => {\n\t\tif (increment() > tries) {\n\t\t\tclearInterval(timeout);\n\t\t\treturn;\n\t\t}\n\n\t\tif (func()) clearInterval(timeout);\n\t}, ms);\n};\n\n// text-layer is not really guaranteed to be rendered on render \"success\",\n// so we use this ugly \"try ten times\" approach\nexport function captureMaterialData(documentRef: RefObject<any>) {\n\treturn (dispatch: any, getState: Function) => {\n\t\tconst state = getState();\n\t\tconst container = documentRef.current;\n\t\tif (container) {\n\t\t\t// TODO-NICE: still possibility of race-condition,\n\n\t\t\tconst startTime = Date.now();\n\n\t\t\t// try once before going into intervals (most times once should work)\n\t\t\tconst curMaterialGroupData = materialData(container as HTMLDivElement);\n\t\t\tif (curMaterialGroupData && getTimeStamp(state) < startTime) {\n\t\t\t\tconst payload: MaterialData = {\n\t\t\t\t\t...curMaterialGroupData,\n\t\t\t\t\tmaterialDataTimeStamp: startTime,\n\t\t\t\t};\n\t\t\t\tdispatch({ type: t.MATERIAL_DATA, payload });\n\t\t\t\tdispatch(emptyZoomQueue());\n\t\t\t} else {\n\t\t\t\ttryInterval(10, 20, () => {\n\t\t\t\t\tconst curMaterialGroupData = materialData(container as HTMLDivElement);\n\t\t\t\t\tif (curMaterialGroupData && getTimeStamp(getState()) < startTime) {\n\t\t\t\t\t\tconst payload: MaterialData = {\n\t\t\t\t\t\t\t...curMaterialGroupData,\n\t\t\t\t\t\t\tmaterialDataTimeStamp: startTime,\n\t\t\t\t\t\t};\n\t\t\t\t\t\tdispatch({ type: t.MATERIAL_DATA, payload });\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t}\n\t\t\t\t\treturn false;\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t};\n}\n\n// assumes outside validation/correction\nexport const setPage = (page: number) => {\n\treturn { type: t.PAGE_UPDATE, payload: page };\n};\n\nconst pageCorrections = {\n\tADD: (newPage: number, totalPages: number) => (newPage === totalPages + 1 ? 1 : newPage),\n\tREMOVE: (newPage: number, totalPages: number) => (newPage === 0 ? totalPages : newPage),\n};\n\n//TODO-PERF: maybe hide all rendered pages but not shown instead of re-rendering for faster switching?\nexport const movePage = (type: PageMove) => {\n\treturn (dispatch: Dispatch, getState: Function) => {\n\t\tconst { currentPage, totalPages } = getPageControlData(getState());\n\t\tif (totalPages) {\n\t\t\tswitch (type) {\n\t\t\t\tcase \"NEXT\":\n\t\t\t\t\tdispatch({ type: t.PAGE_UPDATE, payload: pageCorrections[\"ADD\"](currentPage + 1, totalPages) });\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"PREVIOUS\":\n\t\t\t\t\tdispatch({ type: t.PAGE_UPDATE, payload: pageCorrections[\"REMOVE\"](currentPage - 1, totalPages) });\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t};\n};\nexport const nextPage = () => movePage(\"NEXT\");\nexport const previousPage = () => movePage(\"PREVIOUS\");\n\nexport const toggleDisplayState = () => {\n\treturn (dispatch: Dispatch, getState: Function) => {\n\t\tconst displayState = getDisplayStatus(getState()) === \"SHOW\" ? \"HIDE\" : \"SHOW\";\n\n\t\tdispatch({ type: t.DISPLAY_STATUS, payload: displayState });\n\t};\n};\n\nexport const setZoomQueue = (spanIndex: number | null) => {\n\treturn { type: t.ZOOM_QUEUE, payload: spanIndex };\n};\n\nexport const zoomToCardOrigin = (spanIndex: number, page: number) => {\n\treturn (dispatch: Dispatch) => {\n\t\tdispatch(setPage(page));\n\t\tdispatch(setZoomQueue(spanIndex));\n\t};\n};\n\nexport const emptyZoomQueue = () => {\n\treturn (dispatch: Dispatch, getState: Function) => {\n\t\tconst state = getState();\n\t\tconst spanIndex = getZoomQueue(state);\n\t\tif (spanIndex) {\n\t\t\tconst originSpan = getMaterialSpans(state)[spanIndex];\n\t\t\toriginSpan.focus();\n\t\t\toriginSpan.scrollIntoView({ behavior: \"smooth\", block: \"center\", inline: \"center\" });\n\n\t\t\tdispatch(setZoomQueue(null));\n\t\t}\n\t};\n};\n","import React from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { IconButton } from \"@material-ui/core\";\nimport ArrowForwardIosIcon from \"@material-ui/icons/ArrowForwardIos\";\nimport ArrowBackIosIcon from \"@material-ui/icons/ArrowBackIos\";\nimport { nextPage, previousPage } from \"../actions\";\n\nexport const PreviousButton = () => {\n\tconst dispatch = useDispatch();\n\treturn (\n\t\t<IconButton\n\t\t\ttype=\"button\"\n\t\t\tonClick={() => {\n\t\t\t\tdispatch(previousPage());\n\t\t\t}}\n\t\t>\n\t\t\t<ArrowBackIosIcon></ArrowBackIosIcon>\n\t\t</IconButton>\n\t);\n};\n\nexport const NextButton = () => {\n\tconst dispatch = useDispatch();\n\treturn (\n\t\t<IconButton\n\t\t\ttype=\"button\"\n\t\t\tonClick={() => {\n\t\t\t\tdispatch(nextPage());\n\t\t\t}}\n\t\t>\n\t\t\t<ArrowForwardIosIcon></ArrowForwardIosIcon>\n\t\t</IconButton>\n\t);\n};\n","import { useState } from \"react\";\nimport DescriptionOutlinedIcon from \"@material-ui/icons/DescriptionOutlined\";\nimport DescriptionTwoToneIcon from \"@material-ui/icons/DescriptionTwoTone\";\nimport React from \"react\";\nimport { IconButton } from \"@material-ui/core\";\nimport { useDispatch } from \"react-redux\";\nimport { toggleDisplayState } from \"../actions\";\n\nexport const ShowMaterialButton = () => {\n\tconst [outlined, setOutlined] = useState(true);\n\tconst dispatch = useDispatch();\n\n\treturn (\n\t\t<IconButton\n\t\t\ttype=\"button\"\n\t\t\tonClick={() => {\n\t\t\t\tdispatch(toggleDisplayState());\n\t\t\t\tsetOutlined(!outlined);\n\t\t\t}}\n\t\t>\n\t\t\t{outlined ? (\n\t\t\t\t<DescriptionOutlinedIcon></DescriptionOutlinedIcon>\n\t\t\t) : (\n\t\t\t\t<DescriptionTwoToneIcon></DescriptionTwoToneIcon>\n\t\t\t)}\n\t\t</IconButton>\n\t);\n};\n","import React, { useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Typography, TextField } from \"@material-ui/core\";\nimport { setPage } from \"../../actions\";\nimport { getPageControlData } from \"../../selectors\";\n\nconst nonDigitRegEx = /(\\D)/;\n\nexport const validatePageChoice = (possiblePage: string, totalPages: number) => {\n\tif (possiblePage === \"\" || possiblePage.trim().match(nonDigitRegEx) !== null) return false;\n\n\tconst asInt = parseInt(possiblePage);\n\tif (asInt < 1 || totalPages < asInt) return false;\n\n\treturn true;\n};\n\nexport const PageChooser = () => {\n\tconst dispatch = useDispatch();\n\t// parent only renders this component if these values exist\n\tconst { currentPage, totalPages }: { currentPage?: number; totalPages?: number } = useSelector(getPageControlData);\n\n\tconst [state, setState] = useState({\n\t\terror: false,\n\t\tvalue: currentPage?.toString(),\n\t\tuserInput: currentPage?.toString(),\n\t});\n\n\t// with this we can trigger a re-render onChange,\n\t// while making sure that if a new currentPage arrives, we reset the component\n\tif (state.value !== currentPage.toString()) {\n\t\tsetState({ error: false, value: currentPage.toString(), userInput: currentPage.toString() });\n\t}\n\n\treturn (\n\t\t<Typography variant=\"h6\">\n\t\t\t<TextField\n\t\t\t\ttype=\"text\"\n\t\t\t\tvariant=\"filled\"\n\t\t\t\tvalue={state.userInput}\n\t\t\t\tonKeyDown={(event) => {\n\t\t\t\t\tif (event.key === \"Enter\") {\n\t\t\t\t\t\tevent.preventDefault();\n\t\t\t\t\t\tconst submittedValue = (event.target as HTMLFormElement).value;\n\t\t\t\t\t\tif (!state.error) {\n\t\t\t\t\t\t\tdispatch(setPage(parseInt(submittedValue)));\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}}\n\t\t\t\tonChange={(event) => {\n\t\t\t\t\tconst submittedValue = (event.target as HTMLTextAreaElement).value;\n\t\t\t\t\tif (validatePageChoice(submittedValue, totalPages as number)) {\n\t\t\t\t\t\tsetState({ ...state, error: false, userInput: submittedValue });\n\t\t\t\t\t} else {\n\t\t\t\t\t\tsetState({ ...state, error: true, userInput: submittedValue });\n\t\t\t\t\t}\n\t\t\t\t}}\n\t\t\t\terror={state.error}\n\t\t\t/>\n\t\t\tof {totalPages}\n\t\t</Typography>\n\t);\n};\n","export const NAME = \"appFocus\";\n","import { NAME } from \"./constants\";\n\nexport const FOCUS_UPDATE = NAME + \"/FOCUS_UPDATE\";\nexport const DISPLAY_FOCUS_UPDATE = NAME + \"/DISPLAY_FOCUS_UPDATE\";\n","import { createSelector } from \"reselect\";\nimport { NAME } from \"./constants\";\nimport { FocusState } from \"./model\";\n\nexport const getAll = (state: any) => state[NAME];\n\nexport const getFocus = createSelector(getAll, (state: FocusState) => state.userFocus);\n\nexport const getDisplayFocus = createSelector(getAll, (state: FocusState) => state.displayFocus);\n","import * as t from \"./actionTypes\";\nimport { UserFocus, DisplayFocus } from \"./model\";\nimport { Dispatch } from \"redux\";\nimport { getFocus } from \"./selectors\";\n\nexport const updateFocus = (focus: UserFocus) => {\n\treturn { type: t.FOCUS_UPDATE, payload: focus };\n};\n\nexport const tryUpdateFocus = (focus: UserFocus) => {\n\treturn (dispatch: Dispatch, getState: Function) => {\n\t\tif (getFocus(getState()) !== focus) dispatch(updateFocus(focus));\n\t};\n};\n\nexport const toggleContextMenuFocus = () => {\n\treturn (dispatch: Dispatch, getState: Function) => {\n\t\tconst currentFocus = getFocus(getState());\n\t\tswitch (currentFocus) {\n\t\t\tcase \"CONTEXT_MENU\":\n\t\t\t\tdispatch(updateFocus(\"SELECTION\"));\n\t\t\t\tbreak;\n\t\t\tcase \"SELECTION\":\n\t\t\t\tdispatch(updateFocus(\"CONTEXT_MENU\"));\n\t\t\t\tbreak;\n\t\t}\n\t};\n};\n\nexport const updateDisplayFocus = (focus: DisplayFocus) => {\n\treturn { type: t.DISPLAY_FOCUS_UPDATE, payload: focus };\n};\n","import { FocusState, UserFocus, DisplayFocus } from \"./model\";\nimport * as t from \"./actionTypes\";\n\nconst initialState: FocusState = { userFocus: \"CONTROL\", displayFocus: \"ACTIVE_RIVER\" };\n\nconst focus = (state = initialState, { type, payload }: { type: string; payload: any }): FocusState => {\n\tswitch (type) {\n\t\tcase t.FOCUS_UPDATE:\n\t\t\treturn { ...state, userFocus: payload as UserFocus };\n\t\tcase t.DISPLAY_FOCUS_UPDATE:\n\t\t\treturn { ...state, displayFocus: payload as DisplayFocus };\n\t\tdefault:\n\t\t\treturn state;\n\t}\n};\n\nexport default focus;\n","import * as actions from \"./actions\";\nimport * as constants from \"./constants\";\nimport reducer from \"./reducer\";\nimport * as selectors from \"./selectors\";\nimport * as actionTypes from \"./actionTypes\";\n\nexport default { actions, constants, reducer, selectors, actionTypes };\n","import { UpdateType, CardPayloadConfig, CreationType, QACardContent, CardType } from \"../model\";\n\ntype updateContentStrFunction = (oldStr: string, newStr: string) => string;\n\ntype partialUpdateContentStrFunction = (oldStr: string) => string;\n\nconst updateContentStrFunctions: { [key in UpdateType]: updateContentStrFunction } = {\n\tREPLACE: (_: string, newStr: string) => newStr,\n\tAPPEND: (oldStr: string, newStr: string) => oldStr + newStr,\n};\n\nconst createPartialUpdateContentStrFunction = (updateType: UpdateType, newStr: string) => (oldStr: string) =>\n\tupdateContentStrFunctions[updateType](oldStr, newStr);\n\ntype creationFunction = (\n\toldConfig: CardPayloadConfig,\n\tpartialUpdateFunction: partialUpdateContentStrFunction\n) => CardPayloadConfig;\n\nconst defaultCreationFunction: creationFunction = (oldConfig, partialUpdateFunction) => {\n\treturn { ...oldConfig, content: partialUpdateFunction(oldConfig.content as string) };\n};\n\nconst creationFunctions: {\n\t[key in CreationType]: creationFunction;\n} = {\n\tNOTE: defaultCreationFunction,\n\tQ: (oldConfig, partialUpdateFunction) => {\n\t\tconst content = oldConfig.content as QACardContent;\n\t\treturn { ...oldConfig, content: { ...content, q: partialUpdateFunction(content.q) } };\n\t},\n\tA: (oldConfig, partialUpdateFunction) => {\n\t\tconst content = oldConfig.content as QACardContent;\n\t\treturn { ...oldConfig, content: { ...content, a: partialUpdateFunction(content.a) } };\n\t},\n};\n\nexport const contentStringToConfig = (\n\tcontentStr: string,\n\ttype: CardType,\n\tcreationType: CreationType,\n\tupdateType: UpdateType,\n\tcurrentCard?: CardPayloadConfig\n): CardPayloadConfig => {\n\tconst partialUpdateFunction = createPartialUpdateContentStrFunction(updateType, contentStr);\n\tconst isCardUpdate = !!currentCard;\n\treturn isCardUpdate\n\t\t? creationFunctions[creationType](currentCard as CardPayloadConfig, partialUpdateFunction)\n\t\t: creationFunctions[creationType]({ type, content: type === \"Q-A\" ? { q: \"\", a: \"\" } : \"\" }, partialUpdateFunction);\n};\n","export const NAME = \"cards\";\n","import { NAME } from \"./constants\";\n\nexport const CARD_UPDATE = NAME + \"/CARD_UPDATE\";\nexport const CARD_PUSH = NAME + \"/CARD_PUSH\";\nexport const CARD_REMOVE = NAME + \"/CARD_REMOVE\";\nexport const CARD_GOAL = NAME + \"/CARD_GOAL\";\nexport const CARD_SOURCE = NAME + \"/CARD_SOURCE\";\n\n// TODO-NICE: dont know where to put this else, cards is the lowest module\nexport const GLOBAL_RESET = NAME + \"/GLOBAL_RESET\";\n","import { createSelector } from \"reselect\";\nimport { CardsState } from \"./model\";\n\nexport const getAll = (state: any) => state.cards as CardsState;\n\nexport const getLastCardIDNumber = createSelector(getAll, (state) => state.lastCardIDNumber);\n\nexport const getCards = createSelector(getAll, (state: CardsState) => state.cards);\n\nexport const getGoalCard = createSelector(getAll, (state: CardsState) => state.goalCard);\n\nexport const getSourceCard = createSelector(getAll, (state: CardsState) => state.sourceCard);\n","import { CardPayload, FinalizedCardPayload, CreationType, UpdateType, CardType, CardOrigin, CardConfig } from \"./model\";\nimport * as t from \"./actionTypes\";\nimport { Dispatch } from \"redux\";\nimport { getLastCardIDNumber, getCards, getSourceCard } from \"./selectors\";\nimport { contentStringToConfig } from \"./services/config\";\n\nconst createCardID = (lastCardIDNumber: number) => (lastCardIDNumber + 1).toString();\n\nexport const cardPush = (cardPayload: CardPayload) => {\n\treturn (dispatch: Dispatch, getState: Function) => {\n\t\tdispatch({\n\t\t\ttype: t.CARD_PUSH,\n\t\t\tpayload: {\n\t\t\t\t...cardPayload,\n\t\t\t\tcard: { ...cardPayload.card, cardID: createCardID(getLastCardIDNumber(getState())) },\n\t\t\t} as FinalizedCardPayload,\n\t\t});\n\t};\n};\n\nexport const cardUpdate = (card: CardPayload) => {\n\treturn { type: t.CARD_UPDATE, payload: card };\n};\n\nexport const updateCardContent = (\n\tcontentString: string,\n\tcardID: string,\n\tcreationType: CreationType,\n\tupdateType: UpdateType,\n\torigin?: CardOrigin\n) => {\n\treturn (dispatch: Dispatch, getState: Function) => {\n\t\tconst state = getState();\n\n\t\tconst currentCard = getCards(state)[cardID as string];\n\t\tconst config = contentStringToConfig(contentString, currentCard.type, creationType, updateType, currentCard);\n\n\t\tdispatch(\n\t\t\tcardUpdate({\n\t\t\t\tcard: { ...config, origin },\n\t\t\t})\n\t\t);\n\t};\n};\n\nexport const pushCardContent = (\n\tcontentString: string,\n\tcreationType: CreationType,\n\tupdateType: UpdateType,\n\ttype: CardType,\n\torigin?: CardOrigin\n) => {\n\tconst config = contentStringToConfig(contentString, type, creationType, updateType);\n\n\treturn cardPush({ card: { ...config, origin } });\n};\n\nexport const removeCard = (cardID: string) => {\n\treturn { type: t.CARD_REMOVE, payload: cardID };\n};\n\nexport const setGoalCard = (cardConfig: CardConfig, creationType: CreationType) => {\n\treturn { type: t.CARD_GOAL, payload: { ...cardConfig, creationType } };\n};\n\nexport const resetGoalCard = () => {\n\treturn { type: t.CARD_GOAL, payload: null };\n};\n\nexport const setSourceCard = (sourceField: CreationType, origin?: CardOrigin) => {\n\treturn { type: t.CARD_SOURCE, payload: { origin, sourceField } };\n};\n\nexport const trySetSourceCard = (sourceField: CreationType, origin?: CardOrigin) => {\n\treturn (dispatch: Dispatch, getState: Function) => {\n\t\tconst sourceCard = getSourceCard(getState());\n\t\tif (!sourceCard || sourceCard.sourceField !== sourceField || sourceCard.origin !== origin)\n\t\t\tdispatch(setSourceCard(sourceField, origin));\n\t};\n};\n\nexport const resetSourceCard = () => {\n\treturn { type: t.CARD_SOURCE, payload: null };\n};\n\nexport const tryResetSourceCard = () => {\n\treturn (dispatch: Dispatch, getState: Function) => {\n\t\tconst sourceCardExits = getSourceCard(getState()) !== null;\n\t\tif (sourceCardExits) dispatch(resetSourceCard());\n\t};\n};\n","import * as t from \"./actionTypes\";\nimport { CardsState, FinalizedCardPayload } from \"./model\";\nimport { CentralControlCards } from \"../control/model\";\n\nconst intialState: CardsState = {\n\tcards: {\n\t\t\"0\": {\n\t\t\tcardID: \"0\",\n\t\t\ttype: \"Q-A\",\n\t\t\tcontent: { q: \"Was ist der Sinn des Lebens?\", a: \"42\" },\n\t\t},\n\t\t\"1\": {\n\t\t\tcardID: \"1\",\n\t\t\ttype: \"Q-A\",\n\t\t\tcontent: { q: \"Welches Layout macht mehr Sinn?\", a: \"??\" },\n\t\t},\n\t\t\"2\": { cardID: \"2\", type: \"Note\", content: \"Note here\" },\n\t},\n\tlastCardIDNumber: 2,\n\tgoalCard: null,\n\tsourceCard: null,\n};\n\nconst removeCard = (state: CardsState, cardID: string) => {\n\tconst cards = { ...state.cards };\n\n\t// we do not reset the ID counter\n\n\tdelete cards[cardID];\n\n\treturn { ...state, cards };\n};\n\nconst cards = (state = intialState, { type, payload }: { type: string; payload?: any }) => {\n\tlet cardID;\n\tlet cardObj;\n\tswitch (type) {\n\t\tcase t.CARD_PUSH:\n\t\t\tconst lastCardIDNumber = state.lastCardIDNumber + 1;\n\n\t\t\tcardObj = { ...state.cards };\n\t\t\tcardObj[(payload as FinalizedCardPayload).card.cardID] = (payload as FinalizedCardPayload).card;\n\n\t\t\treturn { ...state, cards: cardObj, lastCardIDNumber };\n\t\tcase t.CARD_UPDATE:\n\t\t\tcardID = (payload as FinalizedCardPayload).card.cardID as string;\n\t\t\tcardObj = { ...state.cards };\n\t\t\tcardObj[cardID] = (payload as FinalizedCardPayload).card;\n\n\t\t\treturn { ...state, cards: cardObj };\n\t\tcase t.CARD_REMOVE:\n\t\t\treturn removeCard(state, payload as string);\n\t\tcase t.CARD_GOAL:\n\t\t\treturn { ...state, goalCard: payload };\n\t\tcase t.CARD_SOURCE:\n\t\t\treturn { ...state, sourceCard: payload };\n\t\tcase t.GLOBAL_RESET:\n\t\t\tif (payload) {\n\t\t\t\treturn {\n\t\t\t\t\t...intialState,\n\t\t\t\t\tcards: (payload as CentralControlCards).cards,\n\t\t\t\t\tlastCardIDNumber: (payload as CentralControlCards).lastCardIDNumber,\n\t\t\t\t};\n\t\t\t} else {\n\t\t\t\treturn intialState;\n\t\t\t}\n\t\tdefault:\n\t\t\treturn state;\n\t}\n};\n\nexport default cards;\n","import * as services from \"./services\";\nimport * as constants from \"./constants\";\nimport * as actionTypes from \"./actionTypes\";\nimport * as actions from \"./actions\";\nimport * as selectors from \"./selectors\";\nimport reducer from \"./reducer\";\n\nexport default { services, constants, actionTypes, actions, reducer, selectors };\n","import \"./PDFDocument.css\";\nimport \"./AnnotationLayer.css\";\nimport React, { RefObject } from \"react\";\nimport { pdfjs, Document, Page } from \"react-pdf\";\nimport { connect, useDispatch } from \"react-redux\";\nimport { materialLoaded, setPage, captureMaterialData } from \"../../actions\";\nimport { getRenderCritialData } from \"../../selectors\";\npdfjs.GlobalWorkerOptions.workerSrc = `//cdnjs.cloudflare.com/ajax/libs/pdf.js/${pdfjs.version}/pdf.worker.js`;\n\n//TODO-NICE: implent more pdf-reader functionality, like zoom\n\nfunction removeTextLayerOffset() {\n\tconst textLayers = document.querySelectorAll(\".react-pdf__Page__textContent\");\n\ttextLayers.forEach((layer) => {\n\t\tconst { style }: any = layer;\n\t\tstyle.top = \"0\";\n\t\tstyle.left = \"0\";\n\t\tstyle.transform = \"\";\n\t});\n}\n\nconst options = {\n\tcMapUrl: \"cmaps/\",\n\tcMapPacked: true,\n};\n\nfunction PDFDocument({\n\tparentSize,\n\tpdf,\n\tcurrentPage,\n\tmaterialLoaded,\n\tcaptureMaterialData,\n\tdocumentRef,\n}: {\n\tparentSize: any;\n\tpdf: File | undefined;\n\tcurrentPage: number;\n\tmaterialLoaded: (numPages: number) => void;\n\tcaptureMaterialData: Function;\n\tdocumentRef: RefObject<any>;\n}) {\n\tconst dispatch = useDispatch();\n\treturn (\n\t\t<Document\n\t\t\tfile={pdf}\n\t\t\toptions={options}\n\t\t\tonLoadSuccess={({ numPages }) => {\n\t\t\t\tmaterialLoaded(numPages);\n\t\t\t}}\n\t\t\tinputRef={documentRef}\n\t\t\tonItemClick={({ pageNumber }) => {\n\t\t\t\tdispatch(setPage(parseInt(pageNumber)));\n\t\t\t}}\n\t\t>\n\t\t\t{pdf && (\n\t\t\t\t<Page\n\t\t\t\t\twidth={parentSize.width}\n\t\t\t\t\tpageNumber={currentPage}\n\t\t\t\t\tonRenderSuccess={() => {\n\t\t\t\t\t\tremoveTextLayerOffset();\n\t\t\t\t\t\tcaptureMaterialData(documentRef);\n\t\t\t\t\t}}\n\t\t\t\t/>\n\t\t\t)}\n\t\t</Document>\n\t);\n}\n\nexport const PDFDocumentContainer = connect(getRenderCritialData, {\n\tmaterialLoaded,\n\tcaptureMaterialData,\n})(PDFDocument);\n","import React, { useState } from \"react\";\nimport Grid from \"@material-ui/core/Grid\";\nimport { withSize } from \"react-sizeme\";\nimport Paper from \"@material-ui/core/Paper\";\nimport focus from \"../../focus\";\nimport cards from \"../../cards\";\n\nimport { useDispatch } from \"react-redux\";\nimport { PDFDocumentContainer } from \"./PDFDocument/PDFDocument\";\n\nfunction MaterialDisplayColumn({ size, hidden }: any) {\n\tconst dispatch = useDispatch();\n\n\tconst [elevation, setElevation] = useState(3);\n\n\treturn (\n\t\t<Grid\n\t\t\titem\n\t\t\tstyle={{\n\t\t\t\twidth: \"60%\",\n\t\t\t}}\n\t\t\tonMouseEnter={() => {\n\t\t\t\tdispatch(focus.actions.tryUpdateFocus(\"SELECTION\"));\n\t\t\t\tdispatch(cards.actions.tryResetSourceCard());\n\t\t\t\tsetElevation(20);\n\t\t\t}}\n\t\t\tonMouseLeave={() => {\n\t\t\t\tsetElevation(3);\n\t\t\t}}\n\t\t\thidden={hidden}\n\t\t>\n\t\t\t<Paper elevation={elevation}>\n\t\t\t\t<PDFDocumentContainer parentSize={size}></PDFDocumentContainer>\n\t\t\t</Paper>\n\t\t</Grid>\n\t);\n}\n\nexport const MaterialDisplayColumnWithSize = withSize({ monitorHeight: true, noPlaceholder: true })(\n\tMaterialDisplayColumn\n);\n","import * as t from \"./actionTypes\";\nimport type { DisplayData, DisplayStatus, MaterialGroupData } from \"./model\";\nimport { createRef } from \"react\";\n\nconst initialState: DisplayData = {\n\tdisplayStatus: \"SHOW\",\n\tcurrentPage: 1,\n\tdocumentRef: createRef(),\n\tpageSpans: {},\n\tzoomQueue: null,\n\tmaterialData: { materialDataTimeStamp: -Infinity },\n};\n\nconst displayData = (state = initialState, { type, payload }: { type: string; payload: any }): DisplayData => {\n\tswitch (type) {\n\t\tcase t.PDF_UPLOADED:\n\t\t\treturn { ...state, pdf: payload as File, pdfName: (payload as File).name };\n\t\tcase t.MATERIAL_LOADED:\n\t\t\treturn { ...state, totalPages: payload as number };\n\t\tcase t.PAGE_UPDATE:\n\t\t\treturn { ...state, currentPage: payload as number };\n\t\tcase t.DISPLAY_STATUS:\n\t\t\treturn { ...state, displayStatus: payload as DisplayStatus };\n\t\tcase t.MATERIAL_DATA:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tmaterialData: payload,\n\t\t\t\tpageSpans: { ...state.pageSpans, [state.currentPage]: (payload as MaterialGroupData).materialSpans.length - 1 },\n\t\t\t};\n\t\tdefault:\n\t\t\treturn state;\n\t}\n};\n\nexport default displayData;\n","import * as actions from \"./actions\";\nimport * as actionTypes from \"./actionTypes\";\nimport * as components from \"./components\";\nimport * as constants from \"./constants\";\nimport reducer from \"./reducer\";\nimport * as selectors from \"./selectors\";\n\nexport default { actions, actionTypes, components, constants, reducer, selectors };\n","export const NAME = \"cardRiverState\";\n","import { NAME } from \"./constants\";\nimport { createSelector } from \"reselect\";\nimport { CardRiverState } from \"./model\";\nimport cards from \"../cards\";\n\nexport const getAll = (state: any) => state[NAME];\n\nexport const getRiverMakeUps = createSelector(getAll, (state: CardRiverState) => state.riverMakeUps);\n\nexport const getActiveRiverMakeUpID = createSelector(getAll, (state: CardRiverState) => state.activeRiverMakeUpID);\n\nexport const getPushToRiver = createSelector(getAll, (state: CardRiverState) => state.pushToRiverID);\n\nexport const getPushToRiverMakeUp = createSelector(getRiverMakeUps, getPushToRiver, (makeUps, id) => makeUps[id]);\n\nexport const getActiveRiverMakeUp = createSelector(\n\tgetRiverMakeUps,\n\tgetActiveRiverMakeUpID,\n\t(makeUps, id) => makeUps[id]\n);\n\nexport const getPushToRiverCardIDs = createSelector(getPushToRiverMakeUp, (makeUp) => makeUp.cardIDs);\n\nexport const getPushToRiverCards = createSelector(\n\tgetPushToRiverCardIDs,\n\tcards.selectors.getCards,\n\t(makeUpCardIDs, cards) => makeUpCardIDs.map((id) => cards[id])\n);\n\n//TODO-NICE: rename active=page-wise or smth like that for clarity\nexport const getActiveRiverCardIDs = createSelector(getActiveRiverMakeUp, (makeUp) => makeUp.cardIDs);\n\nexport const getActiveRiverCards = createSelector(\n\tgetActiveRiverCardIDs,\n\tcards.selectors.getCards,\n\t(makeUpCardIDs, cards) => makeUpCardIDs.map((id) => cards[id])\n);\n\nexport const getRiverShowState = createSelector(getAll, (state: CardRiverState) => state.riverShowState);\n\nexport const riverShowStateIsShow = createSelector(getRiverShowState, (state) => state === \"SHOW\");\n\nexport const getHoveredCardData = createSelector(getAll, (state: CardRiverState) => {\n\treturn { id: state.hoveredCard, field: state.hoveredField };\n});\n\nexport const getLastRiverIDNumber = createSelector(getAll, (state: CardRiverState) => state.lastRiverIDNumber);\n\nexport const getRiverContentState = createSelector(getAll, (state: CardRiverState) => state.riverContentState);\n","import React, { useState } from \"react\";\nimport { TextField, TextFieldProps } from \"@material-ui/core\";\n\nexport const HybridCardField = ({\n\tstoreValue = \"\",\n\tsaveChanges,\n\tstyle,\n\t...rest\n}: {\n\tstoreValue?: string;\n\tsaveChanges: (value: string) => void;\n\tstyle: any;\n} & TextFieldProps) => {\n\tconst [state, setState] = useState({ storeValue, mutableValue: storeValue });\n\n\t// reset if new storeValue, otherwise keep user-mutated value\n\tif (state.storeValue !== storeValue) {\n\t\tsetState({ storeValue, mutableValue: storeValue });\n\t}\n\n\t// need the onChange-pattern, because we want to be able to pre-fill the field from the store\n\treturn (\n\t\t<TextField\n\t\t\tmultiline\n\t\t\tvariant=\"filled\"\n\t\t\tvalue={state.mutableValue}\n\t\t\tonChange={(event) => {\n\t\t\t\tconst submittedValue = (event.target as HTMLTextAreaElement).value;\n\t\t\t\tsetState({ ...state, mutableValue: submittedValue });\n\t\t\t}}\n\t\t\tonBlur={(event: any) => {\n\t\t\t\tsaveChanges(event.target.value);\n\t\t\t}}\n\t\t\tstyle={style}\n\t\t\t{...rest}\n\t\t></TextField>\n\t);\n};\n","import DeleteForeverIcon from \"@material-ui/icons/DeleteForever\";\nimport React from \"react\";\nimport { IconButton } from \"@material-ui/core\";\nimport { useDispatch } from \"react-redux\";\nimport cards from \"../../../../cards\";\nimport focus from \"../../../../focus\";\n\n//TODO-RC: Undo / Redo for Card-Deletions and also Card_Push and Card_Updates\n//TODO-RC: make confirmation overlap (no confirmation, just good undo/redo (see Humane Interface))\n//TODO-NICE: use storybook for visual component testing\n\nexport const DeleteCardButton = ({ cardID }: { cardID: string }) => {\n\tconst dispatch = useDispatch();\n\treturn (\n\t\t<IconButton\n\t\t\ttype=\"button\"\n\t\t\tonClick={() => {\n\t\t\t\tdispatch(cards.actions.removeCard(cardID));\n\t\t\t}}\n\t\t\tonMouseEnter={() => {\n\t\t\t\tdispatch(focus.actions.tryUpdateFocus(\"EDITOR_CONTROL\"));\n\t\t\t}}\n\t\t>\n\t\t\t<DeleteForeverIcon></DeleteForeverIcon>\n\t\t</IconButton>\n\t);\n};\n","import FindInPageIcon from \"@material-ui/icons/FindInPage\";\nimport React from \"react\";\nimport { IconButton } from \"@material-ui/core\";\nimport { useDispatch } from \"react-redux\";\nimport display from \"../../../../display\";\nimport { SingleOrigin } from \"../../../../cards/model\";\nimport focus from \"../../../../focus\";\n\nexport const JumpToOriginButton = ({ cardOrigin }: { cardOrigin: SingleOrigin }) => {\n\tconst dispatch = useDispatch();\n\treturn (\n\t\t<IconButton\n\t\t\ttype=\"button\"\n\t\t\tonClick={() => {\n\t\t\t\tdispatch(focus.actions.updateDisplayFocus(\"ACTIVE_RIVER\"));\n\t\t\t\tdispatch(display.actions.zoomToCardOrigin(cardOrigin.spanIndex, cardOrigin.page));\n\t\t\t}}\n\t\t>\n\t\t\t<FindInPageIcon></FindInPageIcon>\n\t\t</IconButton>\n\t);\n};\n","import PanToolIcon from \"@material-ui/icons/PanTool\";\nimport PanToolOutlinedIcon from \"@material-ui/icons/PanToolOutlined\";\nimport React, { useState } from \"react\";\nimport { IconButton } from \"@material-ui/core\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { CardConfig, CreationType, GoalCard } from \"../../../../cards/model\";\nimport cards from \"../../../../cards\";\nimport focus from \"../../../../focus\";\n\nconst isGoalCard = (cardConfig: CardConfig, creationType: CreationType, goalCard: GoalCard) =>\n\tcardConfig.cardID === goalCard.cardID && creationType === goalCard.creationType;\n\nexport const GrabForFieldButton = ({\n\tcardConfig,\n\tcreationType,\n}: {\n\tcardConfig: CardConfig;\n\tcreationType: CreationType;\n}) => {\n\tconst dispatch = useDispatch();\n\tconst goalCard = useSelector(cards.selectors.getGoalCard);\n\tconst [outlined, setOutlined] = useState(true);\n\n\tif (goalCard) {\n\t\tconst isGoal = isGoalCard(cardConfig, creationType, goalCard);\n\t\tif (isGoal) {\n\t\t\tif (outlined) setOutlined(false);\n\t\t} else {\n\t\t\tif (!outlined) setOutlined(true);\n\t\t}\n\t} else {\n\t\tif (!outlined) setOutlined(true);\n\t}\n\n\treturn (\n\t\t<IconButton\n\t\t\ttype=\"button\"\n\t\t\tonMouseEnter={() => {\n\t\t\t\tdispatch(focus.actions.tryUpdateFocus(\"EDITOR_CONTROL\"));\n\t\t\t}}\n\t\t\tonClick={() => {\n\t\t\t\tif (outlined) {\n\t\t\t\t\tdispatch(cards.actions.setGoalCard(cardConfig, creationType));\n\t\t\t\t} else {\n\t\t\t\t\tdispatch(cards.actions.resetGoalCard());\n\t\t\t\t}\n\t\t\t}}\n\t\t>\n\t\t\t{outlined ? <PanToolOutlinedIcon></PanToolOutlinedIcon> : <PanToolIcon></PanToolIcon>}\n\t\t</IconButton>\n\t);\n};\n","import Grid from \"@material-ui/core/Grid\";\nimport React from \"react\";\nimport { HybridCardField } from \"./HybridCardField\";\nimport { CardConfig, QACardContent, NoteOrigin, SingleOrigin, QAOrigin } from \"../../../cards/model\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport cards from \"../../../cards\";\nimport { DeleteCardButton } from \"./Buttons/DeleteCardButton\";\nimport { JumpToOriginButton } from \"./Buttons/JumpToOriginButton\";\nimport { GrabForFieldButton } from \"./Buttons/GrabForFieldButton\";\nimport { isNullOrUndefined } from \"util\";\nimport { getHoveredCardData } from \"../../selectors\";\nimport focus from \"../../../focus\";\n\n//TODO-RC: tooltips for all buttons, multiple languages?\n\ntype CardProps = { config: CardConfig; riverID: string };\n\nconst borderStyle = { border: \"2px solid green\", borderRadius: \"4px\" };\n\n//TODO-PERF: investigate if this hover-store approach is too slow, useRef instead?\n\nconst NoteCard = ({ config }: CardProps) => {\n\tconst dispatch = useDispatch();\n\tconst { id } = useSelector(getHoveredCardData);\n\tconst isHoveredCard = config.cardID === id;\n\n\t// we only offer one way to use card-content in other cards: extract\n\t// we do not allow grabbing from other cards, just from the document, so we only need the grab button in the ActiveRiver\n\t//TODO-NICE: allow grabbing from other cards\n\tconst isActiveRiver = useSelector(focus.selectors.getDisplayFocus) === \"ACTIVE_RIVER\";\n\n\treturn (\n\t\t<div style={isHoveredCard ? borderStyle : undefined}>\n\t\t\t<HybridCardField\n\t\t\t\tsaveChanges={(value) => {\n\t\t\t\t\tdispatch(cards.actions.updateCardContent(value, config.cardID, \"NOTE\", \"REPLACE\", config.origin));\n\t\t\t\t}}\n\t\t\t\tstoreValue={config.content as string}\n\t\t\t\tlabel=\"Note\"\n\t\t\t\tvariant=\"filled\"\n\t\t\t\tstyle={{ backgroundColor: \"#CBF3F0\" }}\n\t\t\t\tInputLabelProps={{ style: { color: \"#000000\" } }}\n\t\t\t\tonMouseEnter={() => {\n\t\t\t\t\tdispatch(focus.actions.tryUpdateFocus(\"EDITOR\"));\n\t\t\t\t\tdispatch(cards.actions.trySetSourceCard(\"NOTE\", config.origin));\n\t\t\t\t}}\n\t\t\t></HybridCardField>\n\t\t\t<DeleteCardButton cardID={config.cardID}></DeleteCardButton>\n\t\t\t{isActiveRiver && <GrabForFieldButton cardConfig={config} creationType=\"NOTE\"></GrabForFieldButton>}\n\t\t\t{config.origin && <JumpToOriginButton cardOrigin={config.origin as NoteOrigin}></JumpToOriginButton>}\n\t\t</div>\n\t);\n};\n\nconst QACard = ({ config }: CardProps) => {\n\tconst dispatch = useDispatch();\n\tconst { id, field } = useSelector(getHoveredCardData);\n\tconst isHoveredCard = config.cardID === id;\n\n\t// we only offer one way to use card-content in other cards: extract\n\t// we do not allow grabbing from other cards, just from the document, so we only need the grab button in the ActiveRiver\n\tconst isActiveRiver = useSelector(focus.selectors.getDisplayFocus) === \"ACTIVE_RIVER\";\n\n\treturn (\n\t\t<Grid container direction=\"column\" spacing={1}>\n\t\t\t<Grid item style={isHoveredCard && field === \"Q\" ? borderStyle : undefined}>\n\t\t\t\t<HybridCardField\n\t\t\t\t\tsaveChanges={(value) => {\n\t\t\t\t\t\tdispatch(cards.actions.updateCardContent(value, config.cardID, \"Q\", \"REPLACE\", config.origin));\n\t\t\t\t\t}}\n\t\t\t\t\tstoreValue={(config.content as QACardContent).q}\n\t\t\t\t\tlabel={\"Question\"}\n\t\t\t\t\tvariant=\"filled\"\n\t\t\t\t\tstyle={{ backgroundColor: \"#FFBF69\" }}\n\t\t\t\t\tInputLabelProps={{ style: { color: \"#000000\" } }}\n\t\t\t\t\tonMouseEnter={() => {\n\t\t\t\t\t\tdispatch(focus.actions.tryUpdateFocus(\"EDITOR\"));\n\t\t\t\t\t\tdispatch(cards.actions.trySetSourceCard(\"Q\", config.origin));\n\t\t\t\t\t}}\n\t\t\t\t></HybridCardField>\n\t\t\t\t{isActiveRiver && <GrabForFieldButton cardConfig={config} creationType=\"Q\"></GrabForFieldButton>}\n\t\t\t\t{config.origin && !isNullOrUndefined((config.origin as QAOrigin).q?.spanIndex) && (\n\t\t\t\t\t<JumpToOriginButton cardOrigin={(config.origin as QAOrigin).q as SingleOrigin}></JumpToOriginButton>\n\t\t\t\t)}\n\t\t\t</Grid>\n\t\t\t<Grid item style={isHoveredCard && field === \"A\" ? borderStyle : undefined}>\n\t\t\t\t<HybridCardField\n\t\t\t\t\tsaveChanges={(value) => {\n\t\t\t\t\t\tdispatch(cards.actions.updateCardContent(value, config.cardID, \"A\", \"REPLACE\", config.origin));\n\t\t\t\t\t}}\n\t\t\t\t\tstoreValue={(config.content as QACardContent).a}\n\t\t\t\t\tlabel={\"Answer\"}\n\t\t\t\t\tvariant=\"filled\"\n\t\t\t\t\tstyle={{ backgroundColor: \"#2EC4B6\" }}\n\t\t\t\t\tInputLabelProps={{ style: { color: \"#000000\" } }}\n\t\t\t\t\tonMouseEnter={() => {\n\t\t\t\t\t\tdispatch(focus.actions.tryUpdateFocus(\"EDITOR\"));\n\t\t\t\t\t\tdispatch(cards.actions.trySetSourceCard(\"A\", config.origin));\n\t\t\t\t\t}}\n\t\t\t\t></HybridCardField>\n\t\t\t\t{isActiveRiver && <GrabForFieldButton cardConfig={config} creationType=\"A\"></GrabForFieldButton>}\n\t\t\t\t{config.origin && !isNullOrUndefined((config.origin as QAOrigin).a?.spanIndex) && (\n\t\t\t\t\t<JumpToOriginButton cardOrigin={(config.origin as QAOrigin).a as SingleOrigin}></JumpToOriginButton>\n\t\t\t\t)}\n\t\t\t</Grid>\n\t\t\t<Grid item>\n\t\t\t\t<DeleteCardButton cardID={config.cardID}></DeleteCardButton>\n\t\t\t</Grid>\n\t\t</Grid>\n\t);\n};\n\nexport const Card = ({ config, riverID }: CardProps) => {\n\tswitch (config.type) {\n\t\tcase \"Note\":\n\t\t\treturn <NoteCard config={config} riverID={riverID}></NoteCard>;\n\t\tcase \"Q-A\":\n\t\t\treturn <QACard config={config} riverID={riverID}></QACard>;\n\t}\n};\n","import Grid from \"@material-ui/core/Grid\";\nimport React from \"react\";\nimport { incrementer } from \"../../../../shared/utils\";\nimport { Card } from \"./Card\";\nimport { CardConfig } from \"../../../cards/model\";\nimport { Divider } from \"@material-ui/core\";\n\nconst GridDivider = () => (\n\t<Grid item>\n\t\t<Divider></Divider>\n\t</Grid>\n);\n\nexport const toCardGridItemsWithDividers = (cards: CardConfig[], riverID: string) => {\n\tconst increment = incrementer();\n\n\treturn cards.reduce((prev, currentCard, index, arr) => {\n\t\tprev.push(\n\t\t\t<Grid item key={increment()}>\n\t\t\t\t<Card config={currentCard} riverID={riverID} key={increment()}></Card>\n\t\t\t</Grid>\n\t\t);\n\n\t\tconst notLastCard = index < arr.length - 1;\n\t\tif (notLastCard) prev.push(<GridDivider key={increment()}></GridDivider>);\n\t\treturn prev;\n\t}, [] as any[]);\n};\n","import { NAME } from \"./constants\";\n\nexport const RIVER_SHOW_STATE = NAME + \"/RIVER_SHOW_STATE\";\nexport const RIVER_CONTENT_STATE = NAME + \"/RIVER_CONTENT_STATE\";\nexport const RIVER_PUSH_STATE = NAME + \"/RIVER_PUSH_STATE\";\nexport const RIVER_HOVERED_CARD = NAME + \"/RIVER_HOVERED_CARD\";\n","import * as t from \"./actionTypes\";\nimport { riverShowStateIsShow, getPushToRiver, getHoveredCardData } from \"./selectors\";\nimport { Dispatch } from \"redux\";\nimport { CreationType } from \"../cards/model\";\nimport { RiverContentState } from \"./model\";\n\nexport const toggleRiverShowState = () => (dispatch: Dispatch, getState: Function) => {\n\tdispatch({ type: t.RIVER_SHOW_STATE, payload: riverShowStateIsShow(getState()) ? \"HIDE\" : \"SHOW\" });\n};\n\nexport const setRiverContentState = (state: RiverContentState) => {\n\treturn { type: t.RIVER_CONTENT_STATE, payload: state };\n};\n\nexport const setPushToRiver = (id: string) => {\n\treturn { type: t.RIVER_PUSH_STATE, payload: id };\n};\n\nexport const trySetPushToRiver = (id: string) => {\n\treturn (dispatch: Dispatch, getState: Function) => {\n\t\tif (getPushToRiver(getState()) !== id) dispatch(setPushToRiver(id));\n\t};\n};\n\nexport const setHoveredCard = (cardID: string, field: CreationType) => {\n\treturn { payload: { id: cardID, field }, type: t.RIVER_HOVERED_CARD };\n};\n\nexport const trySetHoveredCard = (cardID: string, field: CreationType) => {\n\treturn (dispatch: Dispatch, getState: Function) => {\n\t\tconst state = getState();\n\t\tconst hoveredCardData = getHoveredCardData(state);\n\t\tif (hoveredCardData.id !== cardID || hoveredCardData.field !== field) dispatch(setHoveredCard(cardID, field));\n\t};\n};\n","import FeaturedVideoIcon from \"@material-ui/icons/FeaturedVideo\";\nimport React from \"react\";\nimport { IconButton } from \"@material-ui/core\";\nimport { useDispatch } from \"react-redux\";\nimport cards from \"../../../../cards\";\nimport focus from \"../../../../focus\";\n\nexport const AddNoteButton = () => {\n\tconst dispatch = useDispatch();\n\treturn (\n\t\t<IconButton\n\t\t\ttype=\"button\"\n\t\t\tonClick={() => {\n\t\t\t\tdispatch(cards.actions.cardPush({ card: { type: \"Note\", content: \"\" } }));\n\t\t\t}}\n\t\t\tonMouseEnter={() => {\n\t\t\t\tdispatch(focus.actions.tryUpdateFocus(\"EDITOR_CONTROL\"));\n\t\t\t}}\n\t\t>\n\t\t\t<FeaturedVideoIcon></FeaturedVideoIcon>\n\t\t</IconButton>\n\t);\n};\n","import FeaturedPlayListIcon from \"@material-ui/icons/FeaturedPlayList\";\nimport React from \"react\";\nimport { IconButton } from \"@material-ui/core\";\nimport { useDispatch } from \"react-redux\";\nimport cards from \"../../../../cards\";\nimport focus from \"../../../../focus\";\n\nexport const AddQAButton = () => {\n\tconst dispatch = useDispatch();\n\treturn (\n\t\t<IconButton\n\t\t\ttype=\"button\"\n\t\t\tonClick={() => {\n\t\t\t\tdispatch(cards.actions.cardPush({ card: { type: \"Q-A\", content: { q: \"\", a: \"\" } } }));\n\t\t\t}}\n\t\t\tonMouseEnter={() => {\n\t\t\t\tdispatch(focus.actions.tryUpdateFocus(\"EDITOR_CONTROL\"));\n\t\t\t}}\n\t\t>\n\t\t\t<FeaturedPlayListIcon></FeaturedPlayListIcon>\n\t\t</IconButton>\n\t);\n};\n","import { Typography, Divider } from \"@material-ui/core\";\nimport Accordion from \"@material-ui/core/Accordion\";\nimport AccordionSummary from \"@material-ui/core/AccordionSummary\";\nimport AccordionDetails from \"@material-ui/core/AccordionDetails\";\nimport Grid from \"@material-ui/core/Grid\";\nimport React, { useState } from \"react\";\nimport { trySetPushToRiver } from \"../../actions\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { AddNoteButton } from \"./Buttons/AddNoteButton\";\nimport { AddQAButton } from \"./Buttons/AddQAButton\";\nimport { getPushToRiver } from \"../../selectors\";\n\n//TODO-NICE: make it not be accordion but closeable?\n//TODO-NICE: make local show / hide notes\nexport const CardRiverAccordion = ({\n\triverID,\n\tgridItems,\n\tsummary,\n}: {\n\triverID: string;\n\tgridItems: any;\n\tsummary: string;\n}) => {\n\tconst defaultElevation = 3;\n\tconst highlightElevation = 20;\n\tconst [elevation, setElevation] = useState(defaultElevation);\n\tconst pushToRiver = useSelector(getPushToRiver);\n\n\tif (riverID === pushToRiver && elevation === defaultElevation) {\n\t\tsetElevation(highlightElevation);\n\t} else if (riverID !== pushToRiver && elevation !== defaultElevation) {\n\t\tsetElevation(defaultElevation);\n\t}\n\n\tconst dispatch = useDispatch();\n\treturn (\n\t\t<Accordion\n\t\t\tdefaultExpanded={true}\n\t\t\tonMouseEnter={() => {\n\t\t\t\tdispatch(trySetPushToRiver(riverID));\n\t\t\t}}\n\t\t\televation={elevation}\n\t\t>\n\t\t\t<AccordionSummary>\n\t\t\t\t<Typography\n\t\t\t\t\tvariant=\"h6\"\n\t\t\t\t\talign=\"center\"\n\t\t\t\t\tstyle={{ MozUserSelect: \"none\", WebkitUserSelect: \"none\", msUserSelect: \"none\" }}\n\t\t\t\t>\n\t\t\t\t\t{summary}\n\t\t\t\t</Typography>\n\t\t\t</AccordionSummary>\n\t\t\t<AccordionDetails>\n\t\t\t\t<Grid container direction=\"column\" spacing={2} justify=\"center\" alignItems=\"stretch\">\n\t\t\t\t\t<Grid item>\n\t\t\t\t\t\t<AddQAButton></AddQAButton>\n\t\t\t\t\t\t<AddNoteButton></AddNoteButton>\n\t\t\t\t\t\t<Divider></Divider>\n\t\t\t\t\t</Grid>\n\t\t\t\t\t{gridItems}\n\t\t\t\t</Grid>\n\t\t\t</AccordionDetails>\n\t\t</Accordion>\n\t);\n};\n","import { CardConfig } from \"../../../cards/model\";\nimport { toCardGridItemsWithDividers } from \"./toCardGridItemsWithDividers\";\nimport { useMemo } from \"react\";\nimport { CardRiverAccordion } from \"./CardRiverAccordion\";\nimport React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { getRiverContentState } from \"../../selectors\";\n\n//TODO-RC: make Card-River non-overlapping and scroll the cards that we are considering from the Menus into view\n//TODO-NICE: untangle these components, dont need to so many subs?\n\nexport const ChildCardRiver = ({ riverID, riverCards }: { riverID: string; riverCards: CardConfig[] }) => {\n\tconst riverContentState = useSelector(getRiverContentState);\n\n\t// this should only change if the store values change\n\tconst gridItems = useMemo(() => {\n\t\tlet inputCards = riverCards;\n\n\t\tif (riverContentState !== \"ALL\") {\n\t\t\tif (riverContentState === \"QAS\") {\n\t\t\t\tinputCards = riverCards.filter((config) => config.type === \"Q-A\");\n\t\t\t}\n\t\t\tif (riverContentState === \"NOTES\") {\n\t\t\t\tinputCards = riverCards.filter((config) => config.type === \"Note\");\n\t\t\t}\n\t\t}\n\n\t\treturn toCardGridItemsWithDividers(inputCards, riverID);\n\t}, [riverCards, riverID, riverContentState]);\n\n\treturn <CardRiverAccordion riverID={riverID} gridItems={gridItems} summary={riverID}></CardRiverAccordion>;\n};\n","import { CreationType } from \"../cards/model\";\n\nexport type RiverMakeUp = { riverID: string; cardIDs: string[]; active: boolean };\n\nexport type RiverMakeUps = { [riverID: string]: RiverMakeUp };\n\nexport type RiverShowState = \"SHOW\" | \"HIDE\";\n\nexport type RiverContentState = \"ALL\" | \"NOTES\" | \"QAS\";\n\n//TODO-NICE: rename pushto/active river\n\nexport type CardRiverState = {\n\triverMakeUps: RiverMakeUps;\n\tactiveRiverMakeUpID: string;\n\tpushToRiverID: string;\n\tlastRiverIDNumber: number;\n\triverShowState: RiverShowState;\n\triverContentState: RiverContentState;\n\thoveredCard: null | string;\n\thoveredField: null | CreationType;\n};\n\nexport const pageNumberToRiverMakeUpID = (page: number) => \"CardRiver \" + page;\n\nexport const riverMakeUpIDToPageNumber = (riverID: string) => parseInt(riverID.replace(\"CardRiver \", \"\"));\n","import { Grid } from \"@material-ui/core\";\nimport { useSelector } from \"react-redux\";\nimport { getRiverMakeUps } from \"../../selectors\";\nimport React, { useRef, useEffect } from \"react\";\nimport cards from \"../../../cards\";\nimport focus from \"../../../focus\";\nimport display from \"../../../display\";\nimport { incrementer } from \"../../../../shared/utils\";\nimport { ChildCardRiver } from \"../CardRiver/ChildCardRiver\";\nimport { riverMakeUpIDToPageNumber } from \"../../model\";\n\n//TODO-RC: make cards searchable when looking at River/Material\n//TODO-PREF: memoize Rivers (not necessary right now, because we just hide)\n\nexport const SummaryRiver = () => {\n\tconst displayFocus = useSelector(focus.selectors.getDisplayFocus);\n\tconst currentPage = useSelector(display.selectors.getCurrentPage);\n\tconst cardConfigs = useSelector(cards.selectors.getCards);\n\tconst riverMakeUps = Object.values(useSelector(getRiverMakeUps));\n\tconst focusRef = useRef<HTMLDivElement | null>(null);\n\n\t// the current-page river is scrolled into view\n\tuseEffect(() => {\n\t\tif (displayFocus === \"SUMMARY_RIVER\" && focusRef.current !== null) {\n\t\t\t(focusRef.current as HTMLDivElement).focus();\n\t\t\t(focusRef.current as HTMLDivElement).scrollIntoView({ behavior: \"smooth\", block: \"center\", inline: \"center\" });\n\t\t}\n\t}, [displayFocus, currentPage]);\n\n\tconst increment = incrementer();\n\t//TODO-NICE: find way to make UI-text unselectable globally, maybe different focus? But might be unperformant\n\treturn (\n\t\t<Grid container justify=\"flex-start\" direction=\"row\" alignItems=\"stretch\" spacing={1}>\n\t\t\t{riverMakeUps.map((makeUp) =>\n\t\t\t\tmakeUp.cardIDs.length > 0 ? (\n\t\t\t\t\t<Grid\n\t\t\t\t\t\titem\n\t\t\t\t\t\tref={riverMakeUpIDToPageNumber(makeUp.riverID) === currentPage ? focusRef : null}\n\t\t\t\t\t\tkey={increment()}\n\t\t\t\t\t>\n\t\t\t\t\t\t<ChildCardRiver\n\t\t\t\t\t\t\triverID={makeUp.riverID}\n\t\t\t\t\t\t\triverCards={makeUp.cardIDs.map((id) => cardConfigs[id])}\n\t\t\t\t\t\t\tkey={increment()}\n\t\t\t\t\t\t></ChildCardRiver>\n\t\t\t\t\t</Grid>\n\t\t\t\t) : null\n\t\t\t)}\n\t\t</Grid>\n\t);\n};\n","import React from \"react\";\nimport Grid from \"@material-ui/core/Grid\";\nimport focus from \"../../../focus\";\nimport { useSelector } from \"react-redux\";\nimport { SummaryRiver } from \"./SummaryRiver\";\n\n//TODO-RC: dont show empty rivers in summary, make dropdown/create empty river button\n\nexport const SummaryRiverView = () => {\n\tconst displayFocus = useSelector(focus.selectors.getDisplayFocus);\n\n\treturn (\n\t\t<Grid item hidden={displayFocus !== \"SUMMARY_RIVER\"}>\n\t\t\t<SummaryRiver></SummaryRiver>\n\t\t</Grid>\n\t);\n};\n","import React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { getActiveRiverCards, getActiveRiverMakeUpID } from \"../../selectors\";\nimport { ChildCardRiver } from \"../CardRiver/ChildCardRiver\";\n\n//TODO-NICE: selection in CardRiver should stay highlighted when the contextMenu opens?\n\n//TODO-NICE: contextMenu as permant element, maybe sidebar?\n//TODO-NICE: preview in ContextMenu of how selected string would be used\n\nexport const ActiveCardRiver = () => {\n\tconst riverID = useSelector(getActiveRiverMakeUpID);\n\tconst riverCards = useSelector(getActiveRiverCards);\n\n\treturn <ChildCardRiver riverID={riverID} riverCards={riverCards}></ChildCardRiver>;\n};\n","import React from \"react\";\nimport Grid from \"@material-ui/core/Grid\";\nimport { ActiveCardRiver } from \"./ActiveCardRiver\";\n//TODO-NICE: make River-View, where you can just see one card and can make it smaller? Maybe just button to zoom \"in\" / just seeing the current river\n//TODO-NICE: mark Origin-Span or maybe rect over whole page-section?\n//TODO-NICE: make reconciliation algorithm for origin when new PDF versions come out\n\nexport const ActiveRiverColumn = ({ hidden }: any) => {\n\treturn (\n\t\t<Grid\n\t\t\titem\n\t\t\tstyle={{\n\t\t\t\twidth: \"38%\",\n\t\t\t}}\n\t\t\thidden={hidden}\n\t\t>\n\t\t\t<ActiveCardRiver></ActiveCardRiver>\n\t\t</Grid>\n\t);\n};\n","import React from \"react\";\nimport Grid from \"@material-ui/core/Grid\";\nimport display from \"../../../display\";\nimport focus from \"../../../focus\";\nimport { useSelector } from \"react-redux\";\nimport { ActiveRiverColumn } from \"./ActiveRiverColumn\";\nimport { riverShowStateIsShow } from \"../../selectors\";\n\nexport const ActiveRiverView = () => {\n\tconst displayFocus = useSelector(focus.selectors.getDisplayFocus);\n\tconst showMaterial = useSelector(display.selectors.displayStatusIsShow);\n\tconst showRiver = useSelector(riverShowStateIsShow);\n\n\treturn (\n\t\t<Grid item hidden={displayFocus !== \"ACTIVE_RIVER\"}>\n\t\t\t<Grid container justify=\"space-around\" direction=\"row\" alignItems=\"stretch\">\n\t\t\t\t<ActiveRiverColumn hidden={!showRiver}></ActiveRiverColumn>\n\t\t\t\t<display.components.MaterialDisplayColumnWithSize\n\t\t\t\t\thidden={!showMaterial}\n\t\t\t\t></display.components.MaterialDisplayColumnWithSize>\n\t\t\t</Grid>\n\t\t</Grid>\n\t);\n};\n","import { FormGroup, FormControlLabel, withStyles, CheckboxProps, Checkbox } from \"@material-ui/core\";\nimport React from \"react\";\nimport { green } from \"@material-ui/core/colors\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { getRiverContentState } from \"../selectors\";\nimport { RiverContentState } from \"../model\";\nimport { setRiverContentState } from \"../actions\";\n\nconst GreenCheckbox = withStyles({\n\troot: {\n\t\tcolor: green[400],\n\t\t\"&$checked\": {\n\t\t\tcolor: green[600],\n\t\t},\n\t},\n\tchecked: {},\n})((props: CheckboxProps) => <Checkbox color=\"default\" {...props} />);\n\nexport const RiverContentFormGroup = () => {\n\tconst riverContentState = useSelector(getRiverContentState);\n\tconst dispatch = useDispatch();\n\n\tconst showQAs = riverContentState === \"ALL\" || riverContentState === \"QAS\";\n\tconst showNotes = riverContentState === \"ALL\" || riverContentState === \"NOTES\";\n\n\tconst changeContentState = (clickedState: RiverContentState) => {\n\t\t// deactivating changes to the other state\n\t\t// reactivating leads to all-state, we dont allow do show nothing\n\n\t\tconst wantsToDeactiveNotesWithDeactivatedQAs = !showQAs && showNotes && clickedState === \"NOTES\";\n\t\tconst wantsToDeactiveQAsWithDeactivatedNotes = !showNotes && showQAs && clickedState === \"QAS\";\n\n\t\tif (wantsToDeactiveNotesWithDeactivatedQAs || wantsToDeactiveQAsWithDeactivatedNotes) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (!showQAs && clickedState === \"QAS\") {\n\t\t\tdispatch(setRiverContentState(\"ALL\"));\n\t\t\treturn;\n\t\t}\n\n\t\tif (!showNotes && clickedState === \"NOTES\") {\n\t\t\tdispatch(setRiverContentState(\"ALL\"));\n\t\t\treturn;\n\t\t}\n\n\t\tif (showQAs && clickedState === \"QAS\") {\n\t\t\tdispatch(setRiverContentState(\"NOTES\"));\n\t\t\treturn;\n\t\t}\n\n\t\tif (showNotes && clickedState === \"NOTES\") {\n\t\t\tdispatch(setRiverContentState(\"QAS\"));\n\t\t\treturn;\n\t\t}\n\t};\n\n\treturn (\n\t\t<FormGroup row>\n\t\t\t<FormControlLabel\n\t\t\t\tcontrol={\n\t\t\t\t\t<GreenCheckbox\n\t\t\t\t\t\tchecked={showQAs}\n\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\tchangeContentState(\"QAS\");\n\t\t\t\t\t\t}}\n\t\t\t\t\t/>\n\t\t\t\t}\n\t\t\t\tlabel=\"Show QAs\"\n\t\t\t/>\n\t\t\t<FormControlLabel\n\t\t\t\tcontrol={\n\t\t\t\t\t<GreenCheckbox\n\t\t\t\t\t\tchecked={showNotes}\n\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\tchangeContentState(\"NOTES\");\n\t\t\t\t\t\t}}\n\t\t\t\t\t/>\n\t\t\t\t}\n\t\t\t\tlabel=\"Show Notes\"\n\t\t\t/>\n\t\t</FormGroup>\n\t);\n};\n","import { CardRiverState, RiverShowState, pageNumberToRiverMakeUpID, RiverMakeUp, RiverContentState } from \"./model\";\nimport { FinalizedCardPayload } from \"../cards/model\";\nimport cards from \"../cards\";\nimport * as t from \"./actionTypes\";\nimport display from \"../display\";\nimport focus from \"../focus\";\nimport { UserFocus } from \"../focus/model\";\nimport { CentralControlRiver } from \"../control/model\";\n\nconst intialState: CardRiverState = {\n\triverMakeUps: {\n\t\t[pageNumberToRiverMakeUpID(1)]: {\n\t\t\triverID: pageNumberToRiverMakeUpID(1),\n\t\t\tcardIDs: [\"2\", \"0\", \"1\"],\n\t\t\t//TODO-NICE: might remove this active-flag, because I dont use it? Maybe for multiple documents?\n\t\t\tactive: true,\n\t\t},\n\t},\n\tpushToRiverID: pageNumberToRiverMakeUpID(1),\n\tactiveRiverMakeUpID: pageNumberToRiverMakeUpID(1),\n\tlastRiverIDNumber: 1,\n\triverShowState: \"SHOW\",\n\thoveredCard: null,\n\thoveredField: null,\n\triverContentState: \"ALL\",\n};\n\nconst emptyCardRiver = (page: number): RiverMakeUp => {\n\treturn {\n\t\triverID: pageNumberToRiverMakeUpID(page),\n\t\tcardIDs: [],\n\t\tactive: true,\n\t};\n};\n\nconst updateStateWithMakeUps = (state: CardRiverState, ...makeUps: RiverMakeUp[]) => {\n\tconst updatedState = { ...state };\n\tmakeUps.forEach((makeUp) => {\n\t\tupdatedState.riverMakeUps[makeUp.riverID] = makeUp;\n\t});\n\treturn updatedState;\n};\n\nconst deactivateActiveCardRiver = (state: CardRiverState) => {\n\treturn { ...state.riverMakeUps[state.activeRiverMakeUpID], active: false };\n};\n\nconst removeCardFromRivers = (state: CardRiverState, cardID: string): CardRiverState => {\n\tconst riverMakeUps = Object.fromEntries(\n\t\tObject.entries(state.riverMakeUps).map((entry) => [\n\t\t\tentry[0],\n\t\t\t{ ...entry[1], cardIDs: entry[1].cardIDs.filter((id) => id !== cardID) },\n\t\t])\n\t);\n\treturn { ...state, riverMakeUps };\n};\n\nconst cardRiverState = (state = intialState, { type, payload }: { type: string; payload: any }) => {\n\tlet riverMakeUp;\n\tlet riverMakeUps;\n\tswitch (type) {\n\t\tcase display.actionTypes.PAGE_UPDATE:\n\t\t\tlet activeRiver;\n\t\t\tif (!state.riverMakeUps[pageNumberToRiverMakeUpID(payload as number)]) {\n\t\t\t\tactiveRiver = emptyCardRiver(payload as number);\n\t\t\t} else {\n\t\t\t\tactiveRiver = { ...state.riverMakeUps[pageNumberToRiverMakeUpID(payload as number)], active: true };\n\t\t\t}\n\n\t\t\tconst oldRiver = deactivateActiveCardRiver(state);\n\n\t\t\treturn {\n\t\t\t\t...updateStateWithMakeUps(state, activeRiver, oldRiver),\n\t\t\t\tactiveRiverMakeUpID: activeRiver.riverID,\n\t\t\t\tpushToRiverID: activeRiver.riverID,\n\t\t\t};\n\n\t\tcase cards.actionTypes.CARD_PUSH:\n\t\t\triverMakeUp = {\n\t\t\t\t...state.riverMakeUps[state.pushToRiverID],\n\t\t\t\tcardIDs: [...state.riverMakeUps[state.pushToRiverID].cardIDs, (payload as FinalizedCardPayload).card.cardID],\n\t\t\t};\n\t\t\triverMakeUps = { ...state.riverMakeUps };\n\t\t\triverMakeUps[state.pushToRiverID] = riverMakeUp;\n\n\t\t\treturn { ...state, riverMakeUps: riverMakeUps };\n\t\tcase cards.actionTypes.CARD_REMOVE:\n\t\t\treturn removeCardFromRivers(state, payload as string);\n\t\tcase t.RIVER_SHOW_STATE:\n\t\t\treturn { ...state, riverShowState: payload as RiverShowState };\n\t\tcase t.RIVER_CONTENT_STATE:\n\t\t\treturn { ...state, riverContentState: payload as RiverContentState };\n\t\tcase t.RIVER_PUSH_STATE:\n\t\t\treturn { ...state, pushToRiverID: payload };\n\t\tcase t.RIVER_HOVERED_CARD:\n\t\t\treturn { ...state, hoveredCard: payload.id, hoveredField: payload.field };\n\t\tcase focus.actionTypes.FOCUS_UPDATE:\n\t\t\t// reset hovered-card once we are not focused on the context menu\n\t\t\t//TODO-NICE: investigate a better factoring for the relation between river and creation\n\t\t\tif (state.hoveredCard !== null && (payload as UserFocus) !== \"CONTEXT_MENU\") {\n\t\t\t\treturn { ...state, hoveredCard: null, hoveredField: null };\n\t\t\t} else {\n\t\t\t\treturn state;\n\t\t\t}\n\t\tcase cards.actionTypes.GLOBAL_RESET:\n\t\t\tif (payload) {\n\t\t\t\treturn {\n\t\t\t\t\t...intialState,\n\t\t\t\t\triverMakeUps: (payload as CentralControlRiver).riverMakeUps,\n\t\t\t\t\tactiveRiverMakeUpID: (payload as CentralControlRiver).activeRiverMakeUpID,\n\t\t\t\t\tpushToRiverID: (payload as CentralControlRiver).pushToRiverID,\n\t\t\t\t\tlastRiverIDNumber: (payload as CentralControlRiver).lastRiverIDNumber,\n\t\t\t\t};\n\t\t\t} else {\n\t\t\t\treturn intialState;\n\t\t\t}\n\t\tdefault:\n\t\t\treturn state;\n\t}\n};\n\nexport default cardRiverState;\n","import * as constants from \"./constants\";\nimport * as components from \"./components\";\nimport reducer from \"./reducer\";\nimport * as selectors from \"./selectors\";\nimport * as actions from \"./actions\";\n\nexport default { constants, components, reducer, selectors, actions };\n","export const NAME = \"centralControl\";\n","import { createSelector } from \"reselect\";\nimport display from \"../display\";\nimport river from \"../river\";\nimport cards from \"../cards\";\nimport { DocumentData, CentralControl } from \"./model\";\nimport { NAME } from \"./constants\";\n\nexport const getAll = (state: any) => state[NAME];\n\nexport const getDocumentDB = createSelector(getAll, (state: CentralControl) => state.documentDB);\n\nexport const getDocumentNames = createSelector(getDocumentDB, (db) => Object.keys(db));\n\nexport const getDocumentDataSets = createSelector(getDocumentDB, (db) => Object.values(db));\n\nexport const getCurrentDBData: (state: any) => DocumentData | null = createSelector(\n\tdisplay.selectors.getPDFName,\n\triver.selectors.getRiverMakeUps,\n\triver.selectors.getActiveRiverMakeUpID,\n\triver.selectors.getPushToRiver,\n\triver.selectors.getLastRiverIDNumber,\n\tcards.selectors.getCards,\n\tcards.selectors.getLastCardIDNumber,\n\t(pdfName, riverMakeUps, activeRiverMakeUpID, pushToRiverID, lastRiverIDNumber, cards, lastCardIDNumber) => {\n\t\treturn {\n\t\t\tname: pdfName as string,\n\t\t\triverMakeUps,\n\t\t\tactiveRiverMakeUpID,\n\t\t\tpushToRiverID,\n\t\t\tlastRiverIDNumber,\n\t\t\tcards,\n\t\t\tlastCardIDNumber,\n\t\t};\n\t}\n);\n","import { NAME } from \"./constants\";\n\nexport const ARCHIVE_CURRENT_DATA = NAME + \"/ARCHIVE_CURRENT_DATA\";\nexport const LOAD_DOCUMENT_DATA_SETS = NAME + \"/LOAD_DOCUMENT_DATA_SETS\";\n","import { Dispatch } from \"redux\";\nimport { getCurrentDBData, getDocumentDB, getDocumentDataSets } from \"./selectors\";\nimport { DocumentData } from \"./model\";\nimport display from \"../display\";\nimport cards from \"../cards\";\nimport * as t from \"./actionTypes\";\n\nexport const archiveDBData = (dbData: DocumentData) => {\n\treturn { type: t.ARCHIVE_CURRENT_DATA, payload: dbData };\n};\n\nexport const archiveCurrentDBData = () => {\n\treturn (dispatch: Dispatch, getState: Function) => {\n\t\tconst state = getState();\n\t\tconst currentPDFName = display.selectors.getPDFName(state);\n\n\t\tif (currentPDFName !== undefined) {\n\t\t\tconst dbData = getCurrentDBData(state) as DocumentData;\n\t\t\tdispatch(archiveDBData(dbData));\n\t\t}\n\t};\n};\n\nconst fileDownload = require(\"js-file-download\");\nexport const downloadDBData = () => {\n\treturn (dispatch: any, getState: Function) => {\n\t\t//actualize the db before downloading\n\t\tdispatch(archiveCurrentDBData());\n\n\t\tconst documentDataSets = getDocumentDataSets(getState());\n\t\tconst localString = new Date().toLocaleString();\n\t\tfileDownload(JSON.stringify(documentDataSets), localString + \" ClayMemory.txt\");\n\t};\n};\n\nexport const changeDocument = (pdf: File) => {\n\treturn (dispatch: Dispatch, getState: Function) => {\n\t\tconst newPDFName = pdf.name;\n\n\t\tconst state = getState();\n\t\tconst currentPDFName = display.selectors.getPDFName(state);\n\n\t\tconst documentDB = getDocumentDB(state);\n\n\t\t// save current data only if pdf has been uploaded / there is an active document\n\t\tif (currentPDFName !== undefined) {\n\t\t\tconst dbData = getCurrentDBData(state) as DocumentData;\n\t\t\tdispatch(archiveDBData(dbData));\n\t\t}\n\n\t\tdispatch(display.actions.pdfUpload(pdf));\n\n\t\t// if the uploaded pdf is the same as the active one, then we just reloaded the app (lost the pdf)\n\t\t// and dont need load data (loading data would lead to overwrite because of the syncing order)\n\t\t//TODO-NICE: make the sync between documentDB and active document for explicit, right now I just sync when a PDF is uploaded\n\t\tif (newPDFName === currentPDFName) {\n\t\t\treturn;\n\t\t}\n\t\t// load new data or reset\n\t\tconst newDocumentData = documentDB[newPDFName];\n\t\tif (newDocumentData) {\n\t\t\tdispatch({ type: cards.actionTypes.GLOBAL_RESET, payload: newDocumentData });\n\t\t} else {\n\t\t\tdispatch({ type: cards.actionTypes.GLOBAL_RESET });\n\t\t}\n\t};\n};\n\nexport const loadDocumentDataSets = (dbData: DocumentData[]) => {\n\treturn { type: t.LOAD_DOCUMENT_DATA_SETS, payload: dbData };\n};\n","import { useRef, useEffect, MutableRefObject } from \"react\";\n\n// only global eventListener for now\nexport const useEventListener = (eventName: string, handler: any) => {\n\tconst savedHandler: MutableRefObject<Function> = useRef(() => {});\n\n\tuseEffect(() => {\n\t\tsavedHandler.current = handler;\n\t}, [handler]);\n\n\tuseEffect(() => {\n\t\tconst eventListener = (event: Event) => savedHandler.current(event);\n\t\tdocument.addEventListener(eventName, eventListener);\n\t\treturn () => {\n\t\t\tdocument.removeEventListener(eventName, eventListener);\n\t\t};\n\t}, [eventName]);\n};\n","export const NAME = \"creationData\";\n","import { NAME } from \"./constants\";\n\nexport const TOGGLE_CONTEXT_MENU = NAME + \"/TOGGLE_CONTEXT_MENU\";\nexport const CLOSE_CONTEXT_MENU = NAME + \"/CLOSE_CONTEXT_MENU\";\nexport const OPEN_CONTEXT_MENU = NAME + \"/OPEN_CONTEXT_MENU\";\nexport const SELECTED_STRING = NAME + \"/SELECTED_STRING\";\nexport const SELECTED_PARENT = NAME + \"/SELECTED_PARENT\";\nexport const SELECTION_POSITION = NAME + \"/SELECITON_POSITION\";\n","import { NAME } from \"./constants\";\nimport { createSelector } from \"reselect\";\nimport { CreationData } from \"./model\";\nimport river from \"../river\";\nimport display from \"../display\";\nimport { SingleOrigin } from \"../cards/model\";\n\nexport const getAll = (state: any) => state[NAME];\n\nexport const getContextMenuState = createSelector(getAll, (state: CreationData) => state.open);\n\nexport const getContextMenuRef = createSelector(getAll, (state: CreationData) => state.menuRef);\n\nexport const getContextMenuFullCardsRef = createSelector(getAll, (state: CreationData) => state.fullCardRef);\n\nexport const getContextMenuQARefs = createSelector(getAll, (state: CreationData) => state.qaRefs);\n\nexport const getCurrentSelectionPosition = createSelector(getAll, (state: CreationData) => state.selectionPosition);\n\nexport const getContextMenuInitData = createSelector(\n\tgetCurrentSelectionPosition,\n\tgetContextMenuState,\n\tgetContextMenuRef,\n\tgetContextMenuQARefs,\n\triver.selectors.getPushToRiverCards,\n\t(position, state, menuRef, qaRefs, riverCards) => {\n\t\treturn { position, state, menuRef, qaRefs, riverCards };\n\t}\n);\n\nexport const getCurrentSelectedString = createSelector(getAll, (state: CreationData) => state.manuallySelectedString);\n\nexport const getCurrentSelectedParent = createSelector(getAll, (state: CreationData) => state.selectedParentSpan);\n\nexport const getCurrentOrigin = createSelector(\n\t(state: any) => state,\n\tdisplay.selectors.getCurrentPage,\n\tgetCurrentSelectedParent,\n\t(state, currentPage, selectedParent): SingleOrigin => {\n\t\treturn {\n\t\t\tspanIndex: display.selectors.getSpanIndex(state, selectedParent as HTMLSpanElement),\n\t\t\tpage: currentPage,\n\t\t};\n\t}\n);\n","import { CreationType, CardOrigin, QAOrigin } from \"../../cards/model\";\nimport { isNullOrUndefined } from \"util\";\n\n//TODO-NICE: make this non-redundant, but for now it works\n\nexport const transformInputOrigin = (\n\tsourceOrigin: CardOrigin,\n\tsourceField: CreationType,\n\tcreationType: CreationType,\n\tgoalOrigin?: CardOrigin\n) => {\n\tif (!goalOrigin) {\n\t\tif (sourceField === creationType) return sourceOrigin;\n\n\t\tif (sourceField === \"NOTE\") {\n\t\t\t// this means SingleOrigin\n\t\t\treturn { q: {}, a: {}, [creationType === \"Q\" ? \"q\" : \"a\"]: sourceOrigin };\n\t\t}\n\n\t\tif (creationType === \"NOTE\") {\n\t\t\t//this means we need to transfrom QAOrigin to SingleOrigin\n\t\t\treturn { ...(sourceOrigin as QAOrigin)[sourceField === \"Q\" ? \"q\" : \"a\"] };\n\t\t}\n\n\t\t// swap cases\n\t\tif (creationType === \"Q\") {\n\t\t\treturn { q: (sourceOrigin as QAOrigin).a, a: {} };\n\t\t} else {\n\t\t\t//A\n\t\t\treturn { a: (sourceOrigin as QAOrigin).q, q: {} };\n\t\t}\n\t} else {\n\t\tif (sourceField === creationType) return { ...goalOrigin, ...sourceOrigin };\n\n\t\tif (sourceField === \"NOTE\" && !isNullOrUndefined((goalOrigin as QAOrigin).q)) {\n\t\t\t// this means SingleOrigin to QAOrigin\n\t\t\treturn { ...goalOrigin, [creationType === \"Q\" ? \"q\" : \"a\"]: sourceOrigin };\n\t\t}\n\n\t\tif (creationType === \"NOTE\") {\n\t\t\t//this means we need to transfrom QAOrigin to SingleOrigin\n\t\t\treturn { ...(sourceOrigin as QAOrigin)[sourceField === \"Q\" ? \"q\" : \"a\"] };\n\t\t}\n\n\t\t// swap cases\n\t\tif (creationType === \"Q\") {\n\t\t\treturn { q: (sourceOrigin as QAOrigin).a, a: (goalOrigin as QAOrigin).a };\n\t\t} else {\n\t\t\t//A\n\t\t\treturn { a: (sourceOrigin as QAOrigin).q, q: (goalOrigin as QAOrigin).q };\n\t\t}\n\t}\n};\n","import * as t from \"./actionTypes\";\nimport { CardType, CreationType, CardOrigin, QAOrigin, SingleOrigin } from \"../cards/model\";\nimport cards from \"../cards\";\nimport focus from \"../focus\";\nimport { getCurrentSelectedString, getCurrentSelectedParent, getContextMenuState, getCurrentOrigin } from \"./selectors\";\nimport { isNullOrUndefined } from \"util\";\nimport { transformInputOrigin } from \"./services/transformInputOrigin\";\nimport display from \"../display\";\n\nexport const toggleContextMenu = () => {\n\treturn (dispatch: any, getState: Function) => {\n\t\tconst state = getState();\n\t\tif (display.selectors.getDataExists(state)) {\n\t\t\tdispatch({ type: t.TOGGLE_CONTEXT_MENU });\n\t\t\tdispatch(focus.actions.toggleContextMenuFocus());\n\t\t}\n\t};\n};\n\nexport const closeContextMenu = () => {\n\treturn (dispatch: any, getState: Function) => {\n\t\tif (getContextMenuState(getState())) {\n\t\t\tdispatch({ type: t.CLOSE_CONTEXT_MENU });\n\t\t\tdispatch(focus.actions.updateFocus(\"SELECTION\"));\n\t\t}\n\t};\n};\n\nexport const openContextMenu = () => {\n\treturn (dispatch: any) => {\n\t\tdispatch({ type: t.OPEN_CONTEXT_MENU });\n\t\tdispatch(focus.actions.updateFocus(\"SELECTION\"));\n\t};\n};\n\nexport const grabSelectionForContextMenu = (type: CardType, creationType: CreationType, cardID?: string) => {\n\treturn (dispatch: Function, getState: Function) => {\n\t\tdispatch(closeContextMenu());\n\n\t\tconst state = getState();\n\n\t\t//TODO-NICE: think of a way to make this intuitive\n\t\t//const updateType = type === \"Q-A\" ? \"REPLACE\" : \"APPEND\";\n\t\tconst updateType = \"REPLACE\";\n\t\tconst isUpdate = cardID !== undefined;\n\n\t\t// this should be from the document\n\t\tconst selectedString = getCurrentSelectedString(state);\n\t\tconst selectedParent = getCurrentSelectedParent(state);\n\n\t\t// always overwrite origin, even if isUpdate, because updateType==replace\n\t\tconst origin: CardOrigin | undefined = selectedParent ? getCurrentOrigin(state) : undefined;\n\n\t\tlet transformedOrigin;\n\t\tif (origin) {\n\t\t\t// we exploit that the input from the document is always just a SingleOrigin=NoteOrigin\n\t\t\t// need to transform it because we can create als QA-Cards from document\n\t\t\ttransformedOrigin = transformInputOrigin(\n\t\t\t\torigin,\n\t\t\t\t\"NOTE\",\n\t\t\t\tcreationType,\n\t\t\t\tisUpdate ? (cards.selectors.getCards(state)[cardID as string].origin as CardOrigin) : undefined\n\t\t\t);\n\t\t}\n\n\t\tif (isUpdate) {\n\t\t\tdispatch(\n\t\t\t\tcards.actions.updateCardContent(\n\t\t\t\t\tselectedString,\n\t\t\t\t\tcardID as string,\n\t\t\t\t\tcreationType,\n\t\t\t\t\tupdateType,\n\t\t\t\t\ttransformedOrigin as CardOrigin\n\t\t\t\t)\n\t\t\t);\n\t\t} else {\n\t\t\tdispatch(\n\t\t\t\tcards.actions.pushCardContent(selectedString, creationType, updateType, type, transformedOrigin as CardOrigin)\n\t\t\t);\n\t\t}\n\n\t\tdispatch(resetManuallySelectedString());\n\t};\n};\n\nexport const hasNonEmptyOrigin = (origin?: CardOrigin) =>\n\t!!origin &&\n\t(!isNullOrUndefined((origin as SingleOrigin).spanIndex) ||\n\t\t!isNullOrUndefined((origin as QAOrigin).a?.spanIndex) ||\n\t\t!isNullOrUndefined((origin as QAOrigin).q?.spanIndex));\n\nexport const grabSelectionForSourceMenu = (\n\ttype: CardType,\n\tcreationType: CreationType,\n\tsourceField: CreationType,\n\torigin?: CardOrigin,\n\tcardID?: string\n) => {\n\treturn (dispatch: Function, getState: Function) => {\n\t\tdispatch(closeContextMenu());\n\n\t\tconst state = getState();\n\n\t\tconst updateType = \"REPLACE\";\n\t\tconst isUpdate = cardID !== undefined;\n\n\t\t//  this should be from the SourceCard in which the extract button has been clicked\n\t\t//\tthe SourceCard can or can not have an origin\n\t\tconst sourceHasNonEmptyOrigin = hasNonEmptyOrigin(origin);\n\t\tconst newOrigin = sourceHasNonEmptyOrigin\n\t\t\t? transformInputOrigin(\n\t\t\t\t\torigin as CardOrigin,\n\t\t\t\t\tsourceField,\n\t\t\t\t\tcreationType,\n\t\t\t\t\tisUpdate ? (cards.selectors.getCards(state)[cardID as string].origin as CardOrigin) : undefined\n\t\t\t  )\n\t\t\t: undefined;\n\t\tconst selectedString = getCurrentSelectedString(state);\n\n\t\t//TODO-NICE: untangle the types so that the as CardOrigin is not necessary in the dispatch,\n\t\t//maybe merge content and origin to avoid two object hierarchies?\n\t\tif (isUpdate) {\n\t\t\tdispatch(\n\t\t\t\tcards.actions.updateCardContent(\n\t\t\t\t\tselectedString,\n\t\t\t\t\tcardID as string,\n\t\t\t\t\tcreationType,\n\t\t\t\t\tupdateType,\n\t\t\t\t\tnewOrigin as CardOrigin\n\t\t\t\t)\n\t\t\t);\n\t\t} else {\n\t\t\tdispatch(cards.actions.pushCardContent(selectedString, creationType, updateType, type, newOrigin as CardOrigin));\n\t\t}\n\n\t\tdispatch(resetManuallySelectedString());\n\t\tdispatch(cards.actions.resetSourceCard());\n\t};\n};\n\nexport const updateManuallySelectedString = (str: string) => {\n\treturn { type: t.SELECTED_STRING, payload: str };\n};\n\nexport const resetManuallySelectedString = () => {\n\treturn updateManuallySelectedString(\"\");\n};\n\nexport const selectedParent = (span: null | HTMLSpanElement) => {\n\treturn { type: t.SELECTED_PARENT, payload: span };\n};\n\nexport const updateSelectionPosition = (x: number, y: number) => {\n\treturn { type: t.SELECTION_POSITION, payload: { x, y } };\n};\n","import * as t from \"./actionTypes\";\nimport { CreationData } from \"./model\";\nimport { createRef } from \"react\";\nimport { CardPayload } from \"../cards/model\";\nimport cards from \"../cards\";\n\nconst initialState: CreationData = {\n\topen: false,\n\tmenuRef: createRef(),\n\tfullCardRef: createRef(),\n\tqaRefs: [createRef(), createRef()],\n\tmanuallySelectedString: \"\",\n\tselectedParentSpan: null,\n\tselectionPosition: { x: 0, y: 0 },\n};\n\nconst creationData = (state = initialState, { type, payload }: { type: string; payload: any }): CreationData => {\n\tswitch (type) {\n\t\tcase t.TOGGLE_CONTEXT_MENU:\n\t\t\treturn { ...state, open: !state.open };\n\t\tcase t.CLOSE_CONTEXT_MENU:\n\t\t\treturn { ...state, open: false };\n\t\tcase t.OPEN_CONTEXT_MENU:\n\t\t\treturn { ...state, open: true };\n\t\tcase cards.actionTypes.CARD_PUSH:\n\t\t\t//TODO-NICE: reliance on order of refs (needs to be the same as order of qaRefs) and coupling to the fact that a new card was pushed\n\t\t\t// might need to change if I allow moving the cards\n\t\t\t//TODO-NICE: no support for multiple rivers\n\t\t\tif ((payload as CardPayload).card.type === \"Q-A\") return { ...state, qaRefs: [...state.qaRefs, createRef()] };\n\t\t\treturn state;\n\t\tcase t.SELECTED_STRING:\n\t\t\treturn { ...state, manuallySelectedString: payload as string };\n\t\tcase t.SELECTED_PARENT:\n\t\t\treturn { ...state, selectedParentSpan: payload };\n\t\tcase t.SELECTION_POSITION:\n\t\t\treturn { ...state, selectionPosition: payload };\n\t\tdefault:\n\t\t\treturn state;\n\t}\n};\n\nexport default creationData;\n","import React, { RefObject } from \"react\";\nimport NestedMenuItem from \"material-ui-nested-menu-item\";\nimport { MenuItem } from \"@material-ui/core\";\nimport { CardConfig, CardType, CreationType, QACardContent } from \"../../cards/model\";\nimport { useDispatch } from \"react-redux\";\nimport river from \"../../river\";\n\nexport const noteCardIsEmpty = (content: string) => content === \"\";\nexport const qaCardIsNotFull = (content: QACardContent) =>\n\t(content as QACardContent).q === \"\" || (content as QACardContent).a === \"\";\n\ntype dispatchRiver = (type: CardType, creationType: CreationType, cardID?: string | undefined) => void;\n\n//TODO-NICE: rename this to note\n//TODO-NICE: entangle this dispatchRiver buisness and use hooks in the card components instead\n\nconst SingleOptionItem = ({ cardConfig, dispatchRiver }: { cardConfig: CardConfig; dispatchRiver: dispatchRiver }) => {\n\tconst dispatch = useDispatch();\n\n\treturn (\n\t\t<MenuItem\n\t\t\tonClick={() => {\n\t\t\t\tdispatchRiver(cardConfig.type, \"NOTE\", cardConfig.cardID);\n\t\t\t}}\n\t\t\tonMouseEnter={() => {\n\t\t\t\tdispatch(river.actions.trySetHoveredCard(cardConfig.cardID, \"NOTE\"));\n\t\t\t}}\n\t\t>\n\t\t\t{cardConfig.type}\n\t\t</MenuItem>\n\t);\n};\n\nconst QAOptionItem = ({\n\tcardConfig,\n\tdispatchRiver,\n\tqaRef,\n}: {\n\tcardConfig: CardConfig;\n\tdispatchRiver: dispatchRiver;\n\tqaRef: RefObject<any> | undefined;\n}) => {\n\tconst dispatch = useDispatch();\n\n\treturn (\n\t\t<NestedMenuItem label=\"Q-A\" parentMenuOpen={true}>\n\t\t\t<MenuItem\n\t\t\t\tref={qaRef}\n\t\t\t\tonClick={() => {\n\t\t\t\t\tdispatchRiver(\"Q-A\", \"Q\", cardConfig.cardID);\n\t\t\t\t}}\n\t\t\t\tonMouseEnter={() => {\n\t\t\t\t\tdispatch(river.actions.trySetHoveredCard(cardConfig.cardID, \"Q\"));\n\t\t\t\t}}\n\t\t\t>\n\t\t\t\tQ\n\t\t\t</MenuItem>\n\t\t\t<MenuItem\n\t\t\t\tonClick={() => {\n\t\t\t\t\tdispatchRiver(\"Q-A\", \"A\", cardConfig.cardID);\n\t\t\t\t}}\n\t\t\t\tonMouseEnter={() => {\n\t\t\t\t\tdispatch(river.actions.trySetHoveredCard(cardConfig.cardID, \"A\"));\n\t\t\t\t}}\n\t\t\t>\n\t\t\t\tA\n\t\t\t</MenuItem>\n\t\t</NestedMenuItem>\n\t);\n};\n\nexport const CardConfigItem = ({\n\tcardConfig,\n\tdispatchRiver,\n\tqaRef,\n}: {\n\tcardConfig: CardConfig;\n\tdispatchRiver: dispatchRiver;\n\tqaRef?: RefObject<any>;\n}) => {\n\tswitch (cardConfig.type) {\n\t\tcase \"Q-A\":\n\t\t\treturn <QAOptionItem cardConfig={cardConfig} dispatchRiver={dispatchRiver} qaRef={qaRef}></QAOptionItem>;\n\t\tdefault:\n\t\t\treturn <SingleOptionItem cardConfig={cardConfig} dispatchRiver={dispatchRiver}></SingleOptionItem>;\n\t}\n};\n","import { Fragment } from \"react\";\nimport { MenuItem } from \"@material-ui/core\";\nimport React from \"react\";\n\n//TODO-NICE: clear qa-field button\n\nconst NewQACardQ = ({ onClick }: any) => <MenuItem onClick={onClick}>New: Q (Q-A)</MenuItem>;\nconst NewQACardA = ({ onClick }: any) => <MenuItem onClick={onClick}>New: A (Q-A)</MenuItem>;\nconst NewNoteCard = ({ onClick }: any) => <MenuItem onClick={onClick}>New: Note</MenuItem>;\n\nexport const NewButtons = ({ noteDispatch, qDispatch, aDispatch }: any) => {\n\treturn (\n\t\t<Fragment>\n\t\t\t<NewNoteCard onClick={noteDispatch}></NewNoteCard>\n\t\t\t<NewQACardQ onClick={qDispatch}></NewQACardQ>\n\t\t\t<NewQACardA onClick={aDispatch}></NewQACardA>\n\t\t</Fragment>\n\t);\n};\n","import React, { RefObject } from \"react\";\nimport Menu from \"@material-ui/core/Menu\";\nimport { Divider, MenuItem } from \"@material-ui/core\";\nimport { useDispatch, connect, useSelector } from \"react-redux\";\nimport { getContextMenuInitData, getContextMenuFullCardsRef } from \"../selectors\";\nimport { grabSelectionForContextMenu, grabSelectionForSourceMenu } from \"../actions\";\nimport { incrementer } from \"../../../shared/utils\";\nimport { CardConfig, CardType, CreationType, QACardContent, SourceCard } from \"../../cards/model\";\nimport { CardConfigItem, noteCardIsEmpty, qaCardIsNotFull } from \"./CardItems\";\nimport { NewButtons } from \"./NewButtons\";\nimport NestedMenuItem from \"material-ui-nested-menu-item\";\nimport cards from \"../../cards\";\n\nfunction ContextMenu({\n\tposition,\n\tstate,\n\tmenuRef,\n\tqaRefs,\n\triverCards,\n}: {\n\tposition: { x: number; y: number };\n\tstate: boolean;\n\tmenuRef: RefObject<any>;\n\tqaRefs: RefObject<any>[];\n\triverCards: CardConfig[];\n}) {\n\tconst fullCardsRef = useSelector(getContextMenuFullCardsRef);\n\n\tconst dispatch = useDispatch();\n\tconst sourceCard = useSelector(cards.selectors.getSourceCard);\n\n\t//TODO-NICE: open menu in editor to the right not over the document\n\n\tconst openState = state;\n\tconst dispatchRiver = (type: CardType, creationType: CreationType, cardID?: string) => {\n\t\tif (sourceCard) {\n\t\t\tdispatch(\n\t\t\t\tgrabSelectionForSourceMenu(\n\t\t\t\t\ttype,\n\t\t\t\t\tcreationType,\n\t\t\t\t\t(sourceCard as SourceCard).sourceField,\n\t\t\t\t\t(sourceCard as SourceCard).origin,\n\t\t\t\t\tcardID\n\t\t\t\t)\n\t\t\t);\n\t\t} else {\n\t\t\tdispatch(grabSelectionForContextMenu(type, creationType, cardID));\n\t\t}\n\t};\n\n\tconst increment = incrementer();\n\tconst qaRefIndex = incrementer();\n\n\tconst anchorPosition = openState ? { top: position.y, left: position.x } : undefined;\n\n\t//TODO-PERF: use partition function, or loop to avoid double iteration\n\t//TODO-NICE: abstract menu, this is doubled\n\tconst nonFullRiverCards = riverCards.filter((card) => {\n\t\tif (typeof card.content === \"string\") {\n\t\t\treturn noteCardIsEmpty(card.content);\n\t\t} else {\n\t\t\treturn qaCardIsNotFull(card.content as QACardContent);\n\t\t}\n\t});\n\n\tconst fullRiverCards = riverCards.filter((card) => {\n\t\tif (typeof card.content === \"string\") {\n\t\t\treturn !noteCardIsEmpty(card.content);\n\t\t} else {\n\t\t\treturn !qaCardIsNotFull(card.content as QACardContent);\n\t\t}\n\t});\n\n\t// TODO-NICE: use hidden MenuItem-pattern also for qa-ref\n\n\t// TODO-NICE: need to check for state before rendering MenuItems,\n\t// otherwise it shows up for a split-second when switching the menu off after adding to the river\n\t// weird Race Condition even if I dispatch closeContextMenu first?\n\treturn (\n\t\t<Menu\n\t\t\tref={openState ? menuRef : null}\n\t\t\tkeepMounted\n\t\t\topen={openState}\n\t\t\tanchorReference=\"anchorPosition\"\n\t\t\tanchorPosition={anchorPosition}\n\t\t>\n\t\t\t{openState &&\n\t\t\t\tnonFullRiverCards.map((cardConfig) => (\n\t\t\t\t\t<CardConfigItem\n\t\t\t\t\t\tcardConfig={cardConfig}\n\t\t\t\t\t\tdispatchRiver={dispatchRiver}\n\t\t\t\t\t\tkey={increment()}\n\t\t\t\t\t\tqaRef={cardConfig.type === \"Q-A\" ? qaRefs[qaRefIndex()] : undefined}\n\t\t\t\t\t></CardConfigItem>\n\t\t\t\t))}\n\t\t\t{openState && nonFullRiverCards.length > 0 && <Divider />}\n\n\t\t\t{openState && (\n\t\t\t\t<NewButtons\n\t\t\t\t\tnoteDispatch={() => {\n\t\t\t\t\t\tdispatchRiver(\"Note\", \"NOTE\");\n\t\t\t\t\t}}\n\t\t\t\t\tqDispatch={() => {\n\t\t\t\t\t\tdispatchRiver(\"Q-A\", \"Q\");\n\t\t\t\t\t}}\n\t\t\t\t\taDispatch={() => {\n\t\t\t\t\t\tdispatchRiver(\"Q-A\", \"A\");\n\t\t\t\t\t}}\n\t\t\t\t></NewButtons>\n\t\t\t)}\n\n\t\t\t{openState && fullRiverCards.length > 0 && <Divider />}\n\t\t\t{openState && fullRiverCards.length > 0 && (\n\t\t\t\t<NestedMenuItem label=\"Full cards: \" parentMenuOpen={true}>\n\t\t\t\t\t<MenuItem ref={fullCardsRef} style={{ position: \"absolute\" }}></MenuItem>\n\t\t\t\t\t{fullRiverCards.map((cardConfig) => (\n\t\t\t\t\t\t<CardConfigItem\n\t\t\t\t\t\t\tcardConfig={cardConfig}\n\t\t\t\t\t\t\tdispatchRiver={dispatchRiver}\n\t\t\t\t\t\t\tkey={increment()}\n\t\t\t\t\t\t\tqaRef={cardConfig.type === \"Q-A\" ? qaRefs[qaRefIndex()] : undefined}\n\t\t\t\t\t\t></CardConfigItem>\n\t\t\t\t\t))}\n\t\t\t\t</NestedMenuItem>\n\t\t\t)}\n\t\t</Menu>\n\t);\n}\n\nexport const ContextMenuContainer = connect(getContextMenuInitData)(ContextMenu);\n","import React, { useState, Fragment } from \"react\";\nimport { Snackbar, IconButton } from \"@material-ui/core\";\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { resetManuallySelectedString } from \"../actions\";\nimport { getCurrentSelectedString } from \"../selectors\";\n\nexport const SelectionSnackbar = () => {\n\tconst [open, setOpen] = useState(false);\n\tconst dispatch = useDispatch();\n\tconst selectedString = useSelector(getCurrentSelectedString);\n\n\tif (selectedString === \"\" && open) setOpen(false);\n\n\tif (selectedString !== \"\" && !open) setOpen(true);\n\n\tconst handleClose = (event: any, reason: string) => {\n\t\tif (reason === \"clickaway\") {\n\t\t\t// do not close on clickaway\n\t\t\tevent.preventDefault();\n\t\t} else {\n\t\t\tsetOpen(false);\n\t\t\tdispatch(resetManuallySelectedString());\n\t\t}\n\t};\n\n\tconst handleDismiss = () => {\n\t\tsetOpen(false);\n\t\tdispatch(resetManuallySelectedString());\n\t};\n\n\tconst message = (\n\t\t<Fragment>\n\t\t\t<div>{\"Current Selection: \"}</div>\n\t\t\t<div style={{ color: \"green\" }}> {selectedString}</div>\n\t\t</Fragment>\n\t);\n\n\treturn (\n\t\t<Snackbar\n\t\t\tanchorOrigin={{ vertical: \"top\", horizontal: \"center\" }}\n\t\t\topen={open}\n\t\t\tonClose={handleClose}\n\t\t\tmessage={message}\n\t\t\taction={\n\t\t\t\t<IconButton size=\"small\" aria-label=\"close\" color=\"inherit\" onClick={handleDismiss}>\n\t\t\t\t\t<CloseIcon fontSize=\"small\" />\n\t\t\t\t</IconButton>\n\t\t\t}\n\t\t/>\n\t);\n};\n","import { getContextMenuRef, getContextMenuQARefs, getContextMenuFullCardsRef } from \"./selectors\";\n\n// the root div for the menu invisibly covers the whole screen\n// the actual div that is visible is this\nconst baseContextMenuSelector = \"div.MuiPaper-root\";\n\nexport const contextMenuContainsTargetNode = (state: any, event: Event) => {\n\tconst menuRef = getContextMenuRef(state).current;\n\tconst fullCardsRef = getContextMenuFullCardsRef(state).current?.parentNode;\n\n\t// the nested items are rendered under a different menu\n\t// the current api does not allow access\n\t// so the qa-refs refer to the Q-button\n\t// we check the click against his parent,\n\t// which is the div that contains the Q and A buttons\n\tconst qaRefs = getContextMenuQARefs(state)\n\t\t.map((refObject) => refObject.current)\n\t\t.filter((cur) => !!cur)\n\t\t.map((ref) => ref.parentNode);\n\n\tconst target = event.target as Node;\n\n\tif (menuRef?.querySelector(baseContextMenuSelector)?.contains(target)) return true;\n\n\tif (fullCardsRef?.contains(target)) return true;\n\n\tfor (const qaRef of qaRefs) {\n\t\tif (qaRef.contains(target)) return true;\n\t}\n\n\treturn false;\n};\n","import * as actions from \"./actions\";\nimport * as constants from \"./constants\";\nimport * as actionTypes from \"./actionTypes\";\nimport reducer from \"./reducer\";\nimport * as selectors from \"./selectors\";\nimport * as components from \"./components\";\nimport * as utils from \"./utils\";\n\nexport default { actions, actionTypes, constants, components, reducer, selectors, utils };\n","import { Dispatch } from \"redux\";\nimport focus from \"../../focus\";\nimport display from \"../../display\";\nimport creation from \"../../creation\";\nimport { UserFocus } from \"../../focus/model\";\n\ntype KeyActionMap = { [key: string]: any };\n\ntype KeyEventDispatcher = (event: KeyboardEvent, dispatch: any, state?: any) => void;\n\nconst keyEventDispatcher = (keyMap: KeyActionMap) => (event: KeyboardEvent, dispatch: any) => {\n\tconst action = keyMap[event.key];\n\tif (action) {\n\t\tevent.preventDefault();\n\t\tdispatch(action);\n\t}\n};\n\nconst pageControlKeyMap: KeyActionMap = {\n\tArrowLeft: display.actions.previousPage(),\n\tArrowRight: display.actions.nextPage(),\n};\n\nconst contextMenuControlKeyMap: KeyActionMap = {\n\tt: creation.actions.toggleContextMenu(),\n};\n\nconst selectionFocusKeyMap = {\n\t...pageControlKeyMap,\n\t...contextMenuControlKeyMap,\n};\n\nconst selectionFocusDispatcher = keyEventDispatcher(selectionFocusKeyMap);\n\nconst contextMenuFocusKeyMap = { ...contextMenuControlKeyMap };\nconst contextMenuFocusDispatcher = keyEventDispatcher(contextMenuFocusKeyMap);\n\nconst doNothing = (event: any, dispatch: any) => {};\n\nconst focusDispatcherMap: { [focus in UserFocus]: KeyEventDispatcher } = {\n\tSELECTION: selectionFocusDispatcher,\n\tCONTEXT_MENU: contextMenuFocusDispatcher,\n\tEDITOR: doNothing,\n\tCONTROL: doNothing,\n\tEDITOR_CONTROL: doNothing,\n};\n\nexport const keyDownControl = (event: KeyboardEvent) => {\n\treturn (dispatch: Dispatch | any, getState: Function) => {\n\t\tconst state = getState();\n\t\tconst userFocus = focus.selectors.getFocus(state);\n\t\tconst dispatcher = focusDispatcherMap[userFocus];\n\n\t\tdispatcher(event, dispatch, state);\n\t};\n};\n","import { connect } from \"react-redux\";\nimport { useEventListener } from \"../hooks/useEventListener\";\nimport { keyDownControl } from \"../services/keyboardControl\";\nimport { mouseDownControl, mouseUpControl, rightClickControl } from \"../services/mouseControl\";\n\nfunction Control({\n\tkeyDownControl,\n\tmouseDownControl,\n\tmouseUpControl,\n\trightClickControl,\n}: {\n\tkeyDownControl: (event: KeyboardEvent) => void;\n\tmouseDownControl: (event: MouseEvent) => void;\n\tmouseUpControl: (event: MouseEvent) => void;\n\trightClickControl: (event: MouseEvent) => void;\n}) {\n\tuseEventListener(\"keydown\", keyDownControl);\n\tuseEventListener(\"mousedown\", mouseDownControl);\n\tuseEventListener(\"mouseup\", mouseUpControl);\n\tuseEventListener(\"contextmenu\", rightClickControl);\n\treturn null;\n}\n\nexport const ControlContainer = connect(\n\t() => {\n\t\treturn {};\n\t},\n\t{\n\t\tkeyDownControl,\n\t\tmouseDownControl,\n\t\tmouseUpControl,\n\t\trightClickControl,\n\t}\n)(Control);\n","import creation from \"../../creation\";\nimport focus from \"../../focus\";\nimport cards from \"../../cards\";\nimport river from \"../../river\";\n\nexport const mouseDownControl = (event: MouseEvent) => {\n\treturn (dispatch: any, getState: Function) => {\n\t\tconst state = getState();\n\t\t// the menu-ref is used for all drop-down menus, so this closes all of them\n\t\tconst clickOutSideOfMenu = !creation.utils.contextMenuContainsTargetNode(state, event);\n\t\tif (clickOutSideOfMenu) {\n\t\t\tdispatch(creation.actions.closeContextMenu());\n\t\t}\n\t};\n};\n\nexport const mouseUpControl = (event: MouseEvent) => {\n\treturn (dispatch: any, getState: Function) => {\n\t\t// if the menu is already open, this means we have opened it in the editor\n\t\tif (creation.selectors.getContextMenuState(getState())) return;\n\n\t\tconst selection = document.getSelection();\n\t\tif (selection) {\n\t\t\tconst selectedStr = selection.toString();\n\n\t\t\tif (selectedStr !== \"\") {\n\t\t\t\tconst state = getState();\n\t\t\t\tconst goalCard = cards.selectors.getGoalCard(state);\n\t\t\t\tconst userFocus = focus.selectors.getFocus(state);\n\n\t\t\t\tconst shouldGrab = userFocus === \"EDITOR\" || userFocus === \"SELECTION\";\n\n\t\t\t\tif (goalCard && shouldGrab) {\n\t\t\t\t\t// this is the dispatch for the grab for field button\n\t\t\t\t\t//(which has been pressed before the mouse-up if goalCard is not null), here we actually update the goal card\n\n\t\t\t\t\t//TODO-NICE: allow grabbing from other cards\n\t\t\t\t\t// for now we dont allow grabbing from other cards to simplifiy the card->card workflow\n\t\t\t\t\tif (userFocus !== \"EDITOR\")\n\t\t\t\t\t\tdispatch(\n\t\t\t\t\t\t\tcards.actions.updateCardContent(\n\t\t\t\t\t\t\t\tselectedStr,\n\t\t\t\t\t\t\t\tgoalCard.cardID,\n\t\t\t\t\t\t\t\tgoalCard.creationType,\n\t\t\t\t\t\t\t\t\"REPLACE\",\n\t\t\t\t\t\t\t\tgoalCard.origin\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t);\n\t\t\t\t\tdispatch(cards.actions.resetGoalCard());\n\t\t\t\t} else {\n\t\t\t\t\t// this is the dispatch for the ContextMenu\n\t\t\t\t\tif (userFocus === \"SELECTION\") {\n\t\t\t\t\t\t//if the user is focused on the document, the push-to river should always be the active=page-wise river\n\t\t\t\t\t\tdispatch(river.actions.setPushToRiver(river.selectors.getActiveRiverMakeUpID(state)));\n\t\t\t\t\t\tdispatch(creation.actions.selectedParent(selection.anchorNode?.parentNode as HTMLSpanElement));\n\t\t\t\t\t\tdispatch(creation.actions.updateManuallySelectedString(selectedStr));\n\t\t\t\t\t\tdispatch(creation.actions.updateSelectionPosition(event.x, event.y));\n\t\t\t\t\t\tdispatch(creation.actions.openContextMenu());\n\t\t\t\t\t}\n\n\t\t\t\t\t// this is the dispatch to prepare for extraction from card\n\t\t\t\t\tif (userFocus === \"EDITOR\") {\n\t\t\t\t\t\tdispatch(creation.actions.updateManuallySelectedString(selectedStr));\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t};\n};\n\n//TODO-NICE: make selection-dropable on buttons, so that they can be send to cards, make this the default instead of context-menu?\n// imagine: toolbar with new Note, new A, new Q | all the cards and you can drop off\n\n//TODO-NICE: delete extracted str in source\n\nexport const rightClickControl = (event: MouseEvent) => {\n\treturn (dispatch: any, getState: Function) => {\n\t\tconst state = getState();\n\t\tconst userFocus = focus.selectors.getFocus(state);\n\n\t\t// this is set via left-click\n\t\tconst selectedStr = creation.selectors.getCurrentSelectedString(state);\n\n\t\tif (selectedStr === \"\") return;\n\n\t\tevent.preventDefault();\n\n\t\t// this is the dispatch for the ContextMenu inside the editor\n\t\tif (userFocus === \"EDITOR\") {\n\t\t\tdispatch(creation.actions.updateSelectionPosition(event.x, event.y));\n\t\t\tdispatch(creation.actions.openContextMenu());\n\t\t}\n\t};\n};\n","import { useState } from \"react\";\nimport SpeakerNotesOutlinedIcon from \"@material-ui/icons/SpeakerNotesOutlined\";\nimport SpeakerNotesTwoToneIcon from \"@material-ui/icons/SpeakerNotesTwoTone\";\nimport React from \"react\";\nimport { IconButton } from \"@material-ui/core\";\nimport { useDispatch } from \"react-redux\";\nimport river from \"../../river\";\n\nexport const ShowRiverButton = () => {\n\tconst [outlined, setOutlined] = useState(true);\n\tconst dispatch = useDispatch();\n\treturn (\n\t\t<IconButton\n\t\t\ttype=\"button\"\n\t\t\tonClick={() => {\n\t\t\t\tdispatch(river.actions.toggleRiverShowState());\n\t\t\t\tsetOutlined(!outlined);\n\t\t\t}}\n\t\t>\n\t\t\t{outlined ? (\n\t\t\t\t<SpeakerNotesOutlinedIcon></SpeakerNotesOutlinedIcon>\n\t\t\t) : (\n\t\t\t\t<SpeakerNotesTwoToneIcon></SpeakerNotesTwoToneIcon>\n\t\t\t)}\n\t\t</IconButton>\n\t);\n};\n","import { useSelector, useDispatch } from \"react-redux\";\nimport { getDocumentNames } from \"../selectors\";\nimport React, { ChangeEvent, Fragment, useRef, MutableRefObject } from \"react\";\nimport { Divider, Menu, MenuItem, IconButton } from \"@material-ui/core\";\nimport { changeDocument, loadDocumentDataSets, downloadDBData } from \"../actions\";\nimport MoreVertIcon from \"@material-ui/icons/MoreVert\";\nimport { DocumentData } from \"../model\";\nimport display from \"../../display\";\nimport cards from \"../../cards\";\n\n//TODO-NICE: have way to merge two document-workspaces\n\nexport const InputDocument = ({ handleClose, label }: any) => {\n\tconst dispatch = useDispatch();\n\n\tconst ref: MutableRefObject<null | HTMLInputElement> = useRef(null);\n\n\treturn (\n\t\t<Fragment>\n\t\t\t<MenuItem\n\t\t\t\tonClick={() => {\n\t\t\t\t\t(ref.current as HTMLInputElement).click();\n\t\t\t\t}}\n\t\t\t>\n\t\t\t\t{label}\n\t\t\t</MenuItem>\n\t\t\t<input\n\t\t\t\tref={ref}\n\t\t\t\tstyle={{ display: \"none\" }}\n\t\t\t\tonChange={(event: ChangeEvent<HTMLInputElement>) => {\n\t\t\t\t\tconst files = event.target.files;\n\t\t\t\t\tconst pdf = files ? files[0] : null;\n\t\t\t\t\tif (pdf) {\n\t\t\t\t\t\tdispatch(changeDocument(pdf));\n\t\t\t\t\t}\n\t\t\t\t\thandleClose();\n\t\t\t\t}}\n\t\t\t\ttype=\"file\"\n\t\t\t\taccept=\".pdf\"\n\t\t\t/>\n\t\t</Fragment>\n\t);\n};\n\nexport const InputDataSets = ({ handleClose, label }: any) => {\n\tconst dispatch = useDispatch();\n\n\tconst activeDocument = useSelector(display.selectors.getPDFName);\n\n\tconst ref: MutableRefObject<null | HTMLInputElement> = useRef(null);\n\n\treturn (\n\t\t<Fragment>\n\t\t\t<MenuItem\n\t\t\t\tonClick={() => {\n\t\t\t\t\t(ref.current as HTMLInputElement).click();\n\t\t\t\t}}\n\t\t\t>\n\t\t\t\t{label}\n\t\t\t</MenuItem>\n\t\t\t<input\n\t\t\t\tref={ref}\n\t\t\t\tstyle={{ display: \"none\" }}\n\t\t\t\tonChange={(event: ChangeEvent<HTMLInputElement>) => {\n\t\t\t\t\tconst files = event.target.files;\n\t\t\t\t\tconst file = files ? files[0] : null;\n\t\t\t\t\tif (file) {\n\t\t\t\t\t\tconst reader = new FileReader();\n\t\t\t\t\t\treader.readAsText(file);\n\t\t\t\t\t\treader.onload = () => {\n\t\t\t\t\t\t\t//TODO-NICE: sanitize, escape os new line difference, prepare multimedia cards\n\t\t\t\t\t\t\t//TODO-NICE: merge same name-pdfs and think about collision in general\n\n\t\t\t\t\t\t\tconst uploadedDataSets = JSON.parse(reader.result as string);\n\t\t\t\t\t\t\tdispatch(loadDocumentDataSets(uploadedDataSets));\n\n\t\t\t\t\t\t\tconst foundDataSet = (uploadedDataSets as DocumentData[]).find(\n\t\t\t\t\t\t\t\t(dbData) => dbData.name === activeDocument\n\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\tif (foundDataSet) {\n\t\t\t\t\t\t\t\t//TODO-NICE: merge uploaded state with current-one and dont overwrite\n\t\t\t\t\t\t\t\t// if the uploaded dataset corresponds to the current document, overwrite current with uploaded\n\t\t\t\t\t\t\t\tdispatch({ type: cards.actionTypes.GLOBAL_RESET, payload: foundDataSet });\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t};\n\t\t\t\t\t}\n\t\t\t\t\thandleClose();\n\t\t\t\t}}\n\t\t\t\ttype=\"file\"\n\t\t\t\taccept=\".txt\"\n\t\t\t/>\n\t\t</Fragment>\n\t);\n};\n\nexport const Options = () => {\n\tconst activeDocument = useSelector(display.selectors.getPDFName);\n\tconst documents = useSelector(getDocumentNames);\n\n\tconst [anchorEl, setAnchorEl] = React.useState<null | HTMLElement>(null);\n\n\tconst handleClick = (event: React.MouseEvent<HTMLButtonElement>) => {\n\t\tsetAnchorEl(event.currentTarget);\n\t};\n\n\tconst handleClose = () => {\n\t\tsetAnchorEl(null);\n\t};\n\n\tconst dispatch = useDispatch();\n\n\treturn (\n\t\t<div style={{ minWidth: 160 }}>\n\t\t\t<IconButton type=\"button\" onClick={handleClick}>\n\t\t\t\t<MoreVertIcon></MoreVertIcon>\n\t\t\t</IconButton>\n\t\t\t<Menu id=\"simple-menu\" anchorEl={anchorEl} keepMounted open={Boolean(anchorEl)} onClose={handleClose}>\n\t\t\t\tActive Document:\n\t\t\t\t<br></br>\n\t\t\t\t{activeDocument?.replace(\".pdf\", \"\")}\n\t\t\t\t<br></br>\n\t\t\t\t<br></br>\n\t\t\t\t<Divider />\n\t\t\t\t<br></br>\n\t\t\t\tDocuments with existing data:\n\t\t\t\t<ul>{documents.map((document) => (document ? <li>{document.replace(\".pdf\", \"\")}</li> : null))}</ul>\n\t\t\t\t<br></br>\n\t\t\t\t<Divider />\n\t\t\t\t<InputDocument handleClose={handleClose} label={\"Load document\"}></InputDocument>\n\t\t\t\t<Divider />\n\t\t\t\t<MenuItem\n\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\tdispatch(downloadDBData());\n\t\t\t\t\t\thandleClose();\n\t\t\t\t\t}}\n\t\t\t\t>\n\t\t\t\t\tDownload document datasets\n\t\t\t\t</MenuItem>\n\t\t\t\t<Divider />\n\t\t\t\t<InputDataSets handleClose={handleClose} label={\"Upload document datasets\"}></InputDataSets>\n\t\t\t</Menu>\n\t\t</div>\n\t);\n};\n","import display from \"../../display\";\nimport focus from \"../../focus\";\nimport river from \"../../river\";\nimport React, { ChangeEvent } from \"react\";\nimport { AppBar, Toolbar, Divider, Tabs, Tab, Grid } from \"@material-ui/core\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { ShowRiverButton } from \"./ShowRiverButton\";\nimport { Options } from \"./Options\";\n\n//TODO-NICE: download/load csv for Anki\nexport const ControlBar = () => {\n\tconst dispatch = useDispatch();\n\tconst displayFocus = useSelector(focus.selectors.getDisplayFocus);\n\n\tconst value = displayFocus === \"ACTIVE_RIVER\" ? 0 : 1;\n\n\tconst handleChange = (_: ChangeEvent<{}>, newValue: number) => {\n\t\tdispatch(\n\t\t\tnewValue === 0\n\t\t\t\t? focus.actions.updateDisplayFocus(\"ACTIVE_RIVER\")\n\t\t\t\t: focus.actions.updateDisplayFocus(\"SUMMARY_RIVER\")\n\t\t);\n\t};\n\n\tconst totalPages = useSelector(display.selectors.getTotalPages);\n\treturn (\n\t\t<Grid\n\t\t\titem\n\t\t\tonMouseEnter={() => {\n\t\t\t\tdispatch(focus.actions.tryUpdateFocus(\"CONTROL\"));\n\t\t\t}}\n\t\t>\n\t\t\t<AppBar>\n\t\t\t\t<Toolbar variant=\"dense\">\n\t\t\t\t\t<Tabs value={value} onChange={handleChange}>\n\t\t\t\t\t\t<Tab label=\"ActiveRiver\" />\n\t\t\t\t\t\t<Tab label=\"SummaryRiver\" />\n\t\t\t\t\t</Tabs>\n\t\t\t\t\t<Divider orientation=\"vertical\" flexItem />\n\t\t\t\t\t{totalPages && <display.components.PageChooser></display.components.PageChooser>}\n\t\t\t\t\t{totalPages && <display.components.PreviousButton></display.components.PreviousButton>}\n\t\t\t\t\t{totalPages && <display.components.NextButton></display.components.NextButton>}\n\t\t\t\t\t<Divider orientation=\"vertical\" flexItem />\n\t\t\t\t\t{value === 0 && <ShowRiverButton></ShowRiverButton>}\n\t\t\t\t\t{value === 0 && <display.components.ShowMaterialButton></display.components.ShowMaterialButton>}\n\t\t\t\t\t{value === 0 && <Divider orientation=\"vertical\" flexItem />}\n\t\t\t\t\t{totalPages && <river.components.RiverContentFormGroup></river.components.RiverContentFormGroup>}\n\t\t\t\t\t{totalPages && <Divider orientation=\"vertical\" flexItem />}\n\t\t\t\t\t<Options></Options>\n\t\t\t\t</Toolbar>\n\t\t\t</AppBar>\n\t\t</Grid>\n\t);\n};\n","import { CentralControl, DocumentData, DocumentDB } from \"./model\";\nimport * as t from \"./actionTypes\";\n\nconst initialState: CentralControl = { documentDB: {} };\n\n//TODO-NICE: PDF-date gets saved with name, better use some hash or something (rename of document file is likely) -> use size or last-modified or smth like that instead of name\n\nconst centralControl = (\n\tstate = initialState,\n\t{ type, payload }: { type: string; payload: DocumentData | DocumentData[] }\n): CentralControl => {\n\tswitch (type) {\n\t\tcase t.ARCHIVE_CURRENT_DATA:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tdocumentDB: { ...state.documentDB, [(payload as DocumentData).name]: payload as DocumentData },\n\t\t\t};\n\t\tcase t.LOAD_DOCUMENT_DATA_SETS:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tdocumentDB: {\n\t\t\t\t\t...state.documentDB,\n\t\t\t\t\t...(payload as DocumentData[]).reduce((prev, dbData) => {\n\t\t\t\t\t\tprev[dbData.name] = dbData;\n\t\t\t\t\t\treturn prev;\n\t\t\t\t\t}, {} as DocumentDB),\n\t\t\t\t},\n\t\t\t};\n\t\tdefault:\n\t\t\treturn state;\n\t}\n};\n\nexport default centralControl;\n","import * as actions from \"./actions\";\nimport * as actionTypes from \"./actionTypes\";\nimport * as components from \"./components\";\nimport * as constants from \"./constants\";\nimport reducer from \"./reducer\";\nimport * as selectors from \"./selectors\";\n\nexport default { actions, actionTypes, components, constants, reducer, selectors };\n","import React from \"react\";\nimport Grid from \"@material-ui/core/Grid\";\nimport control from \"../modules/control\";\nimport creation from \"../modules/creation\";\nimport river from \"../modules/river\";\nimport { makeStyles, Theme, createStyles, useScrollTrigger, Zoom, Toolbar, Fab } from \"@material-ui/core\";\nimport KeyboardArrowUpIcon from \"@material-ui/icons/KeyboardArrowUp\";\n\n//TODO: make show/hide depdendant on tab, also Page choice, control-bar dependant on tab\n\nconst useStyles = makeStyles((theme: Theme) =>\n\tcreateStyles({\n\t\troot: {\n\t\t\tposition: \"fixed\",\n\t\t\tbottom: theme.spacing(2),\n\t\t\tright: theme.spacing(2),\n\t\t},\n\t})\n);\n\nfunction ScrollTop(props: any) {\n\tconst { children } = props;\n\tconst classes = useStyles();\n\tconst trigger = useScrollTrigger({\n\t\tdisableHysteresis: true,\n\t\tthreshold: 100,\n\t});\n\n\tconst handleClick = (event: React.MouseEvent<HTMLDivElement>) => {\n\t\tconst anchor = ((event.target as HTMLDivElement).ownerDocument || document).querySelector(\"#back-to-top-anchor\");\n\n\t\tif (anchor) {\n\t\t\tanchor.scrollIntoView({ behavior: \"smooth\", block: \"center\" });\n\t\t}\n\t};\n\n\treturn (\n\t\t<Zoom in={trigger}>\n\t\t\t<div onClick={handleClick} role=\"presentation\" className={classes.root}>\n\t\t\t\t{children}\n\t\t\t</div>\n\t\t</Zoom>\n\t);\n}\n\nexport function ReaderScene() {\n\treturn (\n\t\t<div>\n\t\t\t<control.components.ControlContainer></control.components.ControlContainer>\n\t\t\t<Grid container justify=\"center\" direction=\"column\" alignItems=\"stretch\" spacing={1}>\n\t\t\t\t<control.components.ControlBar></control.components.ControlBar>\n\t\t\t\t<Toolbar id=\"back-to-top-anchor\" />\n\n\t\t\t\t<river.components.ActiveRiverView></river.components.ActiveRiverView>\n\t\t\t\t<river.components.SummaryRiverView></river.components.SummaryRiverView>\n\t\t\t</Grid>\n\t\t\t<ScrollTop>\n\t\t\t\t<Fab color=\"secondary\" size=\"small\" aria-label=\"scroll back to top\">\n\t\t\t\t\t<KeyboardArrowUpIcon />\n\t\t\t\t</Fab>\n\t\t\t</ScrollTop>\n\t\t\t<creation.components.ContextMenuContainer></creation.components.ContextMenuContainer>\n\t\t\t<creation.components.SelectionSnackbar></creation.components.SelectionSnackbar>\n\t\t</div>\n\t);\n}\n","import { createStore } from \"redux\";\nimport { applyMiddleware } from \"redux\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport thunk from \"redux-thunk\";\nimport { combineReducers } from \"redux\";\nimport focus from \"./modules/focus\";\nimport creation from \"./modules/creation\";\nimport river from \"./modules/river\";\nimport display from \"./modules/display\";\nimport cards from \"./modules/cards\";\nimport { persistStore, persistReducer, createTransform } from \"redux-persist\";\nimport { CreationData } from \"./modules/creation/model\";\nimport { createRef } from \"react\";\nimport { DisplayData } from \"./modules/display/model\";\nimport storage from \"redux-persist/lib/storage\"; // defaults to localStorage for web\nimport control from \"./modules/control\";\n\nconst rootReducer = combineReducers({\n\t[focus.constants.NAME]: focus.reducer,\n\t[creation.constants.NAME]: creation.reducer,\n\t[river.constants.NAME]: river.reducer,\n\t[display.constants.NAME]: display.reducer,\n\t[cards.constants.NAME]: cards.reducer,\n\t[control.constants.NAME]: control.reducer,\n});\n\nconst stateSanitizer = (state: any) => {\n\treturn state.displayData.pdf ? { ...state, displayData: { ...state.displayData, pdf: \"PDF_FILE_IS_HERE\" } } : state;\n};\n\nconst creationTransform = createTransform(\n\t(inboundState: CreationData) => {\n\t\treturn { ...inboundState, menuRef: null, qaRefs: inboundState.qaRefs.map((_) => null), selectedParentSpan: null };\n\t},\n\t(outboundState): CreationData => {\n\t\treturn {\n\t\t\t...outboundState,\n\t\t\tmenuRef: createRef(),\n\t\t\tfullCardRef: createRef(),\n\t\t\tqaRefs: outboundState.qaRefs.map((_) => createRef()),\n\t\t};\n\t},\n\t{ whitelist: [creation.constants.NAME] }\n);\n\n//TODO-NICE: find way to save PDF in browser, maybe manually use indexeddb and use that in transform?\n// idea: make store-field pdfAsBase64 and use thunk for async-filling the field, then when reloading, use thunk to format\n// const reader = new FileReaderSync();\n\n// function readFileAsync(file: File) {\n// \treturn new Promise((resolve) => {\n// \t\treader.onload = () => {\n// \t\t\tresolve(reader.result);\n// \t\t};\n// \t\treader.onerror = () => resolve(null);\n\n// \t\treader.readAsDataURL(file);\n// \t});\n// }\n\nconst displayTransform = createTransform(\n\t(inboundState: DisplayData) => {\n\t\tlet pdf = null;\n\t\t// if (inboundState.pdf) {\n\t\t// \tpdf = await readFileAsync(inboundState.pdf);\n\t\t// }\n\t\tconst result = { ...inboundState, documentRef: null, materialData: null, pdf };\n\t\treturn result;\n\t},\n\t(outboundState): DisplayData => {\n\t\treturn {\n\t\t\t...outboundState,\n\t\t\tpdf: undefined,\n\t\t\tdocumentRef: createRef(),\n\t\t\tmaterialData: { materialDataTimeStamp: -Infinity },\n\t\t};\n\t},\n\t{ whitelist: [display.constants.NAME] }\n);\n\nconst persistConfig = {\n\tkey: \"root\",\n\tstorage, //: storage(\"ClayMemory\"),\n\ttransforms: [creationTransform, displayTransform],\n};\n\nconst persistedReducer = persistReducer(persistConfig, rootReducer);\n\nconst composeEnhancers = composeWithDevTools({ stateSanitizer });\nconst enhancer = composeEnhancers(applyMiddleware(thunk));\n\nexport const store = createStore(persistedReducer, enhancer);\n\nexport const persistor = persistStore(store);\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { ReaderScene } from \"./scenes/ReaderScene\";\nimport { Provider } from \"react-redux\";\nimport { store, persistor } from \"./store\";\nimport { PersistGate } from \"redux-persist/es/integration/react\";\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<Provider store={store}>\n\t\t\t<PersistGate loading={null} persistor={persistor}>\n\t\t\t\t<ReaderScene></ReaderScene>\n\t\t\t</PersistGate>\n\t\t</Provider>\n\t</React.StrictMode>,\n\tdocument.getElementById(\"root\")\n);\n","function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 78;"],"sourceRoot":""}