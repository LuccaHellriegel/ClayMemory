{"version":3,"sources":["modules/display/model.ts","modules/text/constants.ts","modules/text/components/NewNoteCardTooltip.tsx","modules/text/components/AddQAButtonTooltip.tsx","modules/text/components/DeleteCardButtonTooltip.tsx","modules/text/index.ts","shared/utils.ts","modules/display/slice.ts","modules/display/constants.ts","modules/display/components/NavigationButtons.tsx","modules/display/selectors.ts","modules/display/components/PageChooser/PageChooser.tsx","modules/display/components/PDFDocument/PageKeyboardControl.tsx","modules/display/components/PDFDocument/HTMLElementMeasurer.tsx","modules/display/components/OriginMarkedSnackbar.tsx","modules/river/constants.ts","modules/river/model.ts","modules/cards/constants.ts","modules/cards/model/permutation.ts","modules/cards/model/content.ts","modules/cards/model/config.ts","modules/cards/selectors.ts","modules/cards/slice.ts","modules/cards/components/AddNoteButton.tsx","modules/cards/components/AddQAButton.tsx","modules/cards/components/DeleteCardButton.tsx","modules/cards/model/origin.ts","modules/cards/index.ts","modules/river/selectors.ts","shared/GreenCheckbox.tsx","modules/river/slice.ts","modules/river/components/RiverContentFormGroup.tsx","modules/selection/selectors.ts","modules/selection/services/use-selection.ts","modules/selection/model.ts","modules/selection/services/get-selection.ts","modules/selection/slice.ts","modules/selection/constants.ts","modules/selection/actions.ts","modules/selection/components/SelectionSnackbar.tsx","modules/selection/components/MaterialMouseUp.tsx","modules/selection/components/CardMouseUp.tsx","modules/selection/components/AppendButton.tsx","modules/selection/components/ContextMenu.tsx","modules/selection/components/ReplaceButton.tsx","modules/selection/index.ts","modules/river/components/CardRiver/Cards/ClayCardField.tsx","modules/river/components/CardRiver/Cards/JumpToOriginButton.tsx","modules/river/components/CardRiver/Cards/ClayCardFieldButtons.tsx","modules/river/components/CardRiver/Cards/QACard.tsx","modules/river/components/CardRiver/Cards/NoteCard.tsx","modules/river/components/CardRiver/Cards/ClayCard.tsx","modules/river/components/CardRiver/ClayCardGridItems.tsx","modules/river/services/filterCardConfigs.tsx","modules/river/components/CardRiver/CardRiver.tsx","modules/river/components/SwitchActiveRiver.tsx","modules/river/components/ShowRiverCheckbox.tsx","modules/river/index.ts","modules/display/components/PageSpanControl.tsx","modules/display/components/PDFDocument/PDFPage.tsx","modules/display/components/PDFDocument/RiverMaterialPair.tsx","modules/display/components/PDFDocument/PageScrollControl.tsx","modules/display/components/PDFDocument/RiverMaterialPairList.tsx","modules/display/components/PDFDocument/PDFDocument.tsx","modules/display/components/PDFDocument/cachePageDimensions.tsx","modules/display/components/RiverExplorer.tsx","modules/display/components/Display.tsx","modules/display/components/ViewTabs.tsx","modules/display/components/ShowMaterialCheckbox.tsx","modules/display/index.ts","modules/control/selectors.ts","modules/db/selectors.ts","modules/db/slice.ts","modules/db/constants.ts","modules/db/index.ts","modules/control/actions.ts","modules/control/components/Options/DeleteDocumentButton.tsx","modules/control/components/Options/InputDataSets.tsx","modules/control/components/Options/InputDocument.tsx","modules/control/components/Options/LoadDocumentDataButton.tsx","modules/control/components/Options/DocumentOptionItem.tsx","modules/control/components/Options/Options.tsx","modules/control/components/ClayMemorySearchBar.tsx","modules/control/components/UndoRedoButtons.tsx","modules/control/components/ShowHideButton.tsx","modules/control/components/ControlBar.tsx","modules/control/index.ts","scene/ReaderScene.tsx","persist.ts","store.ts","index.tsx"],"names":["View","switchToActiveRiverTooltip","switchToSummaryRiverTooltip","undoTooltip","redoTooltip","nextPageTooltip","previousPageTooltip","deleteCardTooltip","jumpToOriginTooltip","ChoiceCardAsAppendGoal","AppendToCardTooltip","CardIsAppendGoalTooltip","ChoiceCardAsReplaceGoal","ReplaceCardTooltip","CardIsReplaceGoalTooltip","newQACardTooltip","newNoteCardTooltip","deleteDocumentTooltip","loadSavedDocumentTooltip","noMaterialText","loadingMaterialText","activeDocumentText","existingDataText","loadMaterialText","downloadDatasetsText","uploadDatasetsText","noteText","questionText","answerText","defaultEnterDelay","defaultEnterNextDelay","NewNoteCardTooltip","children","Tooltip","title","enterDelay","enterNextDelay","AddQAButtonTooltip","DeleteCardButtonTooltip","components","constants","keyMap","pageCorrections","newPage","totalPages","incrementer","counter","curCounter","simpleReducer","field","state","payload","initialState","displayStatus","currentPage","scrollToPage","windowMeasurements","spanOrigin","documentSearch","topOffset","currentView","RiverMaterial","pdfUpload","displaySlice","createSlice","name","reducers","pageUpdate","page","shouldScroll","nextPage","previousPage","existingDocumentPayload","_","pdf","undefined","actions","PreviousButton","dispatch","useDispatch","text","IconButton","type","onClick","NextButton","PageNavigation","Card","variant","Grid","container","direction","item","Divider","orientation","getAll","getPDF","createSelector","getWindowMeasurements","getPDFName","getTotalPages","getCurrentPage","getScrollToPage","getPageControlData","getDisplayStatus","displayStatusIsShow","status","getSpanOrigin","getDocumentSearch","getTopOffset","getCurrentView","nonDigitRegEx","PageNumberTextField","useSelector","useState","error","value","toString","userInput","setState","TextField","inputProps","style","padding","fontSize","fontFamily","fontWeight","lineHeight","letterSpacing","onKeyDown","event","key","preventDefault","submittedValue","target","parseInt","onChange","possiblePage","trim","match","asInt","validatePageChoice","TotalPagesIndicator","Typography","PageChooser","alignItems","justify","width","pageControlKeyMap","ArrowLeft","ArrowRight","pageControlDispatcher","action","PageKeyboardControl","ref","useRef","tabIndex","HTMLElementMeasurer","measure","debounce","htmlElement","document","documentElement","currentWidth","clientWidth","currentHeight","clientHeight","height","useLayoutEffect","useEffect","window","addEventListener","removeEventListener","OriginMarkedSnackbar","open","setOpen","handleDismiss","escPress","Snackbar","anchorOrigin","vertical","horizontal","onClose","reason","message","Button","color","size","NAME","pageNumberToRiverMakeUpID","riverMakeUpIDToPageNumber","riverID","replace","emptyCardRiver","cardIDs","updateStateWithMakeUps","updatedState","makeUps","forEach","makeUp","riverMakeUps","removeCardFromRivers","cardID","Object","fromEntries","entries","map","entry","filter","id","length","FieldValueAccessorMap","note","cardObject","q","a","toFieldValue","FieldValueModifierMap","modify","createReplace","inputValue","changeCardObject","spec","inputField","inputObject","createModify","modifyFieldValue","fieldToBeChanged","objectToBeChanged","emptyQAContent","EmptyContentMap","emptyContent","noteContentIsEmpty","content","qaContentIsNotFull","UpdateTypeCreateModifyMap","APPEND","oldValue","REPLACE","updateTypeToCreateModify","updateType","strToCardContent","contentStr","outputField","existingContent","changeSpec","strToNewCardContent","empty","noteContentContainsStringOrEmpty","noteConfig","str","includes","qaContentContainsStringOrEmpty","qaConfig","cardIDToNumber","nextCardID","lastCardIDNumber","CardIsFullMap","Note","config","cardIsNotFull","strToCardConfig","baseCard","changedContent","CardFieldToTypeMap","cardFieldToType","emptyNote","emptyQA","getState","hasPast","cardsState","past","hasFuture","future","present","getLastCardIDNumber","getNextCardID","getCards","cards","getCardByID","updateCardInCards","toBeUpdated","cardObj","cardsSlice","cardPush","cardReplace","cardFieldReplace","newValue","cardField","cardConfig","cardRemove","allCardsReplace","allCardsReset","AddNoteButton","nextID","AddQAButton","DeleteCardButton","emptyQAOrigin","EmptyOriginMap","emptyOrigin","singleOriginToCardOrigin","singleOrigin","baseOrigin","reducer","slice","selectors","model","getRiverMakeUps","getNonEmptyRiverIDs","keys","getNonEmptyRiverIDsSorted","ids","sort","b","getNonEmptyRiverMakeUpsSorted","values","getNonEmptyRiverCardsSorted","cardObjects","push","getActiveRiverMakeUpID","riverActiveID","getActiveRiverMakeUp","getActiveRiverCardIDs","getActiveRiverCards","makeUpCardIDs","getRiverShowState","riverShowState","riverShowStateIsShow","getRiverContentState","riverContentState","getRiverContentFilter","riverContentFilter","getOriginRequest","riverOriginRequest","GreenCheckbox","withStyles","root","green","checked","props","Checkbox","count_DONT_USE","riverCardReplace","riverSlice","allRiversReset","allRiversReplace","extraReducers","riverMakeUp","RiverContentFormGroup","showQAs","showNotes","changeContentState","clickedState","FormGroup","FormControlLabel","control","label","getGoalConfig","goalConfig","getSourceConfig","sourceConfig","sourceConfigExists","selectionToCard","goalIsCreation","cardPayload","inputOrigin","contentOrigin","origin","selectionConfigToCardPayload","existingCard","selectionConfigToActualizedCardConfig","getSelectionWorkaround","selection","getSelection","activeElement","substring","selectionStart","selectionEnd","selStr","e","getSelectionSourceFromMaterial","selectionData","selectedParentStart","anchorNode","parentNode","selectedParentEnd","focusNode","nodeName","divTextLayerParent","spanChildren","Array","from","childNodes","startIndex","indexOf","endIndex","spanIndexStart","spanIndexEnd","materialSelectionDataToSourceConfig","selectionSource","selectionGoal","selectionSlice","resetSelectionSource","resetSelectionGoal","addSelectionSource","addMaterialSelectionSource","addCardSelectionSource","getSelectionSourceFromCard","addSelectionGoal","addCardAppendSelectionGoal","addCardReplaceSelectionGoal","SelectionSnackbar","maxWidth","overflowX","spacing","backgroundColor","square","aria-label","MaterialMouseUp","onMouseUp","materialSelectionSourceAction","onMouseDown","button","CardFieldMouseUp","fieldOrigin","cardSelectionSourceAction","AppendButton","outlined","setOutlined","isGoal","ContextMenu","menuPosition","setMenuPosition","shouldClose","useCallback","current","querySelector","contains","contextMenuContainsTargetNode","doesSourceConfigExists","shouldOpen","left","x","top","y","openState","Menu","keepMounted","anchorReference","anchorPosition","MenuItem","ReplaceButton","services","ClayCardField","storeValue","saveChanges","rest","mutableValue","InputProps","disableUnderline","minWidth","multiline","onBlur","JumpToOriginButton","cardOrigin","ClayCardFieldButtons","permutation","originExists","Paper","QACard","elevation","InputLabelProps","NoteCard","ClayCard","GridItemDivider","qaFilter","noteFilter","filterCardConfigs","inputCards","riverContentFilterStr","filters","reduce","f","combineFilterArr","CardRiver","materialHeight","cardConfigs","riverCards","gridItems","increment","prev","currentCard","index","arr","ClayCardGridItems","Accordion","expanded","defaultExpanded","overflow","AccordionSummary","align","MozUserSelect","WebkitUserSelect","msUserSelect","AccordionDetails","console","log","SwitchActiveRiver","activeRiverID","onMouseEnter","ShowRiverCheckbox","curRiverShowState","startIcon","PageSpanControl","pageRef","count","trier","intervalID","setInterval","clearInterval","textLayer","originSpan","scrollIntoView","behavior","block","inline","makeOriginHighlighter","textItem","itemIndex","highlightOrigin","backgroundStyle","makeTextRenderer","searchText","pattern","textLength","patternLength","markedPattern","slice1","result","secondIndex","slice2Start","slice2","thirdIndex","slice3Start","slice3","stringRest","splitText","split","spliter","highlightPattern","PDFPage","pageNumber","materialWidth","originHighlighter","textRenderer","searchRenderer","originRenderer","combineRenderers","inputRef","instance","MaterialMultiplier","customTextRenderer","renderAnnotationLayer","RiverPairItem","RiverMultiplier","river","RiverMaterialPair","data","materialHeights","showRiver","showMaterial","hidden","get","marginTop","pairTopBottomPadding","PageScrollControl","listRef","scrollToItem","Resetter","resetAfterIndex","RiverMaterialPairList","pdfProxyRef","cachedPageDimensions","set","windowWidth","pageDims","pixelPerUserSpaceUnit","calculateMaterialHeight","Map","itemCount","numPages","itemSize","itemData","onItemsRendered","visibleStopIndex","pdfjs","GlobalWorkerOptions","workerSrc","version","options","cMapUrl","cMapPacked","PDFDocument","setPageDimensions","pdfName","pdfNameRef","loading","noData","file","renderMode","onLoadSuccess","pdfProxy","promises","i","getPage","Promise","all","then","pages","pageDimensions","w","view","h","_pageIndex","cachePageDimensions","onItemClick","ExplorerRiver","marginBottom","RiverExplorer","riverIDs","xs","Display","ViewTabs","Tabs","Tab","ShowMaterialCheckbox","displayShowState","collectCurrentDBData","display","getDocumentNames","db","getDocumentDataSets","dbSlice","storeInDocumentDB","removeFromDocumentDB","updateDocumentDB","dbData","archiveCurrentDBData","fileDownload","require","downloadDBData","documentDataSets","localString","Date","toLocaleString","JSON","stringify","resetActiveAppState","replaceActiveAppState","newDocumentData","currentPDFName","loadPDF","newPDFName","documentDB","ActionCreators","clearHistory","loadSavedDocument","deleteActiveDocument","activeDocument","deleteDocument","DeleteDocumentDialogAlert","handleClose","Dialog","aria-labelledby","aria-describedby","DialogTitle","DialogContent","DialogContentText","DialogActions","autoFocus","DeleteDocumentButton","InputDataSets","setFile","click","disableElevation","files","accept","LoadDataSetsDialogAlert","reader","FileReader","readAsText","onload","uploadedDataSets","parse","foundDataSet","find","InputDocument","LoadDocumentDataButton","DocumentOptionItemButtonRow","DocumentOptionItem","ActiveDocumentOptionItem","Options","documents","doc","React","anchorEl","setAnchorEl","currentTarget","Boolean","MenuListProps","paddingLeft","paddingRight","component","listStyleType","ClayMemorySearchBar","contentString","searchFocus","onCancelSearchCards","onCancelSearchDocument","onCancelSearch","onRequestSearch","placeholder","cancelOnEscape","UndoButton","cardsHasPast","undo","disabled","RedoButton","cardsHasFuture","redo","UndoRedoCard","ShowHideButton","ControlBar","materialName","offset","currentBottom","getBoundingClientRect","bottom","AppBar","position","Toolbar","disableGutters","ReaderScene","displayTransform","createTransform","inboundState","documentRef","materialData","removeDOMObjectsFromDisplayData","outboundState","addDOMObjectsToDisplayData","whitelist","removeContentFilter","riverTransform","persistConfig","storage","transforms","undoableCardActions","rootReducer","combineReducers","undoable","includeAction","persistedReducer","persistReducer","enhancer","composeWithDevTools","composeEnhancers","applyMiddleware","thunk","store","createStore","persistor","persistStore","ReactDOM","render","StrictMode","getElementById"],"mappings":"ghQAIYA,E,yHCFCC,EAA6B,kCAC7BC,EAA8B,mCAE9BC,EAAc,mBACdC,EAAc,mBAEdC,EAAkB,YAClBC,EAAsB,gBAEtBC,EAAoB,mBACpBC,EAAsB,yCAEtBC,EAAyB,yDACzBC,EAAsB,+CACtBC,GAA0B,0EAE1BC,GAA0B,4DAC1BC,GAAqB,qDACrBC,GAA2B,sEAE3BC,GAAmB,qBACnBC,GAAqB,uBAErBC,GAAwB,uDACxBC,GAA2B,sCAI3BC,GAAiB,yBACjBC,GAAsB,oBAEtBC,GAAqB,mBACrBC,GAAmB,yCACnBC,GAAmB,gBACnBC,GAAuB,6BACvBC,GAAqB,2BAErBC,GAAW,OACXC,GAAe,WACfC,GAAa,SAIbC,GAAoB,IACpBC,GAAwB,IC1CxBC,GAAqB,SAAC,GAA8C,IAA5CC,EAA2C,EAA3CA,SACpC,OACC,kBAACC,EAAA,EAAD,CAASC,MAAOlB,GAAoBmB,WAAYN,GAAmBO,eAAgBN,IACjFE,ICHSK,GAAqB,SAAC,GAA8C,IAA5CL,EAA2C,EAA3CA,SACpC,OACC,kBAACC,EAAA,EAAD,CAASC,MAAOnB,GAAkBoB,WAAYN,GAAmBO,eAAgBN,IAC/EE,ICHSM,GAA0B,SAAC,GAA8C,IAA5CN,EAA2C,EAA3CA,SACzC,OACC,kBAACC,EAAA,EAAD,CAASC,MAAO3B,EAAmB4B,WAAYN,GAAmBO,eAAgBN,IAChFE,ICJW,IAAEO,aAAYC,a,kBLCjBxC,O,iCAAAA,I,iCAAAA,I,gCAAAA,M,KAqBL,IMTmCyC,G,GNS7BC,GACP,SAACC,EAAiBC,GAAlB,OAA0CD,IAAYC,EAAa,EAAI,EAAID,GADpED,GAEJ,SAACC,EAAiBC,GAAlB,OAAsD,IAAZD,EAAgBC,EAAaD,G,kBMxBnEE,GAAc,WAC1B,IAAIC,EAAU,EACd,OAAO,WACN,IAAMC,EAAaD,EAEnB,OADAA,IACOC,IA0BIC,GAAgB,SAACC,GAAD,OAA0C,SAACC,EAAD,GAAmC,IAApBC,EAAmB,EAAnBA,QACrF,OAAO,6BAAKD,GAAZ,mBAAoBD,EAAQE,M,SC7BvBC,GAA4B,CACjCC,cAAe,OACfT,WAAY,IACZU,YAAa,EACbC,aAAc,KACdC,mBAAoB,KACpBC,WAAY,KACZC,eAAgB,GAChBC,UAAW,EACXC,YAAa5D,EAAK6D,eAGbC,GAA2Dd,GAAc,OACzEJ,GAA8DI,GAAc,cAC5EK,GAAwEL,GAAc,iBACtFS,GAA2ET,GAAc,cACzFU,GAAkEV,GAAc,kBAChFW,GAA6DX,GAAc,aAC3EQ,GAGFR,GAAc,sBACZY,GAA6DZ,GAAc,eA0B3Ee,GAAeC,aAAY,CAChCC,KCvDmB,cDwDnBb,gBACAc,SAAU,CACTJ,aACAlB,cACAS,iBACAI,cACAC,kBACAC,aACAH,sBACAI,eACAO,WApCmG,SACpGjB,EADoG,GAG/F,IADHC,EACE,EADFA,QAEF,OAAO,6BAAKD,GAAZ,IAAmBI,YAAaH,EAAQiB,KAAMb,aAAcJ,EAAQkB,aAAelB,EAAQiB,KAAO,QAiCjGE,SA/ByC,SAACpB,GAC3C,IAAMkB,EAAO1B,GAAuBQ,EAAMI,YAAc,EAAGJ,EAAMN,YACjE,OAAO,6BAAKM,GAAZ,IAAmBI,YAAac,EAAMb,aAAca,KA8BnDG,aA5B6C,SAACrB,GAC/C,IAAMkB,EAAO1B,GAA0BQ,EAAMI,YAAc,EAAGJ,EAAMN,YACpE,OAAO,6BAAKM,GAAZ,IAAmBI,YAAac,EAAMb,aAAca,KA2BnDI,wBAvBgG,SAACC,EAAD,GAAqB,IAAftB,EAAc,EAAdA,QACvG,OAAO,6BACHC,IADJ,IAECsB,SAAKC,GACDxB,OAuBSyB,GAAYb,GAAZa,QAEAb,MEnETc,GAAiB,WACtB,IAAMC,EAAWC,cAEjB,OACC,kBAAC9C,EAAA,EAAD,CACCC,MAAO8C,GAAKxC,UAAUlC,oBACtB6B,WAAY6C,GAAKxC,UAAUX,kBAC3BO,eAAgB4C,GAAKxC,UAAUV,uBAE/B,kBAACmD,EAAA,EAAD,CACCC,KAAK,SACLC,QAAS,WACRL,EAASF,GAAQL,kBAGlB,kBAAC,IAAD,SAMEa,GAAa,WAClB,IAAMN,EAAWC,cACjB,OACC,kBAAC9C,EAAA,EAAD,CACCC,MAAO8C,GAAKxC,UAAUnC,gBACtB8B,WAAY6C,GAAKxC,UAAUX,kBAC3BO,eAAgB4C,GAAKxC,UAAUV,uBAE/B,kBAACmD,EAAA,EAAD,CACCC,KAAK,SACLC,QAAS,WACRL,EAASF,GAAQN,cAGlB,kBAAC,IAAD,SAMSe,GAAiB,WAC7B,OACC,kBAACC,EAAA,EAAD,CAAMC,QAAQ,YACb,kBAACC,EAAA,EAAD,CAAMC,WAAS,EAACC,UAAU,OACzB,kBAACF,EAAA,EAAD,CAAMG,MAAI,GACT,kBAAC,GAAD,OAED,kBAACH,EAAA,EAAD,CAAMG,MAAI,GACT,kBAACC,EAAA,EAAD,CAASC,YAAY,cAEtB,kBAACL,EAAA,EAAD,CAAMG,MAAI,GACT,kBAAC,GAAD,U,sCCxDQG,GAAS,SAAC5C,GAAD,OAA6BA,EAAK,aAE3C6C,GAASC,aAAeF,IAAQ,SAAC5C,GAAD,OAAwBA,EAAMwB,OAE9DuB,GAAwBD,aAAeF,IAAQ,SAAC5C,GAAD,OAAWA,EAAMM,sBAEhE0C,GAAaF,aAAeD,IAAQ,SAACrB,GAAD,OAAUA,EAAMA,EAAIT,UAAOU,KAE/DwB,GAAgBH,aAAeF,IAAQ,SAAC5C,GAAD,OAAwBA,EAAMN,cAErEwD,GAAiBJ,aAAeF,IAAQ,SAAC5C,GAAD,OAAwBA,EAAMI,eAEtE+C,GAAkBL,aAAeF,IAAQ,SAAC5C,GAAD,OAAWA,EAAMK,gBAE1D+C,GAAqBN,aAAeG,GAAeC,IAAgB,SAACxD,EAAYU,GAC5F,MAAO,CAAEA,cAAaV,iBAGV2D,GAAmBP,aAAeF,IAAQ,SAAC5C,GAAD,OAAwBA,EAAMG,iBAExEmD,GAAsBR,aAAeO,IAAkB,SAACE,GAAD,MAAuB,SAAXA,KAEnEC,GAAgBV,aAAeF,IAAQ,SAAC5C,GAAD,OAAWA,EAAMO,cAExDkD,GAAoBX,aAAeF,IAAQ,SAAC5C,GAAD,OAAWA,EAAMQ,kBAE5DkD,GAAeZ,aAAeF,IAAQ,SAAC5C,GAAD,OAAWA,EAAMS,aAEvDkD,GAAiBb,aAAeF,IAAQ,SAAC5C,GAAD,OAAWA,EAAMU,eC1BhEkD,GAAgB,OAWhBC,GAAsB,SAAC,GAA4C,IAA1CnE,EAAyC,EAAzCA,WACxBkC,EAAWC,cACXzB,EAAc0D,YAAYZ,IAFuC,EAI7Ca,mBAAS,CAClCC,OAAO,EACPC,MAAK,OAAE7D,QAAF,IAAEA,OAAF,EAAEA,EAAa8D,WACpBC,UAAS,OAAE/D,QAAF,IAAEA,OAAF,EAAEA,EAAa8D,aAP8C,oBAIhElE,EAJgE,KAIzDoE,EAJyD,KAgBvE,OAJIpE,EAAMiE,QAAU7D,EAAY8D,YAC/BE,EAAS,CAAEJ,OAAO,EAAOC,MAAO7D,EAAY8D,WAAYC,UAAW/D,EAAY8D,aAI/E,kBAACG,GAAA,EAAD,CACCC,WAAY,CACXC,MAAO,CACNC,QAAS,MAETC,SAAU,UACVC,WAAY,4CACZC,WAAY,IACZC,WAAY,IACZC,cAAe,aAGjB7C,KAAK,OACLK,QAAQ,SACR4B,MAAOjE,EAAMmE,UACbW,UAAW,SAACC,GACX,GAAkB,UAAdA,EAAMC,IAAiB,CAC1BD,EAAME,iBACN,IAAMC,EAAkBH,EAAMI,OAA2BlB,MACpDjE,EAAMgE,OACVpC,EAASF,GAAQT,WAAW,CAAEC,KAAMkE,SAASF,GAAiB/D,cAAc,OAI/EkE,SAAU,SAACN,GACV,IAAMG,EAAkBH,EAAMI,OAA+BlB,OAnD/B,SAACqB,EAAsB5F,GACxD,GAAqB,KAAjB4F,GAAoE,OAA7CA,EAAaC,OAAOC,MAAM5B,IAAyB,OAAO,EAErF,IAAM6B,EAAQL,SAASE,GACvB,QAAIG,EAAQ,GAAK/F,EAAa+F,GAgDvBC,CAAmBR,EAAgBxF,GAGtC0E,EAAS,6BAAKpE,GAAN,IAAagE,OAAO,EAAMG,UAAWe,KAF7Cd,EAAS,6BAAKpE,GAAN,IAAagE,OAAO,EAAOG,UAAWe,MAKhDlB,MAAOhE,EAAMgE,SAKV2B,GAAsB,SAAC,GAAD,IAAGjG,EAAH,EAAGA,WAAH,OAC3B,kBAACkG,GAAA,EAAD,CAAYvD,QAAQ,MAApB,MAA6B3C,IAGjBmG,GAAc,WAC1B,IAAMnG,EAAaoE,YAAYb,IAE/B,OACC,kBAACb,EAAA,EAAD,CAAMC,QAAQ,YACb,kBAACC,EAAA,EAAD,CAAMG,MAAI,GACT,kBAACH,EAAA,EAAD,CAAMC,WAAS,EAACC,UAAU,MAAMsD,WAAW,SAASC,QAAQ,iBAC3D,kBAACzD,EAAA,EAAD,CAAMG,MAAI,EAAC8B,MAAO,CAAEyB,MAAO,QAC1B,kBAAC,GAAD,CAAqBtG,WAAYA,KAGlC,kBAAC4C,EAAA,EAAD,CAAMG,MAAI,EAAC8B,MAAO,CAAEyB,MAAO,QAC1B,kBAAC,GAAD,CAAqBtG,WAAYA,SC/EjCuG,GAAkC,CACvCC,UAAWxE,GAAQL,eACnB8E,WAAYzE,GAAQN,YAEfgF,INIoC7G,GMJc0G,GNI+B,SACtFlB,EACAnD,GAEA,IAAMyE,EAAS9G,GAAOwF,EAAMC,KACxBqB,IACHtB,EAAME,iBACNrD,EAASyE,MMTEC,GAAsB,SAAC,GAA2C,IAAzCxH,EAAwC,EAAxCA,SAC/B8C,EAAWC,cACX0E,EAAiDC,iBAAO,MAE9D,OACC,0BACCD,IAAKA,EACLzB,UAAW,SAACC,GACXqB,GAAsBrB,EAAOnD,IAE9B6E,SAAU,GAET3H,I,UCrBS4H,GAAsB,WAClC,IAAM9E,EAAWC,cAEX8E,EAAUC,oBAAS,IAAI,WAC5B,IAAMC,EAAcC,SAASC,gBACvBC,EAAeH,EAAYI,YAC3BC,EAAgBL,EAAYM,aAClCvF,EAASF,GAAQpB,mBAAmB,CAAE0F,MAAOgB,EAAcI,OAAQF,QAepE,OAZAG,2BAAgB,WAEfV,MACE,CAACA,IAEJW,qBAAU,WAET,OADAC,OAAOC,iBAAiB,SAAUb,GAC3B,WACNY,OAAOE,oBAAoB,SAAUd,OAIhC,M,oBCnBKe,GAAuB,WAAO,IAAD,EACjB3D,oBAAS,GADQ,oBAClC4D,EADkC,KAC5BC,EAD4B,KAEnCrH,EAAauD,YAAYN,IACzB5B,EAAWC,eAEVtB,GAAcoH,GAAMC,GAAQ,GAE7BrH,IAAeoH,GAAMC,GAAQ,GAEnC,IAUMC,EAAgB,WACrBD,GAAQ,GACRhG,EAASF,GAAQnB,WAAW,QAGvBuH,EAAW,SAAC/C,IACb4C,GAAuB,WAAd5C,EAAMC,KAAkC,QAAdD,EAAMC,KAC5C6C,KAWF,OAPAP,qBAAU,WAET,OADAR,SAASU,iBAAiB,UAAWM,GAC9B,WACNhB,SAASW,oBAAoB,UAAWK,OAKzC,kBAACC,GAAA,EAAD,CACCC,aAAc,CACbC,SAAU,SACVC,WAAY,QAEbP,KAAMA,EACNQ,QAnCkB,SAACpD,EAAYqD,GACjB,cAAXA,EAEHrD,EAAME,kBAEN2C,GAAQ,GACRhG,EAASF,GAAQnB,WAAW,SA8B5B8H,QAAQ,mBACRhC,OACC,kBAACiC,GAAA,EAAD,CAAQC,MAAM,YAAYC,KAAK,QAAQvG,QAAS4F,GAAhD,a,mCCvDSY,GAAO,iB,oBCiCPC,GAA4B,SAACxH,GAAD,MAAkB,aAAeA,GAE7DyH,GAA4B,SAACC,GAAD,OAAqBxD,SAASwD,EAAQC,QAAQ,aAAc,MAExFC,GAAiB,SAAC5H,GAC9B,MAAO,CACN0H,QAASF,GAA0BxH,GACnC6H,QAAS,KAIEC,GAAyB,SAAChJ,GAAqD,IAC3F,IAAMiJ,EAAY,gBAAQjJ,GADiE,mBAA3BkJ,EAA2B,iCAA3BA,EAA2B,kBAK3F,OAHAA,EAAQC,SAAQ,SAACC,GAChBH,EAAaI,aAAaD,EAAOR,SAAWQ,KAEtCH,GAGKK,GAAuB,SAACtJ,EAAuBuJ,GAC3D,IAAMF,EAAeG,OAAOC,YAC3BD,OAAOE,QAAQ1J,EAAMqJ,cACnBM,KAAI,SAACC,GAAD,MAAW,CAACA,EAAM,GAAP,6BAAgBA,EAAM,IAAtB,IAA0Bb,QAASa,EAAM,GAAGb,QAAQc,QAAO,SAACC,GAAD,OAAQA,IAAOP,WACzFM,QAAO,SAACD,GAAD,OAAwD,IAA5CA,EAAM,GAAmBb,QAAQgB,WAEvD,OAAO,6BAAK/J,GAAZ,IAAmBqJ,kBC1DPZ,GAAO,QCSduB,GAAmF,CACxFC,KAAM,SAACC,GAAD,OAAgBA,GACtBC,EAAG,SAACD,GAAD,OAAiBA,EAAwBC,GAC5CC,EAAG,SAACF,GAAD,OAAiBA,EAAwBE,IAEhCC,GAAe,SAACtK,EAAkBmK,GAAnB,OAA8CF,GAAsBjK,GAAOmK,IAGjGI,GAAiG,CACtGL,KAAM,SAACC,EAAYK,GAAb,OAAwBA,EAAOL,IACrCC,EAAG,SAACD,EAAYK,GACf,OAAO,6BAAML,GAAb,IAAsCC,EAAGI,EAAQL,EAAwBC,MAE1EC,EAAG,SAACF,EAAYK,GACf,OAAO,6BAAML,GAAb,IAAsCE,EAAGG,EAAQL,EAAwBE,OAS9DI,GAA8B,SAACC,GAAD,OAAqB,SAAClJ,GAAD,OAAYkJ,IAS/DC,GAAmB,SAACC,GAChC,IAAMF,EAAaJ,GAAaM,EAAKC,WAAYD,EAAKE,aAChDN,EAASI,EAAKG,aAAaL,GACjC,OAlBwB,SAAC1K,EAAkBmK,EAAwBK,GAA3C,OACxBD,GAAsBvK,GAAOmK,EAAYK,GAiBlCQ,CAAiBJ,EAAKK,iBAAkBL,EAAKM,kBAAmBV,IC9BlEW,GAAiB,WACtB,MAAO,CAAEf,EAAG,GAAIC,EAAG,KAEde,GAAgE,CACrEhB,EAAGe,GACHd,EAAGc,GACHjB,KAAM,iBAAM,KAEAmB,GAAe,SAACrL,GAC5B,OAAOoL,GAAgBpL,MAGXsL,GAAqB,SAACC,GAAD,MAAiC,KAAZA,GAC1CC,GAAqB,SAACD,GAAD,MACA,KAAhCA,EAA0BnB,GAA6C,KAAhCmB,EAA0BlB,GAI7DoB,GAA0E,CAC/EC,OAHqC,SAAChB,GAAD,OAAwB,SAACiB,GAAD,OAC5DA,EAAW,IAAMjB,GAAYlF,SAG9BoG,QAASnB,IAEJoB,GAA2B,SAACC,GAAD,OAA4BL,GAA0BK,IAK1EC,GAAmB,SAC/BC,EACAC,EACAH,EACAI,GAEA,IAAMC,EAAa,CAClBrB,YAAakB,EACbnB,WAV4B,OAW5BI,iBAAkBgB,EAClBf,kBAAmBgB,EACnBnB,aAAcc,GAAyBC,IAExC,OAAOnB,GAAiBwB,IAGZC,GAAsB,SAACJ,EAAoBC,GAEvD,IAAMI,EAAQhB,GAAaY,GAC3B,OAAOF,GAAiBC,EAAYC,EAAa,UAAWI,IAGhDC,GAAmC,SAACC,EAAwBC,GAAzB,MACxB,KAAvBD,EAAWhB,SAAkBgB,EAAWhB,QAAQkB,SAASD,IAE7CE,GAAiC,SAACC,EAAoBH,GAArB,MACtB,KAAvBG,EAASpB,QAAQlB,GACM,KAAvBsC,EAASpB,QAAQnB,GACjBuC,EAASpB,QAAQlB,EAAEoC,SAASD,IAC5BG,EAASpB,QAAQnB,EAAEqC,SAASD,IC3DhBI,GAAiB,SAACpD,GAAD,OAAoBnE,SAASmE,IAC9CqD,GAAa,SAACC,GAAD,OAA+BA,EAAmB,GAAG3I,YAOzE4I,GAAyE,CAC9EC,KAAM,SAACC,GAAD,OAAY3B,GAAmB2B,EAAO1B,UAC5C,MAAO,SAAC0B,GAAD,OAAYzB,GAAmByB,EAAO1B,WAEjC2B,GAAgB,SAACD,GAAD,OAAwBF,GAAcE,EAAOhL,MAAMgL,IAInEE,GAAkB,SAC9BnB,EACAC,EACAH,EACAsB,GAEA,IAAMC,EAAiBtB,GAAiBC,EAAYC,EAAaH,EAAYsB,EAAS7B,SACtF,OAAO,6BAAK6B,GAAZ,IAAsB7B,QAAS8B,KAG1BC,GAAyD,CAC9DlD,EAAG,MACHC,EAAG,MACHH,KAAM,QAGMqD,GAAkB,SAACvN,GAAD,OAAsBsN,GAAmBtN,IAE3DwN,GAAY,SAAChE,GACzB,MAAO,CAAEvH,KAAM,OAAQsJ,QAAS,GAAI/B,WAExBiE,GAAU,SAACjE,GACvB,MAAO,CAAEvH,KAAM,MAAOsJ,QAAS,CAAEnB,EAAG,GAAIC,EAAG,IAAMb,WC5CrCkE,GAAW,SAACzN,GAAD,OAAgBA,EAAMyI,KACjCiF,GAAU5K,aAAe2K,IAAU,SAACE,GAAD,OAAqBA,EAAWC,KAAK7D,OAAS,KACjF8D,GAAY/K,aAAe2K,IAAU,SAACE,GAAD,OAAqBA,EAAWG,OAAO/D,OAAS,KAErFnH,GAAS,SAAC5C,GAAD,OAAgBA,EAAMyI,IAAMsF,SAErCC,GAAsBlL,aAAeF,IAAQ,SAAC5C,GAAD,OAAWA,EAAM6M,oBAE9DoB,GAAgBnL,aAAekL,GAAqBpB,IAEpDsB,GAAWpL,aAAeF,IAAQ,SAAC5C,GAAD,OAAuBA,EAAMmO,SAE/DC,GAAc,SAACpO,EAAYuJ,GAAb,OAAgC2E,GAASlO,GAAOuJ,I,qBCXrErJ,GAA2B,CAChCiO,MAAO,GACPtB,iBAAkB,GAGbwB,GAAoB,SAACF,EAAcG,GACxC,IAAMC,EAAO,gBAAQJ,GAErB,OADAI,EAAQD,EAAY/E,QAAU+E,EACvBC,GA6CFC,GAAa1N,aAAY,CAC9BC,KAAM0H,GACNvI,gBACAc,SAAU,CACTyN,SA9CmE,SAACzO,EAAD,GAAyB,IAAfC,EAAc,EAAdA,QAC9E,OAAO,6BACHD,GADJ,IAECmO,MAAOE,GAAkBrO,EAAMmO,MAAOlO,GACtC4M,iBAAkBF,GAAe1M,EAAQsJ,QAAU,KA2CnDmF,YAvCsE,SAAC1O,EAAD,GAAyB,IAAfC,EAAc,EAAdA,QACjF,OAAO,6BAAKD,GAAZ,IAAmBmO,MAAOE,GAAkBrO,EAAMmO,MAAOlO,MAuCxD0O,iBAjCE,SAAC3O,EAAD,GAAyB,IAAfC,EAAc,EAAdA,QACb,OAAO,6BACHD,GADJ,IAECmO,MAAOE,GACNrO,EAAMmO,MACNjB,GAAgBjN,EAAQ2O,SAAU3O,EAAQ4O,UAAW,UAAW5O,EAAQ6O,gBA6BzEC,WAxBiE,SAAC/O,EAAD,GAAyB,IAAfC,EAAc,EAAdA,QACtEkO,EAAK,gBAAQnO,EAAMmO,OAKzB,cAFOA,EAAMlO,GAEN,6BAAKD,GAAZ,IAAmBmO,WAmBlBa,gBAhB0E,SAACzN,EAAD,GAC3E,OAD+F,EAAdtB,SAiBhFgP,cAb6C,WAC9C,OAAO/O,OAgBOwB,GAAY8M,GAAZ9M,QAEA8M,MCjEFU,GAAgB,WAC5B,IAAMtN,EAAWC,cACXsN,EAASrL,YAAYmK,IAC3B,OACC,kBAAC,GAAK5O,WAAWR,mBAAjB,KACC,kBAACkD,EAAA,EAAD,CACCC,KAAK,SACLC,QAAS,WACRL,EAASF,GAAQ+M,SAASlB,GAAU4B,OAGrC,kBAAC,KAAD,S,qBCXSC,GAAc,WAC1B,IAAMxN,EAAWC,cACXsN,EAASrL,YAAYmK,IAE3B,OACC,kBAAC,GAAK5O,WAAWF,mBAAjB,KACC,kBAAC4C,EAAA,EAAD,CACCC,KAAK,SACLC,QAAS,WACRL,EAASF,GAAQ+M,SAASjB,GAAQ2B,OAGnC,kBAAC,KAAD,S,qBCbSE,GAAmB,SAAC,GAAoC,IAAlC9F,EAAiC,EAAjCA,OAC5B3H,EAAWC,cACjB,OACC,kBAAC,GAAKxC,WAAWD,wBAAjB,KACC,kBAAC2C,EAAA,EAAD,CACCC,KAAK,SACLC,QAAS,WACRL,EAASF,GAAQqN,WAAWxF,MAG7B,kBAAC,KAAD,CAAmB9E,SAAS,aCX1B6K,GAAgB,WACrB,MAAO,CAAEnF,EAAG,GAAIC,EAAG,KAGdmF,GAA8D,CACnEpF,EAAGmF,GACHlF,EAAGkF,GACHrF,KAAM,iBAAM,KAEAuF,GAAc,SAACzP,GAC3B,OAAOwP,GAAexP,MAOV0P,GAA2B,SACvCC,EACA1D,EACA2D,GAEA,IAAMzD,EAAa,CAClBrB,YAAa6E,EACb9E,WAAY,OACZI,iBAAkBgB,EAClBf,kBAAmB0E,GAA0BH,GAAYxD,GACzDlB,aAAcN,IAGf,OAAOE,GAAiBwB,IC/BjB0D,GAA2BC,GAA3BD,QAEO,IAAEtQ,YAAWoC,QAFOmO,GAAlBnO,QAEoBkO,WAAS7O,KAFX8O,GAAT9O,KAE0B+O,YAAWzQ,aAAY0Q,SCF9DnN,GAAS,SAAC5C,GAAD,OAAgCA,EAAMyI,IAAMsF,SAErDiC,GAAkBlN,aAAeF,IAAQ,SAAC5C,GAAD,OAA2BA,EAAMqJ,gBAE1E4G,GAAsBnN,aAAekN,IAAiB,SAAC9G,GAAD,OAAaM,OAAO0G,KAAKhH,MAE/EiH,GAA4BrN,aAAemN,IAAqB,SAACG,GAAD,OAC5EA,EAAIC,MAAK,SAACjG,EAAGkG,GAAJ,OAAU3H,GAA0ByB,GAAKzB,GAA0B2H,SAGhEC,GAAgCzN,aAAekN,IAAiB,SAAC9G,GAAD,OAC5EM,OAAOgH,OAAOtH,GAASmH,MAAK,SAACjG,EAAGkG,GAAJ,OAAU3H,GAA0ByB,EAAExB,SAAWD,GAA0B2H,EAAE1H,eAG7F6H,GAA8B3N,aAC1CyN,GACApC,GAAM2B,UAAU5B,UAChB,SAAChF,EAASiF,GACT,IADmB,EACbuC,EAAc,GADD,eAEExH,GAFF,IAEnB,2BAA8B,CAAC,IAAD,EAAnBE,EAAmB,uBACZA,EAAOL,SADK,IAC7B,2BAAiC,CAAC,IAAvBe,EAAsB,QAChC4G,EAAYC,KAAKxC,EAAMrE,KAFK,gCAFX,8BAQnB,OAAO4G,KAIIE,GAAyB9N,aAAeF,IAAQ,SAAC5C,GAAD,OAA2BA,EAAM6Q,iBAEjFC,GAAuBhO,aAAekN,GAAiBY,IAAwB,SAAC1H,EAASY,GACrG,IAAMV,EAASF,EAAQY,GACvB,OAAOV,GAAkB,CAAEL,QAAS,OAGxBgI,GAAwBjO,aAAegO,IAAsB,SAAC1H,GAAD,OAAsBA,EAAOL,WAE1FiI,GAAsBlO,aAClCiO,GACA5C,GAAM2B,UAAU5B,UAChB,SAAC+C,EAAe9C,GAAhB,OAA0B8C,EAActH,KAAI,SAACG,GAAD,OAAQqE,EAAMrE,SAG9CoH,GAAoBpO,aAAeF,IAAQ,SAAC5C,GAAD,OAA2BA,EAAMmR,kBAE5EC,GAAuBtO,aAAeoO,IAAmB,SAAClR,GAAD,MAAqB,SAAVA,KAEpEqR,GAAuBvO,aAAeF,IAAQ,SAAC5C,GAAD,OAA2BA,EAAMsR,qBAE/EC,GAAwBzO,aAAeF,IAAQ,SAAC5C,GAAD,OAA2BA,EAAMwR,sBAEhFC,GAAmB3O,aAAeF,IAAQ,SAAC5C,GAAD,OAAWA,EAAM0R,sB,2BCvD3DC,GAAgBC,aAAW,CACvCC,KAAM,CACLtJ,MAAOuJ,KAAM,KACb,YAAa,CACZvJ,MAAOuJ,KAAM,OAGfC,QAAS,IAPmBH,EAQ1B,SAACI,GAAD,OAA0B,kBAACC,GAAA,EAAD,eAAU1J,MAAM,WAAcyJ,O,UCIrD9R,GAA+B,CACpCwR,mBAAoB,KACpBrI,aAAa,gBACXX,GAA0B,GAAK,CAC/BE,QAASF,GAA0B,GACnCK,QAAS,KAGX8H,cAAenI,GAA0B,GACzCyI,eAAgB,OAChBG,kBAAmB,MACnBE,mBAAoB,GACpBU,eAAgB,GAGXrB,GAAoE/Q,GAAc,iBAClFqR,GAA6ErR,GAAc,kBAC3FwR,GAAmFxR,GACxF,qBAEK0R,GAAyE1R,GAAc,sBACvF4R,GAAsF5R,GAC3F,sBAyCKqS,GAAgD,SAACnS,GAGtD,OAAO,6BAAKA,GAAZ,IAAmBkS,eAAgBlS,EAAMkS,eAAiB,KAGrDE,GAAatR,aAAY,CAC9BC,KAAM0H,GACNvI,gBACAc,SAAU,CACT6P,iBACAM,kBACAG,qBACAE,sBACAE,sBACAW,eArDkD,SAAC9Q,GACpD,OAAOrB,IAqDNoS,iBAlDiF,SAAC/Q,EAAD,GAAqB,IAAftB,EAAc,EAAdA,QACxF,OAAO,6BACHC,IADJ,IAECmJ,aAAcpJ,MAiDfsS,eAAa,sBACXpE,GAAMzM,QAAQ+M,SAASzM,MA9CoD,SAAChC,EAAD,GAAyB,IAClGwS,EACAnJ,EAFmFpJ,EAAc,EAAdA,QAoBvF,OAdCuS,EADGxS,EAAMqJ,aAAarJ,EAAM6Q,eACjB,6BACP7Q,EAAMqJ,aAAarJ,EAAM6Q,gBADlB,IAEV9H,QAAQ,GAAD,oBAAM/I,EAAMqJ,aAAarJ,EAAM6Q,eAAe9H,SAA9C,CAAwD9I,EAAuBsJ,WAIzE,CACbX,QAAS5I,EAAM6Q,cACf9H,QAAS,CAAE9I,EAAuBsJ,UAGpCF,EAAY,gBAAQrJ,EAAMqJ,eACbrJ,EAAM6Q,eAAiB2B,EAE7B,6BAAKxS,GAAZ,IAAmBqJ,aAAcA,EAAc6I,eAAgB,OAyBlD,gBAEX/D,GAAMzM,QAAQqN,WAAW/M,MAxBgD,SAAChC,EAAD,GAAyB,IAAfC,EAAc,EAAdA,QACrF,OAAO,6BAAKqJ,GAAqBtJ,EAAOC,IAAxC,IAAkDiS,eAAgB,OAqBrD,gBAGX/D,GAAMzM,QAAQgN,YAAY1M,KAAOmQ,IAHtB,gBAIXhE,GAAMzM,QAAQiN,iBAAiB3M,KAAOmQ,IAJ3B,MAQCzQ,GAAY0Q,GAAZ1Q,QAEA0Q,MClGFK,GAAwB,WACpC,IAAMnB,EAAoBxN,YAAYuN,IAChCzP,EAAWC,cAEX6Q,EAAgC,QAAtBpB,GAAqD,QAAtBA,EACzCqB,EAAkC,QAAtBrB,GAAqD,UAAtBA,EAE3CsB,EAAqB,SAACC,GACtBH,GAA4B,QAAjBG,EASXF,GAA8B,UAAjBE,EASdH,GAA4B,QAAjBG,EAIbjR,EAHI+Q,EAGKjR,GAAQ4P,kBAAkB,SAF1B5P,GAAQ4P,kBAAkB,SAOjCqB,GAA8B,UAAjBE,GAIfjR,EAHI8Q,EAGKhR,GAAQ4P,kBAAkB,OAF1B5P,GAAQ4P,kBAAkB,SAlBnC1P,EADG8Q,EACMhR,GAAQ4P,kBAAkB,OAE1B5P,GAAQ4P,kBAAkB,UAXnC1P,EADG+Q,EACMjR,GAAQ4P,kBAAkB,OAE1B5P,GAAQ4P,kBAAkB,SAiCtC,OACC,kBAACwB,GAAA,EAAD,KACC,kBAACC,GAAA,EAAD,CACCC,QACC,kBAACrB,GAAD,CACCI,QAASW,EACTzQ,QAAS,WACR2Q,EAAmB,UAItBK,MAAM,QAEP,kBAACF,GAAA,EAAD,CACCC,QACC,kBAACrB,GAAD,CACCI,QAASY,EACT1Q,QAAS,WACR2Q,EAAmB,YAItBK,MAAM,Y,wCCvEGrQ,GAAS,SAAC5C,GAAD,OAA+BA,EAAK,eAE7CkT,GAAgBpQ,aAAeF,IAAQ,SAAC5C,GAAD,OAAWA,EAAMmT,cACxDC,GAAkBtQ,aAAeF,IAAQ,SAAC5C,GAAD,OAAWA,EAAMqT,gBAE1DC,GAAqBxQ,aAAesQ,IAAiB,SAACpG,GAAD,QAAcA,KC8BnEuG,GAAkB,SAC9BF,EACAF,EACAvR,EACA5B,GAGA,GCrC6B,SAACmT,GAG9B,SADoBA,EAAmC5J,ODkCpCiK,CAAeL,GAClB,CACf,IAAMM,EA1C6B,SAACJ,EAAqCF,GAC1E,IAAMO,EAAcL,EAAaM,cAC3BlJ,EAAa4I,EAAatH,WAE1BC,EAAcmH,EAAWtE,UAE/B,MAAO,CACN7M,KAAMmM,GAAM4B,MAAM/C,OAAOM,gBAAgBtB,GACzCV,QAAS6C,GAAM4B,MAAMzE,QAAQa,oBAAoB1B,EAAYuB,GAC7D4H,OAAQF,EAAcvF,GAAM4B,MAAM6D,OAAOnE,yBAAyBiE,EAAa1H,QAAevK,GAiC7DoS,CAA6BR,EAAcF,GACtEhE,EAASlB,GAAcjO,GAC7B4B,EAASuM,GAAMzM,QAAQ+M,SAAd,6BAA4BgF,GAA5B,IAAyClK,OAAQ4F,UACpD,CACN,IAAML,EAjCsC,SAC7CuE,EACAF,EACAnT,GAEA,IAAM8T,EAAe3F,GAAM2B,UAAU1B,YAAYpO,EAAOmT,EAAW5J,QAE7DmK,EAAcL,EAAaM,cAC3BlJ,EAAa4I,EAAatH,WAE1BC,EAAcmH,EAAWtE,UAE/B,OAAO,6BACHiF,GADJ,IAECxI,QAAS6C,GAAM4B,MAAMzE,QAAQQ,iBAAiBrB,EAAYuB,EAAamH,EAAWtH,WAAYiI,EAAaxI,SAC3GsI,OAAQF,EACLvF,GAAM4B,MAAM6D,OAAOnE,yBAAyBiE,EAAa1H,EAAa8H,EAAaF,QACnFE,EAAaF,SAgBGG,CAClBV,EACAF,EACAnT,GAED4B,EAASuM,GAAMzM,QAAQgN,YAAYI,MEnDxBkF,GAAyB,WACrC,IAAMC,EAAY1M,OAAO2M,eAEzB,IAAKD,EAAW,OAAO,KAEvB,IACC,IAAIE,EAAgBrN,SAASqN,cAC7B,GAAIA,GAAkBA,EAAmClQ,MAAO,CAE/D,IAAMsI,EAAO4H,EAAmClQ,MAAMmQ,UACpDD,EAAmCE,eACnCF,EAAmCG,cAGrC,MAAY,KAAR/H,EAAmB,KAEhB,CAAEzK,KAAMyK,EAAK0H,aAEpB,IAAMM,EAASN,EAAU/P,WAEzB,MAAe,KAAXqQ,EAAsB,KAEnB,CAAEzS,KAAMyS,EAAQN,aAEvB,MAAOO,GACR,OAAO,OAgDIC,GAAiC,SAACvT,GAC9C,IAAMwT,EAAgBV,KACtB,QAAKU,GA9CsC,SAC3CA,EACAxT,GACoC,IAAD,IAK7B+S,EAAYS,EAAcT,UAC5BU,EAAmB,UAAGV,EAAUW,kBAAb,aAAG,EAAsBC,WAC5CC,EAAiB,UAAGb,EAAUc,iBAAb,aAAG,EAAqBF,WAE7C,IAAKF,IAAwBG,EAC5B,OAAO,EAGR,GAAqC,SAAjCH,EAAoBK,YACvBL,EAAsBA,EAAoBE,YAChB,OAAO,EAGlC,GAAmC,SAA/BC,EAAkBE,YACrBF,EAAoBA,EAAkBD,YACd,OAAO,EAGhC,GAAqC,SAAjCF,EAAoBK,UAAsD,SAA/BF,EAAkBE,SAAqB,OAAO,EAE7F,IAAMC,EAAqBN,EAAoBE,WAC/C,IAAOI,GAAsD,QAAhCA,EAAmBD,SAAoB,OAAO,EAE3E,IAAME,EAAeC,MAAMC,KAAKH,EAAmBI,YACnD,GAA4B,IAAxBH,EAAanL,OAAc,OAAO,EAEtC,IAAMuL,EAAaJ,EAAaK,QAAQZ,GAClCa,EAAWN,EAAaK,QAAQT,GACtC,OAAoB,IAAhBQ,IAAmC,IAAdE,GAElB,CACNzJ,WAAY2I,EAAc5S,KAC1B6R,cAAe,CAAE8B,eAAgBH,EAAYI,aAAcF,EAAUtU,SAQ/DyU,CAAoCjB,EAAexT,ICxErD0U,GAA2F9V,GAChG,gBAEK+V,GAAuF/V,GAC5F,cAGKgW,GAAiBhV,aAAY,CAClCC,KClBmB,gBDmBnBb,aAdmC,CACnCmT,aAAc,KACdF,WAAY,MAaZnS,SAAU,CACT4U,mBACAC,oBAIanU,GAAYoU,GAAZpU,QAEAoU,MElBTF,GAAkBlU,GAAQkU,gBACnBG,GAAuB,kBAAMH,GAAgB,OACpDC,GAAgBnU,GAAQmU,cACjBG,GAAqB,kBAAMH,GAAc,OAGzCI,GAAqB,SAACjJ,GAClC,OAAO,SAACpL,EAAoB6L,GAC3B,IAAMzN,EAAQyN,IACR0F,EAAaD,GAAclT,GAC5BmT,GAILI,GAAgBvG,EAAQmG,EAAmCvR,EAAU5B,GACrE4B,EAASoU,OAJRpU,EAASgU,GAAgB5I,MAQfkJ,GAA6B,SAAChV,GAC1C,IAAMmS,EAAeoB,GAA+BvT,GACpD,QAAImS,GACI4C,GAAmB5C,IAKf8C,GAAyB,SAACxC,GACtC,IAAMN,EH+CmC,SAACM,GAC1C,IAAMe,EAAgBV,KACtB,QAAKU,GAEE,CAAE3I,WAAY2I,EAAc5S,KAAM6R,iBGnDpByC,CAA2BzC,GAChD,QAAIN,GACI4C,GAAmB5C,IAKfgD,GAAmB,SAACrJ,GAChC,OAAO,SAACpL,EAAoB6L,GAC3B,IAAMzN,EAAQyN,IACR4F,EAAeD,GAAgBpT,GAChCqT,GAILE,GAAgBF,EAAuCrG,EAAQpL,EAAU5B,GACzE4B,EAASmU,OAJRnU,EAASiU,GAAc7I,MAQbsJ,GAA6B,SAAC/M,EAAgBsF,GAE1D,OAAOwH,GADyC,CAAE9M,SAAQsF,YAAWhD,WAAY,YAIrE0K,GAA8B,SAAChN,EAAgBsF,GAE3D,OAAOwH,GADyC,CAAE9M,SAAQsF,YAAWhD,WAAY,a,qBCzDrE2K,GAAoB,WAAO,IAAD,EACdzS,oBAAS,GADK,oBAC/B4D,EAD+B,KACzBC,EADyB,KAEhChG,EAAWC,cACXwR,EAAevP,YAAYsP,KAE1BC,GAAgB1L,GAAMC,GAAQ,GAE/ByL,IAAiB1L,GAAMC,GAAQ,GAErC,IAUMC,EAAgB,WACrBD,GAAQ,GACRhG,EAASmU,OAGJjO,EAAW,SAAC/C,IACb4C,GAAuB,WAAd5C,EAAMC,KAAkC,QAAdD,EAAMC,KAC5C6C,KAWF,OAPAP,qBAAU,WAET,OADAR,SAASU,iBAAiB,UAAWM,GAC9B,WACNhB,SAASW,oBAAoB,UAAWK,OAKzC,kBAACC,GAAA,EAAD,CACCxD,MAAO,CAAEkS,SAAU,QAASC,UAAW,QACvC1O,aAAc,CAAEC,SAAU,MAAOC,WAAY,UAC7CP,KAAMA,EACNQ,QAjCkB,SAACpD,EAAYqD,GACjB,cAAXA,EAEHrD,EAAME,kBAEN2C,GAAQ,GACRhG,EAASmU,QA4BT1N,QACC,kBAAC/F,EAAA,EAAD,CAAMC,WAAS,EAACC,UAAU,MAAMmU,QAAS,GACxC,kBAACrU,EAAA,EAAD,CAAMG,MAAI,GACT,kBAACL,EAAA,EAAD,CACCC,QAAQ,WACRkG,MAAM,YACNhE,MAAO,CACNC,QAAS,MACT+D,MAAO,QACPqO,gBAAiB,UACjBH,SAAU,QACVC,UAAW,QAEZG,QAAQ,GAER,kBAACjR,GAAA,EAAD,CAAYvD,QAAQ,MAAM,eAG3B,kBAACD,EAAA,EAAD,CAAMC,QAAQ,WAAWkC,MAAO,CAAEC,QAAS,MAAO+D,MAAO,QAASqO,gBAAiB,SAAWC,QAAQ,GACrG,kBAACjR,GAAA,EAAD,CAAYvD,QAAQ,SAApB,OAA6BgR,QAA7B,IAA6BA,OAA7B,EAA6BA,EAActH,eAIhC,OAAZsH,QAAY,IAAZA,OAAA,EAAAA,EAAcM,gBACd,kBAACrR,EAAA,EAAD,CAAMG,MAAI,GACT,kBAACL,EAAA,EAAD,CACCC,QAAQ,WACRkG,MAAM,YACNhE,MAAO,CAAEC,QAAS,MAAO+D,MAAO,QAASqO,gBAAiB,SAC1DC,QAAQ,GAER,kBAACjR,GAAA,EAAD,CAAYvD,QAAQ,MAAM,YAG3B,kBAACD,EAAA,EAAD,CACCC,QAAQ,WACRkC,MAAO,CAAEC,QAAS,MAAO+D,MAAO,QAASqO,gBAAiB,WAC1DC,QAAQ,GAER,kBAACjR,GAAA,EAAD,CAAYvD,QAAQ,SAApB,QAAkCgR,EAAaM,cAAczS,SAMlEmF,OACC,kBAACtE,EAAA,EAAD,CAAYyG,KAAK,QAAQsO,aAAW,QAAQvO,MAAM,UAAUtG,QAAS4F,GACpE,kBAAC,KAAD,CAAWpD,SAAS,cC5FZsS,GAAkB,SAAC,GAA+D,IAA7DjY,EAA4D,EAA5DA,SAAUoC,EAAkD,EAAlDA,KACrCU,EAAWC,cAEjB,OACC,0BACCmV,UAAW,WACV,IAAMC,EAAgCf,GAA2BhV,GAC7D+V,GAA+BrV,EAASqV,IAE7CC,YAAa,SAACnS,GAAkC,IAAD,EAOzB,IAAjBA,EAAMoS,SAAc,UAAA5P,OAAO2M,sBAAP,SAAuB9H,WAG/CtN,ICnBSsY,GAAmB,SAAC,GAAoF,IAAlFtY,EAAiF,EAAjFA,SAAUuY,EAAuE,EAAvEA,YACtCzV,EAAWC,cAEjB,OACC,0BACCmV,UAAW,WACV,IAAMM,EAA4BnB,GAAuBkB,GACrDC,GAA2B1V,EAAS0V,KAGxCxY,I,0CCJSyY,GAAe,SAAC,GAAqE,IAAnE1I,EAAkE,EAAlEA,UAAWtF,EAAuD,EAAvDA,OACnC3H,EAAWC,cAEXwR,EAAevP,YAAYsP,IAC3BD,EAAarP,YAAYoP,IAJiE,EAMhEnP,oBAAS,GANuD,oBAMzFyT,EANyF,KAM/EC,EAN+E,KAQ1FC,IACHvE,KACCA,EAAmC5J,QACrC4J,EAAmC5J,SAAWA,GAC/C4J,EAAWtE,YAAcA,GACsC,WAA9DsE,EAA+CtH,WASjD,OAPI6L,EACEF,GAAUC,GAAY,GAEvBD,GAAUC,GAAY,GAK1B,kBAAC1Y,EAAA,EAAD,CACCC,MACC0Y,EACG5V,GAAKxC,UAAU7B,wBACb4V,EACFvR,GAAKxC,UAAU9B,oBACfsE,GAAKxC,UAAU/B,uBAEnB0B,WAAY6C,GAAKxC,UAAUX,kBAC3BO,eAAgB4C,GAAKxC,UAAUV,uBAE/B,kBAACmD,EAAA,EAAD,CACCC,KAAK,SACLC,QAAS,WACHuV,GAAerE,EAETuE,GACV9V,EAASoU,MAFTpU,EAAS0U,GAA2B/M,EAAQsF,MAM7C2I,EACA,kBAAC,KAAD,CAAuB/S,SAAS,UAEhC,kBAAC,KAAD,CAAsBA,SAAS,a,oBC1CvBkT,GAAc,WAAO,IAAD,EACQ5T,wBAAoDtC,GAD5D,oBACzBmW,EADyB,KACXC,EADW,KAE1BtR,EAAMC,iBAAO,MAEbsR,EAAcC,uBACnB,SAAChT,IAXmC,SAACwB,EAAuCxB,GAAuB,IAAD,IAC7FI,EAASJ,EAAMI,OACrB,mBAAIoB,EAAIyR,eAAR,iBAAI,EAAaC,cAHc,4BAG/B,aAAI,EAAqDC,SAAS/S,IAUpCgT,CAA8B5R,EAAKxB,IAE9D8S,OAAgBpW,KAGlB,CAAC8E,EAAKsR,IAEPvQ,qBAAU,WAET,OADAR,SAASU,iBAAiB,YAAasQ,GAChC,WACNhR,SAASW,oBAAoB,YAAaqQ,MAEzC,CAACA,IAEJ,IAAMM,EAAyBtU,YAAYwP,IACrC+E,EAAaN,uBAClB,SAAChT,GACKqT,IAELrT,EAAME,iBAEN4S,EAAgB,CAAES,KAAMvT,EAAMwT,EAAGC,IAAKzT,EAAM0T,OAE7C,CAACL,EAAwBP,IAE1BvQ,qBAAU,WAET,OADAR,SAASU,iBAAiB,cAAe6Q,GAClC,WACNvR,SAASW,oBAAoB,cAAe4Q,MAE3C,CAACA,IAEJ,IAAMK,IAAcd,EAEdhW,EAAWC,cAEjB,OACC,kBAAC8W,GAAA,EAAD,CAAMpS,IAAKA,EAAKqS,aAAW,EAACjR,KAAM+Q,EAAWG,gBAAgB,iBAAiBC,eAAgBlB,GAC7F,kBAACmB,GAAA,EAAD,CACC9W,QAAS,WACRL,EAASyU,GAAiB,CAAExH,UAAW,OAAQhD,WAAY,aAC3DgM,OAAgBpW,KAHlB,aASA,kBAACiB,EAAA,EAAD,MACA,kBAACqW,GAAA,EAAD,CACC9W,QAAS,WACRL,EAASyU,GAAiB,CAAExH,UAAW,IAAKhD,WAAY,aACxDgM,OAAgBpW,KAHlB,gBAQA,kBAACsX,GAAA,EAAD,CACC9W,QAAS,WACRL,EAASyU,GAAiB,CAAExH,UAAW,IAAKhD,WAAY,aACxDgM,OAAgBpW,KAHlB,kB,0CCnEUuX,GAAgB,SAAC,GAAqE,IAAnEnK,EAAkE,EAAlEA,UAAWtF,EAAuD,EAAvDA,OACpC3H,EAAWC,cAEXwR,EAAevP,YAAYsP,IAC3BD,EAAarP,YAAYoP,IAJkE,EAMjEnP,oBAAS,GANwD,oBAM1FyT,EAN0F,KAMhFC,EANgF,KAQ3FC,IACHvE,KACCA,EAAmC5J,QACrC4J,EAAmC5J,SAAWA,GAC/C4J,EAAWtE,YAAcA,GACsC,YAA9DsE,EAA+CtH,WAQjD,OANI6L,EACEF,GAAUC,GAAY,GAEvBD,GAAUC,GAAY,GAI1B,kBAAC1Y,EAAA,EAAD,CACCC,MACC0Y,EACG5V,GAAKxC,UAAU1B,yBACbyV,EACFvR,GAAKxC,UAAU3B,mBACfmE,GAAKxC,UAAU5B,wBAEnBuB,WAAY6C,GAAKxC,UAAUX,kBAC3BO,eAAgB4C,GAAKxC,UAAUV,uBAE/B,kBAACmD,EAAA,EAAD,CACCC,KAAK,SACLC,QAAS,WACHuV,GAAerE,EAETuE,GACV9V,EAASoU,MAFTpU,EAAS2U,GAA4BhN,EAAQsF,MAM9C2I,EACA,kBAAC,KAAD,CAAiB/S,SAAS,UAE1B,kBAAC,KAAD,CAAyBA,SAAS,aCnD/BmL,GAAkBC,GAAlBD,QAEO,IAAElO,UAASX,KAFA8O,GAAT9O,KAEe1B,aAAYuQ,WAASE,YAAWmJ,YCHnDC,GAAgB,SAAC,GAYN,IAAD,IAXtBC,kBAWsB,MAXT,GAWS,EAVtBC,EAUsB,EAVtBA,YACA/B,EASsB,EATtBA,YACA9S,EAQsB,EARtBA,MACG8U,EAOmB,qEACItV,mBAAS,CAAEoV,aAAYG,aAAcH,IADzC,oBACfnZ,EADe,KACRoE,EADQ,KAStB,OALIpE,EAAMmZ,aAAeA,GACxB/U,EAAS,CAAE+U,aAAYG,aAAcH,IAKrC,kBAAClF,GAAU5U,WAAW+X,iBAAtB,CACCC,YACCA,QAAgE5V,IAAhD4V,EAA6B5B,eACzC4B,OACD5V,GAGJ,kBAAC4C,GAAA,EAAD,eACCkV,WAAY,CAAEC,kBAAkB,EAAMjV,MAAO,CAAEkV,SAAU,UACzDC,WAAS,EACTrX,QAAQ,SACR4B,MAAOjE,EAAMsZ,aACbjU,SAAU,SAACN,GACV,IAAMG,EAAkBH,EAAMI,OAA+BlB,MAC7DG,EAAS,6BAAKpE,GAAN,IAAasZ,aAAcpU,MAEpCyU,OAAQ,SAAC5U,GACRqU,EAAYrU,EAAMI,OAAOlB,QAE1BM,MAAOA,GACH8U,M,qBCvCKO,GAAqB,SAAC,GAAkD,IAAhDC,EAA+C,EAA/CA,WAC9BjY,EAAWC,cACjB,OACC,kBAAC9C,EAAA,EAAD,CACCC,MAAO8C,GAAKxC,UAAUhC,oBACtB2B,WAAY6C,GAAKxC,UAAUX,kBAC3BO,eAAgB4C,GAAKxC,UAAUV,uBAE/B,kBAACmD,EAAA,EAAD,CACCC,KAAK,SACLC,QAAS,WACRL,EAASF,GAAQgQ,mBAAmBmI,MAGrC,kBAAC,KAAD,CAAgBpV,SAAS,a,SCbhBqV,GAAuB,SAAC,GAAyE,IAAvE9M,EAAsE,EAAtEA,OAAQ6B,EAA8D,EAA9DA,UACxC+E,EAA8B5G,EAAO4G,OACxCzF,GAAM4B,MAAMgK,YAAY1P,aAAawE,EAAW7B,EAAO4G,QACvD,KACGoG,OAAgCvY,KAAX,OAANmS,QAAM,IAANA,OAAA,EAAAA,EAAQ1S,MAC7B,OACC,kBAAC+Y,GAAA,EAAD,CAAO5X,QAAQ,YACd,kBAACC,EAAA,EAAD,CAAMC,WAAS,EAACC,UAAU,OACzB,kBAACF,EAAA,EAAD,CAAMG,MAAI,GACT,kBAACwR,GAAU5U,WAAWkY,aAAtB,CACChO,OAAQyD,EAAOzD,OACfsF,UAAWA,KAIb,kBAACvM,EAAA,EAAD,CAAMG,MAAI,GACT,kBAACwR,GAAU5U,WAAW2Z,cAAtB,CACCzP,OAAQyD,EAAOzD,OACfsF,UAAWA,KAIb,kBAACvM,EAAA,EAAD,CAAMG,MAAI,GACRuX,GAAgB,kBAAC,GAAD,CAAoBH,WAAYjG,QCnBzCsG,GAAS,SAAC,GAAsC,IAAD,IAAnClN,EAAmC,EAAnCA,OAClBpL,EAAWC,cAEjB,OACC,kBAACO,EAAA,EAAD,CAAMC,QAAQ,YAAY8X,UAAW,EAAG5V,MAAO,CAAEC,QAAS,QACzD,kBAAClC,EAAA,EAAD,CAAMC,WAAS,EAACC,UAAU,MAAMuD,QAAQ,iBACvC,kBAACzD,EAAA,EAAD,CAAMG,MAAI,GACT,kBAACH,EAAA,EAAD,CAAMC,WAAS,EAACC,UAAU,SAASmU,QAAS,GAC3C,kBAACrU,EAAA,EAAD,CAAMG,MAAI,GACT,kBAACH,EAAA,EAAD,CAAMC,WAAS,EAACC,UAAU,MAAMmU,QAAS,GACxC,kBAACrU,EAAA,EAAD,CAAMG,MAAI,GACT,kBAAC,GAAD,CACC2W,YAAa,SAACnV,GACbrC,EAASuM,GAAMzM,QAAQiN,iBAAiB,CAAEE,UAAW,IAAKC,WAAY9B,EAAQ4B,SAAU3K,MAEzFkV,WAAanM,EAAO1B,QAA0BnB,EAC9C8I,MAAOnR,GAAKxC,UAAUb,aACtB4D,QAAQ,SACRkC,MAAO,CAAEqS,gBAAiB,WAC1BwD,gBAAiB,CAAE7V,MAAO,CAAEgE,MAAO,YACnC8O,YAAW,UAAErK,EAAO4G,cAAT,aAAE,EAAezJ,KAI9B,kBAAC7H,EAAA,EAAD,CAAMG,MAAI,GACT,kBAAC,GAAD,CAAsBoM,UAAU,IAAI7B,OAAQA,OAI/C,kBAAC1K,EAAA,EAAD,CAAMG,MAAI,GACT,kBAACH,EAAA,EAAD,CAAMC,WAAS,EAACC,UAAU,MAAMmU,QAAS,GACxC,kBAACrU,EAAA,EAAD,CAAMG,MAAI,GACT,kBAAC,GAAD,CACC2W,YAAa,SAACnV,GACbrC,EAASuM,GAAMzM,QAAQiN,iBAAiB,CAAEE,UAAW,IAAKC,WAAY9B,EAAQ4B,SAAU3K,MAEzFkV,WAAanM,EAAO1B,QAA0BlB,EAC9C6I,MAAOnR,GAAKxC,UAAUZ,WACtB6F,MAAO,CAAEqS,gBAAiB,WAC1BwD,gBAAiB,CAAE7V,MAAO,CAAEgE,MAAO,YACnC8O,YAAW,UAAErK,EAAO4G,cAAT,aAAE,EAAexJ,KAG9B,kBAAC9H,EAAA,EAAD,CAAMG,MAAI,GACT,kBAAC,GAAD,CAAsBoM,UAAU,IAAI7B,OAAQA,SAOjD,kBAAC1K,EAAA,EAAD,CAAMG,MAAI,GACT,kBAAC,GAAMpD,WAAWgQ,iBAAlB,CAAmC9F,OAAQyD,EAAOzD,aCxD1C8Q,GAAW,SAAC,GAAwC,IAAtCrN,EAAqC,EAArCA,OACpBpL,EAAWC,cAEjB,OACC,kBAACO,EAAA,EAAD,CAAMC,QAAQ,YAAY8X,UAAW,EAAG5V,MAAO,CAAEC,QAAS,QACzD,kBAAClC,EAAA,EAAD,CAAMC,WAAS,EAACC,UAAU,MAAMuD,QAAQ,iBACvC,kBAACzD,EAAA,EAAD,CAAMG,MAAI,GACT,kBAACH,EAAA,EAAD,CAAMC,WAAS,EAACC,UAAU,MAAMmU,QAAS,GACxC,kBAACrU,EAAA,EAAD,CAAMG,MAAI,GACT,kBAAC,GAAD,CACC2W,YAAa,SAACnV,GACbrC,EAASuM,GAAMzM,QAAQgN,YAAd,6BAA+B1B,GAA/B,IAAuC1B,QAASrH,OAE1DkV,WAAYnM,EAAO1B,QACnB2H,MAAOnR,GAAKxC,UAAUd,SACtB6D,QAAQ,SACRkC,MAAO,CAAEqS,gBAAiB,WAC1BwD,gBAAiB,CAAE7V,MAAO,CAAEgE,MAAO,YACnC8O,YAAarK,EAAO4G,UAGtB,kBAACtR,EAAA,EAAD,CAAMG,MAAI,GACT,kBAAC,GAAD,CAAsBoM,UAAU,OAAO7B,OAAQA,OAKlD,kBAAC1K,EAAA,EAAD,CAAMG,MAAI,GACT,kBAAC,GAAMpD,WAAWgQ,iBAAlB,CAAmC9F,OAAQyD,EAAOzD,aChC1C+Q,GAAW,SAAC,GAAwC,IAAtCtN,EAAqC,EAArCA,OAC1B,OAAQA,EAAOhL,MACd,IAAK,OACJ,OAAO,kBAAC,GAAD,CAAUgL,OAAQA,IAC1B,IAAK,MACJ,OAAO,kBAAC,GAAD,CAAQA,OAAQA,MCHpBuN,GAAkB,kBACvB,kBAACjY,EAAA,EAAD,CAAMG,MAAI,GACT,kBAACC,EAAA,EAAD,QCFI8X,GAAmB,SAACxN,GAAD,MAAwC,QAAhBA,EAAOhL,MAClDyY,GAAqB,SAACzN,GAAD,MAAwC,SAAhBA,EAAOhL,MAU7C0Y,GAAoB,SAChCC,EACArJ,EACAsJ,GAEA,GAA0B,SAAtBtJ,EACH,MAAO,GAGR,IAAMuJ,EAAoB,GAa1B,MAX0B,QAAtBvJ,IACuB,QAAtBA,EACHuJ,EAAQlK,KAAK6J,IACmB,UAAtBlJ,GACVuJ,EAAQlK,KAAK8J,KAGe,KAA1BG,GACHC,EAAQlK,KA5BiD,SAACiK,GAAD,OAAmC,SAAC5N,GAC9F,OAAQA,EAAOhL,MACd,IAAK,OACJ,OAAOmM,GAAM4B,MAAMzE,QAAQe,iCAAiCW,EAAsB4N,GACnF,IAAK,MACJ,OAAOzM,GAAM4B,MAAMzE,QAAQmB,+BAA+BO,EAAoB4N,KAuBlEpJ,CAAmBoJ,IAG1BC,EAAQ9Q,OAAS,EAAI4Q,EAAW9Q,O/CTR,SAACgR,GAAD,OAAuB,SAACtC,GAAD,OAAYsC,EAAQC,QAAO,SAACxK,EAAGyK,GAAJ,OAAUzK,GAAKyK,EAAExC,MAAI,I+CSxDyC,CAAiBH,IAAYF,GC5B/DM,GAAY,SAAC,GAA8E,IAA5ErS,EAA2E,EAA3EA,QAASsS,EAAkE,EAAlEA,eAC9BC,EAAcrX,YAAYqK,GAAM2B,UAAU5B,UAE1CsE,EAAc1O,YAAYkM,IAAiBpH,GAC3CwS,EAAa5I,EAAcA,EAAYzJ,QAAQY,KAAI,SAACG,GAAD,OAAQqR,EAAYrR,MAAO,GAC9EwH,EAAoBxN,YAAYuN,IAEhCG,EAAqB1N,YAAYyN,IAGjC8J,EFT0B,SAAClN,GACjC,IAAMmN,EAAY3b,KAElB,OAAOwO,EAAM2M,QAAO,SAACS,EAAMC,EAAaC,EAAOC,GAS9C,OARAH,EAAK5K,KACJ,kBAACrO,EAAA,EAAD,CAAMG,MAAI,EAACuC,IAAKsW,KACf,kBAAC,GAAD,CAAUtO,OAAQwO,EAAaxW,IAAKsW,QAIlBG,EAAQC,EAAI3R,OAAS,GACxBwR,EAAK5K,KAAK,kBAAC,GAAD,CAAiB3L,IAAKsW,OAC1CC,IACL,IEJeI,CADMjB,GAAkBU,EAAY9J,EAAmBE,IAMzE,OACC,kBAACoK,GAAA,EAAD,CACCC,UAAQ,EACRC,iBAAiB,EACjBvX,MAAO,CACNwX,SAAU,OAGV3U,OAAQ8T,GAETf,UAAW,GAEX,kBAAC6B,GAAA,EAAD,KACC,kBAACpW,GAAA,EAAD,CACCvD,QAAQ,KACR4Z,MAAM,SACN1X,MAAO,CAAE2X,cAAe,OAAQC,iBAAkB,OAAQC,aAAc,SAEvExT,IAGH,kBAACyT,GAAA,EAAD,KACC,kBAAC/Z,EAAA,EAAD,CAAMC,WAAS,EAACC,UAAU,SAASmU,QAAS,EAAG5Q,QAAQ,SAASD,WAAW,WAC1E,kBAACxD,EAAA,EAAD,CAAMG,MAAI,GACT,0BACCR,QAAS,WACRqa,QAAQC,IAAI,UAGb,kBAAC,GAAMld,WAAW+P,YAAlB,OAED,kBAAC,GAAM/P,WAAW6P,cAAlB,MACA,kBAACxM,EAAA,EAAD,OAGD,kBAACJ,EAAA,EAAD,CAAMG,MAAI,GACT,kBAACH,EAAA,EAAD,CAAMC,WAAS,EAACC,UAAU,SAASmU,QAAS,EAAG5Q,QAAQ,SAASD,WAAW,WACzEuV,QCvDKmB,GAAoB,SAAC,GAAqE,IAAnE1d,EAAkE,EAAlEA,SAAU8J,EAAwD,EAAxDA,QACvChH,EAAWC,cACX4a,EAAgB3Y,YAAY8M,IAElC,OACC,0BACC8L,aAAc,WACTD,IAAkB7T,GACrBhH,EAASF,GAAQmP,cAAcjI,MAIhC9J,ICdS6d,GAAoB,WAChC,IAAM/a,EAAWC,cACX+a,EAAoB9Y,YAAYoN,IAEtC,OACC,kBAAC5I,GAAA,EAAD,CACCuU,UACC,kBAAC9J,GAAA,EAAD,CACCE,MAAM,QACND,QAAS,kBAACrB,GAAD,CAAeI,QAA+B,SAAtB6K,MAGnCva,QAAQ,YACRkG,MAAM,UACNtG,QAAS,WACRL,EAASF,GAAQyP,eAAqC,SAAtByL,EAA+B,OAAS,aCfpElb,GAA2BmO,GAA3BnO,QAEO,IAAEpC,YAAWD,aAAYuQ,QAFLC,GAAlBD,QAEgC7O,KAFd8O,GAAT9O,KAE6B+O,YAAWpO,WAASqO,QAAOkJ,YCHrE6D,GAAkB,SAAC,GAAoF,IAAlF5b,EAAiF,EAAjFA,KAAM6b,EAA2E,EAA3EA,QACjCxc,EAAauD,YAAYN,IACzBwZ,EAAQxW,iBAAO,GAEf5E,EAAWC,cAQXob,EAAQlF,uBAAY,WACzB,IAAMmF,EAAaC,aAAY,WAAO,IAAD,EACpC,GAAsB,KAAlBH,EAAMhF,QAKT,OAJAgF,EAAMhF,QAAU,EAChBoF,cAAcF,GACdZ,QAAQC,IAAI,yBAA0Bhc,QACtCqB,EAASF,GAAQnB,WAAW,OAI7B,IAAM8c,EAAS,UAAGN,EAAQ/E,eAAX,aAAG,EAAiBlZ,SAAS2D,KAAK,GACjD,GAAI4a,EAAW,CACd,IAAMC,EAAaD,EAAUve,SAAS2D,KAAMlC,EAA4BkV,gBACxE,GAAI6H,EAIH,OAHAA,EAAWC,eAAe,CAAEC,SAAU,OAAQC,MAAO,UAAWC,OAAQ,YACxEV,EAAMhF,QAAU,OAChBoF,cAAcF,GAIhBF,EAAMhF,QAAUgF,EAAMhF,QAAU,IAC9B,MACD,CAACpW,EAAUob,EAAOzc,EAAYwc,IAoBjC,OAlBAzV,qBAAU,WACT,GAAI/G,GAAcA,EAAWW,OAASA,GAAQ6b,EAAQ/E,QAAS,CAE9D,IAAMqF,EAAYN,EAAQ/E,QAAQlZ,SAAS2D,KAAK,GAChD,GAAI4a,EAAW,CACd,IAAMC,EAAaD,EAAUve,SAAS2D,KAAKlC,EAAWkV,gBAClD6H,GACHA,EAAWC,eAAe,CAAEC,SAAU,OAAQC,MAAO,UAAWC,OAAQ,YACxEV,EAAMhF,QAAU,GAEhBiF,SAGDA,OAGA,CAACrb,EAAUV,EAAM6b,EAASxc,EAAY0c,IAElC,MCnCFU,GAAwB,SAAC/J,GAC9B,OAAO,SAACgK,GACP,OAZsB,SAACA,EAAiChK,GACzD,IAAMiK,EAAYD,EAASC,UAC3B,OAAMA,GAAajK,EAAO6B,gBAAkBoI,GAAajK,EAAO8B,aAKzD,0BAAMnR,MAAO,CAAEqS,gBAAiB,QAAUgH,EAASrR,KAJlDqR,EAASrR,IASTuR,CAAgBF,EAAUhK,KAItBmK,GAAkB,CAAEnH,gBAAiB,QA0FlD,SAASoH,GAAiBC,GACzB,OAAO,SAAsBL,GAC5B,OAzF8B,SAAC9b,EAAcoc,GAS9C,IAAMC,EAAarc,EAAKiI,OAClBqU,EAAgBF,EAAQnU,OAE9B,GAAgB,KAAZmU,GAA2B,KAATpc,GAAesc,EAAgBD,EAAY,OAAOrc,EAGxE,IAAM2Z,EAAQ3Z,EAAKyT,QAAQ2I,GAC3B,IAAe,IAAXzC,EAAc,OAAO3Z,EAGzB,IAAMuc,EAAgB,0BAAM9Z,MAAOwZ,IAAkBG,GAC/CI,EAAS7C,EAAQ,GAAI3Z,EAAK+N,MAAM,EAAG4L,GAErC8C,EAAS,GACTD,GAAQC,EAAO5N,KAAK2N,GACxBC,EAAO5N,KAAK0N,GAEZ,IAAMG,EAAc1c,EAAKyT,QAAQ2I,EAASzC,EAAQ2C,GAClD,IAAqB,IAAjBI,EAAoB,CACvB,IAAMC,EAAchD,EAAQ2C,EACtBM,EAASD,EAAcN,GAAarc,EAAK+N,MAAM4O,GAErD,OADIC,GAAQH,EAAO5N,KAAK+N,GACjBH,EAGR,IAAME,EAAchD,EAAQ2C,EACtBM,EAASD,IAAgBD,GAAc1c,EAAK+N,MAAM4O,EAAaD,GACjEE,GAAQH,EAAO5N,KAAK+N,GACxBH,EAAO5N,KAAK0N,GAEZ,IAAMM,EAAa7c,EAAKyT,QAAQ2I,EAASM,EAAcJ,GACvD,IAAoB,IAAhBO,EAAmB,CACtB,IAAMC,EAAcJ,EAAcJ,EAGlC,OAFeQ,EAAcT,GAAarc,EAAK+N,MAAM+O,IACzCL,EAAO5N,KAAK+N,GACjBH,EAGR,IAAMK,EAAcJ,EAAcJ,EAC5BS,EAASD,EAAcT,GAAarc,EAAK+N,MAAM+O,EAAaD,GAIlE,GAHIE,GAAQN,EAAO5N,KAAKkO,GACxBN,EAAO5N,KAAK0N,GAERM,EAAaP,IAAkBD,EAClC,OAAOI,EAGR,IAAMO,EAAahd,EAAK+N,MAAM8O,EAAaP,GAC3C,GAAIU,IAAeZ,EAElB,OADAK,EAAO5N,KAAK0N,GACLE,EAGR,IAAMQ,EAAYD,EAAWE,MAAMd,GACnC,GAAIa,EAAUhV,QAAU,EAEvB,OADAwU,EAAO5N,KAAKmO,GACLP,EAGR,IAAK,IAAI9C,EAAQ,EAAGA,EAAQsD,EAAUhV,OAAQ0R,IAAS,CACtD,IAAMwD,EAAUF,EAAUtD,GACZ,IAAVA,GAA2B,KAAZwD,EAKfxD,IAAUsD,EAAUhV,OAAS,GAAiB,KAAZkV,GAKtB,KAAZA,GAAgBV,EAAO5N,KAAKsO,GAChCV,EAAO5N,KAAK0N,IALXE,EAAO5N,KAAKsO,GALZV,EAAO5N,KAAK0N,GAad,OAAOE,EAKCW,CAAiBtB,EAASrR,IAAK0R,IAIxC,IAQakB,GAAU,SAAC,GAA4C,IAAD,EAAzCC,EAAyC,EAAzCA,WAEnBC,EAAa,UAAGvb,YAAYf,WAAf,aAAG,EAAoCiD,MACpDxF,EAAiBsD,YAAYL,IAC7BlD,EAAauD,YAAYN,IAEzB8b,EAAoB/e,EAAaod,GAAsBpd,QAAckB,EAGrE8d,EAjBkB,SAACC,EAA2BC,GACpD,OAAKD,EACAC,EACE,SAAC7B,GAAD,OAAqC6B,EAAe,6BAAK7B,GAAN,IAAgBrR,IAAKiT,EAAe5B,OADlE4B,EADAC,EAgBPC,CAFqB,KAAnBlf,EAAwBwd,GAAiBxd,QAAkBiB,EAE5B6d,GAEhDvC,EAAUvW,iBAA8B,MAE9C,OACC,yBAAKjC,MAAO,CAAEwX,SAAU,SACvB,kBAAC9H,GAAU5U,WAAW0X,gBAAtB,CAAsC7V,KAAMke,GAC3C,kBAAC,GAAD,KACC,kBAAC,KAAD,CACCO,SAAU,SAACC,GACV7C,EAAQ/E,QAAU4H,GAEnBR,WAAYA,EACZpZ,MAAOqZ,EAAgBQ,GACvBC,mBAAoBP,EACpBQ,uBAAuB,MAI1B,kBAAC,GAAD,CAAiB7e,KAAMke,EAAYrC,QAASA,MC3JzCiD,GAAgB,SAAC,GAA8E,IAAD,EAA3EpX,EAA2E,EAA3EA,QAASsS,EAAkE,EAAlEA,eAC3BlV,EAAK,UAAGlC,YAAYf,WAAf,aAAG,EAAoCiD,MAElD,OACC,yBAAKzB,MAAO,CAAEkS,SAAUzQ,EAAQia,KAC/B,kBAACC,GAAM7gB,WAAW4b,UAAlB,CAA4BrS,QAASA,EAASsS,eAAgBA,MAKpDiF,GAAoB,SAAC,GAU3B,IATN1E,EASK,EATLA,MACA2E,EAQK,EARLA,KACA7b,EAOK,EAPLA,MAQM6a,EAAa3D,EAAQ,EACrB7S,EAAUsX,GAAMnQ,MAAMrH,0BAA0B0W,GAC9CiB,EAAoBD,EAApBC,gBACFC,EAAYxc,YAAYoc,GAAMpQ,UAAUoB,mBACxCqP,EAAezc,YAAYT,IAEjC,OACC,yBAAKkB,MAAK,gBAAOA,IAChB,kBAAC2b,GAAM7gB,WAAWmd,kBAAlB,CAAoC5T,QAASA,GAC5C,kBAACtG,EAAA,EAAD,CAAMC,WAAS,EAACwD,QAAQ,gBAAgBvD,UAAU,MAAMsD,WAAW,cAClE,kBAACxD,EAAA,EAAD,CAAMG,MAAI,EAAC+d,OAAsB,SAAdF,GAClB,kBAAC,GAAD,CAAe1X,QAASA,EAASsS,eAAgBmF,EAAgBI,IAAIrB,MAGtE,kBAAC9c,EAAA,EAAD,CAAMG,MAAI,EAAC+d,OAAyB,SAAjBD,GAClB,kBAAC,GAAD,CAASnB,WAAYA,OAIxB,kBAAC1c,EAAA,EAAD,CAAS6B,MAAO,CAAEmc,UAAWC,GAAuB,OCxC1CC,GAAoB,SAAC,GAA2D,IAAzDC,EAAwD,EAAxDA,QAC7BngB,EAAcoD,YAAYH,IAE1BtD,EAAeyD,YAAYX,IAC3B/C,EAAc0D,YAAYZ,IAC1BwO,EAAqB5N,YAAYoc,GAAMpQ,UAAU2B,kBACvDnK,qBAAU,WAAO,IAAD,EACf,UAAAuZ,EAAQ7I,eAAR,SAAiB8I,aAAa1gB,EAAc,EAAG,WAC7C,IAEH,IAAMwB,EAAWC,cAqBjB,OAnBAyF,qBAAU,WAKgB,IAAD,EAQN,EARlB,IAJKoK,GAAsBrR,IAAiBK,IAAgB5D,EAAK6D,eAChEiB,EAASF,GAAQhB,YAAY5D,EAAK6D,gBAG/B+Q,EAKH,OAJA,UAAAmP,EAAQ7I,eAAR,SAAiB8I,aAAapP,EAAmBxQ,KAAO,EAAG,QAC3DU,EAASF,GAAQnB,WAAWmR,IAC5B9P,EAASF,GAAQT,WAAW,CAAEC,KAAMwQ,EAAmBxQ,KAAMC,cAAc,UAC3ES,EAASse,GAAMxe,QAAQgQ,mBAAmB,OAIvCrR,IACH,UAAAwgB,EAAQ7I,eAAR,SAAiB8I,aAAazgB,EAAe,EAAG,SAChDuB,EAASF,GAAQT,WAAW,CAAEC,KAAMb,EAAcc,cAAc,QAE/D,CAACS,EAAUif,EAASxgB,EAAcqR,EAAoBhR,IAElD,MC5BKmf,GAAqB,IACrBI,GAAkB,IAkBlBU,GAAuB,GAE9BI,GAAW,SAAC,GAMX,IALNF,EAKK,EALLA,QACAR,EAIK,EAJLA,gBAKM9Z,EAAMC,iBAAO6Z,GASnB,OAPA/Y,qBAAU,WAC6B,IAAD,EAAjC+Y,IAAoB9Z,EAAIyR,UAC3B,UAAA6I,EAAQ7I,eAAR,SAAiBgJ,gBAAgB,GACjCza,EAAIyR,QAAUqI,MAIT,MAGKY,GAAwB,SAAC,GAM/B,IALNC,EAKK,EALLA,YACAC,EAIK,EAJLA,qBAKMN,EAAUra,mBAEVlG,EAAqBwD,YAAYf,IACjCsd,EAAkB/f,EACrB6U,MAAMC,KAAK+L,EAAqBjR,QAAQ4K,QAAO,SAACS,EAAM6D,GAEtD,OADA7D,EAAK6F,IAAIhC,EAjDmB,SAC/BA,EACA+B,EACAE,GAEA,IAAMC,EAAWH,EAAqBV,IAAIrB,GAIpCmC,EAHgBF,EAAcxB,GAETyB,EAAS,GAKpC,OAHuBA,EAAS,GAAKC,EAEE,GAqCfC,CAAwBpC,EAAY+B,EAAsB7gB,EAAmB0F,QAC3FuV,IACJ,IAAIkG,UACPhgB,EAEGG,EAAWC,cACXpB,EAAYqD,YAAYJ,IAE9B,OACC,kBAAC,WAAD,KACEpD,GAAsB+f,GACtB,kBAAC,KAAD,CACCjZ,OAAQ9G,EAAmB8G,OAAS3G,EACpCihB,UAAYR,EAAYlJ,QAAmC2J,SAC3DC,SAAU,SAACnG,GAAD,OAAoB4E,EAAgBI,IAAIhF,EAAQ,GAAgBkF,IAC1EkB,SAAU,CACTxB,mBAED9Z,IAAKsa,EACL7a,MAAM,OACN8b,gBAAiB,SAAC9P,GAEjBpQ,EAASF,GAAQT,WAAW,CAAEC,KAAM8Q,EAAM+P,iBAAmB,EAAG5gB,cAAc,OAG9Egf,IAGFE,GACA,kBAAC,GAAD,CAAUQ,QAASA,EAAwCR,gBAAiBA,IAE7E,kBAAC,GAAD,CAAmBQ,QAASA,MCpF/BmB,KAAMC,oBAAoBC,UAA1B,kDAAiFF,KAAMG,QAAvF,kBAIA,IAAMC,GAAU,CACfC,QAAS,SACTC,YAAY,GAGAC,GAAc,WAC1B,IAAM/gB,EAAMsC,YAAYjB,IADQ,EAGkBkB,qBAHlB,oBAGzBod,EAHyB,KAGHqB,EAHG,KAK1BtB,EAAc1a,mBAEd5E,EAAWC,cAGX4gB,EAAO,OAAGjhB,QAAH,IAAGA,OAAH,EAAGA,EAAKT,KACf2hB,EAAalc,iBAAOic,GAK1B,OAJIC,EAAW1K,UAAYyK,IAC1BC,EAAW1K,QAAUyK,GAIrB,kBAAC,KAAD,CACCE,QAAS7gB,GAAKxC,UAAUpB,oBACxB0kB,OAAQ9gB,GAAKxC,UAAUrB,eACvBmkB,QAASA,GACTS,KAAMrhB,EACNshB,WAAW,SACXC,cAAe,SAACC,GACfphB,EAASF,GAAQhC,WAAWsjB,EAASrB,WACjCngB,GCrC2B,SAClCwhB,EACAP,EACAC,EACAF,GAEA,IAAMS,EAAW9N,MAAMC,KAAK,CAAErL,OAAQiZ,EAASrB,WAAY,SAACpgB,EAAG2hB,GAAJ,OAAUA,EAAI,KAAGvZ,KAAI,SAACyV,GAAD,OAC/E4D,EAASG,QAAQ/D,MAMlBgE,QAAQC,IAAKJ,GAAwCK,MAAK,SAACC,GAE1D,GAAId,IAAYC,EAAW1K,QAA3B,CAIA,IAN0F,EAMpFwL,EAAiB,IAAI/B,IAN+D,eASvE8B,GATuE,IAS1F,2BAA0B,CAAC,IAAhBriB,EAAe,QACnBuiB,EAFO,EAEHviB,EAAKwiB,KAAK,GACdC,EAHO,EAGHziB,EAAKwiB,KAAK,GAGpBF,EAAepC,IAAMlgB,EAA4C0iB,WAAa,EAAG,CAACH,EAAGE,KAdI,8BAiB1FnB,EAAkBgB,ODOPK,CAAoBb,EAAUP,EAAmBC,EAAYF,GACtEtB,EAAYlJ,QAAUgL,GAEvBc,YAAa,YAAqB,IAAlB1E,EAAiB,EAAjBA,WACfxd,EAASF,GAAQT,WAAW,CAAEC,KAAMkE,SAASga,GAAaje,cAAc,OAGxEggB,GAAwBuB,EAAW1K,UAAYyK,GAC/C,kBAAC,GAAD,CACCvB,YAAaA,EACbC,qBAAsBA,ME9CrB4C,GAAgB,SAAC,GAAsC,IAApCnb,EAAmC,EAAnCA,QAClBtI,EAAqBwD,YAAYf,IACjCtC,EAAYqD,YAAYJ,IAE9B,OAAOpD,GAAsBG,EAC5B,yBAAK8D,MAAO,CAAEyf,aAAc,MAAOtD,UAAW,QAC7C,kBAACR,GAAM7gB,WAAW4b,UAAlB,CACCrS,QAASA,EACTsS,gBAAgB,OAAC5a,QAAD,IAACA,OAAD,EAACA,EAAoB8G,QAAoB3G,EAAY,MAGpE,MAGQwjB,GAAgB,WAC5B,IAAMC,EAAWpgB,YAAYqM,IACvBmL,EAAY3b,KAClB,OACC,kBAAC2C,EAAA,EAAD,CAAMC,WAAS,EAACwD,QAAQ,eAAeD,WAAW,SAAS6Q,QAAS,EAAGpS,MAAO,CAAEyB,MAAO,OAAQoB,OAAQ,SACrG8c,EAASva,KAAI,SAACG,GAAD,OACb,kBAACxH,EAAA,EAAD,CAAMG,MAAI,EAAC0hB,GAAI,EAAGnf,IAAKsW,KACtB,kBAAC4E,GAAM7gB,WAAWmd,kBAAlB,CAAoC5T,QAASkB,GAC5C,kBAAC,GAAD,CAAelB,QAASkB,WCtBjBsa,GAAU,WACtB,IAAM1jB,EAAcoD,YAAYH,IAMhC,OACC,kBAAC,WAAD,KACC,yBAAK6c,OAAQ9f,IAAgB5D,EAAK6D,cAAe4D,MAAO,CAAEyB,MAAO,OAAQoB,OAAQ,SAChF,kBAAC,GAAD,MACA,kBAAC,GAAD,OAGD,yBAAKoZ,OAAQ9f,IAAgB5D,EAAKmnB,cAAe1f,MAAO,CAAEyB,MAAO,OAAQoB,OAAQ,SAChF,kBAAC,GAAD,S,oBCjBSid,GAAW,WACvB,IAAM3jB,EAAcoD,YAAYH,IAC1B/B,EAAWC,cAMjB,OACC,kBAACO,EAAA,EAAD,KACC,kBAACkiB,GAAA,EAAD,CAAMrgB,MAAOvD,EAAa2E,SANP,SAAC9D,EAAQqN,GAC7BhN,EAASF,GAAQhB,YAAYkO,MAM3B,kBAAC2V,GAAA,EAAD,CAAKtR,MAAM,mBACX,kBAACsR,GAAA,EAAD,CAAKtR,MAAM,sBCXFuR,GAAuB,WACnC,IAAM5iB,EAAWC,cACX4iB,EAAmB3gB,YAAYT,IAErC,OACC,kBAACiF,GAAA,EAAD,CACCuU,UACC,kBAAC9J,GAAA,EAAD,CACCE,MAAM,WACND,QAAS,kBAACrB,GAAD,CAAeI,QAA8B,SAArB0S,MAGnCpiB,QAAQ,YACRkG,MAAM,UACNtG,QAAS,WACRL,EAASF,GAAQvB,cAAmC,SAArBskB,EAA8B,OAAS,aClBlE7U,GAA2BC,GAA3BD,QAEO,IAAElO,QAFkBmO,GAAlBnO,QAESrC,aAAY0B,KAFH8O,GAAT9O,KAEkB6O,WAASE,a,oBCAxC4U,GAA4D5hB,aACxE6hB,GAAQ7U,UAAU9M,WAClB2hB,GAAQ7U,UAAU7M,cAClB0hB,GAAQ7U,UAAU5M,eAClBgd,GAAMpQ,UAAUE,gBAChBkQ,GAAMpQ,UAAUc,uBAChBzC,GAAM2B,UAAU5B,SAChBC,GAAM2B,UAAU9B,qBAChB,SAACyU,EAAS/iB,EAAYU,EAAaiJ,EAAcwH,EAAe1C,EAAOtB,GACtE,MAAO,CACN9L,KAAM0hB,EACN/iB,aACAU,cACAiJ,eACAwH,gBACA1C,QACAtB,uB,UClBUjK,GAAS,SAAC5C,GAAD,OAA4BA,EAAK,YAE1C4kB,GAAmB9hB,aAAeF,IAAQ,SAACiiB,GAAD,OAAQrb,OAAO0G,KAAK2U,MAE9DC,GAAsBhiB,aAAeF,IAAQ,SAACiiB,GAAD,OAAQrb,OAAOgH,OAAOqU,MC4BjEE,GAVCjkB,aAAY,CAC3BC,KC3BmB,aD4BnBb,aAxBgC,GAyBhCc,SAAU,CACTgkB,kBAtB8E,SAAChlB,EAAD,GAAyB,IAAfC,EAAc,EAAdA,QACzF,OAAO,6BAAKD,GAAZ,mBAAoBC,EAAQc,KAAOd,KAsBlCglB,qBAT2E,SAACjlB,EAAD,GAAyB,IAAfC,EAAc,EAAdA,QACtF,OAAOuJ,OAAOC,YAAYD,OAAOE,QAAQ1J,GAAO6J,QAAO,SAAC6R,GAAD,OAASA,EAAI,KAAOzb,OAS1EilB,iBApB+E,SAACllB,EAAD,GAAyB,IAAfC,EAAc,EAAdA,QAC1F,OAAO,6BACHD,GACAC,EAAQ6a,QAAO,SAACS,EAAM4J,GAExB,OADA5J,EAAK4J,EAAOpkB,MAAQokB,EACb5J,IACL,SEdG7Z,GAA2BmO,GAA3BnO,QAASkO,GAAkBC,GAAlBD,QAEF,IAAElO,WAASX,KAFS8O,GAAT9O,KAEM6O,WAASE,YAAWC,UCGvCqV,GAAuB,WACnC,OAAO,SAACxjB,EAAoB6L,GAC3B,IAAMzN,EAAQyN,IAGd,QAAuBhM,IAFAkjB,GAAQ7U,UAAU9M,WAAWhD,GAElB,CACjC,IAAMmlB,EAAST,GAAqB1kB,GACpC4B,EAASijB,GAAGnjB,QAAQsjB,kBAAkBG,OAKnCE,GAAeC,EAAQ,KAChBC,GAAiB,WAC7B,OAAO,SAAC3jB,EAAe6L,GAEtB7L,EAASwjB,MAET,IAAMI,EAAmBX,GAAG/U,UAAUgV,oBAAoBrX,KACpDgY,GAAc,IAAIC,MAAOC,iBAC/BN,GAAaO,KAAKC,UAAUL,GAAmBC,EAAc,qBAIlDK,GAAsB,SAAClkB,GACnCA,EAASuM,GAAMzM,QAAQuN,iBACvBrN,EAASse,GAAMxe,QAAQ2Q,mBAGX0T,GAAwB,SAACnkB,EAAoBokB,EAA+BC,GAUpF,MATJrkB,EACCuM,GAAMzM,QAAQsN,gBAAgB,CAAEb,MAAO6X,EAAgB7X,MAAOtB,iBAAkBmZ,EAAgBnZ,oBAEjGjL,EAASse,GAAMxe,QAAQ4Q,iBAAiB0T,EAAgB3c,oBACjC5H,IAAnBwkB,GAAgCD,EAAgBjlB,OAASklB,GAG5DrkB,EACC+iB,GAAQjjB,QAAQJ,wBAC0B,CAAEmhB,SAA1C,EAAqFuD,GAAlFjlB,KAAsDX,YAAzD,EAASA,YAA6DV,WAAtE,EAAsBA,eAMdwmB,GAAU,SAAC1kB,GACvB,OAAO,SAACI,EAAoB6L,GAC3B,IAAM0Y,EAAa3kB,EAAIT,KAEjBf,EAAQyN,IACRwY,EAAiBtB,GAAQ7U,UAAU9M,WAAWhD,GAE9ComB,EAAavB,GAAG/U,UAAUlN,OAAO5C,GAGvC,QAAuByB,IAAnBwkB,EAA8B,CACjC,IAAMd,EAAST,GAAqB1kB,GACpC4B,EAASijB,GAAGnjB,QAAQsjB,kBAAkBG,IAQvC,GALAvjB,EAAS+iB,GAAQjjB,QAAQd,UAAUY,IAK/B2kB,IAAeF,EAAnB,CAGA,IAAMD,EAAkBI,EAAWD,GAC/BH,EACHD,GAAsBnkB,EAAUokB,GAEhCF,GAAoBlkB,GAIrBA,EAASykB,kBAAeC,mBAIbC,GAAoB,SAACzf,GACjC,OAAO,SAAClF,EAAoB6L,GAC3B,IAAMzN,EAAQyN,IACRwY,EAAiBtB,GAAQ7U,UAAU9M,WAAWhD,GAC9CwB,EAAMmjB,GAAQ7U,UAAUjN,OAAO7C,GAE/BomB,EAAavB,GAAG/U,UAAUlN,OAAO5C,GAGvC,QAAuByB,IAAnBwkB,EAA8B,CACjC,IAAMd,EAAST,GAAqB1kB,GACpC4B,EAASijB,GAAGnjB,QAAQsjB,kBAAkBG,IAGvC,IAAMa,EAAkBI,EAAWtf,GAInCif,GAAsBnkB,EAAUokB,EADXxkB,GAAUykB,EAAsBA,EAAL,IAIhDrkB,EAASykB,kBAAeC,kBAIbE,GAAuB,WACnC,OAAO,SAAC5kB,EAAoB6L,GAC3BqY,GAAoBlkB,GAGpBA,EAASykB,kBAAeC,gBAExB,IAAMtmB,EAAQyN,IACRgZ,EAAiB9B,GAAQ7U,UAAU9M,WAAWhD,GAEpD4B,EAASijB,GAAGnjB,QAAQujB,qBAAqBwB,MAI9BC,GAAiB,SAAC5f,GAC9B,OAAO,SAAClF,EAAe6L,GACtB,IAAMzN,EAAQyN,IACRgZ,EAAiB9B,GAAQ7U,UAAU9M,WAAWhD,GAEnD4B,EADG6kB,GAAkBA,IAAmB3f,EAC/B0f,KAGA3B,GAAGnjB,QAAQujB,qBAAqBne,M,qICxHtC6f,GAA4B,SAAC,GAQ5B,IAPN7f,EAOK,EAPLA,SACA8f,EAMK,EANLA,YACAjf,EAKK,EALLA,KAMM/F,EAAWC,cAEjB,OACC,kBAACglB,GAAA,EAAD,CACClf,KAAMA,EACNQ,QAASye,EACTE,kBAAgB,qBAChBC,mBAAiB,4BAEjB,kBAACC,GAAA,EAAD,CAAald,GAAG,sBAAsB,UAAYhD,EAAW,kCAC7D,kBAACmgB,GAAA,EAAD,KACC,kBAACC,GAAA,EAAD,CAAmBpd,GAAG,4BAAtB,mCAED,kBAACqd,GAAA,EAAD,KACC,kBAAC7e,GAAA,EAAD,CAAQrG,QAAS2kB,EAAare,MAAM,WAApC,SAGA,kBAACD,GAAA,EAAD,CACCrG,QAAS,WACRL,EAAS8kB,GAAe5f,IACxB8f,KAEDre,MAAM,UACN6e,WAAS,GANV,+CAgBSC,GAAuB,SAAC,GAAwC,IAAtCvgB,EAAqC,EAArCA,SAAqC,EACnD/C,oBAAS,GAD0C,oBACpE4D,EADoE,KAC9DC,EAD8D,KAM3E,OACC,6BACC,kBAAC7I,EAAA,EAAD,CACCC,MAAO8C,GAAKxC,UAAUvB,sBACtBkB,WAAY6C,GAAKxC,UAAUX,kBAC3BO,eAAgB4C,GAAKxC,UAAUV,uBAE/B,kBAACmD,EAAA,EAAD,CACCC,KAAK,SACLC,QAAS,WACR2F,GAAQ,KAGT,kBAAC,KAAD,CAAYnD,SAAS,YAGvB,kBAAC,GAAD,CAA2BqC,SAAUA,EAAUa,KAAMA,EAAMif,YAnBzC,WACnBhf,GAAQ,Q,qBC3CG0f,GAAgB,SAAC,GAAiC,IAA/BV,EAA8B,EAA9BA,YAAa3T,EAAiB,EAAjBA,MACtC1M,EAAiDC,iBAAO,MADD,EAGrCzC,qBAHqC,oBAGtD8e,EAHsD,KAGhD0E,EAHgD,KAU7D,OACC,kBAAC,WAAD,KACC,kBAACxO,GAAA,EAAD,CACC9W,QAAS,WACPsE,EAAIyR,QAA6BwP,UAGnC,kBAAClf,GAAA,EAAD,CAAQjG,QAAQ,YAAYkG,MAAM,UAAUkf,kBAAgB,EAAC5K,UAAW,kBAAC,KAAD,OACtE5J,IAGH,2BACC1M,IAAKA,EACLhC,MAAO,CAAEogB,QAAS,QAClBtf,SAAU,SAACN,GAEV,IAAM2iB,EAAQ3iB,EAAMI,OAAOuiB,MACrB7E,EAAO6E,EAAQA,EAAM,GAAK,KAC5B7E,GACH0E,EAAQ1E,IAGV7gB,KAAK,OACL2lB,OAAO,SAER,kBAAC,GAAD,CACCf,YA/BuB,WACzBA,IACAW,OAAQ9lB,IA8BNkG,OAAQkb,EACRA,KAAOA,MAML+E,GAA0B,SAAC,GAQ1B,IAPNhB,EAOK,EAPLA,YACAjf,EAMK,EANLA,KACAkb,EAKK,EALLA,KAMMjhB,EAAWC,cACX4kB,EAAiB3iB,YAAY6gB,GAAQ7U,UAAU9M,YAErD,OADAsZ,QAAQC,IAAI5U,EAAMkb,GAEjB,kBAACgE,GAAA,EAAD,CACClf,KAAMA,EACNQ,QAASye,EACTE,kBAAgB,qBAChBC,mBAAiB,4BAEjB,kBAACC,GAAA,EAAD,CAAald,GAAG,sBAAsB,8BACtC,kBAACmd,GAAA,EAAD,KACC,kBAACC,GAAA,EAAD,CAAmBpd,GAAG,4BAAtB,2FAID,kBAACqd,GAAA,EAAD,KACC,kBAAC7e,GAAA,EAAD,CAAQrG,QAAS2kB,EAAare,MAAM,WAApC,SAGA,kBAACD,GAAA,EAAD,CACCrG,QAAS,WACR,IAAM4lB,EAAS,IAAIC,WACnBD,EAAOE,WAAWlF,GAClBgF,EAAOG,OAAS,WAIf,IAAMC,EAAmBrC,KAAKsC,MAAML,EAAOtJ,QAErC4J,EAAgBF,EAAoCG,MACzD,SAACjD,GAAD,OAAYA,EAAOpkB,OAAS0lB,KAG7B7kB,EAASijB,GAAGnjB,QAAQwjB,iBAAiB+C,IACjCE,IACHvmB,EAASykB,kBAAeC,gBACxB1kB,EAASse,GAAMxe,QAAQ4Q,iBAAiB6V,EAAa9e,eACrDzH,EACCuM,GAAMzM,QAAQsN,gBAAgB,CAC7Bb,MAAOga,EAAaha,MACpBtB,iBAAkBsb,EAAatb,qBAIlC+Z,MAGFre,MAAM,UACN6e,WAAS,GA7BV,yD,qBCtFSiB,GAAgB,SAAC,GAAiC,IAA/BzB,EAA8B,EAA9BA,YAAa3T,EAAiB,EAAjBA,MACtCrR,EAAWC,cAEX0E,EAAiDC,iBAAO,MAE9D,OACC,kBAAC,WAAD,KACC,kBAACuS,GAAA,EAAD,CACC9W,QAAS,WACPsE,EAAIyR,QAA6BwP,UAGnC,kBAAClf,GAAA,EAAD,CACCjG,QAAQ,YACRkG,MAAM,UACNkf,kBAAgB,EAChB5K,UAAW,kBAAC,KAAD,OAEV5J,IAGH,2BACC1M,IAAKA,EACLhC,MAAO,CAAEogB,QAAS,QAClBtf,SAAU,SAACN,GACV,IAAM2iB,EAAQ3iB,EAAMI,OAAOuiB,MACrBlmB,EAAMkmB,EAAQA,EAAM,GAAK,KAC3BlmB,GACHI,EAASskB,GAAQ1kB,IAElBolB,KAED5kB,KAAK,OACL2lB,OAAO,W,qBCjCEW,GAAyB,SAAC,GAAwC,IAAtCxhB,EAAqC,EAArCA,SAClClF,EAAWC,cACjB,OACC,kBAAC9C,EAAA,EAAD,CACCC,MAAO8C,GAAKxC,UAAUtB,yBACtBiB,WAAY6C,GAAKxC,UAAUX,kBAC3BO,eAAgB4C,GAAKxC,UAAUV,uBAE/B,kBAACmD,EAAA,EAAD,CACCC,KAAK,SACLC,QAAS,WACRL,EAAS2kB,GAAkBzf,MAG5B,kBAAC,KAAD,CAAoBrC,SAAS,aCf3B8jB,GAA8B,SAAC,GAAwC,IAAtCzhB,EAAqC,EAArCA,SACtC,OACC,kBAACxE,EAAA,EAAD,CAAMC,WAAS,EAACC,UAAU,OACzB,kBAACF,EAAA,EAAD,CAAMG,MAAI,GACT,kBAAC,GAAD,CAAwBqE,SAAUA,KAGnC,kBAACxE,EAAA,EAAD,CAAMG,MAAI,GACT,kBAACC,EAAA,EAAD,CAASC,YAAY,cAGtB,kBAACL,EAAA,EAAD,CAAMG,MAAI,GACT,kBAAC,GAAD,CAAsBqE,SAAUA,OAMvB0hB,GAAqB,SAAC,GAAwC,IAAtC1hB,EAAqC,EAArCA,SACpC,OACC,kBAACxE,EAAA,EAAD,CAAMC,WAAS,EAACC,UAAU,MAAMuD,QAAQ,gBAAgBD,WAAW,SAAS6Q,QAAS,GACpF,kBAACrU,EAAA,EAAD,CAAMG,MAAI,GAAEqE,EAAS+B,QAAQ,OAAQ,KAErC,kBAACvG,EAAA,EAAD,CAAMG,MAAI,GACT,kBAACL,EAAA,EAAD,CAAMC,QAAQ,YACb,kBAAC,GAAD,CAA6ByE,SAAUA,QCftC2hB,GAA2B,SAAC,GAAwC,IAAtC3hB,EAAqC,EAArCA,SACnC,OACC,kBAACxE,EAAA,EAAD,CAAMC,WAAS,EAACC,UAAU,MAAMuD,QAAQ,gBAAgBD,WAAW,SAAS6Q,QAAS,GACpF,kBAACrU,EAAA,EAAD,CAAMG,MAAI,GAAEqE,EAAS+B,QAAQ,OAAQ,KAErC,kBAACvG,EAAA,EAAD,CAAMG,MAAI,GACT,kBAACL,EAAA,EAAD,CAAMC,QAAQ,YACb,kBAAC,GAAD,CAAsByE,SAAUA,QAOxB4hB,GAAU,WACtB,IAAMjC,EAAiB3iB,YAAY6gB,GAAQ7U,UAAU9M,YAC/C2lB,EAAY7kB,YAAY+gB,GAAG/U,UAAU8U,kBAAkB/a,QAAO,SAAC+e,GAAD,OAASA,IAAQnC,KAFzD,EAIIoC,IAAM9kB,SAA6B,MAJvC,oBAIrB+kB,EAJqB,KAIXC,EAJW,KAUtBnC,EAAc,WACnBmC,EAAY,OAGPnnB,EAAWC,cAEXyZ,EAAY3b,KAElB,OACC,6BACC,kBAACoC,EAAA,EAAD,CAAYC,KAAK,SAASC,QAdR,SAAC8C,GACpBgkB,EAAYhkB,EAAMikB,iBAchB,kBAAC,KAAD,OAED,kBAACrQ,GAAA,EAAD,CACC7O,GAAG,cACHgf,SAAUA,EACVlQ,aAAW,EACXjR,KAAMshB,QAAQH,GACd3gB,QAASye,EACTsC,cAAe,CAAE3kB,MAAO,CAAE4kB,YAAa,MAAOC,aAAc,SAE3D3C,GAAkB,CAClB,kBAAC7gB,GAAA,EAAD,CAAYZ,IAAKsW,IAAa+N,UAAW,OAAQhnB,QAAQ,MACvDP,GAAKxC,UAAUnB,oBAEjB,kBAAC,GAAD,CAA0B6G,IAAKsW,IAAaxU,SAAU2f,IACtD,kBAAC/jB,EAAA,EAAD,CAASsC,IAAKsW,IAAa/W,MAAO,CAAEmc,UAAW,UAE/CiI,EAAU5e,OAAS,GAAK,CACxB,kBAACnE,GAAA,EAAD,CAAYZ,IAAKsW,IAAa+N,UAAW,OAAQhnB,QAAQ,MACvDP,GAAKxC,UAAUlB,kBAEjB,kBAACwH,GAAA,EAAD,CAAYZ,IAAKsW,IAAa+N,UAAW,QACxC,wBAAI9kB,MAAO,CAAE+kB,cAAe,WAC1BX,EAAUhf,KAAI,SAAC7C,GAAD,OACdA,EACC,wBAAI9B,IAAKsW,KACR,kBAAC,GAAD,CAAoBxU,SAAUA,EAAU9B,IAAKsW,OAE3C,UAIP,kBAAC5Y,EAAA,EAAD,CAASsC,IAAKsW,IAAa/W,MAAO,CAAEmc,UAAW,UAEhD,kBAAC,GAAD,CAAekG,YAAaA,EAAa3T,MAAO,kBAChD,kBAACvQ,EAAA,EAAD,MACA,kBAACqW,GAAA,EAAD,CACC9W,QAAS,WACRL,EAAS2jB,MACTqB,MAGD,kBAACte,GAAA,EAAD,CAAQjG,QAAQ,YAAYkG,MAAM,UAAUkf,kBAAgB,EAAC5K,UAAW,kBAAC,KAAD,OACtE/a,GAAKxC,UAAUhB,uBAGlB,kBAACoE,EAAA,EAAD,MACA,kBAAC,GAAD,CAAekkB,YAAaA,EAAa3T,MAAOnR,GAAKxC,UAAUf,wB,qBCrEtDgrB,GAAsB,WAClC,IAAM3nB,EAAWC,cAEX2nB,EAAgB1lB,YAAYoc,GAAMpQ,UAAUyB,uBAHV,EAKdxN,mBAASylB,GALK,oBAKjCxpB,EALiC,KAK1BoE,EAL0B,OAOFL,mBAAS,SAPP,oBAOjC0lB,EAPiC,KAclCC,GAdkC,KAcZ,WAC3B9nB,EAASse,GAAMxe,QAAQ8P,mBAAmB,OASrCmY,EAAyB,WAC9B/nB,EAAS+iB,GAAQjjB,QAAQlB,eAAe,MAInC6E,EAA2B,UAAhBokB,EApBK,SAAC7a,GAEL,KAAbA,GAAiBhN,EAASse,GAAMxe,QAAQ8P,mBAAmB,KAC/DpN,EAASwK,IAOe,SAACA,GAER,KAAbA,GAAiBhN,EAAS+iB,GAAQjjB,QAAQlB,eAAe,KAC7D4D,EAASwK,IAQJgb,EAAiC,UAAhBH,EAA0BC,EAAsBC,EACjEE,EAAkC,UAAhBJ,EAdK,kBAAM7nB,EAASse,GAAMxe,QAAQ8P,mBAAmBxR,KAU7C,kBAAM4B,EAAS+iB,GAAQjjB,QAAQlB,eAAeR,KAiB9E,OACC,kBAACsC,EAAA,EAAD,CAAMC,WAAS,EAACC,UAAU,MAAMsD,WAAW,SAAS6Q,QAAS,GAoB5D,kBAACrU,EAAA,EAAD,CAAMG,MAAI,GACT,kBAAC,KAAD,CACCwB,MAAOjE,EACP8pB,YAA6B,UAAhBL,EAA0B,eAAiB,kBACxDpkB,SAAUA,EACVukB,eAAgBA,EAChBC,gBAAiBA,EACjBE,gBAAgB,O,0CC3FfC,GAAa,WAClB,IAAMpoB,EAAWC,cACXooB,EAAenmB,YAAYqK,GAAM2B,UAAUpC,SAGjD,OACC,kBAAC3O,EAAA,EAAD,CACCC,MAAO8C,GAAKxC,UAAUrC,YACtBgC,WAAY6C,GAAKxC,UAAUX,kBAC3BO,eAAgB4C,GAAKxC,UAAUV,uBAE/B,8BACC,kBAACmD,EAAA,EAAD,CACCC,KAAK,SACLC,QAAS,WACRL,EAASykB,kBAAe6D,SAEzBC,UAAWF,GAEX,kBAAC,KAAD,UAMCG,GAAa,WAClB,IAAMxoB,EAAWC,cACXwoB,EAAiBvmB,YAAYqK,GAAM2B,UAAUjC,WACnD,OACC,kBAAC9O,EAAA,EAAD,CACCC,MAAO8C,GAAKxC,UAAUpC,YACtB+B,WAAY6C,GAAKxC,UAAUX,kBAC3BO,eAAgB4C,GAAKxC,UAAUV,uBAE/B,8BACC,kBAACmD,EAAA,EAAD,CACCC,KAAK,SACLC,QAAS,WACRL,EAASykB,kBAAeiE,SAEzBH,UAAWE,GAEX,kBAAC,KAAD,UAOQE,GAAe,WAC3B,OACC,kBAACnoB,EAAA,EAAD,CAAMC,QAAQ,YACb,kBAACC,EAAA,EAAD,CAAMC,WAAS,EAACC,UAAU,OACzB,kBAACF,EAAA,EAAD,CAAMG,MAAI,GACT,kBAAC,GAAD,OAED,kBAACH,EAAA,EAAD,CAAMG,MAAI,GACT,kBAACC,EAAA,EAAD,CAASC,YAAY,cAEtB,kBAACL,EAAA,EAAD,CAAMG,MAAI,GACT,kBAAC,GAAD,U,qBC/DQ+nB,GAAiB,WAAO,IAAD,EACH3B,IAAM9kB,SAA6B,MADhC,oBAC5B+kB,EAD4B,KAClBC,EADkB,KAWnC,OACC,6BACC,kBAAChnB,EAAA,EAAD,CAAYC,KAAK,SAASC,QAVR,SAAC8C,GACpBgkB,EAAYhkB,EAAMikB,iBAUhB,kBAAC,KAAD,OAED,kBAACrQ,GAAA,EAAD,CACCmQ,SAAUA,EACVlQ,aAAW,EACXjR,KAAMshB,QAAQH,GACd3gB,QAbiB,WACnB4gB,EAAY,OAaVG,cAAe,CAAE3kB,MAAO,CAAE4kB,YAAa,MAAOC,aAAc,SAE5D,kBAACxjB,GAAA,EAAD,CAAYvD,QAAQ,MAApB,SACA,kBAACC,EAAA,EAAD,CAAMC,WAAS,EAACC,UAAU,MAAMuD,QAAQ,gBAAgB4Q,QAAS,GAChE,kBAACrU,EAAA,EAAD,CAAMG,MAAI,GACT,kBAACL,EAAA,EAAD,CAAMC,QAAQ,WAAWkC,MAAO,CAAE4kB,YAAa,MAAOC,aAAc,QACnE,kBAAClJ,GAAM7gB,WAAWoT,sBAAlB,QAIF,kBAACnQ,EAAA,EAAD,CAAMG,MAAI,GACT,kBAACL,EAAA,EAAD,CAAMC,QAAQ,WAAWkC,MAAO,CAAEC,QAAS,QAC1C,kBAAClC,EAAA,EAAD,CAAMC,WAAS,EAACC,UAAU,SAASmU,QAAS,GAC3C,kBAACrU,EAAA,EAAD,CAAMG,MAAI,GACT,kBAACyd,GAAM7gB,WAAWsd,kBAAlB,OAED,kBAACra,EAAA,EAAD,CAAMG,MAAI,GACT,kBAACkiB,GAAQtlB,WAAWmlB,qBAApB,cClCIiG,GAAa,WACzB,IAAMC,EAAe5mB,YAAY6gB,GAAQ7U,UAAU9M,YAC7C2nB,EAAS7mB,YAAY6gB,GAAQ7U,UAAUpM,cACvC6C,EAAMC,iBAA8B,MAEpC5E,EAAWC,cASjB,OAPAwF,2BAAgB,WACf,GAAId,EAAIyR,QAAS,CAChB,IAAM4S,EAAgBrkB,EAAIyR,QAAQ6S,wBAAwBC,OACtDF,IAAkBD,GAAQ/oB,EAAS+iB,GAAQjjB,QAAQjB,UAAUmqB,OAEhE,CAACrkB,EAAK3E,EAAU+oB,IAGlB,kBAAChG,GAAQtlB,WAAWiH,oBAApB,KACC,kBAACykB,GAAA,EAAD,CAAQxkB,IAAKA,EAAKykB,SAAS,UAC1B,kBAACC,GAAA,EAAD,CAAS5oB,QAAQ,UAAU6oB,gBAAc,GACxC,kBAAC5oB,EAAA,EAAD,CAAMC,WAAS,EAACC,UAAU,MAAMsD,WAAW,SAASC,QAAQ,iBAC3D,kBAACzD,EAAA,EAAD,CAAMG,MAAI,EAAC0hB,GAAI,GACd,kBAAC7hB,EAAA,EAAD,CAAMC,WAAS,EAACC,UAAU,MAAMsD,WAAW,SAAS6Q,QAAS,EAAGpS,MAAO,CAAE4kB,YAAa,QACrF,kBAAC7mB,EAAA,EAAD,CAAMG,MAAI,EAAC8B,MAAO,CAAEkS,SAAU,QAC7B,kBAACkO,GAAQtlB,WAAWwG,YAApB,OAGD,kBAACvD,EAAA,EAAD,CAAMG,MAAI,GACT,kBAACkiB,GAAQtlB,WAAW8C,eAApB,OAGD,kBAACG,EAAA,EAAD,CAAMG,MAAI,GACT,kBAAC,GAAD,OAGD,kBAACH,EAAA,EAAD,CAAMG,MAAI,GACT,kBAACkiB,GAAQtlB,WAAWglB,SAApB,SAKH,kBAAC/hB,EAAA,EAAD,CAAMG,MAAI,EAAC0hB,GAAI,GACd,kBAAC7hB,EAAA,EAAD,CAAMC,WAAS,EAACwD,QAAQ,UACvB,kBAACzD,EAAA,EAAD,CAAMG,MAAI,EAAC8B,MAAO,CAAEmS,UAAW,SAC9B,kBAAC9Q,GAAA,EAAD,CAAYvD,QAAQ,aAApB,OAAiCqoB,QAAjC,IAAiCA,OAAjC,EAAiCA,EAAc7hB,QAAQ,OAAQ,QAKlE,kBAACvG,EAAA,EAAD,CAAMG,MAAI,EAAC0hB,GAAI,GACd,kBAAC7hB,EAAA,EAAD,CAAMC,WAAS,EAACC,UAAU,MAAMuD,QAAQ,WAAWD,WAAW,UAC7D,kBAACxD,EAAA,EAAD,CAAMG,MAAI,GACT,kBAAC,GAAD,OAED,kBAACH,EAAA,EAAD,CAAMG,MAAI,GACT,kBAAC,GAAD,OAED,kBAACH,EAAA,EAAD,CAAMG,MAAI,GACT,kBAAC,GAAD,cC9DM,IAAEf,UAASrC,aAAYyQ,aCE/B,SAASqb,KACf,OACC,6BACC,kBAACxG,GAAQtlB,WAAWqH,oBAApB,MACA,kBAACpE,EAAA,EAAD,CACCC,WAAS,EACTwD,QAAQ,SACRvD,UAAU,SACVsD,WAAW,UACXvB,MAAO,CAAE6C,OAAQ,OAAQpB,MAAO,SAEhC,kBAAC1D,EAAA,EAAD,CAAMG,MAAI,GACT,kBAACuQ,GAAQ3T,WAAWorB,WAApB,OAGD,kBAACnoB,EAAA,EAAD,CAAMG,MAAI,GACT,kBAACkiB,GAAQtlB,WAAW+kB,QAApB,QAGF,kBAACnQ,GAAU5U,WAAWsY,YAAtB,MACA,kBAAC1D,GAAU5U,WAAWmX,kBAAtB,O,uDC+BG4U,GAAmBC,cACxB,SAACC,GACA,OAlCsC,SAACA,GAKxC,OAAO,6BAAKA,GAAZ,IAA0BC,YAAa,KAAMC,aAAc,KAAMhqB,IAJvD,OAiCFiqB,CAAgCH,MAExC,SAACI,GACA,OA3BiC,SAACA,GAanC,OAAO,6BACHA,GADJ,IAEClqB,SAAKC,EACLlB,WAAY,KACZD,mBAAoB,KACpBE,eAAgB,KASTmrB,CAA2BD,KAEnC,CAAEE,UAAW,CAACjH,GAAQ5jB,QAGjB8qB,GAAsB,SAAC7rB,GAC5B,OAAO,6BAAKA,GAAZ,IAAmBwR,mBAAoB,MAGlCsa,GAAiBT,cACtB,SAACC,GACA,OAAOA,KAER,SAACI,GACA,MAAO,CACN3d,QAAS8d,GAAoBH,EAAc3d,SAC3CD,OAAQ4d,EAAc5d,OAAOnE,IAAIkiB,IACjCje,KAAM8d,EAAc9d,KAAKjE,IAAIkiB,OAG/B,CAAED,UAAW,CAAC1L,GAAM5gB,UAAUmJ,QAGlBsjB,GAAgB,CAC5B/mB,IAAK,OACLgnB,aACAC,WAAY,CAACb,GAAkBU,K,UCvE1BI,GAAsB,CAC3B/d,GAAMzM,QAAQ+M,SAASzM,KACvBmM,GAAMzM,QAAQqN,WAAW/M,KACzBmM,GAAMzM,QAAQgN,YAAY1M,KAC1BmM,GAAMzM,QAAQiN,iBAAiB3M,MAG1BmqB,GAAcC,4BAAe,sBACjCvH,GAAG9jB,KAAO8jB,GAAGjV,SADoB,gBAEjCqE,GAAUlT,KAAOkT,GAAUrE,SAFM,gBAGjCsQ,GAAM5gB,UAAUmJ,KAAO4jB,KAASnM,GAAMtQ,QAAS,CAC/C/F,OAAQyiB,yBAAcJ,OAJW,gBAMjC/d,GAAMpN,KAAOsrB,KAASle,GAAMyB,QAAS,CACrC/F,OAAQyiB,yBAAcJ,OAPW,gBASjCvH,GAAQ5jB,KAAO4jB,GAAQ/U,SATU,KAY7B2c,GAAmBC,aAAeT,GAAeI,IAGjDM,GADmBC,+BAAoB,GAC5BC,CAAiBC,2BAAgBC,OAErCC,GAAQC,uBAAYR,GAAkBE,IAEtCO,GAAYC,aAAaH,I,UCpCtCxH,EAAQ,KAER4H,IAASC,OACR,kBAAC,IAAMC,WAAP,KACC,kBAAC,IAAD,CAAUN,MAAOA,IAChB,kBAAC,KAAD,CAAanK,QAAS,KAAMqK,UAAWA,IACtC,kBAAC7B,GAAD,SAIHrkB,SAASumB,eAAe,W","file":"static/js/main.52ae1410.chunk.js","sourcesContent":["import { SingleOrigin } from \"../cards/model/origin\";\n\nexport type DisplayStatus = \"SHOW\" | \"HIDE\";\n\nexport enum View {\n\tRiverMaterial,\n\tRiverExplorer,\n\tCardExplorer,\n}\n\nexport type DisplayData = {\n\tpdf?: File;\n\tdisplayStatus: DisplayStatus;\n\tcurrentPage: number;\n\tscrollToPage: number | null;\n\ttotalPages: number;\n\tspanOrigin: SingleOrigin | null;\n\twindowMeasurements: { width: number; height: number } | null;\n\ttopOffset: number;\n\tdocumentSearch: string | \"\";\n\tcurrentView: View;\n};\n\nexport type PageMove = \"PREVIOUS\" | \"NEXT\";\n\nexport const pageCorrections = {\n\tADD: (newPage: number, totalPages: number) => (newPage === totalPages + 1 ? 1 : newPage),\n\tREMOVE: (newPage: number, totalPages: number) => (newPage === 0 ? totalPages : newPage),\n};\n","/// Tooltip-Text\n\nexport const switchToActiveRiverTooltip = \"Switch to the Active-River view\";\nexport const switchToSummaryRiverTooltip = \"Switch to the Summary-River view\";\n\nexport const undoTooltip = \"Undo last action\";\nexport const redoTooltip = \"Redo last action\";\n\nexport const nextPageTooltip = \"Next page\";\nexport const previousPageTooltip = \"Previous page\";\n\nexport const deleteCardTooltip = \"Delete this card\";\nexport const jumpToOriginTooltip = \"Jump to the origin of the card content\";\n\nexport const ChoiceCardAsAppendGoal = \"Mark this card field as the goal of the next selection\";\nexport const AppendToCardTooltip = \"Add the current selection to this card field\";\nexport const CardIsAppendGoalTooltip = \"The next selection will be added to this card field (click to unselect)\";\n\nexport const ChoiceCardAsReplaceGoal = \"Mark this card field to be replaced by the next selection\";\nexport const ReplaceCardTooltip = \"Replace this card field with the current selection\";\nexport const CardIsReplaceGoalTooltip = \"The next selection will replace this card field (click to unselect)\";\n\nexport const newQACardTooltip = \"Create new QA-card\";\nexport const newNoteCardTooltip = \"Create new Note-card\";\n\nexport const deleteDocumentTooltip = \"Delete this document and all its corresponding cards\";\nexport const loadSavedDocumentTooltip = \"Load the card data of this document\";\n\n/// Text\n\nexport const noMaterialText = \"No PDF file specified.\";\nexport const loadingMaterialText = \"Loading PDF…\";\n\nexport const activeDocumentText = \"Active Document:\";\nexport const existingDataText = \"Inactive documents with existing data:\";\nexport const loadMaterialText = \"Load document\";\nexport const downloadDatasetsText = \"Download document datasets\";\nexport const uploadDatasetsText = \"Upload document datasets\";\n\nexport const noteText = \"Note\";\nexport const questionText = \"Question\";\nexport const answerText = \"Answer\";\n\n/// Delay\n\nexport const defaultEnterDelay = 500;\nexport const defaultEnterNextDelay = 1000;\n","import React, { ReactElement } from \"react\";\nimport { Tooltip } from \"@material-ui/core\";\nimport { newNoteCardTooltip, defaultEnterDelay, defaultEnterNextDelay } from \"../constants\";\n\nexport const NewNoteCardTooltip = ({ children }: { children: ReactElement }) => {\n\treturn (\n\t\t<Tooltip title={newNoteCardTooltip} enterDelay={defaultEnterDelay} enterNextDelay={defaultEnterNextDelay}>\n\t\t\t{children}\n\t\t</Tooltip>\n\t);\n};\n","import React, { ReactElement } from \"react\";\nimport { Tooltip } from \"@material-ui/core\";\nimport { defaultEnterDelay, defaultEnterNextDelay, newQACardTooltip } from \"../constants\";\n\nexport const AddQAButtonTooltip = ({ children }: { children: ReactElement }) => {\n\treturn (\n\t\t<Tooltip title={newQACardTooltip} enterDelay={defaultEnterDelay} enterNextDelay={defaultEnterNextDelay}>\n\t\t\t{children}\n\t\t</Tooltip>\n\t);\n};\n","import React, { ReactElement } from \"react\";\nimport { Tooltip } from \"@material-ui/core\";\nimport { defaultEnterDelay, defaultEnterNextDelay, deleteCardTooltip } from \"../constants\";\n\nexport const DeleteCardButtonTooltip = ({ children }: { children: ReactElement }) => {\n\treturn (\n\t\t<Tooltip title={deleteCardTooltip} enterDelay={defaultEnterDelay} enterNextDelay={defaultEnterNextDelay}>\n\t\t\t{children}\n\t\t</Tooltip>\n\t);\n};\n","import * as components from \"./components\";\nimport * as constants from \"./constants\";\n\nexport default { components, constants };\n","import { CaseReducer, PayloadAction } from \"@reduxjs/toolkit\";\nimport { KeyboardEvent } from \"react\";\n\nexport const incrementer = () => {\n\tlet counter = 0;\n\treturn () => {\n\t\tconst curCounter = counter;\n\t\tcounter++;\n\t\treturn curCounter;\n\t};\n};\n\nexport type KeyActionMap = { [key: string]: any };\n\ntype KeyEventDispatcher = (event: KeyboardEvent<Element>, dispatch: any, state?: any) => void;\n\nexport const keyEventDispatcherCreator = (keyMap: KeyActionMap): KeyEventDispatcher => (\n\tevent: KeyboardEvent,\n\tdispatch: any\n) => {\n\tconst action = keyMap[event.key];\n\tif (action) {\n\t\tevent.preventDefault();\n\t\tdispatch(action);\n\t}\n};\n\nexport type ClayMemoryAction = { type: string };\nexport type ClayMemoryPayloadAction = { type: string; payload: any };\n\nexport type Filter = (element: any) => boolean;\nexport const combineFilterArr = (filters: Filter[]) => (x: any) => filters.reduce((b, f) => b || f(x), false);\n\nexport type AnyPayloadCaseReducer = CaseReducer<any, PayloadAction<any>>;\nexport const simpleReducer = (field: string): AnyPayloadCaseReducer => (state: any, { payload }: any) => {\n\treturn { ...state, [field]: payload };\n};\n\nexport const simpleReducerMap = (fields: string[]) => {\n\tconst map: { [key: string]: AnyPayloadCaseReducer } = {};\n\tfor (let field of fields) {\n\t\tmap[field] = simpleReducer(field);\n\t}\n\treturn map;\n};\n","import { DisplayData, DisplayStatus, pageCorrections, View } from \"./model\";\nimport { simpleReducer } from \"../../shared/utils\";\nimport { CaseReducer, createSlice, PayloadAction } from \"@reduxjs/toolkit\";\nimport { NAME } from \"./constants\";\nimport { SingleOrigin } from \"../cards/model/origin\";\n\nconst initialState: DisplayData = {\n\tdisplayStatus: \"SHOW\",\n\ttotalPages: 1000,\n\tcurrentPage: 1,\n\tscrollToPage: null,\n\twindowMeasurements: null,\n\tspanOrigin: null,\n\tdocumentSearch: \"\",\n\ttopOffset: 0,\n\tcurrentView: View.RiverMaterial,\n};\n\nconst pdfUpload: CaseReducer<DisplayData, PayloadAction<File>> = simpleReducer(\"pdf\");\nconst totalPages: CaseReducer<DisplayData, PayloadAction<number>> = simpleReducer(\"totalPages\");\nconst displayStatus: CaseReducer<DisplayData, PayloadAction<DisplayStatus>> = simpleReducer(\"displayStatus\");\nconst spanOrigin: CaseReducer<DisplayData, PayloadAction<SingleOrigin | null>> = simpleReducer(\"spanOrigin\");\nconst documentSearch: CaseReducer<DisplayData, PayloadAction<string>> = simpleReducer(\"documentSearch\");\nconst topOffset: CaseReducer<DisplayData, PayloadAction<number>> = simpleReducer(\"topOffset\");\nconst windowMeasurements: CaseReducer<\n\tDisplayData,\n\tPayloadAction<{ width: number; height: number } | null>\n> = simpleReducer(\"windowMeasurements\");\nconst currentView: CaseReducer<DisplayData, PayloadAction<View>> = simpleReducer(\"currentView\");\n\nconst pageUpdate: CaseReducer<DisplayData, PayloadAction<{ page: number; shouldScroll: boolean }>> = (\n\tstate,\n\t{ payload }\n) => {\n\treturn { ...state, currentPage: payload.page, scrollToPage: payload.shouldScroll ? payload.page : null };\n};\nconst nextPage: CaseReducer<DisplayData> = (state) => {\n\tconst page = pageCorrections[\"ADD\"](state.currentPage + 1, state.totalPages);\n\treturn { ...state, currentPage: page, scrollToPage: page };\n};\nconst previousPage: CaseReducer<DisplayData> = (state) => {\n\tconst page = pageCorrections[\"REMOVE\"](state.currentPage - 1, state.totalPages);\n\treturn { ...state, currentPage: page, scrollToPage: page };\n};\n\ntype ExistingDocumentPayload = Pick<DisplayData, \"currentPage\" | \"totalPages\">;\nconst existingDocumentPayload: CaseReducer<DisplayData, PayloadAction<ExistingDocumentPayload>> = (_, { payload }) => {\n\treturn {\n\t\t...initialState,\n\t\tpdf: undefined,\n\t\t...(payload as ExistingDocumentPayload),\n\t};\n};\n\nconst displaySlice = createSlice({\n\tname: NAME,\n\tinitialState,\n\treducers: {\n\t\tpdfUpload,\n\t\ttotalPages,\n\t\tdisplayStatus,\n\t\tspanOrigin,\n\t\tdocumentSearch,\n\t\ttopOffset,\n\t\twindowMeasurements,\n\t\tcurrentView,\n\t\tpageUpdate,\n\t\tnextPage,\n\t\tpreviousPage,\n\t\texistingDocumentPayload,\n\t},\n});\n\nexport const { actions } = displaySlice;\n\nexport default displaySlice;\n","export const NAME = \"displayData\";\n","import React from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { IconButton, Card, Grid, Divider, Tooltip } from \"@material-ui/core\";\nimport ArrowForwardIosIcon from \"@material-ui/icons/ArrowForwardIos\";\nimport ArrowBackIosIcon from \"@material-ui/icons/ArrowBackIos\";\nimport text from \"../../text\";\nimport { actions } from \"../slice\";\n\nconst PreviousButton = () => {\n\tconst dispatch = useDispatch();\n\n\treturn (\n\t\t<Tooltip\n\t\t\ttitle={text.constants.previousPageTooltip}\n\t\t\tenterDelay={text.constants.defaultEnterDelay}\n\t\t\tenterNextDelay={text.constants.defaultEnterNextDelay}\n\t\t>\n\t\t\t<IconButton\n\t\t\t\ttype=\"button\"\n\t\t\t\tonClick={() => {\n\t\t\t\t\tdispatch(actions.previousPage());\n\t\t\t\t}}\n\t\t\t>\n\t\t\t\t<ArrowBackIosIcon></ArrowBackIosIcon>\n\t\t\t</IconButton>\n\t\t</Tooltip>\n\t);\n};\n\nconst NextButton = () => {\n\tconst dispatch = useDispatch();\n\treturn (\n\t\t<Tooltip\n\t\t\ttitle={text.constants.nextPageTooltip}\n\t\t\tenterDelay={text.constants.defaultEnterDelay}\n\t\t\tenterNextDelay={text.constants.defaultEnterNextDelay}\n\t\t>\n\t\t\t<IconButton\n\t\t\t\ttype=\"button\"\n\t\t\t\tonClick={() => {\n\t\t\t\t\tdispatch(actions.nextPage());\n\t\t\t\t}}\n\t\t\t>\n\t\t\t\t<ArrowForwardIosIcon></ArrowForwardIosIcon>\n\t\t\t</IconButton>\n\t\t</Tooltip>\n\t);\n};\n\nexport const PageNavigation = () => {\n\treturn (\n\t\t<Card variant=\"outlined\">\n\t\t\t<Grid container direction=\"row\">\n\t\t\t\t<Grid item>\n\t\t\t\t\t<PreviousButton></PreviousButton>\n\t\t\t\t</Grid>\n\t\t\t\t<Grid item>\n\t\t\t\t\t<Divider orientation=\"vertical\"></Divider>\n\t\t\t\t</Grid>\n\t\t\t\t<Grid item>\n\t\t\t\t\t<NextButton></NextButton>\n\t\t\t\t</Grid>\n\t\t\t</Grid>\n\t\t</Card>\n\t);\n};\n","import { createSelector } from \"reselect\";\nimport { DisplayData } from \"./model\";\nimport { NAME } from \"./constants\";\n\nexport const getAll = (state: any): DisplayData => state[NAME];\n\nexport const getPDF = createSelector(getAll, (state: DisplayData) => state.pdf);\n\nexport const getWindowMeasurements = createSelector(getAll, (state) => state.windowMeasurements);\n\nexport const getPDFName = createSelector(getPDF, (pdf) => (pdf ? pdf.name : undefined));\n\nexport const getTotalPages = createSelector(getAll, (state: DisplayData) => state.totalPages);\n\nexport const getCurrentPage = createSelector(getAll, (state: DisplayData) => state.currentPage);\n\nexport const getScrollToPage = createSelector(getAll, (state) => state.scrollToPage);\n\nexport const getPageControlData = createSelector(getTotalPages, getCurrentPage, (totalPages, currentPage) => {\n\treturn { currentPage, totalPages };\n});\n\nexport const getDisplayStatus = createSelector(getAll, (state: DisplayData) => state.displayStatus);\n\nexport const displayStatusIsShow = createSelector(getDisplayStatus, (status) => status === \"SHOW\");\n\nexport const getSpanOrigin = createSelector(getAll, (state) => state.spanOrigin);\n\nexport const getDocumentSearch = createSelector(getAll, (state) => state.documentSearch);\n\nexport const getTopOffset = createSelector(getAll, (state) => state.topOffset);\n\nexport const getCurrentView = createSelector(getAll, (state) => state.currentView);\n","import React, { useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Typography, TextField, Card, Grid } from \"@material-ui/core\";\nimport { getCurrentPage, getTotalPages } from \"../../selectors\";\nimport { actions } from \"../../slice\";\n\nconst nonDigitRegEx = /(\\D)/;\n\nexport const validatePageChoice = (possiblePage: string, totalPages: number) => {\n\tif (possiblePage === \"\" || possiblePage.trim().match(nonDigitRegEx) !== null) return false;\n\n\tconst asInt = parseInt(possiblePage);\n\tif (asInt < 1 || totalPages < asInt) return false;\n\n\treturn true;\n};\n\nconst PageNumberTextField = ({ totalPages }: { totalPages: number }) => {\n\tconst dispatch = useDispatch();\n\tconst currentPage = useSelector(getCurrentPage);\n\n\tconst [state, setState] = useState({\n\t\terror: false,\n\t\tvalue: currentPage?.toString(),\n\t\tuserInput: currentPage?.toString(),\n\t});\n\n\t// with this we can trigger a re-render onChange,\n\t// while making sure that if a new currentPage arrives, we reset the component\n\tif (state.value !== currentPage.toString()) {\n\t\tsetState({ error: false, value: currentPage.toString(), userInput: currentPage.toString() });\n\t}\n\n\treturn (\n\t\t<TextField\n\t\t\tinputProps={{\n\t\t\t\tstyle: {\n\t\t\t\t\tpadding: \"0px\",\n\t\t\t\t\t//h6 Typography style\n\t\t\t\t\tfontSize: \"1.25rem\",\n\t\t\t\t\tfontFamily: '\"Roboto\", \"Helvetica\", \"Arial\", sansSerif',\n\t\t\t\t\tfontWeight: 500,\n\t\t\t\t\tlineHeight: 1.6,\n\t\t\t\t\tletterSpacing: \"0.0075em\",\n\t\t\t\t},\n\t\t\t}}\n\t\t\ttype=\"text\"\n\t\t\tvariant=\"filled\"\n\t\t\tvalue={state.userInput}\n\t\t\tonKeyDown={(event) => {\n\t\t\t\tif (event.key === \"Enter\") {\n\t\t\t\t\tevent.preventDefault();\n\t\t\t\t\tconst submittedValue = (event.target as HTMLFormElement).value;\n\t\t\t\t\tif (!state.error) {\n\t\t\t\t\t\tdispatch(actions.pageUpdate({ page: parseInt(submittedValue), shouldScroll: true }));\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}}\n\t\t\tonChange={(event) => {\n\t\t\t\tconst submittedValue = (event.target as HTMLTextAreaElement).value;\n\t\t\t\tif (validatePageChoice(submittedValue, totalPages as number)) {\n\t\t\t\t\tsetState({ ...state, error: false, userInput: submittedValue });\n\t\t\t\t} else {\n\t\t\t\t\tsetState({ ...state, error: true, userInput: submittedValue });\n\t\t\t\t}\n\t\t\t}}\n\t\t\terror={state.error}\n\t\t/>\n\t);\n};\n\nconst TotalPagesIndicator = ({ totalPages }: { totalPages: number }) => (\n\t<Typography variant=\"h6\">of {totalPages}</Typography>\n);\n\nexport const PageChooser = () => {\n\tconst totalPages = useSelector(getTotalPages);\n\n\treturn (\n\t\t<Card variant=\"outlined\">\n\t\t\t<Grid item>\n\t\t\t\t<Grid container direction=\"row\" alignItems=\"center\" justify=\"space-between\">\n\t\t\t\t\t<Grid item style={{ width: \"37%\" }}>\n\t\t\t\t\t\t<PageNumberTextField totalPages={totalPages}></PageNumberTextField>\n\t\t\t\t\t</Grid>\n\n\t\t\t\t\t<Grid item style={{ width: \"61%\" }}>\n\t\t\t\t\t\t<TotalPagesIndicator totalPages={totalPages}></TotalPagesIndicator>\n\t\t\t\t\t</Grid>\n\t\t\t\t</Grid>\n\t\t\t</Grid>\n\t\t</Card>\n\t);\n};\n","import { ReactNode, KeyboardEvent, useRef, MutableRefObject } from \"react\";\nimport React from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { KeyActionMap, keyEventDispatcherCreator } from \"../../../../shared/utils\";\nimport { actions } from \"../../slice\";\n\n// note to self: prefer to expose components and not implementation details (actions etc.)\n\nconst pageControlKeyMap: KeyActionMap = {\n\tArrowLeft: actions.previousPage(),\n\tArrowRight: actions.nextPage(),\n};\nconst pageControlDispatcher = keyEventDispatcherCreator(pageControlKeyMap);\n\nexport const PageKeyboardControl = ({ children }: { children: ReactNode }) => {\n\tconst dispatch = useDispatch();\n\tconst ref: MutableRefObject<null | HTMLInputElement> = useRef(null);\n\n\treturn (\n\t\t<span\n\t\t\tref={ref}\n\t\t\tonKeyDown={(event: KeyboardEvent<HTMLSpanElement>) => {\n\t\t\t\tpageControlDispatcher(event, dispatch);\n\t\t\t}}\n\t\t\ttabIndex={0}\n\t\t>\n\t\t\t{children}\n\t\t</span>\n\t);\n};\n","import { useEffect, useLayoutEffect } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { debounce } from \"throttle-debounce\";\nimport { actions } from \"../../slice\";\n\nexport const HTMLElementMeasurer = () => {\n\tconst dispatch = useDispatch();\n\n\tconst measure = debounce(50, () => {\n\t\tconst htmlElement = document.documentElement;\n\t\tconst currentWidth = htmlElement.clientWidth;\n\t\tconst currentHeight = htmlElement.clientHeight;\n\t\tdispatch(actions.windowMeasurements({ width: currentWidth, height: currentHeight }));\n\t});\n\n\tuseLayoutEffect(() => {\n\t\t//first measurement\n\t\tmeasure();\n\t}, [measure]);\n\n\tuseEffect(() => {\n\t\twindow.addEventListener(\"resize\", measure);\n\t\treturn () => {\n\t\t\twindow.removeEventListener(\"resize\", measure);\n\t\t};\n\t});\n\n\treturn null;\n};\n","import { Button, Snackbar } from \"@material-ui/core\";\nimport React, { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { getSpanOrigin } from \"../selectors\";\nimport { actions } from \"../slice\";\n\n//TODO: think about that SelectionSnackbar and this both are dismissed via Esc\n\nexport const OriginMarkedSnackbar = () => {\n\tconst [open, setOpen] = useState(false);\n\tconst spanOrigin = useSelector(getSpanOrigin);\n\tconst dispatch = useDispatch();\n\n\tif (!!!spanOrigin && open) setOpen(false);\n\n\tif (!!spanOrigin && !open) setOpen(true);\n\n\tconst handleClose = (event: any, reason: string) => {\n\t\tif (reason === \"clickaway\") {\n\t\t\t// do not close on clickaway\n\t\t\tevent.preventDefault();\n\t\t} else {\n\t\t\tsetOpen(false);\n\t\t\tdispatch(actions.spanOrigin(null));\n\t\t}\n\t};\n\n\tconst handleDismiss = () => {\n\t\tsetOpen(false);\n\t\tdispatch(actions.spanOrigin(null));\n\t};\n\n\tconst escPress = (event: KeyboardEvent) => {\n\t\tif (open && (event.key === \"Escape\" || event.key === \"Esc\")) {\n\t\t\thandleDismiss();\n\t\t}\n\t};\n\n\tuseEffect(() => {\n\t\tdocument.addEventListener(\"keydown\", escPress);\n\t\treturn () => {\n\t\t\tdocument.removeEventListener(\"keydown\", escPress);\n\t\t};\n\t});\n\n\treturn (\n\t\t<Snackbar\n\t\t\tanchorOrigin={{\n\t\t\t\tvertical: \"bottom\",\n\t\t\t\thorizontal: \"left\",\n\t\t\t}}\n\t\t\topen={open}\n\t\t\tonClose={handleClose}\n\t\t\tmessage=\"Origin is marked\"\n\t\t\taction={\n\t\t\t\t<Button color=\"secondary\" size=\"small\" onClick={handleDismiss}>\n\t\t\t\t\tUNMARK\n\t\t\t\t</Button>\n\t\t\t}\n\t\t/>\n\t);\n};\n","export const NAME = \"cardRiverState\";\n","import { CardID } from \"../cards/model/config\";\nimport { SingleOrigin } from \"../cards/model/origin\";\n\nexport type RiverMakeUp = { riverID: string; cardIDs: CardID[] };\n\nexport type RiverMakeUps = { [riverID: string]: RiverMakeUp };\n\nexport type RiverShowState = \"SHOW\" | \"HIDE\";\n\nexport type RiverContentState = \"ALL\" | \"NOTES\" | \"QAS\" | \"NONE\";\n\nexport type ContentFilter = string;\n\nexport type CardRiverState = {\n\t// works by first setting it here via button\n\t// then we scroll to the page\n\t// then we set the origin in the display-store\n\t// then we scroll to origin\n\t// all happens in the display module\n\t// move this somehow to display?\n\t// problem is that we depend on the display components (list-ref)\n\t// for scrolling\n\triverOriginRequest: SingleOrigin | null;\n\triverMakeUps: RiverMakeUps;\n\triverActiveID: string;\n\t// show/hide river\n\triverShowState: RiverShowState;\n\t// filter content\n\triverContentState: RiverContentState;\n\triverContentFilter: ContentFilter | \"\";\n\tcount_DONT_USE: number;\n};\n\nexport const pageNumberToRiverMakeUpID = (page: number) => \"CardRiver \" + page;\n\nexport const riverMakeUpIDToPageNumber = (riverID: string) => parseInt(riverID.replace(\"CardRiver \", \"\"));\n\nexport const emptyCardRiver = (page: number): RiverMakeUp => {\n\treturn {\n\t\triverID: pageNumberToRiverMakeUpID(page),\n\t\tcardIDs: [],\n\t};\n};\n\nexport const updateStateWithMakeUps = (state: CardRiverState, ...makeUps: RiverMakeUp[]) => {\n\tconst updatedState = { ...state };\n\tmakeUps.forEach((makeUp) => {\n\t\tupdatedState.riverMakeUps[makeUp.riverID] = makeUp;\n\t});\n\treturn updatedState;\n};\n\nexport const removeCardFromRivers = (state: CardRiverState, cardID: CardID): CardRiverState => {\n\tconst riverMakeUps = Object.fromEntries(\n\t\tObject.entries(state.riverMakeUps)\n\t\t\t.map((entry) => [entry[0], { ...entry[1], cardIDs: entry[1].cardIDs.filter((id) => id !== cardID) }])\n\t\t\t.filter((entry) => (entry[1] as RiverMakeUp).cardIDs.length !== 0)\n\t);\n\treturn { ...state, riverMakeUps };\n};\n\n//TODO: make option to not show card instead of delete\n// make nice small option in river to hide / show hidden cards (default: hide)\n","export const NAME = \"cards\";\n","import { CardField, QACardField } from \"./content\";\n\n// for origin and content the same object structure is used,\n// so same permutation api should be used\n\ntype NoteObject = NonNullable<any>;\ntype QAObject = { [key in QACardField]: NonNullable<any> };\ntype CardObject = NoteObject | QAObject;\n\nconst FieldValueAccessorMap: { [field in CardField]: (cardObject: CardObject) => any } = {\n\tnote: (cardObject) => cardObject,\n\tq: (cardObject) => (cardObject as QAObject).q,\n\ta: (cardObject) => (cardObject as QAObject).a,\n};\nexport const toFieldValue = (field: CardField, cardObject: CardObject) => FieldValueAccessorMap[field](cardObject);\n\ntype Modify = (oldValue: any) => any;\nconst FieldValueModifierMap: { [key in CardField]: (cardObject: CardObject, modify: Modify) => any } = {\n\tnote: (cardObject, modify) => modify(cardObject),\n\tq: (cardObject, modify) => {\n\t\treturn { ...(cardObject as QAObject), q: modify((cardObject as QAObject).q) };\n\t},\n\ta: (cardObject, modify) => {\n\t\treturn { ...(cardObject as QAObject), a: modify((cardObject as QAObject).a) };\n\t},\n};\nconst modifyFieldValue = (field: CardField, cardObject: CardObject, modify: Modify) =>\n\tFieldValueModifierMap[field](cardObject, modify);\n\nexport type CreateModify = (inputValue: any) => Modify;\n\n// this replace is generic, I dont put append here, because that is object specific\nexport const createReplace: CreateModify = (inputValue: any) => (_: any) => inputValue;\n\nexport type CardObjectChangeSpec = {\n\tinputField: CardField;\n\tinputObject: CardObject;\n\tfieldToBeChanged: CardField;\n\tobjectToBeChanged: CardObject;\n\tcreateModify: CreateModify;\n};\nexport const changeCardObject = (spec: CardObjectChangeSpec) => {\n\tconst inputValue = toFieldValue(spec.inputField, spec.inputObject);\n\tconst modify = spec.createModify(inputValue);\n\treturn modifyFieldValue(spec.fieldToBeChanged, spec.objectToBeChanged, modify);\n};\n","import { CreateModify, changeCardObject, createReplace } from \"./permutation\";\nimport { NoteConfig, QAConfig, UpdateType } from \"./config\";\n\nexport type QACardField = \"q\" | \"a\";\nexport type CardField = \"note\" | QACardField;\n\nexport type StringCardContent = string;\nexport type NoteCardContent = StringCardContent;\nexport type QACardContent = {\n\t[field in QACardField]: StringCardContent;\n};\nexport type CardContent = NoteCardContent | QACardContent;\n\ntype EmptyContent = { q: \"\"; a: \"\" } | \"\";\nconst emptyQAContent = (): EmptyContent => {\n\treturn { q: \"\", a: \"\" };\n};\nconst EmptyContentMap: { [field in CardField]: () => EmptyContent } = {\n\tq: emptyQAContent,\n\ta: emptyQAContent,\n\tnote: () => \"\",\n};\nexport const emptyContent = (field: CardField) => {\n\treturn EmptyContentMap[field]();\n};\n\nexport const noteContentIsEmpty = (content: string) => content === \"\";\nexport const qaContentIsNotFull = (content: QACardContent) =>\n\t(content as QACardContent).q === \"\" || (content as QACardContent).a === \"\";\n\nconst createAppendStr: CreateModify = (inputValue: string) => (oldValue: string) =>\n\t(oldValue + \" \" + inputValue).trim();\nconst UpdateTypeCreateModifyMap: { [updateType in UpdateType]: CreateModify } = {\n\tAPPEND: createAppendStr,\n\tREPLACE: createReplace,\n};\nconst updateTypeToCreateModify = (updateType: UpdateType) => UpdateTypeCreateModifyMap[updateType];\n\n// noteObjects are a single value like the selectedString, so we use them as a field for convenience\nconst inputField: CardField = \"note\";\n\nexport const strToCardContent = (\n\tcontentStr: string,\n\toutputField: CardField,\n\tupdateType: UpdateType,\n\texistingContent: CardContent\n): CardContent => {\n\tconst changeSpec = {\n\t\tinputObject: contentStr,\n\t\tinputField,\n\t\tfieldToBeChanged: outputField,\n\t\tobjectToBeChanged: existingContent,\n\t\tcreateModify: updateTypeToCreateModify(updateType),\n\t};\n\treturn changeCardObject(changeSpec);\n};\n\nexport const strToNewCardContent = (contentStr: string, outputField: CardField) => {\n\t// new is always empty and we replace the input in the empty shell\n\tconst empty = emptyContent(outputField);\n\treturn strToCardContent(contentStr, outputField, \"REPLACE\", empty);\n};\n\nexport const noteContentContainsStringOrEmpty = (noteConfig: NoteConfig, str: string) =>\n\tnoteConfig.content === \"\" || noteConfig.content.includes(str);\n\nexport const qaContentContainsStringOrEmpty = (qaConfig: QAConfig, str: string) =>\n\tqaConfig.content.a === \"\" ||\n\tqaConfig.content.q === \"\" ||\n\tqaConfig.content.a.includes(str) ||\n\tqaConfig.content.q.includes(str);\n","import { NoteOrigin, QAOrigin } from \"./origin\";\nimport {\n\tNoteCardContent,\n\tQACardContent,\n\tnoteContentIsEmpty,\n\tqaContentIsNotFull,\n\tstrToCardContent,\n\tCardField,\n} from \"./content\";\n\nexport type CardID = string;\nexport const cardIDToNumber = (cardID: CardID) => parseInt(cardID);\nexport const nextCardID = (lastCardIDNumber: number) => (lastCardIDNumber + 1).toString();\n\nexport type CardType = \"Note\" | \"Q-A\";\nexport type NoteConfig = { cardID: CardID; type: CardType; content: NoteCardContent; origin?: NoteOrigin };\nexport type QAConfig = { cardID: CardID; type: CardType; content: QACardContent; origin?: QAOrigin };\nexport type CardConfig = NoteConfig | QAConfig;\n\nconst CardIsFullMap: { [card in CardType]: (config: CardConfig) => boolean } = {\n\tNote: (config) => noteContentIsEmpty(config.content as NoteCardContent),\n\t\"Q-A\": (config) => qaContentIsNotFull(config.content as QACardContent),\n};\nexport const cardIsNotFull = (config: CardConfig) => CardIsFullMap[config.type](config);\n\nexport type UpdateType = \"REPLACE\" | \"APPEND\";\n\nexport const strToCardConfig = (\n\tcontentStr: string,\n\toutputField: CardField,\n\tupdateType: UpdateType,\n\tbaseCard: CardConfig\n): CardConfig => {\n\tconst changedContent = strToCardContent(contentStr, outputField, updateType, baseCard.content);\n\treturn { ...baseCard, content: changedContent } as CardConfig;\n};\n\nconst CardFieldToTypeMap: { [field in CardField]: CardType } = {\n\tq: \"Q-A\",\n\ta: \"Q-A\",\n\tnote: \"Note\",\n};\n\nexport const cardFieldToType = (field: CardField) => CardFieldToTypeMap[field];\n\nexport const emptyNote = (cardID: CardID): CardConfig => {\n\treturn { type: \"Note\", content: \"\", cardID };\n};\nexport const emptyQA = (cardID: CardID): CardConfig => {\n\treturn { type: \"Q-A\", content: { q: \"\", a: \"\" }, cardID };\n};\n\nexport type CardPayload = Omit<CardConfig, \"cardID\">;\n","import { createSelector } from \"reselect\";\nimport { CardsState } from \"./model/state\";\nimport { NAME } from \"./constants\";\nimport { nextCardID } from \"./model/config\";\n\nexport const getState = (state: any) => state[NAME];\nexport const hasPast = createSelector(getState, (cardsState: any) => cardsState.past.length > 0);\nexport const hasFuture = createSelector(getState, (cardsState: any) => cardsState.future.length > 0);\n\nexport const getAll = (state: any) => state[NAME].present;\n\nexport const getLastCardIDNumber = createSelector(getAll, (state) => state.lastCardIDNumber);\n\nexport const getNextCardID = createSelector(getLastCardIDNumber, nextCardID);\n\nexport const getCards = createSelector(getAll, (state: CardsState) => state.cards);\n\nexport const getCardByID = (state: any, cardID: string) => getCards(state)[cardID];\n","import { CardConfig, CardID, cardIDToNumber, strToCardConfig } from \"./model/config\";\nimport { Cards, CardsState } from \"./model/state\";\nimport { CaseReducer, createSlice, PayloadAction } from \"@reduxjs/toolkit\";\nimport { NAME } from \"./constants\";\nimport { CardField } from \"./model/content\";\n\nconst initialState: CardsState = {\n\tcards: {},\n\tlastCardIDNumber: 0,\n};\n\nconst updateCardInCards = (cards: Cards, toBeUpdated: CardConfig) => {\n\tconst cardObj = { ...cards };\n\tcardObj[toBeUpdated.cardID] = toBeUpdated;\n\treturn cardObj;\n};\n\nconst cardPush: CaseReducer<CardsState, PayloadAction<CardConfig>> = (state, { payload }) => {\n\treturn {\n\t\t...state,\n\t\tcards: updateCardInCards(state.cards, payload),\n\t\tlastCardIDNumber: cardIDToNumber(payload.cardID) + 1,\n\t};\n};\n\nconst cardReplace: CaseReducer<CardsState, PayloadAction<CardConfig>> = (state, { payload }) => {\n\treturn { ...state, cards: updateCardInCards(state.cards, payload) };\n};\n\nconst cardFieldReplace: CaseReducer<\n\tCardsState,\n\tPayloadAction<{ cardField: CardField; cardConfig: CardConfig; newValue: string }>\n> = (state, { payload }) => {\n\treturn {\n\t\t...state,\n\t\tcards: updateCardInCards(\n\t\t\tstate.cards,\n\t\t\tstrToCardConfig(payload.newValue, payload.cardField, \"REPLACE\", payload.cardConfig)\n\t\t),\n\t};\n};\n\nconst cardRemove: CaseReducer<CardsState, PayloadAction<CardID>> = (state, { payload }) => {\n\tconst cards = { ...state.cards };\n\n\t// we do not reset the ID counter\n\tdelete cards[payload];\n\n\treturn { ...state, cards };\n};\n\nconst allCardsReplace: CaseReducer<CardsState, PayloadAction<CardsState>> = (_, { payload }) => {\n\treturn payload;\n};\n\nconst allCardsReset: CaseReducer<CardsState> = () => {\n\treturn initialState;\n};\n\nconst cardsSlice = createSlice({\n\tname: NAME,\n\tinitialState,\n\treducers: {\n\t\tcardPush,\n\t\tcardReplace,\n\t\tcardFieldReplace,\n\t\tcardRemove,\n\t\tallCardsReplace,\n\t\tallCardsReset,\n\t},\n});\n\nexport const { actions } = cardsSlice;\n\nexport default cardsSlice;\n","import FeaturedVideoIcon from \"@material-ui/icons/FeaturedVideo\";\nimport React from \"react\";\nimport { IconButton } from \"@material-ui/core\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport text from \"../../text\";\nimport { getNextCardID } from \"../selectors\";\nimport { emptyNote } from \"../model/config\";\nimport { actions } from \"../slice\";\n\nexport const AddNoteButton = () => {\n\tconst dispatch = useDispatch();\n\tconst nextID = useSelector(getNextCardID);\n\treturn (\n\t\t<text.components.NewNoteCardTooltip>\n\t\t\t<IconButton\n\t\t\t\ttype=\"button\"\n\t\t\t\tonClick={() => {\n\t\t\t\t\tdispatch(actions.cardPush(emptyNote(nextID)));\n\t\t\t\t}}\n\t\t\t>\n\t\t\t\t<FeaturedVideoIcon></FeaturedVideoIcon>\n\t\t\t</IconButton>\n\t\t</text.components.NewNoteCardTooltip>\n\t);\n};\n","import FeaturedPlayListIcon from \"@material-ui/icons/FeaturedPlayList\";\nimport React from \"react\";\nimport { IconButton } from \"@material-ui/core\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport text from \"../../text\";\nimport { getNextCardID } from \"../selectors\";\nimport { emptyQA } from \"../model/config\";\nimport { actions } from \"../slice\";\n\nexport const AddQAButton = () => {\n\tconst dispatch = useDispatch();\n\tconst nextID = useSelector(getNextCardID);\n\n\treturn (\n\t\t<text.components.AddQAButtonTooltip>\n\t\t\t<IconButton\n\t\t\t\ttype=\"button\"\n\t\t\t\tonClick={() => {\n\t\t\t\t\tdispatch(actions.cardPush(emptyQA(nextID)));\n\t\t\t\t}}\n\t\t\t>\n\t\t\t\t<FeaturedPlayListIcon></FeaturedPlayListIcon>\n\t\t\t</IconButton>\n\t\t</text.components.AddQAButtonTooltip>\n\t);\n};\n","import DeleteForeverIcon from \"@material-ui/icons/DeleteForever\";\nimport React from \"react\";\nimport { IconButton } from \"@material-ui/core\";\nimport { useDispatch } from \"react-redux\";\nimport { CardID } from \"../model/config\";\nimport text from \"../../text\";\nimport { actions } from \"../slice\";\n\nexport const DeleteCardButton = ({ cardID }: { cardID: CardID }) => {\n\tconst dispatch = useDispatch();\n\treturn (\n\t\t<text.components.DeleteCardButtonTooltip>\n\t\t\t<IconButton\n\t\t\t\ttype=\"button\"\n\t\t\t\tonClick={() => {\n\t\t\t\t\tdispatch(actions.cardRemove(cardID));\n\t\t\t\t}}\n\t\t\t>\n\t\t\t\t<DeleteForeverIcon fontSize=\"small\"></DeleteForeverIcon>\n\t\t\t</IconButton>\n\t\t</text.components.DeleteCardButtonTooltip>\n\t);\n};\n","import { CardField } from \"./content\";\nimport { createReplace, changeCardObject } from \"./permutation\";\n\nexport type SingleOrigin = { spanIndexStart: number; spanIndexEnd: number; page: number };\nexport type QOnlyQAOrigin = { q: SingleOrigin; a: {} };\nexport type AOnlyQAOrigin = { q: {}; a: SingleOrigin };\nexport type PartialQAOrigin = QOnlyQAOrigin | AOnlyQAOrigin;\nconst emptyQAOrigin = () => {\n\treturn { q: {}, a: {} };\n};\ntype EmptyOrigin = { q: {}; a: {} } | \"\";\nconst EmptyOriginMap: { [field in CardField]: () => EmptyOrigin } = {\n\tq: emptyQAOrigin,\n\ta: emptyQAOrigin,\n\tnote: () => \"\",\n};\nexport const emptyOrigin = (field: CardField) => {\n\treturn EmptyOriginMap[field]();\n};\ntype FullQAOrigin = { q: SingleOrigin; a: SingleOrigin };\nexport type QAOrigin = FullQAOrigin | PartialQAOrigin;\nexport type NoteOrigin = SingleOrigin;\nexport type CardOrigin = NoteOrigin | QAOrigin;\n\nexport const singleOriginToCardOrigin = (\n\tsingleOrigin: SingleOrigin,\n\toutputField: CardField,\n\tbaseOrigin?: CardOrigin\n): CardOrigin => {\n\tconst changeSpec = {\n\t\tinputObject: singleOrigin,\n\t\tinputField: \"note\" as CardField,\n\t\tfieldToBeChanged: outputField,\n\t\tobjectToBeChanged: baseOrigin ? baseOrigin : emptyOrigin(outputField),\n\t\tcreateModify: createReplace,\n\t};\n\n\treturn changeCardObject(changeSpec);\n};\n","import * as constants from \"./constants\";\nimport * as selectors from \"./selectors\";\nimport * as components from \"./components\";\nimport * as model from \"./model\";\nimport slice from \"./slice\";\n\nconst { reducer, actions, name } = slice;\n\nexport default { constants, actions, reducer, name, selectors, components, model };\n","import { NAME } from \"./constants\";\nimport { createSelector } from \"reselect\";\nimport { CardRiverState, riverMakeUpIDToPageNumber } from \"./model\";\nimport cards from \"../cards\";\nimport { CardID } from \"../cards/model/config\";\n\nexport const getAll = (state: any): CardRiverState => state[NAME].present;\n\nexport const getRiverMakeUps = createSelector(getAll, (state: CardRiverState) => state.riverMakeUps);\n\nexport const getNonEmptyRiverIDs = createSelector(getRiverMakeUps, (makeUps) => Object.keys(makeUps));\n\nexport const getNonEmptyRiverIDsSorted = createSelector(getNonEmptyRiverIDs, (ids) =>\n\tids.sort((a, b) => riverMakeUpIDToPageNumber(a) - riverMakeUpIDToPageNumber(b))\n);\n\nexport const getNonEmptyRiverMakeUpsSorted = createSelector(getRiverMakeUps, (makeUps) =>\n\tObject.values(makeUps).sort((a, b) => riverMakeUpIDToPageNumber(a.riverID) - riverMakeUpIDToPageNumber(b.riverID))\n);\n\nexport const getNonEmptyRiverCardsSorted = createSelector(\n\tgetNonEmptyRiverMakeUpsSorted,\n\tcards.selectors.getCards,\n\t(makeUps, cards) => {\n\t\tconst cardObjects = [];\n\t\tfor (const makeUp of makeUps) {\n\t\t\tfor (const id of makeUp.cardIDs) {\n\t\t\t\tcardObjects.push(cards[id]);\n\t\t\t}\n\t\t}\n\n\t\treturn cardObjects;\n\t}\n);\n\nexport const getActiveRiverMakeUpID = createSelector(getAll, (state: CardRiverState) => state.riverActiveID);\n\nexport const getActiveRiverMakeUp = createSelector(getRiverMakeUps, getActiveRiverMakeUpID, (makeUps, id) => {\n\tconst makeUp = makeUps[id];\n\treturn makeUp ? makeUp : { cardIDs: [] };\n});\n\nexport const getActiveRiverCardIDs = createSelector(getActiveRiverMakeUp, (makeUp): CardID[] => makeUp.cardIDs);\n\nexport const getActiveRiverCards = createSelector(\n\tgetActiveRiverCardIDs,\n\tcards.selectors.getCards,\n\t(makeUpCardIDs, cards) => makeUpCardIDs.map((id) => cards[id])\n);\n\nexport const getRiverShowState = createSelector(getAll, (state: CardRiverState) => state.riverShowState);\n\nexport const riverShowStateIsShow = createSelector(getRiverShowState, (state) => state === \"SHOW\");\n\nexport const getRiverContentState = createSelector(getAll, (state: CardRiverState) => state.riverContentState);\n\nexport const getRiverContentFilter = createSelector(getAll, (state: CardRiverState) => state.riverContentFilter);\n\nexport const getOriginRequest = createSelector(getAll, (state) => state.riverOriginRequest);\n","import { withStyles, CheckboxProps, Checkbox } from \"@material-ui/core\";\nimport React from \"react\";\nimport { green } from \"@material-ui/core/colors\";\nexport const GreenCheckbox = withStyles({\n\troot: {\n\t\tcolor: green[400],\n\t\t\"&$checked\": {\n\t\t\tcolor: green[600],\n\t\t},\n\t},\n\tchecked: {},\n})((props: CheckboxProps) => <Checkbox color=\"default\" {...props} />);\n","import {\n\tCardRiverState,\n\tRiverShowState,\n\tpageNumberToRiverMakeUpID,\n\tRiverContentState,\n\tremoveCardFromRivers,\n\tRiverMakeUps,\n} from \"./model\";\nimport { CardConfig } from \"../cards/model/config\";\nimport cards from \"../cards\";\nimport { CaseReducer, createSlice, PayloadAction } from \"@reduxjs/toolkit\";\nimport { NAME } from \"./constants\";\nimport { SingleOrigin } from \"../cards/model/origin\";\nimport { simpleReducer } from \"../../shared/utils\";\n\nconst initialState: CardRiverState = {\n\triverOriginRequest: null,\n\triverMakeUps: {\n\t\t[pageNumberToRiverMakeUpID(1)]: {\n\t\t\triverID: pageNumberToRiverMakeUpID(1),\n\t\t\tcardIDs: [],\n\t\t},\n\t},\n\triverActiveID: pageNumberToRiverMakeUpID(1),\n\triverShowState: \"SHOW\",\n\triverContentState: \"ALL\",\n\triverContentFilter: \"\",\n\tcount_DONT_USE: 0,\n};\n\nconst riverActiveID: CaseReducer<CardRiverState, PayloadAction<string>> = simpleReducer(\"riverActiveID\");\nconst riverShowState: CaseReducer<CardRiverState, PayloadAction<RiverShowState>> = simpleReducer(\"riverShowState\");\nconst riverContentState: CaseReducer<CardRiverState, PayloadAction<RiverContentState>> = simpleReducer(\n\t\"riverContentState\"\n);\nconst riverContentFilter: CaseReducer<CardRiverState, PayloadAction<string>> = simpleReducer(\"riverContentFilter\");\nconst riverOriginRequest: CaseReducer<CardRiverState, PayloadAction<SingleOrigin | null>> = simpleReducer(\n\t\"riverOriginRequest\"\n);\n\nconst allRiversReset: CaseReducer<CardRiverState> = (_) => {\n\treturn initialState;\n};\n\nconst allRiversReplace: CaseReducer<CardRiverState, PayloadAction<RiverMakeUps>> = (_, { payload }) => {\n\treturn {\n\t\t...initialState,\n\t\triverMakeUps: payload as RiverMakeUps,\n\t};\n};\n\nconst riverCardPush: CaseReducer<CardRiverState, PayloadAction<CardConfig>> = (state, { payload }) => {\n\tlet riverMakeUp;\n\tlet riverMakeUps;\n\t// make this unchained\n\t// then make clean up action?\n\tif (state.riverMakeUps[state.riverActiveID]) {\n\t\triverMakeUp = {\n\t\t\t...state.riverMakeUps[state.riverActiveID],\n\t\t\tcardIDs: [...state.riverMakeUps[state.riverActiveID].cardIDs, (payload as CardConfig).cardID],\n\t\t};\n\t} else {\n\t\t// create new river\n\t\triverMakeUp = {\n\t\t\triverID: state.riverActiveID,\n\t\t\tcardIDs: [(payload as CardConfig).cardID],\n\t\t};\n\t}\n\triverMakeUps = { ...state.riverMakeUps };\n\triverMakeUps[state.riverActiveID] = riverMakeUp;\n\n\treturn { ...state, riverMakeUps: riverMakeUps, count_DONT_USE: 0 };\n};\n\nconst riverCardRemove: CaseReducer<CardRiverState, PayloadAction<string>> = (state, { payload }) => {\n\treturn { ...removeCardFromRivers(state, payload), count_DONT_USE: 0 };\n};\n\nconst riverCardReplace: CaseReducer<CardRiverState> = (state) => {\n\t// a new state is necessary for the undo/redo to be able to sync river and cards\n\t// by resetting this to 0 via the other card-action, we avoid a (unlikely) too high number\n\treturn { ...state, count_DONT_USE: state.count_DONT_USE + 1 };\n};\n\nconst riverSlice = createSlice({\n\tname: NAME,\n\tinitialState,\n\treducers: {\n\t\triverActiveID,\n\t\triverShowState,\n\t\triverContentState,\n\t\triverContentFilter,\n\t\triverOriginRequest,\n\t\tallRiversReset,\n\t\tallRiversReplace,\n\t},\n\textraReducers: {\n\t\t[cards.actions.cardPush.type]: riverCardPush,\n\t\t[cards.actions.cardRemove.type]: riverCardRemove,\n\t\t[cards.actions.cardReplace.type]: riverCardReplace,\n\t\t[cards.actions.cardFieldReplace.type]: riverCardReplace,\n\t},\n});\n\nexport const { actions } = riverSlice;\n\nexport default riverSlice;\n","import { FormGroup, FormControlLabel } from \"@material-ui/core\";\nimport React from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { getRiverContentState } from \"../selectors\";\nimport { RiverContentState } from \"../model\";\nimport { GreenCheckbox } from \"../../../shared/GreenCheckbox\";\nimport { actions } from \"../slice\";\n\nexport const RiverContentFormGroup = () => {\n\tconst riverContentState = useSelector(getRiverContentState);\n\tconst dispatch = useDispatch();\n\n\tconst showQAs = riverContentState === \"ALL\" || riverContentState === \"QAS\";\n\tconst showNotes = riverContentState === \"ALL\" || riverContentState === \"NOTES\";\n\n\tconst changeContentState = (clickedState: RiverContentState) => {\n\t\tif (!showQAs && clickedState === \"QAS\") {\n\t\t\tif (showNotes) {\n\t\t\t\tdispatch(actions.riverContentState(\"ALL\"));\n\t\t\t} else {\n\t\t\t\tdispatch(actions.riverContentState(\"QAS\"));\n\t\t\t}\n\t\t\treturn;\n\t\t}\n\n\t\tif (!showNotes && clickedState === \"NOTES\") {\n\t\t\tif (showQAs) {\n\t\t\t\tdispatch(actions.riverContentState(\"ALL\"));\n\t\t\t} else {\n\t\t\t\tdispatch(actions.riverContentState(\"NOTES\"));\n\t\t\t}\n\t\t\treturn;\n\t\t}\n\n\t\tif (showQAs && clickedState === \"QAS\") {\n\t\t\tif (!showNotes) {\n\t\t\t\tdispatch(actions.riverContentState(\"NONE\"));\n\t\t\t} else {\n\t\t\t\tdispatch(actions.riverContentState(\"NOTES\"));\n\t\t\t}\n\t\t\treturn;\n\t\t}\n\n\t\tif (showNotes && clickedState === \"NOTES\") {\n\t\t\tif (!showQAs) {\n\t\t\t\tdispatch(actions.riverContentState(\"NONE\"));\n\t\t\t} else {\n\t\t\t\tdispatch(actions.riverContentState(\"QAS\"));\n\t\t\t}\n\t\t\treturn;\n\t\t}\n\t};\n\n\treturn (\n\t\t<FormGroup>\n\t\t\t<FormControlLabel\n\t\t\t\tcontrol={\n\t\t\t\t\t<GreenCheckbox\n\t\t\t\t\t\tchecked={showQAs}\n\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\tchangeContentState(\"QAS\");\n\t\t\t\t\t\t}}\n\t\t\t\t\t/>\n\t\t\t\t}\n\t\t\t\tlabel=\"QAs\"\n\t\t\t/>\n\t\t\t<FormControlLabel\n\t\t\t\tcontrol={\n\t\t\t\t\t<GreenCheckbox\n\t\t\t\t\t\tchecked={showNotes}\n\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\tchangeContentState(\"NOTES\");\n\t\t\t\t\t\t}}\n\t\t\t\t\t/>\n\t\t\t\t}\n\t\t\t\tlabel=\"Notes\"\n\t\t\t/>\n\t\t</FormGroup>\n\t);\n};\n","import { NAME } from \"./constants\";\nimport { createSelector } from \"reselect\";\nimport { SelectionData } from \"./model\";\n\nexport const getAll = (state: any): SelectionData => state[NAME];\n\nexport const getGoalConfig = createSelector(getAll, (state) => state.goalConfig);\nexport const getSourceConfig = createSelector(getAll, (state) => state.sourceConfig);\n\nexport const sourceConfigExists = createSelector(getSourceConfig, (config) => !!config);\n","import { CardConfig, CardPayload } from \"../../cards/model/config\";\nimport cards from \"../../cards\";\nimport { SelectionGoalConfig, SelectionSourceConfig, goalIsCreation, SelectionExistingCardGoalConfig } from \"../model\";\nimport { getNextCardID } from \"../../cards/selectors\";\n\nconst selectionConfigToCardPayload = (sourceConfig: SelectionSourceConfig, goalConfig: SelectionGoalConfig) => {\n\tconst inputOrigin = sourceConfig.contentOrigin;\n\tconst inputValue = sourceConfig.contentStr;\n\n\tconst outputField = goalConfig.cardField;\n\n\treturn {\n\t\ttype: cards.model.config.cardFieldToType(outputField),\n\t\tcontent: cards.model.content.strToNewCardContent(inputValue, outputField),\n\t\torigin: inputOrigin ? cards.model.origin.singleOriginToCardOrigin(inputOrigin, outputField) : undefined,\n\t};\n};\n\nconst selectionConfigToActualizedCardConfig = (\n\tsourceConfig: SelectionSourceConfig,\n\tgoalConfig: SelectionExistingCardGoalConfig,\n\tstate: any\n): CardConfig => {\n\tconst existingCard = cards.selectors.getCardByID(state, goalConfig.cardID);\n\n\tconst inputOrigin = sourceConfig.contentOrigin;\n\tconst inputValue = sourceConfig.contentStr;\n\n\tconst outputField = goalConfig.cardField;\n\n\treturn {\n\t\t...existingCard,\n\t\tcontent: cards.model.content.strToCardContent(inputValue, outputField, goalConfig.updateType, existingCard.content),\n\t\torigin: inputOrigin\n\t\t\t? cards.model.origin.singleOriginToCardOrigin(inputOrigin, outputField, existingCard.origin)\n\t\t\t: existingCard.origin,\n\t} as CardConfig;\n};\n\nexport const selectionToCard = (\n\tsourceConfig: SelectionSourceConfig,\n\tgoalConfig: SelectionGoalConfig,\n\tdispatch: any,\n\tstate: any\n) => {\n\tconst isCreation = goalIsCreation(goalConfig);\n\tif (isCreation) {\n\t\tconst cardPayload: CardPayload = selectionConfigToCardPayload(sourceConfig, goalConfig);\n\t\tconst nextID = getNextCardID(state);\n\t\tdispatch(cards.actions.cardPush({ ...cardPayload, cardID: nextID } as CardConfig));\n\t} else {\n\t\tconst cardConfig = selectionConfigToActualizedCardConfig(\n\t\t\tsourceConfig,\n\t\t\tgoalConfig as SelectionExistingCardGoalConfig,\n\t\t\tstate\n\t\t);\n\t\tdispatch(cards.actions.cardReplace(cardConfig));\n\t}\n};\n","import { SingleOrigin } from \"../cards/model/origin\";\nimport { CardField } from \"../cards/model/content\";\nimport { CardID, UpdateType } from \"../cards/model/config\";\n\nexport type SelectionSourceConfig = { contentStr: string; contentOrigin?: SingleOrigin };\n\nexport type CardFieldIdentifier = { cardID: CardID; cardField: CardField };\nexport type SelectionExistingCardGoalConfig = CardFieldIdentifier & { updateType: UpdateType };\nexport type SelectionGoalConfig = SelectionExistingCardGoalConfig | { cardField: CardField };\nexport const goalIsCreation = (goalConfig: SelectionGoalConfig) => {\n\t// each existing card has an ID\n\tconst idExists = !!(goalConfig as CardFieldIdentifier).cardID;\n\treturn !idExists;\n};\n\n// Selection is made up of two parts: selecting a source and selecting a goal\n// If both are done, then a Card needs to be created or updated\n// By clarifying this concept, I was able to reduce the selection code and make it more composable\n// See: AppendButton can be used before or after selecting a source without any extra code\n// This shows that a correct conceptualisation of the problem domain operations is the most important\n// thing in programming (note to self :))\n\nexport type SelectionData = {\n\tsourceConfig: SelectionSourceConfig | null;\n\tgoalConfig: SelectionGoalConfig | null;\n};\n","import { SelectionSourceConfig } from \"../model\";\nimport { SingleOrigin } from \"../../cards/model/origin\";\n\ntype SelectionData = { text: string; selection: Selection };\n\nexport const getSelectionWorkaround = (): SelectionData | null => {\n\tconst selection = window.getSelection();\n\n\tif (!selection) return null;\n\n\ttry {\n\t\tvar activeElement = document.activeElement;\n\t\tif (activeElement && (activeElement as HTMLInputElement).value) {\n\t\t\t// firefox bug https://bugzilla.mozilla.org/show_bug.cgi?id=85686\n\t\t\tconst str = (activeElement as HTMLInputElement).value.substring(\n\t\t\t\t(activeElement as HTMLInputElement).selectionStart as number,\n\t\t\t\t(activeElement as HTMLInputElement).selectionEnd as number\n\t\t\t);\n\n\t\t\tif (str === \"\") return null;\n\n\t\t\treturn { text: str, selection };\n\t\t} else {\n\t\t\tconst selStr = selection.toString();\n\n\t\t\tif (selStr === \"\") return null;\n\n\t\t\treturn { text: selStr, selection };\n\t\t}\n\t} catch (e) {\n\t\treturn null;\n\t}\n};\n\nconst materialSelectionDataToSourceConfig = (\n\tselectionData: SelectionData,\n\tpage: number\n): SelectionSourceConfig | false => {\n\t//TODO: think about race-conditions for the delayed rendering, this might mess up the index\n\t//TODO: this also depends on the rendering order of the spans to be the same, might not be a good idea\n\t//TODO: maybe can do this async if it gets more complex?\n\n\tconst selection = selectionData.selection;\n\tlet selectedParentStart = selection.anchorNode?.parentNode as Node | null;\n\tlet selectedParentEnd = selection.focusNode?.parentNode as Node | null;\n\n\tif (!selectedParentStart || !selectedParentEnd) {\n\t\treturn false;\n\t}\n\n\tif (selectedParentStart.nodeName === \"MARK\") {\n\t\tselectedParentStart = selectedParentStart.parentNode;\n\t\tif (!selectedParentStart) return false;\n\t}\n\n\tif (selectedParentEnd.nodeName === \"MARK\") {\n\t\tselectedParentEnd = selectedParentEnd.parentNode;\n\t\tif (!selectedParentEnd) return false;\n\t}\n\n\tif (selectedParentStart.nodeName !== \"SPAN\" || selectedParentEnd.nodeName !== \"SPAN\") return false;\n\n\tconst divTextLayerParent = selectedParentStart.parentNode;\n\tif (!!!divTextLayerParent || divTextLayerParent.nodeName !== \"DIV\") return false;\n\n\tconst spanChildren = Array.from(divTextLayerParent.childNodes) as Node[];\n\tif (spanChildren.length === 0) return false;\n\n\tconst startIndex = spanChildren.indexOf(selectedParentStart);\n\tconst endIndex = spanChildren.indexOf(selectedParentEnd);\n\tif (startIndex === -1 || endIndex === -1) return false;\n\n\treturn {\n\t\tcontentStr: selectionData.text,\n\t\tcontentOrigin: { spanIndexStart: startIndex, spanIndexEnd: endIndex, page },\n\t};\n};\n\nexport const getSelectionSourceFromMaterial = (page: number): SelectionSourceConfig | false => {\n\tconst selectionData = getSelectionWorkaround();\n\tif (!selectionData) return false;\n\n\treturn materialSelectionDataToSourceConfig(selectionData, page);\n};\n\nexport const getSelectionSourceFromCard = (contentOrigin?: SingleOrigin): SelectionSourceConfig | false => {\n\tconst selectionData = getSelectionWorkaround();\n\tif (!selectionData) return false;\n\n\treturn { contentStr: selectionData.text, contentOrigin };\n};\n","import { CaseReducer, createSlice, PayloadAction } from \"@reduxjs/toolkit\";\nimport { simpleReducer } from \"../../shared/utils\";\nimport { NAME } from \"./constants\";\nimport { SelectionData, SelectionGoalConfig, SelectionSourceConfig } from \"./model\";\n\nconst initialState: SelectionData = {\n\tsourceConfig: null,\n\tgoalConfig: null,\n};\n\nconst selectionSource: CaseReducer<SelectionData, PayloadAction<SelectionSourceConfig | null>> = simpleReducer(\n\t\"sourceConfig\"\n);\nconst selectionGoal: CaseReducer<SelectionData, PayloadAction<SelectionGoalConfig | null>> = simpleReducer(\n\t\"goalConfig\"\n);\n\nconst selectionSlice = createSlice({\n\tname: NAME,\n\tinitialState,\n\treducers: {\n\t\tselectionSource,\n\t\tselectionGoal,\n\t},\n});\n\nexport const { actions } = selectionSlice;\n\nexport default selectionSlice;\n","export const NAME = \"selectionData\";\n","import { SingleOrigin } from \"../cards/model/origin\";\nimport { SelectionSourceConfig, SelectionGoalConfig, SelectionExistingCardGoalConfig } from \"./model\";\nimport { Dispatch } from \"redux\";\nimport { getGoalConfig, getSourceConfig } from \"./selectors\";\nimport { selectionToCard } from \"./services/use-selection\";\nimport { getSelectionSourceFromMaterial, getSelectionSourceFromCard } from \"./services/get-selection\";\nimport { CardID } from \"../cards/model/config\";\nimport { CardField } from \"../cards/model/content\";\nimport { actions } from \"./slice\";\n\nconst selectionSource = actions.selectionSource;\nexport const resetSelectionSource = () => selectionSource(null);\nconst selectionGoal = actions.selectionGoal;\nexport const resetSelectionGoal = () => selectionGoal(null);\n\n// we want to support either direction, first adding Goal or first adding Source\nexport const addSelectionSource = (config: SelectionSourceConfig) => {\n\treturn (dispatch: Dispatch, getState: Function) => {\n\t\tconst state = getState();\n\t\tconst goalConfig = getGoalConfig(state);\n\t\tif (!goalConfig) {\n\t\t\tdispatch(selectionSource(config));\n\t\t\treturn;\n\t\t}\n\t\tselectionToCard(config, goalConfig as SelectionGoalConfig, dispatch, state);\n\t\tdispatch(resetSelectionGoal());\n\t};\n};\n\nexport const addMaterialSelectionSource = (page: number) => {\n\tconst sourceConfig = getSelectionSourceFromMaterial(page);\n\tif (sourceConfig) {\n\t\treturn addSelectionSource(sourceConfig);\n\t}\n\treturn false;\n};\n\nexport const addCardSelectionSource = (contentOrigin?: SingleOrigin) => {\n\tconst sourceConfig = getSelectionSourceFromCard(contentOrigin);\n\tif (sourceConfig) {\n\t\treturn addSelectionSource(sourceConfig);\n\t}\n\treturn false;\n};\n\nexport const addSelectionGoal = (config: SelectionGoalConfig) => {\n\treturn (dispatch: Dispatch, getState: Function) => {\n\t\tconst state = getState();\n\t\tconst sourceConfig = getSourceConfig(state);\n\t\tif (!sourceConfig) {\n\t\t\tdispatch(selectionGoal(config));\n\t\t\treturn;\n\t\t}\n\t\tselectionToCard(sourceConfig as SelectionSourceConfig, config, dispatch, state);\n\t\tdispatch(resetSelectionSource());\n\t};\n};\n\nexport const addCardAppendSelectionGoal = (cardID: CardID, cardField: CardField) => {\n\tconst config: SelectionExistingCardGoalConfig = { cardID, cardField, updateType: \"APPEND\" };\n\treturn addSelectionGoal(config);\n};\n\nexport const addCardReplaceSelectionGoal = (cardID: CardID, cardField: CardField) => {\n\tconst config: SelectionExistingCardGoalConfig = { cardID, cardField, updateType: \"REPLACE\" };\n\treturn addSelectionGoal(config);\n};\n","import React, { useState, useEffect } from \"react\";\nimport { Snackbar, IconButton, Typography, Card, Grid } from \"@material-ui/core\";\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { resetSelectionSource } from \"../actions\";\nimport { getSourceConfig } from \"../selectors\";\n\nexport const SelectionSnackbar = () => {\n\tconst [open, setOpen] = useState(false);\n\tconst dispatch = useDispatch();\n\tconst sourceConfig = useSelector(getSourceConfig);\n\n\tif (!!!sourceConfig && open) setOpen(false);\n\n\tif (!!sourceConfig && !open) setOpen(true);\n\n\tconst handleClose = (event: any, reason: string) => {\n\t\tif (reason === \"clickaway\") {\n\t\t\t// do not close on clickaway\n\t\t\tevent.preventDefault();\n\t\t} else {\n\t\t\tsetOpen(false);\n\t\t\tdispatch(resetSelectionSource());\n\t\t}\n\t};\n\n\tconst handleDismiss = () => {\n\t\tsetOpen(false);\n\t\tdispatch(resetSelectionSource());\n\t};\n\n\tconst escPress = (event: KeyboardEvent) => {\n\t\tif (open && (event.key === \"Escape\" || event.key === \"Esc\")) {\n\t\t\thandleDismiss();\n\t\t}\n\t};\n\n\tuseEffect(() => {\n\t\tdocument.addEventListener(\"keydown\", escPress);\n\t\treturn () => {\n\t\t\tdocument.removeEventListener(\"keydown\", escPress);\n\t\t};\n\t});\n\n\treturn (\n\t\t<Snackbar\n\t\t\tstyle={{ maxWidth: \"400px\", overflowX: \"auto\" }}\n\t\t\tanchorOrigin={{ vertical: \"top\", horizontal: \"center\" }}\n\t\t\topen={open}\n\t\t\tonClose={handleClose}\n\t\t\tmessage={\n\t\t\t\t<Grid container direction=\"row\" spacing={1}>\n\t\t\t\t\t<Grid item>\n\t\t\t\t\t\t<Card\n\t\t\t\t\t\t\tvariant=\"outlined\"\n\t\t\t\t\t\t\tcolor=\"secondary\"\n\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\tpadding: \"4px\",\n\t\t\t\t\t\t\t\tcolor: \"white\",\n\t\t\t\t\t\t\t\tbackgroundColor: \"#3f51b5\",\n\t\t\t\t\t\t\t\tmaxWidth: \"400px\",\n\t\t\t\t\t\t\t\toverflowX: \"auto\",\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\tsquare={true}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<Typography variant=\"h4\">{\"Selection:\"}</Typography>\n\t\t\t\t\t\t</Card>\n\n\t\t\t\t\t\t<Card variant=\"outlined\" style={{ padding: \"4px\", color: \"black\", backgroundColor: \"white\" }} square={true}>\n\t\t\t\t\t\t\t<Typography variant=\"body1\">{sourceConfig?.contentStr}</Typography>\n\t\t\t\t\t\t</Card>\n\t\t\t\t\t</Grid>\n\n\t\t\t\t\t{sourceConfig?.contentOrigin && (\n\t\t\t\t\t\t<Grid item>\n\t\t\t\t\t\t\t<Card\n\t\t\t\t\t\t\t\tvariant=\"outlined\"\n\t\t\t\t\t\t\t\tcolor=\"secondary\"\n\t\t\t\t\t\t\t\tstyle={{ padding: \"4px\", color: \"black\", backgroundColor: \"white\" }}\n\t\t\t\t\t\t\t\tsquare={true}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<Typography variant=\"h4\">{\"Origin:\"}</Typography>\n\t\t\t\t\t\t\t</Card>\n\n\t\t\t\t\t\t\t<Card\n\t\t\t\t\t\t\t\tvariant=\"outlined\"\n\t\t\t\t\t\t\t\tstyle={{ padding: \"4px\", color: \"white\", backgroundColor: \"#3f51b5\" }}\n\t\t\t\t\t\t\t\tsquare={true}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<Typography variant=\"body1\">Page {sourceConfig.contentOrigin.page}</Typography>\n\t\t\t\t\t\t\t</Card>\n\t\t\t\t\t\t</Grid>\n\t\t\t\t\t)}\n\t\t\t\t</Grid>\n\t\t\t}\n\t\t\taction={\n\t\t\t\t<IconButton size=\"small\" aria-label=\"close\" color=\"inherit\" onClick={handleDismiss}>\n\t\t\t\t\t<CloseIcon fontSize=\"small\" />\n\t\t\t\t</IconButton>\n\t\t\t}\n\t\t/>\n\t);\n};\n","import React, { ReactNode } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { addMaterialSelectionSource } from \"../actions\";\n\n// should only be used once material/pdf exists\nexport const MaterialMouseUp = ({ children, page }: { children: ReactNode; page: number }) => {\n\tconst dispatch = useDispatch();\n\n\treturn (\n\t\t<span\n\t\t\tonMouseUp={() => {\n\t\t\t\tconst materialSelectionSourceAction = addMaterialSelectionSource(page);\n\t\t\t\tif (materialSelectionSourceAction) dispatch(materialSelectionSourceAction);\n\t\t\t}}\n\t\t\tonMouseDown={(event: React.MouseEvent<any>) => {\n\t\t\t\t// without this it is possible so have something selected\n\t\t\t\t// close the selection-snackbar\n\t\t\t\t// it stays selected (only on click inside text it woud de-select)\n\t\t\t\t// then press the mouse and\n\t\t\t\t// the selection-snackbar pops back up\n\t\t\t\t// even though it is not a new selection just the old one\n\t\t\t\tif (event.button === 0) window.getSelection()?.empty();\n\t\t\t}}\n\t\t>\n\t\t\t{children}\n\t\t</span>\n\t);\n};\n","import React, { ReactNode } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { addCardSelectionSource } from \"../actions\";\nimport { SingleOrigin } from \"../../cards/model/origin\";\n\nexport const CardFieldMouseUp = ({ children, fieldOrigin }: { children: ReactNode; fieldOrigin?: SingleOrigin }) => {\n\tconst dispatch = useDispatch();\n\n\treturn (\n\t\t<span\n\t\t\tonMouseUp={() => {\n\t\t\t\tconst cardSelectionSourceAction = addCardSelectionSource(fieldOrigin);\n\t\t\t\tif (cardSelectionSourceAction) dispatch(cardSelectionSourceAction);\n\t\t\t}}\n\t\t>\n\t\t\t{children}\n\t\t</span>\n\t);\n};\n","import AddCircleOutlineIcon from \"@material-ui/icons/AddCircleOutline\";\nimport AddCircleOutlinedIcon from \"@material-ui/icons/AddCircleOutlined\";\nimport React, { useState } from \"react\";\nimport { IconButton, Tooltip } from \"@material-ui/core\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport text from \"../../text\";\nimport { getGoalConfig, getSourceConfig } from \"../selectors\";\nimport { addCardAppendSelectionGoal, resetSelectionGoal } from \"../actions\";\nimport { SelectionExistingCardGoalConfig, CardFieldIdentifier } from \"../model\";\nimport { CardField } from \"../../cards/model/content\";\n\nexport const AppendButton = ({ cardField, cardID }: { cardField: CardField; cardID: string }) => {\n\tconst dispatch = useDispatch();\n\n\tconst sourceConfig = useSelector(getSourceConfig);\n\tconst goalConfig = useSelector(getGoalConfig);\n\t// outlined means this is the goal\n\tconst [outlined, setOutlined] = useState(false);\n\n\tconst isGoal =\n\t\t!!goalConfig &&\n\t\t!!(goalConfig as CardFieldIdentifier).cardID &&\n\t\t(goalConfig as CardFieldIdentifier).cardID === cardID &&\n\t\tgoalConfig.cardField === cardField &&\n\t\t(goalConfig as SelectionExistingCardGoalConfig).updateType === \"APPEND\";\n\n\tif (isGoal) {\n\t\tif (!outlined) setOutlined(true);\n\t} else {\n\t\tif (outlined) setOutlined(false);\n\t}\n\t//TODO: test all variations of origin  (setting/copying) again (how to automate the test?)\n\n\treturn (\n\t\t<Tooltip\n\t\t\ttitle={\n\t\t\t\tisGoal\n\t\t\t\t\t? text.constants.CardIsAppendGoalTooltip\n\t\t\t\t\t: !!sourceConfig\n\t\t\t\t\t? text.constants.AppendToCardTooltip\n\t\t\t\t\t: text.constants.ChoiceCardAsAppendGoal\n\t\t\t}\n\t\t\tenterDelay={text.constants.defaultEnterDelay}\n\t\t\tenterNextDelay={text.constants.defaultEnterNextDelay}\n\t\t>\n\t\t\t<IconButton\n\t\t\t\ttype=\"button\"\n\t\t\t\tonClick={() => {\n\t\t\t\t\tif (!outlined && !!!goalConfig) {\n\t\t\t\t\t\tdispatch(addCardAppendSelectionGoal(cardID, cardField));\n\t\t\t\t\t} else if (isGoal) {\n\t\t\t\t\t\tdispatch(resetSelectionGoal());\n\t\t\t\t\t}\n\t\t\t\t}}\n\t\t\t>\n\t\t\t\t{outlined ? (\n\t\t\t\t\t<AddCircleOutlinedIcon fontSize=\"small\"></AddCircleOutlinedIcon>\n\t\t\t\t) : (\n\t\t\t\t\t<AddCircleOutlineIcon fontSize=\"small\"></AddCircleOutlineIcon>\n\t\t\t\t)}\n\t\t\t</IconButton>\n\t\t</Tooltip>\n\t);\n};\n","import React, { RefObject, useCallback, useEffect, useRef, useState } from \"react\";\nimport Menu from \"@material-ui/core/Menu\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Divider, MenuItem } from \"@material-ui/core\";\nimport { addSelectionGoal } from \"../actions\";\nimport { sourceConfigExists } from \"../selectors\";\n\n// the root div for the menu invisibly covers the whole screen\n// the actual div that is visible is this\nconst baseContextMenuSelector = \"div.MuiPaper-root\";\nconst contextMenuContainsTargetNode = (ref: RefObject<null | HTMLDivElement>, event: MouseEvent) => {\n\tconst target = event.target as Node;\n\tif (ref.current?.querySelector(baseContextMenuSelector)?.contains(target)) return true;\n\treturn false;\n};\n\nexport const ContextMenu = () => {\n\tconst [menuPosition, setMenuPosition] = useState<undefined | { top: number; left: number }>(undefined);\n\tconst ref = useRef(null);\n\n\tconst shouldClose = useCallback(\n\t\t(event: MouseEvent) => {\n\t\t\tconst clickOutSideOfMenu = !contextMenuContainsTargetNode(ref, event);\n\t\t\tif (clickOutSideOfMenu) {\n\t\t\t\tsetMenuPosition(undefined);\n\t\t\t}\n\t\t},\n\t\t[ref, setMenuPosition]\n\t);\n\tuseEffect(() => {\n\t\tdocument.addEventListener(\"mousedown\", shouldClose);\n\t\treturn () => {\n\t\t\tdocument.removeEventListener(\"mousedown\", shouldClose);\n\t\t};\n\t}, [shouldClose]);\n\n\tconst doesSourceConfigExists = useSelector(sourceConfigExists);\n\tconst shouldOpen = useCallback(\n\t\t(event: MouseEvent) => {\n\t\t\tif (!doesSourceConfigExists) return;\n\n\t\t\tevent.preventDefault();\n\n\t\t\tsetMenuPosition({ left: event.x, top: event.y });\n\t\t},\n\t\t[doesSourceConfigExists, setMenuPosition]\n\t);\n\tuseEffect(() => {\n\t\tdocument.addEventListener(\"contextmenu\", shouldOpen);\n\t\treturn () => {\n\t\t\tdocument.removeEventListener(\"contextmenu\", shouldOpen);\n\t\t};\n\t}, [shouldOpen]);\n\n\tconst openState = !!menuPosition;\n\n\tconst dispatch = useDispatch();\n\n\treturn (\n\t\t<Menu ref={ref} keepMounted open={openState} anchorReference=\"anchorPosition\" anchorPosition={menuPosition}>\n\t\t\t<MenuItem\n\t\t\t\tonClick={() => {\n\t\t\t\t\tdispatch(addSelectionGoal({ cardField: \"note\", updateType: \"REPLACE\" }));\n\t\t\t\t\tsetMenuPosition(undefined);\n\t\t\t\t}}\n\t\t\t>\n\t\t\t\tNew: Note\n\t\t\t</MenuItem>\n\n\t\t\t<Divider></Divider>\n\t\t\t<MenuItem\n\t\t\t\tonClick={() => {\n\t\t\t\t\tdispatch(addSelectionGoal({ cardField: \"q\", updateType: \"REPLACE\" }));\n\t\t\t\t\tsetMenuPosition(undefined);\n\t\t\t\t}}\n\t\t\t>\n\t\t\t\tNew: Q (Q-A)\n\t\t\t</MenuItem>\n\t\t\t<MenuItem\n\t\t\t\tonClick={() => {\n\t\t\t\t\tdispatch(addSelectionGoal({ cardField: \"a\", updateType: \"REPLACE\" }));\n\t\t\t\t\tsetMenuPosition(undefined);\n\t\t\t\t}}\n\t\t\t>\n\t\t\t\tNew: A (Q-A)\n\t\t\t</MenuItem>\n\t\t</Menu>\n\t);\n};\n\n//TODO: delete extracted str in source\n","import RestorePageIcon from \"@material-ui/icons/RestorePage\";\nimport RestorePageOutlinedIcon from \"@material-ui/icons/RestorePageOutlined\";\nimport React, { useState } from \"react\";\nimport { IconButton, Tooltip } from \"@material-ui/core\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport text from \"../../text\";\nimport { getGoalConfig, getSourceConfig } from \"../selectors\";\nimport { addCardReplaceSelectionGoal, resetSelectionGoal } from \"../actions\";\nimport { SelectionExistingCardGoalConfig, CardFieldIdentifier } from \"../model\";\nimport { CardField } from \"../../cards/model/content\";\n\nexport const ReplaceButton = ({ cardField, cardID }: { cardField: CardField; cardID: string }) => {\n\tconst dispatch = useDispatch();\n\n\tconst sourceConfig = useSelector(getSourceConfig);\n\tconst goalConfig = useSelector(getGoalConfig);\n\t// outlined means this is the goal\n\tconst [outlined, setOutlined] = useState(false);\n\n\tconst isGoal =\n\t\t!!goalConfig &&\n\t\t!!(goalConfig as CardFieldIdentifier).cardID &&\n\t\t(goalConfig as CardFieldIdentifier).cardID === cardID &&\n\t\tgoalConfig.cardField === cardField &&\n\t\t(goalConfig as SelectionExistingCardGoalConfig).updateType === \"REPLACE\";\n\n\tif (isGoal) {\n\t\tif (!outlined) setOutlined(true);\n\t} else {\n\t\tif (outlined) setOutlined(false);\n\t}\n\n\treturn (\n\t\t<Tooltip\n\t\t\ttitle={\n\t\t\t\tisGoal\n\t\t\t\t\t? text.constants.CardIsReplaceGoalTooltip\n\t\t\t\t\t: !!sourceConfig\n\t\t\t\t\t? text.constants.ReplaceCardTooltip\n\t\t\t\t\t: text.constants.ChoiceCardAsReplaceGoal\n\t\t\t}\n\t\t\tenterDelay={text.constants.defaultEnterDelay}\n\t\t\tenterNextDelay={text.constants.defaultEnterNextDelay}\n\t\t>\n\t\t\t<IconButton\n\t\t\t\ttype=\"button\"\n\t\t\t\tonClick={() => {\n\t\t\t\t\tif (!outlined && !!!goalConfig) {\n\t\t\t\t\t\tdispatch(addCardReplaceSelectionGoal(cardID, cardField));\n\t\t\t\t\t} else if (isGoal) {\n\t\t\t\t\t\tdispatch(resetSelectionGoal());\n\t\t\t\t\t}\n\t\t\t\t}}\n\t\t\t>\n\t\t\t\t{outlined ? (\n\t\t\t\t\t<RestorePageIcon fontSize=\"small\"></RestorePageIcon>\n\t\t\t\t) : (\n\t\t\t\t\t<RestorePageOutlinedIcon fontSize=\"small\"></RestorePageOutlinedIcon>\n\t\t\t\t)}\n\t\t\t</IconButton>\n\t\t</Tooltip>\n\t);\n};\n","import * as actions from \"./actions\";\nimport slice from \"./slice\";\nimport * as selectors from \"./selectors\";\nimport * as components from \"./components\";\nimport * as services from \"./services\";\n\nconst { reducer, name } = slice;\n\nexport default { actions, name, components, reducer, selectors, services };\n","import React, { useState } from \"react\";\nimport { TextField, TextFieldProps } from \"@material-ui/core\";\nimport selection from \"../../../../selection\";\nimport { SingleOrigin } from \"../../../../cards/model/origin\";\n\nexport const ClayCardField = ({\n\tstoreValue = \"\",\n\tsaveChanges,\n\tfieldOrigin,\n\tstyle,\n\t...rest\n}: {\n\tstoreValue?: string;\n\t// {} is an empty field of the QA-origin\n\tfieldOrigin?: SingleOrigin | {};\n\tsaveChanges: (value: string) => void;\n\tstyle: any;\n} & TextFieldProps) => {\n\tconst [state, setState] = useState({ storeValue, mutableValue: storeValue });\n\n\t// reset if new storeValue, otherwise keep user-mutated value\n\tif (state.storeValue !== storeValue) {\n\t\tsetState({ storeValue, mutableValue: storeValue });\n\t}\n\n\t// need the onChange-pattern, because we want to be able to pre-fill the field from the store\n\treturn (\n\t\t<selection.components.CardFieldMouseUp\n\t\t\tfieldOrigin={\n\t\t\t\tfieldOrigin && (fieldOrigin as SingleOrigin).spanIndexStart !== undefined\n\t\t\t\t\t? (fieldOrigin as SingleOrigin)\n\t\t\t\t\t: undefined\n\t\t\t}\n\t\t>\n\t\t\t<TextField\n\t\t\t\tInputProps={{ disableUnderline: true, style: { minWidth: \"400px\" } }}\n\t\t\t\tmultiline\n\t\t\t\tvariant=\"filled\"\n\t\t\t\tvalue={state.mutableValue}\n\t\t\t\tonChange={(event) => {\n\t\t\t\t\tconst submittedValue = (event.target as HTMLTextAreaElement).value;\n\t\t\t\t\tsetState({ ...state, mutableValue: submittedValue });\n\t\t\t\t}}\n\t\t\t\tonBlur={(event: any) => {\n\t\t\t\t\tsaveChanges(event.target.value);\n\t\t\t\t}}\n\t\t\t\tstyle={style}\n\t\t\t\t{...rest}\n\t\t\t></TextField>\n\t\t</selection.components.CardFieldMouseUp>\n\t);\n};\n","import FindInPageIcon from \"@material-ui/icons/FindInPage\";\nimport React from \"react\";\nimport { IconButton, Tooltip } from \"@material-ui/core\";\nimport { useDispatch } from \"react-redux\";\nimport { SingleOrigin } from \"../../../../cards/model/origin\";\nimport text from \"../../../../text\";\nimport { actions } from \"../../../slice\";\n\nexport const JumpToOriginButton = ({ cardOrigin }: { cardOrigin: SingleOrigin }) => {\n\tconst dispatch = useDispatch();\n\treturn (\n\t\t<Tooltip\n\t\t\ttitle={text.constants.jumpToOriginTooltip}\n\t\t\tenterDelay={text.constants.defaultEnterDelay}\n\t\t\tenterNextDelay={text.constants.defaultEnterNextDelay}\n\t\t>\n\t\t\t<IconButton\n\t\t\t\ttype=\"button\"\n\t\t\t\tonClick={() => {\n\t\t\t\t\tdispatch(actions.riverOriginRequest(cardOrigin));\n\t\t\t\t}}\n\t\t\t>\n\t\t\t\t<FindInPageIcon fontSize=\"small\"></FindInPageIcon>\n\t\t\t</IconButton>\n\t\t</Tooltip>\n\t);\n};\n","import React from \"react\";\nimport cards from \"../../../../cards\";\nimport { JumpToOriginButton } from \"./JumpToOriginButton\";\nimport { Paper, Grid } from \"@material-ui/core\";\nimport { CardConfig } from \"../../../../cards/model/config\";\nimport { CardField } from \"../../../../cards/model/content\";\nimport selection from \"../../../../selection\";\nimport { SingleOrigin } from \"../../../../cards/model/origin\";\n\nexport const ClayCardFieldButtons = ({ config, cardField }: { config: CardConfig; cardField: CardField }) => {\n\tconst origin: SingleOrigin | null = config.origin\n\t\t? cards.model.permutation.toFieldValue(cardField, config.origin)\n\t\t: null;\n\tconst originExists = origin?.page !== undefined;\n\treturn (\n\t\t<Paper variant=\"outlined\">\n\t\t\t<Grid container direction=\"row\">\n\t\t\t\t<Grid item>\n\t\t\t\t\t<selection.components.AppendButton\n\t\t\t\t\t\tcardID={config.cardID}\n\t\t\t\t\t\tcardField={cardField}\n\t\t\t\t\t></selection.components.AppendButton>\n\t\t\t\t</Grid>\n\n\t\t\t\t<Grid item>\n\t\t\t\t\t<selection.components.ReplaceButton\n\t\t\t\t\t\tcardID={config.cardID}\n\t\t\t\t\t\tcardField={cardField}\n\t\t\t\t\t></selection.components.ReplaceButton>\n\t\t\t\t</Grid>\n\n\t\t\t\t<Grid item>\n\t\t\t\t\t{originExists && <JumpToOriginButton cardOrigin={origin as SingleOrigin}></JumpToOriginButton>}\n\t\t\t\t</Grid>\n\t\t\t</Grid>\n\t\t</Paper>\n\t);\n};\n","import Grid from \"@material-ui/core/Grid\";\nimport React from \"react\";\nimport { ClayCardField } from \"./ClayCardField\";\nimport { QACardContent } from \"../../../../cards/model/content\";\nimport { useDispatch } from \"react-redux\";\nimport cards from \"../../../../cards\";\nimport { Card } from \"@material-ui/core\";\nimport text from \"../../../../text\";\nimport { ClayCardFieldButtons } from \"./ClayCardFieldButtons\";\nimport { QAConfig } from \"../../../../cards/model/config\";\n\n//TODO: use dark color pallet (theme?)\n\nexport const QACard = ({ config }: { config: QAConfig }) => {\n\tconst dispatch = useDispatch();\n\n\treturn (\n\t\t<Card variant=\"elevation\" elevation={5} style={{ padding: \"3px\" }}>\n\t\t\t<Grid container direction=\"row\" justify=\"space-between\">\n\t\t\t\t<Grid item>\n\t\t\t\t\t<Grid container direction=\"column\" spacing={1}>\n\t\t\t\t\t\t<Grid item>\n\t\t\t\t\t\t\t<Grid container direction=\"row\" spacing={1}>\n\t\t\t\t\t\t\t\t<Grid item>\n\t\t\t\t\t\t\t\t\t<ClayCardField\n\t\t\t\t\t\t\t\t\t\tsaveChanges={(value) => {\n\t\t\t\t\t\t\t\t\t\t\tdispatch(cards.actions.cardFieldReplace({ cardField: \"q\", cardConfig: config, newValue: value }));\n\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\tstoreValue={(config.content as QACardContent).q}\n\t\t\t\t\t\t\t\t\t\tlabel={text.constants.questionText}\n\t\t\t\t\t\t\t\t\t\tvariant=\"filled\"\n\t\t\t\t\t\t\t\t\t\tstyle={{ backgroundColor: \"#FFBF69\" }}\n\t\t\t\t\t\t\t\t\t\tInputLabelProps={{ style: { color: \"#000000\" } }}\n\t\t\t\t\t\t\t\t\t\tfieldOrigin={config.origin?.q}\n\t\t\t\t\t\t\t\t\t></ClayCardField>\n\t\t\t\t\t\t\t\t</Grid>\n\n\t\t\t\t\t\t\t\t<Grid item>\n\t\t\t\t\t\t\t\t\t<ClayCardFieldButtons cardField=\"q\" config={config}></ClayCardFieldButtons>\n\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t<Grid item>\n\t\t\t\t\t\t\t<Grid container direction=\"row\" spacing={1}>\n\t\t\t\t\t\t\t\t<Grid item>\n\t\t\t\t\t\t\t\t\t<ClayCardField\n\t\t\t\t\t\t\t\t\t\tsaveChanges={(value) => {\n\t\t\t\t\t\t\t\t\t\t\tdispatch(cards.actions.cardFieldReplace({ cardField: \"a\", cardConfig: config, newValue: value }));\n\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\tstoreValue={(config.content as QACardContent).a}\n\t\t\t\t\t\t\t\t\t\tlabel={text.constants.answerText}\n\t\t\t\t\t\t\t\t\t\tstyle={{ backgroundColor: \"#2EC4B6\" }}\n\t\t\t\t\t\t\t\t\t\tInputLabelProps={{ style: { color: \"#000000\" } }}\n\t\t\t\t\t\t\t\t\t\tfieldOrigin={config.origin?.a}\n\t\t\t\t\t\t\t\t\t></ClayCardField>\n\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t\t<Grid item>\n\t\t\t\t\t\t\t\t\t<ClayCardFieldButtons cardField=\"a\" config={config}></ClayCardFieldButtons>\n\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t</Grid>\n\t\t\t\t\t</Grid>\n\t\t\t\t</Grid>\n\n\t\t\t\t<Grid item>\n\t\t\t\t\t<cards.components.DeleteCardButton cardID={config.cardID}></cards.components.DeleteCardButton>\n\t\t\t\t</Grid>\n\t\t\t</Grid>\n\t\t</Card>\n\t);\n};\n","import React from \"react\";\nimport { ClayCardField } from \"./ClayCardField\";\nimport { useDispatch } from \"react-redux\";\nimport cards from \"../../../../cards\";\nimport { Card, Grid } from \"@material-ui/core\";\nimport text from \"../../../../text\";\nimport { NoteConfig } from \"../../../../cards/model/config\";\nimport { ClayCardFieldButtons } from \"./ClayCardFieldButtons\";\n\nexport const NoteCard = ({ config }: { config: NoteConfig }) => {\n\tconst dispatch = useDispatch();\n\n\treturn (\n\t\t<Card variant=\"elevation\" elevation={5} style={{ padding: \"3px\" }}>\n\t\t\t<Grid container direction=\"row\" justify=\"space-between\">\n\t\t\t\t<Grid item>\n\t\t\t\t\t<Grid container direction=\"row\" spacing={1}>\n\t\t\t\t\t\t<Grid item>\n\t\t\t\t\t\t\t<ClayCardField\n\t\t\t\t\t\t\t\tsaveChanges={(value) => {\n\t\t\t\t\t\t\t\t\tdispatch(cards.actions.cardReplace({ ...config, content: value } as NoteConfig));\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\tstoreValue={config.content as string}\n\t\t\t\t\t\t\t\tlabel={text.constants.noteText}\n\t\t\t\t\t\t\t\tvariant=\"filled\"\n\t\t\t\t\t\t\t\tstyle={{ backgroundColor: \"#CBF3F0\" }}\n\t\t\t\t\t\t\t\tInputLabelProps={{ style: { color: \"#000000\" } }}\n\t\t\t\t\t\t\t\tfieldOrigin={config.origin}\n\t\t\t\t\t\t\t></ClayCardField>\n\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t<Grid item>\n\t\t\t\t\t\t\t<ClayCardFieldButtons cardField=\"note\" config={config}></ClayCardFieldButtons>\n\t\t\t\t\t\t</Grid>\n\t\t\t\t\t</Grid>\n\t\t\t\t</Grid>\n\n\t\t\t\t<Grid item>\n\t\t\t\t\t<cards.components.DeleteCardButton cardID={config.cardID}></cards.components.DeleteCardButton>\n\t\t\t\t</Grid>\n\t\t\t</Grid>\n\t\t</Card>\n\t);\n};\n","import React from \"react\";\nimport { CardConfig, NoteConfig, QAConfig } from \"../../../../cards/model/config\";\nimport { QACard } from \"./QACard\";\nimport { NoteCard } from \"./NoteCard\";\n\nexport const ClayCard = ({ config }: { config: CardConfig }) => {\n\tswitch (config.type) {\n\t\tcase \"Note\":\n\t\t\treturn <NoteCard config={config as NoteConfig}></NoteCard>;\n\t\tcase \"Q-A\":\n\t\t\treturn <QACard config={config as QAConfig}></QACard>;\n\t}\n};\n","import Grid from \"@material-ui/core/Grid\";\nimport React from \"react\";\nimport { incrementer } from \"../../../../shared/utils\";\nimport { ClayCard } from \"./Cards/ClayCard\";\nimport { CardConfig } from \"../../../cards/model/config\";\nimport { Divider } from \"@material-ui/core\";\n\nconst GridItemDivider = () => (\n\t<Grid item>\n\t\t<Divider></Divider>\n\t</Grid>\n);\n\nexport const ClayCardGridItems = (cards: CardConfig[]) => {\n\tconst increment = incrementer();\n\n\treturn cards.reduce((prev, currentCard, index, arr) => {\n\t\tprev.push(\n\t\t\t<Grid item key={increment()}>\n\t\t\t\t<ClayCard config={currentCard} key={increment()}></ClayCard>\n\t\t\t</Grid>\n\t\t);\n\n\t\tconst notLastCard = index < arr.length - 1;\n\t\tif (notLastCard) prev.push(<GridItemDivider key={increment()}></GridItemDivider>);\n\t\treturn prev;\n\t}, [] as any[]);\n};\n","import cards from \"../../cards\";\nimport { CardConfig, NoteConfig, QAConfig } from \"../../cards/model/config\";\nimport { RiverContentState } from \"../model\";\nimport { combineFilterArr, Filter } from \"../../../shared/utils\";\n\n//TODO: make it not be accordion but closeable?\n//TODO: make local show / hide notes\nconst qaFilter: Filter = (config: CardConfig) => config.type === \"Q-A\";\nconst noteFilter: Filter = (config: CardConfig) => config.type === \"Note\";\nconst riverContentFilter: (contentStr: string) => Filter = (riverContentFilterStr: string) => (config: CardConfig) => {\n\tswitch (config.type) {\n\t\tcase \"Note\":\n\t\t\treturn cards.model.content.noteContentContainsStringOrEmpty(config as NoteConfig, riverContentFilterStr);\n\t\tcase \"Q-A\":\n\t\t\treturn cards.model.content.qaContentContainsStringOrEmpty(config as QAConfig, riverContentFilterStr);\n\t}\n};\n\nexport const filterCardConfigs = (\n\tinputCards: CardConfig[],\n\triverContentState: RiverContentState,\n\triverContentFilterStr: string\n): CardConfig[] => {\n\tif (riverContentState === \"NONE\") {\n\t\treturn [];\n\t}\n\n\tconst filters: Filter[] = [];\n\n\tif (riverContentState !== \"ALL\") {\n\t\tif (riverContentState === \"QAS\") {\n\t\t\tfilters.push(qaFilter);\n\t\t} else if (riverContentState === \"NOTES\") {\n\t\t\tfilters.push(noteFilter);\n\t\t}\n\t}\n\tif (riverContentFilterStr !== \"\") {\n\t\tfilters.push(riverContentFilter(riverContentFilterStr));\n\t}\n\n\treturn filters.length > 0 ? inputCards.filter(combineFilterArr(filters)) : inputCards;\n};\n","import { Typography, Divider } from \"@material-ui/core\";\nimport Accordion from \"@material-ui/core/Accordion\";\nimport AccordionSummary from \"@material-ui/core/AccordionSummary\";\nimport AccordionDetails from \"@material-ui/core/AccordionDetails\";\nimport Grid from \"@material-ui/core/Grid\";\nimport React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { getRiverContentState, getRiverContentFilter, getRiverMakeUps } from \"../../selectors\";\nimport cards from \"../../../cards\";\nimport { ClayCardGridItems } from \"./ClayCardGridItems\";\nimport { filterCardConfigs } from \"../../services/filterCardConfigs\";\n\nexport const CardRiver = ({ riverID, materialHeight }: { riverID: string; materialHeight: number }) => {\n\tconst cardConfigs = useSelector(cards.selectors.getCards);\n\n\tconst riverMakeUp = useSelector(getRiverMakeUps)[riverID];\n\tconst riverCards = riverMakeUp ? riverMakeUp.cardIDs.map((id) => cardConfigs[id]) : [];\n\tconst riverContentState = useSelector(getRiverContentState);\n\t//TODO: use regex for upper/lower-case\n\tconst riverContentFilter = useSelector(getRiverContentFilter);\n\n\tconst filteredConfigs = filterCardConfigs(riverCards, riverContentState, riverContentFilter);\n\tconst gridItems = ClayCardGridItems(filteredConfigs);\n\n\t//TODO: if you start without any document and then load one, the current cards should be merged into that one\n\t//TODO: scroll-to-top for overflowing river\n\n\treturn (\n\t\t<Accordion\n\t\t\texpanded\n\t\t\tdefaultExpanded={true}\n\t\t\tstyle={{\n\t\t\t\toverflow: \"auto\",\n\t\t\t\t// this was maxHeight but then if we hide the Material an empty river looks weird\n\t\t\t\t// because it is surrounded by white-space\n\t\t\t\theight: materialHeight,\n\t\t\t}}\n\t\t\televation={5}\n\t\t>\n\t\t\t<AccordionSummary>\n\t\t\t\t<Typography\n\t\t\t\t\tvariant=\"h6\"\n\t\t\t\t\talign=\"center\"\n\t\t\t\t\tstyle={{ MozUserSelect: \"none\", WebkitUserSelect: \"none\", msUserSelect: \"none\" }}\n\t\t\t\t>\n\t\t\t\t\t{riverID}\n\t\t\t\t</Typography>\n\t\t\t</AccordionSummary>\n\t\t\t<AccordionDetails>\n\t\t\t\t<Grid container direction=\"column\" spacing={2} justify=\"center\" alignItems=\"stretch\">\n\t\t\t\t\t<Grid item>\n\t\t\t\t\t\t<span\n\t\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\t\tconsole.log(\"here\");\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<cards.components.AddQAButton></cards.components.AddQAButton>\n\t\t\t\t\t\t</span>\n\t\t\t\t\t\t<cards.components.AddNoteButton></cards.components.AddNoteButton>\n\t\t\t\t\t\t<Divider></Divider>\n\t\t\t\t\t</Grid>\n\n\t\t\t\t\t<Grid item>\n\t\t\t\t\t\t<Grid container direction=\"column\" spacing={2} justify=\"center\" alignItems=\"stretch\">\n\t\t\t\t\t\t\t{gridItems}\n\t\t\t\t\t\t</Grid>\n\t\t\t\t\t</Grid>\n\t\t\t\t</Grid>\n\t\t\t</AccordionDetails>\n\t\t</Accordion>\n\t);\n};\n","import { useDispatch, useSelector } from \"react-redux\";\nimport { ReactNode } from \"react\";\nimport React from \"react\";\nimport { getActiveRiverMakeUpID } from \"../selectors\";\nimport { actions } from \"../slice\";\n\n//TODO: make reconciliation algorithm for origin when new PDF versions come out\n// (basically, just search the text, and if it is not in the same span, just move the span - expand page forward and backward then search there)\n\nexport const SwitchActiveRiver = ({ children, riverID }: { children: ReactNode; riverID: string }) => {\n\tconst dispatch = useDispatch();\n\tconst activeRiverID = useSelector(getActiveRiverMakeUpID);\n\n\treturn (\n\t\t<span\n\t\t\tonMouseEnter={() => {\n\t\t\t\tif (activeRiverID !== riverID) {\n\t\t\t\t\tdispatch(actions.riverActiveID(riverID));\n\t\t\t\t}\n\t\t\t}}\n\t\t>\n\t\t\t{children}\n\t\t</span>\n\t);\n};\n","import React from \"react\";\nimport { Button, FormControlLabel } from \"@material-ui/core\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { GreenCheckbox } from \"../../../shared/GreenCheckbox\";\nimport { getRiverShowState } from \"../selectors\";\nimport { actions } from \"../slice\";\n\nexport const ShowRiverCheckbox = () => {\n\tconst dispatch = useDispatch();\n\tconst curRiverShowState = useSelector(getRiverShowState);\n\n\treturn (\n\t\t<Button\n\t\t\tstartIcon={\n\t\t\t\t<FormControlLabel\n\t\t\t\t\tlabel=\"River\"\n\t\t\t\t\tcontrol={<GreenCheckbox checked={curRiverShowState === \"SHOW\"} />}\n\t\t\t\t></FormControlLabel>\n\t\t\t}\n\t\t\tvariant=\"contained\"\n\t\t\tcolor=\"primary\"\n\t\t\tonClick={() => {\n\t\t\t\tdispatch(actions.riverShowState(curRiverShowState === \"SHOW\" ? \"HIDE\" : \"SHOW\"));\n\t\t\t}}\n\t\t></Button>\n\t);\n};\n","import * as constants from \"./constants\";\nimport * as components from \"./components\";\nimport slice from \"./slice\";\nimport * as selectors from \"./selectors\";\nimport * as model from \"./model\";\nimport * as services from \"./services\";\n\nconst { actions, reducer, name } = slice;\n\nexport default { constants, components, reducer, name, selectors, actions, model, services };\n","import { RefObject, useCallback, useEffect, useRef } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { getSpanOrigin } from \"../selectors\";\nimport { SingleOrigin } from \"../../cards/model/origin\";\nimport { actions } from \"../slice\";\n\nexport const PageSpanControl = ({ page, pageRef }: { page: number; pageRef: RefObject<null | HTMLDivElement> }) => {\n\tconst spanOrigin = useSelector(getSpanOrigin);\n\tconst count = useRef(0);\n\n\tconst dispatch = useDispatch();\n\n\t// it is not guaranteed that the effect fires after the page was fully rendered\n\t// (depends on load)\n\t// so we try up to 10 times\n\t// this assumes every machine has finished rendering after approx 100 ms\n\t// then we assume that the origin was invalid (bug somewhere) and abort\n\t// otherwise it would be a infinite loop\n\tconst trier = useCallback(() => {\n\t\tconst intervalID = setInterval(() => {\n\t\t\tif (count.current === 10) {\n\t\t\t\tcount.current = 0;\n\t\t\t\tclearInterval(intervalID);\n\t\t\t\tconsole.log(\"invalid origin clicked\", spanOrigin);\n\t\t\t\tdispatch(actions.spanOrigin(null));\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst textLayer = pageRef.current?.children.item(1);\n\t\t\tif (textLayer) {\n\t\t\t\tconst originSpan = textLayer.children.item((spanOrigin as SingleOrigin).spanIndexStart);\n\t\t\t\tif (originSpan) {\n\t\t\t\t\toriginSpan.scrollIntoView({ behavior: \"auto\", block: \"nearest\", inline: \"nearest\" });\n\t\t\t\t\tcount.current = 0;\n\t\t\t\t\tclearInterval(intervalID);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcount.current = count.current + 1;\n\t\t}, 10);\n\t}, [dispatch, count, spanOrigin, pageRef]);\n\n\tuseEffect(() => {\n\t\tif (spanOrigin && spanOrigin.page === page && pageRef.current) {\n\t\t\t// assumption of fixed order\n\t\t\tconst textLayer = pageRef.current.children.item(1);\n\t\t\tif (textLayer) {\n\t\t\t\tconst originSpan = textLayer.children.item(spanOrigin.spanIndexStart);\n\t\t\t\tif (originSpan) {\n\t\t\t\t\toriginSpan.scrollIntoView({ behavior: \"auto\", block: \"nearest\", inline: \"nearest\" });\n\t\t\t\t\tcount.current = 0;\n\t\t\t\t} else {\n\t\t\t\t\ttrier();\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\ttrier();\n\t\t\t}\n\t\t}\n\t}, [dispatch, page, pageRef, spanOrigin, trier]);\n\n\treturn null;\n};\n","import React, { useRef } from \"react\";\nimport { Page } from \"react-pdf\";\nimport { PageKeyboardControl } from \"./PageKeyboardControl\";\nimport selection from \"../../../selection\";\nimport { useSelector } from \"react-redux\";\nimport { getDocumentSearch, getSpanOrigin, getWindowMeasurements } from \"../../selectors\";\nimport { MaterialMultiplier } from \"./RiverMaterialPairList\";\nimport { PageSpanControl } from \"../PageSpanControl\";\nimport { TextLayerItemInternal } from \"react-pdf/dist/Page\";\nimport { SingleOrigin } from \"../../../cards/model/origin\";\n\ntype Renderer = (\n\ttextItem: TextLayerItemInternal | (TextLayerItemInternal & { str: string | JSX.Element })\n) => JSX.Element | string;\n\nconst highlightOrigin = (textItem: TextLayerItemInternal, origin: SingleOrigin) => {\n\tconst itemIndex = textItem.itemIndex;\n\tif (!(itemIndex >= origin.spanIndexStart && itemIndex <= origin.spanIndexEnd)) {\n\t\treturn textItem.str;\n\t}\n\n\t// does not really make sense to make more fine-grained mark if the TextLayer is off anyways\n\treturn <mark style={{ backgroundColor: \"red\" }}>{textItem.str}</mark>;\n};\n\nconst makeOriginHighlighter = (origin: SingleOrigin) => {\n\treturn (textItem: TextLayerItemInternal) => {\n\t\treturn highlightOrigin(textItem, origin);\n\t};\n};\n\nexport const backgroundStyle = { backgroundColor: \"blue\" };\n\n// TODO: this could be made clearer and cleaner\nexport const highlightPattern = (text: string, pattern: string) => {\n\t// the idea is that:\n\t// no matches are most likely\n\t// 1 or 2 are second most likely\n\t// after that the pattern must be really small,\n\t// so then we can look at the whole string\n\t// generally verbosity is used to guarantee speed\n\t// potentially 400+ items need to be processed for every search, so no room for slack\n\n\tconst textLength = text.length;\n\tconst patternLength = pattern.length;\n\t// most of the TextItems should not have a highlight, so short-circuit is advised\n\tif (pattern === \"\" || text === \"\" || patternLength > textLength) return text;\n\n\t// fastest match seems to be indexOf: https://jsben.ch/RVYk7\n\tconst index = text.indexOf(pattern);\n\tif (index === -1) return text;\n\n\t// react says to use unqiue elements with keys, I choose not to for speed reasons\n\tconst markedPattern = <mark style={backgroundStyle}>{pattern}</mark>;\n\tconst slice1 = index > 0 ? text.slice(0, index) : false;\n\n\tlet result = [];\n\tif (slice1) result.push(slice1);\n\tresult.push(markedPattern);\n\n\tconst secondIndex = text.indexOf(pattern, index + patternLength);\n\tif (secondIndex === -1) {\n\t\tconst slice2Start = index + patternLength;\n\t\tconst slice2 = slice2Start < textLength ? text.slice(slice2Start) : false;\n\t\tif (slice2) result.push(slice2);\n\t\treturn result;\n\t}\n\n\tconst slice2Start = index + patternLength;\n\tconst slice2 = slice2Start !== secondIndex ? text.slice(slice2Start, secondIndex) : false;\n\tif (slice2) result.push(slice2);\n\tresult.push(markedPattern);\n\n\tconst thirdIndex = text.indexOf(pattern, secondIndex + patternLength);\n\tif (thirdIndex === -1) {\n\t\tconst slice3Start = secondIndex + patternLength;\n\t\tconst slice3 = slice3Start < textLength ? text.slice(slice3Start) : false;\n\t\tif (slice3) result.push(slice2);\n\t\treturn result;\n\t}\n\n\tconst slice3Start = secondIndex + patternLength;\n\tconst slice3 = slice3Start < textLength ? text.slice(slice3Start, thirdIndex) : false;\n\tif (slice3) result.push(slice3);\n\tresult.push(markedPattern);\n\n\tif (thirdIndex + patternLength === textLength) {\n\t\treturn result;\n\t}\n\n\tconst stringRest = text.slice(thirdIndex + patternLength);\n\tif (stringRest === pattern) {\n\t\tresult.push(markedPattern);\n\t\treturn result;\n\t}\n\n\tconst splitText = stringRest.split(pattern);\n\tif (splitText.length <= 1) {\n\t\tresult.push(stringRest);\n\t\treturn result;\n\t}\n\n\tfor (let index = 0; index < splitText.length; index++) {\n\t\tconst spliter = splitText[index];\n\t\tif (index === 0 && spliter === \"\") {\n\t\t\tresult.push(markedPattern);\n\t\t\tcontinue;\n\t\t}\n\n\t\tif (index === splitText.length - 1 && spliter !== \"\") {\n\t\t\tresult.push(spliter);\n\t\t\tcontinue;\n\t\t}\n\n\t\tif (spliter !== \"\") result.push(spliter);\n\t\tresult.push(markedPattern);\n\t}\n\n\treturn result as any;\n};\n\nfunction makeTextRenderer(searchText: string) {\n\treturn function textRenderer(textItem: TextLayerItemInternal) {\n\t\treturn highlightPattern(textItem.str, searchText);\n\t};\n}\n\nconst combineRenderers = (searchRenderer?: Renderer, originRenderer?: Renderer) => {\n\tif (!searchRenderer) return originRenderer;\n\tif (!originRenderer) return searchRenderer;\n\treturn (textItem: TextLayerItemInternal) => originRenderer({ ...textItem, str: searchRenderer(textItem) as any });\n};\n\n//TODO: when switching from a small page to big, the ControlBar does not size back\n\nexport const PDFPage = ({ pageNumber }: { pageNumber: number }) => {\n\t//assumption is that the list checks for width before rendering\n\tconst materialWidth = useSelector(getWindowMeasurements)?.width as number;\n\tconst documentSearch = useSelector(getDocumentSearch);\n\tconst spanOrigin = useSelector(getSpanOrigin);\n\n\tconst originHighlighter = spanOrigin ? makeOriginHighlighter(spanOrigin) : undefined;\n\tconst searchRenderer = documentSearch !== \"\" ? makeTextRenderer(documentSearch) : undefined;\n\n\tconst textRenderer = combineRenderers(searchRenderer, originHighlighter);\n\n\tconst pageRef = useRef<null | HTMLDivElement>(null);\n\n\treturn (\n\t\t<div style={{ overflow: \"auto\" }}>\n\t\t\t<selection.components.MaterialMouseUp page={pageNumber}>\n\t\t\t\t<PageKeyboardControl>\n\t\t\t\t\t<Page\n\t\t\t\t\t\tinputRef={(instance) => {\n\t\t\t\t\t\t\tpageRef.current = instance;\n\t\t\t\t\t\t}}\n\t\t\t\t\t\tpageNumber={pageNumber}\n\t\t\t\t\t\twidth={materialWidth * MaterialMultiplier}\n\t\t\t\t\t\tcustomTextRenderer={textRenderer as any}\n\t\t\t\t\t\trenderAnnotationLayer={false}\n\t\t\t\t\t/>\n\t\t\t\t</PageKeyboardControl>\n\t\t\t</selection.components.MaterialMouseUp>\n\t\t\t<PageSpanControl page={pageNumber} pageRef={pageRef}></PageSpanControl>\n\t\t</div>\n\t);\n};\n","import React from \"react\";\nimport { Divider, Grid } from \"@material-ui/core\";\nimport river from \"../../../river\";\nimport { PDFPage } from \"./PDFPage\";\nimport { useSelector } from \"react-redux\";\nimport { getDisplayStatus, getWindowMeasurements } from \"../../selectors\";\nimport { pairTopBottomPadding, RiverMultiplier } from \"./RiverMaterialPairList\";\n\nconst RiverPairItem = ({ riverID, materialHeight }: { riverID: string; materialHeight: number }) => {\n\tconst width = useSelector(getWindowMeasurements)?.width as number;\n\n\treturn (\n\t\t<div style={{ maxWidth: width * RiverMultiplier }}>\n\t\t\t<river.components.CardRiver riverID={riverID} materialHeight={materialHeight}></river.components.CardRiver>\n\t\t</div>\n\t);\n};\n\nexport const RiverMaterialPair = ({\n\tindex,\n\tdata,\n\tstyle,\n}: {\n\tindex: number;\n\tdata: {\n\t\tmaterialHeights: Map<number, number>;\n\t};\n\tstyle: any;\n}) => {\n\tconst pageNumber = index + 1;\n\tconst riverID = river.model.pageNumberToRiverMakeUpID(pageNumber);\n\tconst { materialHeights } = data;\n\tconst showRiver = useSelector(river.selectors.getRiverShowState);\n\tconst showMaterial = useSelector(getDisplayStatus);\n\n\treturn (\n\t\t<div style={{ ...style }}>\n\t\t\t<river.components.SwitchActiveRiver riverID={riverID}>\n\t\t\t\t<Grid container justify=\"space-between\" direction=\"row\" alignItems=\"flex-start\">\n\t\t\t\t\t<Grid item hidden={showRiver === \"HIDE\"}>\n\t\t\t\t\t\t<RiverPairItem riverID={riverID} materialHeight={materialHeights.get(pageNumber) as number}></RiverPairItem>\n\t\t\t\t\t</Grid>\n\n\t\t\t\t\t<Grid item hidden={showMaterial === \"HIDE\"}>\n\t\t\t\t\t\t<PDFPage pageNumber={pageNumber}></PDFPage>\n\t\t\t\t\t</Grid>\n\t\t\t\t</Grid>\n\t\t\t</river.components.SwitchActiveRiver>\n\t\t\t<Divider style={{ marginTop: pairTopBottomPadding / 2 }}></Divider>\n\t\t</div>\n\t);\n};\n","import { RefObject, useEffect } from \"react\";\nimport { VariableSizeList } from \"react-window\";\nimport { getCurrentPage, getCurrentView, getScrollToPage } from \"../../selectors\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport river from \"../../../river\";\nimport { View } from \"../../model\";\nimport { actions } from \"../../slice\";\n\nexport const PageScrollControl = ({ listRef }: { listRef: RefObject<VariableSizeList> }) => {\n\tconst currentView = useSelector(getCurrentView);\n\n\tconst scrollToPage = useSelector(getScrollToPage);\n\tconst currentPage = useSelector(getCurrentPage);\n\tconst riverOriginRequest = useSelector(river.selectors.getOriginRequest);\n\tuseEffect(() => {\n\t\tlistRef.current?.scrollToItem(currentPage - 1, \"start\");\n\t}, []);\n\n\tconst dispatch = useDispatch();\n\n\tuseEffect(() => {\n\t\tif ((riverOriginRequest || scrollToPage) && currentView !== View.RiverMaterial) {\n\t\t\tdispatch(actions.currentView(View.RiverMaterial));\n\t\t}\n\n\t\tif (riverOriginRequest) {\n\t\t\tlistRef.current?.scrollToItem(riverOriginRequest.page - 1, \"auto\");\n\t\t\tdispatch(actions.spanOrigin(riverOriginRequest));\n\t\t\tdispatch(actions.pageUpdate({ page: riverOriginRequest.page, shouldScroll: false }));\n\t\t\tdispatch(river.actions.riverOriginRequest(null));\n\t\t\treturn;\n\t\t}\n\n\t\tif (scrollToPage) {\n\t\t\tlistRef.current?.scrollToItem(scrollToPage - 1, \"start\");\n\t\t\tdispatch(actions.pageUpdate({ page: scrollToPage, shouldScroll: false }));\n\t\t}\n\t}, [dispatch, listRef, scrollToPage, riverOriginRequest, currentView]);\n\n\treturn null;\n};\n","import React, { RefObject, useRef, Fragment, useEffect } from \"react\";\nimport { pdfjs } from \"react-pdf\";\nimport { VariableSizeList } from \"react-window\";\nimport { RiverMaterialPair } from \"./RiverMaterialPair\";\nimport { CachedPageDimensions } from \"./PDFDocument\";\nimport { getTopOffset, getWindowMeasurements } from \"../../selectors\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { PageScrollControl } from \"./PageScrollControl\";\nimport { actions } from \"../../slice\";\n\n//TODO: replace this with Material-UI breakpoints\nexport const MaterialMultiplier = 0.63;\nexport const RiverMultiplier = 0.35;\n\nconst calculateMaterialHeight = (\n\tpageNumber: number,\n\tcachedPageDimensions: CachedPageDimensions,\n\twindowWidth: number\n) => {\n\tconst pageDims = cachedPageDimensions.get(pageNumber) as [number, number];\n\tconst materialWidth = windowWidth * MaterialMultiplier;\n\n\tconst userSpaceUnitWidth = pageDims[0];\n\tconst pixelPerUserSpaceUnit = materialWidth / userSpaceUnitWidth;\n\tconst materialHeight = pageDims[1] * pixelPerUserSpaceUnit;\n\n\tconst extraSpaceBetweenMaterialPages = 20;\n\treturn materialHeight + extraSpaceBetweenMaterialPages;\n};\n\nexport const pairTopBottomPadding = 20;\n\nconst Resetter = ({\n\tlistRef,\n\tmaterialHeights,\n}: {\n\tlistRef: RefObject<VariableSizeList>;\n\tmaterialHeights: Map<number, number>;\n}) => {\n\tconst ref = useRef(materialHeights);\n\n\tuseEffect(() => {\n\t\tif (materialHeights !== ref.current) {\n\t\t\tlistRef.current?.resetAfterIndex(0);\n\t\t\tref.current = materialHeights;\n\t\t}\n\t});\n\n\treturn null;\n};\n\nexport const RiverMaterialPairList = ({\n\tpdfProxyRef,\n\tcachedPageDimensions,\n}: {\n\tpdfProxyRef: RefObject<pdfjs.PDFDocumentProxy | undefined>;\n\tcachedPageDimensions: CachedPageDimensions;\n}) => {\n\tconst listRef = useRef<VariableSizeList>();\n\n\tconst windowMeasurements = useSelector(getWindowMeasurements);\n\tconst materialHeights = windowMeasurements\n\t\t? Array.from(cachedPageDimensions.keys()).reduce((prev, pageNumber) => {\n\t\t\t\tprev.set(pageNumber, calculateMaterialHeight(pageNumber, cachedPageDimensions, windowMeasurements.width));\n\t\t\t\treturn prev;\n\t\t  }, new Map<number, number>())\n\t\t: undefined;\n\n\tconst dispatch = useDispatch();\n\tconst topOffset = useSelector(getTopOffset);\n\n\treturn (\n\t\t<Fragment>\n\t\t\t{windowMeasurements && materialHeights && (\n\t\t\t\t<VariableSizeList\n\t\t\t\t\theight={windowMeasurements.height - topOffset}\n\t\t\t\t\titemCount={(pdfProxyRef.current as pdfjs.PDFDocumentProxy).numPages}\n\t\t\t\t\titemSize={(index: number) => (materialHeights.get(index + 1) as number) + pairTopBottomPadding}\n\t\t\t\t\titemData={{\n\t\t\t\t\t\tmaterialHeights,\n\t\t\t\t\t}}\n\t\t\t\t\tref={listRef as RefObject<VariableSizeList>}\n\t\t\t\t\twidth=\"100%\"\n\t\t\t\t\tonItemsRendered={(props) => {\n\t\t\t\t\t\t//TODO: find way to switch the page if it is halfway in sight\n\t\t\t\t\t\tdispatch(actions.pageUpdate({ page: props.visibleStopIndex + 1, shouldScroll: false }));\n\t\t\t\t\t}}\n\t\t\t\t>\n\t\t\t\t\t{RiverMaterialPair}\n\t\t\t\t</VariableSizeList>\n\t\t\t)}\n\t\t\t{materialHeights && (\n\t\t\t\t<Resetter listRef={listRef as RefObject<VariableSizeList>} materialHeights={materialHeights}></Resetter>\n\t\t\t)}\n\t\t\t<PageScrollControl listRef={listRef as RefObject<VariableSizeList>}></PageScrollControl>\n\t\t</Fragment>\n\t);\n};\n","import \"./PDFDocument.css\";\nimport \"react-pdf/dist/esm/Page/AnnotationLayer.css\";\nimport React, { useState, useRef } from \"react\";\nimport { pdfjs, Document } from \"react-pdf\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { getPDF } from \"../../selectors\";\nimport text from \"../../../text\";\nimport { cachePageDimensions } from \"./cachePageDimensions\";\nimport { RiverMaterialPairList } from \"./RiverMaterialPairList\";\nimport { actions } from \"../../slice\";\npdfjs.GlobalWorkerOptions.workerSrc = `//cdnjs.cloudflare.com/ajax/libs/pdf.js/${pdfjs.version}/pdf.worker.js`;\n\nexport type CachedPageDimensions = Map<number, [number, number]>;\n\nconst options = {\n\tcMapUrl: \"cmaps/\",\n\tcMapPacked: true,\n};\n\nexport const PDFDocument = () => {\n\tconst pdf = useSelector(getPDF);\n\n\tconst [cachedPageDimensions, setPageDimensions] = useState<CachedPageDimensions | undefined>();\n\n\tconst pdfProxyRef = useRef<pdfjs.PDFDocumentProxy | undefined>();\n\n\tconst dispatch = useDispatch();\n\n\t// used for abborting pageDimension-cache-collection\n\tconst pdfName = pdf?.name;\n\tconst pdfNameRef = useRef(pdfName);\n\tif (pdfNameRef.current !== pdfName) {\n\t\tpdfNameRef.current = pdfName;\n\t}\n\n\treturn (\n\t\t<Document\n\t\t\tloading={text.constants.loadingMaterialText}\n\t\t\tnoData={text.constants.noMaterialText}\n\t\t\toptions={options}\n\t\t\tfile={pdf}\n\t\t\trenderMode=\"canvas\"\n\t\t\tonLoadSuccess={(pdfProxy) => {\n\t\t\t\tdispatch(actions.totalPages(pdfProxy.numPages));\n\t\t\t\tif (pdf) cachePageDimensions(pdfProxy, pdfName as string, pdfNameRef, setPageDimensions);\n\t\t\t\tpdfProxyRef.current = pdfProxy;\n\t\t\t}}\n\t\t\tonItemClick={({ pageNumber }) => {\n\t\t\t\tdispatch(actions.pageUpdate({ page: parseInt(pageNumber), shouldScroll: true }));\n\t\t\t}}\n\t\t>\n\t\t\t{cachedPageDimensions && pdfNameRef.current === pdfName && (\n\t\t\t\t<RiverMaterialPairList\n\t\t\t\t\tpdfProxyRef={pdfProxyRef}\n\t\t\t\t\tcachedPageDimensions={cachedPageDimensions}\n\t\t\t\t></RiverMaterialPairList>\n\t\t\t)}\n\t\t</Document>\n\t);\n};\n","import { RefObject } from \"react\";\nimport { pdfjs } from \"react-pdf\";\nimport { CachedPageDimensions } from \"./PDFDocument\";\n\n//TODO: use more robust method than pdfName to differentiate pdfs in this abort\n//TODO: test if this abort actually works? once the function was entered,\n// is it guaranteed that it will finish before other changes?\nexport const cachePageDimensions = (\n\tpdfProxy: pdfjs.PDFDocumentProxy,\n\tpdfName: string,\n\tpdfNameRef: RefObject<string | null | undefined>,\n\tsetPageDimensions: (dims: CachedPageDimensions) => void\n) => {\n\tconst promises = Array.from({ length: pdfProxy.numPages }, (_, i) => i + 1).map((pageNumber) =>\n\t\tpdfProxy.getPage(pageNumber)\n\t);\n\n\t// Assuming all pages may have different heights. Otherwise we can just\n\t// load the first page and use its height for determining all the row\n\t// heights.\n\tPromise.all((promises as unknown) as Promise<any>[]).then((pages: pdfjs.PDFPageProxy[]) => {\n\t\t// a different pdf was loaded while these promises where executing\n\t\tif (pdfName !== pdfNameRef.current) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst pageDimensions = new Map();\n\n\t\tconst scale = 1;\n\t\tfor (const page of pages) {\n\t\t\tconst w = page.view[2] * scale;\n\t\t\tconst h = page.view[3] * scale;\n\n\t\t\t// react-pdf 4.0.5 types are incorrect, _pageIndex is correct and not just pageIndex\n\t\t\tpageDimensions.set(((page as unknown) as { _pageIndex: number })._pageIndex + 1, [w, h]);\n\t\t}\n\n\t\tsetPageDimensions(pageDimensions);\n\t});\n};\n","import { Grid } from \"@material-ui/core\";\nimport React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { incrementer } from \"../../../shared/utils\";\nimport river from \"../../river\";\nimport { getNonEmptyRiverIDsSorted } from \"../../river/selectors\";\nimport { getTopOffset, getWindowMeasurements } from \"../selectors\";\n\nconst ExplorerRiver = ({ riverID }: { riverID: string }) => {\n\tconst windowMeasurements = useSelector(getWindowMeasurements);\n\tconst topOffset = useSelector(getTopOffset);\n\n\treturn windowMeasurements && topOffset ? (\n\t\t<div style={{ marginBottom: \"8px\", marginTop: \"4px\" }}>\n\t\t\t<river.components.CardRiver\n\t\t\t\triverID={riverID}\n\t\t\t\tmaterialHeight={(windowMeasurements?.height as number) - topOffset - 10}\n\t\t\t></river.components.CardRiver>\n\t\t</div>\n\t) : null;\n};\n\nexport const RiverExplorer = () => {\n\tconst riverIDs = useSelector(getNonEmptyRiverIDsSorted);\n\tconst increment = incrementer();\n\treturn (\n\t\t<Grid container justify=\"space-evenly\" alignItems=\"center\" spacing={2} style={{ width: \"100%\", height: \"100%\" }}>\n\t\t\t{riverIDs.map((id) => (\n\t\t\t\t<Grid item xs={4} key={increment()}>\n\t\t\t\t\t<river.components.SwitchActiveRiver riverID={id}>\n\t\t\t\t\t\t<ExplorerRiver riverID={id}></ExplorerRiver>\n\t\t\t\t\t</river.components.SwitchActiveRiver>\n\t\t\t\t</Grid>\n\t\t\t))}\n\t\t</Grid>\n\t);\n};\n//TODO: make error-message if jump to is executed without uploading a pdf\n","import React, { Fragment } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { View } from \"../model\";\nimport { getCurrentView } from \"../selectors\";\nimport { OriginMarkedSnackbar } from \"./OriginMarkedSnackbar\";\nimport { PDFDocument } from \"./PDFDocument/PDFDocument\";\nimport { RiverExplorer } from \"./RiverExplorer\";\n\nexport const Display = () => {\n\tconst currentView = useSelector(getCurrentView);\n\n\t// TODO: cant hide the CardExplorer because the Material UI TextField does not render correctly\n\t// after hidding\n\n\t// TODO: disable CardExplorer until I fix the \"which River is active\" problem for that view\n\treturn (\n\t\t<Fragment>\n\t\t\t<div hidden={currentView !== View.RiverMaterial} style={{ width: \"100%\", height: \"100%\" }}>\n\t\t\t\t<PDFDocument></PDFDocument>\n\t\t\t\t<OriginMarkedSnackbar></OriginMarkedSnackbar>\n\t\t\t</div>\n\n\t\t\t<div hidden={currentView !== View.RiverExplorer} style={{ width: \"100%\", height: \"100%\" }}>\n\t\t\t\t<RiverExplorer></RiverExplorer>\n\t\t\t</div>\n\n\t\t\t{/* {currentView === View.CardExplorer && <CardExplorer></CardExplorer>} */}\n\t\t</Fragment>\n\t);\n};\n","import { Card, Tab, Tabs } from \"@material-ui/core\";\nimport React from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { getCurrentView } from \"../selectors\";\nimport { actions } from \"../slice\";\n\nexport const ViewTabs = () => {\n\tconst currentView = useSelector(getCurrentView);\n\tconst dispatch = useDispatch();\n\n\tconst handleChange = (_: any, newValue: number) => {\n\t\tdispatch(actions.currentView(newValue));\n\t};\n\n\treturn (\n\t\t<Card>\n\t\t\t<Tabs value={currentView} onChange={handleChange}>\n\t\t\t\t<Tab label=\"River-Material\" />\n\t\t\t\t<Tab label=\"River Explorer\" />\n\t\t\t\t{/* <Tab label=\"Card Explorer\" /> */}\n\t\t\t</Tabs>\n\t\t</Card>\n\t);\n};\n","import React from \"react\";\nimport { Button, FormControlLabel } from \"@material-ui/core\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { GreenCheckbox } from \"../../../shared/GreenCheckbox\";\nimport { getDisplayStatus } from \"../selectors\";\nimport { actions } from \"../slice\";\n\nexport const ShowMaterialCheckbox = () => {\n\tconst dispatch = useDispatch();\n\tconst displayShowState = useSelector(getDisplayStatus);\n\n\treturn (\n\t\t<Button\n\t\t\tstartIcon={\n\t\t\t\t<FormControlLabel\n\t\t\t\t\tlabel=\"Material\"\n\t\t\t\t\tcontrol={<GreenCheckbox checked={displayShowState === \"SHOW\"} />}\n\t\t\t\t></FormControlLabel>\n\t\t\t}\n\t\t\tvariant=\"contained\"\n\t\t\tcolor=\"primary\"\n\t\t\tonClick={() => {\n\t\t\t\tdispatch(actions.displayStatus(displayShowState === \"SHOW\" ? \"HIDE\" : \"SHOW\"));\n\t\t\t}}\n\t\t></Button>\n\t);\n};\n","import * as components from \"./components\";\nimport slice from \"./slice\";\nimport * as selectors from \"./selectors\";\n\nconst { reducer, actions, name } = slice;\n\nexport default { actions, components, name, reducer, selectors };\n","import { createSelector } from \"reselect\";\nimport display from \"../display\";\nimport river from \"../river\";\nimport cards from \"../cards\";\nimport { DocumentData } from \"../db/model\";\n\nexport const collectCurrentDBData: (state: any) => DocumentData | null = createSelector(\n\tdisplay.selectors.getPDFName,\n\tdisplay.selectors.getTotalPages,\n\tdisplay.selectors.getCurrentPage,\n\triver.selectors.getRiverMakeUps,\n\triver.selectors.getActiveRiverMakeUpID,\n\tcards.selectors.getCards,\n\tcards.selectors.getLastCardIDNumber,\n\t(pdfName, totalPages, currentPage, riverMakeUps, riverActiveID, cards, lastCardIDNumber) => {\n\t\treturn {\n\t\t\tname: pdfName as string,\n\t\t\ttotalPages,\n\t\t\tcurrentPage,\n\t\t\triverMakeUps,\n\t\t\triverActiveID,\n\t\t\tcards,\n\t\t\tlastCardIDNumber,\n\t\t};\n\t}\n);\n","import { createSelector } from \"reselect\";\nimport { NAME } from \"./constants\";\nimport { DocumentDB } from \"./model\";\n\nexport const getAll = (state: any): DocumentDB => state[NAME];\n\nexport const getDocumentNames = createSelector(getAll, (db) => Object.keys(db));\n\nexport const getDocumentDataSets = createSelector(getAll, (db) => Object.values(db));\n","import { CaseReducer, createSlice, PayloadAction } from \"@reduxjs/toolkit\";\nimport { DocumentData, DocumentDB } from \"./model\";\nimport { NAME } from \"./constants\";\n\nconst initialState: DocumentDB = {};\n\n//TODO: PDF-data gets saved with name, better use some hash or something (rename of document file is likely) -> use size or last-modified or smth like that instead of name\n\nconst storeInDocumentDB: CaseReducer<DocumentDB, PayloadAction<DocumentData>> = (state, { payload }) => {\n\treturn { ...state, [payload.name]: payload };\n};\n\nconst updateDocumentDB: CaseReducer<DocumentDB, PayloadAction<DocumentData[]>> = (state, { payload }) => {\n\treturn {\n\t\t...state,\n\t\t...payload.reduce((prev, dbData) => {\n\t\t\tprev[dbData.name] = dbData;\n\t\t\treturn prev;\n\t\t}, {} as DocumentDB),\n\t};\n};\n\nconst removeFromDocumentDB: CaseReducer<DocumentDB, PayloadAction<string>> = (state, { payload }) => {\n\treturn Object.fromEntries(Object.entries(state).filter((arr) => arr[0] !== payload));\n};\n\nconst dbSlice = createSlice({\n\tname: NAME,\n\tinitialState,\n\treducers: {\n\t\tstoreInDocumentDB,\n\t\tremoveFromDocumentDB,\n\t\tupdateDocumentDB,\n\t},\n});\n\nexport default dbSlice;\n","export const NAME = \"documentDB\";\n","import * as model from \"./model\";\nimport * as selectors from \"./selectors\";\nimport slice from \"./slice\";\n\nconst { actions, reducer, name } = slice;\n\nexport default { actions, name, reducer, selectors, model };\n","import { Dispatch } from \"redux\";\nimport display from \"../display\";\nimport { ActionCreators } from \"redux-undo\";\nimport { collectCurrentDBData } from \"./selectors\";\nimport cards from \"../cards\";\nimport river from \"../river\";\nimport db from \"../db\";\nimport { DocumentData } from \"../db/model\";\n\nexport const archiveCurrentDBData = () => {\n\treturn (dispatch: Dispatch, getState: Function) => {\n\t\tconst state = getState();\n\t\tconst currentPDFName = display.selectors.getPDFName(state);\n\n\t\tif (currentPDFName !== undefined) {\n\t\t\tconst dbData = collectCurrentDBData(state) as DocumentData;\n\t\t\tdispatch(db.actions.storeInDocumentDB(dbData));\n\t\t}\n\t};\n};\n\nconst fileDownload = require(\"js-file-download\");\nexport const downloadDBData = () => {\n\treturn (dispatch: any, getState: Function) => {\n\t\t//actualize the db before downloading\n\t\tdispatch(archiveCurrentDBData());\n\n\t\tconst documentDataSets = db.selectors.getDocumentDataSets(getState());\n\t\tconst localString = new Date().toLocaleString();\n\t\tfileDownload(JSON.stringify(documentDataSets), localString + \" ClayMemory.txt\");\n\t};\n};\n\nexport const resetActiveAppState = (dispatch: Dispatch) => {\n\tdispatch(cards.actions.allCardsReset());\n\tdispatch(river.actions.allRiversReset());\n};\n\nexport const replaceActiveAppState = (dispatch: Dispatch, newDocumentData: DocumentData, currentPDFName?: string) => {\n\tdispatch(\n\t\tcards.actions.allCardsReplace({ cards: newDocumentData.cards, lastCardIDNumber: newDocumentData.lastCardIDNumber })\n\t);\n\tdispatch(river.actions.allRiversReplace(newDocumentData.riverMakeUps));\n\tif (currentPDFName !== undefined && newDocumentData.name !== currentPDFName) {\n\t\t//existing pdf is unequal to loaded data, so need to replace\n\t\t//pdf is not replaced, because when we load only data, the pdf is not yet uploaded\n\t\tdispatch(\n\t\t\tdisplay.actions.existingDocumentPayload(\n\t\t\t\t(({ name, currentPage, totalPages }) => ({ pdfName: name, currentPage, totalPages }))(newDocumentData)\n\t\t\t)\n\t\t);\n\t}\n};\n\nexport const loadPDF = (pdf: File) => {\n\treturn (dispatch: Dispatch, getState: Function) => {\n\t\tconst newPDFName = pdf.name;\n\n\t\tconst state = getState();\n\t\tconst currentPDFName = display.selectors.getPDFName(state);\n\n\t\tconst documentDB = db.selectors.getAll(state);\n\n\t\t// save current data only if pdf has been uploaded / there is an active document\n\t\tif (currentPDFName !== undefined) {\n\t\t\tconst dbData = collectCurrentDBData(state) as DocumentData;\n\t\t\tdispatch(db.actions.storeInDocumentDB(dbData));\n\t\t}\n\n\t\tdispatch(display.actions.pdfUpload(pdf));\n\n\t\t// if the uploaded pdf is the same as the active one, then we just reloaded the app (lost the pdf)\n\t\t// and dont need load data (loading data would lead to overwrite because of the syncing order)\n\t\t//TODO: make the sync between documentDB and active document more explicit, right now I just sync when a PDF is uploaded\n\t\tif (newPDFName === currentPDFName) {\n\t\t\treturn;\n\t\t}\n\t\tconst newDocumentData = documentDB[newPDFName];\n\t\tif (newDocumentData) {\n\t\t\treplaceActiveAppState(dispatch, newDocumentData);\n\t\t} else {\n\t\t\tresetActiveAppState(dispatch);\n\t\t}\n\n\t\t// no undo-redo across documents\n\t\tdispatch(ActionCreators.clearHistory());\n\t};\n};\n\nexport const loadSavedDocument = (document: string) => {\n\treturn (dispatch: Dispatch, getState: Function) => {\n\t\tconst state = getState();\n\t\tconst currentPDFName = display.selectors.getPDFName(state);\n\t\tconst pdf = display.selectors.getPDF(state);\n\n\t\tconst documentDB = db.selectors.getAll(state);\n\n\t\t// save current data only if pdf has been uploaded / there is an active document\n\t\tif (currentPDFName !== undefined) {\n\t\t\tconst dbData = collectCurrentDBData(state) as DocumentData;\n\t\t\tdispatch(db.actions.storeInDocumentDB(dbData));\n\t\t}\n\n\t\tconst newDocumentData = documentDB[document];\n\t\t// if no pdf exists and no current pdf name then the document dataset was loaded into an empty ClayMemory,\n\t\t// then we need to set the name\n\t\tconst inputName = !!!pdf && !!!currentPDFName ? \"\" : currentPDFName;\n\t\treplaceActiveAppState(dispatch, newDocumentData, inputName);\n\n\t\t// no undo-redo across documents\n\t\tdispatch(ActionCreators.clearHistory());\n\t};\n};\n\nexport const deleteActiveDocument = () => {\n\treturn (dispatch: Dispatch, getState: Function) => {\n\t\tresetActiveAppState(dispatch);\n\n\t\t// keeping the undo history leads to weird edge cases and makes no sense\n\t\tdispatch(ActionCreators.clearHistory());\n\n\t\tconst state = getState();\n\t\tconst activeDocument = display.selectors.getPDFName(state);\n\t\t// note: no undo of this\n\t\tdispatch(db.actions.removeFromDocumentDB(activeDocument as string));\n\t};\n};\n\nexport const deleteDocument = (document: string) => {\n\treturn (dispatch: any, getState: Function) => {\n\t\tconst state = getState();\n\t\tconst activeDocument = display.selectors.getPDFName(state);\n\t\tif (activeDocument && activeDocument === document) {\n\t\t\tdispatch(deleteActiveDocument());\n\t\t} else {\n\t\t\t// note: no undo of this\n\t\t\tdispatch(db.actions.removeFromDocumentDB(document));\n\t\t}\n\t};\n};\n","import { useDispatch } from \"react-redux\";\nimport React, { useState } from \"react\";\nimport {\n\tIconButton,\n\tTooltip,\n\tDialog,\n\tDialogTitle,\n\tDialogContent,\n\tDialogContentText,\n\tDialogActions,\n\tButton,\n} from \"@material-ui/core\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport text from \"../../../text\";\nimport { deleteDocument } from \"../../actions\";\n\nconst DeleteDocumentDialogAlert = ({\n\tdocument,\n\thandleClose,\n\topen,\n}: {\n\tdocument: string;\n\thandleClose: () => void;\n\topen: boolean;\n}) => {\n\tconst dispatch = useDispatch();\n\n\treturn (\n\t\t<Dialog\n\t\t\topen={open}\n\t\t\tonClose={handleClose}\n\t\t\taria-labelledby=\"alert-dialog-title\"\n\t\t\taria-describedby=\"alert-dialog-description\"\n\t\t>\n\t\t\t<DialogTitle id=\"alert-dialog-title\">{\"Delete \" + document + \" and all associated card data?\"}</DialogTitle>\n\t\t\t<DialogContent>\n\t\t\t\t<DialogContentText id=\"alert-dialog-description\">This change can not be undone.</DialogContentText>\n\t\t\t</DialogContent>\n\t\t\t<DialogActions>\n\t\t\t\t<Button onClick={handleClose} color=\"primary\">\n\t\t\t\t\tAbort\n\t\t\t\t</Button>\n\t\t\t\t<Button\n\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\tdispatch(deleteDocument(document));\n\t\t\t\t\t\thandleClose();\n\t\t\t\t\t}}\n\t\t\t\t\tcolor=\"primary\"\n\t\t\t\t\tautoFocus\n\t\t\t\t>\n\t\t\t\t\tDelete document and associated card data\n\t\t\t\t</Button>\n\t\t\t</DialogActions>\n\t\t</Dialog>\n\t);\n};\n\n//TODO: deleting the active document leads only to reset it, not really delete it\nexport const DeleteDocumentButton = ({ document }: { document: string }) => {\n\tconst [open, setOpen] = useState(false);\n\n\tconst handleClose = () => {\n\t\tsetOpen(false);\n\t};\n\treturn (\n\t\t<div>\n\t\t\t<Tooltip\n\t\t\t\ttitle={text.constants.deleteDocumentTooltip}\n\t\t\t\tenterDelay={text.constants.defaultEnterDelay}\n\t\t\t\tenterNextDelay={text.constants.defaultEnterNextDelay}\n\t\t\t>\n\t\t\t\t<IconButton\n\t\t\t\t\ttype=\"button\"\n\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\tsetOpen(true);\n\t\t\t\t\t}}\n\t\t\t\t>\n\t\t\t\t\t<DeleteIcon fontSize=\"small\"></DeleteIcon>\n\t\t\t\t</IconButton>\n\t\t\t</Tooltip>\n\t\t\t<DeleteDocumentDialogAlert document={document} open={open} handleClose={handleClose}></DeleteDocumentDialogAlert>\n\t\t</div>\n\t);\n};\n","import { useSelector, useDispatch } from \"react-redux\";\nimport React, { ChangeEvent, Fragment, useRef, MutableRefObject, useState } from \"react\";\nimport {\n\tMenuItem,\n\tButton,\n\tDialogActions,\n\tDialog,\n\tDialogContent,\n\tDialogContentText,\n\tDialogTitle,\n} from \"@material-ui/core\";\nimport display from \"../../../display\";\nimport PublishIcon from \"@material-ui/icons/Publish\";\nimport river from \"../../../river\";\nimport cards from \"../../../cards\";\nimport db from \"../../../db\";\nimport { ActionCreators } from \"redux-undo\";\nimport { DocumentData } from \"../../../db/model\";\n\nexport const InputDataSets = ({ handleClose, label }: any) => {\n\tconst ref: MutableRefObject<null | HTMLInputElement> = useRef(null);\n\n\tconst [file, setFile] = useState<File | undefined>();\n\n\tconst handleDialogClose = () => {\n\t\thandleClose();\n\t\tsetFile(undefined);\n\t};\n\n\treturn (\n\t\t<Fragment>\n\t\t\t<MenuItem\n\t\t\t\tonClick={() => {\n\t\t\t\t\t(ref.current as HTMLInputElement).click();\n\t\t\t\t}}\n\t\t\t>\n\t\t\t\t<Button variant=\"contained\" color=\"primary\" disableElevation startIcon={<PublishIcon></PublishIcon>}>\n\t\t\t\t\t{label}\n\t\t\t\t</Button>\n\t\t\t</MenuItem>\n\t\t\t<input\n\t\t\t\tref={ref}\n\t\t\t\tstyle={{ display: \"none\" }}\n\t\t\t\tonChange={(event: ChangeEvent<HTMLInputElement>) => {\n\t\t\t\t\t// fun fact: uploading a file with the same file-name does not trigger this event\n\t\t\t\t\tconst files = event.target.files;\n\t\t\t\t\tconst file = files ? files[0] : null;\n\t\t\t\t\tif (file) {\n\t\t\t\t\t\tsetFile(file);\n\t\t\t\t\t}\n\t\t\t\t}}\n\t\t\t\ttype=\"file\"\n\t\t\t\taccept=\".txt\"\n\t\t\t/>\n\t\t\t<LoadDataSetsDialogAlert\n\t\t\t\thandleClose={handleDialogClose}\n\t\t\t\topen={!!file}\n\t\t\t\tfile={(file as unknown) as File}\n\t\t\t></LoadDataSetsDialogAlert>\n\t\t</Fragment>\n\t);\n};\n\nconst LoadDataSetsDialogAlert = ({\n\thandleClose,\n\topen,\n\tfile,\n}: {\n\thandleClose: () => void;\n\topen: boolean;\n\tfile: File;\n}) => {\n\tconst dispatch = useDispatch();\n\tconst activeDocument = useSelector(display.selectors.getPDFName);\n\tconsole.log(open, file);\n\treturn (\n\t\t<Dialog\n\t\t\topen={open}\n\t\t\tonClose={handleClose}\n\t\t\taria-labelledby=\"alert-dialog-title\"\n\t\t\taria-describedby=\"alert-dialog-description\"\n\t\t>\n\t\t\t<DialogTitle id=\"alert-dialog-title\">{\"Load the uploaded dataset?\"}</DialogTitle>\n\t\t\t<DialogContent>\n\t\t\t\t<DialogContentText id=\"alert-dialog-description\">\n\t\t\t\t\tThis overwrites existing data of the uploaded document-datasets and can not be undone.\n\t\t\t\t</DialogContentText>\n\t\t\t</DialogContent>\n\t\t\t<DialogActions>\n\t\t\t\t<Button onClick={handleClose} color=\"primary\">\n\t\t\t\t\tAbort\n\t\t\t\t</Button>\n\t\t\t\t<Button\n\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\tconst reader = new FileReader();\n\t\t\t\t\t\treader.readAsText(file);\n\t\t\t\t\t\treader.onload = () => {\n\t\t\t\t\t\t\t//TODO: sanitize, escape os new line difference, prepare multimedia cards\n\t\t\t\t\t\t\t//TODO: merge same name-pdfs and think about collision in general\n\t\t\t\t\t\t\t//TODO: merge uploaded state with current-one and dont overwrite\n\t\t\t\t\t\t\tconst uploadedDataSets = JSON.parse(reader.result as string) as DocumentData[];\n\t\t\t\t\t\t\t// if the uploaded dataset corresponds to the current document, overwrite current with uploaded\n\t\t\t\t\t\t\tconst foundDataSet = (uploadedDataSets as DocumentData[]).find(\n\t\t\t\t\t\t\t\t(dbData) => dbData.name === activeDocument\n\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\tdispatch(db.actions.updateDocumentDB(uploadedDataSets));\n\t\t\t\t\t\t\tif (foundDataSet) {\n\t\t\t\t\t\t\t\tdispatch(ActionCreators.clearHistory());\n\t\t\t\t\t\t\t\tdispatch(river.actions.allRiversReplace(foundDataSet.riverMakeUps));\n\t\t\t\t\t\t\t\tdispatch(\n\t\t\t\t\t\t\t\t\tcards.actions.allCardsReplace({\n\t\t\t\t\t\t\t\t\t\tcards: foundDataSet.cards,\n\t\t\t\t\t\t\t\t\t\tlastCardIDNumber: foundDataSet.lastCardIDNumber,\n\t\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\thandleClose();\n\t\t\t\t\t\t};\n\t\t\t\t\t}}\n\t\t\t\t\tcolor=\"primary\"\n\t\t\t\t\tautoFocus\n\t\t\t\t>\n\t\t\t\t\tLoad datasets and possibly overwrite existing data\n\t\t\t\t</Button>\n\t\t\t</DialogActions>\n\t\t</Dialog>\n\t);\n};\n","import { useDispatch } from \"react-redux\";\nimport React, { ChangeEvent, Fragment, useRef, MutableRefObject } from \"react\";\nimport { MenuItem, Button } from \"@material-ui/core\";\nimport { loadPDF } from \"../../actions\";\nimport InsertDriveFileIcon from \"@material-ui/icons/InsertDriveFile\";\n//TODO: have way to merge two document-workspaces\nexport const InputDocument = ({ handleClose, label }: any) => {\n\tconst dispatch = useDispatch();\n\n\tconst ref: MutableRefObject<null | HTMLInputElement> = useRef(null);\n\n\treturn (\n\t\t<Fragment>\n\t\t\t<MenuItem\n\t\t\t\tonClick={() => {\n\t\t\t\t\t(ref.current as HTMLInputElement).click();\n\t\t\t\t}}\n\t\t\t>\n\t\t\t\t<Button\n\t\t\t\t\tvariant=\"contained\"\n\t\t\t\t\tcolor=\"primary\"\n\t\t\t\t\tdisableElevation\n\t\t\t\t\tstartIcon={<InsertDriveFileIcon></InsertDriveFileIcon>}\n\t\t\t\t>\n\t\t\t\t\t{label}\n\t\t\t\t</Button>\n\t\t\t</MenuItem>\n\t\t\t<input\n\t\t\t\tref={ref}\n\t\t\t\tstyle={{ display: \"none\" }}\n\t\t\t\tonChange={(event: ChangeEvent<HTMLInputElement>) => {\n\t\t\t\t\tconst files = event.target.files;\n\t\t\t\t\tconst pdf = files ? files[0] : null;\n\t\t\t\t\tif (pdf) {\n\t\t\t\t\t\tdispatch(loadPDF(pdf));\n\t\t\t\t\t}\n\t\t\t\t\thandleClose();\n\t\t\t\t}}\n\t\t\t\ttype=\"file\"\n\t\t\t\taccept=\".pdf\"\n\t\t\t/>\n\t\t</Fragment>\n\t);\n};\n","import { useDispatch } from \"react-redux\";\nimport React from \"react\";\nimport { IconButton, Tooltip } from \"@material-ui/core\";\nimport ImportContactsIcon from \"@material-ui/icons/ImportContacts\";\nimport { loadSavedDocument } from \"../../actions\";\nimport text from \"../../../text\";\nexport const LoadDocumentDataButton = ({ document }: { document: string }) => {\n\tconst dispatch = useDispatch();\n\treturn (\n\t\t<Tooltip\n\t\t\ttitle={text.constants.loadSavedDocumentTooltip}\n\t\t\tenterDelay={text.constants.defaultEnterDelay}\n\t\t\tenterNextDelay={text.constants.defaultEnterNextDelay}\n\t\t>\n\t\t\t<IconButton\n\t\t\t\ttype=\"button\"\n\t\t\t\tonClick={() => {\n\t\t\t\t\tdispatch(loadSavedDocument(document));\n\t\t\t\t}}\n\t\t\t>\n\t\t\t\t<ImportContactsIcon fontSize=\"small\"></ImportContactsIcon>\n\t\t\t</IconButton>\n\t\t</Tooltip>\n\t);\n};\n","import React from \"react\";\nimport { Divider, Card, Grid } from \"@material-ui/core\";\nimport { DeleteDocumentButton } from \"./DeleteDocumentButton\";\nimport { LoadDocumentDataButton } from \"./LoadDocumentDataButton\";\n\nconst DocumentOptionItemButtonRow = ({ document }: { document: string }) => {\n\treturn (\n\t\t<Grid container direction=\"row\">\n\t\t\t<Grid item>\n\t\t\t\t<LoadDocumentDataButton document={document}></LoadDocumentDataButton>\n\t\t\t</Grid>\n\n\t\t\t<Grid item>\n\t\t\t\t<Divider orientation=\"vertical\"></Divider>\n\t\t\t</Grid>\n\n\t\t\t<Grid item>\n\t\t\t\t<DeleteDocumentButton document={document}></DeleteDocumentButton>\n\t\t\t</Grid>\n\t\t</Grid>\n\t);\n};\n\nexport const DocumentOptionItem = ({ document }: { document: string }) => {\n\treturn (\n\t\t<Grid container direction=\"row\" justify=\"space-between\" alignItems=\"center\" spacing={1}>\n\t\t\t<Grid item>{document.replace(\".pdf\", \"\")}</Grid>\n\n\t\t\t<Grid item>\n\t\t\t\t<Card variant=\"outlined\">\n\t\t\t\t\t<DocumentOptionItemButtonRow document={document}></DocumentOptionItemButtonRow>\n\t\t\t\t</Card>\n\t\t\t</Grid>\n\t\t</Grid>\n\t);\n};\n","import { useSelector, useDispatch } from \"react-redux\";\nimport React from \"react\";\nimport { Divider, Menu, MenuItem, IconButton, Typography, Card, Button, Grid } from \"@material-ui/core\";\nimport { downloadDBData } from \"../../actions\";\nimport MoreVertIcon from \"@material-ui/icons/MoreVert\";\nimport display from \"../../../display\";\nimport db from \"../../../db\";\nimport GetAppIcon from \"@material-ui/icons/GetApp\";\nimport { DeleteDocumentButton } from \"./DeleteDocumentButton\";\nimport text from \"../../../text\";\nimport { incrementer } from \"../../../../shared/utils\";\nimport { InputDataSets } from \"./InputDataSets\";\nimport { InputDocument } from \"./InputDocument\";\nimport { DocumentOptionItem } from \"./DocumentOptionItem\";\n\nconst ActiveDocumentOptionItem = ({ document }: { document: string }) => {\n\treturn (\n\t\t<Grid container direction=\"row\" justify=\"space-between\" alignItems=\"center\" spacing={1}>\n\t\t\t<Grid item>{document.replace(\".pdf\", \"\")}</Grid>\n\n\t\t\t<Grid item>\n\t\t\t\t<Card variant=\"outlined\">\n\t\t\t\t\t<DeleteDocumentButton document={document}></DeleteDocumentButton>\n\t\t\t\t</Card>\n\t\t\t</Grid>\n\t\t</Grid>\n\t);\n};\n\nexport const Options = () => {\n\tconst activeDocument = useSelector(display.selectors.getPDFName);\n\tconst documents = useSelector(db.selectors.getDocumentNames).filter((doc) => doc !== activeDocument);\n\n\tconst [anchorEl, setAnchorEl] = React.useState<null | HTMLElement>(null);\n\n\tconst handleClick = (event: React.MouseEvent<HTMLButtonElement>) => {\n\t\tsetAnchorEl(event.currentTarget);\n\t};\n\n\tconst handleClose = () => {\n\t\tsetAnchorEl(null);\n\t};\n\n\tconst dispatch = useDispatch();\n\n\tconst increment = incrementer();\n\n\treturn (\n\t\t<div>\n\t\t\t<IconButton type=\"button\" onClick={handleClick}>\n\t\t\t\t<MoreVertIcon></MoreVertIcon>\n\t\t\t</IconButton>\n\t\t\t<Menu\n\t\t\t\tid=\"simple-menu\"\n\t\t\t\tanchorEl={anchorEl}\n\t\t\t\tkeepMounted\n\t\t\t\topen={Boolean(anchorEl)}\n\t\t\t\tonClose={handleClose}\n\t\t\t\tMenuListProps={{ style: { paddingLeft: \"8px\", paddingRight: \"8px\" } }}\n\t\t\t>\n\t\t\t\t{activeDocument && [\n\t\t\t\t\t<Typography key={increment()} component={\"span\"} variant=\"h6\">\n\t\t\t\t\t\t{text.constants.activeDocumentText}\n\t\t\t\t\t</Typography>,\n\t\t\t\t\t<ActiveDocumentOptionItem key={increment()} document={activeDocument}></ActiveDocumentOptionItem>,\n\t\t\t\t\t<Divider key={increment()} style={{ marginTop: \"6px\" }}></Divider>,\n\t\t\t\t]}\n\t\t\t\t{documents.length > 0 && [\n\t\t\t\t\t<Typography key={increment()} component={\"span\"} variant=\"h6\">\n\t\t\t\t\t\t{text.constants.existingDataText}\n\t\t\t\t\t</Typography>,\n\t\t\t\t\t<Typography key={increment()} component={\"span\"}>\n\t\t\t\t\t\t<ul style={{ listStyleType: \"square\" }}>\n\t\t\t\t\t\t\t{documents.map((document) =>\n\t\t\t\t\t\t\t\tdocument ? (\n\t\t\t\t\t\t\t\t\t<li key={increment()}>\n\t\t\t\t\t\t\t\t\t\t<DocumentOptionItem document={document} key={increment()}></DocumentOptionItem>\n\t\t\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t\t\t) : null\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t</ul>\n\t\t\t\t\t</Typography>,\n\t\t\t\t\t<Divider key={increment()} style={{ marginTop: \"6px\" }} />,\n\t\t\t\t]}\n\t\t\t\t<InputDocument handleClose={handleClose} label={\"Load document\"}></InputDocument>\n\t\t\t\t<Divider />\n\t\t\t\t<MenuItem\n\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\tdispatch(downloadDBData());\n\t\t\t\t\t\thandleClose();\n\t\t\t\t\t}}\n\t\t\t\t>\n\t\t\t\t\t<Button variant=\"contained\" color=\"primary\" disableElevation startIcon={<GetAppIcon></GetAppIcon>}>\n\t\t\t\t\t\t{text.constants.downloadDatasetsText}\n\t\t\t\t\t</Button>\n\t\t\t\t</MenuItem>\n\t\t\t\t<Divider />\n\t\t\t\t<InputDataSets handleClose={handleClose} label={text.constants.uploadDatasetsText}></InputDataSets>\n\t\t\t</Menu>\n\t\t</div>\n\t);\n};\n","import React, { useState } from \"react\";\nimport SearchBar from \"material-ui-search-bar\";\nimport river from \"../../river\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Grid } from \"@material-ui/core\";\nimport display from \"../../display\";\n\n//TODO: react-pdf alignment is broken for some pdfs and generally for non-body text,\n// seems to be connected to choosing the wrong font\n// font is chosen per page not per item (e.g. body-font for heading/cursive)\n// needs to be fixed before making search\n// otherwise coloring findings not possible / good enough\n\n//TODO: make search for PDF (right now this would need some work to find the correct text-node and partially color it)\n// https://github.com/wojtekmaj/react-pdf/issues/212\n// counter of found words\n// count also in PDF\n// PDFPageProxy\n// getTextContent\n// if not rendered\n// count via Proxy\n// if rendered count via CustomRenderer\n// two dicts to hold which one\n// make window with next/last found\n// current renderer: multiline matches is not support / matches that cross textItems\n// strg +f should jump to the searchbox? Only if I replace the search fully\n// upper / lower case\n\nexport const ClayMemorySearchBar = () => {\n\tconst dispatch = useDispatch();\n\n\tconst contentString = useSelector(river.selectors.getRiverContentFilter);\n\n\tconst [state, setState] = useState(contentString);\n\n\tconst [searchFocus, setSearchFocus] = useState(\"cards\");\n\n\tconst onChangeCards = (newValue: string) => {\n\t\t// auto-reset on empty\n\t\tif (newValue === \"\") dispatch(river.actions.riverContentFilter(\"\"));\n\t\tsetState(newValue);\n\t};\n\tconst onCancelSearchCards = () => {\n\t\tdispatch(river.actions.riverContentFilter(\"\"));\n\t};\n\tconst onRequestSearchCards = () => dispatch(river.actions.riverContentFilter(state));\n\n\tconst onChangeDocument = (newValue: string) => {\n\t\t// auto-reset on empty\n\t\tif (newValue === \"\") dispatch(display.actions.documentSearch(\"\"));\n\t\tsetState(newValue);\n\t};\n\tconst onCancelSearchDocument = () => {\n\t\tdispatch(display.actions.documentSearch(\"\"));\n\t};\n\tconst onRequestSearchDocument = () => dispatch(display.actions.documentSearch(state));\n\n\tconst onChange = searchFocus === \"cards\" ? onChangeCards : onChangeDocument;\n\tconst onCancelSearch = searchFocus === \"cards\" ? onCancelSearchCards : onCancelSearchDocument;\n\tconst onRequestSearch = searchFocus === \"cards\" ? onRequestSearchCards : onRequestSearchDocument;\n\n\tconst chooseFocus = (chosenFocus: string) => {\n\t\tsetSearchFocus(chosenFocus);\n\t\tif (chosenFocus === \"cards\") {\n\t\t\tonCancelSearchDocument();\n\t\t} else {\n\t\t\tonCancelSearchCards();\n\t\t}\n\t\tsetState(\"\");\n\t};\n\n\t//TODO: search in other rivers/same river when composing to show similar cards (like in the Anki Addon)\n\treturn (\n\t\t<Grid container direction=\"row\" alignItems=\"center\" spacing={1}>\n\t\t\t{/* <Grid item>\n\t\t\t\t<Select\n\t\t\t\t\tvariant=\"outlined\"\n\t\t\t\t\tcolor=\"secondary\"\n\t\t\t\t\tnative\n\t\t\t\t\tvalue={searchFocus === \"cards\" ? \"Filter cards\" : \"Search document\"}\n\t\t\t\t\tonChange={(\n\t\t\t\t\t\tevent: React.ChangeEvent<{\n\t\t\t\t\t\t\tname?: string | undefined;\n\t\t\t\t\t\t\tvalue: unknown;\n\t\t\t\t\t\t}>\n\t\t\t\t\t) => {\n\t\t\t\t\t\tchooseFocus(event.target.value === \"Search document\" ? \"document\" : \"cards\");\n\t\t\t\t\t}}\n\t\t\t\t>\n\t\t\t\t\t<option>Filter cards</option>\n\t\t\t\t\t<option>Search document</option>\n\t\t\t\t</Select>\n\t\t\t</Grid> */}\n\t\t\t<Grid item>\n\t\t\t\t<SearchBar\n\t\t\t\t\tvalue={state}\n\t\t\t\t\tplaceholder={searchFocus === \"cards\" ? \"Filter cards\" : \"Search document\"}\n\t\t\t\t\tonChange={onChange}\n\t\t\t\t\tonCancelSearch={onCancelSearch}\n\t\t\t\t\tonRequestSearch={onRequestSearch}\n\t\t\t\t\tcancelOnEscape={true}\n\t\t\t\t/>\n\t\t\t</Grid>\n\t\t</Grid>\n\t);\n};\n","import React from \"react\";\nimport { IconButton, Card, Divider, Grid, Tooltip } from \"@material-ui/core\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport UndoIcon from \"@material-ui/icons/Undo\";\nimport RedoIcon from \"@material-ui/icons/Redo\";\nimport text from \"../../text\";\nimport { ActionCreators } from \"redux-undo\";\nimport cards from \"../../cards\";\n\nconst UndoButton = () => {\n\tconst dispatch = useDispatch();\n\tconst cardsHasPast = useSelector(cards.selectors.hasPast);\n\n\t//tooltip needs non-disabled child component\n\treturn (\n\t\t<Tooltip\n\t\t\ttitle={text.constants.undoTooltip}\n\t\t\tenterDelay={text.constants.defaultEnterDelay}\n\t\t\tenterNextDelay={text.constants.defaultEnterNextDelay}\n\t\t>\n\t\t\t<span>\n\t\t\t\t<IconButton\n\t\t\t\t\ttype=\"button\"\n\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\tdispatch(ActionCreators.undo());\n\t\t\t\t\t}}\n\t\t\t\t\tdisabled={!cardsHasPast}\n\t\t\t\t>\n\t\t\t\t\t<UndoIcon></UndoIcon>\n\t\t\t\t</IconButton>\n\t\t\t</span>\n\t\t</Tooltip>\n\t);\n};\nconst RedoButton = () => {\n\tconst dispatch = useDispatch();\n\tconst cardsHasFuture = useSelector(cards.selectors.hasFuture);\n\treturn (\n\t\t<Tooltip\n\t\t\ttitle={text.constants.redoTooltip}\n\t\t\tenterDelay={text.constants.defaultEnterDelay}\n\t\t\tenterNextDelay={text.constants.defaultEnterNextDelay}\n\t\t>\n\t\t\t<span>\n\t\t\t\t<IconButton\n\t\t\t\t\ttype=\"button\"\n\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\tdispatch(ActionCreators.redo());\n\t\t\t\t\t}}\n\t\t\t\t\tdisabled={!cardsHasFuture}\n\t\t\t\t>\n\t\t\t\t\t<RedoIcon></RedoIcon>\n\t\t\t\t</IconButton>\n\t\t\t</span>\n\t\t</Tooltip>\n\t);\n};\n\nexport const UndoRedoCard = () => {\n\treturn (\n\t\t<Card variant=\"outlined\">\n\t\t\t<Grid container direction=\"row\">\n\t\t\t\t<Grid item>\n\t\t\t\t\t<UndoButton></UndoButton>\n\t\t\t\t</Grid>\n\t\t\t\t<Grid item>\n\t\t\t\t\t<Divider orientation=\"vertical\"></Divider>\n\t\t\t\t</Grid>\n\t\t\t\t<Grid item>\n\t\t\t\t\t<RedoButton></RedoButton>\n\t\t\t\t</Grid>\n\t\t\t</Grid>\n\t\t</Card>\n\t);\n};\n","import river from \"../../river\";\nimport React from \"react\";\nimport { IconButton, Menu, Typography, Grid, Card } from \"@material-ui/core\";\nimport VisibilityIcon from \"@material-ui/icons/Visibility\";\nimport display from \"../../display\";\n\nexport const ShowHideButton = () => {\n\tconst [anchorEl, setAnchorEl] = React.useState<null | HTMLElement>(null);\n\n\tconst handleClick = (event: React.MouseEvent<HTMLButtonElement>) => {\n\t\tsetAnchorEl(event.currentTarget);\n\t};\n\n\tconst handleClose = () => {\n\t\tsetAnchorEl(null);\n\t};\n\n\treturn (\n\t\t<div>\n\t\t\t<IconButton type=\"button\" onClick={handleClick}>\n\t\t\t\t<VisibilityIcon></VisibilityIcon>\n\t\t\t</IconButton>\n\t\t\t<Menu\n\t\t\t\tanchorEl={anchorEl}\n\t\t\t\tkeepMounted\n\t\t\t\topen={Boolean(anchorEl)}\n\t\t\t\tonClose={handleClose}\n\t\t\t\tMenuListProps={{ style: { paddingLeft: \"8px\", paddingRight: \"8px\" } }}\n\t\t\t>\n\t\t\t\t<Typography variant=\"h6\">Show:</Typography>\n\t\t\t\t<Grid container direction=\"row\" justify=\"space-between\" spacing={1}>\n\t\t\t\t\t<Grid item>\n\t\t\t\t\t\t<Card variant=\"outlined\" style={{ paddingLeft: \"4px\", paddingRight: \"4px\" }}>\n\t\t\t\t\t\t\t<river.components.RiverContentFormGroup></river.components.RiverContentFormGroup>\n\t\t\t\t\t\t</Card>\n\t\t\t\t\t</Grid>\n\n\t\t\t\t\t<Grid item>\n\t\t\t\t\t\t<Card variant=\"outlined\" style={{ padding: \"4px\" }}>\n\t\t\t\t\t\t\t<Grid container direction=\"column\" spacing={1}>\n\t\t\t\t\t\t\t\t<Grid item>\n\t\t\t\t\t\t\t\t\t<river.components.ShowRiverCheckbox></river.components.ShowRiverCheckbox>\n\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t\t<Grid item>\n\t\t\t\t\t\t\t\t\t<display.components.ShowMaterialCheckbox></display.components.ShowMaterialCheckbox>\n\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t</Card>\n\t\t\t\t\t</Grid>\n\t\t\t\t</Grid>\n\t\t\t</Menu>\n\t\t</div>\n\t);\n};\n","import display from \"../../display\";\nimport React, { useLayoutEffect, useRef } from \"react\";\nimport { AppBar, Toolbar, Grid, Typography } from \"@material-ui/core\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Options } from \"./Options/Options\";\nimport { ClayMemorySearchBar } from \"./ClayMemorySearchBar\";\nimport { UndoRedoCard } from \"./UndoRedoButtons\";\nimport { ShowHideButton } from \"./ShowHideButton\";\n\n//TODO: download/load csv for Anki\nexport const ControlBar = () => {\n\tconst materialName = useSelector(display.selectors.getPDFName);\n\tconst offset = useSelector(display.selectors.getTopOffset);\n\tconst ref = useRef<null | HTMLDivElement>(null);\n\n\tconst dispatch = useDispatch();\n\n\tuseLayoutEffect(() => {\n\t\tif (ref.current) {\n\t\t\tconst currentBottom = ref.current.getBoundingClientRect().bottom;\n\t\t\tif (currentBottom !== offset) dispatch(display.actions.topOffset(currentBottom));\n\t\t}\n\t}, [ref, dispatch, offset]);\n\n\treturn (\n\t\t<display.components.PageKeyboardControl>\n\t\t\t<AppBar ref={ref} position=\"sticky\">\n\t\t\t\t<Toolbar variant=\"regular\" disableGutters>\n\t\t\t\t\t<Grid container direction=\"row\" alignItems=\"center\" justify=\"space-between\">\n\t\t\t\t\t\t<Grid item xs={6}>\n\t\t\t\t\t\t\t<Grid container direction=\"row\" alignItems=\"center\" spacing={1} style={{ paddingLeft: \"4px\" }}>\n\t\t\t\t\t\t\t\t<Grid item style={{ maxWidth: \"15%\" }}>\n\t\t\t\t\t\t\t\t\t<display.components.PageChooser></display.components.PageChooser>\n\t\t\t\t\t\t\t\t</Grid>\n\n\t\t\t\t\t\t\t\t<Grid item>\n\t\t\t\t\t\t\t\t\t<display.components.PageNavigation></display.components.PageNavigation>\n\t\t\t\t\t\t\t\t</Grid>\n\n\t\t\t\t\t\t\t\t<Grid item>\n\t\t\t\t\t\t\t\t\t<UndoRedoCard></UndoRedoCard>\n\t\t\t\t\t\t\t\t</Grid>\n\n\t\t\t\t\t\t\t\t<Grid item>\n\t\t\t\t\t\t\t\t\t<display.components.ViewTabs></display.components.ViewTabs>\n\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t</Grid>\n\n\t\t\t\t\t\t<Grid item xs={2}>\n\t\t\t\t\t\t\t<Grid container justify=\"center\">\n\t\t\t\t\t\t\t\t<Grid item style={{ overflowX: \"auto\" }}>\n\t\t\t\t\t\t\t\t\t<Typography variant=\"subtitle1\">{materialName?.replace(\".pdf\", \"\")}</Typography>\n\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t</Grid>\n\n\t\t\t\t\t\t<Grid item xs={4}>\n\t\t\t\t\t\t\t<Grid container direction=\"row\" justify=\"flex-end\" alignItems=\"center\">\n\t\t\t\t\t\t\t\t<Grid item>\n\t\t\t\t\t\t\t\t\t<ClayMemorySearchBar></ClayMemorySearchBar>\n\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t\t<Grid item>\n\t\t\t\t\t\t\t\t\t<ShowHideButton></ShowHideButton>\n\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t\t<Grid item>\n\t\t\t\t\t\t\t\t\t<Options></Options>\n\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t</Grid>\n\t\t\t\t\t</Grid>\n\t\t\t\t</Toolbar>\n\t\t\t</AppBar>\n\t\t</display.components.PageKeyboardControl>\n\t);\n};\n","import * as actions from \"./actions\";\nimport * as components from \"./components\";\nimport * as selectors from \"./selectors\";\n\nexport default { actions, components, selectors };\n","import React from \"react\";\nimport Grid from \"@material-ui/core/Grid\";\nimport control from \"../modules/control\";\nimport selection from \"../modules/selection\";\nimport display from \"../modules/display\";\n\nexport function ReaderScene() {\n\treturn (\n\t\t<div>\n\t\t\t<display.components.HTMLElementMeasurer></display.components.HTMLElementMeasurer>\n\t\t\t<Grid\n\t\t\t\tcontainer\n\t\t\t\tjustify=\"center\"\n\t\t\t\tdirection=\"column\"\n\t\t\t\talignItems=\"stretch\"\n\t\t\t\tstyle={{ height: \"100%\", width: \"100%\" }}\n\t\t\t>\n\t\t\t\t<Grid item>\n\t\t\t\t\t<control.components.ControlBar></control.components.ControlBar>\n\t\t\t\t</Grid>\n\n\t\t\t\t<Grid item>\n\t\t\t\t\t<display.components.Display></display.components.Display>\n\t\t\t\t</Grid>\n\t\t\t</Grid>\n\t\t\t<selection.components.ContextMenu></selection.components.ContextMenu>\n\t\t\t<selection.components.SelectionSnackbar></selection.components.SelectionSnackbar>\n\t\t</div>\n\t);\n}\n","import storage from \"redux-persist/lib/storage\"; // defaults to localStorage for web\nimport { createTransform } from \"redux-persist\";\nimport { DisplayData, DisplayStatus, View } from \"./modules/display/model\";\nimport display from \"./modules/display\";\nimport { SingleOrigin } from \"./modules/cards/model/origin\";\nimport { CardRiverState } from \"./modules/river/model\";\nimport river from \"./modules/river\";\n\n// to get the correct object with reselect, I added .present to all getAll that belong do undoable modules\n\n//TODO: find way to save PDF in browser, maybe manually use indexeddb and use that in transform?\n// idea: make store-field pdfAsBase64 and use thunk for async-filling the field, then when reloading, use thunk to format\n// const reader = new FileReaderSync();\n\n// function readFileAsync(file: File) {\n// \treturn new Promise((resolve) => {\n// \t\treader.onload = () => {\n// \t\t\tresolve(reader.result);\n// \t\t};\n// \t\treader.onerror = () => resolve(null);\n\n// \t\treader.readAsDataURL(file);\n// \t});\n// }\n\nconst removeDOMObjectsFromDisplayData = (inboundState: DisplayData) => {\n\tlet pdf = null;\n\t// if (inboundState.pdf) {\n\t// \tpdf = await readFileAsync(inboundState.pdf);\n\t// }\n\treturn { ...inboundState, documentRef: null, materialData: null, pdf };\n};\n\n//TODO: create persistable type for the state in model\n\nconst addDOMObjectsToDisplayData = (outboundState: {\n\tpdf: null;\n\tpdfName?: string;\n\tdisplayStatus: DisplayStatus;\n\tcurrentPage: number;\n\tscrollToPage: number | null;\n\ttotalPages: number;\n\twindowMeasurements: { width: number; height: number } | null;\n\tspanOrigin: null | SingleOrigin;\n\tdocumentSearch: string;\n\ttopOffset: number;\n\tcurrentView: View;\n}): DisplayData => {\n\treturn {\n\t\t...outboundState,\n\t\tpdf: undefined,\n\t\tspanOrigin: null,\n\t\twindowMeasurements: null,\n\t\tdocumentSearch: \"\",\n\t};\n};\n\nconst displayTransform = createTransform(\n\t(inboundState: DisplayData) => {\n\t\treturn removeDOMObjectsFromDisplayData(inboundState);\n\t},\n\t(outboundState): DisplayData => {\n\t\treturn addDOMObjectsToDisplayData(outboundState);\n\t},\n\t{ whitelist: [display.name] }\n);\n\nconst removeContentFilter = (state: CardRiverState): CardRiverState => {\n\treturn { ...state, riverContentFilter: \"\" };\n};\n\nconst riverTransform = createTransform(\n\t(inboundState: { present: CardRiverState; future: CardRiverState[]; past: CardRiverState[] }) => {\n\t\treturn inboundState;\n\t},\n\t(outboundState): { present: CardRiverState; future: CardRiverState[]; past: CardRiverState[] } => {\n\t\treturn {\n\t\t\tpresent: removeContentFilter(outboundState.present),\n\t\t\tfuture: outboundState.future.map(removeContentFilter),\n\t\t\tpast: outboundState.past.map(removeContentFilter),\n\t\t};\n\t},\n\t{ whitelist: [river.constants.NAME] }\n);\n\nexport const persistConfig = {\n\tkey: \"root\",\n\tstorage,\n\ttransforms: [displayTransform, riverTransform],\n};\n","import { createStore } from \"redux\";\nimport { applyMiddleware } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport { combineReducers } from \"redux\";\nimport river from \"./modules/river\";\nimport display from \"./modules/display\";\nimport cards from \"./modules/cards\";\nimport { persistStore, persistReducer } from \"redux-persist\";\nimport undoable, { includeAction } from \"redux-undo\";\nimport { persistConfig } from \"./persist\";\nimport db from \"./modules/db\";\nimport selection from \"./modules/selection\";\nimport { composeWithDevTools } from \"redux-devtools-extension/logOnlyInProduction\";\n\n//TODO: make limit for undo (right now its fine, if we reset on document-upload / reload)\n//TODO: make snackbar for which action is undone/redone\n\nconst undoableCardActions = [\n\tcards.actions.cardPush.type,\n\tcards.actions.cardRemove.type,\n\tcards.actions.cardReplace.type,\n\tcards.actions.cardFieldReplace.type,\n];\n\nconst rootReducer = combineReducers({\n\t[db.name]: db.reducer,\n\t[selection.name]: selection.reducer,\n\t[river.constants.NAME]: undoable(river.reducer, {\n\t\tfilter: includeAction(undoableCardActions),\n\t}),\n\t[cards.name]: undoable(cards.reducer, {\n\t\tfilter: includeAction(undoableCardActions),\n\t}),\n\t[display.name]: display.reducer,\n});\n\nconst persistedReducer = persistReducer(persistConfig, rootReducer);\n\nconst composeEnhancers = composeWithDevTools({});\nconst enhancer = composeEnhancers(applyMiddleware(thunk));\n\nexport const store = createStore(persistedReducer, enhancer);\n\nexport const persistor = persistStore(store);\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { ReaderScene } from \"./scene/ReaderScene\";\nimport { Provider } from \"react-redux\";\nimport { store, persistor } from \"./store\";\nimport { PersistGate } from \"redux-persist/es/integration/react\";\n// Load Roboto typeface\nrequire(\"typeface-roboto\");\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<Provider store={store}>\n\t\t\t<PersistGate loading={null} persistor={persistor}>\n\t\t\t\t<ReaderScene></ReaderScene>\n\t\t\t</PersistGate>\n\t\t</Provider>\n\t</React.StrictMode>,\n\tdocument.getElementById(\"root\")\n);\n"],"sourceRoot":""}