{"version":3,"sources":["modules/display/constants.ts","modules/display/actionTypes.ts","modules/display/selectors.ts","shared/utils.ts","modules/display/services/span.ts","modules/display/services/materialData.ts","modules/display/actions.ts","modules/display/components/NavigationButtons.tsx","modules/display/components/PageChooser/PageChooser.tsx","modules/focus/constants.ts","modules/focus/actionTypes.ts","modules/focus/selectors.ts","modules/focus/actions.ts","modules/focus/reducer.ts","modules/focus/index.ts","modules/display/components/PDFDocument/PDFDocument.tsx","modules/display/components/MaterialDisplayColumn.tsx","modules/display/reducer.ts","modules/display/index.ts","modules/cards/model/model-origin.ts","modules/cards/services/transformInputOrigin.ts","modules/cards/constants.ts","modules/cards/actionTypes.ts","modules/cards/selectors.ts","modules/cards/services/contentStringToConfig.ts","modules/cards/actions.ts","modules/db/constants.ts","modules/db/actionTypes.ts","modules/db/actions.ts","modules/db/reducer.ts","modules/db/selectors.ts","modules/db/index.ts","modules/cards/reducer.ts","modules/cards/index.ts","modules/river/constants.ts","modules/river/selectors.ts","modules/river/components/CardRiver/HybridCardField.tsx","modules/river/components/CardRiver/Buttons/DeleteCardButton.tsx","modules/river/components/CardRiver/Buttons/JumpToOriginButton.tsx","modules/river/components/CardRiver/Buttons/GrabForFieldButton.tsx","modules/river/actionTypes.ts","modules/river/actions.ts","modules/river/components/CardRiver/ClayCard.tsx","modules/river/components/CardRiver/toCardGridItemsWithDividers.tsx","modules/river/components/CardRiver/Buttons/AddNoteButton.tsx","modules/river/components/CardRiver/Buttons/AddQAButton.tsx","modules/river/components/CardRiver/CardRiverAccordion.tsx","modules/river/components/CardRiver/ChildCardRiver.tsx","modules/river/model.ts","modules/river/components/SummaryRiver/SummaryRiver.tsx","modules/river/components/SummaryRiver/SummaryRiverView.tsx","modules/river/components/ActiveRiver/ActiveCardRiver.tsx","modules/river/components/ActiveRiver/ActiveRiverColumn.tsx","modules/river/components/ActiveRiver/ActiveRiverView.tsx","shared/GreenCheckbox.tsx","modules/river/components/RiverContentFormGroup.tsx","modules/river/reducer.ts","modules/river/index.ts","modules/control/selectors.ts","modules/control/actions.ts","modules/control/hooks/useEventListener.tsx","modules/creation/constants.ts","modules/creation/actionTypes.ts","modules/creation/selectors.ts","modules/creation/actions.ts","modules/creation/reducer.ts","modules/creation/components/CardItems.tsx","modules/creation/components/NewButtons.tsx","modules/creation/components/ContextMenu.tsx","modules/creation/components/SelectionSnackbar.tsx","modules/creation/services/contextMenuContainsTargetNode.ts","modules/creation/index.ts","modules/control/services/keyboardControl.ts","modules/control/components/Control.tsx","modules/control/services/mouseControl.ts","modules/control/components/Options.tsx","modules/control/components/CardSearchBar.tsx","modules/control/components/UndoRedoButtons.tsx","modules/control/components/ShowHideButton.tsx","modules/control/components/ControlBar.tsx","modules/control/index.ts","scenes/ReaderScene.tsx","persist.ts","store.ts","index.tsx","../node_modules/pdfjs-dist/build sync"],"names":["NAME","PDF_UPLOADED","MATERIAL_LOADED","DISPLAY_STATUS","PAGE_UPDATE","ZOOM_QUEUE","MATERIAL_DATA","getAll","state","getPDF","createSelector","pdf","getPDFName","pdfName","getRenderCritialData","currentPage","documentRef","getTotalPages","totalPages","getCurrentPage","getPageControlData","getDocumentRef","getMaterialData","materialData","getTimeStamp","materialDataTimeStamp","getMaterialSpans","materialSpans","getSpanIndex","span","indexOf","getMaterialBoundingRects","materialBoundingRects","getDataExists","timestamp","getDisplayStatus","displayStatus","displayStatusIsShow","status","getZoomQueue","zoomQueue","incrementer","counter","curCounter","expandSpan","rect","getBoundingClientRect","container","startingSpans","Array","from","querySelectorAll","length","expandedSpans","spans","boundingRects","exSpan","push","splitExpandedSpans","map","expandSpans","sort","exSpan2","y","pdfUpload","type","t","payload","materialUploaded","event","dispatch","files","target","materialLoaded","tryInterval","tries","ms","func","increment","timeout","setInterval","clearInterval","captureMaterialData","getState","current","startTime","Date","now","curMaterialGroupData","emptyZoomQueue","setPage","page","pageCorrections","newPage","movePage","nextPage","previousPage","toggleDisplayState","displayState","setZoomQueue","spanIndex","zoomToCardOrigin","originSpan","focus","scrollIntoView","behavior","block","inline","PreviousButton","useDispatch","IconButton","onClick","NextButton","PageNavigation","Card","variant","Grid","direction","item","Divider","orientation","nonDigitRegEx","PageChooser","useSelector","useState","error","value","toString","userInput","setState","alignItems","justify","style","width","TextField","inputProps","padding","fontSize","fontFamily","fontWeight","lineHeight","letterSpacing","onKeyDown","key","preventDefault","submittedValue","parseInt","onChange","possiblePage","trim","match","asInt","validatePageChoice","Typography","FOCUS_UPDATE","DISPLAY_FOCUS_UPDATE","getFocus","userFocus","getDisplayFocus","displayFocus","updateFocus","tryUpdateFocus","toggleContextMenuFocus","updateDisplayFocus","initialState","actions","constants","reducer","selectors","actionTypes","pdfjs","GlobalWorkerOptions","workerSrc","version","options","cMapUrl","cMapPacked","PDFDocumentContainer","connect","parentSize","file","onLoadSuccess","numPages","inputRef","onItemClick","pageNumber","onRenderSuccess","document","forEach","layer","top","left","transform","MaterialDisplayColumnWithSize","withSize","monitorHeight","noPlaceholder","size","hidden","elevation","setElevation","onMouseEnter","onMouseLeave","Paper","createRef","pageSpans","Infinity","components","name","extractSingleOrigin","inputOrigin","field","transformInputOrigin","inputField","outputField","oldOrigin","mergeSimilarCardOrigins","isNullOrUndefined","q","isQAOrigin","a","partialQAOrigin","flipPartialQAOrigin","CARD_UPDATE","CARD_PUSH","CARD_REMOVE","CARD_GOAL","DOCUMENT_CHANGE","present","getLastCardIDNumber","lastCardIDNumber","getCards","cards","getGoalCard","goalCard","updateContentStrFunctions","REPLACE","_","newStr","APPEND","oldStr","creationFunctions","note","oldConfig","partialUpdateFunction","content","contentStringToConfig","contentStr","updateType","existingCard","createPartialUpdateContentStrFunction","cardPush","cardPayload","card","cardID","cardUpdate","updateCardContent","contentString","creationType","origin","currentCard","config","pushCardContent","removeCard","setGoalCard","cardConfig","resetGoalCard","ARCHIVE_CURRENT_DATA","LOAD_DOCUMENT_DATA_SETS","archiveDBData","dbData","loadDocumentDataSets","newActiveDataSet","documentDB","reduce","prev","getDocumentDB","getDocumentNames","db","Object","keys","getDocumentDataSets","values","intialState","services","cardObj","getRiverMakeUps","riverMakeUps","getActiveRiverMakeUpID","activeRiverMakeUpID","getPushToRiver","pushToRiverID","getPushToRiverMakeUp","makeUps","id","getActiveRiverMakeUp","getPushToRiverCardIDs","makeUp","cardIDs","getPushToRiverCards","makeUpCardIDs","getActiveRiverCardIDs","getActiveRiverCards","getRiverShowState","riverShowState","riverShowStateIsShow","getHoveredCardData","highlightedCardID","highlightedCardField","getSourceCard","sourceCard","getLastRiverIDNumber","lastRiverIDNumber","getRiverContentState","riverContentState","getRiverContentFilter","contentFilter","HybridCardField","storeValue","saveChanges","rest","mutableValue","multiline","onBlur","DeleteCardButton","JumpToOriginButton","cardOrigin","display","GrabForFieldButton","outlined","setOutlined","isGoalCard","RIVER_SHOW_STATE","RIVER_CONTENT_STATE","RIVER_PUSH_STATE","RIVER_HOVERED_CARD","RIVER_CARD_SOURCE","RIVER_CONTENT_FILTER","toggleRiverShowState","setRiverContentState","setPushToRiver","trySetPushToRiver","setHoveredCard","trySetHoveredCard","highlightedCardIDData","setSourceCard","sourceField","trySetSourceCard","resetSourceCard","tryResetSourceCard","setContentFilter","filter","borderStyle","border","borderRadius","NoteCard","isHoveredCard","isActiveRiver","undefined","label","backgroundColor","InputLabelProps","color","QACard","spacing","ClayCard","riverID","GridDivider","AddNoteButton","AddQAButton","CardRiverAccordion","gridItems","summary","pushToRiver","Accordion","defaultExpanded","AccordionSummary","align","MozUserSelect","WebkitUserSelect","msUserSelect","AccordionDetails","ChildCardRiver","riverCards","console","log","useMemo","inputCards","noteConfig","includes","noteContainsContentFilter","qaConfig","qaContainsContentFilter","index","arr","toCardGridItemsWithDividers","pageNumberToRiverMakeUpID","SummaryRiver","cardConfigs","focusRef","useRef","useEffect","ref","replace","SummaryRiverView","ActiveCardRiver","ActiveRiverColumn","ActiveRiverView","showMaterial","showRiver","GreenCheckbox","withStyles","root","green","checked","props","Checkbox","RiverContentFormGroup","showQAs","showNotes","changeContentState","clickedState","FormGroup","FormControlLabel","control","emptyCardRiver","updateStateWithMakeUps","updatedState","deactivateActiveCardRiver","active","removeCardFromRivers","fromEntries","entries","entry","riverMakeUp","activeRiver","oldRiver","collectCurrentDBData","river","archiveCurrentDBData","fileDownload","require","downloadDBData","documentDataSets","localString","toLocaleString","JSON","stringify","changeDocument","newPDFName","currentPDFName","newDocumentData","ActionCreators","clearHistory","useEventListener","eventName","handler","savedHandler","eventListener","addEventListener","removeEventListener","TOGGLE_CONTEXT_MENU","CLOSE_CONTEXT_MENU","OPEN_CONTEXT_MENU","SELECTED_STRING","SELECTED_PARENT","DOCUMENT_POSITION","getContextMenuState","open","getContextMenuRef","menuRef","getContextMenuFullCardsRef","fullCardRef","getContextMenuQARefs","qaRefs","getCurrentSelectionPosition","selectionPosition","getContextMenuInitData","position","getCurrentSelectedString","manuallySelectedString","getCurrentSelectedParent","selectedParentSpan","getCurrentOrigin","selectedParent","toggleContextMenu","closeContextMenu","openContextMenu","grabSelectionForContextMenu","transformedOrigin","isUpdate","selectedString","resetManuallySelectedString","hasNonEmptyOrigin","grabSelectionForSourceMenu","newOrigin","updateManuallySelectedString","str","updateSelectionPosition","x","creationData","noteCardIsEmpty","qaCardIsNotFull","SingleOptionItem","dispatchRiver","MenuItem","QAOptionItem","qaRef","parentMenuOpen","CardConfigItem","NewQACardQ","NewQACardA","NewNoteCard","NewButtons","noteDispatch","qDispatch","aDispatch","ContextMenuContainer","fullCardsRef","openState","qaRefIndex","anchorPosition","nonFullRiverCards","fullRiverCards","Menu","keepMounted","anchorReference","SelectionSnackbar","setOpen","message","Snackbar","anchorOrigin","vertical","horizontal","onClose","reason","action","aria-label","contextMenuContainsTargetNode","parentNode","refObject","cur","querySelector","contains","keyEventDispatcher","keyMap","pageControlKeyMap","ArrowLeft","ArrowRight","pageControlDispatcher","contextMenuControlKeyMap","creation","contextMenuControlDispatcher","doNothing","focusDispatcherMap","DOCUMENT","CONTEXT_MENU","RIVER","RIVER_CONTROL","CONTROL","ControlContainer","keyDownControl","dispatcher","mouseDownControl","mouseUpControl","selection","getSelection","selectedStr","anchorNode","rightClickControl","InputDocument","handleClose","click","accept","InputDataSets","activeDocument","reader","FileReader","readAsText","onload","uploadedDataSets","parse","result","foundDataSet","find","Options","documents","React","anchorEl","setAnchorEl","currentTarget","Boolean","CardSearchBar","placeholder","newValue","onCancelSearch","onRequestSearch","UndoButton","undo","RedoButton","redo","UndoRedoCard","ShowRiverCheckbox","ShowMaterialCheckbox","displayShowState","ShowHideButton","ControlBar","materialName","AppBar","Toolbar","Tabs","Tab","flexGrow","useStyles","makeStyles","theme","createStyles","bottom","right","ScrollTop","children","classes","trigger","useScrollTrigger","disableHysteresis","threshold","Zoom","in","anchor","ownerDocument","role","className","ReaderScene","Fab","removeDOMObjectsFromCreationData","inboundState","addDOMObjectsToCreationData","outboundState","creationTransform","createTransform","future","past","whitelist","displayTransform","removeDOMObjectsFromDisplayData","addDOMObjectsToDisplayData","persistConfig","storage","transforms","rootReducer","combineReducers","undoable","includeAction","persistedReducer","persistReducer","enhancer","composeWithDevTools","stateSanitizer","displayData","composeEnhancers","applyMiddleware","thunk","store","createStore","persistor","persistStore","ReactDOM","render","StrictMode","loading","getElementById","webpackEmptyContext","req","e","Error","code","resolve","module","exports"],"mappings":"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","file":"static/js/main.3f77a694.chunk.js","sourcesContent":["export const NAME = \"displayData\";\n","import { NAME } from \"./constants\";\n\nexport const PDF_UPLOADED = NAME + \"/PDF_UPLOADED\";\nexport const MATERIAL_LOADED = NAME + \"/MATERIAL_LOADED\";\nexport const DISPLAY_STATUS = NAME + \"/DISPLAY_STATUS\";\nexport const PAGE_UPDATE = NAME + \"/PAGE_UPDATE\";\nexport const ZOOM_QUEUE = NAME + \"/ZOOM_QUEUE\";\nexport const MATERIAL_DATA = NAME + \"/MATERIAL_DATA\";\n","import { createSelector } from \"reselect\";\nimport { DisplayData, MaterialData, MaterialGroupData } from \"./model\";\nimport { NAME } from \"./constants\";\n\nexport const getAll = (state: any): DisplayData => state[NAME];\n\nexport const getPDF = createSelector(getAll, (state: DisplayData) => {\n\treturn { pdf: state.pdf ? state.pdf : null };\n});\n\nexport const getPDFName = createSelector(getAll, (state) => state.pdfName);\n\nexport const getRenderCritialData = createSelector(getAll, (state: DisplayData) => {\n\treturn {\n\t\tpdf: state.pdf,\n\t\tcurrentPage: state.currentPage,\n\t\tdocumentRef: state.documentRef,\n\t};\n});\n\nexport const getTotalPages = createSelector(getAll, (state: DisplayData) => state.totalPages);\n\nexport const getCurrentPage = createSelector(getAll, (state: DisplayData) => state.currentPage);\n\nexport const getPageControlData = createSelector(getTotalPages, getCurrentPage, (totalPages, currentPage) => {\n\treturn { currentPage, totalPages };\n});\n\nexport const getDocumentRef = createSelector(getAll, (state: DisplayData) => state.documentRef);\n\nexport const getMaterialData = createSelector(getAll, (state: DisplayData) => state.materialData);\n\nexport const getTimeStamp = createSelector(getMaterialData, (state: MaterialData) => state.materialDataTimeStamp);\n\nexport const getMaterialSpans = createSelector(\n\tgetMaterialData as (state: any) => MaterialGroupData,\n\t(state: MaterialGroupData) => state.materialSpans\n);\n\nexport const getSpanIndex = (state: any, span: HTMLSpanElement) => {\n\tconst spans = getMaterialSpans(state);\n\treturn spans.indexOf(span);\n};\n\nexport const getMaterialBoundingRects = createSelector(\n\tgetMaterialData as (state: any) => MaterialGroupData,\n\t(state: MaterialGroupData) => state.materialBoundingRects\n);\n\nexport const getDataExists = createSelector(getTimeStamp, (timestamp) => timestamp > 0);\n\nexport const getDisplayStatus = createSelector(getAll, (state: DisplayData) => state.displayStatus);\n\nexport const displayStatusIsShow = createSelector(getDisplayStatus, (status) => status === \"SHOW\");\n\nexport const getZoomQueue = createSelector(getAll, (state: DisplayData) => state.zoomQueue);\n","export const incrementer = () => {\n\tlet counter = 0;\n\treturn () => {\n\t\tconst curCounter = counter;\n\t\tcounter++;\n\t\treturn curCounter;\n\t};\n};\n","export const splitExpandedSpans = (expandedSpans: ExpandedSpan[]) => {\n\tconst spans = [];\n\tconst boundingRects = [];\n\n\tfor (const exSpan of expandedSpans) {\n\t\tspans.push(exSpan.span);\n\t\tboundingRects.push(exSpan.rect);\n\t}\n\n\treturn { spans, boundingRects };\n};\n\nexport const sortExpandedSpansAccordingToX = (expandedSpans: ExpandedSpan[]) =>\n\texpandedSpans.sort((exSpan, exSpan2) => exSpan.rect.x - exSpan2.rect.x);\n\nexport const sortExpandedSpansAccordingToY = (expandedSpans: ExpandedSpan[]) =>\n\texpandedSpans.sort((exSpan, exSpan2) => exSpan.rect.y - exSpan2.rect.y);\n\ntype ExpandedSpan = { span: HTMLSpanElement; rect: DOMRect };\n\nexport const expandSpans = (spans: HTMLSpanElement[]) => spans.map(expandSpan);\n\nconst expandSpan = (span: HTMLSpanElement): ExpandedSpan => {\n\treturn { span, rect: span.getBoundingClientRect() };\n};\n","import { MaterialGroupData } from \"../model\";\nimport { expandSpans, sortExpandedSpansAccordingToY, splitExpandedSpans } from \"./span\";\n\nexport const materialData = (container: HTMLDivElement): MaterialGroupData | null => {\n\t// assumes all spans inside the document are relevant (potentially multiple pages)\n\tconst startingSpans = Array.from(container.querySelectorAll(\"span\"));\n\tif (startingSpans.length === 0) return null;\n\n\tconst { spans, boundingRects } = splitExpandedSpans(sortExpandedSpansAccordingToY(expandSpans(startingSpans)));\n\n\treturn {\n\t\tmaterialSpans: spans,\n\t\tmaterialBoundingRects: boundingRects,\n\t};\n};\n","import { ChangeEvent, RefObject } from \"react\";\nimport { Dispatch } from \"redux\";\nimport * as t from \"./actionTypes\";\nimport { PageMove, MaterialData } from \"./model\";\nimport { getPageControlData, getDisplayStatus, getZoomQueue, getTimeStamp, getMaterialSpans } from \"./selectors\";\nimport { incrementer } from \"../../shared/utils\";\nimport { materialData } from \"./services/materialData\";\n\nexport const pdfUpload = (pdf: File) => {\n\treturn { type: t.PDF_UPLOADED, payload: pdf };\n};\n\nexport const materialUploaded = (event: ChangeEvent<HTMLInputElement>) => {\n\treturn (dispatch: Dispatch) => {\n\t\tconst files = event.target.files;\n\t\tconst pdf = files ? files[0] : null;\n\t\tif (pdf) dispatch(pdfUpload(pdf));\n\t};\n};\n\nexport const materialLoaded = (totalPages: number) => {\n\treturn { type: t.MATERIAL_LOADED, payload: totalPages };\n};\n\nexport const tryInterval = (tries: number, ms: number, func: () => boolean) => {\n\tconst increment = incrementer();\n\tconst timeout = setInterval(() => {\n\t\tif (increment() > tries) {\n\t\t\tclearInterval(timeout);\n\t\t\treturn;\n\t\t}\n\n\t\tif (func()) clearInterval(timeout);\n\t}, ms);\n};\n\n// text-layer is not really guaranteed to be rendered on render \"success\",\n// so we use this ugly \"try ten times\" approach\nexport function captureMaterialData(documentRef: RefObject<any>) {\n\treturn (dispatch: any, getState: Function) => {\n\t\tconst state = getState();\n\t\tconst container = documentRef.current;\n\t\tif (container) {\n\t\t\t// TODO-NICE: still possibility of race-condition,\n\n\t\t\tconst startTime = Date.now();\n\n\t\t\t// try once before going into intervals (most times once should work)\n\t\t\tconst curMaterialGroupData = materialData(container as HTMLDivElement);\n\t\t\tif (curMaterialGroupData && getTimeStamp(state) < startTime) {\n\t\t\t\tconst payload: MaterialData = {\n\t\t\t\t\t...curMaterialGroupData,\n\t\t\t\t\tmaterialDataTimeStamp: startTime,\n\t\t\t\t};\n\t\t\t\tdispatch({ type: t.MATERIAL_DATA, payload });\n\t\t\t\tdispatch(emptyZoomQueue());\n\t\t\t} else {\n\t\t\t\ttryInterval(10, 20, () => {\n\t\t\t\t\tconst curMaterialGroupData = materialData(container as HTMLDivElement);\n\t\t\t\t\tif (curMaterialGroupData && getTimeStamp(getState()) < startTime) {\n\t\t\t\t\t\tconst payload: MaterialData = {\n\t\t\t\t\t\t\t...curMaterialGroupData,\n\t\t\t\t\t\t\tmaterialDataTimeStamp: startTime,\n\t\t\t\t\t\t};\n\t\t\t\t\t\tdispatch({ type: t.MATERIAL_DATA, payload });\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t}\n\t\t\t\t\treturn false;\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t};\n}\n\n// assumes outside validation/correction\nexport const setPage = (page: number) => {\n\treturn { type: t.PAGE_UPDATE, payload: page };\n};\n\nconst pageCorrections = {\n\tADD: (newPage: number, totalPages: number) => (newPage === totalPages + 1 ? 1 : newPage),\n\tREMOVE: (newPage: number, totalPages: number) => (newPage === 0 ? totalPages : newPage),\n};\n\n//TODO-PERF: maybe hide all rendered pages but not shown instead of re-rendering for faster switching?\nexport const movePage = (type: PageMove) => {\n\treturn (dispatch: Dispatch, getState: Function) => {\n\t\tconst { currentPage, totalPages } = getPageControlData(getState());\n\t\tswitch (type) {\n\t\t\tcase \"NEXT\":\n\t\t\t\tdispatch({ type: t.PAGE_UPDATE, payload: pageCorrections[\"ADD\"](currentPage + 1, totalPages) });\n\t\t\t\tbreak;\n\t\t\tcase \"PREVIOUS\":\n\t\t\t\tdispatch({ type: t.PAGE_UPDATE, payload: pageCorrections[\"REMOVE\"](currentPage - 1, totalPages) });\n\t\t\t\tbreak;\n\t\t}\n\t};\n};\nexport const nextPage = () => movePage(\"NEXT\");\nexport const previousPage = () => movePage(\"PREVIOUS\");\n\nexport const toggleDisplayState = () => {\n\treturn (dispatch: Dispatch, getState: Function) => {\n\t\tconst displayState = getDisplayStatus(getState()) === \"SHOW\" ? \"HIDE\" : \"SHOW\";\n\n\t\tdispatch({ type: t.DISPLAY_STATUS, payload: displayState });\n\t};\n};\n\nexport const setZoomQueue = (spanIndex: number | null) => {\n\treturn { type: t.ZOOM_QUEUE, payload: spanIndex };\n};\n\nexport const zoomToCardOrigin = (spanIndex: number, page: number) => {\n\treturn (dispatch: Dispatch) => {\n\t\tdispatch(setPage(page));\n\t\tdispatch(setZoomQueue(spanIndex));\n\t};\n};\n\nexport const emptyZoomQueue = () => {\n\treturn (dispatch: Dispatch, getState: Function) => {\n\t\tconst state = getState();\n\t\tconst spanIndex = getZoomQueue(state);\n\t\tif (spanIndex) {\n\t\t\tconst originSpan = getMaterialSpans(state)[spanIndex];\n\t\t\toriginSpan.focus();\n\t\t\toriginSpan.scrollIntoView({ behavior: \"smooth\", block: \"center\", inline: \"center\" });\n\n\t\t\tdispatch(setZoomQueue(null));\n\t\t}\n\t};\n};\n","import React from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { IconButton, Card, Grid, Divider } from \"@material-ui/core\";\nimport ArrowForwardIosIcon from \"@material-ui/icons/ArrowForwardIos\";\nimport ArrowBackIosIcon from \"@material-ui/icons/ArrowBackIos\";\nimport { nextPage, previousPage } from \"../actions\";\n\nexport const PreviousButton = () => {\n\tconst dispatch = useDispatch();\n\treturn (\n\t\t<IconButton\n\t\t\ttype=\"button\"\n\t\t\tonClick={() => {\n\t\t\t\tdispatch(previousPage());\n\t\t\t}}\n\t\t>\n\t\t\t<ArrowBackIosIcon></ArrowBackIosIcon>\n\t\t</IconButton>\n\t);\n};\n\nexport const NextButton = () => {\n\tconst dispatch = useDispatch();\n\treturn (\n\t\t<IconButton\n\t\t\ttype=\"button\"\n\t\t\tonClick={() => {\n\t\t\t\tdispatch(nextPage());\n\t\t\t}}\n\t\t>\n\t\t\t<ArrowForwardIosIcon></ArrowForwardIosIcon>\n\t\t</IconButton>\n\t);\n};\n\nexport const PageNavigation = () => {\n\treturn (\n\t\t<Card variant=\"outlined\">\n\t\t\t<Grid container direction=\"row\">\n\t\t\t\t<Grid item>\n\t\t\t\t\t<PreviousButton></PreviousButton>\n\t\t\t\t</Grid>\n\t\t\t\t<Grid item>\n\t\t\t\t\t<Divider orientation=\"vertical\"></Divider>\n\t\t\t\t</Grid>\n\t\t\t\t<Grid item>\n\t\t\t\t\t<NextButton></NextButton>\n\t\t\t\t</Grid>\n\t\t\t</Grid>\n\t\t</Card>\n\t);\n};\n","import React, { useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Typography, TextField, Card, Grid } from \"@material-ui/core\";\nimport { setPage } from \"../../actions\";\nimport { getPageControlData } from \"../../selectors\";\n\nconst nonDigitRegEx = /(\\D)/;\n\nexport const validatePageChoice = (possiblePage: string, totalPages: number) => {\n\tif (possiblePage === \"\" || possiblePage.trim().match(nonDigitRegEx) !== null) return false;\n\n\tconst asInt = parseInt(possiblePage);\n\tif (asInt < 1 || totalPages < asInt) return false;\n\n\treturn true;\n};\n\nexport const PageChooser = () => {\n\tconst dispatch = useDispatch();\n\tconst { currentPage, totalPages } = useSelector(getPageControlData);\n\n\tconst [state, setState] = useState({\n\t\terror: false,\n\t\tvalue: currentPage?.toString(),\n\t\tuserInput: currentPage?.toString(),\n\t});\n\n\t// with this we can trigger a re-render onChange,\n\t// while making sure that if a new currentPage arrives, we reset the component\n\tif (state.value !== currentPage.toString()) {\n\t\tsetState({ error: false, value: currentPage.toString(), userInput: currentPage.toString() });\n\t}\n\n\treturn (\n\t\t<Card variant=\"outlined\">\n\t\t\t<Grid item>\n\t\t\t\t<Grid container direction=\"row\" alignItems=\"center\" justify=\"space-between\">\n\t\t\t\t\t<Grid item style={{ width: \"37%\" }}>\n\t\t\t\t\t\t<TextField\n\t\t\t\t\t\t\tinputProps={{\n\t\t\t\t\t\t\t\tstyle: {\n\t\t\t\t\t\t\t\t\tpadding: \"0px\",\n\t\t\t\t\t\t\t\t\t//h6 Typography style\n\t\t\t\t\t\t\t\t\tfontSize: \"1.25rem\",\n\t\t\t\t\t\t\t\t\tfontFamily: '\"Roboto\", \"Helvetica\", \"Arial\", sansSerif',\n\t\t\t\t\t\t\t\t\tfontWeight: 500,\n\t\t\t\t\t\t\t\t\tlineHeight: 1.6,\n\t\t\t\t\t\t\t\t\tletterSpacing: \"0.0075em\",\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\tvariant=\"filled\"\n\t\t\t\t\t\t\tvalue={state.userInput}\n\t\t\t\t\t\t\tonKeyDown={(event) => {\n\t\t\t\t\t\t\t\tif (event.key === \"Enter\") {\n\t\t\t\t\t\t\t\t\tevent.preventDefault();\n\t\t\t\t\t\t\t\t\tconst submittedValue = (event.target as HTMLFormElement).value;\n\t\t\t\t\t\t\t\t\tif (!state.error) {\n\t\t\t\t\t\t\t\t\t\tdispatch(setPage(parseInt(submittedValue)));\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\tonChange={(event) => {\n\t\t\t\t\t\t\t\tconst submittedValue = (event.target as HTMLTextAreaElement).value;\n\t\t\t\t\t\t\t\tif (validatePageChoice(submittedValue, totalPages as number)) {\n\t\t\t\t\t\t\t\t\tsetState({ ...state, error: false, userInput: submittedValue });\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\tsetState({ ...state, error: true, userInput: submittedValue });\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\terror={state.error}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</Grid>\n\n\t\t\t\t\t<Grid item style={{ width: \"61%\" }}>\n\t\t\t\t\t\t<Typography variant=\"h6\">of {totalPages}</Typography>\n\t\t\t\t\t</Grid>\n\t\t\t\t</Grid>\n\t\t\t</Grid>\n\t\t</Card>\n\t);\n};\n","export const NAME = \"appFocus\";\n","import { NAME } from \"./constants\";\n\nexport const FOCUS_UPDATE = NAME + \"/FOCUS_UPDATE\";\nexport const DISPLAY_FOCUS_UPDATE = NAME + \"/DISPLAY_FOCUS_UPDATE\";\n","import { createSelector } from \"reselect\";\nimport { NAME } from \"./constants\";\nimport { FocusState } from \"./model\";\n\nexport const getAll = (state: any) => state[NAME];\n\nexport const getFocus = createSelector(getAll, (state: FocusState) => state.userFocus);\n\nexport const getDisplayFocus = createSelector(getAll, (state: FocusState) => state.displayFocus);\n","import * as t from \"./actionTypes\";\nimport { UserFocus, DisplayFocus } from \"./model\";\nimport { Dispatch } from \"redux\";\nimport { getFocus } from \"./selectors\";\n\nexport const updateFocus = (focus: UserFocus) => {\n\treturn { type: t.FOCUS_UPDATE, payload: focus };\n};\n\nexport const tryUpdateFocus = (focus: UserFocus) => {\n\treturn (dispatch: Dispatch, getState: Function) => {\n\t\tif (getFocus(getState()) !== focus) dispatch(updateFocus(focus));\n\t};\n};\n\nexport const toggleContextMenuFocus = () => {\n\treturn (dispatch: Dispatch, getState: Function) => {\n\t\tconst currentFocus = getFocus(getState());\n\t\tswitch (currentFocus) {\n\t\t\tcase \"CONTEXT_MENU\":\n\t\t\t\tdispatch(updateFocus(\"DOCUMENT\"));\n\t\t\t\tbreak;\n\t\t\tcase \"DOCUMENT\":\n\t\t\t\tdispatch(updateFocus(\"CONTEXT_MENU\"));\n\t\t\t\tbreak;\n\t\t}\n\t};\n};\n\nexport const updateDisplayFocus = (focus: DisplayFocus) => {\n\treturn { type: t.DISPLAY_FOCUS_UPDATE, payload: focus };\n};\n","import { FocusState, UserFocus, DisplayFocus } from \"./model\";\nimport * as t from \"./actionTypes\";\n\nconst initialState: FocusState = { userFocus: \"CONTROL\", displayFocus: \"ACTIVE_RIVER\" };\n\nconst focus = (state = initialState, { type, payload }: { type: string; payload: any }): FocusState => {\n\tswitch (type) {\n\t\tcase t.FOCUS_UPDATE:\n\t\t\treturn { ...state, userFocus: payload as UserFocus };\n\t\tcase t.DISPLAY_FOCUS_UPDATE:\n\t\t\treturn { ...state, displayFocus: payload as DisplayFocus };\n\t\tdefault:\n\t\t\treturn state;\n\t}\n};\n\nexport default focus;\n","import * as actions from \"./actions\";\nimport * as constants from \"./constants\";\nimport reducer from \"./reducer\";\nimport * as selectors from \"./selectors\";\nimport * as actionTypes from \"./actionTypes\";\n\nexport default { actions, constants, reducer, selectors, actionTypes };\n","import \"./PDFDocument.css\";\nimport \"./AnnotationLayer.css\";\nimport React, { RefObject } from \"react\";\nimport { pdfjs, Document, Page } from \"react-pdf\";\nimport { connect, useDispatch } from \"react-redux\";\nimport { materialLoaded, setPage, captureMaterialData } from \"../../actions\";\nimport { getRenderCritialData } from \"../../selectors\";\npdfjs.GlobalWorkerOptions.workerSrc = `//cdnjs.cloudflare.com/ajax/libs/pdf.js/${pdfjs.version}/pdf.worker.js`;\n\n//TODO-NICE: implent more pdf-reader functionality, like zoom\n\nfunction removeTextLayerOffset() {\n\tconst textLayers = document.querySelectorAll(\".react-pdf__Page__textContent\");\n\ttextLayers.forEach((layer) => {\n\t\tconst { style }: any = layer;\n\t\tstyle.top = \"0\";\n\t\tstyle.left = \"0\";\n\t\tstyle.transform = \"\";\n\t});\n}\n\nconst options = {\n\tcMapUrl: \"cmaps/\",\n\tcMapPacked: true,\n};\n\nfunction PDFDocument({\n\tparentSize,\n\tpdf,\n\tcurrentPage,\n\tmaterialLoaded,\n\tcaptureMaterialData,\n\tdocumentRef,\n}: {\n\tparentSize: any;\n\tpdf: File | undefined;\n\tcurrentPage: number;\n\tmaterialLoaded: (numPages: number) => void;\n\tcaptureMaterialData: Function;\n\tdocumentRef: RefObject<any>;\n}) {\n\tconst dispatch = useDispatch();\n\treturn (\n\t\t<Document\n\t\t\tfile={pdf}\n\t\t\toptions={options}\n\t\t\tonLoadSuccess={({ numPages }) => {\n\t\t\t\tmaterialLoaded(numPages);\n\t\t\t}}\n\t\t\tinputRef={documentRef}\n\t\t\tonItemClick={({ pageNumber }) => {\n\t\t\t\tdispatch(setPage(parseInt(pageNumber)));\n\t\t\t}}\n\t\t>\n\t\t\t{pdf && (\n\t\t\t\t<Page\n\t\t\t\t\twidth={parentSize.width}\n\t\t\t\t\tpageNumber={currentPage}\n\t\t\t\t\tonRenderSuccess={() => {\n\t\t\t\t\t\tremoveTextLayerOffset();\n\t\t\t\t\t\tcaptureMaterialData(documentRef);\n\t\t\t\t\t}}\n\t\t\t\t/>\n\t\t\t)}\n\t\t</Document>\n\t);\n}\n\nexport const PDFDocumentContainer = connect(getRenderCritialData, {\n\tmaterialLoaded,\n\tcaptureMaterialData,\n})(PDFDocument);\n","import React, { useState } from \"react\";\nimport Grid from \"@material-ui/core/Grid\";\nimport { withSize } from \"react-sizeme\";\nimport Paper from \"@material-ui/core/Paper\";\nimport focus from \"../../focus\";\n\nimport { useDispatch } from \"react-redux\";\nimport { PDFDocumentContainer } from \"./PDFDocument/PDFDocument\";\n\nfunction MaterialDisplayColumn({ size, hidden }: any) {\n\tconst dispatch = useDispatch();\n\n\tconst [elevation, setElevation] = useState(3);\n\n\treturn (\n\t\t<Grid\n\t\t\titem\n\t\t\tstyle={{\n\t\t\t\twidth: \"60%\",\n\t\t\t}}\n\t\t\tonMouseEnter={() => {\n\t\t\t\tdispatch(focus.actions.tryUpdateFocus(\"DOCUMENT\"));\n\t\t\t\tsetElevation(20);\n\t\t\t}}\n\t\t\tonMouseLeave={() => {\n\t\t\t\tsetElevation(3);\n\t\t\t}}\n\t\t\thidden={hidden}\n\t\t>\n\t\t\t<Paper elevation={elevation}>\n\t\t\t\t<PDFDocumentContainer parentSize={size}></PDFDocumentContainer>\n\t\t\t</Paper>\n\t\t</Grid>\n\t);\n}\n\nexport const MaterialDisplayColumnWithSize = withSize({ monitorHeight: true, noPlaceholder: true })(\n\tMaterialDisplayColumn\n);\n","import * as t from \"./actionTypes\";\nimport type { DisplayData, DisplayStatus, MaterialGroupData } from \"./model\";\nimport { createRef } from \"react\";\n\nconst initialState: DisplayData = {\n\tdisplayStatus: \"SHOW\",\n\ttotalPages: 1000,\n\tcurrentPage: 1,\n\tdocumentRef: createRef(),\n\tpageSpans: {},\n\tzoomQueue: null,\n\tmaterialData: { materialDataTimeStamp: -Infinity },\n};\n\nconst displayData = (state = initialState, { type, payload }: { type: string; payload: any }): DisplayData => {\n\tswitch (type) {\n\t\tcase t.PDF_UPLOADED:\n\t\t\treturn { ...state, pdf: payload as File, pdfName: (payload as File).name };\n\t\tcase t.MATERIAL_LOADED:\n\t\t\treturn { ...state, totalPages: payload as number };\n\t\tcase t.PAGE_UPDATE:\n\t\t\treturn { ...state, currentPage: payload as number };\n\t\tcase t.DISPLAY_STATUS:\n\t\t\treturn { ...state, displayStatus: payload as DisplayStatus };\n\t\tcase t.MATERIAL_DATA:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tmaterialData: payload,\n\t\t\t\tpageSpans: { ...state.pageSpans, [state.currentPage]: (payload as MaterialGroupData).materialSpans.length - 1 },\n\t\t\t};\n\t\tdefault:\n\t\t\treturn state;\n\t}\n};\n\nexport default displayData;\n","import * as actions from \"./actions\";\nimport * as actionTypes from \"./actionTypes\";\nimport * as components from \"./components\";\nimport * as constants from \"./constants\";\nimport reducer from \"./reducer\";\nimport * as selectors from \"./selectors\";\n\nexport default { actions, actionTypes, components, constants, reducer, selectors };\n","import { isNullOrUndefined } from \"util\";\nimport { QACardField } from \"./model-content\";\n\nexport type SingleOrigin = { spanIndex: number; page: number };\nexport type QOnlyQAOrigin = { q: SingleOrigin; a: {} };\nexport type AOnlyQAOrigin = { q: {}; a: SingleOrigin };\nexport type PartialQAOrigin = QOnlyQAOrigin | AOnlyQAOrigin;\nexport const partialQAOrigin = (inputOrigin: SingleOrigin, field: QACardField): PartialQAOrigin => {\n\treturn { q: {}, a: {}, [field]: inputOrigin } as PartialQAOrigin;\n};\nexport type FullQAOrigin = { q: SingleOrigin; a: SingleOrigin };\nexport const extractSingleOrigin = (inputOrigin: QAOrigin, field: QACardField): SingleOrigin => {\n\t// existence needs to be checked prior\n\treturn (inputOrigin as FullQAOrigin)[field];\n};\nexport const flipQACardField = (field: QACardField): QACardField => (field === \"q\" ? \"a\" : \"q\");\nexport const flipPartialQAOrigin = (\n\tinputOrigin: PartialQAOrigin,\n\tinputField: QACardField,\n\toutputField: QACardField\n): PartialQAOrigin => {\n\treturn { [inputField]: {}, [outputField]: inputOrigin[inputField] } as PartialQAOrigin;\n};\nexport type QAOrigin = FullQAOrigin | PartialQAOrigin;\nexport const isQAOrigin = (inputOrigin: CardOrigin) => !isNullOrUndefined((inputOrigin as QAOrigin).q);\nexport type NoteOrigin = SingleOrigin;\nexport type CardOrigin = NoteOrigin | QAOrigin;\nexport const mergeSimilarCardOrigins = (inputOrigin: CardOrigin, oldOrigin: CardOrigin): CardOrigin => {\n\treturn { ...oldOrigin, ...inputOrigin };\n};\n","import { CardField, QACardField } from \"../model/model-content\";\nimport {\n\tCardOrigin,\n\tQAOrigin,\n\tPartialQAOrigin,\n\tpartialQAOrigin,\n\textractSingleOrigin,\n\tSingleOrigin,\n\tflipPartialQAOrigin,\n\tmergeSimilarCardOrigins,\n\tisQAOrigin,\n} from \"../model/model-origin\";\n\n//TODO-NICE: make this non-redundant, but for now it works\n\nexport const transformInputOrigin = (\n\tinputOrigin: CardOrigin,\n\tinputField: CardField,\n\toutputField: CardField,\n\toldOrigin?: CardOrigin\n): CardOrigin => {\n\tif (!oldOrigin) {\n\t\tif (inputField === outputField) return inputOrigin;\n\n\t\tif (inputField === \"note\") {\n\t\t\treturn partialQAOrigin(inputOrigin as SingleOrigin, outputField as QACardField);\n\t\t}\n\n\t\tif (outputField === \"note\") {\n\t\t\treturn extractSingleOrigin(inputOrigin as QAOrigin, inputField as QACardField);\n\t\t}\n\n\t\treturn flipPartialQAOrigin(inputOrigin as PartialQAOrigin, inputField, outputField);\n\t} else {\n\t\tif (inputField === outputField) return mergeSimilarCardOrigins(inputOrigin, oldOrigin);\n\n\t\tif (inputField === \"note\" && isQAOrigin(oldOrigin)) {\n\t\t\t// this means SingleOrigin to QAOrigin\n\t\t\treturn { ...oldOrigin, [outputField]: inputOrigin };\n\t\t}\n\n\t\tif (outputField === \"note\") {\n\t\t\treturn extractSingleOrigin(inputOrigin as QAOrigin, inputField as QACardField);\n\t\t}\n\n\t\t// swap cases\n\t\tif (outputField === \"q\") {\n\t\t\treturn { q: (inputOrigin as QAOrigin).a, a: (oldOrigin as QAOrigin).a } as QAOrigin;\n\t\t} else {\n\t\t\t//A\n\t\t\treturn { a: (inputOrigin as QAOrigin).q, q: (oldOrigin as QAOrigin).q } as QAOrigin;\n\t\t}\n\t}\n};\n","export const NAME = \"cards\";\n","import { NAME } from \"./constants\";\n\nexport const CARD_UPDATE = NAME + \"/CARD_UPDATE\";\nexport const CARD_PUSH = NAME + \"/CARD_PUSH\";\nexport const CARD_REMOVE = NAME + \"/CARD_REMOVE\";\nexport const CARD_GOAL = NAME + \"/CARD_GOAL\";\n\n// TODO-NICE: dont know where to put this else, cards is the lowest module\n// this is used for loading a new Document-DataSet / resetting if new Document\nexport const DOCUMENT_CHANGE = NAME + \"/DOCUMENT_CHANGE\";\n","import { createSelector } from \"reselect\";\nimport { CardsState } from \"./model/model\";\nimport { NAME } from \"./constants\";\n\nexport const getAll = (state: any) => state[NAME].present;\n\nexport const getLastCardIDNumber = createSelector(getAll, (state) => state.lastCardIDNumber);\n\nexport const getCards = createSelector(getAll, (state: CardsState) => state.cards);\n\nexport const getGoalCard = createSelector(getAll, (state: CardsState) => state.goalCard);\n","import { UpdateType, CardPayloadConfig, CardType } from \"../model/model\";\nimport { QACardContent, CardField } from \"../model/model-content\";\n\ntype UpdateContentStrFunction = (oldStr: string, newStr: string) => string;\n\nconst updateContentStrFunctions: { [key in UpdateType]: UpdateContentStrFunction } = {\n\tREPLACE: (_: string, newStr: string) => newStr,\n\tAPPEND: (oldStr: string, newStr: string) => oldStr + newStr,\n};\n\ntype partialUpdateContentStrFunction = (oldStr: string) => string;\n\nconst createPartialUpdateContentStrFunction = (updateType: UpdateType, newStr: string) => (oldStr: string) =>\n\tupdateContentStrFunctions[updateType](oldStr, newStr);\n\ntype creationFunction = (\n\toldConfig: CardPayloadConfig,\n\tpartialUpdateFunction: partialUpdateContentStrFunction\n) => CardPayloadConfig;\n\nconst defaultCreationFunction: creationFunction = (oldConfig, partialUpdateFunction) => {\n\treturn { ...oldConfig, content: partialUpdateFunction(oldConfig.content as string) };\n};\n\nconst creationFunctions: {\n\t[key in CardField]: creationFunction;\n} = {\n\tnote: defaultCreationFunction,\n\tq: (oldConfig, partialUpdateFunction) => {\n\t\tconst content = oldConfig.content as QACardContent;\n\t\treturn { ...oldConfig, content: { ...content, q: partialUpdateFunction(content.q) } };\n\t},\n\ta: (oldConfig, partialUpdateFunction) => {\n\t\tconst content = oldConfig.content as QACardContent;\n\t\treturn { ...oldConfig, content: { ...content, a: partialUpdateFunction(content.a) } };\n\t},\n};\n\nexport const contentStringToConfig = (\n\tcontentStr: string,\n\ttype: CardType,\n\toutputField: CardField,\n\tupdateType: UpdateType,\n\texistingCard?: CardPayloadConfig\n): CardPayloadConfig => {\n\tconst partialUpdateFunction = createPartialUpdateContentStrFunction(updateType, contentStr);\n\tconst isCardUpdate = !!existingCard;\n\treturn isCardUpdate\n\t\t? creationFunctions[outputField](existingCard as CardPayloadConfig, partialUpdateFunction)\n\t\t: creationFunctions[outputField]({ type, content: type === \"Q-A\" ? { q: \"\", a: \"\" } : \"\" }, partialUpdateFunction);\n};\n","import {\n\tCardPayload,\n\tFinalizedCardPayload,\n\tCreationType,\n\tUpdateType,\n\tCardType,\n\tCardConfig,\n\tCardID,\n} from \"./model/model\";\nimport { CardOrigin } from \"./model/model-origin\";\nimport * as t from \"./actionTypes\";\nimport { Dispatch } from \"redux\";\nimport { getLastCardIDNumber, getCards } from \"./selectors\";\nimport { contentStringToConfig } from \"./services/contentStringToConfig\";\n\nconst createCardID = (lastCardIDNumber: number) => (lastCardIDNumber + 1).toString();\n\nexport const cardPush = (cardPayload: CardPayload) => {\n\treturn (dispatch: Dispatch, getState: Function) => {\n\t\tdispatch({\n\t\t\ttype: t.CARD_PUSH,\n\t\t\tpayload: {\n\t\t\t\t...cardPayload,\n\t\t\t\tcard: { ...cardPayload.card, cardID: createCardID(getLastCardIDNumber(getState())) },\n\t\t\t} as FinalizedCardPayload,\n\t\t});\n\t};\n};\n\nexport const cardUpdate = (card: CardPayload) => {\n\treturn { type: t.CARD_UPDATE, payload: card };\n};\n\nexport const updateCardContent = (\n\tcontentString: string,\n\tcardID: CardID,\n\tcreationType: CreationType,\n\tupdateType: UpdateType,\n\torigin?: CardOrigin\n) => {\n\treturn (dispatch: Dispatch, getState: Function) => {\n\t\tconst state = getState();\n\n\t\tconst currentCard = getCards(state)[cardID as string];\n\t\tconst config = contentStringToConfig(contentString, currentCard.type, creationType, updateType, currentCard);\n\n\t\tdispatch(\n\t\t\tcardUpdate({\n\t\t\t\tcard: { ...config, origin },\n\t\t\t})\n\t\t);\n\t};\n};\n\nexport const pushCardContent = (\n\tcontentString: string,\n\tcreationType: CreationType,\n\tupdateType: UpdateType,\n\ttype: CardType,\n\torigin?: CardOrigin\n) => {\n\tconst config = contentStringToConfig(contentString, type, creationType, updateType);\n\n\treturn cardPush({ card: { ...config, origin } });\n};\n\nexport const removeCard = (cardID: CardID) => {\n\treturn { type: t.CARD_REMOVE, payload: cardID };\n};\n\nexport const setGoalCard = (cardConfig: CardConfig, creationType: CreationType) => {\n\treturn { type: t.CARD_GOAL, payload: { ...cardConfig, creationType } };\n};\n\nexport const resetGoalCard = () => {\n\treturn { type: t.CARD_GOAL, payload: null };\n};\n","export const NAME = \"documentDB\";\n","import { NAME } from \"./constants\";\n\nexport const ARCHIVE_CURRENT_DATA = NAME + \"/ARCHIVE_CURRENT_DATA\";\nexport const LOAD_DOCUMENT_DATA_SETS = NAME + \"/LOAD_DOCUMENT_DATA_SETS\";\n","import { DocumentData } from \"./model\";\nimport * as t from \"./actionTypes\";\n\nexport const archiveDBData = (dbData: DocumentData) => {\n\treturn { type: t.ARCHIVE_CURRENT_DATA, payload: dbData };\n};\n\nexport const loadDocumentDataSets = (dbData: DocumentData[], newActiveDataSet?: DocumentData) => {\n\treturn { type: t.LOAD_DOCUMENT_DATA_SETS, payload: { dbData, newActiveDataSet } };\n};\n","import { DocumentDBState, DocumentData, DocumentDB } from \"./model\";\nimport * as t from \"./actionTypes\";\n\nconst initialState: DocumentDBState = { documentDB: {} };\n\n//TODO-NICE: PDF-date gets saved with name, better use some hash or something (rename of document file is likely) -> use size or last-modified or smth like that instead of name\n\nconst documentDB = (\n\tstate = initialState,\n\t{ type, payload }: { type: string; payload: DocumentData | DocumentData[] | { dbData: DocumentData[] } }\n): DocumentDBState => {\n\tswitch (type) {\n\t\t// dont need to undo this, because if we change the active river and then change the document, the archive version gets overwritten\n\t\tcase t.ARCHIVE_CURRENT_DATA:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tdocumentDB: { ...state.documentDB, [(payload as DocumentData).name]: payload as DocumentData },\n\t\t\t};\n\t\tcase t.LOAD_DOCUMENT_DATA_SETS:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tdocumentDB: {\n\t\t\t\t\t...state.documentDB,\n\t\t\t\t\t...((payload as { dbData: DocumentData[] }).dbData as DocumentData[]).reduce((prev, dbData) => {\n\t\t\t\t\t\tprev[dbData.name] = dbData;\n\t\t\t\t\t\treturn prev;\n\t\t\t\t\t}, {} as DocumentDB),\n\t\t\t\t},\n\t\t\t};\n\t\tdefault:\n\t\t\treturn state;\n\t}\n};\n\nexport default documentDB;\n","import { createSelector } from \"reselect\";\nimport { DocumentDBState } from \"./model\";\nimport { NAME } from \"./constants\";\n\nexport const getAll = (state: any) => state[NAME].present;\n\nexport const getDocumentDB = createSelector(getAll, (state: DocumentDBState) => state.documentDB);\n\nexport const getDocumentNames = createSelector(getDocumentDB, (db) => Object.keys(db));\n\nexport const getDocumentDataSets = createSelector(getDocumentDB, (db) => Object.values(db));\n","import * as actions from \"./actions\";\nimport * as actionTypes from \"./actionTypes\";\nimport * as constants from \"./constants\";\nimport reducer from \"./reducer\";\nimport * as selectors from \"./selectors\";\n\nexport default { actions, actionTypes, constants, reducer, selectors };\n","import * as t from \"./actionTypes\";\nimport { CardsState, FinalizedCardPayload, CardID } from \"./model/model\";\nimport { ArchiveCards } from \"../db/model\";\nimport db from \"../db\";\n\nconst intialState: CardsState = {\n\tcards: {\n\t\t\"0\": {\n\t\t\tcardID: \"0\",\n\t\t\ttype: \"Q-A\",\n\t\t\tcontent: { q: \"Was ist der Sinn des Lebens?\", a: \"42\" },\n\t\t},\n\t\t\"1\": {\n\t\t\tcardID: \"1\",\n\t\t\ttype: \"Q-A\",\n\t\t\tcontent: { q: \"Welches Layout macht mehr Sinn?\", a: \"??\" },\n\t\t},\n\t\t\"2\": { cardID: \"2\", type: \"Note\", content: \"Note here\" },\n\t},\n\tlastCardIDNumber: 2,\n\tgoalCard: null,\n};\n\nconst removeCard = (state: CardsState, cardID: CardID) => {\n\tconst cards = { ...state.cards };\n\n\t// we do not reset the ID counter\n\n\tdelete cards[cardID];\n\n\treturn { ...state, cards };\n};\n\nconst cards = (state = intialState, { type, payload }: { type: string; payload?: any }) => {\n\tlet cardID;\n\tlet cardObj;\n\tswitch (type) {\n\t\tcase t.CARD_PUSH:\n\t\t\tconst lastCardIDNumber = state.lastCardIDNumber + 1;\n\n\t\t\tcardObj = { ...state.cards };\n\t\t\tcardObj[(payload as FinalizedCardPayload).card.cardID] = (payload as FinalizedCardPayload).card;\n\n\t\t\treturn { ...state, cards: cardObj, lastCardIDNumber };\n\t\tcase t.CARD_UPDATE:\n\t\t\tcardID = (payload as FinalizedCardPayload).card.cardID as string;\n\t\t\tcardObj = { ...state.cards };\n\t\t\tcardObj[cardID] = (payload as FinalizedCardPayload).card;\n\n\t\t\treturn { ...state, cards: cardObj };\n\t\tcase t.CARD_REMOVE:\n\t\t\treturn removeCard(state, payload as string);\n\t\tcase t.CARD_GOAL:\n\t\t\treturn { ...state, goalCard: payload };\n\t\tcase t.DOCUMENT_CHANGE:\n\t\t\tif (payload) {\n\t\t\t\treturn {\n\t\t\t\t\t...intialState,\n\t\t\t\t\tcards: (payload as ArchiveCards).cards,\n\t\t\t\t\tlastCardIDNumber: (payload as ArchiveCards).lastCardIDNumber,\n\t\t\t\t};\n\t\t\t} else {\n\t\t\t\treturn intialState;\n\t\t\t}\n\t\tcase db.actionTypes.LOAD_DOCUMENT_DATA_SETS:\n\t\t\t// basically the same as DOCUMENT_CHANGE, just only triggered\n\t\t\t// when uploading data that corresponds to current document\n\t\t\t// and if not we dont reset\n\t\t\tif (payload.newActiveDataSet) {\n\t\t\t\treturn {\n\t\t\t\t\t...intialState,\n\t\t\t\t\tcards: (payload.newActiveDataSet as ArchiveCards).cards,\n\t\t\t\t\tlastCardIDNumber: (payload.newActiveDataSet as ArchiveCards).lastCardIDNumber,\n\t\t\t\t};\n\t\t\t} else {\n\t\t\t\treturn state;\n\t\t\t}\n\t\tdefault:\n\t\t\treturn state;\n\t}\n};\n\nexport default cards;\n","import * as services from \"./services\";\nimport * as constants from \"./constants\";\nimport * as actionTypes from \"./actionTypes\";\nimport * as actions from \"./actions\";\nimport * as selectors from \"./selectors\";\nimport reducer from \"./reducer\";\n\nexport default { services, constants, actionTypes, actions, reducer, selectors };\n","export const NAME = \"cardRiverState\";\n","import { NAME } from \"./constants\";\nimport { createSelector } from \"reselect\";\nimport { CardRiverState } from \"./model\";\nimport cards from \"../cards\";\n\nexport const getAll = (state: any) => state[NAME].present;\n\nexport const getRiverMakeUps = createSelector(getAll, (state: CardRiverState) => state.riverMakeUps);\n\nexport const getActiveRiverMakeUpID = createSelector(getAll, (state: CardRiverState) => state.activeRiverMakeUpID);\n\nexport const getPushToRiver = createSelector(getAll, (state: CardRiverState) => state.pushToRiverID);\n\nexport const getPushToRiverMakeUp = createSelector(getRiverMakeUps, getPushToRiver, (makeUps, id) => makeUps[id]);\n\nexport const getActiveRiverMakeUp = createSelector(\n\tgetRiverMakeUps,\n\tgetActiveRiverMakeUpID,\n\t(makeUps, id) => makeUps[id]\n);\n\nexport const getPushToRiverCardIDs = createSelector(getPushToRiverMakeUp, (makeUp) => makeUp.cardIDs);\n\nexport const getPushToRiverCards = createSelector(\n\tgetPushToRiverCardIDs,\n\tcards.selectors.getCards,\n\t(makeUpCardIDs, cards) => makeUpCardIDs.map((id) => cards[id])\n);\n\n//TODO-NICE: rename active=page-wise or smth like that for clarity\nexport const getActiveRiverCardIDs = createSelector(getActiveRiverMakeUp, (makeUp) => makeUp.cardIDs);\n\nexport const getActiveRiverCards = createSelector(\n\tgetActiveRiverCardIDs,\n\tcards.selectors.getCards,\n\t(makeUpCardIDs, cards) => makeUpCardIDs.map((id) => cards[id])\n);\n\nexport const getRiverShowState = createSelector(getAll, (state: CardRiverState) => state.riverShowState);\n\nexport const riverShowStateIsShow = createSelector(getRiverShowState, (state) => state === \"SHOW\");\n\nexport const getHoveredCardData = createSelector(getAll, (state: CardRiverState) => {\n\treturn { id: state.highlightedCardID, field: state.highlightedCardField };\n});\n\nexport const getSourceCard = createSelector(getAll, cards.selectors.getCards, (state, cards) =>\n\t// only return sourceCard if it still exists\n\tstate.sourceCard && cards[state.sourceCard] ? state.sourceCard : null\n);\n\nexport const getLastRiverIDNumber = createSelector(getAll, (state: CardRiverState) => state.lastRiverIDNumber);\n\nexport const getRiverContentState = createSelector(getAll, (state: CardRiverState) => state.riverContentState);\n\nexport const getRiverContentFilter = createSelector(getAll, (state: CardRiverState) => state.contentFilter);\n","import React, { useState } from \"react\";\nimport { TextField, TextFieldProps } from \"@material-ui/core\";\n\nexport const HybridCardField = ({\n\tstoreValue = \"\",\n\tsaveChanges,\n\tstyle,\n\t...rest\n}: {\n\tstoreValue?: string;\n\tsaveChanges: (value: string) => void;\n\tstyle: any;\n} & TextFieldProps) => {\n\tconst [state, setState] = useState({ storeValue, mutableValue: storeValue });\n\n\t// reset if new storeValue, otherwise keep user-mutated value\n\tif (state.storeValue !== storeValue) {\n\t\tsetState({ storeValue, mutableValue: storeValue });\n\t}\n\n\t// need the onChange-pattern, because we want to be able to pre-fill the field from the store\n\treturn (\n\t\t<TextField\n\t\t\tmultiline\n\t\t\tvariant=\"filled\"\n\t\t\tvalue={state.mutableValue}\n\t\t\tonChange={(event) => {\n\t\t\t\tconst submittedValue = (event.target as HTMLTextAreaElement).value;\n\t\t\t\tsetState({ ...state, mutableValue: submittedValue });\n\t\t\t}}\n\t\t\tonBlur={(event: any) => {\n\t\t\t\tsaveChanges(event.target.value);\n\t\t\t}}\n\t\t\tstyle={style}\n\t\t\t{...rest}\n\t\t></TextField>\n\t);\n};\n","import DeleteForeverIcon from \"@material-ui/icons/DeleteForever\";\nimport React from \"react\";\nimport { IconButton } from \"@material-ui/core\";\nimport { useDispatch } from \"react-redux\";\nimport cards from \"../../../../cards\";\nimport focus from \"../../../../focus\";\nimport { CardID } from \"../../../../cards/model/model\";\n\n//TODO-NICE: use storybook for visual component testing\n\nexport const DeleteCardButton = ({ cardID }: { cardID: CardID }) => {\n\tconst dispatch = useDispatch();\n\treturn (\n\t\t<IconButton\n\t\t\ttype=\"button\"\n\t\t\tonClick={() => {\n\t\t\t\tdispatch(cards.actions.removeCard(cardID));\n\t\t\t}}\n\t\t\tonMouseEnter={() => {\n\t\t\t\tdispatch(focus.actions.tryUpdateFocus(\"RIVER_CONTROL\"));\n\t\t\t}}\n\t\t>\n\t\t\t<DeleteForeverIcon></DeleteForeverIcon>\n\t\t</IconButton>\n\t);\n};\n","import FindInPageIcon from \"@material-ui/icons/FindInPage\";\nimport React from \"react\";\nimport { IconButton } from \"@material-ui/core\";\nimport { useDispatch } from \"react-redux\";\nimport display from \"../../../../display\";\nimport { SingleOrigin } from \"../../../../cards/model/model-origin\";\nimport focus from \"../../../../focus\";\n\nexport const JumpToOriginButton = ({ cardOrigin }: { cardOrigin: SingleOrigin }) => {\n\tconst dispatch = useDispatch();\n\treturn (\n\t\t<IconButton\n\t\t\ttype=\"button\"\n\t\t\tonClick={() => {\n\t\t\t\tdispatch(focus.actions.updateDisplayFocus(\"ACTIVE_RIVER\"));\n\t\t\t\tdispatch(display.actions.zoomToCardOrigin(cardOrigin.spanIndex, cardOrigin.page));\n\t\t\t}}\n\t\t>\n\t\t\t<FindInPageIcon></FindInPageIcon>\n\t\t</IconButton>\n\t);\n};\n","import PanToolIcon from \"@material-ui/icons/PanTool\";\nimport PanToolOutlinedIcon from \"@material-ui/icons/PanToolOutlined\";\nimport React, { useState } from \"react\";\nimport { IconButton } from \"@material-ui/core\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { CardConfig, CreationType, GoalCard } from \"../../../../cards/model/model\";\nimport cards from \"../../../../cards\";\nimport focus from \"../../../../focus\";\n\nconst isGoalCard = (cardConfig: CardConfig, creationType: CreationType, goalCard: GoalCard) =>\n\tcardConfig.cardID === goalCard.cardID && creationType === goalCard.creationType;\n\nexport const GrabForFieldButton = ({\n\tcardConfig,\n\tcreationType,\n}: {\n\tcardConfig: CardConfig;\n\tcreationType: CreationType;\n}) => {\n\tconst dispatch = useDispatch();\n\tconst goalCard = useSelector(cards.selectors.getGoalCard);\n\tconst [outlined, setOutlined] = useState(true);\n\n\tif (goalCard) {\n\t\tconst isGoal = isGoalCard(cardConfig, creationType, goalCard);\n\t\tif (isGoal) {\n\t\t\tif (outlined) setOutlined(false);\n\t\t} else {\n\t\t\tif (!outlined) setOutlined(true);\n\t\t}\n\t} else {\n\t\tif (!outlined) setOutlined(true);\n\t}\n\n\treturn (\n\t\t<IconButton\n\t\t\ttype=\"button\"\n\t\t\tonMouseEnter={() => {\n\t\t\t\tdispatch(focus.actions.tryUpdateFocus(\"RIVER_CONTROL\"));\n\t\t\t}}\n\t\t\tonClick={() => {\n\t\t\t\tif (outlined) {\n\t\t\t\t\tdispatch(cards.actions.setGoalCard(cardConfig, creationType));\n\t\t\t\t} else {\n\t\t\t\t\tdispatch(cards.actions.resetGoalCard());\n\t\t\t\t}\n\t\t\t}}\n\t\t>\n\t\t\t{outlined ? <PanToolOutlinedIcon></PanToolOutlinedIcon> : <PanToolIcon></PanToolIcon>}\n\t\t</IconButton>\n\t);\n};\n","import { NAME } from \"./constants\";\n\nexport const RIVER_SHOW_STATE = NAME + \"/RIVER_SHOW_STATE\";\nexport const RIVER_CONTENT_STATE = NAME + \"/RIVER_CONTENT_STATE\";\nexport const RIVER_PUSH_STATE = NAME + \"/RIVER_PUSH_STATE\";\nexport const RIVER_HOVERED_CARD = NAME + \"/RIVER_HOVERED_CARD\";\nexport const RIVER_CARD_SOURCE = NAME + \"/RIVER_CARD_SOURCE\";\nexport const RIVER_CONTENT_FILTER = NAME + \"/RIVER_CONTENT_FILTER\";\n","import * as t from \"./actionTypes\";\nimport { riverShowStateIsShow, getPushToRiver, getHoveredCardData, getSourceCard } from \"./selectors\";\nimport { Dispatch } from \"redux\";\nimport { CardID } from \"../cards/model/model\";\nimport { CardField } from \"../cards/model/model-content\";\nimport { CardOrigin } from \"../cards/model/model-origin\";\nimport { RiverContentState, ContentFilter } from \"./model\";\n\nexport const toggleRiverShowState = () => (dispatch: Dispatch, getState: Function) => {\n\tdispatch({ type: t.RIVER_SHOW_STATE, payload: riverShowStateIsShow(getState()) ? \"HIDE\" : \"SHOW\" });\n};\n\nexport const setRiverContentState = (state: RiverContentState) => {\n\treturn { type: t.RIVER_CONTENT_STATE, payload: state };\n};\n\nexport const setPushToRiver = (id: string) => {\n\treturn { type: t.RIVER_PUSH_STATE, payload: id };\n};\n\nexport const trySetPushToRiver = (id: string) => {\n\treturn (dispatch: Dispatch, getState: Function) => {\n\t\tif (getPushToRiver(getState()) !== id) dispatch(setPushToRiver(id));\n\t};\n};\n\nexport const setHoveredCard = (cardID: CardID, field: CardField) => {\n\treturn { payload: { id: cardID, field }, type: t.RIVER_HOVERED_CARD };\n};\n\nexport const trySetHoveredCard = (cardID: CardID, field: CardField) => {\n\treturn (dispatch: Dispatch, getState: Function) => {\n\t\tconst state = getState();\n\t\tconst highlightedCardIDData = getHoveredCardData(state);\n\t\tif (highlightedCardIDData.id !== cardID || highlightedCardIDData.field !== field)\n\t\t\tdispatch(setHoveredCard(cardID, field));\n\t};\n};\n\nexport const setSourceCard = (sourceField: CardField, origin?: CardOrigin) => {\n\treturn { type: t.RIVER_CARD_SOURCE, payload: { origin, sourceField } };\n};\n\nexport const trySetSourceCard = (sourceField: CardField, origin?: CardOrigin) => {\n\treturn (dispatch: Dispatch, getState: Function) => {\n\t\tconst sourceCard = getSourceCard(getState());\n\t\tif (!sourceCard || sourceCard.sourceField !== sourceField || sourceCard.origin !== origin)\n\t\t\tdispatch(setSourceCard(sourceField, origin));\n\t};\n};\n\nexport const resetSourceCard = () => {\n\treturn { type: t.RIVER_CARD_SOURCE, payload: null };\n};\n\nexport const tryResetSourceCard = () => {\n\treturn (dispatch: Dispatch, getState: Function) => {\n\t\tconst sourceCardExits = getSourceCard(getState()) !== null;\n\t\tif (sourceCardExits) dispatch(resetSourceCard());\n\t};\n};\n\nexport const setContentFilter = (filter: ContentFilter) => {\n\treturn { type: t.RIVER_CONTENT_FILTER, payload: filter };\n};\n","import Grid from \"@material-ui/core/Grid\";\nimport React from \"react\";\nimport { HybridCardField } from \"./HybridCardField\";\nimport { CardConfig } from \"../../../cards/model/model\";\nimport { QACardContent } from \"../../../cards/model/model-content\";\nimport { NoteOrigin, SingleOrigin, QAOrigin, QOnlyQAOrigin, AOnlyQAOrigin } from \"../../../cards/model/model-origin\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport cards from \"../../../cards\";\nimport { DeleteCardButton } from \"./Buttons/DeleteCardButton\";\nimport { JumpToOriginButton } from \"./Buttons/JumpToOriginButton\";\nimport { GrabForFieldButton } from \"./Buttons/GrabForFieldButton\";\nimport { isNullOrUndefined } from \"util\";\nimport { getHoveredCardData } from \"../../selectors\";\nimport focus from \"../../../focus\";\nimport { trySetSourceCard } from \"../../actions\";\nimport { Card } from \"@material-ui/core\";\n\n//TODO-RC: tooltips for all buttons, multiple languages?\n\ntype CardProps = { config: CardConfig; riverID: string };\n\nconst borderStyle = { border: \"4px solid green\", borderRadius: \"4px\" };\n\n//TODO-PERF: investigate if this hover-store approach is too slow, useRef instead?\n\nconst NoteCard = ({ config }: CardProps) => {\n\tconst dispatch = useDispatch();\n\tconst { id } = useSelector(getHoveredCardData);\n\tconst isHoveredCard = config.cardID === id;\n\n\t// we only offer one way to use card-content in other cards: extract\n\t// we do not allow grabbing from other cards, just from the document, so we only need the grab button in the ActiveRiver\n\t//TODO-NICE: allow grabbing from other cards\n\tconst isActiveRiver = useSelector(focus.selectors.getDisplayFocus) === \"ACTIVE_RIVER\";\n\n\treturn (\n\t\t<Card variant=\"elevation\" elevation={5} style={isHoveredCard ? borderStyle : undefined}>\n\t\t\t<HybridCardField\n\t\t\t\tsaveChanges={(value) => {\n\t\t\t\t\tdispatch(cards.actions.updateCardContent(value, config.cardID, \"note\", \"REPLACE\", config.origin));\n\t\t\t\t}}\n\t\t\t\tstoreValue={config.content as string}\n\t\t\t\tlabel=\"Note\"\n\t\t\t\tvariant=\"filled\"\n\t\t\t\tstyle={{ backgroundColor: \"#CBF3F0\" }}\n\t\t\t\tInputLabelProps={{ style: { color: \"#000000\" } }}\n\t\t\t\tonMouseEnter={() => {\n\t\t\t\t\tdispatch(focus.actions.tryUpdateFocus(\"RIVER\"));\n\t\t\t\t\tdispatch(trySetSourceCard(\"note\", config.origin));\n\t\t\t\t}}\n\t\t\t></HybridCardField>\n\t\t\t<DeleteCardButton cardID={config.cardID}></DeleteCardButton>\n\t\t\t{isActiveRiver && <GrabForFieldButton cardConfig={config} creationType=\"note\"></GrabForFieldButton>}\n\t\t\t{config.origin && <JumpToOriginButton cardOrigin={config.origin as NoteOrigin}></JumpToOriginButton>}\n\t\t</Card>\n\t);\n};\n\nconst QACard = ({ config }: CardProps) => {\n\tconst dispatch = useDispatch();\n\tconst { id, field } = useSelector(getHoveredCardData);\n\tconst isHoveredCard = config.cardID === id;\n\n\t// we only offer one way to use card-content in other cards: extract\n\t// we do not allow grabbing from other cards, just from the document, so we only need the grab button in the ActiveRiver\n\tconst isActiveRiver = useSelector(focus.selectors.getDisplayFocus) === \"ACTIVE_RIVER\";\n\n\treturn (\n\t\t<Card variant=\"elevation\" elevation={5}>\n\t\t\t<Grid container direction=\"column\" spacing={1}>\n\t\t\t\t<Grid item>\n\t\t\t\t\t<div style={isHoveredCard && field === \"q\" ? borderStyle : undefined}>\n\t\t\t\t\t\t<HybridCardField\n\t\t\t\t\t\t\tsaveChanges={(value) => {\n\t\t\t\t\t\t\t\tdispatch(cards.actions.updateCardContent(value, config.cardID, \"q\", \"REPLACE\", config.origin));\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\tstoreValue={(config.content as QACardContent).q}\n\t\t\t\t\t\t\tlabel={\"Question\"}\n\t\t\t\t\t\t\tvariant=\"filled\"\n\t\t\t\t\t\t\tstyle={{ backgroundColor: \"#FFBF69\" }}\n\t\t\t\t\t\t\tInputLabelProps={{ style: { color: \"#000000\" } }}\n\t\t\t\t\t\t\tonMouseEnter={() => {\n\t\t\t\t\t\t\t\tdispatch(focus.actions.tryUpdateFocus(\"RIVER\"));\n\t\t\t\t\t\t\t\tdispatch(trySetSourceCard(\"q\", config.origin));\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t></HybridCardField>\n\t\t\t\t\t\t{isActiveRiver && <GrabForFieldButton cardConfig={config} creationType=\"q\"></GrabForFieldButton>}\n\t\t\t\t\t\t{config.origin && !isNullOrUndefined((config.origin as QOnlyQAOrigin).q?.spanIndex) && (\n\t\t\t\t\t\t\t<JumpToOriginButton cardOrigin={(config.origin as QAOrigin).q as SingleOrigin}></JumpToOriginButton>\n\t\t\t\t\t\t)}\n\t\t\t\t\t</div>\n\t\t\t\t</Grid>\n\t\t\t\t<Grid item>\n\t\t\t\t\t<div style={isHoveredCard && field === \"a\" ? borderStyle : undefined}>\n\t\t\t\t\t\t<HybridCardField\n\t\t\t\t\t\t\tsaveChanges={(value) => {\n\t\t\t\t\t\t\t\tdispatch(cards.actions.updateCardContent(value, config.cardID, \"a\", \"REPLACE\", config.origin));\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\tstoreValue={(config.content as QACardContent).a}\n\t\t\t\t\t\t\tlabel={\"Answer\"}\n\t\t\t\t\t\t\tstyle={{ backgroundColor: \"#2EC4B6\" }}\n\t\t\t\t\t\t\tInputLabelProps={{ style: { color: \"#000000\" } }}\n\t\t\t\t\t\t\tonMouseEnter={() => {\n\t\t\t\t\t\t\t\tdispatch(focus.actions.tryUpdateFocus(\"RIVER\"));\n\t\t\t\t\t\t\t\tdispatch(trySetSourceCard(\"a\", config.origin));\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t></HybridCardField>\n\t\t\t\t\t\t{isActiveRiver && <GrabForFieldButton cardConfig={config} creationType=\"a\"></GrabForFieldButton>}\n\t\t\t\t\t\t{config.origin && !isNullOrUndefined((config.origin as AOnlyQAOrigin).a?.spanIndex) && (\n\t\t\t\t\t\t\t<JumpToOriginButton cardOrigin={(config.origin as QAOrigin).a as SingleOrigin}></JumpToOriginButton>\n\t\t\t\t\t\t)}\n\t\t\t\t\t</div>\n\t\t\t\t</Grid>\n\t\t\t\t<Grid item>\n\t\t\t\t\t<DeleteCardButton cardID={config.cardID}></DeleteCardButton>\n\t\t\t\t</Grid>\n\t\t\t</Grid>\n\t\t</Card>\n\t);\n};\n\nexport const ClayCard = ({ config, riverID }: CardProps) => {\n\tswitch (config.type) {\n\t\tcase \"Note\":\n\t\t\treturn <NoteCard config={config} riverID={riverID}></NoteCard>;\n\t\tcase \"Q-A\":\n\t\t\treturn <QACard config={config} riverID={riverID}></QACard>;\n\t}\n};\n","import Grid from \"@material-ui/core/Grid\";\nimport React from \"react\";\nimport { incrementer } from \"../../../../shared/utils\";\nimport { ClayCard } from \"./ClayCard\";\nimport { CardConfig } from \"../../../cards/model/model\";\nimport { Divider } from \"@material-ui/core\";\n\n//TODO-RC: remove saved documents / load documents via menu vs via uploading\n\nconst GridDivider = () => (\n\t<Grid item>\n\t\t<Divider></Divider>\n\t</Grid>\n);\n\nexport const toCardGridItemsWithDividers = (cards: CardConfig[], riverID: string) => {\n\tconst increment = incrementer();\n\n\treturn cards.reduce((prev, currentCard, index, arr) => {\n\t\tprev.push(\n\t\t\t<Grid item key={increment()}>\n\t\t\t\t<ClayCard config={currentCard} riverID={riverID} key={increment()}></ClayCard>\n\t\t\t</Grid>\n\t\t);\n\n\t\tconst notLastCard = index < arr.length - 1;\n\t\tif (notLastCard) prev.push(<GridDivider key={increment()}></GridDivider>);\n\t\treturn prev;\n\t}, [] as any[]);\n};\n","import FeaturedVideoIcon from \"@material-ui/icons/FeaturedVideo\";\nimport React from \"react\";\nimport { IconButton } from \"@material-ui/core\";\nimport { useDispatch } from \"react-redux\";\nimport cards from \"../../../../cards\";\nimport focus from \"../../../../focus\";\n\nexport const AddNoteButton = () => {\n\tconst dispatch = useDispatch();\n\treturn (\n\t\t<IconButton\n\t\t\ttype=\"button\"\n\t\t\tonClick={() => {\n\t\t\t\tdispatch(cards.actions.cardPush({ card: { type: \"Note\", content: \"\" } }));\n\t\t\t}}\n\t\t\tonMouseEnter={() => {\n\t\t\t\tdispatch(focus.actions.tryUpdateFocus(\"RIVER_CONTROL\"));\n\t\t\t}}\n\t\t>\n\t\t\t<FeaturedVideoIcon></FeaturedVideoIcon>\n\t\t</IconButton>\n\t);\n};\n","import FeaturedPlayListIcon from \"@material-ui/icons/FeaturedPlayList\";\nimport React from \"react\";\nimport { IconButton } from \"@material-ui/core\";\nimport { useDispatch } from \"react-redux\";\nimport cards from \"../../../../cards\";\nimport focus from \"../../../../focus\";\n\nexport const AddQAButton = () => {\n\tconst dispatch = useDispatch();\n\treturn (\n\t\t<IconButton\n\t\t\ttype=\"button\"\n\t\t\tonClick={() => {\n\t\t\t\tdispatch(cards.actions.cardPush({ card: { type: \"Q-A\", content: { q: \"\", a: \"\" } } }));\n\t\t\t}}\n\t\t\tonMouseEnter={() => {\n\t\t\t\tdispatch(focus.actions.tryUpdateFocus(\"RIVER_CONTROL\"));\n\t\t\t}}\n\t\t>\n\t\t\t<FeaturedPlayListIcon></FeaturedPlayListIcon>\n\t\t</IconButton>\n\t);\n};\n","import { Typography, Divider } from \"@material-ui/core\";\nimport Accordion from \"@material-ui/core/Accordion\";\nimport AccordionSummary from \"@material-ui/core/AccordionSummary\";\nimport AccordionDetails from \"@material-ui/core/AccordionDetails\";\nimport Grid from \"@material-ui/core/Grid\";\nimport React, { useState } from \"react\";\nimport { trySetPushToRiver } from \"../../actions\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { AddNoteButton } from \"./Buttons/AddNoteButton\";\nimport { AddQAButton } from \"./Buttons/AddQAButton\";\nimport { getPushToRiver } from \"../../selectors\";\n\n//TODO-NICE: make it not be accordion but closeable?\n//TODO-NICE: make local show / hide notes\nexport const CardRiverAccordion = ({\n\triverID,\n\tgridItems,\n\tsummary,\n}: {\n\triverID: string;\n\tgridItems: any;\n\tsummary: string;\n}) => {\n\tconst defaultElevation = 3;\n\tconst highlightElevation = 20;\n\tconst [elevation, setElevation] = useState(defaultElevation);\n\tconst pushToRiver = useSelector(getPushToRiver);\n\n\tif (riverID === pushToRiver && elevation === defaultElevation) {\n\t\tsetElevation(highlightElevation);\n\t} else if (riverID !== pushToRiver && elevation !== defaultElevation) {\n\t\tsetElevation(defaultElevation);\n\t}\n\n\tconst dispatch = useDispatch();\n\treturn (\n\t\t<Accordion\n\t\t\tdefaultExpanded={true}\n\t\t\tonMouseEnter={() => {\n\t\t\t\tdispatch(trySetPushToRiver(riverID));\n\t\t\t}}\n\t\t\televation={elevation}\n\t\t>\n\t\t\t<AccordionSummary>\n\t\t\t\t<Typography\n\t\t\t\t\tvariant=\"h6\"\n\t\t\t\t\talign=\"center\"\n\t\t\t\t\tstyle={{ MozUserSelect: \"none\", WebkitUserSelect: \"none\", msUserSelect: \"none\" }}\n\t\t\t\t>\n\t\t\t\t\t{summary}\n\t\t\t\t</Typography>\n\t\t\t</AccordionSummary>\n\t\t\t<AccordionDetails>\n\t\t\t\t<Grid container direction=\"column\" spacing={2} justify=\"center\" alignItems=\"stretch\">\n\t\t\t\t\t<Grid item>\n\t\t\t\t\t\t<AddQAButton></AddQAButton>\n\t\t\t\t\t\t<AddNoteButton></AddNoteButton>\n\t\t\t\t\t\t<Divider></Divider>\n\t\t\t\t\t</Grid>\n\t\t\t\t\t{gridItems}\n\t\t\t\t</Grid>\n\t\t\t</AccordionDetails>\n\t\t</Accordion>\n\t);\n};\n","import { CardConfig, NoteConfig, QAConfig } from \"../../../cards/model/model\";\nimport { toCardGridItemsWithDividers } from \"./toCardGridItemsWithDividers\";\nimport { useMemo } from \"react\";\nimport { CardRiverAccordion } from \"./CardRiverAccordion\";\nimport React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { getRiverContentState, getRiverContentFilter } from \"../../selectors\";\nimport { ContentFilter } from \"../../model\";\n\n//TODO-RC: make Card-River non-overlapping and scroll the cards that we are considering from the Menus into view\n//TODO-NICE: untangle these components, dont need to so many subs?\n\nconst noteContainsContentFilter = (noteConfig: NoteConfig, contentFilter: ContentFilter) =>\n\tnoteConfig.content.includes(contentFilter);\n\nconst qaContainsContentFilter = (qaConfig: QAConfig, contentFilter: ContentFilter) =>\n\tqaConfig.content.a.includes(contentFilter) || qaConfig.content.q.includes(contentFilter);\n\nexport const ChildCardRiver = ({ riverID, riverCards }: { riverID: string; riverCards: CardConfig[] }) => {\n\tconst riverContentState = useSelector(getRiverContentState);\n\n\t//TODO-NICE: use regex for upper/lower-case\n\tconst contentFilter = useSelector(getRiverContentFilter);\n\n\tconsole.log(contentFilter);\n\n\t// this should only change if the store values change\n\tconst gridItems = useMemo(() => {\n\t\tlet inputCards = riverCards;\n\n\t\tif (riverContentState === \"NONE\") {\n\t\t\treturn [];\n\t\t}\n\n\t\tif (riverContentState !== \"ALL\") {\n\t\t\tif (riverContentState === \"QAS\") {\n\t\t\t\tinputCards = riverCards.filter((config) => config.type === \"Q-A\");\n\t\t\t}\n\t\t\tif (riverContentState === \"NOTES\") {\n\t\t\t\tinputCards = riverCards.filter((config) => config.type === \"Note\");\n\t\t\t}\n\t\t}\n\t\t//TODO-NICE: optimize this waste, move this out of the memo as it changes more rapidly\n\t\tif (contentFilter !== \"\")\n\t\t\tinputCards = inputCards.filter((card) => {\n\t\t\t\tswitch (card.type) {\n\t\t\t\t\tcase \"Note\":\n\t\t\t\t\t\treturn noteContainsContentFilter(card as NoteConfig, contentFilter);\n\t\t\t\t\tcase \"Q-A\":\n\t\t\t\t\t\treturn qaContainsContentFilter(card as QAConfig, contentFilter);\n\t\t\t\t}\n\t\t\t\treturn false;\n\t\t\t});\n\n\t\treturn toCardGridItemsWithDividers(inputCards, riverID);\n\t}, [riverCards, riverID, riverContentState, contentFilter]);\n\n\treturn <CardRiverAccordion riverID={riverID} gridItems={gridItems} summary={riverID}></CardRiverAccordion>;\n};\n","import { CardID } from \"../cards/model/model\";\nimport { CardField } from \"../cards/model/model-content\";\nimport { CardOrigin } from \"../cards/model/model-origin\";\n\nexport type RiverMakeUp = { riverID: string; cardIDs: CardID[] };\n\nexport type RiverMakeUps = { [riverID: string]: RiverMakeUp };\n\nexport type RiverShowState = \"SHOW\" | \"HIDE\";\n\nexport type RiverContentState = \"ALL\" | \"NOTES\" | \"QAS\" | \"NONE\";\n\n//TODO-NICE: rename pushto/active river\n\n// SourceCard is used when selecting/extracting from a card\nexport type SourceCard = { origin?: CardOrigin; sourceField: CardField };\n\nexport type ContentFilter = string;\n\nexport type CardRiverState = {\n\triverMakeUps: RiverMakeUps;\n\tactiveRiverMakeUpID: string;\n\tpushToRiverID: string;\n\tlastRiverIDNumber: number;\n\t// show/hide river\n\triverShowState: RiverShowState;\n\t// filter content\n\triverContentState: RiverContentState;\n\t// this is used to determine which card should be highlighted in reaction to hovering over it in the context-menu\n\thighlightedCardID: null | CardID;\n\thighlightedCardField: null | CardField;\n\t// is used to determine if we are extracting from a card\n\tsourceCard: SourceCard | null;\n\tcontentFilter: ContentFilter | \"\";\n};\n\nexport const pageNumberToRiverMakeUpID = (page: number) => \"CardRiver \" + page;\n\nexport const riverMakeUpIDToPageNumber = (riverID: string) => parseInt(riverID.replace(\"CardRiver \", \"\"));\n","import { Grid } from \"@material-ui/core\";\nimport { useSelector } from \"react-redux\";\nimport { getRiverMakeUps } from \"../../selectors\";\nimport React, { useRef, useEffect } from \"react\";\nimport cards from \"../../../cards\";\nimport focus from \"../../../focus\";\nimport display from \"../../../display\";\nimport { incrementer } from \"../../../../shared/utils\";\nimport { ChildCardRiver } from \"../CardRiver/ChildCardRiver\";\nimport { riverMakeUpIDToPageNumber } from \"../../model\";\n\n//TODO-PREF: memoize Rivers (not necessary right now, because we just hide)\n\nexport const SummaryRiver = () => {\n\tconst displayFocus = useSelector(focus.selectors.getDisplayFocus);\n\tconst currentPage = useSelector(display.selectors.getCurrentPage);\n\tconst cardConfigs = useSelector(cards.selectors.getCards);\n\tconst riverMakeUps = Object.values(useSelector(getRiverMakeUps));\n\tconst focusRef = useRef<HTMLDivElement | null>(null);\n\n\t// the current-page river is scrolled into view\n\tuseEffect(() => {\n\t\tif (displayFocus === \"SUMMARY_RIVER\" && focusRef.current !== null) {\n\t\t\t(focusRef.current as HTMLDivElement).focus();\n\t\t\t(focusRef.current as HTMLDivElement).scrollIntoView({ behavior: \"smooth\", block: \"center\", inline: \"center\" });\n\t\t}\n\t}, [displayFocus, currentPage]);\n\n\tconst increment = incrementer();\n\t//TODO-NICE: find way to make UI-text unselectable globally, maybe different focus? But might be unperformant\n\treturn (\n\t\t<Grid container justify=\"flex-start\" direction=\"row\" alignItems=\"stretch\" spacing={1}>\n\t\t\t{riverMakeUps.map((makeUp) =>\n\t\t\t\tmakeUp.cardIDs.length > 0 ? (\n\t\t\t\t\t<Grid\n\t\t\t\t\t\titem\n\t\t\t\t\t\tref={riverMakeUpIDToPageNumber(makeUp.riverID) === currentPage ? focusRef : null}\n\t\t\t\t\t\tkey={increment()}\n\t\t\t\t\t>\n\t\t\t\t\t\t<ChildCardRiver\n\t\t\t\t\t\t\triverID={makeUp.riverID}\n\t\t\t\t\t\t\triverCards={makeUp.cardIDs.map((id) => cardConfigs[id])}\n\t\t\t\t\t\t\tkey={increment()}\n\t\t\t\t\t\t></ChildCardRiver>\n\t\t\t\t\t</Grid>\n\t\t\t\t) : null\n\t\t\t)}\n\t\t</Grid>\n\t);\n};\n","import React from \"react\";\nimport Grid from \"@material-ui/core/Grid\";\nimport focus from \"../../../focus\";\nimport { useSelector } from \"react-redux\";\nimport { SummaryRiver } from \"./SummaryRiver\";\n\n//TODO-RC: dont show empty rivers in summary, make dropdown/create empty river button\n\nexport const SummaryRiverView = () => {\n\tconst displayFocus = useSelector(focus.selectors.getDisplayFocus);\n\n\treturn (\n\t\t<Grid item hidden={displayFocus !== \"SUMMARY_RIVER\"}>\n\t\t\t<SummaryRiver></SummaryRiver>\n\t\t</Grid>\n\t);\n};\n","import React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { getActiveRiverCards, getActiveRiverMakeUpID } from \"../../selectors\";\nimport { ChildCardRiver } from \"../CardRiver/ChildCardRiver\";\n\n//TODO-NICE: selection in CardRiver should stay highlighted when the contextMenu opens?\n\n//TODO-NICE: contextMenu as permant element, maybe sidebar?\n//TODO-NICE: preview in ContextMenu of how selected string would be used\n\nexport const ActiveCardRiver = () => {\n\tconst riverID = useSelector(getActiveRiverMakeUpID);\n\tconst riverCards = useSelector(getActiveRiverCards);\n\n\treturn <ChildCardRiver riverID={riverID} riverCards={riverCards}></ChildCardRiver>;\n};\n","import React from \"react\";\nimport Grid from \"@material-ui/core/Grid\";\nimport { ActiveCardRiver } from \"./ActiveCardRiver\";\n//TODO-NICE: make River-View, where you can just see one card and can make it smaller? Maybe just button to zoom \"in\" / just seeing the current river\n//TODO-NICE: mark Origin-Span or maybe rect over whole page-section?\n//TODO-NICE: make reconciliation algorithm for origin when new PDF versions come out\n\nexport const ActiveRiverColumn = ({ hidden }: any) => {\n\treturn (\n\t\t<Grid\n\t\t\titem\n\t\t\tstyle={{\n\t\t\t\twidth: \"38%\",\n\t\t\t}}\n\t\t\thidden={hidden}\n\t\t>\n\t\t\t<ActiveCardRiver></ActiveCardRiver>\n\t\t</Grid>\n\t);\n};\n","import React from \"react\";\nimport Grid from \"@material-ui/core/Grid\";\nimport display from \"../../../display\";\nimport focus from \"../../../focus\";\nimport { useSelector } from \"react-redux\";\nimport { ActiveRiverColumn } from \"./ActiveRiverColumn\";\nimport { riverShowStateIsShow } from \"../../selectors\";\n\nexport const ActiveRiverView = () => {\n\tconst displayFocus = useSelector(focus.selectors.getDisplayFocus);\n\tconst showMaterial = useSelector(display.selectors.displayStatusIsShow);\n\tconst showRiver = useSelector(riverShowStateIsShow);\n\treturn (\n\t\t<Grid item hidden={displayFocus !== \"ACTIVE_RIVER\"}>\n\t\t\t<Grid container justify=\"space-around\" direction=\"row\" alignItems=\"stretch\">\n\t\t\t\t<ActiveRiverColumn hidden={!showRiver}></ActiveRiverColumn>\n\t\t\t\t<display.components.MaterialDisplayColumnWithSize\n\t\t\t\t\thidden={!showMaterial}\n\t\t\t\t></display.components.MaterialDisplayColumnWithSize>\n\t\t\t</Grid>\n\t\t</Grid>\n\t);\n};\n","import { withStyles, CheckboxProps, Checkbox } from \"@material-ui/core\";\nimport React from \"react\";\nimport { green } from \"@material-ui/core/colors\";\nexport const GreenCheckbox = withStyles({\n\troot: {\n\t\tcolor: green[400],\n\t\t\"&$checked\": {\n\t\t\tcolor: green[600],\n\t\t},\n\t},\n\tchecked: {},\n})((props: CheckboxProps) => <Checkbox color=\"default\" {...props} />);\n","import { FormGroup, FormControlLabel } from \"@material-ui/core\";\nimport React from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { getRiverContentState } from \"../selectors\";\nimport { RiverContentState } from \"../model\";\nimport { setRiverContentState } from \"../actions\";\nimport { GreenCheckbox } from \"../../../shared/GreenCheckbox\";\n\nexport const RiverContentFormGroup = () => {\n\tconst riverContentState = useSelector(getRiverContentState);\n\tconst dispatch = useDispatch();\n\n\tconst showQAs = riverContentState === \"ALL\" || riverContentState === \"QAS\";\n\tconst showNotes = riverContentState === \"ALL\" || riverContentState === \"NOTES\";\n\n\tconst changeContentState = (clickedState: RiverContentState) => {\n\t\tif (!showQAs && clickedState === \"QAS\") {\n\t\t\tif (showNotes) {\n\t\t\t\tdispatch(setRiverContentState(\"ALL\"));\n\t\t\t} else {\n\t\t\t\tdispatch(setRiverContentState(\"QAS\"));\n\t\t\t}\n\t\t\treturn;\n\t\t}\n\n\t\tif (!showNotes && clickedState === \"NOTES\") {\n\t\t\tif (showQAs) {\n\t\t\t\tdispatch(setRiverContentState(\"ALL\"));\n\t\t\t} else {\n\t\t\t\tdispatch(setRiverContentState(\"NOTES\"));\n\t\t\t}\n\t\t\treturn;\n\t\t}\n\n\t\tif (showQAs && clickedState === \"QAS\") {\n\t\t\tif (!showNotes) {\n\t\t\t\tdispatch(setRiverContentState(\"NONE\"));\n\t\t\t} else {\n\t\t\t\tdispatch(setRiverContentState(\"NOTES\"));\n\t\t\t}\n\t\t\treturn;\n\t\t}\n\n\t\tif (showNotes && clickedState === \"NOTES\") {\n\t\t\tif (!showQAs) {\n\t\t\t\tdispatch(setRiverContentState(\"NONE\"));\n\t\t\t} else {\n\t\t\t\tdispatch(setRiverContentState(\"QAS\"));\n\t\t\t}\n\t\t\treturn;\n\t\t}\n\t};\n\n\treturn (\n\t\t<FormGroup>\n\t\t\t<FormControlLabel\n\t\t\t\tcontrol={\n\t\t\t\t\t<GreenCheckbox\n\t\t\t\t\t\tchecked={showQAs}\n\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\tchangeContentState(\"QAS\");\n\t\t\t\t\t\t}}\n\t\t\t\t\t/>\n\t\t\t\t}\n\t\t\t\tlabel=\"QAs\"\n\t\t\t/>\n\t\t\t<FormControlLabel\n\t\t\t\tcontrol={\n\t\t\t\t\t<GreenCheckbox\n\t\t\t\t\t\tchecked={showNotes}\n\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\tchangeContentState(\"NOTES\");\n\t\t\t\t\t\t}}\n\t\t\t\t\t/>\n\t\t\t\t}\n\t\t\t\tlabel=\"Notes\"\n\t\t\t/>\n\t\t</FormGroup>\n\t);\n};\n","import { CardRiverState, RiverShowState, pageNumberToRiverMakeUpID, RiverMakeUp, RiverContentState } from \"./model\";\nimport { FinalizedCardPayload, CardID } from \"../cards/model/model\";\nimport cards from \"../cards\";\nimport * as t from \"./actionTypes\";\nimport display from \"../display\";\nimport focus from \"../focus\";\nimport { UserFocus } from \"../focus/model\";\nimport { ArchiveRiver } from \"../db/model\";\nimport db from \"../db\";\n\nconst initialState: CardRiverState = {\n\triverMakeUps: {\n\t\t[pageNumberToRiverMakeUpID(1)]: {\n\t\t\triverID: pageNumberToRiverMakeUpID(1),\n\t\t\tcardIDs: [\"2\", \"0\", \"1\"],\n\t\t},\n\t},\n\tpushToRiverID: pageNumberToRiverMakeUpID(1),\n\tactiveRiverMakeUpID: pageNumberToRiverMakeUpID(1),\n\tlastRiverIDNumber: 1,\n\triverShowState: \"SHOW\",\n\thighlightedCardID: null,\n\thighlightedCardField: null,\n\triverContentState: \"ALL\",\n\tsourceCard: null,\n\tcontentFilter: \"\",\n};\n\nconst emptyCardRiver = (page: number): RiverMakeUp => {\n\treturn {\n\t\triverID: pageNumberToRiverMakeUpID(page),\n\t\tcardIDs: [],\n\t};\n};\n\nconst updateStateWithMakeUps = (state: CardRiverState, ...makeUps: RiverMakeUp[]) => {\n\tconst updatedState = { ...state };\n\tmakeUps.forEach((makeUp) => {\n\t\tupdatedState.riverMakeUps[makeUp.riverID] = makeUp;\n\t});\n\treturn updatedState;\n};\n\nconst deactivateActiveCardRiver = (state: CardRiverState) => {\n\treturn { ...state.riverMakeUps[state.activeRiverMakeUpID], active: false };\n};\n\nconst removeCardFromRivers = (state: CardRiverState, cardID: CardID): CardRiverState => {\n\tconst riverMakeUps = Object.fromEntries(\n\t\tObject.entries(state.riverMakeUps).map((entry) => [\n\t\t\tentry[0],\n\t\t\t{ ...entry[1], cardIDs: entry[1].cardIDs.filter((id) => id !== cardID) },\n\t\t])\n\t);\n\treturn { ...state, riverMakeUps };\n};\n\nconst cardRiverState = (state = initialState, { type, payload }: { type: string; payload: any }) => {\n\tlet riverMakeUp;\n\tlet riverMakeUps;\n\tswitch (type) {\n\t\tcase display.actionTypes.PAGE_UPDATE:\n\t\t\tlet activeRiver;\n\t\t\tif (!state.riverMakeUps[pageNumberToRiverMakeUpID(payload as number)]) {\n\t\t\t\tactiveRiver = emptyCardRiver(payload as number);\n\t\t\t} else {\n\t\t\t\tactiveRiver = { ...state.riverMakeUps[pageNumberToRiverMakeUpID(payload as number)] };\n\t\t\t}\n\n\t\t\tconst oldRiver = deactivateActiveCardRiver(state);\n\n\t\t\treturn {\n\t\t\t\t...updateStateWithMakeUps(state, activeRiver, oldRiver),\n\t\t\t\tactiveRiverMakeUpID: activeRiver.riverID,\n\t\t\t\tpushToRiverID: activeRiver.riverID,\n\t\t\t};\n\n\t\tcase cards.actionTypes.CARD_PUSH:\n\t\t\triverMakeUp = {\n\t\t\t\t...state.riverMakeUps[state.pushToRiverID],\n\t\t\t\tcardIDs: [...state.riverMakeUps[state.pushToRiverID].cardIDs, (payload as FinalizedCardPayload).card.cardID],\n\t\t\t};\n\t\t\triverMakeUps = { ...state.riverMakeUps };\n\t\t\triverMakeUps[state.pushToRiverID] = riverMakeUp;\n\n\t\t\treturn { ...state, riverMakeUps: riverMakeUps };\n\t\tcase cards.actionTypes.CARD_REMOVE:\n\t\t\treturn removeCardFromRivers(state, payload as string);\n\t\tcase t.RIVER_SHOW_STATE:\n\t\t\treturn { ...state, riverShowState: payload as RiverShowState };\n\t\tcase t.RIVER_CONTENT_STATE:\n\t\t\treturn { ...state, riverContentState: payload as RiverContentState };\n\t\tcase t.RIVER_PUSH_STATE:\n\t\t\treturn { ...state, pushToRiverID: payload };\n\t\tcase t.RIVER_HOVERED_CARD:\n\t\t\treturn { ...state, highlightedCardID: payload.id, highlightedCardField: payload.field };\n\t\tcase focus.actionTypes.FOCUS_UPDATE:\n\t\t\tlet sourceCard = state.sourceCard;\n\n\t\t\t//TODO-NICE: untangle the focus logic, might be that I can just reset in the first case\n\t\t\t// need to reset sourceCard because we want to trigger the correct Selection-Grab when in the document\n\t\t\tif ((payload as UserFocus) === \"DOCUMENT\" && sourceCard) {\n\t\t\t\tsourceCard = null;\n\t\t\t}\n\n\t\t\t// reset hovered-card once we are not focused on the context menu\n\t\t\t//TODO-NICE: investigate a better factoring for the relation between river and creation\n\t\t\tif (state.highlightedCardID !== null && (payload as UserFocus) !== \"CONTEXT_MENU\") {\n\t\t\t\treturn { ...state, highlightedCardID: null, highlightedCardField: null, sourceCard };\n\t\t\t} else {\n\t\t\t\treturn { ...state, sourceCard };\n\t\t\t}\n\t\tcase cards.actionTypes.DOCUMENT_CHANGE:\n\t\t\tif (payload) {\n\t\t\t\treturn {\n\t\t\t\t\t...initialState,\n\t\t\t\t\triverMakeUps: (payload as ArchiveRiver).riverMakeUps,\n\t\t\t\t\tactiveRiverMakeUpID: (payload as ArchiveRiver).activeRiverMakeUpID,\n\t\t\t\t\tpushToRiverID: (payload as ArchiveRiver).pushToRiverID,\n\t\t\t\t\tlastRiverIDNumber: (payload as ArchiveRiver).lastRiverIDNumber,\n\t\t\t\t};\n\t\t\t} else {\n\t\t\t\treturn initialState;\n\t\t\t}\n\t\tcase db.actionTypes.LOAD_DOCUMENT_DATA_SETS:\n\t\t\t// basically the same as DOCUMENT_CHANGE, just only triggered\n\t\t\t//when uploading data that corresponds to current document\n\t\t\t// and if not, we dont reset\n\t\t\tif (payload.newActiveDataSet) {\n\t\t\t\treturn {\n\t\t\t\t\t...initialState,\n\t\t\t\t\triverMakeUps: (payload.newActiveDataSet as ArchiveRiver).riverMakeUps,\n\t\t\t\t\tactiveRiverMakeUpID: (payload.newActiveDataSet as ArchiveRiver).activeRiverMakeUpID,\n\t\t\t\t\tpushToRiverID: (payload.newActiveDataSet as ArchiveRiver).pushToRiverID,\n\t\t\t\t\tlastRiverIDNumber: (payload.newActiveDataSet as ArchiveRiver).lastRiverIDNumber,\n\t\t\t\t};\n\t\t\t} else {\n\t\t\t\treturn state;\n\t\t\t}\n\t\tcase t.RIVER_CARD_SOURCE:\n\t\t\treturn { ...state, sourceCard: payload };\n\t\tcase t.RIVER_CONTENT_FILTER:\n\t\t\treturn { ...state, contentFilter: payload };\n\t\tdefault:\n\t\t\treturn state;\n\t}\n};\n\nexport default cardRiverState;\n","import * as constants from \"./constants\";\nimport * as components from \"./components\";\nimport reducer from \"./reducer\";\nimport * as selectors from \"./selectors\";\nimport * as actions from \"./actions\";\n\nexport default { constants, components, reducer, selectors, actions };\n","import { createSelector } from \"reselect\";\nimport display from \"../display\";\nimport river from \"../river\";\nimport cards from \"../cards\";\nimport { DocumentData } from \"../db/model\";\n\nexport const collectCurrentDBData: (state: any) => DocumentData | null = createSelector(\n\tdisplay.selectors.getPDFName,\n\triver.selectors.getRiverMakeUps,\n\triver.selectors.getActiveRiverMakeUpID,\n\triver.selectors.getPushToRiver,\n\triver.selectors.getLastRiverIDNumber,\n\tcards.selectors.getCards,\n\tcards.selectors.getLastCardIDNumber,\n\t(pdfName, riverMakeUps, activeRiverMakeUpID, pushToRiverID, lastRiverIDNumber, cards, lastCardIDNumber) => {\n\t\treturn {\n\t\t\tname: pdfName as string,\n\t\t\triverMakeUps,\n\t\t\tactiveRiverMakeUpID,\n\t\t\tpushToRiverID,\n\t\t\tlastRiverIDNumber,\n\t\t\tcards,\n\t\t\tlastCardIDNumber,\n\t\t};\n\t}\n);\n","import { Dispatch } from \"redux\";\nimport display from \"../display\";\nimport cards from \"../cards\";\nimport { ActionCreators } from \"redux-undo\";\nimport db from \"../db\";\nimport { collectCurrentDBData } from \"./selectors\";\nimport { DocumentData } from \"../db/model\";\n\nexport const archiveCurrentDBData = () => {\n\treturn (dispatch: Dispatch, getState: Function) => {\n\t\tconst state = getState();\n\t\tconst currentPDFName = display.selectors.getPDFName(state);\n\n\t\tif (currentPDFName !== undefined) {\n\t\t\tconst dbData = collectCurrentDBData(state) as DocumentData;\n\t\t\tdispatch(db.actions.archiveDBData(dbData));\n\t\t}\n\t};\n};\n\nconst fileDownload = require(\"js-file-download\");\nexport const downloadDBData = () => {\n\treturn (dispatch: any, getState: Function) => {\n\t\t//actualize the db before downloading\n\t\tdispatch(archiveCurrentDBData());\n\n\t\tconst documentDataSets = db.selectors.getDocumentDataSets(getState());\n\t\tconst localString = new Date().toLocaleString();\n\t\tfileDownload(JSON.stringify(documentDataSets), localString + \" ClayMemory.txt\");\n\t};\n};\n\nexport const changeDocument = (pdf: File) => {\n\treturn (dispatch: Dispatch, getState: Function) => {\n\t\tconst newPDFName = pdf.name;\n\n\t\tconst state = getState();\n\t\tconst currentPDFName = display.selectors.getPDFName(state);\n\n\t\tconst documentDB = db.selectors.getDocumentDB(state);\n\n\t\t// save current data only if pdf has been uploaded / there is an active document\n\t\tif (currentPDFName !== undefined) {\n\t\t\tconst dbData = collectCurrentDBData(state) as DocumentData;\n\t\t\tdispatch(db.actions.archiveDBData(dbData));\n\t\t}\n\n\t\tdispatch(display.actions.pdfUpload(pdf));\n\n\t\t// if the uploaded pdf is the same as the active one, then we just reloaded the app (lost the pdf)\n\t\t// and dont need load data (loading data would lead to overwrite because of the syncing order)\n\t\t//TODO-NICE: make the sync between documentDB and active document for explicit, right now I just sync when a PDF is uploaded\n\t\tif (newPDFName === currentPDFName) {\n\t\t\treturn;\n\t\t}\n\t\t// load new data or reset\n\t\tconst newDocumentData = documentDB[newPDFName];\n\t\tif (newDocumentData) {\n\t\t\tdispatch({ type: cards.actionTypes.DOCUMENT_CHANGE, payload: newDocumentData });\n\t\t} else {\n\t\t\tdispatch({ type: cards.actionTypes.DOCUMENT_CHANGE });\n\t\t}\n\n\t\t// no undo-redo across documents\n\t\tdispatch(ActionCreators.clearHistory());\n\t};\n};\n","import { useRef, useEffect, MutableRefObject } from \"react\";\n\n// only global eventListener for now\nexport const useEventListener = (eventName: string, handler: any) => {\n\tconst savedHandler: MutableRefObject<Function> = useRef(() => {});\n\n\tuseEffect(() => {\n\t\tsavedHandler.current = handler;\n\t}, [handler]);\n\n\tuseEffect(() => {\n\t\tconst eventListener = (event: Event) => savedHandler.current(event);\n\t\tdocument.addEventListener(eventName, eventListener);\n\t\treturn () => {\n\t\t\tdocument.removeEventListener(eventName, eventListener);\n\t\t};\n\t}, [eventName]);\n};\n","export const NAME = \"creationData\";\n","import { NAME } from \"./constants\";\n\nexport const TOGGLE_CONTEXT_MENU = NAME + \"/TOGGLE_CONTEXT_MENU\";\nexport const CLOSE_CONTEXT_MENU = NAME + \"/CLOSE_CONTEXT_MENU\";\nexport const OPEN_CONTEXT_MENU = NAME + \"/OPEN_CONTEXT_MENU\";\nexport const SELECTED_STRING = NAME + \"/SELECTED_STRING\";\nexport const SELECTED_PARENT = NAME + \"/SELECTED_PARENT\";\nexport const DOCUMENT_POSITION = NAME + \"/SELECITON_POSITION\";\n","import { NAME } from \"./constants\";\nimport { createSelector } from \"reselect\";\nimport { CreationData } from \"./model\";\nimport river from \"../river\";\nimport display from \"../display\";\nimport { SingleOrigin } from \"../cards/model/model-origin\";\n\nexport const getAll = (state: any) => state[NAME].present;\n\nexport const getContextMenuState = createSelector(getAll, (state: CreationData) => state.open);\n\nexport const getContextMenuRef = createSelector(getAll, (state: CreationData) => state.menuRef);\n\nexport const getContextMenuFullCardsRef = createSelector(getAll, (state: CreationData) => state.fullCardRef);\n\nexport const getContextMenuQARefs = createSelector(getAll, (state: CreationData) => state.qaRefs);\n\nexport const getCurrentSelectionPosition = createSelector(getAll, (state: CreationData) => state.selectionPosition);\n\nexport const getContextMenuInitData = createSelector(\n\tgetCurrentSelectionPosition,\n\tgetContextMenuState,\n\tgetContextMenuRef,\n\tgetContextMenuQARefs,\n\triver.selectors.getPushToRiverCards,\n\t(position, state, menuRef, qaRefs, riverCards) => {\n\t\treturn { position, state, menuRef, qaRefs, riverCards };\n\t}\n);\n\nexport const getCurrentSelectedString = createSelector(getAll, (state: CreationData) => state.manuallySelectedString);\n\nexport const getCurrentSelectedParent = createSelector(getAll, (state: CreationData) => state.selectedParentSpan);\n\nexport const getCurrentOrigin = createSelector(\n\t(state: any) => state,\n\tdisplay.selectors.getCurrentPage,\n\tgetCurrentSelectedParent,\n\t(state, currentPage, selectedParent): SingleOrigin => {\n\t\treturn {\n\t\t\tspanIndex: display.selectors.getSpanIndex(state, selectedParent as HTMLSpanElement),\n\t\t\tpage: currentPage,\n\t\t};\n\t}\n);\n","import * as t from \"./actionTypes\";\nimport { CardType, CreationType } from \"../cards/model/model\";\nimport { CardOrigin, SingleOrigin, AOnlyQAOrigin, QOnlyQAOrigin } from \"../cards/model/model-origin\";\nimport cards from \"../cards\";\nimport focus from \"../focus\";\nimport { getCurrentSelectedString, getCurrentSelectedParent, getContextMenuState, getCurrentOrigin } from \"./selectors\";\nimport { isNullOrUndefined } from \"util\";\nimport display from \"../display\";\nimport river from \"../river\";\n\nexport const toggleContextMenu = () => {\n\treturn (dispatch: any, getState: Function) => {\n\t\tconst state = getState();\n\t\tif (display.selectors.getDataExists(state)) {\n\t\t\tdispatch({ type: t.TOGGLE_CONTEXT_MENU });\n\t\t\tdispatch(focus.actions.toggleContextMenuFocus());\n\t\t}\n\t};\n};\n\nexport const closeContextMenu = () => {\n\treturn (dispatch: any, getState: Function) => {\n\t\tif (getContextMenuState(getState())) {\n\t\t\tdispatch({ type: t.CLOSE_CONTEXT_MENU });\n\t\t\tdispatch(focus.actions.updateFocus(\"DOCUMENT\"));\n\t\t}\n\t};\n};\n\nexport const openContextMenu = () => {\n\treturn (dispatch: any) => {\n\t\tdispatch({ type: t.OPEN_CONTEXT_MENU });\n\t\tdispatch(focus.actions.updateFocus(\"DOCUMENT\"));\n\t};\n};\n\nexport const grabSelectionForContextMenu = (type: CardType, creationType: CreationType, cardID?: string) => {\n\treturn (dispatch: Function, getState: Function) => {\n\t\tdispatch(closeContextMenu());\n\n\t\tconst state = getState();\n\n\t\t//TODO-NICE: think of a way to make this intuitive\n\t\t//const updateType = type === \"Q-A\" ? \"REPLACE\" : \"APPEND\";\n\t\tconst updateType = \"REPLACE\";\n\t\tconst isUpdate = cardID !== undefined;\n\n\t\t// this should be from the document\n\t\tconst selectedString = getCurrentSelectedString(state);\n\t\tconst selectedParent = getCurrentSelectedParent(state);\n\n\t\t// always overwrite origin, even if isUpdate, because updateType==replace\n\t\tconst origin: CardOrigin | undefined = selectedParent ? getCurrentOrigin(state) : undefined;\n\n\t\tlet transformedOrigin;\n\t\tif (origin) {\n\t\t\t// we exploit that the input from the document is always just a SingleOrigin=NoteOrigin\n\t\t\t// need to transform it because we can create als QA-Cards from document\n\t\t\ttransformedOrigin = cards.services.transformInputOrigin(\n\t\t\t\torigin,\n\t\t\t\t\"note\",\n\t\t\t\tcreationType,\n\t\t\t\tisUpdate ? (cards.selectors.getCards(state)[cardID as string].origin as CardOrigin) : undefined\n\t\t\t);\n\t\t\tconsole.log(origin, transformedOrigin);\n\t\t}\n\n\t\tif (isUpdate) {\n\t\t\tdispatch(\n\t\t\t\tcards.actions.updateCardContent(\n\t\t\t\t\tselectedString,\n\t\t\t\t\tcardID as string,\n\t\t\t\t\tcreationType,\n\t\t\t\t\tupdateType,\n\t\t\t\t\ttransformedOrigin as CardOrigin\n\t\t\t\t)\n\t\t\t);\n\t\t} else {\n\t\t\tdispatch(\n\t\t\t\tcards.actions.pushCardContent(selectedString, creationType, updateType, type, transformedOrigin as CardOrigin)\n\t\t\t);\n\t\t}\n\n\t\tdispatch(resetManuallySelectedString());\n\t};\n};\n\nexport const hasNonEmptyOrigin = (origin?: CardOrigin) =>\n\t!!origin &&\n\t(!isNullOrUndefined((origin as SingleOrigin).spanIndex) ||\n\t\t!isNullOrUndefined((origin as AOnlyQAOrigin).a?.spanIndex) ||\n\t\t!isNullOrUndefined((origin as QOnlyQAOrigin).q?.spanIndex));\n\nexport const grabSelectionForSourceMenu = (\n\ttype: CardType,\n\tcreationType: CreationType,\n\tsourceField: CreationType,\n\torigin?: CardOrigin,\n\tcardID?: string\n) => {\n\treturn (dispatch: Function, getState: Function) => {\n\t\tdispatch(closeContextMenu());\n\n\t\tconst state = getState();\n\n\t\tconst updateType = \"REPLACE\";\n\t\tconst isUpdate = cardID !== undefined;\n\n\t\t//  this should be from the SourceCard in which the extract button has been clicked\n\t\t//\tthe SourceCard can or can not have an origin\n\t\tconst sourceHasNonEmptyOrigin = hasNonEmptyOrigin(origin);\n\t\tconst newOrigin = sourceHasNonEmptyOrigin\n\t\t\t? cards.services.transformInputOrigin(\n\t\t\t\t\torigin as CardOrigin,\n\t\t\t\t\tsourceField,\n\t\t\t\t\tcreationType,\n\t\t\t\t\tisUpdate ? (cards.selectors.getCards(state)[cardID as string].origin as CardOrigin) : undefined\n\t\t\t  )\n\t\t\t: undefined;\n\t\tconst selectedString = getCurrentSelectedString(state);\n\n\t\t//TODO-NICE: untangle the types so that the as CardOrigin is not necessary in the dispatch,\n\t\t//maybe merge content and origin to avoid two object hierarchies?\n\t\tif (isUpdate) {\n\t\t\tdispatch(\n\t\t\t\tcards.actions.updateCardContent(\n\t\t\t\t\tselectedString,\n\t\t\t\t\tcardID as string,\n\t\t\t\t\tcreationType,\n\t\t\t\t\tupdateType,\n\t\t\t\t\tnewOrigin as CardOrigin\n\t\t\t\t)\n\t\t\t);\n\t\t} else {\n\t\t\tdispatch(cards.actions.pushCardContent(selectedString, creationType, updateType, type, newOrigin as CardOrigin));\n\t\t}\n\n\t\tdispatch(resetManuallySelectedString());\n\t\tdispatch(river.actions.resetSourceCard());\n\t};\n};\n\nexport const updateManuallySelectedString = (str: string) => {\n\treturn { type: t.SELECTED_STRING, payload: str };\n};\n\nexport const resetManuallySelectedString = () => {\n\treturn updateManuallySelectedString(\"\");\n};\n\nexport const selectedParent = (span: null | HTMLSpanElement) => {\n\treturn { type: t.SELECTED_PARENT, payload: span };\n};\n\nexport const updateSelectionPosition = (x: number, y: number) => {\n\treturn { type: t.DOCUMENT_POSITION, payload: { x, y } };\n};\n","import * as t from \"./actionTypes\";\nimport { CreationData } from \"./model\";\nimport { createRef } from \"react\";\nimport { CardPayload } from \"../cards/model/model\";\nimport cards from \"../cards\";\n\nconst initialState: CreationData = {\n\topen: false,\n\tmenuRef: createRef(),\n\tfullCardRef: createRef(),\n\tqaRefs: [createRef(), createRef()],\n\tmanuallySelectedString: \"\",\n\tselectedParentSpan: null,\n\tselectionPosition: { x: 0, y: 0 },\n};\n\nconst creationData = (state = initialState, { type, payload }: { type: string; payload: any }): CreationData => {\n\tswitch (type) {\n\t\tcase t.TOGGLE_CONTEXT_MENU:\n\t\t\treturn { ...state, open: !state.open };\n\t\tcase t.CLOSE_CONTEXT_MENU:\n\t\t\treturn { ...state, open: false };\n\t\tcase t.OPEN_CONTEXT_MENU:\n\t\t\treturn { ...state, open: true };\n\t\tcase cards.actionTypes.CARD_PUSH:\n\t\t\t//TODO-NICE: reliance on order of refs (needs to be the same as order of qaRefs) and coupling to the fact that a new card was pushed\n\t\t\t// might need to change if I allow moving the cards\n\t\t\t//TODO-NICE: no support for multiple rivers\n\t\t\tif ((payload as CardPayload).card.type === \"Q-A\") return { ...state, qaRefs: [...state.qaRefs, createRef()] };\n\t\t\treturn state;\n\t\tcase t.SELECTED_STRING:\n\t\t\treturn { ...state, manuallySelectedString: payload as string };\n\t\tcase t.SELECTED_PARENT:\n\t\t\treturn { ...state, selectedParentSpan: payload };\n\t\tcase t.DOCUMENT_POSITION:\n\t\t\treturn { ...state, selectionPosition: payload };\n\t\tdefault:\n\t\t\treturn state;\n\t}\n};\n\nexport default creationData;\n","import React, { RefObject } from \"react\";\nimport NestedMenuItem from \"material-ui-nested-menu-item\";\nimport { MenuItem } from \"@material-ui/core\";\nimport { CardConfig, CardType, CreationType } from \"../../cards/model/model\";\nimport { QACardContent } from \"../../cards/model/model-content\";\nimport { useDispatch } from \"react-redux\";\nimport river from \"../../river\";\n\n//TODO-NICE: move to cards\nexport const noteCardIsEmpty = (content: string) => content === \"\";\nexport const qaCardIsNotFull = (content: QACardContent) =>\n\t(content as QACardContent).q === \"\" || (content as QACardContent).a === \"\";\n\ntype dispatchRiver = (type: CardType, creationType: CreationType, cardID?: string | undefined) => void;\n\n//TODO-NICE: rename this to note\n//TODO-NICE: entangle this dispatchRiver buisness and use hooks in the card components instead\n\nconst SingleOptionItem = ({ cardConfig, dispatchRiver }: { cardConfig: CardConfig; dispatchRiver: dispatchRiver }) => {\n\tconst dispatch = useDispatch();\n\n\treturn (\n\t\t<MenuItem\n\t\t\tonClick={() => {\n\t\t\t\tdispatchRiver(cardConfig.type, \"note\", cardConfig.cardID);\n\t\t\t}}\n\t\t\tonMouseEnter={() => {\n\t\t\t\tdispatch(river.actions.trySetHoveredCard(cardConfig.cardID, \"note\"));\n\t\t\t}}\n\t\t>\n\t\t\t{cardConfig.type}\n\t\t</MenuItem>\n\t);\n};\n\nconst QAOptionItem = ({\n\tcardConfig,\n\tdispatchRiver,\n\tqaRef,\n}: {\n\tcardConfig: CardConfig;\n\tdispatchRiver: dispatchRiver;\n\tqaRef: RefObject<any> | undefined;\n}) => {\n\tconst dispatch = useDispatch();\n\n\treturn (\n\t\t<NestedMenuItem label=\"Q-A\" parentMenuOpen={true}>\n\t\t\t<MenuItem\n\t\t\t\tref={qaRef}\n\t\t\t\tonClick={() => {\n\t\t\t\t\tdispatchRiver(\"Q-A\", \"q\", cardConfig.cardID);\n\t\t\t\t}}\n\t\t\t\tonMouseEnter={() => {\n\t\t\t\t\tdispatch(river.actions.trySetHoveredCard(cardConfig.cardID, \"q\"));\n\t\t\t\t}}\n\t\t\t>\n\t\t\t\tQ\n\t\t\t</MenuItem>\n\t\t\t<MenuItem\n\t\t\t\tonClick={() => {\n\t\t\t\t\tdispatchRiver(\"Q-A\", \"a\", cardConfig.cardID);\n\t\t\t\t}}\n\t\t\t\tonMouseEnter={() => {\n\t\t\t\t\tdispatch(river.actions.trySetHoveredCard(cardConfig.cardID, \"a\"));\n\t\t\t\t}}\n\t\t\t>\n\t\t\t\tA\n\t\t\t</MenuItem>\n\t\t</NestedMenuItem>\n\t);\n};\n\nexport const CardConfigItem = ({\n\tcardConfig,\n\tdispatchRiver,\n\tqaRef,\n}: {\n\tcardConfig: CardConfig;\n\tdispatchRiver: dispatchRiver;\n\tqaRef?: RefObject<any>;\n}) => {\n\tswitch (cardConfig.type) {\n\t\tcase \"Q-A\":\n\t\t\treturn <QAOptionItem cardConfig={cardConfig} dispatchRiver={dispatchRiver} qaRef={qaRef}></QAOptionItem>;\n\t\tdefault:\n\t\t\treturn <SingleOptionItem cardConfig={cardConfig} dispatchRiver={dispatchRiver}></SingleOptionItem>;\n\t}\n};\n","import { Fragment } from \"react\";\nimport { MenuItem } from \"@material-ui/core\";\nimport React from \"react\";\n\n//TODO-NICE: clear qa-field button\n\nconst NewQACardQ = ({ onClick }: any) => <MenuItem onClick={onClick}>New: Q (Q-A)</MenuItem>;\nconst NewQACardA = ({ onClick }: any) => <MenuItem onClick={onClick}>New: A (Q-A)</MenuItem>;\nconst NewNoteCard = ({ onClick }: any) => <MenuItem onClick={onClick}>New: Note</MenuItem>;\n\nexport const NewButtons = ({ noteDispatch, qDispatch, aDispatch }: any) => {\n\treturn (\n\t\t<Fragment>\n\t\t\t<NewNoteCard onClick={noteDispatch}></NewNoteCard>\n\t\t\t<NewQACardQ onClick={qDispatch}></NewQACardQ>\n\t\t\t<NewQACardA onClick={aDispatch}></NewQACardA>\n\t\t</Fragment>\n\t);\n};\n","import React, { RefObject } from \"react\";\nimport Menu from \"@material-ui/core/Menu\";\nimport { Divider, MenuItem } from \"@material-ui/core\";\nimport { useDispatch, connect, useSelector } from \"react-redux\";\nimport { getContextMenuInitData, getContextMenuFullCardsRef } from \"../selectors\";\nimport { grabSelectionForContextMenu, grabSelectionForSourceMenu } from \"../actions\";\nimport { incrementer } from \"../../../shared/utils\";\nimport { CardConfig, CardType, CreationType } from \"../../cards/model/model\";\nimport { QACardContent } from \"../../cards/model/model-content\";\nimport { CardConfigItem, noteCardIsEmpty, qaCardIsNotFull } from \"./CardItems\";\nimport { NewButtons } from \"./NewButtons\";\nimport NestedMenuItem from \"material-ui-nested-menu-item\";\nimport river from \"../../river\";\nimport { SourceCard } from \"../../river/model\";\n\nfunction ContextMenu({\n\tposition,\n\tstate,\n\tmenuRef,\n\tqaRefs,\n\triverCards,\n}: {\n\tposition: { x: number; y: number };\n\tstate: boolean;\n\tmenuRef: RefObject<any>;\n\tqaRefs: RefObject<any>[];\n\triverCards: CardConfig[];\n}) {\n\tconst fullCardsRef = useSelector(getContextMenuFullCardsRef);\n\n\tconst dispatch = useDispatch();\n\tconst sourceCard = useSelector(river.selectors.getSourceCard);\n\n\t//TODO-NICE: open menu in editor to the right not over the document\n\n\tconst openState = state;\n\tconst dispatchRiver = (type: CardType, creationType: CreationType, cardID?: string) => {\n\t\tif (sourceCard) {\n\t\t\tdispatch(\n\t\t\t\tgrabSelectionForSourceMenu(\n\t\t\t\t\ttype,\n\t\t\t\t\tcreationType,\n\t\t\t\t\t(sourceCard as SourceCard).sourceField,\n\t\t\t\t\t(sourceCard as SourceCard).origin,\n\t\t\t\t\tcardID\n\t\t\t\t)\n\t\t\t);\n\t\t} else {\n\t\t\tdispatch(grabSelectionForContextMenu(type, creationType, cardID));\n\t\t}\n\t};\n\n\tconst increment = incrementer();\n\tconst qaRefIndex = incrementer();\n\n\tconst anchorPosition = openState ? { top: position.y, left: position.x } : undefined;\n\n\t//TODO-PERF: use partition function, or loop to avoid double iteration\n\t//TODO-NICE: abstract menu, this is doubled\n\tconst nonFullRiverCards = riverCards.filter((card) => {\n\t\tif (typeof card.content === \"string\") {\n\t\t\treturn noteCardIsEmpty(card.content);\n\t\t} else {\n\t\t\treturn qaCardIsNotFull(card.content as QACardContent);\n\t\t}\n\t});\n\n\tconst fullRiverCards = riverCards.filter((card) => {\n\t\tif (typeof card.content === \"string\") {\n\t\t\treturn !noteCardIsEmpty(card.content);\n\t\t} else {\n\t\t\treturn !qaCardIsNotFull(card.content as QACardContent);\n\t\t}\n\t});\n\n\t// TODO-NICE: use hidden MenuItem-pattern also for qa-ref\n\n\t// TODO-NICE: need to check for state before rendering MenuItems,\n\t// otherwise it shows up for a split-second when switching the menu off after adding to the river\n\t// weird Race Condition even if I dispatch closeContextMenu first?\n\treturn (\n\t\t<Menu\n\t\t\tref={openState ? menuRef : null}\n\t\t\tkeepMounted\n\t\t\topen={openState}\n\t\t\tanchorReference=\"anchorPosition\"\n\t\t\tanchorPosition={anchorPosition}\n\t\t>\n\t\t\t{openState &&\n\t\t\t\tnonFullRiverCards.map((cardConfig) => (\n\t\t\t\t\t<CardConfigItem\n\t\t\t\t\t\tcardConfig={cardConfig}\n\t\t\t\t\t\tdispatchRiver={dispatchRiver}\n\t\t\t\t\t\tkey={increment()}\n\t\t\t\t\t\tqaRef={cardConfig.type === \"Q-A\" ? qaRefs[qaRefIndex()] : undefined}\n\t\t\t\t\t></CardConfigItem>\n\t\t\t\t))}\n\t\t\t{openState && nonFullRiverCards.length > 0 && <Divider />}\n\n\t\t\t{openState && (\n\t\t\t\t<NewButtons\n\t\t\t\t\tnoteDispatch={() => {\n\t\t\t\t\t\tdispatchRiver(\"Note\", \"note\");\n\t\t\t\t\t}}\n\t\t\t\t\tqDispatch={() => {\n\t\t\t\t\t\tdispatchRiver(\"Q-A\", \"q\");\n\t\t\t\t\t}}\n\t\t\t\t\taDispatch={() => {\n\t\t\t\t\t\tdispatchRiver(\"Q-A\", \"a\");\n\t\t\t\t\t}}\n\t\t\t\t></NewButtons>\n\t\t\t)}\n\n\t\t\t{openState && fullRiverCards.length > 0 && <Divider />}\n\t\t\t{openState && fullRiverCards.length > 0 && (\n\t\t\t\t<NestedMenuItem label=\"Full cards: \" parentMenuOpen={true}>\n\t\t\t\t\t<MenuItem ref={fullCardsRef} style={{ position: \"absolute\" }}></MenuItem>\n\t\t\t\t\t{fullRiverCards.map((cardConfig) => (\n\t\t\t\t\t\t<CardConfigItem\n\t\t\t\t\t\t\tcardConfig={cardConfig}\n\t\t\t\t\t\t\tdispatchRiver={dispatchRiver}\n\t\t\t\t\t\t\tkey={increment()}\n\t\t\t\t\t\t\tqaRef={cardConfig.type === \"Q-A\" ? qaRefs[qaRefIndex()] : undefined}\n\t\t\t\t\t\t></CardConfigItem>\n\t\t\t\t\t))}\n\t\t\t\t</NestedMenuItem>\n\t\t\t)}\n\t\t</Menu>\n\t);\n}\n\nexport const ContextMenuContainer = connect(getContextMenuInitData)(ContextMenu);\n","import React, { useState, Fragment } from \"react\";\nimport { Snackbar, IconButton } from \"@material-ui/core\";\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { resetManuallySelectedString } from \"../actions\";\nimport { getCurrentSelectedString } from \"../selectors\";\n\nexport const SelectionSnackbar = () => {\n\tconst [open, setOpen] = useState(false);\n\tconst dispatch = useDispatch();\n\tconst selectedString = useSelector(getCurrentSelectedString);\n\n\tif (selectedString === \"\" && open) setOpen(false);\n\n\tif (selectedString !== \"\" && !open) setOpen(true);\n\n\tconst handleClose = (event: any, reason: string) => {\n\t\tif (reason === \"clickaway\") {\n\t\t\t// do not close on clickaway\n\t\t\tevent.preventDefault();\n\t\t} else {\n\t\t\tsetOpen(false);\n\t\t\tdispatch(resetManuallySelectedString());\n\t\t}\n\t};\n\n\tconst handleDismiss = () => {\n\t\tsetOpen(false);\n\t\tdispatch(resetManuallySelectedString());\n\t};\n\n\tconst message = (\n\t\t<Fragment>\n\t\t\t<div>{\"Current Selection: \"}</div>\n\t\t\t<div style={{ color: \"green\" }}> {selectedString}</div>\n\t\t</Fragment>\n\t);\n\n\treturn (\n\t\t<Snackbar\n\t\t\tanchorOrigin={{ vertical: \"top\", horizontal: \"center\" }}\n\t\t\topen={open}\n\t\t\tonClose={handleClose}\n\t\t\tmessage={message}\n\t\t\taction={\n\t\t\t\t<IconButton size=\"small\" aria-label=\"close\" color=\"inherit\" onClick={handleDismiss}>\n\t\t\t\t\t<CloseIcon fontSize=\"small\" />\n\t\t\t\t</IconButton>\n\t\t\t}\n\t\t/>\n\t);\n};\n","import { getContextMenuRef, getContextMenuQARefs, getContextMenuFullCardsRef } from \"../selectors\";\n\n// the root div for the menu invisibly covers the whole screen\n// the actual div that is visible is this\nconst baseContextMenuSelector = \"div.MuiPaper-root\";\n\nexport const contextMenuContainsTargetNode = (state: any, event: Event) => {\n\tconst menuRef = getContextMenuRef(state).current;\n\tconst fullCardsRef = getContextMenuFullCardsRef(state).current?.parentNode;\n\n\t// the nested items are rendered under a different menu\n\t// the current api does not allow access\n\t// so the qa-refs refer to the Q-button\n\t// we check the click against his parent,\n\t// which is the div that contains the Q and A buttons\n\tconst qaRefs = getContextMenuQARefs(state)\n\t\t.map((refObject) => refObject.current)\n\t\t.filter((cur) => !!cur)\n\t\t.map((ref) => ref.parentNode);\n\n\tconst target = event.target as Node;\n\n\tif (menuRef?.querySelector(baseContextMenuSelector)?.contains(target)) return true;\n\n\tif (fullCardsRef?.contains(target)) return true;\n\n\tfor (const qaRef of qaRefs) {\n\t\tif (qaRef.contains(target)) return true;\n\t}\n\n\treturn false;\n};\n","import * as actions from \"./actions\";\nimport * as constants from \"./constants\";\nimport * as actionTypes from \"./actionTypes\";\nimport reducer from \"./reducer\";\nimport * as selectors from \"./selectors\";\nimport * as components from \"./components\";\nimport * as services from \"./services\";\n\nexport default { actions, actionTypes, constants, components, reducer, selectors, services };\n","import { Dispatch } from \"redux\";\nimport focus from \"../../focus\";\nimport display from \"../../display\";\nimport creation from \"../../creation\";\nimport { UserFocus } from \"../../focus/model\";\n\ntype KeyActionMap = { [key: string]: any };\n\ntype KeyEventDispatcher = (event: KeyboardEvent, dispatch: any, state?: any) => void;\n\nconst keyEventDispatcher = (keyMap: KeyActionMap) => (event: KeyboardEvent, dispatch: any) => {\n\tconst action = keyMap[event.key];\n\tif (action) {\n\t\tevent.preventDefault();\n\t\tdispatch(action);\n\t}\n};\n\nconst pageControlKeyMap: KeyActionMap = {\n\tArrowLeft: display.actions.previousPage(),\n\tArrowRight: display.actions.nextPage(),\n};\n\nconst pageControlDispatcher = keyEventDispatcher(pageControlKeyMap);\n\nconst contextMenuControlKeyMap: KeyActionMap = {\n\tt: creation.actions.toggleContextMenu(),\n};\n\nconst contextMenuControlDispatcher = keyEventDispatcher(contextMenuControlKeyMap);\n\nconst documentFocusKeyMap = {\n\t...pageControlKeyMap,\n\t...contextMenuControlKeyMap,\n};\n\nconst documentFocusDispatcher = keyEventDispatcher(documentFocusKeyMap);\n\nconst doNothing = (event: any, dispatch: any) => {};\n\nconst focusDispatcherMap: { [focus in UserFocus]: KeyEventDispatcher } = {\n\tDOCUMENT: documentFocusDispatcher,\n\tCONTEXT_MENU: contextMenuControlDispatcher,\n\tRIVER: doNothing,\n\tRIVER_CONTROL: doNothing,\n\tCONTROL: pageControlDispatcher,\n};\n\nexport const keyDownControl = (event: KeyboardEvent) => {\n\treturn (dispatch: Dispatch | any, getState: Function) => {\n\t\tconst state = getState();\n\t\tconst userFocus = focus.selectors.getFocus(state);\n\t\tconst dispatcher = focusDispatcherMap[userFocus];\n\n\t\tdispatcher(event, dispatch, state);\n\t};\n};\n","import { connect } from \"react-redux\";\nimport { useEventListener } from \"../hooks/useEventListener\";\nimport { keyDownControl } from \"../services/keyboardControl\";\nimport { mouseDownControl, mouseUpControl, rightClickControl } from \"../services/mouseControl\";\n\nfunction Control({\n\tkeyDownControl,\n\tmouseDownControl,\n\tmouseUpControl,\n\trightClickControl,\n}: {\n\tkeyDownControl: (event: KeyboardEvent) => void;\n\tmouseDownControl: (event: MouseEvent) => void;\n\tmouseUpControl: (event: MouseEvent) => void;\n\trightClickControl: (event: MouseEvent) => void;\n}) {\n\tuseEventListener(\"keydown\", keyDownControl);\n\tuseEventListener(\"mousedown\", mouseDownControl);\n\tuseEventListener(\"mouseup\", mouseUpControl);\n\tuseEventListener(\"contextmenu\", rightClickControl);\n\treturn null;\n}\n\nexport const ControlContainer = connect(\n\t() => {\n\t\treturn {};\n\t},\n\t{\n\t\tkeyDownControl,\n\t\tmouseDownControl,\n\t\tmouseUpControl,\n\t\trightClickControl,\n\t}\n)(Control);\n","import creation from \"../../creation\";\nimport focus from \"../../focus\";\nimport cards from \"../../cards\";\nimport river from \"../../river\";\n\nexport const mouseDownControl = (event: MouseEvent) => {\n\treturn (dispatch: any, getState: Function) => {\n\t\tconst clickOutSideOfMenu = !creation.services.contextMenuContainsTargetNode(getState(), event);\n\t\tif (clickOutSideOfMenu) {\n\t\t\tdispatch(creation.actions.closeContextMenu());\n\t\t}\n\t};\n};\n\nexport const mouseUpControl = (event: MouseEvent) => {\n\treturn (dispatch: any, getState: Function) => {\n\t\t// if the menu is already open, this means we have opened it in the editor\n\t\tif (creation.selectors.getContextMenuState(getState())) return;\n\n\t\tconst selection = document.getSelection();\n\t\tif (selection) {\n\t\t\tconst selectedStr = selection.toString();\n\n\t\t\tif (selectedStr !== \"\") {\n\t\t\t\tconst state = getState();\n\t\t\t\tconst goalCard = cards.selectors.getGoalCard(state);\n\t\t\t\tconst userFocus = focus.selectors.getFocus(state);\n\n\t\t\t\tconst shouldGrab = userFocus === \"RIVER\" || userFocus === \"DOCUMENT\";\n\n\t\t\t\tif (goalCard && shouldGrab) {\n\t\t\t\t\t// this is the dispatch for the grab for field button\n\t\t\t\t\t//(which has been pressed before the mouse-up if goalCard is not null), here we actually update the goal card\n\n\t\t\t\t\t//TODO-NICE: allow grabbing from other cards\n\t\t\t\t\t// for now we dont allow grabbing from other cards to simplifiy the card->card workflow\n\t\t\t\t\tif (userFocus !== \"RIVER\")\n\t\t\t\t\t\tdispatch(\n\t\t\t\t\t\t\tcards.actions.updateCardContent(\n\t\t\t\t\t\t\t\tselectedStr,\n\t\t\t\t\t\t\t\tgoalCard.cardID,\n\t\t\t\t\t\t\t\tgoalCard.creationType,\n\t\t\t\t\t\t\t\t\"REPLACE\",\n\t\t\t\t\t\t\t\tgoalCard.origin\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t);\n\t\t\t\t\tdispatch(cards.actions.resetGoalCard());\n\t\t\t\t} else {\n\t\t\t\t\t// this is the dispatch for the ContextMenu\n\t\t\t\t\tif (userFocus === \"DOCUMENT\") {\n\t\t\t\t\t\t//if the user is focused on the document, the push-to river should always be the active=page-wise river\n\t\t\t\t\t\tdispatch(river.actions.setPushToRiver(river.selectors.getActiveRiverMakeUpID(state)));\n\t\t\t\t\t\tdispatch(creation.actions.selectedParent(selection.anchorNode?.parentNode as HTMLSpanElement));\n\t\t\t\t\t\tdispatch(creation.actions.updateManuallySelectedString(selectedStr));\n\t\t\t\t\t\tdispatch(creation.actions.updateSelectionPosition(event.x, event.y));\n\t\t\t\t\t\tdispatch(creation.actions.openContextMenu());\n\t\t\t\t\t}\n\n\t\t\t\t\t// this is the dispatch to prepare for extraction from card\n\t\t\t\t\tif (userFocus === \"RIVER\") {\n\t\t\t\t\t\tdispatch(creation.actions.updateManuallySelectedString(selectedStr));\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t};\n};\n\n//TODO-NICE: make selection-dropable on buttons, so that they can be send to cards, make this the default instead of context-menu?\n// imagine: toolbar with new Note, new A, new Q | all the cards and you can drop off\n\n//TODO-NICE: delete extracted str in source\n\nexport const rightClickControl = (event: MouseEvent) => {\n\treturn (dispatch: any, getState: Function) => {\n\t\tconst state = getState();\n\t\tconst userFocus = focus.selectors.getFocus(state);\n\n\t\t// this is set via left-click\n\t\tconst selectedStr = creation.selectors.getCurrentSelectedString(state);\n\n\t\tif (selectedStr === \"\") return;\n\n\t\tevent.preventDefault();\n\n\t\t// this is the dispatch for the ContextMenu inside the editor\n\t\tif (userFocus === \"RIVER\") {\n\t\t\tdispatch(creation.actions.updateSelectionPosition(event.x, event.y));\n\t\t\tdispatch(creation.actions.openContextMenu());\n\t\t}\n\t};\n};\n","import { useSelector, useDispatch } from \"react-redux\";\nimport React, { ChangeEvent, Fragment, useRef, MutableRefObject } from \"react\";\nimport { Divider, Menu, MenuItem, IconButton, Typography } from \"@material-ui/core\";\nimport { changeDocument, downloadDBData } from \"../actions\";\nimport MoreVertIcon from \"@material-ui/icons/MoreVert\";\nimport display from \"../../display\";\nimport db from \"../../db\";\nimport { DocumentData } from \"../../db/model\";\n\n//TODO-NICE: have way to merge two document-workspaces\n\nconst InputDocument = ({ handleClose, label }: any) => {\n\tconst dispatch = useDispatch();\n\n\tconst ref: MutableRefObject<null | HTMLInputElement> = useRef(null);\n\n\treturn (\n\t\t<Fragment>\n\t\t\t<MenuItem\n\t\t\t\tonClick={() => {\n\t\t\t\t\t(ref.current as HTMLInputElement).click();\n\t\t\t\t}}\n\t\t\t>\n\t\t\t\t<Typography>{label}</Typography>\n\t\t\t</MenuItem>\n\t\t\t<input\n\t\t\t\tref={ref}\n\t\t\t\tstyle={{ display: \"none\" }}\n\t\t\t\tonChange={(event: ChangeEvent<HTMLInputElement>) => {\n\t\t\t\t\tconst files = event.target.files;\n\t\t\t\t\tconst pdf = files ? files[0] : null;\n\t\t\t\t\tif (pdf) {\n\t\t\t\t\t\tdispatch(changeDocument(pdf));\n\t\t\t\t\t}\n\t\t\t\t\thandleClose();\n\t\t\t\t}}\n\t\t\t\ttype=\"file\"\n\t\t\t\taccept=\".pdf\"\n\t\t\t/>\n\t\t</Fragment>\n\t);\n};\n\nconst InputDataSets = ({ handleClose, label }: any) => {\n\tconst dispatch = useDispatch();\n\n\tconst activeDocument = useSelector(display.selectors.getPDFName);\n\n\tconst ref: MutableRefObject<null | HTMLInputElement> = useRef(null);\n\n\treturn (\n\t\t<Fragment>\n\t\t\t<MenuItem\n\t\t\t\tonClick={() => {\n\t\t\t\t\t(ref.current as HTMLInputElement).click();\n\t\t\t\t}}\n\t\t\t>\n\t\t\t\t<Typography>{label}</Typography>\n\t\t\t</MenuItem>\n\t\t\t<input\n\t\t\t\tref={ref}\n\t\t\t\tstyle={{ display: \"none\" }}\n\t\t\t\tonChange={(event: ChangeEvent<HTMLInputElement>) => {\n\t\t\t\t\t// fun fact: uploading a file with the same file-name does not trigger this event\n\n\t\t\t\t\tconst files = event.target.files;\n\t\t\t\t\tconst file = files ? files[0] : null;\n\t\t\t\t\tif (file) {\n\t\t\t\t\t\tconst reader = new FileReader();\n\t\t\t\t\t\treader.readAsText(file);\n\t\t\t\t\t\treader.onload = () => {\n\t\t\t\t\t\t\t//TODO-NICE: sanitize, escape os new line difference, prepare multimedia cards\n\t\t\t\t\t\t\t//TODO-NICE: merge same name-pdfs and think about collision in general\n\t\t\t\t\t\t\t//TODO-NICE: merge uploaded state with current-one and dont overwrite\n\n\t\t\t\t\t\t\tconst uploadedDataSets = JSON.parse(reader.result as string);\n\t\t\t\t\t\t\t// if the uploaded dataset corresponds to the current document, overwrite current with uploaded\n\t\t\t\t\t\t\tconst foundDataSet = (uploadedDataSets as DocumentData[]).find(\n\t\t\t\t\t\t\t\t(dbData) => dbData.name === activeDocument\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\tdispatch(db.actions.loadDocumentDataSets(uploadedDataSets, foundDataSet));\n\t\t\t\t\t\t};\n\t\t\t\t\t}\n\t\t\t\t\thandleClose();\n\t\t\t\t}}\n\t\t\t\ttype=\"file\"\n\t\t\t\taccept=\".txt\"\n\t\t\t/>\n\t\t</Fragment>\n\t);\n};\n\nexport const Options = () => {\n\tconst activeDocument = useSelector(display.selectors.getPDFName);\n\tconst documents = useSelector(db.selectors.getDocumentNames);\n\n\tconst [anchorEl, setAnchorEl] = React.useState<null | HTMLElement>(null);\n\n\tconst handleClick = (event: React.MouseEvent<HTMLButtonElement>) => {\n\t\tsetAnchorEl(event.currentTarget);\n\t};\n\n\tconst handleClose = () => {\n\t\tsetAnchorEl(null);\n\t};\n\n\tconst dispatch = useDispatch();\n\n\treturn (\n\t\t<div>\n\t\t\t<IconButton type=\"button\" onClick={handleClick}>\n\t\t\t\t<MoreVertIcon></MoreVertIcon>\n\t\t\t</IconButton>\n\t\t\t<Menu id=\"simple-menu\" anchorEl={anchorEl} keepMounted open={Boolean(anchorEl)} onClose={handleClose}>\n\t\t\t\t<Typography>Active Document:</Typography>\n\t\t\t\t<Typography>{activeDocument?.replace(\".pdf\", \"\")}</Typography>\n\t\t\t\t<Divider />\n\t\t\t\t<Typography>Documents with existing data:</Typography>\n\t\t\t\t<Typography>\n\t\t\t\t\t<ul>{documents.map((document) => (document ? <li>{document.replace(\".pdf\", \"\")}</li> : null))}</ul>\n\t\t\t\t</Typography>\n\t\t\t\t<Divider />\n\t\t\t\t<InputDocument handleClose={handleClose} label={\"Load document\"}></InputDocument>\n\t\t\t\t<Divider />\n\t\t\t\t<MenuItem\n\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\tdispatch(downloadDBData());\n\t\t\t\t\t\thandleClose();\n\t\t\t\t\t}}\n\t\t\t\t>\n\t\t\t\t\tDownload document datasets\n\t\t\t\t</MenuItem>\n\t\t\t\t<Divider />\n\t\t\t\t<InputDataSets handleClose={handleClose} label={\"Upload document datasets\"}></InputDataSets>\n\t\t\t</Menu>\n\t\t</div>\n\t);\n};\n","import React, { useState } from \"react\";\nimport SearchBar from \"material-ui-search-bar\";\nimport river from \"../../river\";\nimport { useDispatch, useSelector } from \"react-redux\";\n\n//TODO-NICE: make search for PDF\nexport const CardSearchBar = () => {\n\tconst dispatch = useDispatch();\n\tconst contentFilter = useSelector(river.selectors.getRiverContentFilter);\n\tconst [state, setState] = useState(contentFilter);\n\n\t//TODO-NICE: search in other rivers/same river when composing to show similar cards (like in the Anki Addon)\n\t//TODO-NICE: change the color / border or something to indicate when a filter is active\n\treturn (\n\t\t<SearchBar\n\t\t\tvalue={state}\n\t\t\tplaceholder=\"Search in cards\"\n\t\t\tonChange={(newValue) => {\n\t\t\t\t// reset on delete\n\t\t\t\tif (newValue === \"\") dispatch(river.actions.setContentFilter(\"\"));\n\t\t\t\tsetState(newValue);\n\t\t\t}}\n\t\t\tonCancelSearch={() => {\n\t\t\t\tdispatch(river.actions.setContentFilter(\"\"));\n\t\t\t}}\n\t\t\tonRequestSearch={() => dispatch(river.actions.setContentFilter(state))}\n\t\t/>\n\t);\n};\n","import React from \"react\";\nimport { IconButton, Card, Divider, Grid } from \"@material-ui/core\";\nimport { useDispatch } from \"react-redux\";\nimport UndoIcon from \"@material-ui/icons/Undo\";\nimport RedoIcon from \"@material-ui/icons/Redo\";\nimport { ActionCreators } from \"redux-undo\";\n// we support undo/redo instead of lengthy confirmation (see The Humane Interface)\nconst UndoButton = () => {\n\tconst dispatch = useDispatch();\n\treturn (\n\t\t<IconButton\n\t\t\ttype=\"button\"\n\t\t\tonClick={() => {\n\t\t\t\tdispatch(ActionCreators.undo());\n\t\t\t}}\n\t\t>\n\t\t\t<UndoIcon></UndoIcon>\n\t\t</IconButton>\n\t);\n};\nconst RedoButton = () => {\n\tconst dispatch = useDispatch();\n\treturn (\n\t\t<IconButton\n\t\t\ttype=\"button\"\n\t\t\tonClick={() => {\n\t\t\t\tdispatch(ActionCreators.redo());\n\t\t\t}}\n\t\t>\n\t\t\t<RedoIcon></RedoIcon>\n\t\t</IconButton>\n\t);\n};\n\nexport const UndoRedoCard = () => {\n\treturn (\n\t\t<Card variant=\"outlined\">\n\t\t\t<Grid container direction=\"row\">\n\t\t\t\t<Grid item>\n\t\t\t\t\t<UndoButton></UndoButton>\n\t\t\t\t</Grid>\n\t\t\t\t<Grid item>\n\t\t\t\t\t<Divider orientation=\"vertical\"></Divider>\n\t\t\t\t</Grid>\n\t\t\t\t<Grid item>\n\t\t\t\t\t<RedoButton></RedoButton>\n\t\t\t\t</Grid>\n\t\t\t</Grid>\n\t\t</Card>\n\t);\n};\n","import display from \"../../display\";\nimport focus from \"../../focus\";\nimport river from \"../../river\";\nimport React from \"react\";\nimport { IconButton, Menu, FormControlLabel, Typography, Divider, Grid } from \"@material-ui/core\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport VisibilityIcon from \"@material-ui/icons/Visibility\";\nimport { GreenCheckbox } from \"../../../shared/GreenCheckbox\";\nconst ShowRiverCheckbox = () => {\n\tconst dispatch = useDispatch();\n\tconst riverShowState = useSelector(river.selectors.getRiverShowState);\n\n\treturn (\n\t\t<FormControlLabel\n\t\t\tcontrol={\n\t\t\t\t<GreenCheckbox\n\t\t\t\t\tchecked={riverShowState === \"SHOW\"}\n\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\tdispatch(river.actions.toggleRiverShowState());\n\t\t\t\t\t}}\n\t\t\t\t/>\n\t\t\t}\n\t\t\tlabel=\"River\"\n\t\t/>\n\t);\n};\nconst ShowMaterialCheckbox = () => {\n\tconst dispatch = useDispatch();\n\tconst displayShowState = useSelector(display.selectors.getDisplayStatus);\n\n\treturn (\n\t\t<FormControlLabel\n\t\t\tcontrol={\n\t\t\t\t<GreenCheckbox\n\t\t\t\t\tchecked={displayShowState === \"SHOW\"}\n\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\tdispatch(display.actions.toggleDisplayState());\n\t\t\t\t\t}}\n\t\t\t\t/>\n\t\t\t}\n\t\t\tlabel=\"Material\"\n\t\t/>\n\t);\n};\nexport const ShowHideButton = () => {\n\tconst [anchorEl, setAnchorEl] = React.useState<null | HTMLElement>(null);\n\n\tconst handleClick = (event: React.MouseEvent<HTMLButtonElement>) => {\n\t\tsetAnchorEl(event.currentTarget);\n\t};\n\n\tconst handleClose = () => {\n\t\tsetAnchorEl(null);\n\t};\n\n\tconst displayFocus = useSelector(focus.selectors.getDisplayFocus);\n\n\treturn (\n\t\t<div>\n\t\t\t<IconButton type=\"button\" onClick={handleClick}>\n\t\t\t\t<VisibilityIcon></VisibilityIcon>\n\t\t\t</IconButton>\n\t\t\t<Menu anchorEl={anchorEl} keepMounted open={Boolean(anchorEl)} onClose={handleClose}>\n\t\t\t\t<Typography>Show:</Typography>\n\t\t\t\t<Divider></Divider>\n\t\t\t\t<Grid container direction=\"row\">\n\t\t\t\t\t<Grid item>\n\t\t\t\t\t\t<river.components.RiverContentFormGroup></river.components.RiverContentFormGroup>\n\t\t\t\t\t</Grid>\n\t\t\t\t\t<Grid item>\n\t\t\t\t\t\t<Divider orientation=\"vertical\"></Divider>\n\t\t\t\t\t</Grid>\n\t\t\t\t\t<Grid item>\n\t\t\t\t\t\t{displayFocus === \"ACTIVE_RIVER\" && (\n\t\t\t\t\t\t\t<Grid container direction=\"column\">\n\t\t\t\t\t\t\t\t<Grid item>\n\t\t\t\t\t\t\t\t\t<ShowRiverCheckbox></ShowRiverCheckbox>\n\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t\t<Grid item>\n\t\t\t\t\t\t\t\t\t<ShowMaterialCheckbox></ShowMaterialCheckbox>\n\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t)}\n\t\t\t\t\t</Grid>\n\t\t\t\t</Grid>\n\t\t\t</Menu>\n\t\t</div>\n\t);\n};\n","import display from \"../../display\";\nimport focus from \"../../focus\";\nimport React, { ChangeEvent } from \"react\";\nimport { AppBar, Toolbar, Divider, Tabs, Tab, Grid, TextField, Card, Typography } from \"@material-ui/core\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { Options } from \"./Options\";\nimport { CardSearchBar } from \"./CardSearchBar\";\nimport { UndoRedoCard } from \"./UndoRedoButtons\";\nimport { ShowHideButton } from \"./ShowHideButton\";\n//TODO-NICE: download/load csv for Anki\nexport const ControlBar = () => {\n\tconst dispatch = useDispatch();\n\tconst displayFocus = useSelector(focus.selectors.getDisplayFocus);\n\n\tconst value = displayFocus === \"ACTIVE_RIVER\" ? 0 : 1;\n\n\tconst handleChange = (_: ChangeEvent<{}>, newValue: number) => {\n\t\tdispatch(\n\t\t\tnewValue === 0\n\t\t\t\t? focus.actions.updateDisplayFocus(\"ACTIVE_RIVER\")\n\t\t\t\t: focus.actions.updateDisplayFocus(\"SUMMARY_RIVER\")\n\t\t);\n\t};\n\n\tconst materialName = useSelector(display.selectors.getPDFName);\n\n\treturn (\n\t\t<Grid\n\t\t\titem\n\t\t\tonMouseEnter={() => {\n\t\t\t\tdispatch(focus.actions.tryUpdateFocus(\"CONTROL\"));\n\t\t\t}}\n\t\t>\n\t\t\t<AppBar>\n\t\t\t\t<Toolbar variant=\"regular\">\n\t\t\t\t\t<Grid item>\n\t\t\t\t\t\t<Grid container spacing={1} direction=\"row\" alignItems=\"center\" justify=\"flex-start\">\n\t\t\t\t\t\t\t<Grid item style={{ width: \"12%\" }}>\n\t\t\t\t\t\t\t\t<display.components.PageChooser></display.components.PageChooser>\n\t\t\t\t\t\t\t</Grid>\n\n\t\t\t\t\t\t\t<Grid item>\n\t\t\t\t\t\t\t\t<display.components.PageNavigation></display.components.PageNavigation>\n\t\t\t\t\t\t\t</Grid>\n\n\t\t\t\t\t\t\t<Grid item>\n\t\t\t\t\t\t\t\t<Card variant=\"outlined\">\n\t\t\t\t\t\t\t\t\t<Tabs value={value} onChange={handleChange}>\n\t\t\t\t\t\t\t\t\t\t<Tab label=\"ActiveRiver\" />\n\t\t\t\t\t\t\t\t\t\t<Tab label=\"SummaryRiver\" />\n\t\t\t\t\t\t\t\t\t</Tabs>\n\t\t\t\t\t\t\t\t</Card>\n\t\t\t\t\t\t\t</Grid>\n\n\t\t\t\t\t\t\t<Grid item>\n\t\t\t\t\t\t\t\t<UndoRedoCard></UndoRedoCard>\n\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t</Grid>\n\t\t\t\t\t</Grid>\n\n\t\t\t\t\t<Typography style={{ flexGrow: 1 }}>{materialName?.replace(\".pdf\", \"\")}</Typography>\n\n\t\t\t\t\t<ShowHideButton></ShowHideButton>\n\t\t\t\t\t<Options></Options>\n\t\t\t\t\t<CardSearchBar></CardSearchBar>\n\t\t\t\t</Toolbar>\n\t\t\t</AppBar>\n\t\t</Grid>\n\t);\n};\n","import * as actions from \"./actions\";\nimport * as components from \"./components\";\nimport * as selectors from \"./selectors\";\n\nexport default { actions, components, selectors };\n","import React from \"react\";\nimport Grid from \"@material-ui/core/Grid\";\nimport control from \"../modules/control\";\nimport creation from \"../modules/creation\";\nimport river from \"../modules/river\";\nimport { makeStyles, Theme, createStyles, useScrollTrigger, Zoom, Toolbar, Fab } from \"@material-ui/core\";\nimport KeyboardArrowUpIcon from \"@material-ui/icons/KeyboardArrowUp\";\n\n//TODO: make show/hide depdendant on tab, also Page choice, control-bar dependant on tab\n\nconst useStyles = makeStyles((theme: Theme) =>\n\tcreateStyles({\n\t\troot: {\n\t\t\tposition: \"fixed\",\n\t\t\tbottom: theme.spacing(2),\n\t\t\tright: theme.spacing(2),\n\t\t},\n\t})\n);\n\nfunction ScrollTop(props: any) {\n\tconst { children } = props;\n\tconst classes = useStyles();\n\tconst trigger = useScrollTrigger({\n\t\tdisableHysteresis: true,\n\t\tthreshold: 100,\n\t});\n\n\tconst handleClick = (event: React.MouseEvent<HTMLDivElement>) => {\n\t\tconst anchor = ((event.target as HTMLDivElement).ownerDocument || document).querySelector(\"#back-to-top-anchor\");\n\n\t\tif (anchor) {\n\t\t\tanchor.scrollIntoView({ behavior: \"smooth\", block: \"center\" });\n\t\t}\n\t};\n\n\treturn (\n\t\t<Zoom in={trigger}>\n\t\t\t<div onClick={handleClick} role=\"presentation\" className={classes.root}>\n\t\t\t\t{children}\n\t\t\t</div>\n\t\t</Zoom>\n\t);\n}\n\nexport function ReaderScene() {\n\treturn (\n\t\t<div>\n\t\t\t<control.components.ControlContainer></control.components.ControlContainer>\n\t\t\t<Grid container justify=\"center\" direction=\"column\" alignItems=\"stretch\" spacing={1}>\n\t\t\t\t<control.components.ControlBar></control.components.ControlBar>\n\t\t\t\t<Toolbar id=\"back-to-top-anchor\" />\n\n\t\t\t\t<river.components.ActiveRiverView></river.components.ActiveRiverView>\n\t\t\t\t<river.components.SummaryRiverView></river.components.SummaryRiverView>\n\t\t\t</Grid>\n\t\t\t<ScrollTop>\n\t\t\t\t<Fab color=\"secondary\" size=\"small\" aria-label=\"scroll back to top\">\n\t\t\t\t\t<KeyboardArrowUpIcon />\n\t\t\t\t</Fab>\n\t\t\t</ScrollTop>\n\t\t\t<creation.components.ContextMenuContainer></creation.components.ContextMenuContainer>\n\t\t\t<creation.components.SelectionSnackbar></creation.components.SelectionSnackbar>\n\t\t</div>\n\t);\n}\n","import storage from \"redux-persist/lib/storage\"; // defaults to localStorage for web\nimport { createTransform } from \"redux-persist\";\nimport { CreationData } from \"./modules/creation/model\";\nimport { createRef } from \"react\";\nimport creation from \"./modules/creation\";\nimport { DisplayData, DisplayStatus, PerPageSpans } from \"./modules/display/model\";\nimport display from \"./modules/display\";\n\n// to get the correct object with reselect, I added .present to all getAll that belong do undoable modules\n\nconst removeDOMObjectsFromCreationData = (inboundState: CreationData) => {\n\treturn {\n\t\t...inboundState,\n\t\tmenuRef: null,\n\t\tfullCardRef: null,\n\t\tqaRefs: inboundState.qaRefs.map((_) => null),\n\t\tselectedParentSpan: null,\n\t};\n};\n\nconst addDOMObjectsToCreationData = (outboundState: {\n\topen: boolean;\n\tmenuRef: null;\n\tfullCardRef: null;\n\tqaRefs: null[];\n\tmanuallySelectedString: string;\n\tselectedParentSpan: null;\n\tselectionPosition: { x: number; y: number };\n}): CreationData => {\n\treturn {\n\t\t...outboundState,\n\t\tmenuRef: createRef(),\n\t\tfullCardRef: createRef(),\n\t\tqaRefs: outboundState.qaRefs.map((_) => createRef()),\n\t};\n};\n\nconst creationTransform = createTransform(\n\t(inboundState: { future: CreationData[]; past: CreationData[]; present: CreationData }) => {\n\t\treturn {\n\t\t\t...inboundState,\n\t\t\tfuture: inboundState.future.map(removeDOMObjectsFromCreationData),\n\t\t\tpast: inboundState.past.map(removeDOMObjectsFromCreationData),\n\t\t\tpresent: removeDOMObjectsFromCreationData(inboundState.present),\n\t\t};\n\t},\n\t(outboundState): { future: CreationData[]; past: CreationData[]; present: CreationData } => {\n\t\treturn {\n\t\t\t...outboundState,\n\t\t\tfuture: outboundState.future.map(addDOMObjectsToCreationData),\n\t\t\tpast: outboundState.past.map(addDOMObjectsToCreationData),\n\t\t\tpresent: addDOMObjectsToCreationData(outboundState.present),\n\t\t};\n\t},\n\t{ whitelist: [creation.constants.NAME] }\n);\n\n//TODO-NICE: find way to save PDF in browser, maybe manually use indexeddb and use that in transform?\n// idea: make store-field pdfAsBase64 and use thunk for async-filling the field, then when reloading, use thunk to format\n// const reader = new FileReaderSync();\n\n// function readFileAsync(file: File) {\n// \treturn new Promise((resolve) => {\n// \t\treader.onload = () => {\n// \t\t\tresolve(reader.result);\n// \t\t};\n// \t\treader.onerror = () => resolve(null);\n\n// \t\treader.readAsDataURL(file);\n// \t});\n// }\n\nconst removeDOMObjectsFromDisplayData = (inboundState: DisplayData) => {\n\tlet pdf = null;\n\t// if (inboundState.pdf) {\n\t// \tpdf = await readFileAsync(inboundState.pdf);\n\t// }\n\tconst result = { ...inboundState, documentRef: null, materialData: null, pdf };\n\treturn result;\n};\n\n//TODO-NICE: create persistable type for the state in model\n\nconst addDOMObjectsToDisplayData = (outboundState: {\n\tpdf: null;\n\tpdfName?: string;\n\tdisplayStatus: DisplayStatus;\n\tcurrentPage: number;\n\ttotalPages: number;\n\t//TODO-NICE:might need amount of spans per page for validation? if yes, use this\n\tpageSpans: PerPageSpans;\n\tdocumentRef: null;\n\tzoomQueue: number | null;\n\tmaterialData: null;\n}): DisplayData => {\n\treturn {\n\t\t...outboundState,\n\t\tpdf: undefined,\n\t\tdocumentRef: createRef(),\n\t\tmaterialData: { materialDataTimeStamp: -Infinity },\n\t};\n};\n\nconst displayTransform = createTransform(\n\t(inboundState: DisplayData) => {\n\t\treturn removeDOMObjectsFromDisplayData(inboundState);\n\t},\n\t(outboundState): DisplayData => {\n\t\treturn addDOMObjectsToDisplayData(outboundState);\n\t},\n\t{ whitelist: [display.constants.NAME] }\n);\n\nexport const persistConfig = {\n\tkey: \"root\",\n\tstorage,\n\ttransforms: [creationTransform, displayTransform],\n};\n","import { createStore } from \"redux\";\nimport { applyMiddleware } from \"redux\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport thunk from \"redux-thunk\";\nimport { combineReducers } from \"redux\";\nimport focus from \"./modules/focus\";\nimport creation from \"./modules/creation\";\nimport river from \"./modules/river\";\nimport display from \"./modules/display\";\nimport cards from \"./modules/cards\";\nimport { persistStore, persistReducer } from \"redux-persist\";\nimport undoable, { includeAction } from \"redux-undo\";\nimport { persistConfig } from \"./persist\";\nimport db from \"./modules/db\";\n\n//TODO-NICE: make limit for undo (right now its fine, if we reset on document-upload)\n//TODO-NICE: make snackbar for which action is undone/redone\n//TODO-NICE: this undo-buisness is not very transparent, I just list each action that is state-relevant and not view, make action list in constants.ts?\n\nconst rootReducer = combineReducers({\n\t[focus.constants.NAME]: focus.reducer,\n\t[creation.constants.NAME]: undoable(creation.reducer, {\n\t\tfilter: includeAction([cards.actionTypes.CARD_PUSH, creation.actionTypes.SELECTED_STRING]),\n\t}),\n\t[river.constants.NAME]: undoable(river.reducer, {\n\t\tfilter: includeAction([\n\t\t\tcards.actionTypes.CARD_PUSH,\n\t\t\tcards.actionTypes.CARD_REMOVE,\n\t\t\tdb.actionTypes.LOAD_DOCUMENT_DATA_SETS,\n\t\t]),\n\t}),\n\t[display.constants.NAME]: display.reducer,\n\t[cards.constants.NAME]: undoable(cards.reducer, {\n\t\tfilter: includeAction([\n\t\t\tdb.actionTypes.LOAD_DOCUMENT_DATA_SETS,\n\t\t\tcards.actionTypes.CARD_PUSH,\n\t\t\tcards.actionTypes.CARD_UPDATE,\n\t\t\tcards.actionTypes.CARD_REMOVE,\n\t\t\t//this needs to be here, because we use display it to the user with the grab-icon\n\t\t\tcards.actionTypes.CARD_GOAL,\n\t\t]),\n\t}),\n\t[db.constants.NAME]: undoable(db.reducer, {\n\t\tfilter: includeAction([db.actionTypes.LOAD_DOCUMENT_DATA_SETS]),\n\t}),\n});\n\nconst stateSanitizer = (state: any) => {\n\treturn state.displayData.pdf ? { ...state, displayData: { ...state.displayData, pdf: \"PDF_FILE_IS_HERE\" } } : state;\n};\n\nconst persistedReducer = persistReducer(persistConfig, rootReducer);\n\nconst composeEnhancers = composeWithDevTools({ stateSanitizer });\nconst enhancer = composeEnhancers(applyMiddleware(thunk));\n\nexport const store = createStore(persistedReducer, enhancer);\n\nexport const persistor = persistStore(store);\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { ReaderScene } from \"./scenes/ReaderScene\";\nimport { Provider } from \"react-redux\";\nimport { store, persistor } from \"./store\";\nimport { PersistGate } from \"redux-persist/es/integration/react\";\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<Provider store={store}>\n\t\t\t<PersistGate loading={null} persistor={persistor}>\n\t\t\t\t<ReaderScene></ReaderScene>\n\t\t\t</PersistGate>\n\t\t</Provider>\n\t</React.StrictMode>,\n\tdocument.getElementById(\"root\")\n);\n","function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 92;"],"sourceRoot":""}