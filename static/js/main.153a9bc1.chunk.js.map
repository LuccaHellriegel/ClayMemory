{"version":3,"sources":["modules/display/constants.ts","modules/display/actionTypes.ts","modules/selection/constants.ts","modules/selection/actionTypes.ts","modules/cards/model/model-origin.ts","modules/cards/services/transformInputOrigin.ts","modules/cards/constants.ts","modules/cards/actionTypes.ts","modules/cards/model/model.ts","modules/cards/selectors.ts","modules/cards/services/contentStringToConfig.ts","modules/cards/actions.ts","modules/text/constants.ts","modules/text/components/NewNoteCardTooltip.tsx","modules/text/components/AddQAButtonTooltip.tsx","modules/text/components/DeleteCardButtonTooltip.tsx","modules/text/components/AppendButtonTooltip.tsx","modules/text/index.ts","modules/cards/components/AddNoteButton.tsx","modules/cards/components/AddQAButton.tsx","modules/cards/components/DeleteCardButton.tsx","modules/db/constants.ts","modules/db/actionTypes.ts","modules/db/actions.ts","modules/db/reducer.ts","modules/db/selectors.ts","modules/db/index.ts","modules/cards/reducer.ts","modules/cards/index.ts","modules/selection/selectors.ts","modules/selection/actions.ts","modules/selection/reducer.ts","modules/selection/components/SelectionSnackbar.tsx","modules/selection/services/getSelection.ts","modules/selection/index.ts","modules/display/selectors.ts","shared/utils.ts","modules/display/services/span.ts","modules/display/services/materialData.ts","modules/display/actions.ts","modules/display/components/NavigationButtons.tsx","modules/display/components/PageChooser/PageChooser.tsx","modules/display/components/PDFDocument/PageKeyboardControl.tsx","modules/display/components/PDFDocument/PDFDocument.tsx","modules/display/components/MaterialDisplayColumn.tsx","modules/display/reducer.ts","modules/display/index.ts","modules/river/constants.ts","modules/river/selectors.ts","modules/river/actionTypes.ts","modules/river/actions.ts","shared/GreenCheckbox.tsx","modules/river/components/RiverContentFormGroup.tsx","modules/focus/constants.ts","modules/focus/actionTypes.ts","modules/focus/actions.ts","modules/focus/reducer.ts","modules/focus/selectors.ts","modules/focus/index.ts","modules/river/components/CardRiver/HybridCardField.tsx","modules/river/components/CardRiver/Buttons/JumpToOriginButton.tsx","modules/river/components/CardRiver/Buttons/GrabForFieldButton.tsx","modules/river/components/CardRiver/Buttons/AppendButton.tsx","modules/river/components/CardRiver/Cards/QACard.tsx","modules/river/components/CardRiver/Cards/NoteCard.tsx","modules/river/components/CardRiver/Cards/ClayCard.tsx","modules/river/components/CardRiver/toCardGridItemsWithDividers.tsx","modules/river/components/CardRiver/CardRiverAccordion.tsx","modules/river/components/CardRiver/ChildCardRiver.tsx","modules/river/model.ts","modules/river/components/SummaryRiver.tsx","modules/river/components/ActiveCardRiver.tsx","modules/river/reducer.ts","modules/river/index.ts","modules/control/selectors.ts","modules/control/actions.ts","modules/control/hooks/useEventListener.tsx","modules/extraction/constants.ts","modules/extraction/actionTypes.ts","modules/extraction/selectors.ts","modules/extraction/actions.ts","modules/extraction/reducer.ts","modules/extraction/components/CardItems.tsx","modules/extraction/components/NewButtons.tsx","modules/extraction/components/ContextMenu.tsx","modules/extraction/services/contextMenuContainsTargetNode.ts","modules/extraction/index.ts","modules/control/components/Control.tsx","modules/control/services/mouseControl.ts","modules/control/components/DeleteDocumentButton.tsx","modules/control/components/LoadDocumentDataButton.tsx","modules/control/components/Options.tsx","modules/control/components/CardSearchBar.tsx","modules/control/components/UndoRedoButtons.tsx","modules/control/components/ShowHideButton.tsx","modules/control/components/ControlBar.tsx","modules/control/index.ts","scenes/ActiveRiverView.tsx","scenes/SummaryRiverView.tsx","scenes/ReaderScene.tsx","persist.ts","store.ts","index.tsx"],"names":["NAME","PDF_UPLOADED","MATERIAL_LOADED","DISPLAY_STATUS","PAGE_UPDATE","ZOOM_QUEUE","MATERIAL_DATA","MATERIAL_HEIGHT","SELECTED_STRING","SELECTED_PARENT","DOCUMENT_POSITION","SOURCE_CARD","extractSingleOrigin","inputOrigin","field","transformInputOrigin","inputField","outputField","oldOrigin","mergeSimilarCardOrigins","isNullOrUndefined","q","isQAOrigin","a","partialQAOrigin","flipPartialQAOrigin","CARD_UPDATE","CARD_PUSH","CARD_REMOVE","CARD_GOAL","emptyCardPayloadConfig","type","content","getAll","state","present","getLastCardIDNumber","createSelector","lastCardIDNumber","getCards","cards","getGoalCard","goalCard","updateContentStrFunctions","REPLACE","_","newStr","APPEND","oldStr","creationFunctions","note","oldConfig","partialUpdateFunction","contentStringToConfig","contentStr","updateType","existingCard","createPartialUpdateContentStrFunction","cardPush","cardPayload","dispatch","getState","t","payload","card","cardID","toString","emptyCard","emptyNoteCard","emptyQACard","cardUpdate","updateCardContent","contentString","creationType","origin","currentCard","config","pushCardContent","removeCard","setGoalCard","cardConfig","resetGoalCard","switchToActiveRiverTooltip","switchToSummaryRiverTooltip","undoTooltip","redoTooltip","nextPageTooltip","previousPageTooltip","deleteCardTooltip","grabForCardTooltip","jumpToOriginTooltip","appendToCardTooltip","newQACardTooltip","newNoteCardTooltip","deleteDocumentTooltip","loadSavedDocumentTooltip","noMaterialText","loadingMaterialText","activeDocumentText","existingDataText","loadMaterialText","downloadDatasetsText","uploadDatasetsText","noteText","questionText","answerText","defaultEnterDelay","defaultEnterNextDelay","NewNoteCardTooltip","children","Tooltip","title","enterDelay","enterNextDelay","AddQAButtonTooltip","DeleteCardButtonTooltip","AppendButtonTooltip","components","constants","AddNoteButton","useDispatch","IconButton","onClick","AddQAButton","DeleteCardButton","fontSize","ARCHIVE_CURRENT_DATA","LOAD_DOCUMENT_DATA_SETS","DELETE_DOCUMENT_DATA_SET","DOCUMENT_CHANGE","archiveDBData","dbData","loadDocumentDataSets","newActiveDataSet","deleteDocumentDataSet","document","initialState","documentDB","name","reduce","prev","Object","fromEntries","entries","filter","arr","getDocumentDB","getDocumentNames","db","keys","getDocumentDataSets","values","actions","actionTypes","reducer","selectors","intialState","services","cardObj","getCurrentSelectionPosition","selectionPosition","getCurrentSelectedString","manuallySelectedString","getCurrentSelectedParent","selectedParentSpan","getSourceCard","sourceCard","selectionToCardAppend","transformedOrigin","isUpdate","undefined","selectedString","resetManuallySelectedString","selectionToCard","selectionToCardForSourceCard","sourceField","newOrigin","spanIndex","hasNonEmptyOrigin","updateManuallySelectedString","str","selectedParent","span","updateSelectionPosition","x","y","setSourceCard","trySetSourceCard","resetSourceCard","tryResetSourceCard","selectionData","SelectionSnackbar","useState","open","setOpen","useSelector","message","style","color","Snackbar","anchorOrigin","vertical","horizontal","onClose","event","reason","preventDefault","action","size","aria-label","getSelection","selection","window","activeElement","value","substring","selectionStart","selectionEnd","text","e","getPDF","pdf","getPDFName","pdfName","getRenderCritialData","currentPage","documentRef","getTotalPages","totalPages","getCurrentPage","getPageControlData","getDocumentRef","getMaterialData","materialData","getTimeStamp","materialDataTimeStamp","getMaterialSpans","materialSpans","getSpanIndex","indexOf","getMaterialBoundingRects","materialBoundingRects","getDataExists","timestamp","getDisplayStatus","displayStatus","displayStatusIsShow","status","getZoomQueue","zoomQueue","getMaterialHeight","materialHeight","getCurrentOrigin","page","incrementer","counter","curCounter","expandSpan","rect","getBoundingClientRect","container","startingSpans","Array","from","querySelectorAll","length","expandedSpans","spans","boundingRects","exSpan","push","splitExpandedSpans","map","expandSpans","sort","exSpan2","pdfUpload","materialUploaded","files","target","materialLoaded","tryInterval","tries","ms","func","increment","timeout","setInterval","clearInterval","captureMaterialData","current","startTime","Date","now","curMaterialGroupData","keyMap","setPage","pageCorrections","newPage","movePage","nextPage","previousPage","pageControlKeyMap","ArrowLeft","ArrowRight","pageControlDispatcher","key","toggleDisplayState","displayState","setZoomQueue","zoomToCardOrigin","console","log","emptyZoomQueue","scrollIntoView","behavior","block","inline","setMaterialHeight","height","deleteDocument","activeDocument","ActionCreators","clearHistory","PreviousButton","NextButton","PageNavigation","Card","variant","Grid","direction","item","Divider","orientation","nonDigitRegEx","PageChooser","error","userInput","setState","alignItems","justify","width","TextField","inputProps","padding","fontFamily","fontWeight","lineHeight","letterSpacing","onKeyDown","submittedValue","parseInt","onChange","possiblePage","trim","match","asInt","validatePageChoice","Typography","PageKeyboardControl","ref","useRef","tabIndex","pdfjs","GlobalWorkerOptions","workerSrc","version","options","cMapUrl","cMapPacked","PDFDocumentContainer","connect","parentSize","useLayoutEffect","useEffect","onMouseUp","mouseUpDocument","file","onLoadSuccess","numPages","inputRef","onItemClick","pageNumber","loading","noData","renderMode","onRenderSuccess","forEach","layer","top","left","transform","selectedStr","selectionObject","anchorNode","parentNode","MaterialDisplayColumnWithSize","withSize","monitorHeight","noPlaceholder","hidden","elevation","setElevation","onMouseEnter","onMouseLeave","Paper","createRef","pageSpans","Infinity","getRiverMakeUps","riverMakeUps","getActiveRiverMakeUpID","activeRiverMakeUpID","getPushToRiver","pushToRiverID","getPushToRiverMakeUp","makeUps","id","getActiveRiverMakeUp","getPushToRiverCardIDs","makeUp","cardIDs","getPushToRiverCards","makeUpCardIDs","getActiveRiverCardIDs","getActiveRiverCards","getRiverShowState","riverShowState","riverShowStateIsShow","getHoveredCardData","highlightedCardID","highlightedCardField","getLastRiverIDNumber","lastRiverIDNumber","getRiverContentState","riverContentState","getRiverContentFilter","contentFilter","RIVER_SHOW_STATE","RIVER_CONTENT_STATE","RIVER_PUSH_STATE","RIVER_HOVERED_CARD","RIVER_CONTENT_FILTER","toggleRiverShowState","setRiverContentState","setPushToRiver","trySetPushToRiver","setHoveredCard","trySetHoveredCard","highlightedCardIDData","resetHoveredCard","setContentFilter","GreenCheckbox","withStyles","root","green","checked","props","Checkbox","RiverContentFormGroup","showQAs","showNotes","changeContentState","clickedState","FormGroup","FormControlLabel","control","label","DISPLAY_FOCUS_UPDATE","updateDisplayFocus","focus","displayFocus","getDisplayFocus","HybridCardField","storeValue","saveChanges","rest","mutableValue","InputProps","disableUnderline","minWidth","multiline","onBlur","mouseUpCardField","JumpToOriginButton","cardOrigin","display","GrabForFieldButton","outlined","setOutlined","isGoalCard","AppendButton","selectionParent","store","useStore","QACard","isHoveredCard","isActiveRiver","spacing","borderStyle","backgroundColor","InputLabelProps","NoteCard","border","borderRadius","ClayCard","riverID","GridDivider","CardRiverAccordion","gridItems","summary","pushToRiver","Accordion","defaultExpanded","overflowY","maxHeight","AccordionSummary","align","MozUserSelect","WebkitUserSelect","msUserSelect","AccordionDetails","ChildCardRiver","riverCards","useMemo","inputCards","noteConfig","includes","noteContainsContentFilter","qaConfig","qaContainsContentFilter","index","toCardGridItemsWithDividers","pageNumberToRiverMakeUpID","SummaryRiver","cardConfigs","focusRef","scrollTo","replace","ActiveCardRiver","emptyCardRiver","updateStateWithMakeUps","updatedState","deactivateActiveCardRiver","active","removeCardFromRivers","entry","riverMakeUp","activeRiver","oldRiver","collectCurrentDBData","river","archiveCurrentDBData","fileDownload","require","downloadDBData","documentDataSets","localString","toLocaleString","JSON","stringify","changeDocument","newPDFName","currentPDFName","newDocumentData","loadSavedDocument","useEventListener","eventName","handler","savedHandler","eventListener","addEventListener","removeEventListener","TOGGLE_CONTEXT_MENU","CLOSE_CONTEXT_MENU","OPEN_CONTEXT_MENU","getContextMenuState","getContextMenuRef","menuRef","getContextMenuFullCardsRef","fullCardRef","getContextMenuQARefs","qaRefs","getContextMenuInitData","position","toggleContextMenu","closeContextMenu","openContextMenu","creationData","noteCardIsEmpty","qaCardIsNotFull","SingleOptionItem","dispatchRiver","MenuItem","QAOptionItem","qaRef","parentMenuOpen","CardConfigItem","NewQACardQ","NewQACardA","NewNoteCard","NewButtons","noteDispatch","qDispatch","aDispatch","ContextMenuContainer","fullCardsRef","openState","qaRefIndex","anchorPosition","nonFullRiverCards","fullRiverCards","Menu","keepMounted","anchorReference","contextMenuContainsTargetNode","refObject","cur","querySelector","contains","ControlContainer","mouseDownControl","creation","rightClickControl","DeleteDocumentDialogAlert","handleClose","Dialog","aria-labelledby","aria-describedby","DialogTitle","DialogContent","DialogContentText","DialogActions","Button","autoFocus","DeleteDocumentButton","LoadDocumentDataButton","InputDocument","click","disableElevation","startIcon","accept","InputDataSets","reader","FileReader","readAsText","onload","uploadedDataSets","parse","result","foundDataSet","find","DocumentOptionItem","ActiveDocumentOptionItem","Options","documents","React","anchorEl","setAnchorEl","currentTarget","Boolean","MenuListProps","paddingLeft","paddingRight","component","marginTop","doc","listStyleType","CardSearchBar","placeholder","newValue","onCancelSearch","onRequestSearch","UndoButton","undo","RedoButton","redo","UndoRedoCard","ShowRiverCheckbox","ShowMaterialCheckbox","displayShowState","ShowHideButton","ControlBar","materialName","AppBar","Toolbar","Tabs","Tab","disableFocusListener","flexGrow","ActiveRiverView","showMaterial","showRiver","SummaryRiverView","useStyles","makeStyles","theme","createStyles","bottom","right","ScrollTop","classes","trigger","useScrollTrigger","disableHysteresis","threshold","Zoom","in","anchor","ownerDocument","role","className","ReaderScene","Fab","removeDOMObjectsFromCreationData","inboundState","addDOMObjectsToCreationData","outboundState","extractionTransform","createTransform","future","past","whitelist","extraction","displayTransform","removeDOMObjectsFromDisplayData","addDOMObjectsToDisplayData","selectionTransform","persistConfig","storage","transforms","rootReducer","combineReducers","undoable","includeAction","persistedReducer","persistReducer","enhancer","composeWithDevTools","stateSanitizer","displayData","composeEnhancers","applyMiddleware","thunk","createStore","persistor","persistStore","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.153a9bc1.chunk.js","sourcesContent":["export const NAME = \"displayData\";\n","import { NAME } from \"./constants\";\n\nexport const PDF_UPLOADED = NAME + \"/PDF_UPLOADED\";\nexport const MATERIAL_LOADED = NAME + \"/MATERIAL_LOADED\";\nexport const DISPLAY_STATUS = NAME + \"/DISPLAY_STATUS\";\nexport const PAGE_UPDATE = NAME + \"/PAGE_UPDATE\";\nexport const ZOOM_QUEUE = NAME + \"/ZOOM_QUEUE\";\nexport const MATERIAL_DATA = NAME + \"/MATERIAL_DATA\";\nexport const MATERIAL_HEIGHT = NAME + \"/MATERIAL_HEIGHT\";\n","export const NAME = \"selectionData\";\n","import { NAME } from \"./constants\";\n\nexport const SELECTED_STRING = NAME + \"/SELECTED_STRING\";\nexport const SELECTED_PARENT = NAME + \"/SELECTED_PARENT\";\nexport const DOCUMENT_POSITION = NAME + \"/SELECTION_POSITION\";\nexport const SOURCE_CARD = NAME + \"/SOURCE_CARD\";\n","import { isNullOrUndefined } from \"util\";\nimport { QACardField } from \"./model-content\";\n\nexport type SingleOrigin = { spanIndex: number; page: number };\nexport type QOnlyQAOrigin = { q: SingleOrigin; a: {} };\nexport type AOnlyQAOrigin = { q: {}; a: SingleOrigin };\nexport type PartialQAOrigin = QOnlyQAOrigin | AOnlyQAOrigin;\nexport const partialQAOrigin = (inputOrigin: SingleOrigin, field: QACardField): PartialQAOrigin => {\n\treturn { q: {}, a: {}, [field]: inputOrigin } as PartialQAOrigin;\n};\nexport type FullQAOrigin = { q: SingleOrigin; a: SingleOrigin };\nexport const extractSingleOrigin = (inputOrigin: QAOrigin, field: QACardField): SingleOrigin => {\n\t// existence needs to be checked prior\n\treturn (inputOrigin as FullQAOrigin)[field];\n};\nexport const flipQACardField = (field: QACardField): QACardField => (field === \"q\" ? \"a\" : \"q\");\nexport const flipPartialQAOrigin = (\n\tinputOrigin: PartialQAOrigin,\n\tinputField: QACardField,\n\toutputField: QACardField\n): PartialQAOrigin => {\n\treturn { [inputField]: {}, [outputField]: inputOrigin[inputField] } as PartialQAOrigin;\n};\nexport type QAOrigin = FullQAOrigin | PartialQAOrigin;\nexport const isQAOrigin = (inputOrigin: CardOrigin) => !isNullOrUndefined((inputOrigin as QAOrigin).q);\nexport type NoteOrigin = SingleOrigin;\nexport type CardOrigin = NoteOrigin | QAOrigin;\nexport const mergeSimilarCardOrigins = (inputOrigin: CardOrigin, oldOrigin: CardOrigin): CardOrigin => {\n\treturn { ...oldOrigin, ...inputOrigin };\n};\n\nexport const hasNonEmptyOrigin = (origin?: CardOrigin) =>\n\t!!origin &&\n\t(!isNullOrUndefined((origin as SingleOrigin).spanIndex) ||\n\t\t!isNullOrUndefined((origin as AOnlyQAOrigin).a?.spanIndex) ||\n\t\t!isNullOrUndefined((origin as QOnlyQAOrigin).q?.spanIndex));\n","import { CardField, QACardField } from \"../model/model-content\";\nimport {\n\tCardOrigin,\n\tQAOrigin,\n\tPartialQAOrigin,\n\tpartialQAOrigin,\n\textractSingleOrigin,\n\tSingleOrigin,\n\tflipPartialQAOrigin,\n\tmergeSimilarCardOrigins,\n\tisQAOrigin,\n} from \"../model/model-origin\";\n\n//TODO-NICE: make this non-redundant, but for now it works\n\nexport const transformInputOrigin = (\n\tinputOrigin: CardOrigin,\n\tinputField: CardField,\n\toutputField: CardField,\n\toldOrigin?: CardOrigin\n): CardOrigin => {\n\tif (!oldOrigin) {\n\t\tif (inputField === outputField) return inputOrigin;\n\n\t\tif (inputField === \"note\") {\n\t\t\treturn partialQAOrigin(inputOrigin as SingleOrigin, outputField as QACardField);\n\t\t}\n\n\t\tif (outputField === \"note\") {\n\t\t\treturn extractSingleOrigin(inputOrigin as QAOrigin, inputField as QACardField);\n\t\t}\n\n\t\treturn flipPartialQAOrigin(inputOrigin as PartialQAOrigin, inputField, outputField);\n\t} else {\n\t\tif (inputField === outputField) return mergeSimilarCardOrigins(inputOrigin, oldOrigin);\n\n\t\tif (inputField === \"note\" && isQAOrigin(oldOrigin)) {\n\t\t\t// this means SingleOrigin to QAOrigin\n\t\t\treturn { ...oldOrigin, [outputField]: inputOrigin };\n\t\t}\n\n\t\tif (outputField === \"note\") {\n\t\t\treturn extractSingleOrigin(inputOrigin as QAOrigin, inputField as QACardField);\n\t\t}\n\n\t\t// swap cases\n\t\tif (outputField === \"q\") {\n\t\t\treturn { q: (inputOrigin as QAOrigin).a, a: (oldOrigin as QAOrigin).a } as QAOrigin;\n\t\t} else {\n\t\t\t//A\n\t\t\treturn { a: (inputOrigin as QAOrigin).q, q: (oldOrigin as QAOrigin).q } as QAOrigin;\n\t\t}\n\t}\n};\n","export const NAME = \"cards\";\n","import { NAME } from \"./constants\";\n\nexport const CARD_UPDATE = NAME + \"/CARD_UPDATE\";\nexport const CARD_PUSH = NAME + \"/CARD_PUSH\";\nexport const CARD_REMOVE = NAME + \"/CARD_REMOVE\";\nexport const CARD_GOAL = NAME + \"/CARD_GOAL\";\n","import { NoteOrigin, QAOrigin, CardOrigin } from \"./model-origin\";\nimport { NoteCardContent, QACardContent, CardContent } from \"./model-content\";\n\nexport type CardID = string;\nexport const nextCardID = (lastCardIDNumber: number) => (lastCardIDNumber + 1).toString();\n\nexport type CardType = \"Note\" | \"Q-A\";\nexport type NoteConfig = { cardID: CardID; type: CardType; content: NoteCardContent; origin?: NoteOrigin };\nexport type QAConfig = { cardID: CardID; type: CardType; content: QACardContent; origin?: QAOrigin };\nexport type CardConfig = NoteConfig | QAConfig;\n\nexport type CardPayloadConfig = { cardID?: CardID; type: CardType; content: CardContent; origin?: CardOrigin };\nexport const emptyCardPayloadConfig = (type: CardType): CardPayloadConfig => {\n\tswitch (type) {\n\t\tcase \"Note\":\n\t\t\treturn { type: \"Note\", content: \"\" };\n\t\tcase \"Q-A\":\n\t\t\treturn { type: \"Q-A\", content: { q: \"\", a: \"\" } };\n\t}\n};\nexport type CardPayload = { card: CardPayloadConfig };\nexport type FinalizedCardPayload = { card: CardConfig };\n\nexport type UpdateType = \"REPLACE\" | \"APPEND\";\n\nexport type CreationType = \"note\" | \"q\" | \"a\";\n\nexport type GoalCard = CardConfig & { creationType: CreationType };\n\nexport type CardsState = {\n\tcards: { [cardID: string]: CardConfig };\n\tlastCardIDNumber: number;\n\tgoalCard: GoalCard | null;\n};\n","import { createSelector } from \"reselect\";\nimport { CardsState } from \"./model/model\";\nimport { NAME } from \"./constants\";\n\nexport const getAll = (state: any) => state[NAME].present;\n\nexport const getLastCardIDNumber = createSelector(getAll, (state) => state.lastCardIDNumber);\n\nexport const getCards = createSelector(getAll, (state: CardsState) => state.cards);\n\nexport const getGoalCard = createSelector(getAll, (state: CardsState) => state.goalCard);\n","import { UpdateType, CardPayloadConfig, CardType } from \"../model/model\";\nimport { QACardContent, CardField } from \"../model/model-content\";\n\ntype UpdateContentStrFunction = (oldStr: string, newStr: string) => string;\n\nconst updateContentStrFunctions: { [key in UpdateType]: UpdateContentStrFunction } = {\n\tREPLACE: (_: string, newStr: string) => newStr,\n\tAPPEND: (oldStr: string, newStr: string) => oldStr + newStr,\n};\n\ntype partialUpdateContentStrFunction = (oldStr: string) => string;\n\nconst createPartialUpdateContentStrFunction = (updateType: UpdateType, newStr: string) => (oldStr: string) =>\n\tupdateContentStrFunctions[updateType](oldStr, newStr);\n\ntype creationFunction = (\n\toldConfig: CardPayloadConfig,\n\tpartialUpdateFunction: partialUpdateContentStrFunction\n) => CardPayloadConfig;\n\nconst defaultCreationFunction: creationFunction = (oldConfig, partialUpdateFunction) => {\n\treturn { ...oldConfig, content: partialUpdateFunction(oldConfig.content as string) };\n};\n\nconst creationFunctions: {\n\t[key in CardField]: creationFunction;\n} = {\n\tnote: defaultCreationFunction,\n\tq: (oldConfig, partialUpdateFunction) => {\n\t\tconst content = oldConfig.content as QACardContent;\n\t\treturn { ...oldConfig, content: { ...content, q: partialUpdateFunction(content.q) } };\n\t},\n\ta: (oldConfig, partialUpdateFunction) => {\n\t\tconst content = oldConfig.content as QACardContent;\n\t\treturn { ...oldConfig, content: { ...content, a: partialUpdateFunction(content.a) } };\n\t},\n};\n\nexport const contentStringToConfig = (\n\tcontentStr: string,\n\ttype: CardType,\n\toutputField: CardField,\n\tupdateType: UpdateType,\n\texistingCard?: CardPayloadConfig\n): CardPayloadConfig => {\n\tconst partialUpdateFunction = createPartialUpdateContentStrFunction(updateType, contentStr);\n\tconst isCardUpdate = !!existingCard;\n\treturn isCardUpdate\n\t\t? creationFunctions[outputField](existingCard as CardPayloadConfig, partialUpdateFunction)\n\t\t: creationFunctions[outputField]({ type, content: type === \"Q-A\" ? { q: \"\", a: \"\" } : \"\" }, partialUpdateFunction);\n};\n","import {\n\tCardPayload,\n\tFinalizedCardPayload,\n\tCreationType,\n\tUpdateType,\n\tCardType,\n\tCardConfig,\n\tCardID,\n\tnextCardID,\n\temptyCardPayloadConfig,\n} from \"./model/model\";\nimport { CardOrigin } from \"./model/model-origin\";\nimport * as t from \"./actionTypes\";\nimport { Dispatch } from \"redux\";\nimport { getLastCardIDNumber, getCards } from \"./selectors\";\nimport { contentStringToConfig } from \"./services/contentStringToConfig\";\n\nexport const cardPush = (cardPayload: CardPayload) => {\n\treturn (dispatch: Dispatch, getState: Function) => {\n\t\tdispatch({\n\t\t\ttype: t.CARD_PUSH,\n\t\t\tpayload: {\n\t\t\t\t...cardPayload,\n\t\t\t\tcard: { ...cardPayload.card, cardID: nextCardID(getLastCardIDNumber(getState())) },\n\t\t\t} as FinalizedCardPayload,\n\t\t});\n\t};\n};\n\nexport const emptyCard = (type: CardType) => {\n\treturn cardPush({ card: emptyCardPayloadConfig(type) });\n};\nexport const emptyNoteCard = () => emptyCard(\"Note\");\nexport const emptyQACard = () => emptyCard(\"Q-A\");\n\nexport const cardUpdate = (card: CardPayload) => {\n\treturn { type: t.CARD_UPDATE, payload: card };\n};\n\nexport const updateCardContent = (\n\tcontentString: string,\n\tcardID: CardID,\n\tcreationType: CreationType,\n\tupdateType: UpdateType,\n\torigin?: CardOrigin\n) => {\n\treturn (dispatch: Dispatch, getState: Function) => {\n\t\tconst state = getState();\n\n\t\tconst currentCard = getCards(state)[cardID as string];\n\t\tconst config = contentStringToConfig(contentString, currentCard.type, creationType, updateType, currentCard);\n\n\t\tdispatch(\n\t\t\tcardUpdate({\n\t\t\t\tcard: { ...config, origin },\n\t\t\t})\n\t\t);\n\t};\n};\n\nexport const pushCardContent = (\n\tcontentString: string,\n\tcreationType: CreationType,\n\tupdateType: UpdateType,\n\ttype: CardType,\n\torigin?: CardOrigin\n) => {\n\tconst config = contentStringToConfig(contentString, type, creationType, updateType);\n\n\treturn cardPush({ card: { ...config, origin } });\n};\n\nexport const removeCard = (cardID: CardID) => {\n\treturn { type: t.CARD_REMOVE, payload: cardID };\n};\n\nexport const setGoalCard = (cardConfig: CardConfig, creationType: CreationType) => {\n\treturn { type: t.CARD_GOAL, payload: { ...cardConfig, creationType } };\n};\n\nexport const resetGoalCard = () => {\n\treturn { type: t.CARD_GOAL, payload: null };\n};\n","export const switchToActiveRiverTooltip = \"Switch to the Active-River view\";\nexport const switchToSummaryRiverTooltip = \"Switch to the Summary-River view\";\n\nexport const undoTooltip = \"Undo last action\";\nexport const redoTooltip = \"Redo last action\";\n\nexport const nextPageTooltip = \"Next page\";\nexport const previousPageTooltip = \"Previous page\";\n\nexport const deleteCardTooltip = \"Delete this card\";\nexport const grabForCardTooltip = \"Activate the document-selection grab for this card(-field)\";\nexport const jumpToOriginTooltip = \"Jump to the origin of the card content\";\nexport const appendToCardTooltip = \"Add the current selection to this card (only from document)\";\n\nexport const newQACardTooltip = \"Create new QA-card\";\nexport const newNoteCardTooltip = \"Create new Note-card\";\n\nexport const deleteDocumentTooltip = \"Delete this document and all its corresponding cards\";\nexport const loadSavedDocumentTooltip = \"Load the card data of this document\";\n\n///\n\nexport const noMaterialText = \"No PDF file specified.\";\nexport const loadingMaterialText = \"Loading PDF…\";\n\nexport const activeDocumentText = \"Active Document:\";\nexport const existingDataText = \"Inactive documents with existing data:\";\nexport const loadMaterialText = \"Load document\";\nexport const downloadDatasetsText = \"Download document datasets\";\nexport const uploadDatasetsText = \"Upload document datasets\";\n\nexport const noteText = \"Note\";\nexport const questionText = \"Question\";\nexport const answerText = \"Answer\";\n\n///\n\nexport const defaultEnterDelay = 500;\nexport const defaultEnterNextDelay = 1000;\n","import React, { ReactElement } from \"react\";\nimport { Tooltip } from \"@material-ui/core\";\nimport { newNoteCardTooltip, defaultEnterDelay, defaultEnterNextDelay } from \"../constants\";\n\nexport const NewNoteCardTooltip = ({ children }: { children: ReactElement }) => {\n\treturn (\n\t\t<Tooltip title={newNoteCardTooltip} enterDelay={defaultEnterDelay} enterNextDelay={defaultEnterNextDelay}>\n\t\t\t{children}\n\t\t</Tooltip>\n\t);\n};\n","import React, { ReactElement } from \"react\";\nimport { Tooltip } from \"@material-ui/core\";\nimport { defaultEnterDelay, defaultEnterNextDelay, newQACardTooltip } from \"../constants\";\n\nexport const AddQAButtonTooltip = ({ children }: { children: ReactElement }) => {\n\treturn (\n\t\t<Tooltip title={newQACardTooltip} enterDelay={defaultEnterDelay} enterNextDelay={defaultEnterNextDelay}>\n\t\t\t{children}\n\t\t</Tooltip>\n\t);\n};\n","import React, { ReactElement } from \"react\";\nimport { Tooltip } from \"@material-ui/core\";\nimport { defaultEnterDelay, defaultEnterNextDelay, deleteCardTooltip } from \"../constants\";\n\nexport const DeleteCardButtonTooltip = ({ children }: { children: ReactElement }) => {\n\treturn (\n\t\t<Tooltip title={deleteCardTooltip} enterDelay={defaultEnterDelay} enterNextDelay={defaultEnterNextDelay}>\n\t\t\t{children}\n\t\t</Tooltip>\n\t);\n};\n","import React, { ReactElement } from \"react\";\nimport { Tooltip } from \"@material-ui/core\";\nimport { defaultEnterDelay, defaultEnterNextDelay, appendToCardTooltip } from \"../constants\";\n\nexport const AppendButtonTooltip = ({ children }: { children: ReactElement }) => {\n\treturn (\n\t\t<Tooltip title={appendToCardTooltip} enterDelay={defaultEnterDelay} enterNextDelay={defaultEnterNextDelay}>\n\t\t\t{children}\n\t\t</Tooltip>\n\t);\n};\n","import * as components from \"./components\";\nimport * as constants from \"./constants\";\n\nexport default { components, constants };\n","import FeaturedVideoIcon from \"@material-ui/icons/FeaturedVideo\";\nimport React from \"react\";\nimport { IconButton } from \"@material-ui/core\";\nimport { useDispatch } from \"react-redux\";\nimport text from \"../../text\";\nimport { emptyNoteCard } from \"../actions\";\n\nexport const AddNoteButton = () => {\n\tconst dispatch = useDispatch();\n\treturn (\n\t\t<text.components.NewNoteCardTooltip>\n\t\t\t<IconButton\n\t\t\t\ttype=\"button\"\n\t\t\t\tonClick={() => {\n\t\t\t\t\tdispatch(emptyNoteCard());\n\t\t\t\t}}\n\t\t\t>\n\t\t\t\t<FeaturedVideoIcon></FeaturedVideoIcon>\n\t\t\t</IconButton>\n\t\t</text.components.NewNoteCardTooltip>\n\t);\n};\n","import FeaturedPlayListIcon from \"@material-ui/icons/FeaturedPlayList\";\nimport React from \"react\";\nimport { IconButton } from \"@material-ui/core\";\nimport { useDispatch } from \"react-redux\";\nimport text from \"../../text\";\nimport { emptyQACard } from \"../actions\";\n\nexport const AddQAButton = () => {\n\tconst dispatch = useDispatch();\n\treturn (\n\t\t<text.components.AddQAButtonTooltip>\n\t\t\t<IconButton\n\t\t\t\ttype=\"button\"\n\t\t\t\tonClick={() => {\n\t\t\t\t\tdispatch(emptyQACard());\n\t\t\t\t}}\n\t\t\t>\n\t\t\t\t<FeaturedPlayListIcon></FeaturedPlayListIcon>\n\t\t\t</IconButton>\n\t\t</text.components.AddQAButtonTooltip>\n\t);\n};\n","import DeleteForeverIcon from \"@material-ui/icons/DeleteForever\";\nimport React from \"react\";\nimport { IconButton } from \"@material-ui/core\";\nimport { useDispatch } from \"react-redux\";\nimport { CardID } from \"../model/model\";\nimport text from \"../../text\";\nimport { removeCard } from \"../actions\";\n\n//TODO-NICE: use storybook for visual component testing\n\nexport const DeleteCardButton = ({ cardID }: { cardID: CardID }) => {\n\tconst dispatch = useDispatch();\n\treturn (\n\t\t<text.components.DeleteCardButtonTooltip>\n\t\t\t<IconButton\n\t\t\t\ttype=\"button\"\n\t\t\t\tonClick={() => {\n\t\t\t\t\tdispatch(removeCard(cardID));\n\t\t\t\t}}\n\t\t\t>\n\t\t\t\t<DeleteForeverIcon fontSize=\"small\"></DeleteForeverIcon>\n\t\t\t</IconButton>\n\t\t</text.components.DeleteCardButtonTooltip>\n\t);\n};\n","export const NAME = \"documentDB\";\n","import { NAME } from \"./constants\";\n\nexport const ARCHIVE_CURRENT_DATA = NAME + \"/ARCHIVE_CURRENT_DATA\";\nexport const LOAD_DOCUMENT_DATA_SETS = NAME + \"/LOAD_DOCUMENT_DATA_SETS\";\nexport const DELETE_DOCUMENT_DATA_SET = NAME + \"/DELETE_DOCUMENT_DATA_SET\";\n\n// TODO-NICE: dont know where to put this else\n// this is used for loading a new Document-DataSet / resetting if new Document\nexport const DOCUMENT_CHANGE = NAME + \"/DOCUMENT_CHANGE\";\n","import { DocumentData } from \"./model\";\nimport * as t from \"./actionTypes\";\n\nexport const archiveDBData = (dbData: DocumentData) => {\n\treturn { type: t.ARCHIVE_CURRENT_DATA, payload: dbData };\n};\n\nexport const loadDocumentDataSets = (dbData: DocumentData[], newActiveDataSet?: DocumentData) => {\n\treturn { type: t.LOAD_DOCUMENT_DATA_SETS, payload: { dbData, newActiveDataSet } };\n};\n\n//TODO-NICE: might need to make my convention of always using payload as data-field obvious?\n\nexport const deleteDocumentDataSet = (document: string) => {\n\treturn { type: t.DELETE_DOCUMENT_DATA_SET, payload: document };\n};\n","import { DocumentDBState, DocumentData, DocumentDB } from \"./model\";\nimport * as t from \"./actionTypes\";\n\nconst initialState: DocumentDBState = { documentDB: {} };\n\n//TODO-NICE: PDF-date gets saved with name, better use some hash or something (rename of document file is likely) -> use size or last-modified or smth like that instead of name\n\nconst documentDB = (\n\tstate = initialState,\n\t{ type, payload }: { type: string; payload: DocumentData | DocumentData[] | string | { dbData: DocumentData[] } }\n): DocumentDBState => {\n\tswitch (type) {\n\t\t// dont need to undo this, because if we change the active river and then change the document, the archive version gets overwritten\n\t\tcase t.ARCHIVE_CURRENT_DATA:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tdocumentDB: { ...state.documentDB, [(payload as DocumentData).name]: payload as DocumentData },\n\t\t\t};\n\t\tcase t.LOAD_DOCUMENT_DATA_SETS:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tdocumentDB: {\n\t\t\t\t\t...state.documentDB,\n\t\t\t\t\t...((payload as { dbData: DocumentData[] }).dbData as DocumentData[]).reduce((prev, dbData) => {\n\t\t\t\t\t\tprev[dbData.name] = dbData;\n\t\t\t\t\t\treturn prev;\n\t\t\t\t\t}, {} as DocumentDB),\n\t\t\t\t},\n\t\t\t};\n\t\tcase t.DELETE_DOCUMENT_DATA_SET:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tdocumentDB: Object.fromEntries(Object.entries(state.documentDB).filter((arr) => arr[0] !== payload)),\n\t\t\t};\n\t\tdefault:\n\t\t\treturn state;\n\t}\n};\n\nexport default documentDB;\n","import { createSelector } from \"reselect\";\nimport { DocumentDBState } from \"./model\";\nimport { NAME } from \"./constants\";\n\nexport const getAll = (state: any) => state[NAME].present;\n\nexport const getDocumentDB = createSelector(getAll, (state: DocumentDBState) => state.documentDB);\n\nexport const getDocumentNames = createSelector(getDocumentDB, (db) => Object.keys(db));\n\nexport const getDocumentDataSets = createSelector(getDocumentDB, (db) => Object.values(db));\n","import * as actions from \"./actions\";\nimport * as actionTypes from \"./actionTypes\";\nimport * as constants from \"./constants\";\nimport reducer from \"./reducer\";\nimport * as selectors from \"./selectors\";\n\nexport default { actions, actionTypes, constants, reducer, selectors };\n","import * as t from \"./actionTypes\";\nimport { CardsState, FinalizedCardPayload, CardID } from \"./model/model\";\nimport { ArchiveCards } from \"../db/model\";\nimport db from \"../db\";\n\nconst intialState: CardsState = {\n\tcards: {\n\t\t\"0\": {\n\t\t\tcardID: \"0\",\n\t\t\ttype: \"Q-A\",\n\t\t\tcontent: { q: \"Was ist der Sinn des Lebens?\", a: \"42\" },\n\t\t},\n\t\t\"1\": {\n\t\t\tcardID: \"1\",\n\t\t\ttype: \"Q-A\",\n\t\t\tcontent: { q: \"Welches Layout macht mehr Sinn?\", a: \"??\" },\n\t\t},\n\t\t\"2\": { cardID: \"2\", type: \"Note\", content: \"Note here\" },\n\t},\n\tlastCardIDNumber: 2,\n\tgoalCard: null,\n};\n\nconst removeCard = (state: CardsState, cardID: CardID) => {\n\tconst cards = { ...state.cards };\n\n\t// we do not reset the ID counter\n\n\tdelete cards[cardID];\n\n\treturn { ...state, cards };\n};\n\nconst cards = (state = intialState, { type, payload }: { type: string; payload?: any }) => {\n\tlet cardID;\n\tlet cardObj;\n\tswitch (type) {\n\t\tcase t.CARD_PUSH:\n\t\t\tconst lastCardIDNumber = state.lastCardIDNumber + 1;\n\n\t\t\tcardObj = { ...state.cards };\n\t\t\tcardObj[(payload as FinalizedCardPayload).card.cardID] = (payload as FinalizedCardPayload).card;\n\n\t\t\treturn { ...state, cards: cardObj, lastCardIDNumber };\n\t\tcase t.CARD_UPDATE:\n\t\t\tcardID = (payload as FinalizedCardPayload).card.cardID as string;\n\t\t\tcardObj = { ...state.cards };\n\t\t\tcardObj[cardID] = (payload as FinalizedCardPayload).card;\n\n\t\t\treturn { ...state, cards: cardObj };\n\t\tcase t.CARD_REMOVE:\n\t\t\treturn removeCard(state, payload as string);\n\t\tcase t.CARD_GOAL:\n\t\t\treturn { ...state, goalCard: payload };\n\t\tcase db.actionTypes.DOCUMENT_CHANGE:\n\t\t\tif (payload) {\n\t\t\t\treturn {\n\t\t\t\t\t...intialState,\n\t\t\t\t\tcards: (payload as ArchiveCards).cards,\n\t\t\t\t\tlastCardIDNumber: (payload as ArchiveCards).lastCardIDNumber,\n\t\t\t\t};\n\t\t\t} else {\n\t\t\t\treturn intialState;\n\t\t\t}\n\t\tcase db.actionTypes.LOAD_DOCUMENT_DATA_SETS:\n\t\t\t// basically the same as DOCUMENT_CHANGE, just only triggered\n\t\t\t// when uploading data that corresponds to current document\n\t\t\t// and if not we dont reset\n\t\t\tif (payload.newActiveDataSet) {\n\t\t\t\treturn {\n\t\t\t\t\t...intialState,\n\t\t\t\t\tcards: (payload.newActiveDataSet as ArchiveCards).cards,\n\t\t\t\t\tlastCardIDNumber: (payload.newActiveDataSet as ArchiveCards).lastCardIDNumber,\n\t\t\t\t};\n\t\t\t} else {\n\t\t\t\treturn state;\n\t\t\t}\n\t\tdefault:\n\t\t\treturn state;\n\t}\n};\n\nexport default cards;\n","import * as services from \"./services\";\nimport * as constants from \"./constants\";\nimport * as actionTypes from \"./actionTypes\";\nimport * as actions from \"./actions\";\nimport * as selectors from \"./selectors\";\nimport * as components from \"./components\";\nimport reducer from \"./reducer\";\n\nexport default { services, constants, actionTypes, actions, reducer, selectors, components };\n","import { NAME } from \"./constants\";\nimport { createSelector } from \"reselect\";\nimport { SelectionData } from \"./model\";\n\nexport const getAll = (state: any): SelectionData => state[NAME].present;\n\nexport const getCurrentSelectionPosition = createSelector(getAll, (state: SelectionData) => state.selectionPosition);\n\nexport const getCurrentSelectedString = createSelector(getAll, (state: SelectionData) => state.manuallySelectedString);\n\nexport const getCurrentSelectedParent = createSelector(getAll, (state: SelectionData) => state.selectedParentSpan);\n\nexport const getSourceCard = createSelector(getAll, (state) => state.sourceCard);\n","import * as t from \"./actionTypes\";\nimport { CardType, CreationType } from \"../cards/model/model\";\nimport { CardOrigin, hasNonEmptyOrigin } from \"../cards/model/model-origin\";\nimport cards from \"../cards\";\nimport { getCurrentSelectedString, getSourceCard } from \"./selectors\";\nimport { Dispatch } from \"redux\";\nimport { CardField } from \"../cards/model/model-content\";\n\nexport const selectionToCardAppend = (\n\ttype: CardType,\n\tcreationType: CreationType,\n\torigin?: CardOrigin,\n\tcardID?: string\n) => {\n\treturn (dispatch: Function, getState: Function) => {\n\t\tconst state = getState();\n\n\t\tconst updateType = \"APPEND\";\n\t\tconst isUpdate = cardID !== undefined;\n\n\t\t// this should be from the document\n\t\tconst selectedString = getCurrentSelectedString(state);\n\n\t\tlet transformedOrigin;\n\t\tif (origin) {\n\t\t\t// we exploit that the input from the document is always just a SingleOrigin=NoteOrigin\n\t\t\t// need to transform it because we can create also QA-Cards from document\n\t\t\ttransformedOrigin = cards.services.transformInputOrigin(\n\t\t\t\torigin,\n\t\t\t\t\"note\",\n\t\t\t\tcreationType,\n\t\t\t\tisUpdate ? (cards.selectors.getCards(state)[cardID as string].origin as CardOrigin) : undefined\n\t\t\t);\n\t\t}\n\n\t\tif (isUpdate) {\n\t\t\tdispatch(\n\t\t\t\tcards.actions.updateCardContent(\n\t\t\t\t\tselectedString,\n\t\t\t\t\tcardID as string,\n\t\t\t\t\tcreationType,\n\t\t\t\t\tupdateType,\n\t\t\t\t\ttransformedOrigin as CardOrigin\n\t\t\t\t)\n\t\t\t);\n\t\t} else {\n\t\t\tdispatch(\n\t\t\t\tcards.actions.pushCardContent(selectedString, creationType, updateType, type, transformedOrigin as CardOrigin)\n\t\t\t);\n\t\t}\n\n\t\tdispatch(resetManuallySelectedString());\n\t};\n};\n\nexport const selectionToCard = (type: CardType, creationType: CreationType, origin?: CardOrigin, cardID?: string) => {\n\treturn (dispatch: Function, getState: Function) => {\n\t\tconst state = getState();\n\n\t\t//TODO-NICE: think of a way to make this intuitive\n\t\t//const updateType = type === \"Q-A\" ? \"REPLACE\" : \"APPEND\";\n\t\tconst updateType = \"REPLACE\";\n\t\tconst isUpdate = cardID !== undefined;\n\n\t\t// this should be from the document\n\t\tconst selectedString = getCurrentSelectedString(state);\n\n\t\tlet transformedOrigin;\n\t\tif (origin) {\n\t\t\t// we exploit that the input from the document is always just a SingleOrigin=NoteOrigin\n\t\t\t// need to transform it because we can create also QA-Cards from document\n\t\t\ttransformedOrigin = cards.services.transformInputOrigin(\n\t\t\t\torigin,\n\t\t\t\t\"note\",\n\t\t\t\tcreationType,\n\t\t\t\tisUpdate ? (cards.selectors.getCards(state)[cardID as string].origin as CardOrigin) : undefined\n\t\t\t);\n\t\t}\n\n\t\tif (isUpdate) {\n\t\t\tdispatch(\n\t\t\t\tcards.actions.updateCardContent(\n\t\t\t\t\tselectedString,\n\t\t\t\t\tcardID as string,\n\t\t\t\t\tcreationType,\n\t\t\t\t\tupdateType,\n\t\t\t\t\ttransformedOrigin as CardOrigin\n\t\t\t\t)\n\t\t\t);\n\t\t} else {\n\t\t\tdispatch(\n\t\t\t\tcards.actions.pushCardContent(selectedString, creationType, updateType, type, transformedOrigin as CardOrigin)\n\t\t\t);\n\t\t}\n\n\t\tdispatch(resetManuallySelectedString());\n\t};\n};\n\nexport const selectionToCardForSourceCard = (\n\ttype: CardType,\n\tcreationType: CreationType,\n\tsourceField: CreationType,\n\torigin?: CardOrigin,\n\tcardID?: string\n) => {\n\treturn (dispatch: Function, getState: Function) => {\n\t\tconst state = getState();\n\n\t\tconst updateType = \"REPLACE\";\n\t\tconst isUpdate = cardID !== undefined;\n\n\t\t//  this should be from the SourceCard in which the extract button has been clicked\n\t\t//\tthe SourceCard can or can not have an origin\n\t\tconst sourceHasNonEmptyOrigin = hasNonEmptyOrigin(origin);\n\t\tconst newOrigin = sourceHasNonEmptyOrigin\n\t\t\t? cards.services.transformInputOrigin(\n\t\t\t\t\torigin as CardOrigin,\n\t\t\t\t\tsourceField,\n\t\t\t\t\tcreationType,\n\t\t\t\t\tisUpdate ? (cards.selectors.getCards(state)[cardID as string].origin as CardOrigin) : undefined\n\t\t\t  )\n\t\t\t: undefined;\n\t\tconst selectedString = getCurrentSelectedString(state);\n\n\t\t//TODO-NICE: untangle the types so that the as CardOrigin is not necessary in the dispatch,\n\t\t//maybe merge content and origin to avoid two object hierarchies?\n\t\tif (isUpdate) {\n\t\t\tdispatch(\n\t\t\t\tcards.actions.updateCardContent(\n\t\t\t\t\tselectedString,\n\t\t\t\t\tcardID as string,\n\t\t\t\t\tcreationType,\n\t\t\t\t\tupdateType,\n\t\t\t\t\tnewOrigin as CardOrigin\n\t\t\t\t)\n\t\t\t);\n\t\t} else {\n\t\t\tdispatch(cards.actions.pushCardContent(selectedString, creationType, updateType, type, newOrigin as CardOrigin));\n\t\t}\n\n\t\tdispatch(resetManuallySelectedString());\n\t};\n};\n\nexport const updateManuallySelectedString = (str: string) => {\n\treturn { type: t.SELECTED_STRING, payload: str };\n};\n\nexport const resetManuallySelectedString = () => {\n\treturn updateManuallySelectedString(\"\");\n};\n\nexport const selectedParent = (span: null | HTMLSpanElement) => {\n\treturn { type: t.SELECTED_PARENT, payload: span };\n};\n\nexport const updateSelectionPosition = (x: number, y: number) => {\n\treturn { type: t.DOCUMENT_POSITION, payload: { x, y } };\n};\n\nexport const setSourceCard = (sourceField: CardField, origin?: CardOrigin) => {\n\treturn { type: t.SOURCE_CARD, payload: { origin, sourceField } };\n};\n\nexport const trySetSourceCard = (sourceField: CardField, origin?: CardOrigin) => {\n\treturn (dispatch: Dispatch, getState: Function) => {\n\t\tconst sourceCard = getSourceCard(getState());\n\t\tif (!sourceCard || sourceCard.sourceField !== sourceField || sourceCard.origin !== origin)\n\t\t\tdispatch(setSourceCard(sourceField, origin));\n\t};\n};\n\nexport const resetSourceCard = () => {\n\treturn { type: t.SOURCE_CARD, payload: null };\n};\n\nexport const tryResetSourceCard = () => {\n\treturn (dispatch: Dispatch, getState: Function) => {\n\t\tconst sourceCardExits = getSourceCard(getState()) !== null;\n\t\tif (sourceCardExits) dispatch(resetSourceCard());\n\t};\n};\n","import * as t from \"./actionTypes\";\nimport { SelectionData } from \"./model\";\n\nconst initialState: SelectionData = {\n\tmanuallySelectedString: \"\",\n\tselectedParentSpan: null,\n\tselectionPosition: { x: 0, y: 0 },\n\tsourceCard: null,\n};\n\nconst selectionData = (state = initialState, { type, payload }: { type: string; payload: any }): SelectionData => {\n\tswitch (type) {\n\t\tcase t.SELECTED_STRING:\n\t\t\treturn { ...state, manuallySelectedString: payload as string };\n\t\tcase t.SELECTED_PARENT:\n\t\t\t// we toggle between sourceCard and selectedParentSpan because they cant co-exist\n\n\t\t\treturn { ...state, sourceCard: null, selectedParentSpan: payload };\n\t\tcase t.DOCUMENT_POSITION:\n\t\t\treturn { ...state, selectionPosition: payload };\n\t\tcase t.SOURCE_CARD:\n\t\t\treturn { ...state, sourceCard: payload, selectedParentSpan: null };\n\t\tdefault:\n\t\t\treturn state;\n\t}\n};\n\nexport default selectionData;\n","import React, { useState, Fragment } from \"react\";\nimport { Snackbar, IconButton } from \"@material-ui/core\";\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { resetManuallySelectedString } from \"../actions\";\nimport { getCurrentSelectedString } from \"../selectors\";\n\nexport const SelectionSnackbar = () => {\n\tconst [open, setOpen] = useState(false);\n\tconst dispatch = useDispatch();\n\tconst selectedString = useSelector(getCurrentSelectedString);\n\n\tif (selectedString === \"\" && open) setOpen(false);\n\n\tif (selectedString !== \"\" && !open) setOpen(true);\n\n\tconst handleClose = (event: any, reason: string) => {\n\t\tif (reason === \"clickaway\") {\n\t\t\t// do not close on clickaway\n\t\t\tevent.preventDefault();\n\t\t} else {\n\t\t\tsetOpen(false);\n\t\t\tdispatch(resetManuallySelectedString());\n\t\t}\n\t};\n\n\tconst handleDismiss = () => {\n\t\tsetOpen(false);\n\t\tdispatch(resetManuallySelectedString());\n\t};\n\n\tconst message = (\n\t\t<Fragment>\n\t\t\t<div>{\"Current Selection: \"}</div>\n\t\t\t<div style={{ color: \"green\" }}> {selectedString}</div>\n\t\t</Fragment>\n\t);\n\n\treturn (\n\t\t<Snackbar\n\t\t\tanchorOrigin={{ vertical: \"top\", horizontal: \"center\" }}\n\t\t\topen={open}\n\t\t\tonClose={handleClose}\n\t\t\tmessage={message}\n\t\t\taction={\n\t\t\t\t<IconButton size=\"small\" aria-label=\"close\" color=\"inherit\" onClick={handleDismiss}>\n\t\t\t\t\t<CloseIcon fontSize=\"small\" />\n\t\t\t\t</IconButton>\n\t\t\t}\n\t\t/>\n\t);\n};\n","export function getSelection() {\n\tconst selection = window.getSelection();\n\n\tif (!selection) return null;\n\n\ttry {\n\t\tvar activeElement = document.activeElement;\n\t\tif (activeElement && (activeElement as HTMLInputElement).value) {\n\t\t\t// firefox bug https://bugzilla.mozilla.org/show_bug.cgi?id=85686\n\t\t\tconst str = (activeElement as HTMLInputElement).value.substring(\n\t\t\t\t(activeElement as HTMLInputElement).selectionStart as number,\n\t\t\t\t(activeElement as HTMLInputElement).selectionEnd as number\n\t\t\t);\n\n\t\t\tif (str === \"\") return null;\n\n\t\t\treturn { text: str, selection };\n\t\t} else {\n\t\t\treturn { text: selection.toString(), selection };\n\t\t}\n\t} catch (e) {\n\t\treturn null;\n\t}\n}\n","import * as actions from \"./actions\";\nimport * as constants from \"./constants\";\nimport * as actionTypes from \"./actionTypes\";\nimport reducer from \"./reducer\";\nimport * as selectors from \"./selectors\";\nimport * as components from \"./components\";\nimport * as services from \"./services\";\n\nexport default { actions, actionTypes, constants, components, reducer, selectors, services };\n","import { createSelector } from \"reselect\";\nimport { DisplayData, MaterialData, MaterialGroupData } from \"./model\";\nimport { NAME } from \"./constants\";\nimport selection from \"../selection\";\nimport { SingleOrigin } from \"../cards/model/model-origin\";\n\nexport const getAll = (state: any): DisplayData => state[NAME];\n\nexport const getPDF = createSelector(getAll, (state: DisplayData) => {\n\treturn { pdf: state.pdf ? state.pdf : null };\n});\n\nexport const getPDFName = createSelector(getAll, (state) => state.pdfName);\n\nexport const getRenderCritialData = createSelector(getAll, (state: DisplayData) => {\n\treturn {\n\t\tpdf: state.pdf,\n\t\tcurrentPage: state.currentPage,\n\t\tdocumentRef: state.documentRef,\n\t};\n});\n\nexport const getTotalPages = createSelector(getAll, (state: DisplayData) => state.totalPages);\n\nexport const getCurrentPage = createSelector(getAll, (state: DisplayData) => state.currentPage);\n\nexport const getPageControlData = createSelector(getTotalPages, getCurrentPage, (totalPages, currentPage) => {\n\treturn { currentPage, totalPages };\n});\n\nexport const getDocumentRef = createSelector(getAll, (state: DisplayData) => state.documentRef);\n\nexport const getMaterialData = createSelector(getAll, (state: DisplayData) => state.materialData);\n\nexport const getTimeStamp = createSelector(getMaterialData, (state: MaterialData) => state.materialDataTimeStamp);\n\nexport const getMaterialSpans = createSelector(\n\tgetMaterialData as (state: any) => MaterialGroupData,\n\t(state: MaterialGroupData) => state.materialSpans\n);\n\nexport const getSpanIndex = (state: any, span: HTMLSpanElement) => {\n\tconst spans = getMaterialSpans(state);\n\treturn spans.indexOf(span);\n};\n\nexport const getMaterialBoundingRects = createSelector(\n\tgetMaterialData as (state: any) => MaterialGroupData,\n\t(state: MaterialGroupData) => state.materialBoundingRects\n);\n\nexport const getDataExists = createSelector(getTimeStamp, (timestamp) => timestamp > 0);\n\nexport const getDisplayStatus = createSelector(getAll, (state: DisplayData) => state.displayStatus);\n\nexport const displayStatusIsShow = createSelector(getDisplayStatus, (status) => status === \"SHOW\");\n\nexport const getZoomQueue = createSelector(getAll, (state: DisplayData) => state.zoomQueue);\n\nexport const getMaterialHeight = createSelector(getAll, (state: DisplayData) => state.materialHeight);\n\nexport const getCurrentOrigin = createSelector(\n\t(state: any) => state,\n\tgetCurrentPage,\n\tselection.selectors.getCurrentSelectedParent,\n\t(state, currentPage, selectedParent): SingleOrigin => {\n\t\treturn {\n\t\t\tspanIndex: getSpanIndex(state, selectedParent as HTMLSpanElement),\n\t\t\tpage: currentPage,\n\t\t};\n\t}\n);\n","import { KeyboardEvent } from \"react\";\n\nexport const incrementer = () => {\n\tlet counter = 0;\n\treturn () => {\n\t\tconst curCounter = counter;\n\t\tcounter++;\n\t\treturn curCounter;\n\t};\n};\n\nexport type KeyActionMap = { [key: string]: any };\n\ntype KeyEventDispatcher = (event: KeyboardEvent<Element>, dispatch: any, state?: any) => void;\n\nexport const keyEventDispatcherCreator = (keyMap: KeyActionMap): KeyEventDispatcher => (\n\tevent: KeyboardEvent,\n\tdispatch: any\n) => {\n\tconst action = keyMap[event.key];\n\tif (action) {\n\t\tevent.preventDefault();\n\t\tdispatch(action);\n\t}\n};\n","export const splitExpandedSpans = (expandedSpans: ExpandedSpan[]) => {\n\tconst spans = [];\n\tconst boundingRects = [];\n\n\tfor (const exSpan of expandedSpans) {\n\t\tspans.push(exSpan.span);\n\t\tboundingRects.push(exSpan.rect);\n\t}\n\n\treturn { spans, boundingRects };\n};\n\nexport const sortExpandedSpansAccordingToX = (expandedSpans: ExpandedSpan[]) =>\n\texpandedSpans.sort((exSpan, exSpan2) => exSpan.rect.x - exSpan2.rect.x);\n\nexport const sortExpandedSpansAccordingToY = (expandedSpans: ExpandedSpan[]) =>\n\texpandedSpans.sort((exSpan, exSpan2) => exSpan.rect.y - exSpan2.rect.y);\n\ntype ExpandedSpan = { span: HTMLSpanElement; rect: DOMRect };\n\nexport const expandSpans = (spans: HTMLSpanElement[]) => spans.map(expandSpan);\n\nconst expandSpan = (span: HTMLSpanElement): ExpandedSpan => {\n\treturn { span, rect: span.getBoundingClientRect() };\n};\n","import { MaterialGroupData } from \"../model\";\nimport { expandSpans, sortExpandedSpansAccordingToY, splitExpandedSpans } from \"./span\";\n\nexport const materialData = (container: HTMLDivElement): MaterialGroupData | null => {\n\t// assumes all spans inside the document are relevant (potentially multiple pages)\n\tconst startingSpans = Array.from(container.querySelectorAll(\"span\"));\n\tif (startingSpans.length === 0) return null;\n\n\tconst { spans, boundingRects } = splitExpandedSpans(sortExpandedSpansAccordingToY(expandSpans(startingSpans)));\n\n\treturn {\n\t\tmaterialSpans: spans,\n\t\tmaterialBoundingRects: boundingRects,\n\t};\n};\n","import { ChangeEvent, RefObject } from \"react\";\nimport { Dispatch } from \"redux\";\nimport * as t from \"./actionTypes\";\nimport { PageMove, MaterialData } from \"./model\";\nimport {\n\tgetPageControlData,\n\tgetDisplayStatus,\n\tgetZoomQueue,\n\tgetTimeStamp,\n\tgetMaterialSpans,\n\tgetPDFName,\n} from \"./selectors\";\nimport { incrementer, keyEventDispatcherCreator, KeyActionMap } from \"../../shared/utils\";\nimport { materialData } from \"./services/materialData\";\nimport db from \"../db\";\nimport { ActionCreators } from \"redux-undo\";\n\nexport const pdfUpload = (pdf: File) => {\n\treturn { type: t.PDF_UPLOADED, payload: pdf };\n};\n\nexport const materialUploaded = (event: ChangeEvent<HTMLInputElement>) => {\n\treturn (dispatch: Dispatch) => {\n\t\tconst files = event.target.files;\n\t\tconst pdf = files ? files[0] : null;\n\t\tif (pdf) dispatch(pdfUpload(pdf));\n\t};\n};\n\nexport const materialLoaded = (totalPages: number) => {\n\treturn { type: t.MATERIAL_LOADED, payload: totalPages };\n};\n\nexport const tryInterval = (tries: number, ms: number, func: () => boolean) => {\n\tconst increment = incrementer();\n\tconst timeout = setInterval(() => {\n\t\tif (increment() > tries) {\n\t\t\tclearInterval(timeout);\n\t\t\treturn;\n\t\t}\n\n\t\tif (func()) clearInterval(timeout);\n\t}, ms);\n};\n\n// text-layer is not really guaranteed to be rendered on render \"success\",\n// so we use this ugly \"try ten times\" approach\nexport function captureMaterialData(documentRef: RefObject<any>) {\n\treturn (dispatch: any, getState: Function) => {\n\t\tconst state = getState();\n\t\tconst container = documentRef.current;\n\t\tif (container) {\n\t\t\t// TODO-NICE: still possibility of race-condition,\n\n\t\t\tconst startTime = Date.now();\n\n\t\t\t// try once before going into intervals (most times once should work)\n\t\t\tconst curMaterialGroupData = materialData(container as HTMLDivElement);\n\t\t\tif (curMaterialGroupData && getTimeStamp(state) < startTime) {\n\t\t\t\tconst payload: MaterialData = {\n\t\t\t\t\t...curMaterialGroupData,\n\t\t\t\t\tmaterialDataTimeStamp: startTime,\n\t\t\t\t};\n\t\t\t\tdispatch({ type: t.MATERIAL_DATA, payload });\n\t\t\t} else {\n\t\t\t\ttryInterval(10, 20, () => {\n\t\t\t\t\tconst curMaterialGroupData = materialData(container as HTMLDivElement);\n\t\t\t\t\tif (curMaterialGroupData && getTimeStamp(getState()) < startTime) {\n\t\t\t\t\t\tconst payload: MaterialData = {\n\t\t\t\t\t\t\t...curMaterialGroupData,\n\t\t\t\t\t\t\tmaterialDataTimeStamp: startTime,\n\t\t\t\t\t\t};\n\t\t\t\t\t\tdispatch({ type: t.MATERIAL_DATA, payload });\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t}\n\t\t\t\t\treturn false;\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t};\n}\n\n// assumes outside validation/correction\nexport const setPage = (page: number) => {\n\treturn { type: t.PAGE_UPDATE, payload: page };\n};\n\nconst pageCorrections = {\n\tADD: (newPage: number, totalPages: number) => (newPage === totalPages + 1 ? 1 : newPage),\n\tREMOVE: (newPage: number, totalPages: number) => (newPage === 0 ? totalPages : newPage),\n};\n\n//TODO-PERF: maybe hide all rendered pages but not shown instead of re-rendering for faster switching?\nexport const movePage = (type: PageMove) => {\n\treturn (dispatch: Dispatch, getState: Function) => {\n\t\tconst { currentPage, totalPages } = getPageControlData(getState());\n\t\tswitch (type) {\n\t\t\tcase \"NEXT\":\n\t\t\t\tdispatch({ type: t.PAGE_UPDATE, payload: pageCorrections[\"ADD\"](currentPage + 1, totalPages) });\n\t\t\t\tbreak;\n\t\t\tcase \"PREVIOUS\":\n\t\t\t\tdispatch({ type: t.PAGE_UPDATE, payload: pageCorrections[\"REMOVE\"](currentPage - 1, totalPages) });\n\t\t\t\tbreak;\n\t\t}\n\t};\n};\nexport const nextPage = () => movePage(\"NEXT\");\nexport const previousPage = () => movePage(\"PREVIOUS\");\n\nconst pageControlKeyMap: KeyActionMap = {\n\tArrowLeft: previousPage(),\n\tArrowRight: nextPage(),\n};\n\nexport const pageControlDispatcher = keyEventDispatcherCreator(pageControlKeyMap);\n\nexport const toggleDisplayState = () => {\n\treturn (dispatch: Dispatch, getState: Function) => {\n\t\tconst displayState = getDisplayStatus(getState()) === \"SHOW\" ? \"HIDE\" : \"SHOW\";\n\n\t\tdispatch({ type: t.DISPLAY_STATUS, payload: displayState });\n\t};\n};\n\nexport const setZoomQueue = (spanIndex: number | null) => {\n\treturn { type: t.ZOOM_QUEUE, payload: spanIndex };\n};\n\nexport const zoomToCardOrigin = (spanIndex: number, page: number) => {\n\treturn (dispatch: Dispatch) => {\n\t\tconsole.log(page, spanIndex);\n\t\tdispatch(setPage(page));\n\t\tdispatch(setZoomQueue(spanIndex));\n\t};\n};\n\nexport const emptyZoomQueue = () => {\n\treturn (dispatch: Dispatch, getState: Function) => {\n\t\tconst state = getState();\n\t\tconst spanIndex = getZoomQueue(state);\n\t\tif (!!spanIndex) {\n\t\t\tconst materialSpans = getMaterialSpans(state);\n\t\t\tif (materialSpans) {\n\t\t\t\t// this way when no pdf was present we prevent the race-condition of pdf being loaded later\n\t\t\t\tconst originSpan = materialSpans[spanIndex];\n\t\t\t\toriginSpan.scrollIntoView({ behavior: \"smooth\", block: \"center\", inline: \"center\" });\n\t\t\t}\n\t\t\tdispatch(setZoomQueue(null));\n\t\t}\n\t};\n};\n\nexport const setMaterialHeight = (height: number) => {\n\treturn { type: t.MATERIAL_HEIGHT, payload: height };\n};\n\nexport const deleteDocument = (document: string) => {\n\treturn (dispatch: Dispatch, getState: Function) => {\n\t\tconst state = getState();\n\t\tconst activeDocument = getPDFName(state);\n\t\tif (activeDocument && activeDocument === document) {\n\t\t\t// reset data\n\t\t\tdispatch({ type: db.actionTypes.DOCUMENT_CHANGE });\n\n\t\t\t// keeping the undo history leads to weird edge cases and makes no sense\n\t\t\tdispatch(ActionCreators.clearHistory());\n\t\t}\n\n\t\t// note: no undo of this\n\t\tdispatch(db.actions.deleteDocumentDataSet(document));\n\t};\n};\n","import React from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { IconButton, Card, Grid, Divider, Tooltip } from \"@material-ui/core\";\nimport ArrowForwardIosIcon from \"@material-ui/icons/ArrowForwardIos\";\nimport ArrowBackIosIcon from \"@material-ui/icons/ArrowBackIos\";\nimport { nextPage, previousPage } from \"../actions\";\nimport text from \"../../text\";\n\nexport const PreviousButton = () => {\n\tconst dispatch = useDispatch();\n\treturn (\n\t\t<Tooltip\n\t\t\ttitle={text.constants.previousPageTooltip}\n\t\t\tenterDelay={text.constants.defaultEnterDelay}\n\t\t\tenterNextDelay={text.constants.defaultEnterNextDelay}\n\t\t>\n\t\t\t<IconButton\n\t\t\t\ttype=\"button\"\n\t\t\t\tonClick={() => {\n\t\t\t\t\tdispatch(previousPage());\n\t\t\t\t}}\n\t\t\t>\n\t\t\t\t<ArrowBackIosIcon></ArrowBackIosIcon>\n\t\t\t</IconButton>\n\t\t</Tooltip>\n\t);\n};\n\nexport const NextButton = () => {\n\tconst dispatch = useDispatch();\n\treturn (\n\t\t<Tooltip\n\t\t\ttitle={text.constants.nextPageTooltip}\n\t\t\tenterDelay={text.constants.defaultEnterDelay}\n\t\t\tenterNextDelay={text.constants.defaultEnterNextDelay}\n\t\t>\n\t\t\t<IconButton\n\t\t\t\ttype=\"button\"\n\t\t\t\tonClick={() => {\n\t\t\t\t\tdispatch(nextPage());\n\t\t\t\t}}\n\t\t\t>\n\t\t\t\t<ArrowForwardIosIcon></ArrowForwardIosIcon>\n\t\t\t</IconButton>\n\t\t</Tooltip>\n\t);\n};\n\nexport const PageNavigation = () => {\n\treturn (\n\t\t<Card variant=\"outlined\">\n\t\t\t<Grid container direction=\"row\">\n\t\t\t\t<Grid item>\n\t\t\t\t\t<PreviousButton></PreviousButton>\n\t\t\t\t</Grid>\n\t\t\t\t<Grid item>\n\t\t\t\t\t<Divider orientation=\"vertical\"></Divider>\n\t\t\t\t</Grid>\n\t\t\t\t<Grid item>\n\t\t\t\t\t<NextButton></NextButton>\n\t\t\t\t</Grid>\n\t\t\t</Grid>\n\t\t</Card>\n\t);\n};\n","import React, { useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Typography, TextField, Card, Grid } from \"@material-ui/core\";\nimport { setPage } from \"../../actions\";\nimport { getPageControlData } from \"../../selectors\";\n\nconst nonDigitRegEx = /(\\D)/;\n\nexport const validatePageChoice = (possiblePage: string, totalPages: number) => {\n\tif (possiblePage === \"\" || possiblePage.trim().match(nonDigitRegEx) !== null) return false;\n\n\tconst asInt = parseInt(possiblePage);\n\tif (asInt < 1 || totalPages < asInt) return false;\n\n\treturn true;\n};\n\nexport const PageChooser = () => {\n\tconst dispatch = useDispatch();\n\tconst { currentPage, totalPages } = useSelector(getPageControlData);\n\n\tconst [state, setState] = useState({\n\t\terror: false,\n\t\tvalue: currentPage?.toString(),\n\t\tuserInput: currentPage?.toString(),\n\t});\n\n\t// with this we can trigger a re-render onChange,\n\t// while making sure that if a new currentPage arrives, we reset the component\n\tif (state.value !== currentPage.toString()) {\n\t\tsetState({ error: false, value: currentPage.toString(), userInput: currentPage.toString() });\n\t}\n\n\treturn (\n\t\t<Card variant=\"outlined\">\n\t\t\t<Grid item>\n\t\t\t\t<Grid container direction=\"row\" alignItems=\"center\" justify=\"space-between\">\n\t\t\t\t\t<Grid item style={{ width: \"37%\" }}>\n\t\t\t\t\t\t<TextField\n\t\t\t\t\t\t\tinputProps={{\n\t\t\t\t\t\t\t\tstyle: {\n\t\t\t\t\t\t\t\t\tpadding: \"0px\",\n\t\t\t\t\t\t\t\t\t//h6 Typography style\n\t\t\t\t\t\t\t\t\tfontSize: \"1.25rem\",\n\t\t\t\t\t\t\t\t\tfontFamily: '\"Roboto\", \"Helvetica\", \"Arial\", sansSerif',\n\t\t\t\t\t\t\t\t\tfontWeight: 500,\n\t\t\t\t\t\t\t\t\tlineHeight: 1.6,\n\t\t\t\t\t\t\t\t\tletterSpacing: \"0.0075em\",\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\tvariant=\"filled\"\n\t\t\t\t\t\t\tvalue={state.userInput}\n\t\t\t\t\t\t\tonKeyDown={(event) => {\n\t\t\t\t\t\t\t\tif (event.key === \"Enter\") {\n\t\t\t\t\t\t\t\t\tevent.preventDefault();\n\t\t\t\t\t\t\t\t\tconst submittedValue = (event.target as HTMLFormElement).value;\n\t\t\t\t\t\t\t\t\tif (!state.error) {\n\t\t\t\t\t\t\t\t\t\tdispatch(setPage(parseInt(submittedValue)));\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\tonChange={(event) => {\n\t\t\t\t\t\t\t\tconst submittedValue = (event.target as HTMLTextAreaElement).value;\n\t\t\t\t\t\t\t\tif (validatePageChoice(submittedValue, totalPages as number)) {\n\t\t\t\t\t\t\t\t\tsetState({ ...state, error: false, userInput: submittedValue });\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\tsetState({ ...state, error: true, userInput: submittedValue });\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\terror={state.error}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</Grid>\n\n\t\t\t\t\t<Grid item style={{ width: \"61%\" }}>\n\t\t\t\t\t\t<Typography variant=\"h6\">of {totalPages}</Typography>\n\t\t\t\t\t</Grid>\n\t\t\t\t</Grid>\n\t\t\t</Grid>\n\t\t</Card>\n\t);\n};\n","import { ReactNode, KeyboardEvent, useRef, MutableRefObject } from \"react\";\nimport { pageControlDispatcher } from \"../../actions\";\nimport React from \"react\";\nimport { useDispatch } from \"react-redux\";\n\n// note to self: prefer to expose components and not implementation details (actions etc.)\n\nexport const PageKeyboardControl = ({ children }: { children: ReactNode }) => {\n\tconst dispatch = useDispatch();\n\tconst ref: MutableRefObject<null | HTMLInputElement> = useRef(null);\n\n\treturn (\n\t\t<span\n\t\t\tref={ref}\n\t\t\tonKeyDown={(event: KeyboardEvent<HTMLSpanElement>) => {\n\t\t\t\tpageControlDispatcher(event, dispatch);\n\t\t\t}}\n\t\t\ttabIndex={0}\n\t\t>\n\t\t\t{children}\n\t\t</span>\n\t);\n};\n","import \"./PDFDocument.css\";\nimport \"./AnnotationLayer.css\";\nimport React, { RefObject, useEffect, useLayoutEffect } from \"react\";\nimport { pdfjs, Document, Page } from \"react-pdf\";\nimport { connect, useDispatch, useSelector } from \"react-redux\";\nimport { materialLoaded, setPage, captureMaterialData, setMaterialHeight, emptyZoomQueue } from \"../../actions\";\nimport { getRenderCritialData, getMaterialHeight, getZoomQueue } from \"../../selectors\";\nimport text from \"../../../text\";\nimport cards from \"../../../cards\";\nimport selection from \"../../../selection\";\nimport { PageKeyboardControl } from \"./PageKeyboardControl\";\npdfjs.GlobalWorkerOptions.workerSrc = `//cdnjs.cloudflare.com/ajax/libs/pdf.js/${pdfjs.version}/pdf.worker.js`;\n\n//TODO-NICE: implent more pdf-reader functionality, like zoom\n\nfunction removeTextLayerOffset() {\n\tconst textLayers = document.querySelectorAll(\".react-pdf__Page__textContent\");\n\ttextLayers.forEach((layer) => {\n\t\tconst { style }: any = layer;\n\t\tstyle.top = \"0\";\n\t\tstyle.left = \"0\";\n\t\tstyle.transform = \"\";\n\t});\n}\n\nconst options = {\n\tcMapUrl: \"cmaps/\",\n\tcMapPacked: true,\n};\n\nfunction PDFDocument({\n\tparentSize,\n\tpdf,\n\tcurrentPage,\n\tmaterialLoaded,\n\tcaptureMaterialData,\n\tdocumentRef,\n}: {\n\tparentSize: any;\n\tpdf: File | undefined;\n\tcurrentPage: number;\n\tmaterialLoaded: (numPages: number) => void;\n\tcaptureMaterialData: Function;\n\tdocumentRef: RefObject<any>;\n}) {\n\tconst dispatch = useDispatch();\n\n\tconst materialHeight = useSelector(getMaterialHeight);\n\n\tuseLayoutEffect(() => {\n\t\t// first setting\n\t\tif (!materialHeight) {\n\t\t\tdispatch(setMaterialHeight(parentSize.height));\n\t\t}\n\n\t\t// setting if changed\n\t\tif (materialHeight && materialHeight !== parentSize.height) {\n\t\t\tdispatch(setMaterialHeight(parentSize.height));\n\t\t}\n\t}, [dispatch, materialHeight, parentSize.height]);\n\n\t//TODO-NICE: this is not a queue...\n\tconst zoomQueue = useSelector(getZoomQueue);\n\n\tuseEffect(() => {\n\t\tif (!!zoomQueue && pdf) {\n\t\t\tdispatch(emptyZoomQueue());\n\t\t}\n\t}, [zoomQueue, pdf, dispatch]);\n\n\treturn (\n\t\t<span\n\t\t\tonMouseUp={() => {\n\t\t\t\tif (pdf) dispatch(mouseUpDocument());\n\t\t\t}}\n\t\t>\n\t\t\t<PageKeyboardControl>\n\t\t\t\t<Document\n\t\t\t\t\tfile={pdf}\n\t\t\t\t\toptions={options}\n\t\t\t\t\tonLoadSuccess={({ numPages }) => {\n\t\t\t\t\t\tmaterialLoaded(numPages);\n\t\t\t\t\t}}\n\t\t\t\t\tinputRef={documentRef}\n\t\t\t\t\tonItemClick={({ pageNumber }) => {\n\t\t\t\t\t\tdispatch(setPage(parseInt(pageNumber)));\n\t\t\t\t\t}}\n\t\t\t\t\tloading={text.constants.loadingMaterialText}\n\t\t\t\t\tnoData={text.constants.noMaterialText}\n\t\t\t\t\trenderMode=\"svg\"\n\t\t\t\t>\n\t\t\t\t\t{pdf && (\n\t\t\t\t\t\t<Page\n\t\t\t\t\t\t\twidth={parentSize.width}\n\t\t\t\t\t\t\tpageNumber={currentPage}\n\t\t\t\t\t\t\tonRenderSuccess={() => {\n\t\t\t\t\t\t\t\tremoveTextLayerOffset();\n\t\t\t\t\t\t\t\tcaptureMaterialData(documentRef);\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t/>\n\t\t\t\t\t)}\n\t\t\t\t</Document>\n\t\t\t</PageKeyboardControl>\n\t\t</span>\n\t);\n}\n\nexport const PDFDocumentContainer = connect(getRenderCritialData, {\n\tmaterialLoaded,\n\tcaptureMaterialData,\n})(PDFDocument);\n\nconst mouseUpDocument = () => {\n\treturn (dispatch: any, getState: Function) => {\n\t\tconst selectionData = selection.services.getSelection();\n\n\t\tif (selectionData) {\n\t\t\tconst selectedStr = selectionData.text;\n\t\t\tconst selectionObject = selectionData.selection;\n\n\t\t\tconst state = getState();\n\t\t\tconst goalCard = cards.selectors.getGoalCard(state);\n\n\t\t\tif (goalCard) {\n\t\t\t\t// this is the dispatch for the grab for field button\n\t\t\t\t//(which has been pressed before the mouse-up if goalCard is not null), here we actually update the goal card\n\n\t\t\t\t//TODO-NICE: allow grabbing from other cards\n\t\t\t\t// for now we dont allow grabbing from other cards to simplifiy the card->card workflow\n\n\t\t\t\tdispatch(\n\t\t\t\t\tcards.actions.updateCardContent(\n\t\t\t\t\t\tselectedStr,\n\t\t\t\t\t\tgoalCard.cardID,\n\t\t\t\t\t\tgoalCard.creationType,\n\t\t\t\t\t\t\"REPLACE\",\n\t\t\t\t\t\tgoalCard.origin\n\t\t\t\t\t)\n\t\t\t\t);\n\n\t\t\t\tdispatch(cards.actions.resetGoalCard());\n\t\t\t} else {\n\t\t\t\tdispatch(selection.actions.selectedParent(selectionObject.anchorNode?.parentNode as HTMLSpanElement));\n\t\t\t\tdispatch(selection.actions.updateManuallySelectedString(selectedStr));\n\t\t\t}\n\t\t}\n\t};\n};\n","import React, { useState } from \"react\";\nimport Grid from \"@material-ui/core/Grid\";\nimport { withSize } from \"react-sizeme\";\nimport Paper from \"@material-ui/core/Paper\";\nimport { PDFDocumentContainer } from \"./PDFDocument/PDFDocument\";\n\nfunction MaterialDisplayColumn({ size, hidden }: any) {\n\tconst [elevation, setElevation] = useState(3);\n\n\treturn (\n\t\t<Grid\n\t\t\titem\n\t\t\tstyle={{\n\t\t\t\twidth: \"60%\",\n\t\t\t}}\n\t\t\tonMouseEnter={() => {\n\t\t\t\tsetElevation(20);\n\t\t\t}}\n\t\t\tonMouseLeave={() => {\n\t\t\t\tsetElevation(3);\n\t\t\t}}\n\t\t\thidden={hidden}\n\t\t>\n\t\t\t<Paper elevation={elevation}>\n\t\t\t\t<PDFDocumentContainer parentSize={size}></PDFDocumentContainer>\n\t\t\t</Paper>\n\t\t</Grid>\n\t);\n}\n\nexport const MaterialDisplayColumnWithSize = withSize({ monitorHeight: true, noPlaceholder: true })(\n\tMaterialDisplayColumn\n);\n","import * as t from \"./actionTypes\";\nimport type { DisplayData, DisplayStatus, MaterialGroupData } from \"./model\";\nimport { createRef } from \"react\";\nimport db from \"../db\";\n\nconst initialState: DisplayData = {\n\tdisplayStatus: \"SHOW\",\n\ttotalPages: 1000,\n\tcurrentPage: 1,\n\tdocumentRef: createRef(),\n\tpageSpans: {},\n\tzoomQueue: null,\n\tmaterialData: { materialDataTimeStamp: -Infinity },\n};\n\nconst displayData = (state = initialState, { type, payload }: { type: string; payload: any }): DisplayData => {\n\tswitch (type) {\n\t\tcase t.PDF_UPLOADED:\n\t\t\treturn { ...state, pdf: payload as File, pdfName: (payload as File).name };\n\t\tcase db.actionTypes.DOCUMENT_CHANGE:\n\t\t\tif (payload) {\n\t\t\t\t// this means the pdf has been already uploaded (Load Document) and this was not triggered not via options\n\t\t\t\tif (payload.name === state.pdfName) {\n\t\t\t\t\treturn state;\n\t\t\t\t}\n\t\t\t\treturn {\n\t\t\t\t\t...initialState,\n\t\t\t\t\tpdf: undefined,\n\t\t\t\t\tpdfName: payload.name,\n\t\t\t\t\ttotalPages: payload.totalPages,\n\t\t\t\t\tcurrentPage: payload.currentPage,\n\t\t\t\t};\n\t\t\t} else {\n\t\t\t\t// dont need to reset here because when loading pdf we set automatically via other actions\n\t\t\t\treturn state;\n\t\t\t}\n\t\tcase t.MATERIAL_LOADED:\n\t\t\treturn { ...state, totalPages: payload as number };\n\t\tcase t.PAGE_UPDATE:\n\t\t\treturn { ...state, currentPage: payload as number };\n\t\tcase t.DISPLAY_STATUS:\n\t\t\treturn { ...state, displayStatus: payload as DisplayStatus };\n\t\tcase t.MATERIAL_DATA:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tmaterialData: payload,\n\t\t\t\tpageSpans: { ...state.pageSpans, [state.currentPage]: (payload as MaterialGroupData).materialSpans.length - 1 },\n\t\t\t};\n\t\tcase t.MATERIAL_HEIGHT:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tmaterialHeight: payload,\n\t\t\t};\n\t\tcase t.ZOOM_QUEUE:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tzoomQueue: payload,\n\t\t\t};\n\t\tdefault:\n\t\t\treturn state;\n\t}\n};\n\nexport default displayData;\n","import * as actions from \"./actions\";\nimport * as actionTypes from \"./actionTypes\";\nimport * as components from \"./components\";\nimport * as constants from \"./constants\";\nimport reducer from \"./reducer\";\nimport * as selectors from \"./selectors\";\n\nexport default { actions, actionTypes, components, constants, reducer, selectors };\n\n//TODO-RC: make scrollable...\n","export const NAME = \"cardRiverState\";\n","import { NAME } from \"./constants\";\nimport { createSelector } from \"reselect\";\nimport { CardRiverState } from \"./model\";\nimport cards from \"../cards\";\n\nexport const getAll = (state: any) => state[NAME].present;\n\nexport const getRiverMakeUps = createSelector(getAll, (state: CardRiverState) => state.riverMakeUps);\n\nexport const getActiveRiverMakeUpID = createSelector(getAll, (state: CardRiverState) => state.activeRiverMakeUpID);\n\nexport const getPushToRiver = createSelector(getAll, (state: CardRiverState) => state.pushToRiverID);\n\nexport const getPushToRiverMakeUp = createSelector(getRiverMakeUps, getPushToRiver, (makeUps, id) => makeUps[id]);\n\nexport const getActiveRiverMakeUp = createSelector(\n\tgetRiverMakeUps,\n\tgetActiveRiverMakeUpID,\n\t(makeUps, id) => makeUps[id]\n);\n\nexport const getPushToRiverCardIDs = createSelector(getPushToRiverMakeUp, (makeUp) => makeUp.cardIDs);\n\nexport const getPushToRiverCards = createSelector(\n\tgetPushToRiverCardIDs,\n\tcards.selectors.getCards,\n\t(makeUpCardIDs, cards) => makeUpCardIDs.map((id) => cards[id])\n);\n\n//TODO-NICE: rename active=page-wise or smth like that for clarity\nexport const getActiveRiverCardIDs = createSelector(getActiveRiverMakeUp, (makeUp) => makeUp.cardIDs);\n\nexport const getActiveRiverCards = createSelector(\n\tgetActiveRiverCardIDs,\n\tcards.selectors.getCards,\n\t(makeUpCardIDs, cards) => makeUpCardIDs.map((id) => cards[id])\n);\n\nexport const getRiverShowState = createSelector(getAll, (state: CardRiverState) => state.riverShowState);\n\nexport const riverShowStateIsShow = createSelector(getRiverShowState, (state) => state === \"SHOW\");\n\nexport const getHoveredCardData = createSelector(getAll, (state: CardRiverState) => {\n\treturn { id: state.highlightedCardID, field: state.highlightedCardField };\n});\n\nexport const getLastRiverIDNumber = createSelector(getAll, (state: CardRiverState) => state.lastRiverIDNumber);\n\nexport const getRiverContentState = createSelector(getAll, (state: CardRiverState) => state.riverContentState);\n\nexport const getRiverContentFilter = createSelector(getAll, (state: CardRiverState) => state.contentFilter);\n","import { NAME } from \"./constants\";\n\nexport const RIVER_SHOW_STATE = NAME + \"/RIVER_SHOW_STATE\";\nexport const RIVER_CONTENT_STATE = NAME + \"/RIVER_CONTENT_STATE\";\nexport const RIVER_PUSH_STATE = NAME + \"/RIVER_PUSH_STATE\";\nexport const RIVER_HOVERED_CARD = NAME + \"/RIVER_HOVERED_CARD\";\nexport const RIVER_CONTENT_FILTER = NAME + \"/RIVER_CONTENT_FILTER\";\n","import * as t from \"./actionTypes\";\nimport { riverShowStateIsShow, getPushToRiver, getHoveredCardData } from \"./selectors\";\nimport { Dispatch } from \"redux\";\nimport { CardID } from \"../cards/model/model\";\nimport { CardField } from \"../cards/model/model-content\";\nimport { RiverContentState, ContentFilter } from \"./model\";\n\nexport const toggleRiverShowState = () => (dispatch: Dispatch, getState: Function) => {\n\tdispatch({ type: t.RIVER_SHOW_STATE, payload: riverShowStateIsShow(getState()) ? \"HIDE\" : \"SHOW\" });\n};\n\nexport const setRiverContentState = (state: RiverContentState) => {\n\treturn { type: t.RIVER_CONTENT_STATE, payload: state };\n};\n\nexport const setPushToRiver = (id: string) => {\n\treturn { type: t.RIVER_PUSH_STATE, payload: id };\n};\n\nexport const trySetPushToRiver = (id: string) => {\n\treturn (dispatch: Dispatch, getState: Function) => {\n\t\tif (getPushToRiver(getState()) !== id) dispatch(setPushToRiver(id));\n\t};\n};\n\nexport const setHoveredCard = (cardID: CardID, field: CardField) => {\n\treturn { payload: { id: cardID, field }, type: t.RIVER_HOVERED_CARD };\n};\n\nexport const trySetHoveredCard = (cardID: CardID, field: CardField) => {\n\treturn (dispatch: Dispatch, getState: Function) => {\n\t\tconst state = getState();\n\t\tconst highlightedCardIDData = getHoveredCardData(state);\n\t\tif (highlightedCardIDData.id !== cardID || highlightedCardIDData.field !== field)\n\t\t\tdispatch(setHoveredCard(cardID, field));\n\t};\n};\n\nexport const resetHoveredCard = () => {\n\treturn { payload: { id: null, field: null }, type: t.RIVER_HOVERED_CARD };\n};\n\nexport const setContentFilter = (filter: ContentFilter) => {\n\treturn { type: t.RIVER_CONTENT_FILTER, payload: filter };\n};\n","import { withStyles, CheckboxProps, Checkbox } from \"@material-ui/core\";\nimport React from \"react\";\nimport { green } from \"@material-ui/core/colors\";\nexport const GreenCheckbox = withStyles({\n\troot: {\n\t\tcolor: green[400],\n\t\t\"&$checked\": {\n\t\t\tcolor: green[600],\n\t\t},\n\t},\n\tchecked: {},\n})((props: CheckboxProps) => <Checkbox color=\"default\" {...props} />);\n","import { FormGroup, FormControlLabel } from \"@material-ui/core\";\nimport React from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { getRiverContentState } from \"../selectors\";\nimport { RiverContentState } from \"../model\";\nimport { setRiverContentState } from \"../actions\";\nimport { GreenCheckbox } from \"../../../shared/GreenCheckbox\";\n\nexport const RiverContentFormGroup = () => {\n\tconst riverContentState = useSelector(getRiverContentState);\n\tconst dispatch = useDispatch();\n\n\tconst showQAs = riverContentState === \"ALL\" || riverContentState === \"QAS\";\n\tconst showNotes = riverContentState === \"ALL\" || riverContentState === \"NOTES\";\n\n\tconst changeContentState = (clickedState: RiverContentState) => {\n\t\tif (!showQAs && clickedState === \"QAS\") {\n\t\t\tif (showNotes) {\n\t\t\t\tdispatch(setRiverContentState(\"ALL\"));\n\t\t\t} else {\n\t\t\t\tdispatch(setRiverContentState(\"QAS\"));\n\t\t\t}\n\t\t\treturn;\n\t\t}\n\n\t\tif (!showNotes && clickedState === \"NOTES\") {\n\t\t\tif (showQAs) {\n\t\t\t\tdispatch(setRiverContentState(\"ALL\"));\n\t\t\t} else {\n\t\t\t\tdispatch(setRiverContentState(\"NOTES\"));\n\t\t\t}\n\t\t\treturn;\n\t\t}\n\n\t\tif (showQAs && clickedState === \"QAS\") {\n\t\t\tif (!showNotes) {\n\t\t\t\tdispatch(setRiverContentState(\"NONE\"));\n\t\t\t} else {\n\t\t\t\tdispatch(setRiverContentState(\"NOTES\"));\n\t\t\t}\n\t\t\treturn;\n\t\t}\n\n\t\tif (showNotes && clickedState === \"NOTES\") {\n\t\t\tif (!showQAs) {\n\t\t\t\tdispatch(setRiverContentState(\"NONE\"));\n\t\t\t} else {\n\t\t\t\tdispatch(setRiverContentState(\"QAS\"));\n\t\t\t}\n\t\t\treturn;\n\t\t}\n\t};\n\n\treturn (\n\t\t<FormGroup>\n\t\t\t<FormControlLabel\n\t\t\t\tcontrol={\n\t\t\t\t\t<GreenCheckbox\n\t\t\t\t\t\tchecked={showQAs}\n\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\tchangeContentState(\"QAS\");\n\t\t\t\t\t\t}}\n\t\t\t\t\t/>\n\t\t\t\t}\n\t\t\t\tlabel=\"QAs\"\n\t\t\t/>\n\t\t\t<FormControlLabel\n\t\t\t\tcontrol={\n\t\t\t\t\t<GreenCheckbox\n\t\t\t\t\t\tchecked={showNotes}\n\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\tchangeContentState(\"NOTES\");\n\t\t\t\t\t\t}}\n\t\t\t\t\t/>\n\t\t\t\t}\n\t\t\t\tlabel=\"Notes\"\n\t\t\t/>\n\t\t</FormGroup>\n\t);\n};\n","export const NAME = \"appFocus\";\n","import { NAME } from \"./constants\";\n\nexport const DISPLAY_FOCUS_UPDATE = NAME + \"/DISPLAY_FOCUS_UPDATE\";\n","import * as t from \"./actionTypes\";\nimport { DisplayFocus } from \"./model\";\n\nexport const updateDisplayFocus = (focus: DisplayFocus) => {\n\treturn { type: t.DISPLAY_FOCUS_UPDATE, payload: focus };\n};\n","import { FocusState, DisplayFocus } from \"./model\";\nimport * as t from \"./actionTypes\";\n\nconst initialState: FocusState = { displayFocus: \"ACTIVE_RIVER\" };\n\nconst focus = (state = initialState, { type, payload }: { type: string; payload: any }): FocusState => {\n\tswitch (type) {\n\t\tcase t.DISPLAY_FOCUS_UPDATE:\n\t\t\treturn { ...state, displayFocus: payload as DisplayFocus };\n\t\tdefault:\n\t\t\treturn state;\n\t}\n};\n\nexport default focus;\n","import { createSelector } from \"reselect\";\nimport { NAME } from \"./constants\";\nimport { FocusState } from \"./model\";\n\nexport const getAll = (state: any) => state[NAME];\n\nexport const getDisplayFocus = createSelector(getAll, (state: FocusState) => state.displayFocus);\n","import * as actions from \"./actions\";\nimport * as constants from \"./constants\";\nimport reducer from \"./reducer\";\nimport * as selectors from \"./selectors\";\nimport * as actionTypes from \"./actionTypes\";\n\nexport default { actions, constants, reducer, selectors, actionTypes };\n","import React, { useState } from \"react\";\nimport { TextField, TextFieldProps } from \"@material-ui/core\";\nimport selection from \"../../../selection\";\nimport { useDispatch } from \"react-redux\";\nimport { Dispatch } from \"redux\";\n\nexport const HybridCardField = ({\n\tstoreValue = \"\",\n\tsaveChanges,\n\tsetSourceCard,\n\tstyle,\n\t...rest\n}: {\n\tstoreValue?: string;\n\tsetSourceCard: () => void;\n\tsaveChanges: (value: string) => void;\n\tstyle: any;\n} & TextFieldProps) => {\n\tconst [state, setState] = useState({ storeValue, mutableValue: storeValue });\n\tconst dispatch = useDispatch();\n\n\t// reset if new storeValue, otherwise keep user-mutated value\n\tif (state.storeValue !== storeValue) {\n\t\tsetState({ storeValue, mutableValue: storeValue });\n\t}\n\n\t// need the onChange-pattern, because we want to be able to pre-fill the field from the store\n\treturn (\n\t\t<TextField\n\t\t\tInputProps={{ disableUnderline: true, style: { minWidth: \"400px\" } }}\n\t\t\tmultiline\n\t\t\tvariant=\"filled\"\n\t\t\tvalue={state.mutableValue}\n\t\t\tonChange={(event) => {\n\t\t\t\tconst submittedValue = (event.target as HTMLTextAreaElement).value;\n\t\t\t\tsetState({ ...state, mutableValue: submittedValue });\n\t\t\t}}\n\t\t\tonBlur={(event: any) => {\n\t\t\t\tsaveChanges(event.target.value);\n\t\t\t}}\n\t\t\tonMouseUp={() => {\n\t\t\t\tmouseUpCardField(dispatch, setSourceCard);\n\t\t\t}}\n\t\t\tstyle={style}\n\t\t\t{...rest}\n\t\t></TextField>\n\t);\n};\n\nconst mouseUpCardField = (dispatch: Dispatch, setSourceCard: () => void) => {\n\t//TODO-NICE: allow grabbing from other cards\n\tconst selectionData = selection.services.getSelection();\n\tif (selectionData) {\n\t\tconst selectedStr = selectionData.text;\n\n\t\tsetSourceCard();\n\t\tdispatch(selection.actions.updateManuallySelectedString(selectedStr));\n\t}\n};\n","import FindInPageIcon from \"@material-ui/icons/FindInPage\";\nimport React from \"react\";\nimport { IconButton, Tooltip } from \"@material-ui/core\";\nimport { useDispatch } from \"react-redux\";\nimport display from \"../../../../display\";\nimport { SingleOrigin } from \"../../../../cards/model/model-origin\";\nimport focus from \"../../../../focus\";\nimport text from \"../../../../text\";\n\n//TODO-NICE: replace/simplify focus system with element specific mouse-listeners\nexport const JumpToOriginButton = ({ cardOrigin }: { cardOrigin: SingleOrigin }) => {\n\tconst dispatch = useDispatch();\n\treturn (\n\t\t<Tooltip\n\t\t\ttitle={text.constants.jumpToOriginTooltip}\n\t\t\tenterDelay={text.constants.defaultEnterDelay}\n\t\t\tenterNextDelay={text.constants.defaultEnterNextDelay}\n\t\t>\n\t\t\t<IconButton\n\t\t\t\ttype=\"button\"\n\t\t\t\tonClick={() => {\n\t\t\t\t\tdispatch(focus.actions.updateDisplayFocus(\"ACTIVE_RIVER\"));\n\t\t\t\t\tdispatch(display.actions.zoomToCardOrigin(cardOrigin.spanIndex, cardOrigin.page));\n\t\t\t\t}}\n\t\t\t>\n\t\t\t\t<FindInPageIcon fontSize=\"small\"></FindInPageIcon>\n\t\t\t</IconButton>\n\t\t</Tooltip>\n\t);\n};\n","import PanToolIcon from \"@material-ui/icons/PanTool\";\nimport PanToolOutlinedIcon from \"@material-ui/icons/PanToolOutlined\";\nimport React, { useState } from \"react\";\nimport { IconButton, Tooltip } from \"@material-ui/core\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { CardConfig, CreationType, GoalCard } from \"../../../../cards/model/model\";\nimport cards from \"../../../../cards\";\nimport text from \"../../../../text\";\n\nconst isGoalCard = (cardConfig: CardConfig, creationType: CreationType, goalCard: GoalCard) =>\n\tcardConfig.cardID === goalCard.cardID && creationType === goalCard.creationType;\n\nexport const GrabForFieldButton = ({\n\tcardConfig,\n\tcreationType,\n}: {\n\tcardConfig: CardConfig;\n\tcreationType: CreationType;\n}) => {\n\tconst dispatch = useDispatch();\n\tconst goalCard = useSelector(cards.selectors.getGoalCard);\n\tconst [outlined, setOutlined] = useState(true);\n\n\tif (goalCard) {\n\t\tconst isGoal = isGoalCard(cardConfig, creationType, goalCard);\n\t\tif (isGoal) {\n\t\t\tif (outlined) setOutlined(false);\n\t\t} else {\n\t\t\tif (!outlined) setOutlined(true);\n\t\t}\n\t} else {\n\t\tif (!outlined) setOutlined(true);\n\t}\n\n\treturn (\n\t\t<Tooltip\n\t\t\ttitle={text.constants.grabForCardTooltip}\n\t\t\tenterDelay={text.constants.defaultEnterDelay}\n\t\t\tenterNextDelay={text.constants.defaultEnterNextDelay}\n\t\t>\n\t\t\t<IconButton\n\t\t\t\ttype=\"button\"\n\t\t\t\tonClick={() => {\n\t\t\t\t\tif (outlined) {\n\t\t\t\t\t\tdispatch(cards.actions.setGoalCard(cardConfig, creationType));\n\t\t\t\t\t} else {\n\t\t\t\t\t\tdispatch(cards.actions.resetGoalCard());\n\t\t\t\t\t}\n\t\t\t\t}}\n\t\t\t>\n\t\t\t\t{outlined ? (\n\t\t\t\t\t<PanToolOutlinedIcon fontSize=\"small\"></PanToolOutlinedIcon>\n\t\t\t\t) : (\n\t\t\t\t\t<PanToolIcon fontSize=\"small\"></PanToolIcon>\n\t\t\t\t)}\n\t\t\t</IconButton>\n\t\t</Tooltip>\n\t);\n};\n","import AddCircleOutlineIcon from \"@material-ui/icons/AddCircleOutline\";\nimport React from \"react\";\nimport { IconButton } from \"@material-ui/core\";\nimport { useDispatch, useSelector, useStore } from \"react-redux\";\nimport text from \"../../../../text\";\nimport selection from \"../../../../selection\";\nimport { CardType, CreationType } from \"../../../../cards/model/model\";\nimport display from \"../../../../display\";\nimport { CardOrigin } from \"../../../../cards/model/model-origin\";\n\nexport const AppendButton = ({\n\ttype,\n\tcreationType,\n\tcardID,\n}: {\n\ttype: CardType;\n\tcreationType: CreationType;\n\tcardID?: string;\n}) => {\n\tconst dispatch = useDispatch();\n\tconst selectionParent = useSelector(selection.selectors.getCurrentSelectedParent);\n\tconst store = useStore();\n\n\treturn (\n\t\t<text.components.AppendButtonTooltip>\n\t\t\t<IconButton\n\t\t\t\ttype=\"button\"\n\t\t\t\tonClick={() => {\n\t\t\t\t\t//TODO-NICE: allow append from other cards (origin-copying is the work here)\n\t\t\t\t\tif (selectionParent) {\n\t\t\t\t\t\tconst origin: CardOrigin | undefined = display.selectors.getCurrentOrigin(store.getState());\n\n\t\t\t\t\t\tdispatch(selection.actions.selectionToCardAppend(type, creationType, origin, cardID));\n\t\t\t\t\t}\n\t\t\t\t}}\n\t\t\t>\n\t\t\t\t<AddCircleOutlineIcon fontSize=\"small\"></AddCircleOutlineIcon>\n\t\t\t</IconButton>\n\t\t</text.components.AppendButtonTooltip>\n\t);\n};\n","import Grid from \"@material-ui/core/Grid\";\nimport React, { useRef, useEffect, MutableRefObject } from \"react\";\nimport { HybridCardField } from \"../HybridCardField\";\nimport { QACardContent } from \"../../../../cards/model/model-content\";\nimport { SingleOrigin, QAOrigin, QOnlyQAOrigin, AOnlyQAOrigin } from \"../../../../cards/model/model-origin\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport cards from \"../../../../cards\";\nimport { JumpToOriginButton } from \"../Buttons/JumpToOriginButton\";\nimport { GrabForFieldButton } from \"../Buttons/GrabForFieldButton\";\nimport { isNullOrUndefined } from \"util\";\nimport { getHoveredCardData } from \"../../../selectors\";\nimport focus from \"../../../../focus\";\nimport { Card, Paper } from \"@material-ui/core\";\nimport { CardProps, borderStyle } from \"./ClayCard\";\nimport text from \"../../../../text\";\nimport { AppendButton } from \"../Buttons/AppendButton\";\nimport selection from \"../../../../selection\";\n\n//TODO-NICE:\n// make dropdown / menu for selection to create card from selection snackbar?\n// show if selection has origin / button jump to origin at snackbar?\n// make REPLACE-button for River\n// replace Context-Menu with APPEND/REPLACE button flow? / allow both?\n\n//TODO-NICE: think of way to not have menu over the cards, because you cant read them this way? end of card?\n//TODO-NICE: use dark color pallet (theme?)\n\nexport const QACard = ({ config }: CardProps) => {\n\tconst dispatch = useDispatch();\n\tconst { id, field } = useSelector(getHoveredCardData);\n\tconst isHoveredCard = config.cardID === id;\n\n\t// we only offer one way to use card-content in other cards: extract\n\t// we do not allow grabbing from other cards, just from the document, so we only need the grab button in the ActiveRiver\n\tconst isActiveRiver = useSelector(focus.selectors.getDisplayFocus) === \"ACTIVE_RIVER\";\n\n\tconst ref: MutableRefObject<undefined | HTMLDivElement> = useRef();\n\tuseEffect(() => {\n\t\tif (ref.current && isHoveredCard) {\n\t\t\t(ref.current as HTMLDivElement).scrollIntoView({ behavior: \"smooth\", block: \"center\", inline: \"center\" });\n\t\t}\n\t});\n\n\treturn (\n\t\t<Card variant=\"elevation\" elevation={5} ref={ref} style={{ padding: \"3px\" }}>\n\t\t\t<Grid container direction=\"row\" justify=\"space-between\">\n\t\t\t\t<Grid item>\n\t\t\t\t\t<Grid container direction=\"column\" spacing={1}>\n\t\t\t\t\t\t<Grid item>\n\t\t\t\t\t\t\t<Grid container direction=\"row\" spacing={1}>\n\t\t\t\t\t\t\t\t<Grid item>\n\t\t\t\t\t\t\t\t\t<div style={isHoveredCard && field === \"q\" ? borderStyle : undefined}>\n\t\t\t\t\t\t\t\t\t\t<HybridCardField\n\t\t\t\t\t\t\t\t\t\t\tsaveChanges={(value) => {\n\t\t\t\t\t\t\t\t\t\t\t\tdispatch(cards.actions.updateCardContent(value, config.cardID, \"q\", \"REPLACE\", config.origin));\n\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t\tstoreValue={(config.content as QACardContent).q}\n\t\t\t\t\t\t\t\t\t\t\tlabel={text.constants.questionText}\n\t\t\t\t\t\t\t\t\t\t\tvariant=\"filled\"\n\t\t\t\t\t\t\t\t\t\t\tstyle={{ backgroundColor: \"#FFBF69\" }}\n\t\t\t\t\t\t\t\t\t\t\tInputLabelProps={{ style: { color: \"#000000\" } }}\n\t\t\t\t\t\t\t\t\t\t\tsetSourceCard={() => {\n\t\t\t\t\t\t\t\t\t\t\t\tdispatch(selection.actions.setSourceCard(\"q\", config.origin));\n\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t></HybridCardField>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t</Grid>\n\n\t\t\t\t\t\t\t\t<Grid item>\n\t\t\t\t\t\t\t\t\t<Paper variant=\"outlined\">\n\t\t\t\t\t\t\t\t\t\t<Grid container direction=\"row\">\n\t\t\t\t\t\t\t\t\t\t\t{isActiveRiver && (\n\t\t\t\t\t\t\t\t\t\t\t\t<AppendButton type={config.type} creationType=\"q\" cardID={config.cardID}></AppendButton>\n\t\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t\t\t{isActiveRiver && <GrabForFieldButton cardConfig={config} creationType=\"q\"></GrabForFieldButton>}\n\t\t\t\t\t\t\t\t\t\t\t{config.origin && !isNullOrUndefined((config.origin as QOnlyQAOrigin).q?.spanIndex) && (\n\t\t\t\t\t\t\t\t\t\t\t\t<JumpToOriginButton\n\t\t\t\t\t\t\t\t\t\t\t\t\tcardOrigin={(config.origin as QAOrigin).q as SingleOrigin}\n\t\t\t\t\t\t\t\t\t\t\t\t></JumpToOriginButton>\n\t\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t\t\t</Paper>\n\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t<Grid item>\n\t\t\t\t\t\t\t<Grid container direction=\"row\" spacing={1}>\n\t\t\t\t\t\t\t\t<Grid item>\n\t\t\t\t\t\t\t\t\t<div style={isHoveredCard && field === \"a\" ? borderStyle : undefined}>\n\t\t\t\t\t\t\t\t\t\t<HybridCardField\n\t\t\t\t\t\t\t\t\t\t\tsaveChanges={(value) => {\n\t\t\t\t\t\t\t\t\t\t\t\tdispatch(cards.actions.updateCardContent(value, config.cardID, \"a\", \"REPLACE\", config.origin));\n\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t\tstoreValue={(config.content as QACardContent).a}\n\t\t\t\t\t\t\t\t\t\t\tlabel={text.constants.answerText}\n\t\t\t\t\t\t\t\t\t\t\tstyle={{ backgroundColor: \"#2EC4B6\" }}\n\t\t\t\t\t\t\t\t\t\t\tInputLabelProps={{ style: { color: \"#000000\" } }}\n\t\t\t\t\t\t\t\t\t\t\tsetSourceCard={() => {\n\t\t\t\t\t\t\t\t\t\t\t\tdispatch(selection.actions.setSourceCard(\"a\", config.origin));\n\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t></HybridCardField>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t\t<Grid item>\n\t\t\t\t\t\t\t\t\t<Paper variant=\"outlined\">\n\t\t\t\t\t\t\t\t\t\t<Grid container direction=\"row\">\n\t\t\t\t\t\t\t\t\t\t\t{isActiveRiver && (\n\t\t\t\t\t\t\t\t\t\t\t\t<AppendButton type={config.type} creationType=\"a\" cardID={config.cardID}></AppendButton>\n\t\t\t\t\t\t\t\t\t\t\t)}\n\n\t\t\t\t\t\t\t\t\t\t\t{isActiveRiver && <GrabForFieldButton cardConfig={config} creationType=\"a\"></GrabForFieldButton>}\n\t\t\t\t\t\t\t\t\t\t\t{config.origin && !isNullOrUndefined((config.origin as AOnlyQAOrigin).a?.spanIndex) && (\n\t\t\t\t\t\t\t\t\t\t\t\t<JumpToOriginButton\n\t\t\t\t\t\t\t\t\t\t\t\t\tcardOrigin={(config.origin as QAOrigin).a as SingleOrigin}\n\t\t\t\t\t\t\t\t\t\t\t\t></JumpToOriginButton>\n\t\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t\t\t</Paper>\n\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t</Grid>\n\t\t\t\t\t</Grid>\n\t\t\t\t</Grid>\n\n\t\t\t\t<Grid item>\n\t\t\t\t\t<cards.components.DeleteCardButton cardID={config.cardID}></cards.components.DeleteCardButton>\n\t\t\t\t</Grid>\n\t\t\t</Grid>\n\t\t</Card>\n\t);\n};\n","import React, { useRef, useEffect, MutableRefObject } from \"react\";\nimport { HybridCardField } from \"../HybridCardField\";\nimport { NoteOrigin } from \"../../../../cards/model/model-origin\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport cards from \"../../../../cards\";\nimport { JumpToOriginButton } from \"../Buttons/JumpToOriginButton\";\nimport { GrabForFieldButton } from \"../Buttons/GrabForFieldButton\";\nimport { getHoveredCardData } from \"../../../selectors\";\nimport focus from \"../../../../focus\";\nimport { Card, Paper, Grid } from \"@material-ui/core\";\nimport { CardProps, borderStyle } from \"./ClayCard\";\nimport text from \"../../../../text\";\nimport { AppendButton } from \"../Buttons/AppendButton\";\nimport selection from \"../../../../selection\";\n\n//TODO-PERF: investigate if this hover-store approach is too slow, useRef instead?\nexport const NoteCard = ({ config }: CardProps) => {\n\tconst dispatch = useDispatch();\n\tconst { id } = useSelector(getHoveredCardData);\n\tconst isHoveredCard = config.cardID === id;\n\n\t// we only offer one way to use card-content in other cards: extract\n\t// we do not allow grabbing from other cards, just from the document, so we only need the grab button in the ActiveRiver\n\t//TODO-NICE: allow grabbing from other cards\n\tconst isActiveRiver = useSelector(focus.selectors.getDisplayFocus) === \"ACTIVE_RIVER\";\n\n\tconst ref: MutableRefObject<undefined | HTMLDivElement> = useRef();\n\tuseEffect(() => {\n\t\tif (ref.current && isHoveredCard) {\n\t\t\t(ref.current as HTMLDivElement).scrollIntoView({ behavior: \"smooth\", block: \"center\", inline: \"center\" });\n\t\t}\n\t});\n\n\treturn (\n\t\t<Card\n\t\t\tvariant=\"elevation\"\n\t\t\televation={5}\n\t\t\tstyle={isHoveredCard ? { ...borderStyle, padding: \"3px\" } : { padding: \"3px\" }}\n\t\t\tref={ref}\n\t\t>\n\t\t\t<Grid container direction=\"row\" justify=\"space-between\">\n\t\t\t\t<Grid item>\n\t\t\t\t\t<Grid container direction=\"row\" spacing={1}>\n\t\t\t\t\t\t<Grid item>\n\t\t\t\t\t\t\t<HybridCardField\n\t\t\t\t\t\t\t\tsaveChanges={(value) => {\n\t\t\t\t\t\t\t\t\tdispatch(cards.actions.updateCardContent(value, config.cardID, \"note\", \"REPLACE\", config.origin));\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\tstoreValue={config.content as string}\n\t\t\t\t\t\t\t\tlabel={text.constants.noteText}\n\t\t\t\t\t\t\t\tvariant=\"filled\"\n\t\t\t\t\t\t\t\tstyle={{ backgroundColor: \"#CBF3F0\" }}\n\t\t\t\t\t\t\t\tInputLabelProps={{ style: { color: \"#000000\" } }}\n\t\t\t\t\t\t\t\tsetSourceCard={() => {\n\t\t\t\t\t\t\t\t\tdispatch(selection.actions.setSourceCard(\"note\", config.origin));\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t></HybridCardField>\n\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t<Grid item>\n\t\t\t\t\t\t\t<Paper variant=\"outlined\">\n\t\t\t\t\t\t\t\t<Grid container direction=\"row\">\n\t\t\t\t\t\t\t\t\t<Grid item>\n\t\t\t\t\t\t\t\t\t\t{isActiveRiver && (\n\t\t\t\t\t\t\t\t\t\t\t<AppendButton type={config.type} creationType=\"note\" cardID={config.cardID}></AppendButton>\n\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t</Grid>\n\n\t\t\t\t\t\t\t\t\t<Grid item>\n\t\t\t\t\t\t\t\t\t\t{isActiveRiver && <GrabForFieldButton cardConfig={config} creationType=\"note\"></GrabForFieldButton>}\n\t\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t\t\t<Grid item>\n\t\t\t\t\t\t\t\t\t\t{config.origin && (\n\t\t\t\t\t\t\t\t\t\t\t<JumpToOriginButton cardOrigin={config.origin as NoteOrigin}></JumpToOriginButton>\n\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t</Paper>\n\t\t\t\t\t\t</Grid>\n\t\t\t\t\t</Grid>\n\t\t\t\t</Grid>\n\n\t\t\t\t<Grid item>\n\t\t\t\t\t<cards.components.DeleteCardButton cardID={config.cardID}></cards.components.DeleteCardButton>\n\t\t\t\t</Grid>\n\t\t\t</Grid>\n\t\t</Card>\n\t);\n};\n","import React from \"react\";\nimport { CardConfig } from \"../../../../cards/model/model\";\nimport { QACard } from \"./QACard\";\nimport { NoteCard } from \"./NoteCard\";\n\nexport type CardProps = { config: CardConfig; riverID: string };\n\nexport const borderStyle = { border: \"4px solid green\", borderRadius: \"4px\" };\n\nexport const ClayCard = ({ config, riverID }: CardProps) => {\n\tswitch (config.type) {\n\t\tcase \"Note\":\n\t\t\treturn <NoteCard config={config} riverID={riverID}></NoteCard>;\n\t\tcase \"Q-A\":\n\t\t\treturn <QACard config={config} riverID={riverID}></QACard>;\n\t}\n};\n","import Grid from \"@material-ui/core/Grid\";\nimport React from \"react\";\nimport { incrementer } from \"../../../../shared/utils\";\nimport { ClayCard } from \"./Cards/ClayCard\";\nimport { CardConfig } from \"../../../cards/model/model\";\nimport { Divider } from \"@material-ui/core\";\n\nconst GridDivider = () => (\n\t<Grid item>\n\t\t<Divider></Divider>\n\t</Grid>\n);\n\nexport const toCardGridItemsWithDividers = (cards: CardConfig[], riverID: string) => {\n\tconst increment = incrementer();\n\n\treturn cards.reduce((prev, currentCard, index, arr) => {\n\t\tprev.push(\n\t\t\t<Grid item key={increment()}>\n\t\t\t\t<ClayCard config={currentCard} riverID={riverID} key={increment()}></ClayCard>\n\t\t\t</Grid>\n\t\t);\n\n\t\tconst notLastCard = index < arr.length - 1;\n\t\tif (notLastCard) prev.push(<GridDivider key={increment()}></GridDivider>);\n\t\treturn prev;\n\t}, [] as any[]);\n};\n","import { Typography, Divider } from \"@material-ui/core\";\nimport Accordion from \"@material-ui/core/Accordion\";\nimport AccordionSummary from \"@material-ui/core/AccordionSummary\";\nimport AccordionDetails from \"@material-ui/core/AccordionDetails\";\nimport Grid from \"@material-ui/core/Grid\";\nimport React, { useState } from \"react\";\nimport { trySetPushToRiver } from \"../../actions\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { getPushToRiver } from \"../../selectors\";\nimport display from \"../../../display\";\nimport focus from \"../../../focus\";\nimport cards from \"../../../cards\";\n\n//TODO-NICE: make it not be accordion but closeable?\n//TODO-NICE: make local show / hide notes\nexport const CardRiverAccordion = ({\n\triverID,\n\tgridItems,\n\tsummary,\n}: {\n\triverID: string;\n\tgridItems: any;\n\tsummary: string;\n}) => {\n\tconst defaultElevation = 3;\n\tconst highlightElevation = 20;\n\tconst [elevation, setElevation] = useState(defaultElevation);\n\tconst pushToRiver = useSelector(getPushToRiver);\n\n\tif (riverID === pushToRiver && elevation === defaultElevation) {\n\t\tsetElevation(highlightElevation);\n\t} else if (riverID !== pushToRiver && elevation !== defaultElevation) {\n\t\tsetElevation(defaultElevation);\n\t}\n\n\tconst materialHeight = useSelector(display.selectors.getMaterialHeight);\n\tconst displayFocus = useSelector(focus.selectors.getDisplayFocus);\n\n\tconst dispatch = useDispatch();\n\n\t//TODO-NICE: make HalfFull-sub-menu for half-full QAs\n\t//TODO-NICE: if you start without any document and then load one, the current cards should be merged into that one\n\t//TODO-NICE: scroll-to-top for overflowing river\n\treturn (\n\t\t<Accordion\n\t\t\tdefaultExpanded={true}\n\t\t\tonMouseEnter={() => {\n\t\t\t\tdispatch(trySetPushToRiver(riverID));\n\t\t\t}}\n\t\t\televation={elevation}\n\t\t\t//TODO-NICE: I use 1400 to prevent non-overflow on reloading (the site would be stretched)\n\t\t\t// if the river is bigger than the pdf-page would be, then the site is stretchted and the pdf-page-element assumes the size of the river\n\t\t\t// this solution assumes the pdf page is always bigger than 1400 (true on 22'), need solution to get height of pdf-page-element itself and not its parent\n\t\t\tstyle={\n\t\t\t\tdisplayFocus === \"ACTIVE_RIVER\"\n\t\t\t\t\t? {\n\t\t\t\t\t\t\toverflowY: \"auto\",\n\t\t\t\t\t\t\tmaxHeight: materialHeight ? materialHeight : \"1400px\",\n\t\t\t\t\t  }\n\t\t\t\t\t: {}\n\t\t\t}\n\t\t>\n\t\t\t<AccordionSummary>\n\t\t\t\t<Typography\n\t\t\t\t\tvariant=\"h6\"\n\t\t\t\t\talign=\"center\"\n\t\t\t\t\tstyle={{ MozUserSelect: \"none\", WebkitUserSelect: \"none\", msUserSelect: \"none\" }}\n\t\t\t\t>\n\t\t\t\t\t{summary}\n\t\t\t\t</Typography>\n\t\t\t</AccordionSummary>\n\t\t\t<AccordionDetails>\n\t\t\t\t<Grid container direction=\"column\" spacing={2} justify=\"center\" alignItems=\"stretch\">\n\t\t\t\t\t<Grid item>\n\t\t\t\t\t\t<cards.components.AddQAButton></cards.components.AddQAButton>\n\t\t\t\t\t\t<cards.components.AddNoteButton></cards.components.AddNoteButton>\n\t\t\t\t\t\t<Divider></Divider>\n\t\t\t\t\t</Grid>\n\n\t\t\t\t\t<Grid item>\n\t\t\t\t\t\t<Grid container direction=\"column\" spacing={2} justify=\"center\" alignItems=\"stretch\">\n\t\t\t\t\t\t\t{gridItems}\n\t\t\t\t\t\t</Grid>\n\t\t\t\t\t</Grid>\n\t\t\t\t</Grid>\n\t\t\t</AccordionDetails>\n\t\t</Accordion>\n\t);\n};\n","import { CardConfig, NoteConfig, QAConfig } from \"../../../cards/model/model\";\nimport { toCardGridItemsWithDividers } from \"./toCardGridItemsWithDividers\";\nimport { useMemo } from \"react\";\nimport { CardRiverAccordion } from \"./CardRiverAccordion\";\nimport React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { getRiverContentState, getRiverContentFilter } from \"../../selectors\";\nimport { ContentFilter } from \"../../model\";\n\n//TODO-NICE: untangle these components, dont need to so many subs?\n\nconst noteContainsContentFilter = (noteConfig: NoteConfig, contentFilter: ContentFilter) =>\n\tnoteConfig.content.includes(contentFilter);\n\nconst qaContainsContentFilter = (qaConfig: QAConfig, contentFilter: ContentFilter) =>\n\tqaConfig.content.a.includes(contentFilter) || qaConfig.content.q.includes(contentFilter);\n\nexport const ChildCardRiver = ({ riverID, riverCards }: { riverID: string; riverCards: CardConfig[] }) => {\n\tconst riverContentState = useSelector(getRiverContentState);\n\n\t//TODO-NICE: use regex for upper/lower-case\n\tconst contentFilter = useSelector(getRiverContentFilter);\n\n\t// this should only change if the store values change\n\tconst gridItems = useMemo(() => {\n\t\tlet inputCards = riverCards;\n\n\t\tif (riverContentState === \"NONE\") {\n\t\t\treturn [];\n\t\t}\n\n\t\tif (riverContentState !== \"ALL\") {\n\t\t\tif (riverContentState === \"QAS\") {\n\t\t\t\tinputCards = riverCards.filter((config) => config.type === \"Q-A\");\n\t\t\t}\n\t\t\tif (riverContentState === \"NOTES\") {\n\t\t\t\tinputCards = riverCards.filter((config) => config.type === \"Note\");\n\t\t\t}\n\t\t}\n\t\t//TODO-NICE: optimize this waste, move this out of the memo as it changes more rapidly\n\t\tif (contentFilter !== \"\")\n\t\t\tinputCards = inputCards.filter((card) => {\n\t\t\t\tswitch (card.type) {\n\t\t\t\t\tcase \"Note\":\n\t\t\t\t\t\treturn noteContainsContentFilter(card as NoteConfig, contentFilter);\n\t\t\t\t\tcase \"Q-A\":\n\t\t\t\t\t\treturn qaContainsContentFilter(card as QAConfig, contentFilter);\n\t\t\t\t}\n\t\t\t\treturn false;\n\t\t\t});\n\n\t\treturn toCardGridItemsWithDividers(inputCards, riverID);\n\t}, [riverCards, riverID, riverContentState, contentFilter]);\n\n\treturn <CardRiverAccordion riverID={riverID} gridItems={gridItems} summary={riverID}></CardRiverAccordion>;\n};\n","import { CardID } from \"../cards/model/model\";\nimport { CardField } from \"../cards/model/model-content\";\n\nexport type RiverMakeUp = { riverID: string; cardIDs: CardID[] };\n\nexport type RiverMakeUps = { [riverID: string]: RiverMakeUp };\n\nexport type RiverShowState = \"SHOW\" | \"HIDE\";\n\nexport type RiverContentState = \"ALL\" | \"NOTES\" | \"QAS\" | \"NONE\";\n\n//TODO-NICE: rename pushto/active river\n\nexport type ContentFilter = string;\n\nexport type CardRiverState = {\n\triverMakeUps: RiverMakeUps;\n\tactiveRiverMakeUpID: string;\n\tpushToRiverID: string;\n\tlastRiverIDNumber: number;\n\t// show/hide river\n\triverShowState: RiverShowState;\n\t// filter content\n\triverContentState: RiverContentState;\n\t// this is used to determine which card should be highlighted in reaction to hovering over it in the context-menu\n\thighlightedCardID: null | CardID;\n\thighlightedCardField: null | CardField;\n\tcontentFilter: ContentFilter | \"\";\n};\n\nexport const pageNumberToRiverMakeUpID = (page: number) => \"CardRiver \" + page;\n\nexport const riverMakeUpIDToPageNumber = (riverID: string) => parseInt(riverID.replace(\"CardRiver \", \"\"));\n","import { Grid } from \"@material-ui/core\";\nimport { useSelector } from \"react-redux\";\nimport { getRiverMakeUps } from \"../selectors\";\nimport React, { useRef, useEffect } from \"react\";\nimport cards from \"../../cards\";\nimport focus from \"../../focus\";\nimport display from \"../../display\";\nimport { incrementer } from \"../../../shared/utils\";\nimport { ChildCardRiver } from \"./CardRiver/ChildCardRiver\";\nimport { riverMakeUpIDToPageNumber } from \"../model\";\n\n//TODO-PREF: memoize Rivers (not necessary right now, because we just hide)\n\nexport const SummaryRiver = () => {\n\tconst displayFocus = useSelector(focus.selectors.getDisplayFocus);\n\tconst currentPage = useSelector(display.selectors.getCurrentPage);\n\tconst cardConfigs = useSelector(cards.selectors.getCards);\n\tconst riverMakeUps = Object.values(useSelector(getRiverMakeUps));\n\tconst focusRef = useRef<HTMLDivElement | null>(null);\n\n\t// the current-page river is scrolled into view\n\tuseEffect(() => {\n\t\tif (displayFocus === \"SUMMARY_RIVER\" && focusRef.current !== null) {\n\t\t\tconst boundingRect = (focusRef.current as HTMLDivElement).getBoundingClientRect();\n\t\t\t//TODO-NICE: 100 is just experience on 22', I assume that then the River is in the top row\n\t\t\t// we need to scroll to top otherwise it is covered by the AppBar\n\t\t\tif (boundingRect.y < 100) {\n\t\t\t\twindow.scrollTo({ top: 0, behavior: \"smooth\" });\n\t\t\t} else {\n\t\t\t\t(focusRef.current as HTMLDivElement).scrollIntoView({ behavior: \"smooth\", block: \"start\", inline: \"start\" });\n\t\t\t}\n\t\t}\n\t}, [displayFocus, currentPage]);\n\n\tconst increment = incrementer();\n\t//TODO-NICE: find way to make UI-text unselectable globally, maybe different focus? But might be unperformant\n\treturn (\n\t\t<Grid container justify=\"flex-start\" direction=\"row\" alignItems=\"stretch\" spacing={1}>\n\t\t\t{riverMakeUps.map((makeUp) =>\n\t\t\t\tmakeUp.cardIDs.length > 0 ? (\n\t\t\t\t\t<Grid\n\t\t\t\t\t\titem\n\t\t\t\t\t\tref={riverMakeUpIDToPageNumber(makeUp.riverID) === currentPage ? focusRef : null}\n\t\t\t\t\t\tkey={increment()}\n\t\t\t\t\t>\n\t\t\t\t\t\t<ChildCardRiver\n\t\t\t\t\t\t\triverID={makeUp.riverID}\n\t\t\t\t\t\t\triverCards={makeUp.cardIDs.map((id) => cardConfigs[id])}\n\t\t\t\t\t\t\tkey={increment()}\n\t\t\t\t\t\t></ChildCardRiver>\n\t\t\t\t\t</Grid>\n\t\t\t\t) : null\n\t\t\t)}\n\t\t</Grid>\n\t);\n};\n","import React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { getActiveRiverCards, getActiveRiverMakeUpID } from \"../selectors\";\nimport { ChildCardRiver } from \"./CardRiver/ChildCardRiver\";\n\n//TODO-NICE: selection in CardRiver should stay highlighted when the contextMenu opens?\n\n//TODO-NICE: contextMenu as permant element, maybe sidebar?\n//TODO-NICE: preview in ContextMenu of how selected string would be used\n\n//TODO-NICE: make River-View, where you can just see one card and can make it smaller? Maybe just button to zoom \"in\" / just seeing the current river\n//TODO-NICE: mark Origin-Span or maybe rect over whole page-section?\n//TODO-NICE: make reconciliation algorithm for origin when new PDF versions come out\n// (basically, just search the text, and if it is not in the same span, just move the span - expand page forward and backward then search there)\n\nexport const ActiveCardRiver = () => {\n\tconst riverID = useSelector(getActiveRiverMakeUpID);\n\tconst riverCards = useSelector(getActiveRiverCards);\n\n\treturn <ChildCardRiver riverID={riverID} riverCards={riverCards}></ChildCardRiver>;\n};\n","import { CardRiverState, RiverShowState, pageNumberToRiverMakeUpID, RiverMakeUp, RiverContentState } from \"./model\";\nimport { FinalizedCardPayload, CardID } from \"../cards/model/model\";\nimport cards from \"../cards\";\nimport * as t from \"./actionTypes\";\nimport display from \"../display\";\nimport { ArchiveRiver } from \"../db/model\";\nimport db from \"../db\";\n\nconst initialState: CardRiverState = {\n\triverMakeUps: {\n\t\t[pageNumberToRiverMakeUpID(1)]: {\n\t\t\triverID: pageNumberToRiverMakeUpID(1),\n\t\t\tcardIDs: [\"2\", \"0\", \"1\"],\n\t\t},\n\t},\n\tpushToRiverID: pageNumberToRiverMakeUpID(1),\n\tactiveRiverMakeUpID: pageNumberToRiverMakeUpID(1),\n\tlastRiverIDNumber: 1,\n\triverShowState: \"SHOW\",\n\thighlightedCardID: null,\n\thighlightedCardField: null,\n\triverContentState: \"ALL\",\n\tcontentFilter: \"\",\n};\n\nconst emptyCardRiver = (page: number): RiverMakeUp => {\n\treturn {\n\t\triverID: pageNumberToRiverMakeUpID(page),\n\t\tcardIDs: [],\n\t};\n};\n\nconst updateStateWithMakeUps = (state: CardRiverState, ...makeUps: RiverMakeUp[]) => {\n\tconst updatedState = { ...state };\n\tmakeUps.forEach((makeUp) => {\n\t\tupdatedState.riverMakeUps[makeUp.riverID] = makeUp;\n\t});\n\treturn updatedState;\n};\n\nconst deactivateActiveCardRiver = (state: CardRiverState) => {\n\treturn { ...state.riverMakeUps[state.activeRiverMakeUpID], active: false };\n};\n\nconst removeCardFromRivers = (state: CardRiverState, cardID: CardID): CardRiverState => {\n\tconst riverMakeUps = Object.fromEntries(\n\t\tObject.entries(state.riverMakeUps).map((entry) => [\n\t\t\tentry[0],\n\t\t\t{ ...entry[1], cardIDs: entry[1].cardIDs.filter((id) => id !== cardID) },\n\t\t])\n\t);\n\treturn { ...state, riverMakeUps };\n};\n\nconst cardRiverState = (state = initialState, { type, payload }: { type: string; payload: any }): CardRiverState => {\n\tlet riverMakeUp;\n\tlet riverMakeUps;\n\tswitch (type) {\n\t\tcase display.actionTypes.PAGE_UPDATE:\n\t\t\tlet activeRiver;\n\t\t\tif (!state.riverMakeUps[pageNumberToRiverMakeUpID(payload as number)]) {\n\t\t\t\tactiveRiver = emptyCardRiver(payload as number);\n\t\t\t} else {\n\t\t\t\tactiveRiver = { ...state.riverMakeUps[pageNumberToRiverMakeUpID(payload as number)] };\n\t\t\t}\n\n\t\t\tconst oldRiver = deactivateActiveCardRiver(state);\n\n\t\t\treturn {\n\t\t\t\t...updateStateWithMakeUps(state, activeRiver, oldRiver),\n\t\t\t\tactiveRiverMakeUpID: activeRiver.riverID,\n\t\t\t\tpushToRiverID: activeRiver.riverID,\n\t\t\t};\n\n\t\tcase cards.actionTypes.CARD_PUSH:\n\t\t\triverMakeUp = {\n\t\t\t\t...state.riverMakeUps[state.pushToRiverID],\n\t\t\t\tcardIDs: [...state.riverMakeUps[state.pushToRiverID].cardIDs, (payload as FinalizedCardPayload).card.cardID],\n\t\t\t};\n\t\t\triverMakeUps = { ...state.riverMakeUps };\n\t\t\triverMakeUps[state.pushToRiverID] = riverMakeUp;\n\n\t\t\treturn { ...state, riverMakeUps: riverMakeUps };\n\t\tcase cards.actionTypes.CARD_REMOVE:\n\t\t\treturn removeCardFromRivers(state, payload as string);\n\t\tcase t.RIVER_SHOW_STATE:\n\t\t\treturn { ...state, riverShowState: payload as RiverShowState };\n\t\tcase t.RIVER_CONTENT_STATE:\n\t\t\treturn { ...state, riverContentState: payload as RiverContentState };\n\t\tcase t.RIVER_PUSH_STATE:\n\t\t\treturn { ...state, pushToRiverID: payload };\n\t\tcase t.RIVER_HOVERED_CARD:\n\t\t\treturn { ...state, highlightedCardID: payload.id, highlightedCardField: payload.field };\n\t\tcase db.actionTypes.DOCUMENT_CHANGE:\n\t\t\tif (payload) {\n\t\t\t\treturn {\n\t\t\t\t\t...initialState,\n\t\t\t\t\triverMakeUps: (payload as ArchiveRiver).riverMakeUps,\n\t\t\t\t\tactiveRiverMakeUpID: (payload as ArchiveRiver).activeRiverMakeUpID,\n\t\t\t\t\tpushToRiverID: (payload as ArchiveRiver).pushToRiverID,\n\t\t\t\t\tlastRiverIDNumber: (payload as ArchiveRiver).lastRiverIDNumber,\n\t\t\t\t};\n\t\t\t} else {\n\t\t\t\treturn initialState;\n\t\t\t}\n\t\tcase db.actionTypes.LOAD_DOCUMENT_DATA_SETS:\n\t\t\t// basically the same as DOCUMENT_CHANGE, just only triggered\n\t\t\t//when uploading data that corresponds to current document\n\t\t\t// and if not, we dont reset\n\t\t\tif (payload.newActiveDataSet) {\n\t\t\t\treturn {\n\t\t\t\t\t...initialState,\n\t\t\t\t\triverMakeUps: (payload.newActiveDataSet as ArchiveRiver).riverMakeUps,\n\t\t\t\t\tactiveRiverMakeUpID: (payload.newActiveDataSet as ArchiveRiver).activeRiverMakeUpID,\n\t\t\t\t\tpushToRiverID: (payload.newActiveDataSet as ArchiveRiver).pushToRiverID,\n\t\t\t\t\tlastRiverIDNumber: (payload.newActiveDataSet as ArchiveRiver).lastRiverIDNumber,\n\t\t\t\t};\n\t\t\t} else {\n\t\t\t\treturn state;\n\t\t\t}\n\t\tcase t.RIVER_CONTENT_FILTER:\n\t\t\treturn { ...state, contentFilter: payload };\n\t\tdefault:\n\t\t\treturn state;\n\t}\n};\n\nexport default cardRiverState;\n","import * as constants from \"./constants\";\nimport * as components from \"./components\";\nimport reducer from \"./reducer\";\nimport * as selectors from \"./selectors\";\nimport * as actions from \"./actions\";\n\nexport default { constants, components, reducer, selectors, actions };\n","import { createSelector } from \"reselect\";\nimport display from \"../display\";\nimport river from \"../river\";\nimport cards from \"../cards\";\nimport { DocumentData } from \"../db/model\";\n\nexport const collectCurrentDBData: (state: any) => DocumentData | null = createSelector(\n\tdisplay.selectors.getPDFName,\n\tdisplay.selectors.getTotalPages,\n\tdisplay.selectors.getCurrentPage,\n\triver.selectors.getRiverMakeUps,\n\triver.selectors.getActiveRiverMakeUpID,\n\triver.selectors.getPushToRiver,\n\triver.selectors.getLastRiverIDNumber,\n\tcards.selectors.getCards,\n\tcards.selectors.getLastCardIDNumber,\n\t(\n\t\tpdfName,\n\t\ttotalPages,\n\t\tcurrentPage,\n\t\triverMakeUps,\n\t\tactiveRiverMakeUpID,\n\t\tpushToRiverID,\n\t\tlastRiverIDNumber,\n\t\tcards,\n\t\tlastCardIDNumber\n\t) => {\n\t\treturn {\n\t\t\tname: pdfName as string,\n\t\t\ttotalPages,\n\t\t\tcurrentPage,\n\t\t\triverMakeUps,\n\t\t\tactiveRiverMakeUpID,\n\t\t\tpushToRiverID,\n\t\t\tlastRiverIDNumber,\n\t\t\tcards,\n\t\t\tlastCardIDNumber,\n\t\t};\n\t}\n);\n","import { Dispatch } from \"redux\";\nimport display from \"../display\";\nimport { ActionCreators } from \"redux-undo\";\nimport db from \"../db\";\nimport { collectCurrentDBData } from \"./selectors\";\nimport { DocumentData } from \"../db/model\";\n\nexport const archiveCurrentDBData = () => {\n\treturn (dispatch: Dispatch, getState: Function) => {\n\t\tconst state = getState();\n\t\tconst currentPDFName = display.selectors.getPDFName(state);\n\n\t\tif (currentPDFName !== undefined) {\n\t\t\tconst dbData = collectCurrentDBData(state) as DocumentData;\n\t\t\tdispatch(db.actions.archiveDBData(dbData));\n\t\t}\n\t};\n};\n\nconst fileDownload = require(\"js-file-download\");\nexport const downloadDBData = () => {\n\treturn (dispatch: any, getState: Function) => {\n\t\t//actualize the db before downloading\n\t\tdispatch(archiveCurrentDBData());\n\n\t\tconst documentDataSets = db.selectors.getDocumentDataSets(getState());\n\t\tconst localString = new Date().toLocaleString();\n\t\tfileDownload(JSON.stringify(documentDataSets), localString + \" ClayMemory.txt\");\n\t};\n};\n\nexport const changeDocument = (pdf: File) => {\n\treturn (dispatch: Dispatch, getState: Function) => {\n\t\tconst newPDFName = pdf.name;\n\n\t\tconst state = getState();\n\t\tconst currentPDFName = display.selectors.getPDFName(state);\n\n\t\tconst documentDB = db.selectors.getDocumentDB(state);\n\n\t\t// save current data only if pdf has been uploaded / there is an active document\n\t\tif (currentPDFName !== undefined) {\n\t\t\tconst dbData = collectCurrentDBData(state) as DocumentData;\n\t\t\tdispatch(db.actions.archiveDBData(dbData));\n\t\t}\n\n\t\tdispatch(display.actions.pdfUpload(pdf));\n\n\t\t// if the uploaded pdf is the same as the active one, then we just reloaded the app (lost the pdf)\n\t\t// and dont need load data (loading data would lead to overwrite because of the syncing order)\n\t\t//TODO-NICE: make the sync between documentDB and active document for explicit, right now I just sync when a PDF is uploaded\n\t\tif (newPDFName === currentPDFName) {\n\t\t\treturn;\n\t\t}\n\t\t// load new data or reset\n\t\tconst newDocumentData = documentDB[newPDFName];\n\t\tif (newDocumentData) {\n\t\t\tdispatch({ type: db.actionTypes.DOCUMENT_CHANGE, payload: newDocumentData });\n\t\t} else {\n\t\t\tdispatch({ type: db.actionTypes.DOCUMENT_CHANGE });\n\t\t}\n\n\t\t// no undo-redo across documents\n\t\tdispatch(ActionCreators.clearHistory());\n\t};\n};\n\n//TODO-NICE: remove save redundancy\nexport const loadSavedDocument = (document: string) => {\n\treturn (dispatch: Dispatch, getState: Function) => {\n\t\tconst state = getState();\n\t\tconst currentPDFName = display.selectors.getPDFName(state);\n\n\t\tconst documentDB = db.selectors.getDocumentDB(state);\n\n\t\t// save current data only if pdf has been uploaded / there is an active document\n\t\tif (currentPDFName !== undefined) {\n\t\t\tconst dbData = collectCurrentDBData(state) as DocumentData;\n\t\t\tdispatch(db.actions.archiveDBData(dbData));\n\t\t}\n\n\t\t// load new data\n\t\tconst newDocumentData = documentDB[document];\n\t\tdispatch({ type: db.actionTypes.DOCUMENT_CHANGE, payload: newDocumentData });\n\n\t\t// no undo-redo across documents\n\t\tdispatch(ActionCreators.clearHistory());\n\t};\n};\n","import { useRef, useEffect, MutableRefObject } from \"react\";\n\n// only global eventListener for now\nexport const useEventListener = (eventName: string, handler: any) => {\n\tconst savedHandler: MutableRefObject<Function> = useRef(() => {});\n\n\tuseEffect(() => {\n\t\tsavedHandler.current = handler;\n\t}, [handler]);\n\n\tuseEffect(() => {\n\t\tconst eventListener = (event: Event) => savedHandler.current(event);\n\t\tdocument.addEventListener(eventName, eventListener);\n\t\treturn () => {\n\t\t\tdocument.removeEventListener(eventName, eventListener);\n\t\t};\n\t}, [eventName]);\n};\n","export const NAME = \"extractionData\";\n","import { NAME } from \"./constants\";\n\nexport const TOGGLE_CONTEXT_MENU = NAME + \"/TOGGLE_CONTEXT_MENU\";\nexport const CLOSE_CONTEXT_MENU = NAME + \"/CLOSE_CONTEXT_MENU\";\nexport const OPEN_CONTEXT_MENU = NAME + \"/OPEN_CONTEXT_MENU\";\n","import { NAME } from \"./constants\";\nimport { createSelector } from \"reselect\";\nimport { CreationData } from \"./model\";\nimport river from \"../river\";\nimport selection from \"../selection\";\n\nexport const getAll = (state: any) => state[NAME].present;\n\nexport const getContextMenuState = createSelector(getAll, (state: CreationData) => state.open);\n\nexport const getContextMenuRef = createSelector(getAll, (state: CreationData) => state.menuRef);\n\nexport const getContextMenuFullCardsRef = createSelector(getAll, (state: CreationData) => state.fullCardRef);\n\nexport const getContextMenuQARefs = createSelector(getAll, (state: CreationData) => state.qaRefs);\n\nexport const getContextMenuInitData = createSelector(\n\tselection.selectors.getCurrentSelectionPosition,\n\tgetContextMenuState,\n\tgetContextMenuRef,\n\tgetContextMenuQARefs,\n\triver.selectors.getPushToRiverCards,\n\t(position, state, menuRef, qaRefs, riverCards) => {\n\t\treturn { position, state, menuRef, qaRefs, riverCards };\n\t}\n);\n","import * as t from \"./actionTypes\";\nimport { getContextMenuState } from \"./selectors\";\nimport display from \"../display\";\n\nexport const toggleContextMenu = () => {\n\treturn (dispatch: any, getState: Function) => {\n\t\tconst state = getState();\n\t\tif (display.selectors.getDataExists(state)) {\n\t\t\tdispatch({ type: t.TOGGLE_CONTEXT_MENU });\n\t\t}\n\t};\n};\n\nexport const closeContextMenu = () => {\n\treturn (dispatch: any, getState: Function) => {\n\t\tif (getContextMenuState(getState())) {\n\t\t\tdispatch({ type: t.CLOSE_CONTEXT_MENU });\n\t\t}\n\t};\n};\n\nexport const openContextMenu = () => {\n\treturn (dispatch: any) => {\n\t\tdispatch({ type: t.OPEN_CONTEXT_MENU });\n\t};\n};\n","import * as t from \"./actionTypes\";\nimport { CreationData } from \"./model\";\nimport { createRef } from \"react\";\nimport { CardPayload } from \"../cards/model/model\";\nimport cards from \"../cards\";\n\nconst initialState: CreationData = {\n\topen: false,\n\tmenuRef: createRef(),\n\tfullCardRef: createRef(),\n\tqaRefs: [createRef(), createRef()],\n};\n\nconst creationData = (state = initialState, { type, payload }: { type: string; payload: any }): CreationData => {\n\tswitch (type) {\n\t\tcase t.TOGGLE_CONTEXT_MENU:\n\t\t\treturn { ...state, open: !state.open };\n\t\tcase t.CLOSE_CONTEXT_MENU:\n\t\t\treturn { ...state, open: false };\n\t\tcase t.OPEN_CONTEXT_MENU:\n\t\t\treturn { ...state, open: true };\n\t\tcase cards.actionTypes.CARD_PUSH:\n\t\t\t//TODO-NICE: reliance on order of refs (needs to be the same as order of qaRefs) and coupling to the fact that a new card was pushed\n\t\t\t// might need to change if I allow moving the cards\n\t\t\t//TODO-NICE: no support for multiple rivers\n\t\t\tif ((payload as CardPayload).card.type === \"Q-A\") return { ...state, qaRefs: [...state.qaRefs, createRef()] };\n\t\t\treturn state;\n\t\tdefault:\n\t\t\treturn state;\n\t}\n};\n\nexport default creationData;\n","import React, { RefObject } from \"react\";\nimport NestedMenuItem from \"material-ui-nested-menu-item\";\nimport { MenuItem } from \"@material-ui/core\";\nimport { CardConfig, CardType, CreationType } from \"../../cards/model/model\";\nimport { QACardContent } from \"../../cards/model/model-content\";\nimport { useDispatch } from \"react-redux\";\nimport river from \"../../river\";\n\n//TODO-NICE: move to cards\nexport const noteCardIsEmpty = (content: string) => content === \"\";\nexport const qaCardIsNotFull = (content: QACardContent) =>\n\t(content as QACardContent).q === \"\" || (content as QACardContent).a === \"\";\n\ntype dispatchRiver = (type: CardType, creationType: CreationType, cardID?: string | undefined) => void;\n\n//TODO-NICE: rename this to note\n//TODO-NICE: entangle this dispatchRiver buisness and use hooks in the card components instead\n\nconst SingleOptionItem = ({ cardConfig, dispatchRiver }: { cardConfig: CardConfig; dispatchRiver: dispatchRiver }) => {\n\tconst dispatch = useDispatch();\n\n\treturn (\n\t\t<MenuItem\n\t\t\tonClick={() => {\n\t\t\t\tdispatchRiver(cardConfig.type, \"note\", cardConfig.cardID);\n\t\t\t}}\n\t\t\tonMouseEnter={() => {\n\t\t\t\tdispatch(river.actions.trySetHoveredCard(cardConfig.cardID, \"note\"));\n\t\t\t}}\n\t\t>\n\t\t\t{cardConfig.type}\n\t\t</MenuItem>\n\t);\n};\n\nconst QAOptionItem = ({\n\tcardConfig,\n\tdispatchRiver,\n\tqaRef,\n}: {\n\tcardConfig: CardConfig;\n\tdispatchRiver: dispatchRiver;\n\tqaRef: RefObject<any> | undefined;\n}) => {\n\tconst dispatch = useDispatch();\n\n\treturn (\n\t\t<NestedMenuItem\n\t\t\tlabel=\"Q-A\"\n\t\t\tparentMenuOpen={true}\n\t\t\tonMouseEnter={() => {\n\t\t\t\t// hover over first field as default\n\t\t\t\tdispatch(river.actions.trySetHoveredCard(cardConfig.cardID, \"q\"));\n\t\t\t}}\n\t\t>\n\t\t\t<MenuItem\n\t\t\t\tref={qaRef}\n\t\t\t\tonClick={() => {\n\t\t\t\t\tdispatchRiver(\"Q-A\", \"q\", cardConfig.cardID);\n\t\t\t\t}}\n\t\t\t\tonMouseEnter={() => {\n\t\t\t\t\tdispatch(river.actions.trySetHoveredCard(cardConfig.cardID, \"q\"));\n\t\t\t\t}}\n\t\t\t>\n\t\t\t\tQ-field\n\t\t\t</MenuItem>\n\t\t\t<MenuItem\n\t\t\t\tonClick={() => {\n\t\t\t\t\tdispatchRiver(\"Q-A\", \"a\", cardConfig.cardID);\n\t\t\t\t}}\n\t\t\t\tonMouseEnter={() => {\n\t\t\t\t\tdispatch(river.actions.trySetHoveredCard(cardConfig.cardID, \"a\"));\n\t\t\t\t}}\n\t\t\t>\n\t\t\t\tA-field\n\t\t\t</MenuItem>\n\t\t</NestedMenuItem>\n\t);\n};\n\nexport const CardConfigItem = ({\n\tcardConfig,\n\tdispatchRiver,\n\tqaRef,\n}: {\n\tcardConfig: CardConfig;\n\tdispatchRiver: dispatchRiver;\n\tqaRef?: RefObject<any>;\n}) => {\n\tswitch (cardConfig.type) {\n\t\tcase \"Q-A\":\n\t\t\treturn <QAOptionItem cardConfig={cardConfig} dispatchRiver={dispatchRiver} qaRef={qaRef}></QAOptionItem>;\n\t\tdefault:\n\t\t\treturn <SingleOptionItem cardConfig={cardConfig} dispatchRiver={dispatchRiver}></SingleOptionItem>;\n\t}\n};\n","import { Fragment } from \"react\";\nimport { MenuItem } from \"@material-ui/core\";\nimport React from \"react\";\n\n//TODO-NICE: clear qa-field button\n\nconst NewQACardQ = ({ onClick }: any) => <MenuItem onClick={onClick}>New: Q (Q-A)</MenuItem>;\nconst NewQACardA = ({ onClick }: any) => <MenuItem onClick={onClick}>New: A (Q-A)</MenuItem>;\nconst NewNoteCard = ({ onClick }: any) => <MenuItem onClick={onClick}>New: Note</MenuItem>;\n\nexport const NewButtons = ({ noteDispatch, qDispatch, aDispatch }: any) => {\n\treturn (\n\t\t<Fragment>\n\t\t\t<NewNoteCard onClick={noteDispatch}></NewNoteCard>\n\t\t\t<NewQACardQ onClick={qDispatch}></NewQACardQ>\n\t\t\t<NewQACardA onClick={aDispatch}></NewQACardA>\n\t\t</Fragment>\n\t);\n};\n","import React, { RefObject } from \"react\";\nimport Menu from \"@material-ui/core/Menu\";\nimport { Divider, MenuItem } from \"@material-ui/core\";\nimport { useDispatch, connect, useSelector, useStore } from \"react-redux\";\nimport { getContextMenuInitData, getContextMenuFullCardsRef } from \"../selectors\";\nimport { closeContextMenu } from \"../actions\";\nimport { incrementer } from \"../../../shared/utils\";\nimport { CardConfig, CardType, CreationType } from \"../../cards/model/model\";\nimport { QACardContent } from \"../../cards/model/model-content\";\nimport { CardConfigItem, noteCardIsEmpty, qaCardIsNotFull } from \"./CardItems\";\nimport { NewButtons } from \"./NewButtons\";\nimport NestedMenuItem from \"material-ui-nested-menu-item\";\nimport selection from \"../../selection\";\nimport { CardOrigin } from \"../../cards/model/model-origin\";\nimport display from \"../../display\";\nimport { SourceCard } from \"../../selection/model\";\n\nfunction ContextMenu({\n\tposition,\n\tstate,\n\tmenuRef,\n\tqaRefs,\n\triverCards,\n}: {\n\tposition: { x: number; y: number };\n\tstate: boolean;\n\tmenuRef: RefObject<any>;\n\tqaRefs: RefObject<any>[];\n\triverCards: CardConfig[];\n}) {\n\tconst fullCardsRef = useSelector(getContextMenuFullCardsRef);\n\n\tconst dispatch = useDispatch();\n\tconst sourceCard = useSelector(selection.selectors.getSourceCard);\n\n\t//TODO-NICE: open menu in editor to the right not over the document\n\n\tconst openState = state;\n\n\tconst selectedParent = useSelector(selection.selectors.getCurrentSelectedParent);\n\tconst store = useStore();\n\n\tconst dispatchRiver = (type: CardType, creationType: CreationType, cardID?: string) => {\n\t\tdispatch(closeContextMenu());\n\n\t\tif (sourceCard) {\n\t\t\tdispatch(\n\t\t\t\tselection.actions.selectionToCardForSourceCard(\n\t\t\t\t\ttype,\n\t\t\t\t\tcreationType,\n\t\t\t\t\t(sourceCard as SourceCard).sourceField,\n\t\t\t\t\t(sourceCard as SourceCard).origin,\n\t\t\t\t\tcardID\n\t\t\t\t)\n\t\t\t);\n\t\t\tdispatch(selection.actions.resetSourceCard());\n\t\t} else {\n\t\t\t// always overwrite origin, even if isUpdate, because updateType==replace\n\t\t\tconst origin: CardOrigin | undefined = selectedParent\n\t\t\t\t? display.selectors.getCurrentOrigin(store.getState())\n\t\t\t\t: undefined;\n\n\t\t\tdispatch(selection.actions.selectionToCard(type, creationType, origin, cardID));\n\t\t}\n\t};\n\n\tconst increment = incrementer();\n\tconst qaRefIndex = incrementer();\n\n\tconst anchorPosition = openState ? { top: position.y, left: position.x } : undefined;\n\n\t//TODO-PERF: use partition function, or loop to avoid double iteration\n\t//TODO-NICE: abstract menu, this is doubled\n\tconst nonFullRiverCards = riverCards.filter((card) => {\n\t\tif (typeof card.content === \"string\") {\n\t\t\treturn noteCardIsEmpty(card.content);\n\t\t} else {\n\t\t\treturn qaCardIsNotFull(card.content as QACardContent);\n\t\t}\n\t});\n\n\tconst fullRiverCards = riverCards.filter((card) => {\n\t\tif (typeof card.content === \"string\") {\n\t\t\treturn !noteCardIsEmpty(card.content);\n\t\t} else {\n\t\t\treturn !qaCardIsNotFull(card.content as QACardContent);\n\t\t}\n\t});\n\n\t// TODO-NICE: use hidden MenuItem-pattern also for qa-ref\n\n\t// TODO-NICE: need to check for state before rendering MenuItems,\n\t// otherwise it shows up for a split-second when switching the menu off after adding to the river\n\t// weird Race Condition even if I dispatch closeContextMenu first?\n\treturn (\n\t\t<Menu\n\t\t\tref={openState ? menuRef : null}\n\t\t\tkeepMounted\n\t\t\topen={openState}\n\t\t\tanchorReference=\"anchorPosition\"\n\t\t\tanchorPosition={anchorPosition}\n\t\t>\n\t\t\t{openState &&\n\t\t\t\tnonFullRiverCards.map((cardConfig) => (\n\t\t\t\t\t<CardConfigItem\n\t\t\t\t\t\tcardConfig={cardConfig}\n\t\t\t\t\t\tdispatchRiver={dispatchRiver}\n\t\t\t\t\t\tkey={increment()}\n\t\t\t\t\t\tqaRef={cardConfig.type === \"Q-A\" ? qaRefs[qaRefIndex()] : undefined}\n\t\t\t\t\t></CardConfigItem>\n\t\t\t\t))}\n\t\t\t{openState && nonFullRiverCards.length > 0 && <Divider />}\n\n\t\t\t{openState && (\n\t\t\t\t<NewButtons\n\t\t\t\t\tnoteDispatch={() => {\n\t\t\t\t\t\tdispatchRiver(\"Note\", \"note\");\n\t\t\t\t\t}}\n\t\t\t\t\tqDispatch={() => {\n\t\t\t\t\t\tdispatchRiver(\"Q-A\", \"q\");\n\t\t\t\t\t}}\n\t\t\t\t\taDispatch={() => {\n\t\t\t\t\t\tdispatchRiver(\"Q-A\", \"a\");\n\t\t\t\t\t}}\n\t\t\t\t></NewButtons>\n\t\t\t)}\n\n\t\t\t{openState && fullRiverCards.length > 0 && <Divider />}\n\t\t\t{openState && fullRiverCards.length > 0 && (\n\t\t\t\t<NestedMenuItem label=\"Full cards: \" parentMenuOpen={true}>\n\t\t\t\t\t<MenuItem ref={fullCardsRef} style={{ position: \"absolute\" }}></MenuItem>\n\t\t\t\t\t{fullRiverCards.map((cardConfig) => (\n\t\t\t\t\t\t<CardConfigItem\n\t\t\t\t\t\t\tcardConfig={cardConfig}\n\t\t\t\t\t\t\tdispatchRiver={dispatchRiver}\n\t\t\t\t\t\t\tkey={increment()}\n\t\t\t\t\t\t\tqaRef={cardConfig.type === \"Q-A\" ? qaRefs[qaRefIndex()] : undefined}\n\t\t\t\t\t\t></CardConfigItem>\n\t\t\t\t\t))}\n\t\t\t\t</NestedMenuItem>\n\t\t\t)}\n\t\t</Menu>\n\t);\n}\n\nexport const ContextMenuContainer = connect(getContextMenuInitData)(ContextMenu);\n","import { getContextMenuRef, getContextMenuQARefs, getContextMenuFullCardsRef } from \"../selectors\";\n\n// the root div for the menu invisibly covers the whole screen\n// the actual div that is visible is this\nconst baseContextMenuSelector = \"div.MuiPaper-root\";\n\nexport const contextMenuContainsTargetNode = (state: any, event: Event) => {\n\tconst menuRef = getContextMenuRef(state).current;\n\tconst fullCardsRef = getContextMenuFullCardsRef(state).current?.parentNode;\n\n\t// the nested items are rendered under a different menu\n\t// the current api does not allow access\n\t// so the qa-refs refer to the Q-button\n\t// we check the click against his parent,\n\t// which is the div that contains the Q and A buttons\n\tconst qaRefs = getContextMenuQARefs(state)\n\t\t.map((refObject) => refObject.current)\n\t\t.filter((cur) => !!cur)\n\t\t.map((ref) => ref.parentNode);\n\n\tconst target = event.target as Node;\n\n\tif (menuRef?.querySelector(baseContextMenuSelector)?.contains(target)) return true;\n\n\tif (fullCardsRef?.contains(target)) return true;\n\n\tfor (const qaRef of qaRefs) {\n\t\tif (qaRef.contains(target)) return true;\n\t}\n\n\treturn false;\n};\n","import * as actions from \"./actions\";\nimport * as constants from \"./constants\";\nimport * as actionTypes from \"./actionTypes\";\nimport reducer from \"./reducer\";\nimport * as selectors from \"./selectors\";\nimport * as components from \"./components\";\nimport * as services from \"./services\";\n\nexport default { actions, actionTypes, constants, components, reducer, selectors, services };\n","import { connect } from \"react-redux\";\nimport { useEventListener } from \"../hooks/useEventListener\";\nimport { mouseDownControl, rightClickControl } from \"../services/mouseControl\";\n\nfunction Control({\n\tmouseDownControl,\n\trightClickControl,\n}: {\n\tmouseDownControl: (event: MouseEvent) => void;\n\trightClickControl: (event: MouseEvent) => void;\n}) {\n\tuseEventListener(\"mousedown\", mouseDownControl);\n\tuseEventListener(\"contextmenu\", rightClickControl);\n\treturn null;\n}\n\nexport const ControlContainer = connect(\n\t() => {\n\t\treturn {};\n\t},\n\t{\n\t\tmouseDownControl,\n\t\trightClickControl,\n\t}\n)(Control);\n","import creation from \"../../extraction\";\nimport focus from \"../../focus\";\nimport river from \"../../river\";\nimport selection from \"../../selection\";\n\nexport const mouseDownControl = (event: MouseEvent) => {\n\treturn (dispatch: any, getState: Function) => {\n\t\tconst clickOutSideOfMenu = !creation.services.contextMenuContainsTargetNode(getState(), event);\n\t\tif (clickOutSideOfMenu) {\n\t\t\tdispatch(creation.actions.closeContextMenu());\n\t\t\tdispatch(river.actions.resetHoveredCard());\n\t\t}\n\t};\n};\n\n//TODO-NICE: make selection-dropable on buttons, so that they can be send to cards, make this the default instead of context-menu?\n// imagine: toolbar with new Note, new A, new Q | all the cards and you can drop off\n\n//TODO-NICE: delete extracted str in source\n\nexport const rightClickControl = (event: MouseEvent) => {\n\treturn (dispatch: any, getState: Function) => {\n\t\tconst state = getState();\n\n\t\t// this is set via left-click\n\t\tconst selectedStr = selection.selectors.getCurrentSelectedString(state);\n\n\t\tconst displayFocus = focus.selectors.getDisplayFocus(state);\n\n\t\tif (selectedStr === \"\") return;\n\n\t\tevent.preventDefault();\n\n\t\tdispatch(selection.actions.updateSelectionPosition(event.x, event.y));\n\t\tdispatch(creation.actions.openContextMenu());\n\n\t\tif (displayFocus === \"ACTIVE_RIVER\") {\n\t\t\t//if the user is focused on the document, the push-to river should always be the active=page-wise river\n\t\t\tdispatch(river.actions.setPushToRiver(river.selectors.getActiveRiverMakeUpID(state)));\n\t\t}\n\t};\n};\n","import { useDispatch } from \"react-redux\";\nimport React, { useState } from \"react\";\nimport {\n\tIconButton,\n\tTooltip,\n\tDialog,\n\tDialogTitle,\n\tDialogContent,\n\tDialogContentText,\n\tDialogActions,\n\tButton,\n} from \"@material-ui/core\";\nimport display from \"../../display\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport text from \"../../text\";\n\nconst DeleteDocumentDialogAlert = ({\n\tdocument,\n\thandleClose,\n\topen,\n}: {\n\tdocument: string;\n\thandleClose: () => void;\n\topen: boolean;\n}) => {\n\tconst dispatch = useDispatch();\n\n\treturn (\n\t\t<Dialog\n\t\t\topen={open}\n\t\t\tonClose={handleClose}\n\t\t\taria-labelledby=\"alert-dialog-title\"\n\t\t\taria-describedby=\"alert-dialog-description\"\n\t\t>\n\t\t\t<DialogTitle id=\"alert-dialog-title\">{\"Delete \" + document + \" and all associated card data?\"}</DialogTitle>\n\t\t\t<DialogContent>\n\t\t\t\t<DialogContentText id=\"alert-dialog-description\">This change can not be undone.</DialogContentText>\n\t\t\t</DialogContent>\n\t\t\t<DialogActions>\n\t\t\t\t<Button onClick={handleClose} color=\"primary\">\n\t\t\t\t\tAbort\n\t\t\t\t</Button>\n\t\t\t\t<Button\n\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\tdispatch(display.actions.deleteDocument(document));\n\t\t\t\t\t\thandleClose();\n\t\t\t\t\t}}\n\t\t\t\t\tcolor=\"primary\"\n\t\t\t\t\tautoFocus\n\t\t\t\t>\n\t\t\t\t\tDelete document and associated card data\n\t\t\t\t</Button>\n\t\t\t</DialogActions>\n\t\t</Dialog>\n\t);\n};\n\n//TODO-NICE: deleting the active document leads only to reset it, not really delete it\nexport const DeleteDocumentButton = ({ document }: { document: string }) => {\n\tconst [open, setOpen] = useState(false);\n\n\tconst handleClose = () => {\n\t\tsetOpen(false);\n\t};\n\treturn (\n\t\t<div>\n\t\t\t<Tooltip\n\t\t\t\ttitle={text.constants.deleteDocumentTooltip}\n\t\t\t\tenterDelay={text.constants.defaultEnterDelay}\n\t\t\t\tenterNextDelay={text.constants.defaultEnterNextDelay}\n\t\t\t>\n\t\t\t\t<IconButton\n\t\t\t\t\ttype=\"button\"\n\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\tsetOpen(true);\n\t\t\t\t\t}}\n\t\t\t\t>\n\t\t\t\t\t<DeleteIcon fontSize=\"small\"></DeleteIcon>\n\t\t\t\t</IconButton>\n\t\t\t</Tooltip>\n\t\t\t<DeleteDocumentDialogAlert document={document} open={open} handleClose={handleClose}></DeleteDocumentDialogAlert>\n\t\t</div>\n\t);\n};\n","import { useDispatch } from \"react-redux\";\nimport React from \"react\";\nimport { IconButton, Tooltip } from \"@material-ui/core\";\nimport ImportContactsIcon from \"@material-ui/icons/ImportContacts\";\nimport { loadSavedDocument } from \"../actions\";\nimport text from \"../../text\";\nexport const LoadDocumentDataButton = ({ document }: { document: string }) => {\n\tconst dispatch = useDispatch();\n\treturn (\n\t\t<Tooltip\n\t\t\ttitle={text.constants.loadSavedDocumentTooltip}\n\t\t\tenterDelay={text.constants.defaultEnterDelay}\n\t\t\tenterNextDelay={text.constants.defaultEnterNextDelay}\n\t\t>\n\t\t\t<IconButton\n\t\t\t\ttype=\"button\"\n\t\t\t\tonClick={() => {\n\t\t\t\t\tdispatch(loadSavedDocument(document));\n\t\t\t\t}}\n\t\t\t>\n\t\t\t\t<ImportContactsIcon fontSize=\"small\"></ImportContactsIcon>\n\t\t\t</IconButton>\n\t\t</Tooltip>\n\t);\n};\n","import { useSelector, useDispatch } from \"react-redux\";\nimport React, { ChangeEvent, Fragment, useRef, MutableRefObject } from \"react\";\nimport { Divider, Menu, MenuItem, IconButton, Typography, Card, Button, Grid } from \"@material-ui/core\";\nimport { changeDocument, downloadDBData } from \"../actions\";\nimport MoreVertIcon from \"@material-ui/icons/MoreVert\";\nimport display from \"../../display\";\nimport db from \"../../db\";\nimport { DocumentData } from \"../../db/model\";\nimport GetAppIcon from \"@material-ui/icons/GetApp\";\nimport PublishIcon from \"@material-ui/icons/Publish\";\nimport InsertDriveFileIcon from \"@material-ui/icons/InsertDriveFile\";\nimport { DeleteDocumentButton } from \"./DeleteDocumentButton\";\nimport { LoadDocumentDataButton } from \"./LoadDocumentDataButton\";\nimport text from \"../../text\";\nimport { incrementer } from \"../../../shared/utils\";\n\n//TODO-NICE: have way to merge two document-workspaces\n\nconst InputDocument = ({ handleClose, label }: any) => {\n\tconst dispatch = useDispatch();\n\n\tconst ref: MutableRefObject<null | HTMLInputElement> = useRef(null);\n\n\treturn (\n\t\t<Fragment>\n\t\t\t<MenuItem\n\t\t\t\tonClick={() => {\n\t\t\t\t\t(ref.current as HTMLInputElement).click();\n\t\t\t\t}}\n\t\t\t>\n\t\t\t\t<Button\n\t\t\t\t\tvariant=\"contained\"\n\t\t\t\t\tcolor=\"primary\"\n\t\t\t\t\tdisableElevation\n\t\t\t\t\tstartIcon={<InsertDriveFileIcon></InsertDriveFileIcon>}\n\t\t\t\t>\n\t\t\t\t\t{label}\n\t\t\t\t</Button>\n\t\t\t</MenuItem>\n\t\t\t<input\n\t\t\t\tref={ref}\n\t\t\t\tstyle={{ display: \"none\" }}\n\t\t\t\tonChange={(event: ChangeEvent<HTMLInputElement>) => {\n\t\t\t\t\tconst files = event.target.files;\n\t\t\t\t\tconst pdf = files ? files[0] : null;\n\t\t\t\t\tif (pdf) {\n\t\t\t\t\t\tdispatch(changeDocument(pdf));\n\t\t\t\t\t}\n\t\t\t\t\thandleClose();\n\t\t\t\t}}\n\t\t\t\ttype=\"file\"\n\t\t\t\taccept=\".pdf\"\n\t\t\t/>\n\t\t</Fragment>\n\t);\n};\n\nconst InputDataSets = ({ handleClose, label }: any) => {\n\tconst dispatch = useDispatch();\n\n\tconst activeDocument = useSelector(display.selectors.getPDFName);\n\n\tconst ref: MutableRefObject<null | HTMLInputElement> = useRef(null);\n\n\treturn (\n\t\t<Fragment>\n\t\t\t<MenuItem\n\t\t\t\tonClick={() => {\n\t\t\t\t\t(ref.current as HTMLInputElement).click();\n\t\t\t\t}}\n\t\t\t>\n\t\t\t\t<Button variant=\"contained\" color=\"primary\" disableElevation startIcon={<PublishIcon></PublishIcon>}>\n\t\t\t\t\t{label}\n\t\t\t\t</Button>\n\t\t\t</MenuItem>\n\t\t\t<input\n\t\t\t\tref={ref}\n\t\t\t\tstyle={{ display: \"none\" }}\n\t\t\t\tonChange={(event: ChangeEvent<HTMLInputElement>) => {\n\t\t\t\t\t// fun fact: uploading a file with the same file-name does not trigger this event\n\n\t\t\t\t\tconst files = event.target.files;\n\t\t\t\t\tconst file = files ? files[0] : null;\n\t\t\t\t\tif (file) {\n\t\t\t\t\t\tconst reader = new FileReader();\n\t\t\t\t\t\treader.readAsText(file);\n\t\t\t\t\t\treader.onload = () => {\n\t\t\t\t\t\t\t//TODO-NICE: sanitize, escape os new line difference, prepare multimedia cards\n\t\t\t\t\t\t\t//TODO-NICE: merge same name-pdfs and think about collision in general\n\t\t\t\t\t\t\t//TODO-NICE: merge uploaded state with current-one and dont overwrite\n\n\t\t\t\t\t\t\tconst uploadedDataSets = JSON.parse(reader.result as string);\n\t\t\t\t\t\t\t// if the uploaded dataset corresponds to the current document, overwrite current with uploaded\n\t\t\t\t\t\t\tconst foundDataSet = (uploadedDataSets as DocumentData[]).find(\n\t\t\t\t\t\t\t\t(dbData) => dbData.name === activeDocument\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\tdispatch(db.actions.loadDocumentDataSets(uploadedDataSets, foundDataSet));\n\t\t\t\t\t\t};\n\t\t\t\t\t}\n\t\t\t\t\thandleClose();\n\t\t\t\t}}\n\t\t\t\ttype=\"file\"\n\t\t\t\taccept=\".txt\"\n\t\t\t/>\n\t\t</Fragment>\n\t);\n};\n\nconst DocumentOptionItem = ({ document }: { document: string }) => {\n\treturn (\n\t\t<Grid container direction=\"row\" justify=\"space-between\" alignItems=\"center\" spacing={1}>\n\t\t\t<Grid item>{document.replace(\".pdf\", \"\")}</Grid>\n\n\t\t\t<Grid item>\n\t\t\t\t<Card variant=\"outlined\">\n\t\t\t\t\t<Grid container direction=\"row\">\n\t\t\t\t\t\t<Grid item>\n\t\t\t\t\t\t\t<LoadDocumentDataButton document={document}></LoadDocumentDataButton>\n\t\t\t\t\t\t</Grid>\n\n\t\t\t\t\t\t<Grid item>\n\t\t\t\t\t\t\t<Divider orientation=\"vertical\"></Divider>\n\t\t\t\t\t\t</Grid>\n\n\t\t\t\t\t\t<Grid item>\n\t\t\t\t\t\t\t<DeleteDocumentButton document={document}></DeleteDocumentButton>\n\t\t\t\t\t\t</Grid>\n\t\t\t\t\t</Grid>\n\t\t\t\t</Card>\n\t\t\t</Grid>\n\t\t</Grid>\n\t);\n};\n\nconst ActiveDocumentOptionItem = ({ document }: { document: string }) => {\n\treturn (\n\t\t<Grid container direction=\"row\" justify=\"space-between\" alignItems=\"center\" spacing={1}>\n\t\t\t<Grid item>{document.replace(\".pdf\", \"\")}</Grid>\n\n\t\t\t<Grid item>\n\t\t\t\t<Card variant=\"outlined\">\n\t\t\t\t\t<DeleteDocumentButton document={document}></DeleteDocumentButton>\n\t\t\t\t</Card>\n\t\t\t</Grid>\n\t\t</Grid>\n\t);\n};\n\nexport const Options = () => {\n\tconst documents = useSelector(db.selectors.getDocumentNames);\n\tconst activeDocument = useSelector(display.selectors.getPDFName);\n\n\tconst [anchorEl, setAnchorEl] = React.useState<null | HTMLElement>(null);\n\n\tconst handleClick = (event: React.MouseEvent<HTMLButtonElement>) => {\n\t\tsetAnchorEl(event.currentTarget);\n\t};\n\n\tconst handleClose = () => {\n\t\tsetAnchorEl(null);\n\t};\n\n\tconst dispatch = useDispatch();\n\n\tconst increment = incrementer();\n\n\treturn (\n\t\t<div>\n\t\t\t<IconButton type=\"button\" onClick={handleClick}>\n\t\t\t\t<MoreVertIcon></MoreVertIcon>\n\t\t\t</IconButton>\n\t\t\t<Menu\n\t\t\t\tid=\"simple-menu\"\n\t\t\t\tanchorEl={anchorEl}\n\t\t\t\tkeepMounted\n\t\t\t\topen={Boolean(anchorEl)}\n\t\t\t\tonClose={handleClose}\n\t\t\t\tMenuListProps={{ style: { paddingLeft: \"8px\", paddingRight: \"8px\" } }}\n\t\t\t>\n\t\t\t\t{activeDocument && [\n\t\t\t\t\t<Typography key={increment()} component={\"span\"} variant=\"h6\">\n\t\t\t\t\t\t{text.constants.activeDocumentText}\n\t\t\t\t\t</Typography>,\n\t\t\t\t\t<ActiveDocumentOptionItem key={increment()} document={activeDocument}></ActiveDocumentOptionItem>,\n\t\t\t\t\t<Divider key={increment()} style={{ marginTop: \"6px\" }}></Divider>,\n\t\t\t\t]}\n\t\t\t\t{documents.filter((doc) => doc !== activeDocument).length > 0 && [\n\t\t\t\t\t<Typography key={increment()} component={\"span\"} variant=\"h6\">\n\t\t\t\t\t\t{text.constants.existingDataText}\n\t\t\t\t\t</Typography>,\n\t\t\t\t\t<Typography key={increment()} component={\"span\"}>\n\t\t\t\t\t\t<ul style={{ listStyleType: \"square\" }}>\n\t\t\t\t\t\t\t{documents.map((document) =>\n\t\t\t\t\t\t\t\tdocument && document !== activeDocument ? (\n\t\t\t\t\t\t\t\t\t<li key={increment()}>\n\t\t\t\t\t\t\t\t\t\t<DocumentOptionItem document={document} key={increment()}></DocumentOptionItem>\n\t\t\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t\t\t) : null\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t</ul>\n\t\t\t\t\t</Typography>,\n\t\t\t\t\t<Divider key={increment()} style={{ marginTop: \"6px\" }} />,\n\t\t\t\t]}\n\t\t\t\t<InputDocument handleClose={handleClose} label={\"Load document\"}></InputDocument>\n\t\t\t\t<Divider />\n\t\t\t\t<MenuItem\n\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\tdispatch(downloadDBData());\n\t\t\t\t\t\thandleClose();\n\t\t\t\t\t}}\n\t\t\t\t>\n\t\t\t\t\t<Button variant=\"contained\" color=\"primary\" disableElevation startIcon={<GetAppIcon></GetAppIcon>}>\n\t\t\t\t\t\t{text.constants.downloadDatasetsText}\n\t\t\t\t\t</Button>\n\t\t\t\t</MenuItem>\n\t\t\t\t<Divider />\n\t\t\t\t<InputDataSets handleClose={handleClose} label={text.constants.uploadDatasetsText}></InputDataSets>\n\t\t\t</Menu>\n\t\t</div>\n\t);\n};\n","import React, { useState } from \"react\";\nimport SearchBar from \"material-ui-search-bar\";\nimport river from \"../../river\";\nimport { useDispatch, useSelector } from \"react-redux\";\n\n//TODO-NICE: make search for PDF (right now this would need some work to find the correct text-node and partially color it)\nexport const CardSearchBar = () => {\n\tconst dispatch = useDispatch();\n\tconst contentFilter = useSelector(river.selectors.getRiverContentFilter);\n\tconst [state, setState] = useState(contentFilter);\n\n\t//TODO-NICE: search in other rivers/same river when composing to show similar cards (like in the Anki Addon)\n\t//TODO-NICE: change the color / border or something to indicate when a filter is active\n\treturn (\n\t\t<SearchBar\n\t\t\tvalue={state}\n\t\t\tplaceholder=\"Search in cards\"\n\t\t\tonChange={(newValue) => {\n\t\t\t\t// reset on delete\n\t\t\t\tif (newValue === \"\") dispatch(river.actions.setContentFilter(\"\"));\n\t\t\t\tsetState(newValue);\n\t\t\t}}\n\t\t\tonCancelSearch={() => {\n\t\t\t\tdispatch(river.actions.setContentFilter(\"\"));\n\t\t\t}}\n\t\t\tonRequestSearch={() => dispatch(river.actions.setContentFilter(state))}\n\t\t/>\n\t);\n};\n","import React from \"react\";\nimport { IconButton, Card, Divider, Grid, Tooltip } from \"@material-ui/core\";\nimport { useDispatch } from \"react-redux\";\nimport UndoIcon from \"@material-ui/icons/Undo\";\nimport RedoIcon from \"@material-ui/icons/Redo\";\nimport { ActionCreators } from \"redux-undo\";\nimport text from \"../../text\";\n\n//TODO-NICE: disable undo/redo buttons if no undo/redo possible, tried custom hook but didnt work,\n// need to check all store-objects which have future/past because they have different undo/redo\n\n// we support undo/redo instead of lengthy confirmation (see The Humane Interface)\nconst UndoButton = () => {\n\tconst dispatch = useDispatch();\n\n\t//tooltip needs non-disabled child component\n\treturn (\n\t\t<Tooltip\n\t\t\ttitle={text.constants.undoTooltip}\n\t\t\tenterDelay={text.constants.defaultEnterDelay}\n\t\t\tenterNextDelay={text.constants.defaultEnterNextDelay}\n\t\t>\n\t\t\t<span>\n\t\t\t\t<IconButton\n\t\t\t\t\ttype=\"button\"\n\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\tdispatch(ActionCreators.undo());\n\t\t\t\t\t}}\n\t\t\t\t>\n\t\t\t\t\t<UndoIcon></UndoIcon>\n\t\t\t\t</IconButton>\n\t\t\t</span>\n\t\t</Tooltip>\n\t);\n};\nconst RedoButton = () => {\n\tconst dispatch = useDispatch();\n\treturn (\n\t\t<Tooltip\n\t\t\ttitle={text.constants.redoTooltip}\n\t\t\tenterDelay={text.constants.defaultEnterDelay}\n\t\t\tenterNextDelay={text.constants.defaultEnterNextDelay}\n\t\t>\n\t\t\t<IconButton\n\t\t\t\ttype=\"button\"\n\t\t\t\tonClick={() => {\n\t\t\t\t\tdispatch(ActionCreators.redo());\n\t\t\t\t}}\n\t\t\t>\n\t\t\t\t<RedoIcon></RedoIcon>\n\t\t\t</IconButton>\n\t\t</Tooltip>\n\t);\n};\n\nexport const UndoRedoCard = () => {\n\treturn (\n\t\t<Card variant=\"outlined\">\n\t\t\t<Grid container direction=\"row\">\n\t\t\t\t<Grid item>\n\t\t\t\t\t<UndoButton></UndoButton>\n\t\t\t\t</Grid>\n\t\t\t\t<Grid item>\n\t\t\t\t\t<Divider orientation=\"vertical\"></Divider>\n\t\t\t\t</Grid>\n\t\t\t\t<Grid item>\n\t\t\t\t\t<RedoButton></RedoButton>\n\t\t\t\t</Grid>\n\t\t\t</Grid>\n\t\t</Card>\n\t);\n};\n","import display from \"../../display\";\nimport focus from \"../../focus\";\nimport river from \"../../river\";\nimport React from \"react\";\nimport { IconButton, Menu, FormControlLabel, Typography, Divider, Grid } from \"@material-ui/core\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport VisibilityIcon from \"@material-ui/icons/Visibility\";\nimport { GreenCheckbox } from \"../../../shared/GreenCheckbox\";\nconst ShowRiverCheckbox = () => {\n\tconst dispatch = useDispatch();\n\tconst riverShowState = useSelector(river.selectors.getRiverShowState);\n\n\treturn (\n\t\t<FormControlLabel\n\t\t\tcontrol={\n\t\t\t\t<GreenCheckbox\n\t\t\t\t\tchecked={riverShowState === \"SHOW\"}\n\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\tdispatch(river.actions.toggleRiverShowState());\n\t\t\t\t\t}}\n\t\t\t\t/>\n\t\t\t}\n\t\t\tlabel=\"River\"\n\t\t/>\n\t);\n};\nconst ShowMaterialCheckbox = () => {\n\tconst dispatch = useDispatch();\n\tconst displayShowState = useSelector(display.selectors.getDisplayStatus);\n\n\treturn (\n\t\t<FormControlLabel\n\t\t\tcontrol={\n\t\t\t\t<GreenCheckbox\n\t\t\t\t\tchecked={displayShowState === \"SHOW\"}\n\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\tdispatch(display.actions.toggleDisplayState());\n\t\t\t\t\t}}\n\t\t\t\t/>\n\t\t\t}\n\t\t\tlabel=\"Material\"\n\t\t/>\n\t);\n};\nexport const ShowHideButton = () => {\n\tconst [anchorEl, setAnchorEl] = React.useState<null | HTMLElement>(null);\n\n\tconst handleClick = (event: React.MouseEvent<HTMLButtonElement>) => {\n\t\tsetAnchorEl(event.currentTarget);\n\t};\n\n\tconst handleClose = () => {\n\t\tsetAnchorEl(null);\n\t};\n\n\tconst displayFocus = useSelector(focus.selectors.getDisplayFocus);\n\n\treturn (\n\t\t<div>\n\t\t\t<IconButton type=\"button\" onClick={handleClick}>\n\t\t\t\t<VisibilityIcon></VisibilityIcon>\n\t\t\t</IconButton>\n\t\t\t<Menu anchorEl={anchorEl} keepMounted open={Boolean(anchorEl)} onClose={handleClose}>\n\t\t\t\t<Typography>Show:</Typography>\n\t\t\t\t<Divider></Divider>\n\t\t\t\t<Grid container direction=\"row\">\n\t\t\t\t\t<Grid item>\n\t\t\t\t\t\t<river.components.RiverContentFormGroup></river.components.RiverContentFormGroup>\n\t\t\t\t\t</Grid>\n\t\t\t\t\t<Grid item>\n\t\t\t\t\t\t<Divider orientation=\"vertical\"></Divider>\n\t\t\t\t\t</Grid>\n\t\t\t\t\t<Grid item>\n\t\t\t\t\t\t{displayFocus === \"ACTIVE_RIVER\" && (\n\t\t\t\t\t\t\t<Grid container direction=\"column\">\n\t\t\t\t\t\t\t\t<Grid item>\n\t\t\t\t\t\t\t\t\t<ShowRiverCheckbox></ShowRiverCheckbox>\n\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t\t<Grid item>\n\t\t\t\t\t\t\t\t\t<ShowMaterialCheckbox></ShowMaterialCheckbox>\n\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t)}\n\t\t\t\t\t</Grid>\n\t\t\t\t</Grid>\n\t\t\t</Menu>\n\t\t</div>\n\t);\n};\n","import display from \"../../display\";\nimport focus from \"../../focus\";\nimport React, { ChangeEvent } from \"react\";\nimport { AppBar, Toolbar, Tabs, Tab, Grid, Card, Typography, Tooltip } from \"@material-ui/core\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { Options } from \"./Options\";\nimport { CardSearchBar } from \"./CardSearchBar\";\nimport { UndoRedoCard } from \"./UndoRedoButtons\";\nimport { ShowHideButton } from \"./ShowHideButton\";\nimport text from \"../../text\";\n\n//TODO-NICE: download/load csv for Anki\nexport const ControlBar = () => {\n\tconst dispatch = useDispatch();\n\tconst displayFocus = useSelector(focus.selectors.getDisplayFocus);\n\n\tconst value = displayFocus === \"ACTIVE_RIVER\" ? 0 : 1;\n\n\tconst handleChange = (_: ChangeEvent<{}>, newValue: number) => {\n\t\tdispatch(\n\t\t\tnewValue === 0\n\t\t\t\t? focus.actions.updateDisplayFocus(\"ACTIVE_RIVER\")\n\t\t\t\t: focus.actions.updateDisplayFocus(\"SUMMARY_RIVER\")\n\t\t);\n\t};\n\n\tconst materialName = useSelector(display.selectors.getPDFName);\n\n\treturn (\n\t\t<Grid item>\n\t\t\t<display.components.PageKeyboardControl>\n\t\t\t\t<AppBar>\n\t\t\t\t\t<Toolbar variant=\"regular\">\n\t\t\t\t\t\t<Grid item>\n\t\t\t\t\t\t\t<Grid container spacing={1} direction=\"row\" alignItems=\"center\" justify=\"flex-start\">\n\t\t\t\t\t\t\t\t<Grid item style={{ width: \"15%\" }}>\n\t\t\t\t\t\t\t\t\t<display.components.PageChooser></display.components.PageChooser>\n\t\t\t\t\t\t\t\t</Grid>\n\n\t\t\t\t\t\t\t\t<Grid item>\n\t\t\t\t\t\t\t\t\t<display.components.PageNavigation></display.components.PageNavigation>\n\t\t\t\t\t\t\t\t</Grid>\n\n\t\t\t\t\t\t\t\t<Grid item>\n\t\t\t\t\t\t\t\t\t<Card variant=\"outlined\">\n\t\t\t\t\t\t\t\t\t\t<Tabs value={value} onChange={handleChange}>\n\t\t\t\t\t\t\t\t\t\t\t<Tab\n\t\t\t\t\t\t\t\t\t\t\t\tlabel={\n\t\t\t\t\t\t\t\t\t\t\t\t\t<Tooltip\n\t\t\t\t\t\t\t\t\t\t\t\t\t\ttitle={text.constants.switchToActiveRiverTooltip}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tenterDelay={text.constants.defaultEnterDelay}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tenterNextDelay={500}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tdisableFocusListener={true}\n\t\t\t\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span>ActiveRiver</span>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</Tooltip>\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t></Tab>\n\t\t\t\t\t\t\t\t\t\t\t<Tab\n\t\t\t\t\t\t\t\t\t\t\t\tlabel={\n\t\t\t\t\t\t\t\t\t\t\t\t\t<Tooltip\n\t\t\t\t\t\t\t\t\t\t\t\t\t\ttitle={text.constants.switchToSummaryRiverTooltip}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tenterDelay={text.constants.defaultEnterDelay}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tenterNextDelay={500}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tdisableFocusListener={true}\n\t\t\t\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span>SummaryRiver</span>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</Tooltip>\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t</Tabs>\n\t\t\t\t\t\t\t\t\t</Card>\n\t\t\t\t\t\t\t\t</Grid>\n\n\t\t\t\t\t\t\t\t<Grid item>\n\t\t\t\t\t\t\t\t\t<UndoRedoCard></UndoRedoCard>\n\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t</Grid>\n\n\t\t\t\t\t\t<Typography style={{ flexGrow: 1 }}>{materialName?.replace(\".pdf\", \"\")}</Typography>\n\n\t\t\t\t\t\t<CardSearchBar></CardSearchBar>\n\t\t\t\t\t\t<ShowHideButton></ShowHideButton>\n\t\t\t\t\t\t<Options></Options>\n\t\t\t\t\t</Toolbar>\n\t\t\t\t</AppBar>\n\t\t\t</display.components.PageKeyboardControl>\n\t\t</Grid>\n\t);\n};\n","import * as actions from \"./actions\";\nimport * as components from \"./components\";\nimport * as selectors from \"./selectors\";\n\nexport default { actions, components, selectors };\n","import React from \"react\";\nimport Grid from \"@material-ui/core/Grid\";\nimport display from \"../modules/display\";\nimport focus from \"../modules/focus\";\nimport { useSelector } from \"react-redux\";\nimport river from \"../modules/river\";\n\nexport const ActiveRiverView = () => {\n\tconst displayFocus = useSelector(focus.selectors.getDisplayFocus);\n\tconst showMaterial = useSelector(display.selectors.displayStatusIsShow);\n\tconst showRiver = useSelector(river.selectors.riverShowStateIsShow);\n\treturn (\n\t\t<Grid item hidden={displayFocus !== \"ACTIVE_RIVER\"}>\n\t\t\t<Grid container justify=\"space-around\" direction=\"row\" alignItems=\"stretch\">\n\t\t\t\t<Grid\n\t\t\t\t\titem\n\t\t\t\t\tstyle={{\n\t\t\t\t\t\twidth: \"38%\",\n\t\t\t\t\t}}\n\t\t\t\t\thidden={!showRiver}\n\t\t\t\t>\n\t\t\t\t\t<river.components.ActiveCardRiver></river.components.ActiveCardRiver>\n\t\t\t\t</Grid>\n\t\t\t\t<display.components.MaterialDisplayColumnWithSize\n\t\t\t\t\thidden={!showMaterial}\n\t\t\t\t></display.components.MaterialDisplayColumnWithSize>\n\t\t\t</Grid>\n\t\t</Grid>\n\t);\n};\n","import React from \"react\";\nimport Grid from \"@material-ui/core/Grid\";\nimport focus from \"../modules/focus\";\nimport { useSelector } from \"react-redux\";\nimport river from \"../modules/river\";\n\n//TODO-NICE: dont show empty rivers in summary, make dropdown/create empty river button\n\nexport const SummaryRiverView = () => {\n\tconst displayFocus = useSelector(focus.selectors.getDisplayFocus);\n\n\treturn (\n\t\t<Grid item hidden={displayFocus !== \"SUMMARY_RIVER\"}>\n\t\t\t<river.components.SummaryRiver></river.components.SummaryRiver>\n\t\t</Grid>\n\t);\n};\n","import React from \"react\";\nimport Grid from \"@material-ui/core/Grid\";\nimport control from \"../modules/control\";\nimport creation from \"../modules/extraction\";\nimport { makeStyles, Theme, createStyles, useScrollTrigger, Zoom, Toolbar, Fab } from \"@material-ui/core\";\nimport KeyboardArrowUpIcon from \"@material-ui/icons/KeyboardArrowUp\";\nimport selection from \"../modules/selection\";\nimport { ActiveRiverView } from \"./ActiveRiverView\";\nimport { SummaryRiverView } from \"./SummaryRiverView\";\n\n//TODO: make show/hide depdendant on tab, also Page choice, control-bar dependant on tab\n\nconst useStyles = makeStyles((theme: Theme) =>\n\tcreateStyles({\n\t\troot: {\n\t\t\tposition: \"fixed\",\n\t\t\tbottom: theme.spacing(2),\n\t\t\tright: theme.spacing(2),\n\t\t},\n\t})\n);\n\nfunction ScrollTop(props: any) {\n\tconst { children } = props;\n\tconst classes = useStyles();\n\tconst trigger = useScrollTrigger({\n\t\tdisableHysteresis: true,\n\t\tthreshold: 100,\n\t});\n\n\tconst handleClick = (event: React.MouseEvent<HTMLDivElement>) => {\n\t\tconst anchor = ((event.target as HTMLDivElement).ownerDocument || document).querySelector(\"#back-to-top-anchor\");\n\n\t\tif (anchor) {\n\t\t\tanchor.scrollIntoView({ behavior: \"smooth\", block: \"center\" });\n\t\t}\n\t};\n\n\treturn (\n\t\t<Zoom in={trigger}>\n\t\t\t<div onClick={handleClick} role=\"presentation\" className={classes.root}>\n\t\t\t\t{children}\n\t\t\t</div>\n\t\t</Zoom>\n\t);\n}\n\nexport function ReaderScene() {\n\treturn (\n\t\t<div>\n\t\t\t<control.components.ControlContainer></control.components.ControlContainer>\n\t\t\t<Grid container justify=\"center\" direction=\"column\" alignItems=\"stretch\" spacing={1}>\n\t\t\t\t<control.components.ControlBar></control.components.ControlBar>\n\t\t\t\t<Toolbar id=\"back-to-top-anchor\" />\n\n\t\t\t\t<ActiveRiverView></ActiveRiverView>\n\t\t\t\t<SummaryRiverView></SummaryRiverView>\n\t\t\t</Grid>\n\t\t\t<ScrollTop>\n\t\t\t\t<Fab color=\"secondary\" size=\"small\" aria-label=\"scroll back to top\">\n\t\t\t\t\t<KeyboardArrowUpIcon />\n\t\t\t\t</Fab>\n\t\t\t</ScrollTop>\n\t\t\t<creation.components.ContextMenuContainer></creation.components.ContextMenuContainer>\n\t\t\t<selection.components.SelectionSnackbar></selection.components.SelectionSnackbar>\n\t\t</div>\n\t);\n}\n","import storage from \"redux-persist/lib/storage\"; // defaults to localStorage for web\nimport { createTransform } from \"redux-persist\";\nimport { CreationData } from \"./modules/extraction/model\";\nimport { createRef } from \"react\";\nimport extraction from \"./modules/extraction\";\nimport { DisplayData, DisplayStatus, PerPageSpans } from \"./modules/display/model\";\nimport display from \"./modules/display\";\nimport { SelectionData } from \"./modules/selection/model\";\nimport selection from \"./modules/selection\";\n\n// to get the correct object with reselect, I added .present to all getAll that belong do undoable modules\n\nconst removeDOMObjectsFromCreationData = (inboundState: CreationData) => {\n\treturn {\n\t\t...inboundState,\n\t\tmenuRef: null,\n\t\tfullCardRef: null,\n\t\tqaRefs: inboundState.qaRefs.map((_) => null),\n\t};\n};\n\nconst addDOMObjectsToCreationData = (outboundState: {\n\topen: boolean;\n\tmenuRef: null;\n\tfullCardRef: null;\n\tqaRefs: null[];\n}): CreationData => {\n\treturn {\n\t\t...outboundState,\n\t\tmenuRef: createRef(),\n\t\tfullCardRef: createRef(),\n\t\tqaRefs: outboundState.qaRefs.map((_) => createRef()),\n\t};\n};\n\nconst extractionTransform = createTransform(\n\t(inboundState: { future: CreationData[]; past: CreationData[]; present: CreationData }) => {\n\t\treturn {\n\t\t\t...inboundState,\n\t\t\tfuture: inboundState.future.map(removeDOMObjectsFromCreationData),\n\t\t\tpast: inboundState.past.map(removeDOMObjectsFromCreationData),\n\t\t\tpresent: removeDOMObjectsFromCreationData(inboundState.present),\n\t\t};\n\t},\n\t(outboundState): { future: CreationData[]; past: CreationData[]; present: CreationData } => {\n\t\treturn {\n\t\t\t...outboundState,\n\t\t\tfuture: outboundState.future.map(addDOMObjectsToCreationData),\n\t\t\tpast: outboundState.past.map(addDOMObjectsToCreationData),\n\t\t\tpresent: addDOMObjectsToCreationData(outboundState.present),\n\t\t};\n\t},\n\t{ whitelist: [extraction.constants.NAME] }\n);\n\n//TODO-NICE: find way to save PDF in browser, maybe manually use indexeddb and use that in transform?\n// idea: make store-field pdfAsBase64 and use thunk for async-filling the field, then when reloading, use thunk to format\n// const reader = new FileReaderSync();\n\n// function readFileAsync(file: File) {\n// \treturn new Promise((resolve) => {\n// \t\treader.onload = () => {\n// \t\t\tresolve(reader.result);\n// \t\t};\n// \t\treader.onerror = () => resolve(null);\n\n// \t\treader.readAsDataURL(file);\n// \t});\n// }\n\nconst removeDOMObjectsFromDisplayData = (inboundState: DisplayData) => {\n\tlet pdf = null;\n\t// if (inboundState.pdf) {\n\t// \tpdf = await readFileAsync(inboundState.pdf);\n\t// }\n\tconst result = { ...inboundState, documentRef: null, materialData: null, pdf };\n\treturn result;\n};\n\n//TODO-NICE: create persistable type for the state in model\n\nconst addDOMObjectsToDisplayData = (outboundState: {\n\tpdf: null;\n\tpdfName?: string;\n\tdisplayStatus: DisplayStatus;\n\tcurrentPage: number;\n\ttotalPages: number;\n\t//TODO-NICE:might need amount of spans per page for validation? if yes, use this\n\tpageSpans: PerPageSpans;\n\tdocumentRef: null;\n\tzoomQueue: number | null;\n\tmaterialData: null;\n}): DisplayData => {\n\treturn {\n\t\t...outboundState,\n\t\tpdf: undefined,\n\t\tdocumentRef: createRef(),\n\t\tmaterialData: { materialDataTimeStamp: -Infinity },\n\t};\n};\n\nconst displayTransform = createTransform(\n\t(inboundState: DisplayData) => {\n\t\treturn removeDOMObjectsFromDisplayData(inboundState);\n\t},\n\t(outboundState): DisplayData => {\n\t\treturn addDOMObjectsToDisplayData(outboundState);\n\t},\n\t{ whitelist: [display.constants.NAME] }\n);\n\n// for selection we just use the initialState and dont persist future/past\nconst selectionTransform = createTransform(\n\t(inboundState: { future: SelectionData[]; past: SelectionData[]; present: SelectionData }) => {\n\t\treturn {\n\t\t\t...inboundState,\n\t\t\tfuture: [],\n\t\t\tpast: [],\n\t\t\tpresent: {\n\t\t\t\tmanuallySelectedString: \"\",\n\t\t\t\tselectedParentSpan: null,\n\t\t\t\tselectionPosition: { x: 0, y: 0 },\n\t\t\t\tsourceCard: null,\n\t\t\t},\n\t\t};\n\t},\n\t(outboundState): { future: SelectionData[]; past: SelectionData[]; present: SelectionData } => {\n\t\treturn outboundState;\n\t},\n\t{ whitelist: [selection.constants.NAME] }\n);\n\nexport const persistConfig = {\n\tkey: \"root\",\n\tstorage,\n\ttransforms: [extractionTransform, displayTransform, selectionTransform],\n};\n","import { createStore } from \"redux\";\nimport { applyMiddleware } from \"redux\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport thunk from \"redux-thunk\";\nimport { combineReducers } from \"redux\";\nimport focus from \"./modules/focus\";\nimport creation from \"./modules/extraction\";\nimport river from \"./modules/river\";\nimport display from \"./modules/display\";\nimport cards from \"./modules/cards\";\nimport { persistStore, persistReducer } from \"redux-persist\";\nimport undoable, { includeAction } from \"redux-undo\";\nimport { persistConfig } from \"./persist\";\nimport db from \"./modules/db\";\nimport selection from \"./modules/selection\";\n\n//TODO-NICE: make limit for undo (right now its fine, if we reset on document-upload)\n//TODO-NICE: make snackbar for which action is undone/redone\n//TODO-NICE: this undo-buisness is not very transparent, I just list each action that is state-relevant and not view, make action list in constants.ts?\n\n//TODO-NICE: can undo selected-string but then the source-card might still be set\n// I think this is not a problem, because then when something else is selected the old-source-Card is overwritten\n// but not as clean as it could be\n\nconst rootReducer = combineReducers({\n\t[focus.constants.NAME]: focus.reducer,\n\t[selection.constants.NAME]: undoable(selection.reducer, {\n\t\tfilter: includeAction([selection.actionTypes.SELECTED_STRING]),\n\t}),\n\t[creation.constants.NAME]: undoable(creation.reducer, {\n\t\tfilter: includeAction([cards.actionTypes.CARD_PUSH]),\n\t}),\n\t[river.constants.NAME]: undoable(river.reducer, {\n\t\tfilter: includeAction([\n\t\t\tcards.actionTypes.CARD_PUSH,\n\t\t\tcards.actionTypes.CARD_REMOVE,\n\t\t\tdb.actionTypes.LOAD_DOCUMENT_DATA_SETS,\n\t\t]),\n\t}),\n\t[display.constants.NAME]: display.reducer,\n\t[cards.constants.NAME]: undoable(cards.reducer, {\n\t\tfilter: includeAction([\n\t\t\tdb.actionTypes.LOAD_DOCUMENT_DATA_SETS,\n\t\t\tcards.actionTypes.CARD_PUSH,\n\t\t\tcards.actionTypes.CARD_UPDATE,\n\t\t\tcards.actionTypes.CARD_REMOVE,\n\t\t\t//this needs to be here, because we use display it to the user with the grab-icon\n\t\t\tcards.actionTypes.CARD_GOAL,\n\t\t]),\n\t}),\n\t[db.constants.NAME]: undoable(db.reducer, {\n\t\tfilter: includeAction([db.actionTypes.LOAD_DOCUMENT_DATA_SETS]),\n\t}),\n});\n\nconst stateSanitizer = (state: any) => {\n\treturn state.displayData.pdf ? { ...state, displayData: { ...state.displayData, pdf: \"PDF_FILE_IS_HERE\" } } : state;\n};\n\nconst persistedReducer = persistReducer(persistConfig, rootReducer);\n\nconst composeEnhancers = composeWithDevTools({ stateSanitizer });\nconst enhancer = composeEnhancers(applyMiddleware(thunk));\n\nexport const store = createStore(persistedReducer, enhancer);\n\nexport const persistor = persistStore(store);\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { ReaderScene } from \"./scenes/ReaderScene\";\nimport { Provider } from \"react-redux\";\nimport { store, persistor } from \"./store\";\nimport { PersistGate } from \"redux-persist/es/integration/react\";\n// Load Roboto typeface\nrequire(\"typeface-roboto\");\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<Provider store={store}>\n\t\t\t<PersistGate loading={null} persistor={persistor}>\n\t\t\t\t<ReaderScene></ReaderScene>\n\t\t\t</PersistGate>\n\t\t</Provider>\n\t</React.StrictMode>,\n\tdocument.getElementById(\"root\")\n);\n"],"sourceRoot":""}