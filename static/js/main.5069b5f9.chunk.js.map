{"version":3,"sources":["shared/utils.ts","modules/display/constants.ts","modules/display/actionTypes.ts","modules/display/model.ts","modules/display/selectors.ts","modules/display/actions.ts","modules/text/constants.ts","modules/text/components/NewNoteCardTooltip.tsx","modules/text/components/AddQAButtonTooltip.tsx","modules/text/components/DeleteCardButtonTooltip.tsx","modules/text/components/AppendButtonTooltip.tsx","modules/text/index.ts","modules/display/components/NavigationButtons.tsx","modules/display/components/PageChooser/PageChooser.tsx","modules/display/components/PDFDocument/PageKeyboardControl.tsx","modules/river/constants.ts","modules/cards/constants.ts","modules/cards/actionTypes.ts","modules/cards/model/permutation.ts","modules/cards/model/content.ts","modules/cards/model/config.ts","modules/cards/selectors.ts","modules/cards/actions.ts","modules/cards/model/payload.ts","modules/cards/components/AddNoteButton.tsx","modules/cards/components/AddQAButton.tsx","modules/cards/components/DeleteCardButton.tsx","modules/cards/model/origin.ts","modules/cards/model/state.ts","modules/db/constants.ts","modules/db/actionTypes.ts","modules/db/actions.ts","modules/db/model.ts","modules/db/reducer.ts","modules/db/selectors.ts","modules/db/index.ts","modules/cards/reducer.ts","modules/cards/index.ts","modules/river/selectors.ts","modules/river/actionTypes.ts","modules/river/actions.ts","shared/GreenCheckbox.tsx","modules/river/components/RiverContentFormGroup.tsx","modules/selection/constants.ts","modules/selection/actionTypes.ts","modules/selection/selectors.ts","modules/selection/services/use-selection.ts","modules/selection/model.ts","modules/selection/services/get-selection.ts","modules/selection/actions.ts","modules/selection/reducer.ts","modules/selection/components/SelectionSnackbar.tsx","modules/selection/components/MaterialMouseUp.tsx","modules/selection/components/CardMouseUp.tsx","modules/selection/components/AppendButton.tsx","modules/selection/components/ContextMenu.tsx","modules/selection/index.ts","modules/river/components/CardRiver/Cards/ClayCardField.tsx","modules/river/components/CardRiver/Cards/JumpToOriginButton.tsx","modules/river/components/CardRiver/Cards/ClayCardFieldButtons.tsx","modules/river/components/CardRiver/Cards/QACard.tsx","modules/river/components/CardRiver/Cards/NoteCard.tsx","modules/river/components/CardRiver/Cards/ClayCard.tsx","modules/river/components/CardRiver/toCardGridItemsWithDividers.tsx","modules/river/components/CardRiver/CardRiver.tsx","modules/river/components/SwitchActiveRiver.tsx","modules/river/model.ts","modules/river/reducer.ts","modules/river/index.ts","modules/display/components/PDFDocument/PageSpanControl.tsx","modules/display/components/PDFDocument/PDFPage.tsx","modules/display/components/PDFDocument/RiverMaterialPair.tsx","modules/display/components/PDFDocument/PageScrollControl.tsx","modules/display/components/PDFDocument/RiverMaterialPairList.tsx","modules/display/components/PDFDocument/PDFDocument.tsx","modules/display/components/PDFDocument/cachePageDimensions.tsx","modules/display/components/PDFDocument/WindowMeasurer.tsx","modules/display/reducer.ts","modules/display/index.ts","modules/control/selectors.ts","modules/control/actions.ts","modules/control/components/Options/DeleteDocumentButton.tsx","modules/control/components/Options/InputDataSets.tsx","modules/control/components/Options/InputDocument.tsx","modules/control/components/Options/LoadDocumentDataButton.tsx","modules/control/components/Options/DocumentOptionItem.tsx","modules/control/components/Options/Options.tsx","modules/control/components/ClayMemorySearchBar.tsx","modules/control/components/UndoRedoButtons.tsx","modules/control/components/ShowHideButton.tsx","modules/control/components/ControlBar.tsx","modules/control/index.ts","scene/ReaderScene.tsx","persist.ts","store.ts","index.tsx"],"names":["keyMap","NAME","PDF_UPLOADED","MATERIAL_LOADED","DISPLAY_STATUS","PAGE_UPDATE","SPAN_ORIGIN","DOCUMENT_SEARCH","WINDOW_LAYOUT","pageCorrections","newPage","totalPages","getAll","state","getPDF","createSelector","pdf","getWindowMeasurements","windowMeasurements","getPDFName","pdfName","getTotalPages","getCurrentPage","currentPage","getScrollToPage","scrollToPage","getPageControlData","getDisplayStatus","displayStatus","displayStatusIsShow","status","getSpanOrigin","spanOrigin","getDocumentSearch","documentSearch","incrementer","counter","curCounter","widthPixels","type","t","payload","pdfUpload","materialLoaded","setPage","page","shouldScroll","movePage","dispatch","getState","nextPage","previousPage","pageControlKeyMap","ArrowLeft","ArrowRight","pageControlDispatcher","event","action","key","preventDefault","toggleDisplayState","displayState","setSpanOrigin","origin","resetSpanOrigin","setDocumentSearch","search","resetDocumentSearch","switchToActiveRiverTooltip","switchToSummaryRiverTooltip","undoTooltip","redoTooltip","nextPageTooltip","previousPageTooltip","deleteCardTooltip","grabForCardTooltip","jumpToOriginTooltip","appendToCardTooltip","newQACardTooltip","newNoteCardTooltip","deleteDocumentTooltip","loadSavedDocumentTooltip","noMaterialText","loadingMaterialText","activeDocumentText","existingDataText","loadMaterialText","downloadDatasetsText","uploadDatasetsText","noteText","questionText","answerText","defaultEnterDelay","defaultEnterNextDelay","NewNoteCardTooltip","children","Tooltip","title","enterDelay","enterNextDelay","AddQAButtonTooltip","DeleteCardButtonTooltip","AppendButtonTooltip","components","constants","PreviousButton","useDispatch","text","IconButton","onClick","NextButton","PageNavigation","Card","variant","Grid","container","direction","item","Divider","orientation","nonDigitRegEx","PageChooser","useSelector","useState","error","value","toString","userInput","setState","alignItems","justify","style","width","TextField","inputProps","padding","fontSize","fontFamily","fontWeight","lineHeight","letterSpacing","onKeyDown","submittedValue","target","parseInt","onChange","possiblePage","trim","match","asInt","validatePageChoice","Typography","PageKeyboardControl","ref","useRef","tabIndex","CARD_REPLACE","CARD_PUSH","CARD_REMOVE","FieldValueAccessorMap","note","cardObject","q","a","toFieldValue","field","FieldValueModifierMap","modify","createReplace","inputValue","_","changeCardObject","spec","inputField","inputObject","createModify","modifyFieldValue","fieldToBeChanged","objectToBeChanged","emptyQAContent","EmptyContentMap","emptyContent","noteContentIsEmpty","content","qaContentIsNotFull","UpdateTypeCreateModifyMap","APPEND","oldValue","REPLACE","updateTypeToCreateModify","updateType","strToCardContent","contentStr","outputField","existingContent","changeSpec","strToNewCardContent","empty","cardIDToNumber","cardID","nextCardID","lastCardIDNumber","CardIsFullMap","Note","config","cardIsNotFull","strToCardConfig","baseCard","changedContent","CardFieldToTypeMap","cardFieldToType","present","getLastCardIDNumber","getCards","cards","getCardByID","cardPush","cardPayload","emptyNoteCard","emptyQACard","cardReplace","card","replaceCardFieldContent","cardField","cardConfig","newValue","removeCard","AddNoteButton","AddQAButton","DeleteCardButton","emptyQAOrigin","EmptyOriginMap","emptyOrigin","singleOriginToCardOrigin","singleOrigin","baseOrigin","removeCardFromCardsState","replaceCardsInCardsState","updateCardInCards","toBeUpdated","cardObj","addCardToCards","ARCHIVE_CURRENT_DATA","LOAD_DOCUMENT_DATA_SETS","DELETE_DOCUMENT_DATA_SET","DOCUMENT_CHANGE","archiveDBData","dbData","loadDocumentDataSets","newActiveDataSet","deleteDocumentDataSet","document","updateDocumentDataInDocumentDB","documentData","name","updateDocumentDataSetsInDocumentDB","documentDataSets","reduce","prev","removeDocumentDataFromDocumentDB","Object","fromEntries","entries","filter","arr","initialState","documentDB","getDocumentNames","db","keys","getDocumentDataSets","values","actions","actionTypes","reducer","selectors","intialState","goalCard","model","getRiverMakeUps","riverMakeUps","getActiveRiverMakeUpID","activeRiverMakeUpID","getActiveRiverMakeUp","makeUps","id","makeUp","cardIDs","getActiveRiverCardIDs","getActiveRiverCards","makeUpCardIDs","map","getRiverShowState","riverShowState","riverShowStateIsShow","getLastRiverIDNumber","lastRiverIDNumber","getRiverContentState","riverContentState","getRiverContentFilter","contentFilter","getOriginRequest","requestedOrigin","RIVER_ACTIVE_ID","RIVER_SHOW_STATE","RIVER_CONTENT_STATE","RIVER_CONTENT_FILTER","ORIGIN_REQUEST","toggleRiverShowState","setRiverContentState","setActiveRiver","trySetActiveRiver","console","log","setContentFilter","resetContentFilter","setOriginRequest","resetOriginRequest","GreenCheckbox","withStyles","root","color","green","checked","props","Checkbox","RiverContentFormGroup","showQAs","showNotes","changeContentState","clickedState","FormGroup","FormControlLabel","control","label","SELECTION_SOURCE","SELECTION_GOAL","getGoalConfig","goalConfig","getSourceConfig","sourceConfig","sourceConfigExists","selectionToCard","goalIsCreation","inputOrigin","contentOrigin","undefined","selectionConfigToCardPayload","existingCard","selectionConfigToActualizedCardConfig","getSelectionWorkaround","selection","window","getSelection","activeElement","str","substring","selectionStart","selectionEnd","selStr","e","getSelectionSourceFromMaterial","selectionData","selectedParent","focusNode","parentNode","nodeName","divTextLayerParent","spanChildren","Array","from","length","index","indexOf","spanIndex","materialSelectionDataToSourceConfig","resetSelectionSource","resetSelectionGoal","addSelectionSource","setSelectionSource","addMaterialSelectionSource","addCardSelectionSource","getSelectionSourceFromCard","addSelectionGoal","setSelectionGoal","addCardAppendSelectionGoal","SelectionSnackbar","open","setOpen","handleDismiss","message","escPress","useEffect","addEventListener","removeEventListener","Snackbar","anchorOrigin","vertical","horizontal","onClose","reason","size","aria-label","MaterialMouseUp","onMouseUp","materialSelectionSourceAction","CardFieldMouseUp","fieldOrigin","cardSelectionSourceAction","AppendButton","outlined","setOutlined","isGoal","ContextMenu","menuPosition","setMenuPosition","shouldClose","useCallback","current","querySelector","contains","contextMenuContainsTargetNode","doesSourceConfigExists","shouldOpen","left","x","top","y","openState","Menu","keepMounted","anchorReference","anchorPosition","MenuItem","services","ClayCardField","storeValue","saveChanges","rest","mutableValue","InputProps","disableUnderline","minWidth","multiline","onBlur","JumpToOriginButton","cardOrigin","ClayCardFieldButtons","Paper","permutation","QACard","elevation","spacing","backgroundColor","InputLabelProps","NoteCard","ClayCard","riverID","GridItemDivider","CardRiver","materialHeight","cardConfigs","riverMakeUp","riverCards","gridItems","useMemo","inputCards","noteConfig","includes","noteContainsContentFilter","qaConfig","qaContainsContentFilter","increment","currentCard","push","toCardGridItemsWithDividers","Accordion","defaultExpanded","overflowY","maxHeight","AccordionSummary","align","MozUserSelect","WebkitUserSelect","msUserSelect","AccordionDetails","SwitchActiveRiver","onMouseEnter","pageNumberToRiverMakeUpID","riverMakeUpIDToPageNumber","replace","emptyCardRiver","updateStateWithMakeUps","updatedState","forEach","removeCardFromRivers","entry","PageSpanControl","pageRef","count","trier","intervalID","setInterval","clearInterval","textLayer","originSpan","scrollIntoView","behavior","block","inline","backgroundStyle","makeTextRenderer","searchText","textItem","pattern","textLength","patternLength","markedPattern","slice1","slice","result","secondIndex","slice2Start","slice2","thirdIndex","slice3Start","slice3","stringRest","splitText","split","spliter","highlightPattern","PDFPage","pageNumber","materialWidth","textRenderer","inputRef","instance","MaterialMultiplier","onRenderSuccess","customTextRenderer","RiverMaterialPair","data","river","materialHeights","get","PageScrollControl","listRef","scrollToItem","RiverMaterialPairList","pdfProxyRef","cachedPageDimensions","set","windowWidth","pageDims","pixelPerUserSpaceUnit","calculateMaterialHeight","Map","height","itemCount","numPages","itemSize","itemData","onItemsRendered","visibleStopIndex","pdfjs","GlobalWorkerOptions","workerSrc","version","options","cMapUrl","cMapPacked","PDFDocument","setPageDimensions","pdfNameRef","loading","noData","file","renderMode","onLoadSuccess","pdfProxy","promises","i","getPage","Promise","all","then","pages","pageDimensions","w","view","h","_pageIndex","cachePageDimensions","onItemClick","WindowMeasurer","measure","debounce","currentWidth","innerWidth","currentHeight","innerHeight","useLayoutEffect","collectCurrentDBData","display","archiveCurrentDBData","fileDownload","require","downloadDBData","localString","Date","toLocaleString","JSON","stringify","changeDocument","newPDFName","currentPDFName","newDocumentData","ActionCreators","clearHistory","loadSavedDocument","deleteDocument","activeDocument","DeleteDocumentDialogAlert","handleClose","Dialog","aria-labelledby","aria-describedby","DialogTitle","DialogContent","DialogContentText","DialogActions","Button","autoFocus","DeleteDocumentButton","InputDataSets","click","disableElevation","startIcon","files","reader","FileReader","readAsText","onload","uploadedDataSets","parse","foundDataSet","find","accept","InputDocument","LoadDocumentDataButton","DocumentOptionItemButtonRow","DocumentOptionItem","ActiveDocumentOptionItem","Options","documents","doc","React","anchorEl","setAnchorEl","currentTarget","Boolean","MenuListProps","paddingLeft","paddingRight","component","marginTop","listStyleType","ClayMemorySearchBar","searchFocus","setSearchFocus","onCancelSearchCards","onCancelSearchDocument","onCancelSearch","onRequestSearch","Select","native","chosenFocus","placeholder","cancelOnEscape","UndoButton","undo","RedoButton","redo","UndoRedoCard","ShowRiverCheckbox","ShowMaterialCheckbox","displayShowState","ShowHideButton","ControlBar","materialName","AppBar","Toolbar","flexGrow","ReaderScene","displayTransform","createTransform","inboundState","documentRef","materialData","removeDOMObjectsFromDisplayData","outboundState","addDOMObjectsToDisplayData","whitelist","removeContentFilter","riverTransform","future","past","persistConfig","storage","transforms","rootReducer","combineReducers","undoable","includeAction","persistedReducer","persistReducer","enhancer","composeWithDevTools","stateSanitizer","displayData","composeEnhancers","applyMiddleware","thunk","store","createStore","persistor","persistStore","ReactDOM","render","StrictMode","getElementById"],"mappings":"kpSAe0CA,E,0CCf7BC,EAAO,cCEPC,EAAeD,EAAO,gBACtBE,EAAkBF,EAAO,mBAEzBG,EAAiBH,EAAO,kBAExBI,EAAcJ,EAAO,eACrBK,EAAcL,EAAO,eACrBM,EAAkBN,EAAO,mBAEzBO,EAAgBP,EAAO,iBCOvBQ,EACP,SAACC,EAAiBC,GAAlB,OAA0CD,IAAYC,EAAa,EAAI,EAAID,GADpED,GAEJ,SAACC,EAAiBC,GAAlB,OAAsD,IAAZD,EAAgBC,EAAaD,G,SChBnEE,GAAS,SAACC,GAAD,OAA6BA,EAAMZ,IAE5Ca,GAASC,aAAeH,IAAQ,SAACC,GAAD,OAAwBA,EAAMG,OAE9DC,GAAwBF,aAAeH,IAAQ,SAACC,GAAD,OAAWA,EAAMK,sBAEhEC,GAAaJ,aAAeH,IAAQ,SAACC,GAAD,OAAWA,EAAMO,WAErDC,GAAgBN,aAAeH,IAAQ,SAACC,GAAD,OAAwBA,EAAMF,cAErEW,GAAiBP,aAAeH,IAAQ,SAACC,GAAD,OAAwBA,EAAMU,eAEtEC,GAAkBT,aAAeH,IAAQ,SAACC,GAAD,OAAWA,EAAMY,gBAE1DC,GAAqBX,aAAeM,GAAeC,IAAgB,SAACX,EAAYY,GAC5F,MAAO,CAAEA,cAAaZ,iBAGVgB,GAAmBZ,aAAeH,IAAQ,SAACC,GAAD,OAAwBA,EAAMe,iBAExEC,GAAsBd,aAAeY,IAAkB,SAACG,GAAD,MAAuB,SAAXA,KAEnEC,GAAgBhB,aAAeH,IAAQ,SAACC,GAAD,OAAWA,EAAMmB,cAExDC,GAAoBlB,aAAeH,IAAQ,SAACC,GAAD,OAAWA,EAAMqB,kBJ1B5DC,GAAc,WAC1B,IAAIC,EAAU,EACd,OAAO,WACN,IAAMC,EAAaD,EAEnB,OADAA,IACOC,IKAIC,GAAc,SAACpB,GAC3B,MAAO,CAAEqB,KAAMC,EAAiBC,QAASvB,IAG7BwB,GAAY,SAAC1B,GACzB,MAAO,CAAEuB,KAAMC,EAAgBC,QAASzB,IAG5B2B,GAAiB,SAAChC,GAC9B,MAAO,CAAE4B,KAAMC,EAAmBC,QAAS9B,IAG/BiC,GAAU,SAACC,EAAcC,GACrC,MAAO,CAAEP,KAAMC,EAAeC,QAAS,CAAEI,OAAMC,kBAGnCC,GAAW,SAACR,GACxB,OAAO,SAACS,EAAoBC,GAAwB,IAAD,EACdvB,GAAmBuB,KAA/C1B,EAD0C,EAC1CA,YAAaZ,EAD6B,EAC7BA,WACrB,OAAQ4B,GACP,IAAK,OACJS,EAASJ,GAAQnC,EAAuBc,EAAc,EAAGZ,IAAa,IACtE,MACD,IAAK,WACJqC,EAASJ,GAAQnC,GAA0Bc,EAAc,EAAGZ,IAAa,OAKhEuC,GAAW,kBAAMH,GAAS,SAC1BI,GAAe,kBAAMJ,GAAS,aACrCK,GAAkC,CACvCC,UAAWF,KACXG,WAAYJ,MAEAK,IL3B6BvD,EK2BqBoD,GL3BwB,SACtFI,EACAR,GAEA,IAAMS,EAASzD,EAAOwD,EAAME,KACxBD,IACHD,EAAMG,iBACNX,EAASS,MKsBEG,GAAqB,WACjC,OAAO,SAACZ,EAAoBC,GAC3B,IAAMY,EAAgD,SAAjClC,GAAiBsB,KAAyB,OAAS,OAExED,EAAS,CAAET,KAAMC,EAAkBC,QAASoB,MAIjCC,GAAgB,SAACC,GAC7B,MAAO,CAAExB,KAAMC,EAAeC,QAASsB,IAG3BC,GAAkB,WAC9B,OAAOF,GAAc,OAGTG,GAAoB,SAACC,GACjC,MAAO,CAAE3B,KAAMC,EAAmBC,QAASyB,IAG/BC,GAAsB,WAClC,OAAOF,GAAkB,K,0FC/DbG,GAA6B,kCAC7BC,GAA8B,mCAE9BC,GAAc,mBACdC,GAAc,mBAEdC,GAAkB,YAClBC,GAAsB,gBAEtBC,GAAoB,mBACpBC,GAAqB,6DACrBC,GAAsB,yCACtBC,GAAsB,sEAEtBC,GAAmB,qBACnBC,GAAqB,uBAErBC,GAAwB,uDACxBC,GAA2B,sCAI3BC,GAAiB,yBACjBC,GAAsB,oBAEtBC,GAAqB,mBACrBC,GAAmB,yCACnBC,GAAmB,gBACnBC,GAAuB,6BACvBC,GAAqB,2BAErBC,GAAW,OACXC,GAAe,WACfC,GAAa,SAIbC,GAAoB,IACpBC,GAAwB,ICpCxBC,GAAqB,SAAC,GAA8C,IAA5CC,EAA2C,EAA3CA,SACpC,OACC,kBAACC,GAAA,EAAD,CAASC,MAAOlB,GAAoBmB,WAAYN,GAAmBO,eAAgBN,IACjFE,ICHSK,GAAqB,SAAC,GAA8C,IAA5CL,EAA2C,EAA3CA,SACpC,OACC,kBAACC,GAAA,EAAD,CAASC,MAAOnB,GAAkBoB,WAAYN,GAAmBO,eAAgBN,IAC/EE,ICHSM,GAA0B,SAAC,GAA8C,IAA5CN,EAA2C,EAA3CA,SACzC,OACC,kBAACC,GAAA,EAAD,CAASC,MAAOvB,GAAmBwB,WAAYN,GAAmBO,eAAgBN,IAChFE,ICHSO,GAAsB,SAAC,GAA8C,IAA5CP,EAA2C,EAA3CA,SACrC,OACC,kBAACC,GAAA,EAAD,CAASC,MAAOpB,GAAqBqB,WAAYN,GAAmBO,eAAgBN,IAClFE,ICJW,IAAEQ,aAAYC,aCKvBC,GAAiB,WACtB,IAAMzD,EAAW0D,eACjB,OACC,kBAACV,GAAA,EAAD,CACCC,MAAOU,GAAKH,UAAU/B,oBACtByB,WAAYS,GAAKH,UAAUZ,kBAC3BO,eAAgBQ,GAAKH,UAAUX,uBAE/B,kBAACe,GAAA,EAAD,CACCrE,KAAK,SACLsE,QAAS,WACR7D,EAASG,QAGV,kBAAC,KAAD,SAME2D,GAAa,WAClB,IAAM9D,EAAW0D,eACjB,OACC,kBAACV,GAAA,EAAD,CACCC,MAAOU,GAAKH,UAAUhC,gBACtB0B,WAAYS,GAAKH,UAAUZ,kBAC3BO,eAAgBQ,GAAKH,UAAUX,uBAE/B,kBAACe,GAAA,EAAD,CACCrE,KAAK,SACLsE,QAAS,WACR7D,EAASE,QAGV,kBAAC,KAAD,SAMS6D,GAAiB,WAC7B,OACC,kBAACC,GAAA,EAAD,CAAMC,QAAQ,YACb,kBAACC,EAAA,EAAD,CAAMC,WAAS,EAACC,UAAU,OACzB,kBAACF,EAAA,EAAD,CAAMG,MAAI,GACT,kBAAC,GAAD,OAED,kBAACH,EAAA,EAAD,CAAMG,MAAI,GACT,kBAACC,GAAA,EAAD,CAASC,YAAY,cAEtB,kBAACL,EAAA,EAAD,CAAMG,MAAI,GACT,kBAAC,GAAD,U,qCCrDCG,GAAgB,OAWTC,GAAc,WAC1B,IAAMzE,EAAW0D,eADe,EAEIgB,aAAYhG,IAAxCH,EAFwB,EAExBA,YAAaZ,EAFW,EAEXA,WAFW,EAINgH,mBAAS,CAClCC,OAAO,EACPC,MAAK,OAAEtG,QAAF,IAAEA,OAAF,EAAEA,EAAauG,WACpBC,UAAS,OAAExG,QAAF,IAAEA,OAAF,EAAEA,EAAauG,aAPO,oBAIzBjH,EAJyB,KAIlBmH,EAJkB,KAgBhC,OAJInH,EAAMgH,QAAUtG,EAAYuG,YAC/BE,EAAS,CAAEJ,OAAO,EAAOC,MAAOtG,EAAYuG,WAAYC,UAAWxG,EAAYuG,aAI/E,kBAACd,GAAA,EAAD,CAAMC,QAAQ,YACb,kBAACC,EAAA,EAAD,CAAMG,MAAI,GACT,kBAACH,EAAA,EAAD,CAAMC,WAAS,EAACC,UAAU,MAAMa,WAAW,SAASC,QAAQ,iBAC3D,kBAAChB,EAAA,EAAD,CAAMG,MAAI,EAACc,MAAO,CAAEC,MAAO,QAC1B,kBAACC,GAAA,EAAD,CACCC,WAAY,CACXH,MAAO,CACNI,QAAS,MAETC,SAAU,UACVC,WAAY,4CACZC,WAAY,IACZC,WAAY,IACZC,cAAe,aAGjBrG,KAAK,OACL0E,QAAQ,SACRY,MAAOhH,EAAMkH,UACbc,UAAW,SAACrF,GACX,GAAkB,UAAdA,EAAME,IAAiB,CAC1BF,EAAMG,iBACN,IAAMmF,EAAkBtF,EAAMuF,OAA2BlB,MACpDhH,EAAM+G,OACV5E,EAASJ,GAAQoG,SAASF,IAAiB,MAI9CG,SAAU,SAACzF,GACV,IAAMsF,EAAkBtF,EAAMuF,OAA+BlB,OAvDnC,SAACqB,EAAsBvI,GACxD,GAAqB,KAAjBuI,GAAoE,OAA7CA,EAAaC,OAAOC,MAAM5B,IAAyB,OAAO,EAErF,IAAM6B,EAAQL,SAASE,GACvB,QAAIG,EAAQ,GAAK1I,EAAa0I,GAoDnBC,CAAmBR,EAAgBnI,GAGtCqH,EAAS,6BAAKnH,GAAN,IAAa+G,OAAO,EAAMG,UAAWe,KAF7Cd,EAAS,6BAAKnH,GAAN,IAAa+G,OAAO,EAAOG,UAAWe,MAKhDlB,MAAO/G,EAAM+G,SAIf,kBAACV,EAAA,EAAD,CAAMG,MAAI,EAACc,MAAO,CAAEC,MAAO,QAC1B,kBAACmB,GAAA,EAAD,CAAYtC,QAAQ,MAApB,MAA6BtG,QCpEtB6I,GAAsB,SAAC,GAA2C,IAAzCzD,EAAwC,EAAxCA,SAC/B/C,EAAW0D,eACX+C,EAAiDC,iBAAO,MAE9D,OACC,0BACCD,IAAKA,EACLZ,UAAW,SAACrF,GACXD,GAAsBC,EAAOR,IAE9B2G,SAAU,GAET5D,I,6CCnBS9F,GAAO,iB,oBCAPA,GAAO,QCEP2J,GAAe3J,GAAO,gBACtB4J,GAAY5J,GAAO,aACnB6J,GAAc7J,GAAO,eCK5B8J,GAAmF,CACxFC,KAAM,SAACC,GAAD,OAAgBA,GACtBC,EAAG,SAACD,GAAD,OAAiBA,EAAwBC,GAC5CC,EAAG,SAACF,GAAD,OAAiBA,EAAwBE,IAEhCC,GAAe,SAACC,EAAkBJ,GAAnB,OAA8CF,GAAsBM,GAAOJ,IAGjGK,GAAiG,CACtGN,KAAM,SAACC,EAAYM,GAAb,OAAwBA,EAAON,IACrCC,EAAG,SAACD,EAAYM,GACf,OAAO,6BAAMN,GAAb,IAAsCC,EAAGK,EAAQN,EAAwBC,MAE1EC,EAAG,SAACF,EAAYM,GACf,OAAO,6BAAMN,GAAb,IAAsCE,EAAGI,EAAQN,EAAwBE,OAS9DK,GAA8B,SAACC,GAAD,OAAqB,SAACC,GAAD,OAAYD,IAS/DE,GAAmB,SAACC,GAChC,IAAMH,EAAaL,GAAaQ,EAAKC,WAAYD,EAAKE,aAChDP,EAASK,EAAKG,aAAaN,GACjC,OAlBwB,SAACJ,EAAkBJ,EAAwBM,GAA3C,OACxBD,GAAsBD,GAAOJ,EAAYM,GAiBlCS,CAAiBJ,EAAKK,iBAAkBL,EAAKM,kBAAmBX,IC9BlEY,GAAiB,WACtB,MAAO,CAAEjB,EAAG,GAAIC,EAAG,KAEdiB,GAAgE,CACrElB,EAAGiB,GACHhB,EAAGgB,GACHnB,KAAM,iBAAM,KAEAqB,GAAe,SAAChB,GAC5B,OAAOe,GAAgBf,MAGXiB,GAAqB,SAACC,GAAD,MAAiC,KAAZA,GAC1CC,GAAqB,SAACD,GAAD,MACA,KAAhCA,EAA0BrB,GAA6C,KAAhCqB,EAA0BpB,GAG7DsB,GAA0E,CAC/EC,OAFqC,SAACjB,GAAD,OAAwB,SAACkB,GAAD,OAAsBA,EAAWlB,IAG9FmB,QAASpB,IAEJqB,GAA2B,SAACC,GAAD,OAA4BL,GAA0BK,IAM1EC,GAAmB,SAC/BC,EACAC,EACAH,EACAI,GAEA,IAAMC,EAAa,CAClBrB,YAAakB,EACbnB,WAV4B,OAW5BI,iBAAkBgB,EAClBf,kBAAmBgB,EACnBnB,aAAcc,GAAyBC,IAExC,OAAOnB,GAAiBwB,IAGZC,GAAsB,SAACJ,EAAoBC,GAEvD,IAAMI,EAAQhB,GAAaY,GAC3B,OAAOF,GAAiBC,EAAYC,EAAa,UAAWI,ICjDhDC,GAAiB,SAACC,GAAD,OAAoBvD,SAASuD,IAC9CC,GAAa,SAACC,GAAD,OAA+BA,EAAmB,GAAG3E,YAOzE4E,GAAyE,CAC9EC,KAAM,SAACC,GAAD,OAAYtB,GAAmBsB,EAAOrB,UAC5C,MAAO,SAACqB,GAAD,OAAYpB,GAAmBoB,EAAOrB,WAEjCsB,GAAgB,SAACD,GAAD,OAAwBF,GAAcE,EAAOrK,MAAMqK,IAMnEE,GAAkB,SAC9Bd,EACAC,EACAH,EACAiB,GAEA,IAAMC,EAAiBjB,GAAiBC,EAAYC,EAAaH,EAAYiB,EAASxB,SACtF,OAAO,6BAAKwB,GAAZ,IAAsBxB,QAASyB,KAG1BC,GAAyD,CAC9D/C,EAAG,MACHC,EAAG,MACHH,KAAM,QAGMkD,GAAkB,SAAC7C,GAAD,OAAsB4C,GAAmB5C,ICzC3DzJ,GAAS,SAACC,GAAD,OAAgBA,EAAMZ,IAAMkN,SAErCC,GAAsBrM,aAAeH,IAAQ,SAACC,GAAD,OAAWA,EAAM4L,oBAE9DY,GAAWtM,aAAeH,IAAQ,SAACC,GAAD,OAAuBA,EAAMyM,SAE/DC,GAAc,SAAC1M,EAAY0L,GAAb,OAAgCc,GAASxM,GAAO0L,ICJ9DiB,GAAW,SAACC,GACxB,OAAO,SAACzK,EAAoBC,GCyBU,IAACR,EAAsB5B,EDxB5DmC,EAAS,CACRT,KAAMC,GACNC,SCsBqCA,EDtBJgL,ECsB0B5M,EDtBboC,ICuBzC,6BAAKR,GAAZ,IAAqB8J,OAAQC,GAAWY,GAAoBvM,WDnBhD6M,GAAgB,kBAAMF,GCP3B,CAAEjL,KAAM,OAAQgJ,QAAS,MDQpBoC,GAAc,kBAAMH,GCLzB,CAAEjL,KAAM,MAAOgJ,QAAS,CAAErB,EAAG,GAAIC,EAAG,ODO/ByD,GAAc,SAACC,GAC3B,MAAO,CAAEtL,KAAMC,GAAgBC,QAASoL,IAE5BC,GAA0B,SAACC,EAAsBC,EAAwBC,GACrF,OAAOL,GAAYd,GAAgBmB,EAAUF,EAAW,UAAWC,KAGvDE,GAAa,SAAC3B,GAC1B,MAAO,CAAEhK,KAAMC,GAAeC,QAAS8J,I,qBElB3B4B,GAAgB,WAC5B,IAAMnL,EAAW0D,eACjB,OACC,kBAAC,GAAKH,WAAWT,mBAAjB,KACC,kBAACc,GAAA,EAAD,CACCrE,KAAK,SACLsE,QAAS,WACR7D,EAAS0K,QAGV,kBAAC,KAAD,S,qBCVSU,GAAc,WAC1B,IAAMpL,EAAW0D,eACjB,OACC,kBAAC,GAAKH,WAAWH,mBAAjB,KACC,kBAACQ,GAAA,EAAD,CACCrE,KAAK,SACLsE,QAAS,WACR7D,EAAS2K,QAGV,kBAAC,KAAD,S,qBCPSU,GAAmB,SAAC,GAAoC,IAAlC9B,EAAiC,EAAjCA,OAC5BvJ,EAAW0D,eACjB,OACC,kBAAC,GAAKH,WAAWF,wBAAjB,KACC,kBAACO,GAAA,EAAD,CACCrE,KAAK,SACLsE,QAAS,WACR7D,EAASkL,GAAW3B,MAGrB,kBAAC,KAAD,CAAmB/D,SAAS,aCb1B8F,GAAgB,WACrB,MAAO,CAAEpE,EAAG,GAAIC,EAAG,KAGdoE,GAA8D,CACnErE,EAAGoE,GACHnE,EAAGmE,GACHtE,KAAM,iBAAM,KAEAwE,GAAc,SAACnE,GAC3B,OAAOkE,GAAelE,MAOVoE,GAA2B,SACvCC,EACAzC,EACA0C,GAEA,IAAMxC,EAAa,CAClBrB,YAAa4D,EACb7D,WAAY,OACZI,iBAAkBgB,EAClBf,kBAAmByD,GAA0BH,GAAYvC,GACzDlB,aAAcP,IAGf,OAAOG,GAAiBwB,IC7BZyC,GAA2B,SAAC/N,EAAmB0L,GAC3D,IAAMe,EAAK,gBAAQzM,EAAMyM,OAKzB,cAFOA,EAAMf,GAEN,6BAAK1L,GAAZ,IAAmByM,WAEPuB,GAA2B,SAAChO,EAAmByM,EAAcb,GACzE,OAAO,6BACH5L,GADJ,IAECyM,QACAb,sBAGWqC,GAAoB,SAACxB,EAAcyB,GAC/C,IAAMC,EAAO,gBAAQ1B,GAErB,OADA0B,EAAQD,EAAYxC,QAAUwC,EACvBC,GAEKC,GAAiBH,GC5BjB7O,GAAO,aCEPiP,GAAuBjP,GAAO,wBAC9BkP,GAA0BlP,GAAO,2BACjCmP,GAA2BnP,GAAO,4BAClCoP,GAAkBpP,GAAO,mBCFzBqP,GAAgB,SAACC,GAC7B,MAAO,CAAEhN,KAAMC,GAAwBC,QAAS8M,IAGpCC,GAAuB,SAACD,EAAwBE,GAC5D,MAAO,CAAElN,KAAMC,GAA2BC,QAAS,CAAE8M,SAAQE,sBAKjDC,GAAwB,SAACC,GACrC,MAAO,CAAEpN,KAAMC,GAA4BC,QAASkN,I,SCIxCC,GAAiC,SAAC/O,EAAmBgP,GACjE,OAAO,6BAAKhP,GAAZ,mBAAoBgP,EAAaC,KAAOD,KAG5BE,GAAqC,SAAClP,EAAmBmP,GACrE,OAAO,6BACHnP,GACAmP,EAAiBC,QAAO,SAACC,EAAMX,GAEjC,OADAW,EAAKX,EAAOO,MAAQP,EACbW,IACL,MAIQC,GAAmC,SAACtP,EAAmB8O,GACnE,OAAOS,OAAOC,YAAYD,OAAOE,QAAQzP,GAAO0P,QAAO,SAACC,GAAD,OAASA,EAAI,KAAOb,OCxBtEc,GAA2B,GAwBlBC,GApBI,WAGD,IAFjB7P,EAEgB,uDAFR4P,GAEQ,yCADdlO,EACc,EADdA,KAAME,EACQ,EADRA,QAER,OAAQF,GAEP,KAAKC,GACJ,OAAOoN,GAA+B/O,EAAO4B,GAC9C,KAAKD,GACJ,OAAOuN,GACNlP,EACC4B,EAAuC8M,QAE1C,KAAK/M,GACJ,OAAO2N,GAAiCtP,EAAO4B,GAChD,QACC,OAAO5B,ICzBGD,GAAS,SAACC,GAAD,OAA4BA,EAAMZ,IAAMkN,SAEjDwD,GAAmB5P,aAAeH,IAAQ,SAACgQ,GAAD,OAAQR,OAAOS,KAAKD,MAE9DE,GAAsB/P,aAAeH,IAAQ,SAACgQ,GAAD,OAAQR,OAAOW,OAAOH,MCFjE,IAAEI,UAASC,cAAazK,YAAW0K,WAASC,aCMrDC,GAA0B,CAC/B9D,MAAO,CACN,EAAK,CACJf,OAAQ,IACRhK,KAAM,MACNgJ,QAAS,CAAErB,EAAG,+BAAgCC,EAAG,OAElD,EAAK,CACJoC,OAAQ,IACRhK,KAAM,MACNgJ,QAAS,CAAErB,EAAG,kCAAmCC,EAAG,OAErD,EAAK,CAAEoC,OAAQ,IAAKhK,KAAM,OAAQgJ,QAAS,cAE5CkB,iBAAkB,GClBJ,IAAEjG,YAAWyK,cAAaD,UAASE,QDqBpC,WAA8E,IAA7ErQ,EAA4E,uDAApEuQ,GAAoE,yCAArD7O,EAAqD,EAArDA,KAAME,EAA+C,EAA/CA,QAC3C,OAAQF,GACP,KAAKC,GACJ,IAAMiK,EAAmBH,GAAe7J,EAAQ8J,QAAU,EAC1D,OAAO,6BAAK1L,GAAZ,IAAmByM,MAAO2B,GAAepO,EAAMyM,MAAO7K,GAAUgK,qBACjE,KAAKjK,GAGJ,IAAM6O,EAAW,KAEjB,OAAO,6BAAKxQ,GAAZ,IAAmByM,MAAOwB,GAAkBjO,EAAMyM,MAAO7K,GAAU4O,aACpE,KAAK7O,GACJ,OAAOoM,GAAyB/N,EAAO4B,GACxC,KAAKmO,GAAGK,YAAY5B,gBACnB,OAAI5M,EACIoM,GACNuC,GACC3O,EAAyB6K,MACzB7K,EAAyBgK,kBAGpB2E,GAET,KAAKR,GAAGK,YAAY9B,wBAInB,OAAI1M,EAAQgN,iBACJZ,GACNuC,GACC3O,EAAyB6K,MACzB7K,EAAyBgK,kBAGpB5L,EAET,QACC,OAAOA,IC1DiDsQ,YAAW5K,aAAY+K,SCFrE1Q,GAAS,SAACC,GAAD,OAAgCA,EAAMZ,IAAMkN,SAErDoE,GAAkBxQ,aAAeH,IAAQ,SAACC,GAAD,OAA2BA,EAAM2Q,gBAE1EC,GAAyB1Q,aAAeH,IAAQ,SAACC,GAAD,OAA2BA,EAAM6Q,uBAEjFC,GAAuB5Q,aAAewQ,GAAiBE,IAAwB,SAACG,EAASC,GACrG,IAAMC,EAASF,EAAQC,GACvB,OAAOC,GAAkB,CAAEC,QAAS,OAGxBC,GAAwBjR,aAAe4Q,IAAsB,SAACG,GAAD,OAAsBA,EAAOC,WAE1FE,GAAsBlR,aAClCiR,GACA1E,GAAM6D,UAAU9D,UAChB,SAAC6E,EAAe5E,GAAhB,OAA0B4E,EAAcC,KAAI,SAACN,GAAD,OAAQvE,EAAMuE,SAG9CO,GAAoBrR,aAAeH,IAAQ,SAACC,GAAD,OAA2BA,EAAMwR,kBAE5EC,GAAuBvR,aAAeqR,IAAmB,SAACvR,GAAD,MAAqB,SAAVA,KAEpE0R,GAAuBxR,aAAeH,IAAQ,SAACC,GAAD,OAA2BA,EAAM2R,qBAE/EC,GAAuB1R,aAAeH,IAAQ,SAACC,GAAD,OAA2BA,EAAM6R,qBAE/EC,GAAwB5R,aAAeH,IAAQ,SAACC,GAAD,OAA2BA,EAAM+R,iBAEhFC,GAAmB9R,aAAeH,IAAQ,SAACC,GAAD,OAAWA,EAAMiS,mBCjC3DC,GAAkB9S,GAAO,mBAEzB+S,GAAmB/S,GAAO,oBAC1BgT,GAAsBhT,GAAO,uBAC7BiT,GAAuBjT,GAAO,wBAE9BkT,GAAiBlT,GAAO,kBCFxBmT,GAAuB,kBAAM,SAACpQ,EAAoBC,GAC9DD,EAAS,CAAET,KAAMC,GAAoBC,QAAS6P,GAAqBrP,KAAc,OAAS,WAG9EoQ,GAAuB,SAACxS,GACpC,MAAO,CAAE0B,KAAMC,GAAuBC,QAAS5B,IAGnCyS,GAAiB,SAACzB,GAC9B,MAAO,CAAEtP,KAAMC,GAAmBC,QAASoP,IAG/B0B,GAAoB,SAAC1B,GACjC,OAAO,SAAC7O,EAAoBC,GAC3BuQ,QAAQC,IAAI5B,EAAIJ,GAAuBxO,OAAgB4O,GACnDJ,GAAuBxO,OAAgB4O,GAAI7O,EAASsQ,GAAezB,MAI5D6B,GAAmB,SAACnD,GAChC,MAAO,CAAEhO,KAAMC,GAAwBC,QAAS8N,IAGpCoD,GAAqB,WACjC,MAAO,CAAEpR,KAAMC,GAAwBC,QAAS,KAGpCmR,GAAmB,SAAC7P,GAChC,MAAO,CAAExB,KAAMC,GAAkBC,QAASsB,IAG9B8P,GAAqB,WACjC,OAAOD,GAAiB,O,2BCnCZE,GAAgBC,aAAW,CACvCC,KAAM,CACLC,MAAOC,KAAM,KACb,YAAa,CACZD,MAAOC,KAAM,OAGfC,QAAS,IAPmBJ,EAQ1B,SAACK,GAAD,OAA0B,kBAACC,GAAA,EAAD,eAAUJ,MAAM,WAAcG,OCH9CE,GAAwB,WACpC,IAAM5B,EAAoBhL,aAAY+K,IAChCzP,EAAW0D,eAEX6N,EAAgC,QAAtB7B,GAAqD,QAAtBA,EACzC8B,EAAkC,QAAtB9B,GAAqD,UAAtBA,EAE3C+B,EAAqB,SAACC,GACtBH,GAA4B,QAAjBG,EASXF,GAA8B,UAAjBE,EASdH,GAA4B,QAAjBG,EAIb1R,EAASqQ,GAHLmB,EAG0B,QAFA,SAO5BA,GAA8B,UAAjBE,GAIf1R,EAASqQ,GAHLkB,EAG0B,MAFA,SAlB9BvR,EAASqQ,GADNkB,EAC2B,MAEA,UAX9BvR,EAASqQ,GADNmB,EAC2B,MAEA,SAiCjC,OACC,kBAACG,GAAA,EAAD,KACC,kBAACC,GAAA,EAAD,CACCC,QACC,kBAACf,GAAD,CACCK,QAASI,EACT1N,QAAS,WACR4N,EAAmB,UAItBK,MAAM,QAEP,kBAACF,GAAA,EAAD,CACCC,QACC,kBAACf,GAAD,CACCK,QAASK,EACT3N,QAAS,WACR4N,EAAmB,YAItBK,MAAM,Y,wCC3EG7U,GAAO,gBCCP8U,GAAmB9U,GAAO,oBAC1B+U,GAAiB/U,GAAO,kBCExBW,GAAS,SAACC,GAAD,OAA+BA,EAAMZ,IAAMkN,SAEpD8H,GAAgBlU,aAAeH,IAAQ,SAACC,GAAD,OAAWA,EAAMqU,cACxDC,GAAkBpU,aAAeH,IAAQ,SAACC,GAAD,OAAWA,EAAMuU,gBAE1DC,GAAqBtU,aAAeoU,IAAiB,SAACvI,GAAD,QAAcA,KC8BnE0I,GAAkB,SAC9BF,EACAF,EACAlS,EACAnC,GAGA,GCtC6B,SAACqU,GAG9B,SADoBA,EAAmC3I,ODmCpCgJ,CAAeL,GAClB,CACf,IAAMzH,EA1C6B,SAAC2H,EAAqCF,GAC1E,IAAMM,EAAcJ,EAAaK,cAC3BhL,EAAa2K,EAAapJ,WAE1BC,EAAciJ,EAAWnH,UAE/B,MAAO,CACNxL,KAAM+K,GAAMgE,MAAM1E,OAAOM,gBAAgBjB,GACzCV,QAAS+B,GAAMgE,MAAM/F,QAAQa,oBAAoB3B,EAAYwB,GAC7DlI,OAAQyR,EAAclI,GAAMgE,MAAMvN,OAAO0K,yBAAyB+G,EAAavJ,QAAeyJ,GAiC7DC,CAA6BP,EAAcF,GAC5ElS,EAASsK,GAAM0D,QAAQxD,SAASC,QAC1B,CACN,IAAMO,EAhCsC,SAC7CoH,EACAF,EACArU,GAEA,IAAM+U,EAAetI,GAAM6D,UAAU5D,YAAY1M,EAAOqU,EAAW3I,QAE7DiJ,EAAcJ,EAAaK,cAC3BhL,EAAa2K,EAAapJ,WAE1BC,EAAciJ,EAAWnH,UAE/B,OAAO,6BACH6H,GADJ,IAECrK,QAAS+B,GAAMgE,MAAM/F,QAAQQ,iBAAiBtB,EAAYwB,EAAaiJ,EAAWpJ,WAAY8J,EAAarK,SAC3GxH,OAAQyR,EACLlI,GAAMgE,MAAMvN,OAAO0K,yBAAyB+G,EAAavJ,EAAa2J,EAAa7R,QACnF6R,EAAa7R,SAeG8R,CAClBT,EACAF,EACArU,GAEDmC,EAASsK,GAAM0D,QAAQpD,YAAYI,MElDxB8H,GAAyB,WACrC,IAAMC,EAAYC,OAAOC,eAEzB,IAAKF,EAAW,OAAO,KAEvB,IACC,IAAIG,EAAgBvG,SAASuG,cAC7B,GAAIA,GAAkBA,EAAmCrO,MAAO,CAE/D,IAAMsO,EAAOD,EAAmCrO,MAAMuO,UACpDF,EAAmCG,eACnCH,EAAmCI,cAGrC,MAAY,KAARH,EAAmB,KAEhB,CAAExP,KAAMwP,EAAKJ,aAEpB,IAAMQ,EAASR,EAAUjO,WAEzB,MAAe,KAAXyO,EAAsB,KAEnB,CAAE5P,KAAM4P,EAAQR,aAEvB,MAAOS,GACR,OAAO,OA2BIC,GAAiC,SAAC5T,GAC9C,IAAM6T,EAAgBZ,KACtB,QAAKY,GAzBsC,SAC3CA,EACA7T,GACoC,IAAD,EAK7B8T,EAAc,UAAGD,EAAcX,UAAUa,iBAA3B,aAAG,EAAmCC,WAC1D,IAAOF,GAA8C,SAA5BA,EAAeG,SAAqB,OAAO,EAEpE,IAAMC,EAAqBJ,EAAeE,WAC1C,IAAOE,GAAsD,QAAhCA,EAAmBD,SAAoB,OAAO,EAE3E,IAAME,EAAeC,MAAMC,KAAKH,EAAmBhR,UACnD,GAA4B,IAAxBiR,EAAaG,OAAc,OAAO,EAEtC,IAAMC,EAAQJ,EAAaK,QAAQV,GACnC,QAAIS,EAAQ,IAEL,CAAEpL,WAAY0K,EAAc/P,KAAM8O,cAAe,CAAE6B,UAAWF,EAAOvU,SAOrE0U,CAAoCb,EAAe7T,IChD9C2U,GAAuB,WACnC,MAAO,CAAEjV,KAAMC,GAAoBC,QAAS,OAKhCgV,GAAqB,WACjC,MAAO,CAAElV,KAAMC,GAAkBC,QAAS,OAI9BiV,GAAqB,SAAC9K,GAClC,OAAO,SAAC5J,EAAoBC,GAC3B,IAAMpC,EAAQoC,IACRiS,EAAaD,GAAcpU,GAC5BqU,GAILI,GAAgB1I,EAAQsI,EAAmClS,EAAUnC,GACrEmC,EAASyU,OAJRzU,EAnBwB,SAAC4J,GAC3B,MAAO,CAAErK,KAAMC,GAAoBC,QAASmK,GAkBjC+K,CAAmB/K,MAQlBgL,GAA6B,SAAC/U,GAC1C,IAAMuS,EAAeqB,GAA+B5T,GACpD,QAAIuS,GACIsC,GAAmBtC,IAKfyC,GAAyB,SAACpC,GACtC,IAAML,EDkBmC,SAACK,GAC1C,IAAMiB,EAAgBZ,KACtB,QAAKY,GAEE,CAAE1K,WAAY0K,EAAc/P,KAAM8O,iBCtBpBqC,CAA2BrC,GAChD,QAAIL,GACIsC,GAAmBtC,IAKf2C,GAAmB,SAACnL,GAChC,OAAO,SAAC5J,EAAoBC,GAC3B,IAAMpC,EAAQoC,IACRmS,EAAeD,GAAgBtU,GAChCuU,GAILE,GAAgBF,EAAuCxI,EAAQ5J,EAAUnC,GACzEmC,EAASwU,OAJRxU,EA1CsB,SAAC4J,GACzB,MAAO,CAAErK,KAAMC,GAAkBC,QAASmK,GAyC/BoL,CAAiBpL,MAQhBqL,GAA6B,SAAC1L,EAAgBwB,GAE1D,OAAOgK,GADyC,CAAExL,SAAQwB,YAAWjC,WAAY,YChE5E2E,GAA8B,CACnC2E,aAAc,KACdF,WAAY,MAcEwB,GAXO,WAA6F,IAA5F7V,EAA2F,uDAAnF4P,GAAmF,yCAAnElO,EAAmE,EAAnEA,KAAME,EAA6D,EAA7DA,QACpD,OAAQF,GACP,KAAKC,GACJ,OAAO,6BAAK3B,GAAZ,IAAmBuU,aAAc3S,IAClC,KAAKD,GACJ,OAAO,6BAAK3B,GAAZ,IAAmBqU,WAAYzS,IAChC,QACC,OAAO5B,I,+BCRGqX,GAAoB,WAAO,IAAD,EACdvQ,oBAAS,GADK,oBAC/BwQ,EAD+B,KACzBC,EADyB,KAEhCpV,EAAW0D,eACX0O,EAAe1N,aAAYyN,KAE1BC,GAAgB+C,GAAMC,GAAQ,GAE/BhD,IAAiB+C,GAAMC,GAAQ,GAErC,IAUMC,EAAgB,WACrBD,GAAQ,GACRpV,EAASwU,OAGJc,EACL,kBAAC,WAAD,KACC,6BAAM,uBACN,yBAAKnQ,MAAO,CAAE8L,MAAO,UAArB,WAAkCmB,QAAlC,IAAkCA,OAAlC,EAAkCA,EAAcpJ,aACnC,OAAZoJ,QAAY,IAAZA,OAAA,EAAAA,EAAcK,gBAAiB,yBAAKtN,MAAO,CAAE8L,MAAO,QAArB,cAA0CmB,EAAaK,cAAc5S,OAOjG0V,EAAW,SAAC/U,IACb2U,GAAuB,WAAd3U,EAAME,KAAkC,QAAdF,EAAME,KAC5C2U,KAWF,OAPAG,qBAAU,WAET,OADA7I,SAAS8I,iBAAiB,UAAWF,GAC9B,WACN5I,SAAS+I,oBAAoB,UAAWH,OAKzC,kBAACI,GAAA,EAAD,CACCC,aAAc,CAAEC,SAAU,MAAOC,WAAY,UAC7CX,KAAMA,EACNY,QA3CkB,SAACvV,EAAYwV,GACjB,cAAXA,EAEHxV,EAAMG,kBAENyU,GAAQ,GACRpV,EAASwU,QAsCTc,QAASA,EACT7U,OACC,kBAACmD,GAAA,EAAD,CAAYqS,KAAK,QAAQC,aAAW,QAAQjF,MAAM,UAAUpN,QAASwR,GACpE,kBAAC,KAAD,CAAW7P,SAAS,cC1DZ2Q,GAAkB,SAAC,GAA+D,IAA7DpT,EAA4D,EAA5DA,SAAUlD,EAAkD,EAAlDA,KACrCG,EAAW0D,eAEjB,OACC,0BACC0S,UAAW,WACV,IAAMC,EAAgCzB,GAA2B/U,GAC7DwW,GAA+BrW,EAASqW,KAG5CtT,ICVSuT,GAAmB,SAAC,GAAoF,IAAlFvT,EAAiF,EAAjFA,SAAUwT,EAAuE,EAAvEA,YACtCvW,EAAW0D,eAEjB,OACC,0BACC0S,UAAW,WACV,IAAMI,EAA4B3B,GAAuB0B,GACrDC,GAA2BxW,EAASwW,KAGxCzT,I,0CCLS0T,GAAe,SAAC,GAAwE,IAAtE1L,EAAqE,EAArEA,UAAWxB,EAA0D,EAA1DA,OACnCvJ,EAAW0D,eAEXwO,EAAaxN,aAAYuN,IAHoE,EAKnEtN,oBAAS,GAL0D,oBAK5F+R,EAL4F,KAKlFC,EALkF,KAO7FC,IACH1E,KACCA,EAAmC3I,QACrC2I,EAAmC3I,SAAWA,GAC/C2I,EAAWnH,YAAcA,EAU1B,OARI6L,EACEF,GAAUC,GAAY,GAEvBD,GAAUC,GAAY,GAM1B,kBAAC,GAAKpT,WAAWD,oBAAjB,KACC,kBAACM,GAAA,EAAD,CACCrE,KAAK,SACLsE,QAAS,WACH6S,GAAexE,EAET0E,GACV5W,EAASyU,MAFTzU,EAASiV,GAA2B1L,EAAQwB,MAM7C2L,EACA,kBAAC,KAAD,CAAuBlR,SAAS,UAEhC,kBAAC,KAAD,CAAsBA,SAAS,a,oBC9BvBqR,GAAc,WAAO,IAAD,EACQlS,wBAAoD+N,GAD5D,oBACzBoE,EADyB,KACXC,EADW,KAE1BtQ,EAAMC,iBAAO,MAEbsQ,EAAcC,uBACnB,SAACzW,IAXmC,SAACiG,EAAuCjG,GAAuB,IAAD,IAC7FuF,EAASvF,EAAMuF,OACrB,mBAAIU,EAAIyQ,eAAR,iBAAI,EAAaC,cAHc,4BAG/B,aAAI,EAAqDC,SAASrR,IAUpCsR,CAA8B5Q,EAAKjG,IAE9DuW,OAAgBrE,KAGlB,CAACjM,EAAKsQ,IAEPvB,qBAAU,WAET,OADA7I,SAAS8I,iBAAiB,YAAauB,GAChC,WACNrK,SAAS+I,oBAAoB,YAAasB,MAEzC,CAACA,IAEJ,IAAMM,EAAyB5S,aAAY2N,IACrCkF,EAAaN,uBAClB,SAACzW,GACK8W,IAEL9W,EAAMG,iBAENoW,EAAgB,CAAES,KAAMhX,EAAMiX,EAAGC,IAAKlX,EAAMmX,OAE7C,CAACL,EAAwBP,IAE1BvB,qBAAU,WAET,OADA7I,SAAS8I,iBAAiB,cAAe8B,GAClC,WACN5K,SAAS+I,oBAAoB,cAAe6B,MAE3C,CAACA,IAEJ,IAAMK,IAAcd,EAId9W,EAAW0D,eAEjB,OACC,kBAACmU,GAAA,EAAD,CAAMpR,IAAKA,EAAKqR,aAAW,EAAC3C,KAAMyC,EAAWG,gBAAgB,iBAAiBC,eAAgBlB,GAC5Fc,GACA,kBAAC,WAAD,KACC,kBAACK,GAAA,EAAD,CACCpU,QAAS,WACR7D,EAAS+U,GAAiB,CAAEhK,UAAW,OAAQjC,WAAY,aAC3DiO,OAAgBrE,KAHlB,aASA,kBAACpO,GAAA,EAAD,MACA,kBAAC2T,GAAA,EAAD,CACCpU,QAAS,WACR7D,EAAS+U,GAAiB,CAAEhK,UAAW,IAAKjC,WAAY,aACxDiO,OAAgBrE,KAHlB,gBAQA,kBAACuF,GAAA,EAAD,CACCpU,QAAS,WACR7D,EAAS+U,GAAiB,CAAEhK,UAAW,IAAKjC,WAAY,aACxDiO,OAAgBrE,KAHlB,mBC1EU,IAAE1E,UAASC,cAAazK,YAAWD,aAAY2K,WAASC,YAAW+J,YCHrEC,GAAgB,SAAC,GAYN,IAAD,IAXtBC,kBAWsB,MAXT,GAWS,EAVtBC,EAUsB,EAVtBA,YACA9B,EASsB,EATtBA,YACApR,EAQsB,EARtBA,MACGmT,EAOmB,qEACI3T,mBAAS,CAAEyT,aAAYG,aAAcH,IADzC,oBACfva,EADe,KACRmH,EADQ,KAStB,OALInH,EAAMua,aAAeA,GACxBpT,EAAS,CAAEoT,aAAYG,aAAcH,IAKrC,kBAACrF,GAAUxP,WAAW+S,iBAAtB,CACCC,YACCA,QAA2D7D,IAA3C6D,EAA6BjC,UAA2BiC,OAA+B7D,GAGxG,kBAACrN,GAAA,EAAD,eACCmT,WAAY,CAAEC,kBAAkB,EAAMtT,MAAO,CAAEuT,SAAU,UACzDC,WAAS,EACT1U,QAAQ,SACRY,MAAOhH,EAAM0a,aACbtS,SAAU,SAACzF,GACV,IAAMsF,EAAkBtF,EAAMuF,OAA+BlB,MAC7DG,EAAS,6BAAKnH,GAAN,IAAa0a,aAAczS,MAEpC8S,OAAQ,SAACpY,GACR6X,EAAY7X,EAAMuF,OAAOlB,QAE1BM,MAAOA,GACHmT,M,qBCrCKO,GAAqB,SAAC,GAAkD,IAAhDC,EAA+C,EAA/CA,WAC9B9Y,EAAW0D,eACjB,OACC,kBAACV,GAAA,EAAD,CACCC,MAAOU,GAAKH,UAAU5B,oBACtBsB,WAAYS,GAAKH,UAAUZ,kBAC3BO,eAAgBQ,GAAKH,UAAUX,uBAE/B,kBAACe,GAAA,EAAD,CACCrE,KAAK,SACLsE,QAAS,WACR7D,EAAS4Q,GAAiBkI,MAI3B,kBAAC,KAAD,CAAgBtT,SAAS,a,SCfhBuT,GAAuB,SAAC,GAAyE,IAAvEnP,EAAsE,EAAtEA,OAAQmB,EAA8D,EAA9DA,UAO9C,OACC,kBAACiO,GAAA,EAAD,CAAO/U,QAAQ,YACd,kBAACC,EAAA,EAAD,CAAMC,WAAS,EAACC,UAAU,OACzB,kBAACF,EAAA,EAAD,CAAMG,MAAI,GACT,kBAAC0O,GAAUxP,WAAWkT,aAAtB,CACClN,OAAQK,EAAOL,OACfwB,UAAWA,KAIb,kBAAC7G,EAAA,EAAD,CAAMG,MAAI,GACRuF,EAAO7I,QACP,kBAAC,GAAD,CACC+X,WAAYxO,GAAMgE,MAAM2K,YAAY7R,aAAa2D,EAAWnB,EAAO7I,cCX7DmY,GAAS,SAAC,GAAsC,IAAD,IAAnCtP,EAAmC,EAAnCA,OAClB5J,EAAW0D,eAEjB,OACC,kBAACM,GAAA,EAAD,CAAMC,QAAQ,YAAYkV,UAAW,EAAGhU,MAAO,CAAEI,QAAS,QACzD,kBAACrB,EAAA,EAAD,CAAMC,WAAS,EAACC,UAAU,MAAMc,QAAQ,iBACvC,kBAAChB,EAAA,EAAD,CAAMG,MAAI,GACT,kBAACH,EAAA,EAAD,CAAMC,WAAS,EAACC,UAAU,SAASgV,QAAS,GAC3C,kBAAClV,EAAA,EAAD,CAAMG,MAAI,GACT,kBAACH,EAAA,EAAD,CAAMC,WAAS,EAACC,UAAU,MAAMgV,QAAS,GACxC,kBAAClV,EAAA,EAAD,CAAMG,MAAI,GACT,kBAAC,GAAD,CACCgU,YAAa,SAACxT,GACb7E,EAASsK,GAAM0D,QAAQlD,wBAAwB,IAAKlB,EAAQ/E,KAE7DuT,WAAaxO,EAAOrB,QAA0BrB,EAC9C4K,MAAOnO,GAAKH,UAAUd,aACtBuB,QAAQ,SACRkB,MAAO,CAAEkU,gBAAiB,WAC1BC,gBAAiB,CAAEnU,MAAO,CAAE8L,MAAO,YACnCsF,YAAW,UAAE3M,EAAO7I,cAAT,aAAE,EAAemG,KAI9B,kBAAChD,EAAA,EAAD,CAAMG,MAAI,GACT,kBAAC,GAAD,CAAsB0G,UAAU,IAAInB,OAAQA,OAI/C,kBAAC1F,EAAA,EAAD,CAAMG,MAAI,GACT,kBAACH,EAAA,EAAD,CAAMC,WAAS,EAACC,UAAU,MAAMgV,QAAS,GACxC,kBAAClV,EAAA,EAAD,CAAMG,MAAI,GACT,kBAAC,GAAD,CACCgU,YAAa,SAACxT,GACb7E,EAASsK,GAAM0D,QAAQlD,wBAAwB,IAAKlB,EAAQ/E,KAE7DuT,WAAaxO,EAAOrB,QAA0BpB,EAC9C2K,MAAOnO,GAAKH,UAAUb,WACtBwC,MAAO,CAAEkU,gBAAiB,WAC1BC,gBAAiB,CAAEnU,MAAO,CAAE8L,MAAO,YACnCsF,YAAW,UAAE3M,EAAO7I,cAAT,aAAE,EAAeoG,KAG9B,kBAACjD,EAAA,EAAD,CAAMG,MAAI,GACT,kBAAC,GAAD,CAAsB0G,UAAU,IAAInB,OAAQA,SAOjD,kBAAC1F,EAAA,EAAD,CAAMG,MAAI,GACT,kBAAC,GAAMd,WAAW8H,iBAAlB,CAAmC9B,OAAQK,EAAOL,aC5D1CgQ,GAAW,SAAC,GAAwC,IAAtC3P,EAAqC,EAArCA,OACpB5J,EAAW0D,eAEjB,OACC,kBAACM,GAAA,EAAD,CAAMC,QAAQ,YAAYkV,UAAW,EAAGhU,MAAO,CAAEI,QAAS,QACzD,kBAACrB,EAAA,EAAD,CAAMC,WAAS,EAACC,UAAU,MAAMc,QAAQ,iBACvC,kBAAChB,EAAA,EAAD,CAAMG,MAAI,GACT,kBAACH,EAAA,EAAD,CAAMC,WAAS,EAACC,UAAU,MAAMgV,QAAS,GACxC,kBAAClV,EAAA,EAAD,CAAMG,MAAI,GACT,kBAAC,GAAD,CACCgU,YAAa,SAACxT,GACb7E,EAASsK,GAAM0D,QAAQpD,YAAd,6BAA+BhB,GAA/B,IAAuCrB,QAAS1D,OAE1DuT,WAAYxO,EAAOrB,QACnBuJ,MAAOnO,GAAKH,UAAUf,SACtBwB,QAAQ,SACRkB,MAAO,CAAEkU,gBAAiB,WAC1BC,gBAAiB,CAAEnU,MAAO,CAAE8L,MAAO,YACnCsF,YAAa3M,EAAO7I,UAGtB,kBAACmD,EAAA,EAAD,CAAMG,MAAI,GACT,kBAAC,GAAD,CAAsB0G,UAAU,OAAOnB,OAAQA,OAKlD,kBAAC1F,EAAA,EAAD,CAAMG,MAAI,GACT,kBAAC,GAAMd,WAAW8H,iBAAlB,CAAmC9B,OAAQK,EAAOL,aC9B1CiQ,GAAW,SAAC,GAAoC,IAAlC5P,EAAiC,EAAjCA,OAAiC,EAAzB6P,QAClC,OAAQ7P,EAAOrK,MACd,IAAK,OACJ,OAAO,kBAAC,GAAD,CAAUqK,OAAQA,IAC1B,IAAK,MACJ,OAAO,kBAAC,GAAD,CAAQA,OAAQA,MCLpB8P,GAAkB,kBACvB,kBAACxV,EAAA,EAAD,CAAMG,MAAI,GACT,kBAACC,GAAA,EAAD,QCaWqV,GAAY,SAAC,GAA8E,IAA5EF,EAA2E,EAA3EA,QAASG,EAAkE,EAAlEA,eAC9BC,EAAcnV,aAAY4F,GAAM6D,UAAU9D,UAE1CyP,EAAcpV,aAAY6J,IAAiBkL,GAC3CM,EAAaD,EAAcA,EAAY/K,QAAQI,KAAI,SAACN,GAAD,OAAQgL,EAAYhL,MAAO,GAC9Ea,EAAoBhL,aAAY+K,IAGhCG,EAAgBlL,aAAYiL,IAG5BqK,EAAYC,mBAAQ,WACzB,IAAIC,EAAaH,EAEjB,MAA0B,SAAtBrK,EACI,IAGkB,QAAtBA,IACuB,QAAtBA,IACHwK,EAAaH,EAAWxM,QAAO,SAAC3D,GAAD,MAA4B,QAAhBA,EAAOrK,SAEzB,UAAtBmQ,IACHwK,EAAaH,EAAWxM,QAAO,SAAC3D,GAAD,MAA4B,SAAhBA,EAAOrK,UAI9B,KAAlBqQ,IACHsK,EAAaA,EAAW3M,QAAO,SAAC1C,GAC/B,OAAQA,EAAKtL,MACZ,IAAK,OACJ,OArC4B,SAAC4a,EAAwBvK,GAAzB,OACjCuK,EAAW5R,QAAQ6R,SAASxK,GAoChByK,CAA0BxP,EAAoB+E,GACtD,IAAK,MACJ,OApC0B,SAAC0K,EAAoB1K,GAArB,OAC/B0K,EAAS/R,QAAQpB,EAAEiT,SAASxK,IAAkB0K,EAAS/R,QAAQrB,EAAEkT,SAASxK,GAmC9D2K,CAAwB1P,EAAkB+E,GAEnD,OAAO,MD5CgC,SAACtF,EAAqBmP,GAChE,IAAMe,EAAYrb,KAElB,OAAOmL,EAAM2C,QAAO,SAACC,EAAMuN,EAAarG,EAAO5G,GAS9C,OARAN,EAAKwN,KACJ,kBAACxW,EAAA,EAAD,CAAMG,MAAI,EAAC3D,IAAK8Z,KACf,kBAAC,GAAD,CAAU5Q,OAAQ6Q,EAAahB,QAASA,EAAS/Y,IAAK8Z,QAIpCpG,EAAQ5G,EAAI2G,OAAS,GACxBjH,EAAKwN,KAAK,kBAAC,GAAD,CAAiBha,IAAK8Z,OAC1CtN,IACL,ICkCKyN,CAA4BT,EAAYT,MAC7C,CAACM,EAAYN,EAAS/J,EAAmBE,IAO5C,OACC,kBAACgL,GAAA,EAAD,CACCC,iBAAiB,EACjB1V,MAAO,CACN2V,UAAW,OACXC,UAAWnB,GAEZT,UAAW,GAEX,kBAAC6B,GAAA,EAAD,KACC,kBAACzU,GAAA,EAAD,CACCtC,QAAQ,KACRgX,MAAM,SACN9V,MAAO,CAAE+V,cAAe,OAAQC,iBAAkB,OAAQC,aAAc,SAEvE3B,IAGH,kBAAC4B,GAAA,EAAD,KACC,kBAACnX,EAAA,EAAD,CAAMC,WAAS,EAACC,UAAU,SAASgV,QAAS,EAAGlU,QAAQ,SAASD,WAAW,WAC1E,kBAACf,EAAA,EAAD,CAAMG,MAAI,GACT,kBAAC,GAAMd,WAAW6H,YAAlB,MACA,kBAAC,GAAM7H,WAAW4H,cAAlB,MACA,kBAAC7G,GAAA,EAAD,OAGD,kBAACJ,EAAA,EAAD,CAAMG,MAAI,GACT,kBAACH,EAAA,EAAD,CAAMC,WAAS,EAACC,UAAU,SAASgV,QAAS,EAAGlU,QAAQ,SAASD,WAAW,WACzE+U,QCjFKsB,GAAoB,SAAC,GAAqE,IAAnEvY,EAAkE,EAAlEA,SAAU0W,EAAwD,EAAxDA,QACvCzZ,EAAW0D,eAEjB,OACC,0BACC6X,aAAc,WACbvb,EAASuQ,GAAkBkJ,MAG3B1W,I,UCSSyY,GAA4B,SAAC3b,GAAD,MAAkB,aAAeA,GAE7D4b,GAA4B,SAAChC,GAAD,OAAqBzT,SAASyT,EAAQiC,QAAQ,aAAc,MAExFC,GAAiB,SAAC9b,GAC9B,MAAO,CACN4Z,QAAS+B,GAA0B3b,GACnCkP,QAAS,KAIE6M,GAAyB,SAAC/d,GAAqD,IAC3F,IAAMge,EAAY,gBAAQhe,GADiE,mBAA3B+Q,EAA2B,iCAA3BA,EAA2B,kBAK3F,OAHAA,EAAQkN,SAAQ,SAAChN,GAChB+M,EAAarN,aAAaM,EAAO2K,SAAW3K,KAEtC+M,GAGKE,GAAuB,SAACle,EAAuB0L,GAC3D,IAAMiF,EAAepB,OAAOC,YAC3BD,OAAOE,QAAQzP,EAAM2Q,cAAcW,KAAI,SAAC6M,GAAD,MAAW,CACjDA,EAAM,GAD2C,6BAE5CA,EAAM,IAFsC,IAElCjN,QAASiN,EAAM,GAAGjN,QAAQxB,QAAO,SAACsB,GAAD,OAAQA,IAAOtF,YAGjE,OAAO,6BAAK1L,GAAZ,IAAmB2Q,kBC9Cdf,GAA+B,CACpCqC,gBAAiB,KACjBtB,aAAa,gBACXgN,GAA0B,GAAK,CAC/B/B,QAAS+B,GAA0B,GACnCzM,QAAS,CAAC,IAAK,IAAK,OAGtBL,oBAAqB8M,GAA0B,GAC/ChM,kBAAmB,EACnBH,eAAgB,OAChBK,kBAAmB,MACnBE,cAAe,IClBD,IAAEpM,YAAWD,aAAY2K,QDuBjB,WAA8F,IAChH4L,EACAtL,EAFmB3Q,EAA4F,uDAApF4P,GAAoF,yCAApElO,EAAoE,EAApEA,KAAME,EAA8D,EAA9DA,QAGrD,OAAQF,GACP,KAAKC,GACJ,OAAO,6BAAK3B,GAAZ,IAAmB6Q,oBAAqBjP,IACzC,KAAKD,GACJ,OAAO,6BAAK3B,GAAZ,IAAmBwR,eAAgB5P,IACpC,KAAKD,GACJ,OAAO,6BAAK3B,GAAZ,IAAmB6R,kBAAmBjQ,IACvC,KAAK6K,GAAM2D,YAAYpH,UAgBtB,OAdCiT,EADGjc,EAAM2Q,aAAa3Q,EAAM6Q,qBACjB,6BACP7Q,EAAM2Q,aAAa3Q,EAAM6Q,sBADlB,IAEVK,QAAQ,GAAD,oBAAMlR,EAAM2Q,aAAa3Q,EAAM6Q,qBAAqBK,SAApD,CAA8DtP,EAAuB8J,WAI/E,CACbkQ,QAAS5b,EAAM6Q,oBACfK,QAAS,CAAEtP,EAAuB8J,UAGpCiF,EAAY,gBAAQ3Q,EAAM2Q,eACb3Q,EAAM6Q,qBAAuBoL,EAEnC,6BAAKjc,GAAZ,IAAmB2Q,aAAcA,IAClC,KAAKlE,GAAM2D,YAAYnH,YACtB,OAAOiV,GAAqBle,EAAO4B,GACpC,KAAKmO,GAAGK,YAAY5B,gBACnB,OAAI5M,EACI,6BACHgO,IADJ,IAECe,aAAe/O,EAAyB+O,aACxCgB,kBAAoB/P,EAAyB+P,oBAGvC/B,GAET,KAAKG,GAAGK,YAAY9B,wBAInB,OAAI1M,EAAQgN,iBACJ,6BACHgB,IADJ,IAECe,aAAe/O,EAAQgN,iBAAkC+B,aACzDgB,kBAAoB/P,EAAQgN,iBAAkC+C,oBAGxD3R,EAET,KAAK2B,GACJ,OAAO,6BAAK3B,GAAZ,IAAmB+R,cAAenQ,IACnC,KAAKD,GACJ,OAAO,6BAAK3B,GAAZ,IAAmBiS,gBAAiBrQ,IACrC,QACC,OAAO5B,IChFuCsQ,YAAWH,UAASM,SCDxD2N,GAAkB,SAAC,GAAoF,IAAlFpc,EAAiF,EAAjFA,KAAMqc,EAA2E,EAA3EA,QACjCld,EAAa0F,aAAY3F,IACzBod,EAAQzV,iBAAO,GAGf1G,EAAW0D,eAQX0Y,EAAQnF,uBAAY,WACzB,IAAMoF,EAAaC,aAAY,WAAO,IAAD,EACpC,GAAsB,KAAlBH,EAAMjF,QAKT,OAJAiF,EAAMjF,QAAU,EAChBqF,cAAcF,GACd7L,QAAQC,IAAI,yBAA0BzR,QACtCgB,EAASgB,MAMV,IAAMwb,EAAS,UAAGN,EAAQhF,eAAX,aAAG,EAAiBnU,SAASsB,KAAK,GACjD,GAAImY,EAAW,CACd,IAAMC,EAAaD,EAAUzZ,SAASsB,KAAMrF,EAA4BsV,WACxE,GAAImI,EAKH,OAJAA,EAAWC,eAAe,CAAEC,SAAU,OAAQC,MAAO,SAAUC,OAAQ,WACvE7c,EAASgB,MACTmb,EAAMjF,QAAU,OAChBqF,cAAcF,GAIhBF,EAAMjF,QAAUiF,EAAMjF,QAAU,IAC9B,MACD,CAAClX,EAAUmc,EAAOnd,EAAYkd,IAuBjC,OAnBA1G,qBAAU,WACT,GAAIxW,GAAcA,EAAWa,OAASA,GAAQqc,EAAQhF,QAAS,CAE9D,IAAMsF,EAAYN,EAAQhF,QAAQnU,SAASsB,KAAK,GAChD,GAAImY,EAAW,CACd,IAAMC,EAAaD,EAAUzZ,SAASsB,KAAKrF,EAAWsV,WAClDmI,GACHA,EAAWC,eAAe,CAAEC,SAAU,OAAQC,MAAO,SAAUC,OAAQ,WACvE7c,EAASgB,MACTmb,EAAMjF,QAAU,GAEhBkF,SAGDA,OAGA,CAACpc,EAAUH,EAAMqc,EAASld,EAAYod,IAElC,MCrDKU,GAAkB,CAAEzD,gBAAiB,QA8FlD,SAAS0D,GAAiBC,GACzB,OAAO,SAAsBC,GAC5B,OA7F8B,SAACtZ,EAAcuZ,GAS9C,IAAMC,EAAaxZ,EAAKwQ,OAClBiJ,EAAgBF,EAAQ/I,OAE9B,GAAgB,KAAZ+I,GAA2B,KAATvZ,GAAeyZ,EAAgBD,EAAY,OAAOxZ,EAGxE,IAAMyQ,EAAQzQ,EAAK0Q,QAAQ6I,GAC3B,IAAe,IAAX9I,EAAc,OAAOzQ,EAEzB,IAAM0Z,EAAgB,0BAAMlY,MAAO2X,IAAkBI,GAC/CI,EAASlJ,EAAQ,GAAIzQ,EAAK4Z,MAAM,EAAGnJ,GAErCoJ,EAAS,GACTF,GAAQE,EAAO9C,KAAK4C,GACxBE,EAAO9C,KAAK2C,GAEZ,IAAMI,EAAc9Z,EAAK0Q,QAAQ6I,EAAS9I,EAAQgJ,GAClD,IAAqB,IAAjBK,EAAoB,CAEvB,IAAMC,EAActJ,EAAQgJ,EACtBO,EAASD,EAAcP,GAAaxZ,EAAK4Z,MAAMG,GAErD,OADIC,GAAQH,EAAO9C,KAAKiD,GACjBH,EAGR,IAAME,EAActJ,EAAQgJ,EACtBO,EAASD,IAAgBD,GAAc9Z,EAAK4Z,MAAMG,EAAaD,GACjEE,GAAQH,EAAO9C,KAAKiD,GACxBH,EAAO9C,KAAK2C,GAEZ,IAAMO,EAAaja,EAAK0Q,QAAQ6I,EAASO,EAAcL,GACvD,IAAoB,IAAhBQ,EAAmB,CACtB,IAAMC,EAAcJ,EAAcL,EAGlC,OAFeS,EAAcV,GAAaxZ,EAAK4Z,MAAMM,IACzCL,EAAO9C,KAAKiD,GACjBH,EAGR,IAAMK,EAAcJ,EAAcL,EAC5BU,EAASD,EAAcV,GAAaxZ,EAAK4Z,MAAMM,EAAaD,GAIlE,GAHIE,GAAQN,EAAO9C,KAAKoD,GACxBN,EAAO9C,KAAK2C,GAERO,EAAaR,IAAkBD,EAClC,OAAOK,EAGR,IAAMO,EAAapa,EAAK4Z,MAAMK,EAAaR,GAC3C,GAAIW,IAAeb,EAElB,OADAM,EAAO9C,KAAK2C,GACLG,EAGR,IAAMQ,EAAYD,EAAWE,MAAMf,GACnC,GAAIc,EAAU7J,QAAU,EAEvB,OADAqJ,EAAO9C,KAAKqD,GACLP,EAGR,IAAK,IAAIpJ,EAAQ,EAAGA,EAAQ4J,EAAU7J,OAAQC,IAAS,CACtD,IAAM8J,EAAUF,EAAU5J,GACZ,IAAVA,GAA2B,KAAZ8J,EAKf9J,IAAU4J,EAAU7J,OAAS,GAAiB,KAAZ+J,GAKtB,KAAZA,GAAgBV,EAAO9C,KAAKwD,GAChCV,EAAO9C,KAAK2C,IALXG,EAAO9C,KAAKwD,GALZV,EAAO9C,KAAK2C,GAad,OAAOG,EASCW,CAAiBlB,EAAS9J,IAAK6J,IAIjC,IAAMoB,GAAU,SAAC,GAA4C,IAAD,EAAzCC,EAAyC,EAAzCA,WAEnBC,EAAa,UAAG5Z,aAAYzG,WAAf,aAAG,EAAoCmH,MACpDlG,EAAiBwF,aAAYzF,IAE7Bsf,EAAkC,KAAnBrf,EAAwB6d,GAAiB7d,QAAkBwT,EAE1EwJ,EAAUxV,iBAA8B,MAE9C,OACC,kBAAC,WAAD,KACC,kBAACqM,GAAUxP,WAAW4S,gBAAtB,CAAsCtW,KAAMwe,GAC3C,kBAAC,GAAD,KACC,kBAAC,KAAD,CACCG,SAAU,SAACC,GACVvC,EAAQhF,QAAUuH,GAEnBJ,WAAYA,EACZjZ,MAAOkZ,EAAgBI,GACvBC,gBAAiB,WAChBnO,QAAQC,IAAI,iBAAmB4N,IAEhCO,mBAAoBL,MAIvB,kBAAC,GAAD,CAAiB1e,KAAMwe,EAAYnC,QAASA,MCvIlC2C,GAAoB,SAAC,GAU3B,IATNzK,EASK,EATLA,MACA0K,EAQK,EARLA,KACA3Z,EAOK,EAPLA,MAQMkZ,EAAajK,EAAQ,EACrBqF,EAAUsF,GAAMzQ,MAAMkN,0BAA0B6C,GAC9CW,EAAoBF,EAApBE,gBAER,OACC,wBAAS,CAAE7Z,SACV,kBAAC4Z,GAAMxb,WAAW+X,kBAAlB,CAAoC7B,QAASA,GAC5C,kBAACvV,EAAA,EAAD,CAAMC,WAAS,EAACe,QAAQ,gBAAgBd,UAAU,MAAMa,WAAW,cAClE,kBAACf,EAAA,EAAD,CAAMG,MAAI,GACT,kBAAC0a,GAAMxb,WAAWoW,UAAlB,CACCF,QAASA,EACTG,eAAgBoF,EAAgBC,IAAIZ,MAItC,kBAACna,EAAA,EAAD,CAAMG,MAAI,GACT,kBAAC,GAAD,CAASga,WAAYA,OAIxB,kBAAC/Z,GAAA,EAAD,QC7BU4a,GAAoB,SAAC,GAA2D,IAAzDC,EAAwD,EAAxDA,QAC7B1gB,EAAeiG,aAAYlG,IAC3BD,EAAcmG,aAAYpG,IAC1BwR,EAAkBpL,aAAYqa,GAAM5Q,UAAU0B,kBACpD2F,qBAAU,WAAO,IAAD,EACf,UAAA2J,EAAQjI,eAAR,SAAiBkI,aAAa7gB,EAAc,EAAG,WAC7C,IAEH,IAAMyB,EAAW0D,eAiBjB,OAfA8R,qBAAU,WACa,IAAD,EAQH,EARlB,GAAI1F,EAKH,OAJA,UAAAqP,EAAQjI,eAAR,SAAiBkI,aAAatP,EAAgBjQ,KAAO,EAAG,QACxDG,EAASc,GAAcgP,IACvB9P,EAASJ,GAAQkQ,EAAgBjQ,MAAM,SACvCG,EAAS+e,GAAM/Q,QAAQ6C,sBAIpBpS,IACH,UAAA0gB,EAAQjI,eAAR,SAAiBkI,aAAa3gB,EAAe,EAAG,SAChDuB,EAASJ,GAAQnB,GAAc,OAE9B,CAACuB,EAAUmf,EAAS1gB,EAAcqR,IAE9B,MCtBK4O,GAAqB,IAkBrBW,GAAwB,SAAC,GAM/B,IALNC,EAKK,EALLA,YACAC,EAIK,EAJLA,qBAKMJ,EAAUzY,mBAEVxI,EAAqBwG,aAAYzG,IACjC+gB,EAAkB9gB,EACrB+V,MAAMC,KAAKqL,EAAqB1R,QAAQZ,QAAO,SAACC,EAAMmR,GAEtD,OADAnR,EAAKsS,IAAInB,EA5BmB,SAC/BA,EACAkB,EACAE,GAEA,IAAMC,EAAWH,EAAqBN,IAAIZ,GAIpCsB,EAHgBF,EAAcf,GAETgB,EAAS,GAKpC,OAHuBA,EAAS,GAAKC,EAEE,GAgBfC,CAAwBvB,EAAYkB,EAAsBrhB,EAAmBkH,QAC3F8H,IACJ,IAAI2S,UACPnN,EAEG1S,EAAW0D,eAEjB,OACC,kBAAC,WAAD,KACExF,GAAsB8gB,GACtB,kBAAC,KAAD,CACCc,OAAQ5hB,EAAmB4hB,OAC3BC,UAAYT,EAAYpI,QAAmC8I,SAC3DC,SAAU,SAAC7L,GAAD,OAAmB4K,EAAgBC,IAAI7K,EAAQ,IACzD8L,SAAU,CACTlB,mBAEDvY,IAAK0Y,EACL/Z,MAAM,OACN+a,gBAAiB,SAAC/O,GAEjBpR,EAASJ,GAAQwR,EAAMgP,iBAAmB,GAAG,MAG7CvB,IAGH,kBAAC,GAAD,CAAmBM,QAASA,MCzD/BkB,KAAMC,oBAAoBC,UAA1B,kDAAiFF,KAAMG,QAAvF,kBAIA,IAAMC,GAAU,CACfC,QAAS,SACTC,YAAY,GAKAC,GAAc,WAC1B,IAAM5iB,EAAM0G,aAAY5G,IADQ,EAGkB6G,qBAHlB,oBAGzB4a,EAHyB,KAGHsB,EAHG,KAK1BvB,EAAc5Y,mBAEd1G,EAAW0D,eAGXtF,EAAO,OAAGJ,QAAH,IAAGA,OAAH,EAAGA,EAAK8O,KACfgU,EAAapa,iBAAOtI,GAK1B,OAJI0iB,EAAW5J,UAAY9Y,IAC1B0iB,EAAW5J,QAAU9Y,GAIrB,kBAAC,KAAD,CACC2iB,QAASpd,GAAKH,UAAUrB,oBACxB6e,OAAQrd,GAAKH,UAAUtB,eACvBue,QAASA,GACTQ,KAAMjjB,EACNkjB,WAAW,SACXC,cAAe,SAACC,GACfphB,EAASL,GAAeyhB,EAASpB,WAC7BhiB,GCvC2B,SAClCojB,EACAhjB,EACA0iB,EACAD,GAEA,IAAMQ,EAAWpN,MAAMC,KAAK,CAAEC,OAAQiN,EAASpB,WAAY,SAACtY,EAAG4Z,GAAJ,OAAUA,EAAI,KAAGnS,KAAI,SAACkP,GAAD,OAC/E+C,EAASG,QAAQlD,MAMlBmD,QAAQC,IAAKJ,GAAwCK,MAAK,SAACC,GAE1D,GAAIvjB,IAAY0iB,EAAW5J,QAA3B,CAIA,IAN0F,EAMpF0K,EAAiB,IAAI/B,IAN+D,eAUvE8B,GAVuE,IAU1F,2BAA0B,CAAC,IAAhB9hB,EAAe,QACnBgiB,EAFO,EAEHhiB,EAAKiiB,KAAK,GACdC,EAHO,EAGHliB,EAAKiiB,KAAK,GAGpBF,EAAepC,IAAM3f,EAA4CmiB,WAAa,EAAG,CAACH,EAAGE,KAfI,8BAkB1FlB,EAAkBe,ODQPK,CAAoBb,EAAUhjB,EAAmB0iB,EAAYD,GACtEvB,EAAYpI,QAAUkK,GAEvBc,YAAa,YAAqB,IAAlB7D,EAAiB,EAAjBA,WACfre,EAASJ,GAAQoG,SAASqY,IAAa,MAGvCkB,GAAwBuB,EAAW5J,UAAY9Y,GAC/C,kBAAC,GAAD,CACCkhB,YAAaA,EACbC,qBAAsBA,M,UEhDd4C,GAAiB,WAC7B,IAAMniB,EAAW0D,eAEX0e,EAAUC,oBAAS,IAAI,WAC5B,IAAMC,EAAetP,OAAOuP,WACtBC,EAAgBxP,OAAOyP,YAC7BziB,EAASV,GAAY,CAAE8F,MAAOkd,EAAcxC,OAAQ0C,QAerD,OAZAE,2BAAgB,WAEfN,MACE,CAACA,IAEJ5M,qBAAU,WAET,OADAxC,OAAOyC,iBAAiB,SAAU2M,GAC3B,WACNpP,OAAO0C,oBAAoB,SAAU0M,OAIhC,MCzBF3U,GAA4B,CACjC7O,cAAe,OACfjB,WAAY,IACZY,YAAa,EACbE,aAAc,KACdP,mBAAoB,KACpBc,WAAY,KACZE,eAAgB,ICJF,IAAE8O,UAASC,cAAa1K,aAAYC,YAAW0K,QDO1C,WAA2F,IAA1FrQ,EAAyF,uDAAjF4P,GAAiF,yCAAjElO,EAAiE,EAAjEA,KAAME,EAA2D,EAA3DA,QAClD,OAAQF,GACP,KAAKC,EACJ,OAAO,6BAAK3B,GAAZ,IAAmBG,IAAKyB,EAAiBrB,QAAUqB,EAAiBqN,OACrE,KAAKc,GAAGK,YAAY5B,gBACnB,OAAI5M,EAECA,EAAQqN,OAASjP,EAAMO,QACnBP,EAED,6BACH4P,IADJ,IAECzP,SAAK0U,EACLtU,QAASqB,EAAQqN,KACjBnP,WAAY8B,EAAQ9B,WACpBY,YAAakB,EAAQlB,cAIfV,EAET,KAAK2B,EACJ,OAAO,6BAAK3B,GAAZ,IAAmBF,WAAY8B,IAChC,KAAKD,EACJ,OAAO,6BAAK3B,GAAZ,IAAmBU,YAAakB,EAAQI,KAAMpB,aAAcgB,EAAQK,aAAeL,EAAQI,KAAO,OACnG,KAAKL,EACJ,OAAO,6BAAK3B,GAAZ,IAAmBe,cAAea,IACnC,KAAKD,EACJ,OAAO,6BAAK3B,GAAZ,IAAmBmB,WAAYS,IAChC,KAAKD,EACJ,OAAO,6BAAK3B,GAAZ,IAAmBqB,eAAgBO,IACpC,KAAKD,EACJ,OAAO,6BACH3B,GADJ,IAECK,mBAAoBuB,IAEtB,QACC,OAAO5B,IC5C6DsQ,a,oBCD1DwU,GAA4D5kB,aACxE6kB,GAAQzU,UAAUhQ,WAClBykB,GAAQzU,UAAU9P,cAClBukB,GAAQzU,UAAU7P,eAClBygB,GAAM5Q,UAAUI,gBAChBwQ,GAAM5Q,UAAUM,uBAChBsQ,GAAM5Q,UAAUoB,qBAChBjF,GAAM6D,UAAU9D,SAChBC,GAAM6D,UAAU/D,qBAChB,SAAChM,EAAST,EAAYY,EAAaiQ,EAAcE,EAAqBc,EAAmBlF,EAAOb,GAC/F,MAAO,CACNqD,KAAM1O,EACNT,aACAY,cACAiQ,eACAE,sBACAc,oBACAlF,QACAb,uBCjBUoZ,GAAuB,WACnC,OAAO,SAAC7iB,EAAoBC,GAC3B,IAAMpC,EAAQoC,IAGd,QAAuByS,IAFAkQ,GAAQzU,UAAUhQ,WAAWN,GAElB,CACjC,IAAM0O,EAASoW,GAAqB9kB,GACpCmC,EAAS4N,GAAGI,QAAQ1B,cAAcC,OAK/BuW,GAAeC,EAAQ,KAChBC,GAAiB,WAC7B,OAAO,SAAChjB,EAAeC,GAEtBD,EAAS6iB,MAET,IAAM7V,EAAmBY,GAAGO,UAAUL,oBAAoB7N,KACpDgjB,GAAc,IAAIC,MAAOC,iBAC/BL,GAAaM,KAAKC,UAAUrW,GAAmBiW,EAAc,qBAIlDK,GAAiB,SAACtlB,GAC9B,OAAO,SAACgC,EAAoBC,GAC3B,IAAMsjB,EAAavlB,EAAI8O,KAEjBjP,EAAQoC,IACRujB,EAAiBZ,GAAQzU,UAAUhQ,WAAWN,GAE9C6P,EAAaE,GAAGO,UAAUvQ,OAAOC,GAGvC,QAAuB6U,IAAnB8Q,EAA8B,CACjC,IAAMjX,EAASoW,GAAqB9kB,GACpCmC,EAAS4N,GAAGI,QAAQ1B,cAAcC,IAQnC,GALAvM,EAAS4iB,GAAQ5U,QAAQtO,UAAU1B,IAK/BulB,IAAeC,EAAnB,CAIA,IAAMC,EAAkB/V,EAAW6V,GAElCvjB,EADGyjB,EACM,CAAElkB,KAAMqO,GAAGK,YAAY5B,gBAAiB5M,QAASgkB,GAEjD,CAAElkB,KAAMqO,GAAGK,YAAY5B,kBAIjCrM,EAAS0jB,kBAAeC,mBAKbC,GAAoB,SAACjX,GACjC,OAAO,SAAC3M,EAAoBC,GAC3B,IAAMpC,EAAQoC,IACRujB,EAAiBZ,GAAQzU,UAAUhQ,WAAWN,GAE9C6P,EAAaE,GAAGO,UAAUvQ,OAAOC,GAGvC,QAAuB6U,IAAnB8Q,EAA8B,CACjC,IAAMjX,EAASoW,GAAqB9kB,GACpCmC,EAAS4N,GAAGI,QAAQ1B,cAAcC,IAInC,IAAMkX,EAAkB/V,EAAWf,GACnC3M,EAAS,CAAET,KAAMqO,GAAGK,YAAY5B,gBAAiB5M,QAASgkB,IAG1DzjB,EAAS0jB,kBAAeC,kBAIbE,GAAiB,SAAClX,GAC9B,OAAO,SAAC3M,EAAoBC,GAC3B,IAAMpC,EAAQoC,IACR6jB,EAAiBlB,GAAQzU,UAAUhQ,WAAWN,GAChDimB,GAAkBA,IAAmBnX,IAExC3M,EAAS,CAAET,KAAMqO,GAAGK,YAAY5B,kBAGhCrM,EAAS0jB,kBAAeC,iBAIzB3jB,EAAS4N,GAAGI,QAAQtB,sBAAsBC,M,+ICvFtCoX,GAA4B,SAAC,GAQ5B,IAPNpX,EAOK,EAPLA,SACAqX,EAMK,EANLA,YACA7O,EAKK,EALLA,KAMMnV,EAAW0D,eAEjB,OACC,kBAACugB,GAAA,EAAD,CACC9O,KAAMA,EACNY,QAASiO,EACTE,kBAAgB,qBAChBC,mBAAiB,4BAEjB,kBAACC,GAAA,EAAD,CAAavV,GAAG,sBAAsB,UAAYlC,EAAW,kCAC7D,kBAAC0X,GAAA,EAAD,KACC,kBAACC,GAAA,EAAD,CAAmBzV,GAAG,4BAAtB,mCAED,kBAAC0V,GAAA,EAAD,KACC,kBAACC,GAAA,EAAD,CAAQ3gB,QAASmgB,EAAa/S,MAAM,WAApC,SAGA,kBAACuT,GAAA,EAAD,CACC3gB,QAAS,WACR7D,EAAS6jB,GAAelX,IACxBqX,KAED/S,MAAM,UACNwT,WAAS,GANV,+CAgBSC,GAAuB,SAAC,GAAwC,IAAtC/X,EAAqC,EAArCA,SAAqC,EACnDhI,oBAAS,GAD0C,oBACpEwQ,EADoE,KAC9DC,EAD8D,KAM3E,OACC,6BACC,kBAACpS,GAAA,EAAD,CACCC,MAAOU,GAAKH,UAAUxB,sBACtBkB,WAAYS,GAAKH,UAAUZ,kBAC3BO,eAAgBQ,GAAKH,UAAUX,uBAE/B,kBAACe,GAAA,EAAD,CACCrE,KAAK,SACLsE,QAAS,WACRuR,GAAQ,KAGT,kBAAC,KAAD,CAAY5P,SAAS,YAGvB,kBAAC,GAAD,CAA2BmH,SAAUA,EAAUwI,KAAMA,EAAM6O,YAnBzC,WACnB5O,GAAQ,Q,qBCtDGuP,GAAgB,SAAC,GAAiC,IAA/BX,EAA8B,EAA9BA,YAAalS,EAAiB,EAAjBA,MACtC9R,EAAW0D,eAEXogB,EAAiBpf,aAAYke,GAAQzU,UAAUhQ,YAE/CsI,EAAiDC,iBAAO,MAE9D,OACC,kBAAC,WAAD,KACC,kBAACuR,GAAA,EAAD,CACCpU,QAAS,WACP4C,EAAIyQ,QAA6B0N,UAGnC,kBAACJ,GAAA,EAAD,CAAQvgB,QAAQ,YAAYgN,MAAM,UAAU4T,kBAAgB,EAACC,UAAW,kBAAC,KAAD,OACtEhT,IAGH,2BACCrL,IAAKA,EACLtB,MAAO,CAAEyd,QAAS,QAClB3c,SAAU,SAACzF,GAEV,IAAMukB,EAAQvkB,EAAMuF,OAAOgf,MACrB9D,EAAO8D,EAAQA,EAAM,GAAK,KAChC,GAAI9D,EAAM,CACT,IAAM+D,EAAS,IAAIC,WACnBD,EAAOE,WAAWjE,GAClB+D,EAAOG,OAAS,WAIf,IAAMC,EAAmBhC,KAAKiC,MAAML,EAAOxH,QAErC8H,EAAgBF,EAAoCG,MACzD,SAAChZ,GAAD,OAAYA,EAAOO,OAASgX,KAE7B9jB,EAAS4N,GAAGI,QAAQxB,qBAAqB4Y,EAAkBE,KAG7DtB,KAEDzkB,KAAK,OACLimB,OAAO,W,qBC7CEC,GAAgB,SAAC,GAAiC,IAA/BzB,EAA8B,EAA9BA,YAAalS,EAAiB,EAAjBA,MACtC9R,EAAW0D,eAEX+C,EAAiDC,iBAAO,MAE9D,OACC,kBAAC,WAAD,KACC,kBAACuR,GAAA,EAAD,CACCpU,QAAS,WACP4C,EAAIyQ,QAA6B0N,UAGnC,kBAACJ,GAAA,EAAD,CACCvgB,QAAQ,YACRgN,MAAM,UACN4T,kBAAgB,EAChBC,UAAW,kBAAC,KAAD,OAEVhT,IAGH,2BACCrL,IAAKA,EACLtB,MAAO,CAAEyd,QAAS,QAClB3c,SAAU,SAACzF,GACV,IAAMukB,EAAQvkB,EAAMuF,OAAOgf,MACrB/mB,EAAM+mB,EAAQA,EAAM,GAAK,KAC3B/mB,GACHgC,EAASsjB,GAAetlB,IAEzBgmB,KAEDzkB,KAAK,OACLimB,OAAO,W,qBCjCEE,GAAyB,SAAC,GAAwC,IAAtC/Y,EAAqC,EAArCA,SAClC3M,EAAW0D,eACjB,OACC,kBAACV,GAAA,EAAD,CACCC,MAAOU,GAAKH,UAAUvB,yBACtBiB,WAAYS,GAAKH,UAAUZ,kBAC3BO,eAAgBQ,GAAKH,UAAUX,uBAE/B,kBAACe,GAAA,EAAD,CACCrE,KAAK,SACLsE,QAAS,WACR7D,EAAS4jB,GAAkBjX,MAG5B,kBAAC,KAAD,CAAoBnH,SAAS,aCf3BmgB,GAA8B,SAAC,GAAwC,IAAtChZ,EAAqC,EAArCA,SACtC,OACC,kBAACzI,EAAA,EAAD,CAAMC,WAAS,EAACC,UAAU,OACzB,kBAACF,EAAA,EAAD,CAAMG,MAAI,GACT,kBAAC,GAAD,CAAwBsI,SAAUA,KAGnC,kBAACzI,EAAA,EAAD,CAAMG,MAAI,GACT,kBAACC,GAAA,EAAD,CAASC,YAAY,cAGtB,kBAACL,EAAA,EAAD,CAAMG,MAAI,GACT,kBAAC,GAAD,CAAsBsI,SAAUA,OAMvBiZ,GAAqB,SAAC,GAAwC,IAAtCjZ,EAAqC,EAArCA,SACpC,OACC,kBAACzI,EAAA,EAAD,CAAMC,WAAS,EAACC,UAAU,MAAMc,QAAQ,gBAAgBD,WAAW,SAASmU,QAAS,GACpF,kBAAClV,EAAA,EAAD,CAAMG,MAAI,GAAEsI,EAAS+O,QAAQ,OAAQ,KAErC,kBAACxX,EAAA,EAAD,CAAMG,MAAI,GACT,kBAACL,GAAA,EAAD,CAAMC,QAAQ,YACb,kBAAC,GAAD,CAA6B0I,SAAUA,QCftCkZ,GAA2B,SAAC,GAAwC,IAAtClZ,EAAqC,EAArCA,SACnC,OACC,kBAACzI,EAAA,EAAD,CAAMC,WAAS,EAACC,UAAU,MAAMc,QAAQ,gBAAgBD,WAAW,SAASmU,QAAS,GACpF,kBAAClV,EAAA,EAAD,CAAMG,MAAI,GAAEsI,EAAS+O,QAAQ,OAAQ,KAErC,kBAACxX,EAAA,EAAD,CAAMG,MAAI,GACT,kBAACL,GAAA,EAAD,CAAMC,QAAQ,YACb,kBAAC,GAAD,CAAsB0I,SAAUA,QAOxBmZ,GAAU,WACtB,IAAMhC,EAAiBpf,aAAYke,GAAQzU,UAAUhQ,YAC/C4nB,EAAYrhB,aAAYkJ,GAAGO,UAAUR,kBAAkBJ,QAAO,SAACyY,GAAD,OAASA,IAAQlC,KAFzD,EAIImC,IAAMthB,SAA6B,MAJvC,oBAIrBuhB,EAJqB,KAIXC,EAJW,KAUtBnC,EAAc,WACnBmC,EAAY,OAGPnmB,EAAW0D,eAEX8W,EAAYrb,KAElB,OACC,6BACC,kBAACyE,GAAA,EAAD,CAAYrE,KAAK,SAASsE,QAdR,SAACrD,GACpB2lB,EAAY3lB,EAAM4lB,iBAchB,kBAAC,KAAD,OAED,kBAACvO,GAAA,EAAD,CACChJ,GAAG,cACHqX,SAAUA,EACVpO,aAAW,EACX3C,KAAMkR,QAAQH,GACdnQ,QAASiO,EACTsC,cAAe,CAAEnhB,MAAO,CAAEohB,YAAa,MAAOC,aAAc,SAE3D1C,GAAkB,CAClB,kBAACvd,GAAA,EAAD,CAAY7F,IAAK8Z,IAAaiM,UAAW,OAAQxiB,QAAQ,MACvDN,GAAKH,UAAUpB,oBAEjB,kBAAC,GAAD,CAA0B1B,IAAK8Z,IAAa7N,SAAUmX,IACtD,kBAACxf,GAAA,EAAD,CAAS5D,IAAK8Z,IAAarV,MAAO,CAAEuhB,UAAW,UAE/CX,EAAU5R,OAAS,GAAK,CACxB,kBAAC5N,GAAA,EAAD,CAAY7F,IAAK8Z,IAAaiM,UAAW,OAAQxiB,QAAQ,MACvDN,GAAKH,UAAUnB,kBAEjB,kBAACkE,GAAA,EAAD,CAAY7F,IAAK8Z,IAAaiM,UAAW,QACxC,wBAAIthB,MAAO,CAAEwhB,cAAe,WAC1BZ,EAAU5W,KAAI,SAACxC,GAAD,OACdA,EACC,wBAAIjM,IAAK8Z,KACR,kBAAC,GAAD,CAAoB7N,SAAUA,EAAUjM,IAAK8Z,OAE3C,UAIP,kBAAClW,GAAA,EAAD,CAAS5D,IAAK8Z,IAAarV,MAAO,CAAEuhB,UAAW,UAEhD,kBAAC,GAAD,CAAe1C,YAAaA,EAAalS,MAAO,kBAChD,kBAACxN,GAAA,EAAD,MACA,kBAAC2T,GAAA,EAAD,CACCpU,QAAS,WACR7D,EAASgjB,MACTgB,MAGD,kBAACQ,GAAA,EAAD,CAAQvgB,QAAQ,YAAYgN,MAAM,UAAU4T,kBAAgB,EAACC,UAAW,kBAAC,KAAD,OACtEnhB,GAAKH,UAAUjB,uBAGlB,kBAAC+B,GAAA,EAAD,MACA,kBAAC,GAAD,CAAe0f,YAAaA,EAAalS,MAAOnO,GAAKH,UAAUhB,wB,+BC5EtDokB,GAAsB,WAClC,IAAM5mB,EAAW0D,eAEXxE,EAAiBwF,aAAYke,GAAQzU,UAAUlP,mBAHb,EAKd0F,mBAASzF,GALK,oBAKjCrB,EALiC,KAK1BmH,EAL0B,OAOFL,mBAAS,YAPP,oBAOjCkiB,EAPiC,KAOpBC,EAPoB,KAclCC,EAAsB,WAC3B/mB,EAAS+e,GAAM/Q,QAAQ2C,uBASlBqW,EAAyB,WAC9BhnB,EAAS4iB,GAAQ5U,QAAQ7M,wBAIpB8E,EAA2B,UAAhB4gB,EApBK,SAAC5b,GAEL,KAAbA,GAAiBjL,EAAS+e,GAAM/Q,QAAQ2C,sBAC5C3L,EAASiG,IAOe,SAACA,GAER,KAAbA,GAAiBjL,EAAS4iB,GAAQ5U,QAAQ7M,uBAC9C6D,EAASiG,IAQJgc,EAAiC,UAAhBJ,EAA0BE,EAAsBC,EACjEE,EAAkC,UAAhBL,EAdK,kBAAM7mB,EAAS+e,GAAM/Q,QAAQ0C,iBAAiB7S,KAU3C,kBAAMmC,EAAS4iB,GAAQ5U,QAAQ/M,kBAAkBpD,KAkBjF,OACC,kBAACqG,EAAA,EAAD,CAAMC,WAAS,EAACC,UAAU,MAAMa,WAAW,SAASmU,QAAS,GAC5D,kBAAClV,EAAA,EAAD,CAAMG,MAAI,GACT,kBAAC8iB,GAAA,EAAD,CACCljB,QAAQ,WACRgN,MAAM,YACNmW,QAAM,EACNviB,MAAuB,UAAhBgiB,EAA0B,eAAiB,kBAClD5gB,SAAU,SACTzF,GArBe,IAAC6mB,IA0BmB,oBAAvB7mB,EAAMuF,OAAOlB,MAA8B,WAAa,QAzBxEiiB,EAAeO,GACK,UAAhBA,EACHL,IAEAD,IAED/hB,EAAS,MAsBN,gDACA,qDAGF,kBAACd,EAAA,EAAD,CAAMG,MAAI,GACT,kBAAC,KAAD,CACCQ,MAAOhH,EACPypB,YAA6B,UAAhBT,EAA0B,eAAiB,kBACxD5gB,SAAUA,EACVghB,eAAgBA,EAChBC,gBAAiBA,EACjBK,gBAAgB,O,0CClFfC,GAAa,WAClB,IAAMxnB,EAAW0D,eAGjB,OACC,kBAACV,GAAA,EAAD,CACCC,MAAOU,GAAKH,UAAUlC,YACtB4B,WAAYS,GAAKH,UAAUZ,kBAC3BO,eAAgBQ,GAAKH,UAAUX,uBAE/B,8BACC,kBAACe,GAAA,EAAD,CACCrE,KAAK,SACLsE,QAAS,WACR7D,EAAS0jB,kBAAe+D,UAGzB,kBAAC,KAAD,UAMCC,GAAa,WAClB,IAAM1nB,EAAW0D,eACjB,OACC,kBAACV,GAAA,EAAD,CACCC,MAAOU,GAAKH,UAAUjC,YACtB2B,WAAYS,GAAKH,UAAUZ,kBAC3BO,eAAgBQ,GAAKH,UAAUX,uBAE/B,kBAACe,GAAA,EAAD,CACCrE,KAAK,SACLsE,QAAS,WACR7D,EAAS0jB,kBAAeiE,UAGzB,kBAAC,KAAD,SAMSC,GAAe,WAC3B,OACC,kBAAC5jB,GAAA,EAAD,CAAMC,QAAQ,YACb,kBAACC,EAAA,EAAD,CAAMC,WAAS,EAACC,UAAU,OACzB,kBAACF,EAAA,EAAD,CAAMG,MAAI,GACT,kBAAC,GAAD,OAED,kBAACH,EAAA,EAAD,CAAMG,MAAI,GACT,kBAACC,GAAA,EAAD,CAASC,YAAY,cAEtB,kBAACL,EAAA,EAAD,CAAMG,MAAI,GACT,kBAAC,GAAD,U,qBC1DCwjB,GAAoB,WACzB,IAAM7nB,EAAW0D,eACX2L,EAAiB3K,aAAYqa,GAAM5Q,UAAUiB,mBAEnD,OACC,kBAACwC,GAAA,EAAD,CACCC,QACC,kBAACf,GAAD,CACCK,QAA4B,SAAnB9B,EACTxL,QAAS,WACR7D,EAAS+e,GAAM/Q,QAAQoC,2BAI1B0B,MAAM,WAKHgW,GAAuB,WAC5B,IAAM9nB,EAAW0D,eACXqkB,EAAmBrjB,aAAYke,GAAQzU,UAAUxP,kBAEvD,OACC,kBAACiT,GAAA,EAAD,CACCC,QACC,kBAACf,GAAD,CACCK,QAA8B,SAArB4W,EACTlkB,QAAS,WACR7D,EAAS4iB,GAAQ5U,QAAQpN,yBAI5BkR,MAAM,cAKIkW,GAAiB,WAAO,IAAD,EACH/B,IAAMthB,SAA6B,MADhC,oBAC5BuhB,EAD4B,KAClBC,EADkB,KAWnC,OACC,6BACC,kBAACviB,GAAA,EAAD,CAAYrE,KAAK,SAASsE,QAVR,SAACrD,GACpB2lB,EAAY3lB,EAAM4lB,iBAUhB,kBAAC,KAAD,OAED,kBAACvO,GAAA,EAAD,CAAMqO,SAAUA,EAAUpO,aAAW,EAAC3C,KAAMkR,QAAQH,GAAWnQ,QAT7C,WACnBoQ,EAAY,QASV,kBAAC5f,GAAA,EAAD,cACA,kBAACjC,GAAA,EAAD,MACA,kBAACJ,EAAA,EAAD,CAAMC,WAAS,EAACC,UAAU,OACzB,kBAACF,EAAA,EAAD,CAAMG,MAAI,GACT,kBAAC0a,GAAMxb,WAAW+N,sBAAlB,OAED,kBAACpN,EAAA,EAAD,CAAMG,MAAI,GACT,kBAACC,GAAA,EAAD,CAASC,YAAY,cAEtB,kBAACL,EAAA,EAAD,CAAMG,MAAI,GAER,kBAACH,EAAA,EAAD,CAAMC,WAAS,EAACC,UAAU,UACzB,kBAACF,EAAA,EAAD,CAAMG,MAAI,GACT,kBAAC,GAAD,OAED,kBAACH,EAAA,EAAD,CAAMG,MAAI,GACT,kBAAC,GAAD,aCrEI4jB,GAAa,WACzB,IAAMC,EAAexjB,aAAYke,GAAQzU,UAAUhQ,YAEnD,OACC,kBAACykB,GAAQrf,WAAWiD,oBAApB,KACC,kBAAC2hB,GAAA,EAAD,KACC,kBAACC,GAAA,EAAD,CAASnkB,QAAQ,WAChB,kBAACC,EAAA,EAAD,CAAMG,MAAI,GACT,kBAACH,EAAA,EAAD,CAAMC,WAAS,EAACiV,QAAS,EAAGhV,UAAU,MAAMa,WAAW,SAASC,QAAQ,cACvE,kBAAChB,EAAA,EAAD,CAAMG,MAAI,EAACc,MAAO,CAAEC,MAAO,QAC1B,kBAACwd,GAAQrf,WAAWkB,YAApB,OAGD,kBAACP,EAAA,EAAD,CAAMG,MAAI,GACT,kBAACue,GAAQrf,WAAWQ,eAApB,OAGD,kBAACG,EAAA,EAAD,CAAMG,MAAI,GACT,kBAAC,GAAD,SAKH,kBAACkC,GAAA,EAAD,CAAYpB,MAAO,CAAEkjB,SAAU,IAA/B,OAAqCH,QAArC,IAAqCA,OAArC,EAAqCA,EAAcxM,QAAQ,OAAQ,KACnE,kBAACxX,EAAA,EAAD,CAAMG,MAAI,GACT,kBAAC,GAAD,OAED,kBAAC,GAAD,MACA,kBAAC,GAAD,UClCU,IAAE2J,UAASzK,aAAY4K,aCG/B,SAASma,KAMf,OACC,kBAAC,WAAD,KACC,kBAAC1F,GAAQrf,WAAW4e,eAApB,MACA,kBAACje,EAAA,EAAD,CAAMC,WAAS,EAACe,QAAQ,SAASd,UAAU,SAASa,WAAW,UAAUmU,QAAS,GACjF,kBAAClV,EAAA,EAAD,CAAMG,MAAI,GACT,kBAACwN,GAAQtO,WAAW0kB,WAApB,OAGD,kBAACG,GAAA,EAAD,CAASvZ,GAAG,uBACZ,kBAAC3K,EAAA,EAAD,CAAMG,MAAI,GACT,kBAACue,GAAQrf,WAAWqd,YAApB,QAGF,kBAAC7N,GAAUxP,WAAWsT,YAAtB,MACA,kBAAC9D,GAAUxP,WAAW2R,kBAAtB,O,wDC6BGqT,GAAmBC,cACxB,SAACC,GACA,OAjCsC,SAACA,GAMxC,OADY,6BAAQA,GAAR,IAAsBC,YAAa,KAAMC,aAAc,KAAM3qB,IAJ/D,OAgCF4qB,CAAgCH,MAExC,SAACI,GACA,OAzBiC,SAACA,GAWnC,OAAO,6BACHA,GADJ,IAEC7qB,SAAK0U,EACL1T,WAAY,KACZd,mBAAoB,KACpBgB,eAAgB,KAST4pB,CAA2BD,KAEnC,CAAEE,UAAW,CAACnG,GAAQpf,UAAUvG,QAG3B+rB,GAAsB,SAACnrB,GAC5B,OAAO,6BAAKA,GAAZ,IAAmB+R,cAAe,MAG7BqZ,GAAiBT,cACtB,SAACC,GACA,OAAOA,KAER,SAACI,GACA,MAAO,CACN1e,QAAS6e,GAAoBH,EAAc1e,SAC3C+e,OAAQL,EAAcK,OAAO/Z,IAAI6Z,IACjCG,KAAMN,EAAcM,KAAKha,IAAI6Z,OAG/B,CAAED,UAAW,CAAChK,GAAMvb,UAAUvG,QAGlBmsB,GAAgB,CAC5B1oB,IAAK,OACL2oB,aACAC,WAAY,CAACf,GAAkBU,K,UCrE1BM,GAAcC,4BAAe,sBACjCzW,GAAUvP,UAAUvG,KAAOwsB,KAAS1W,GAAU7E,QAAS,CACvDX,OAAQmc,yBAAc,CAAC3W,GAAU9E,YAAY+D,eAAgBe,GAAU9E,YAAY8D,sBAFlD,gBAIjCgN,GAAMvb,UAAUvG,KAAOwsB,KAAS1K,GAAM7Q,QAAS,CAC/CX,OAAQmc,yBAAc,CACrBpf,GAAM2D,YAAYpH,UAClByD,GAAM2D,YAAYnH,YAClB8G,GAAGK,YAAY9B,6BARiB,gBAWjCyW,GAAQpf,UAAUvG,KAAO2lB,GAAQ1U,SAXA,gBAYjC5D,GAAM9G,UAAUvG,KAAOwsB,KAASnf,GAAM4D,QAAS,CAC/CX,OAAQmc,yBAAc,CACrB9b,GAAGK,YAAY9B,wBACf7B,GAAM2D,YAAYpH,UAClByD,GAAM2D,YAAYrH,aAClB0D,GAAM2D,YAAYnH,iBAjBc,gBAoBjC8G,GAAGpK,UAAUvG,KAAOwsB,KAAS7b,GAAGM,QAAS,CACzCX,OAAQmc,yBAAc,CAAC9b,GAAGK,YAAY9B,6BArBL,KA6B7Bwd,GAAmBC,aAAeR,GAAeG,IAGjDM,GADmBC,+BAAoB,CAAEC,eANxB,SAAClsB,GACvB,OAAOA,EAAMmsB,YAAYhsB,IAAlB,6BAA6BH,GAA7B,IAAoCmsB,YAAY,6BAAMnsB,EAAMmsB,aAAb,IAA0BhsB,IAAK,uBAAyBH,IAM9FosB,CAAiBC,2BAAgBC,OAErCC,GAAQC,uBAAYV,GAAkBE,IAEtCS,GAAYC,aAAaH,I,UC/CtCrH,EAAQ,KAERyH,IAASC,OACR,kBAAC,IAAMC,WAAP,KACC,kBAAC,KAAD,CAAUN,MAAOA,IAChB,kBAAC,KAAD,CAAarJ,QAAS,KAAMuJ,UAAWA,IACtC,kBAAChC,GAAD,SAIH3b,SAASge,eAAe,W","file":"static/js/main.5069b5f9.chunk.js","sourcesContent":["import { KeyboardEvent } from \"react\";\n\nexport const incrementer = () => {\n\tlet counter = 0;\n\treturn () => {\n\t\tconst curCounter = counter;\n\t\tcounter++;\n\t\treturn curCounter;\n\t};\n};\n\nexport type KeyActionMap = { [key: string]: any };\n\ntype KeyEventDispatcher = (event: KeyboardEvent<Element>, dispatch: any, state?: any) => void;\n\nexport const keyEventDispatcherCreator = (keyMap: KeyActionMap): KeyEventDispatcher => (\n\tevent: KeyboardEvent,\n\tdispatch: any\n) => {\n\tconst action = keyMap[event.key];\n\tif (action) {\n\t\tevent.preventDefault();\n\t\tdispatch(action);\n\t}\n};\n","export const NAME = \"displayData\";\n","import { NAME } from \"./constants\";\n\nexport const PDF_UPLOADED = NAME + \"/PDF_UPLOADED\";\nexport const MATERIAL_LOADED = NAME + \"/MATERIAL_LOADED\";\n\nexport const DISPLAY_STATUS = NAME + \"/DISPLAY_STATUS\";\n\nexport const PAGE_UPDATE = NAME + \"/PAGE_UPDATE\";\nexport const SPAN_ORIGIN = NAME + \"/SPAN_ORIGIN\";\nexport const DOCUMENT_SEARCH = NAME + \"/DOCUMENT_SEARCH\";\n\nexport const WINDOW_LAYOUT = NAME + \"/WINDOW_LAYOUT\";\n","import { SingleOrigin } from \"../cards/model/origin\";\n\nexport type DisplayStatus = \"SHOW\" | \"HIDE\";\n\nexport type DisplayData = {\n\tpdf?: File;\n\tpdfName?: string;\n\tdisplayStatus: DisplayStatus;\n\tcurrentPage: number;\n\tscrollToPage: number | null;\n\ttotalPages: number;\n\tspanOrigin: SingleOrigin | null;\n\twindowMeasurements: { width: number; height: number } | null;\n\tdocumentSearch: string | \"\";\n};\n\nexport type PageMove = \"PREVIOUS\" | \"NEXT\";\n\nexport const pageCorrections = {\n\tADD: (newPage: number, totalPages: number) => (newPage === totalPages + 1 ? 1 : newPage),\n\tREMOVE: (newPage: number, totalPages: number) => (newPage === 0 ? totalPages : newPage),\n};\n","import { createSelector } from \"reselect\";\nimport { DisplayData } from \"./model\";\nimport { NAME } from \"./constants\";\n\nexport const getAll = (state: any): DisplayData => state[NAME];\n\nexport const getPDF = createSelector(getAll, (state: DisplayData) => state.pdf);\n\nexport const getWindowMeasurements = createSelector(getAll, (state) => state.windowMeasurements);\n\nexport const getPDFName = createSelector(getAll, (state) => state.pdfName);\n\nexport const getTotalPages = createSelector(getAll, (state: DisplayData) => state.totalPages);\n\nexport const getCurrentPage = createSelector(getAll, (state: DisplayData) => state.currentPage);\n\nexport const getScrollToPage = createSelector(getAll, (state) => state.scrollToPage);\n\nexport const getPageControlData = createSelector(getTotalPages, getCurrentPage, (totalPages, currentPage) => {\n\treturn { currentPage, totalPages };\n});\n\nexport const getDisplayStatus = createSelector(getAll, (state: DisplayData) => state.displayStatus);\n\nexport const displayStatusIsShow = createSelector(getDisplayStatus, (status) => status === \"SHOW\");\n\nexport const getSpanOrigin = createSelector(getAll, (state) => state.spanOrigin);\n\nexport const getDocumentSearch = createSelector(getAll, (state) => state.documentSearch);\n","import { Dispatch } from \"redux\";\nimport * as t from \"./actionTypes\";\nimport { PageMove, pageCorrections } from \"./model\";\nimport { getPageControlData, getDisplayStatus } from \"./selectors\";\nimport { keyEventDispatcherCreator, KeyActionMap } from \"../../shared/utils\";\nimport { SingleOrigin } from \"../cards/model/origin\";\n\nexport const widthPixels = (windowMeasurements: { width: number; height: number }) => {\n\treturn { type: t.WINDOW_LAYOUT, payload: windowMeasurements };\n};\n\nexport const pdfUpload = (pdf: File) => {\n\treturn { type: t.PDF_UPLOADED, payload: pdf };\n};\n\nexport const materialLoaded = (totalPages: number) => {\n\treturn { type: t.MATERIAL_LOADED, payload: totalPages };\n};\n\nexport const setPage = (page: number, shouldScroll: boolean) => {\n\treturn { type: t.PAGE_UPDATE, payload: { page, shouldScroll } };\n};\n\nexport const movePage = (type: PageMove) => {\n\treturn (dispatch: Dispatch, getState: Function) => {\n\t\tconst { currentPage, totalPages } = getPageControlData(getState());\n\t\tswitch (type) {\n\t\t\tcase \"NEXT\":\n\t\t\t\tdispatch(setPage(pageCorrections[\"ADD\"](currentPage + 1, totalPages), true));\n\t\t\t\tbreak;\n\t\t\tcase \"PREVIOUS\":\n\t\t\t\tdispatch(setPage(pageCorrections[\"REMOVE\"](currentPage - 1, totalPages), true));\n\t\t\t\tbreak;\n\t\t}\n\t};\n};\nexport const nextPage = () => movePage(\"NEXT\");\nexport const previousPage = () => movePage(\"PREVIOUS\");\nconst pageControlKeyMap: KeyActionMap = {\n\tArrowLeft: previousPage(),\n\tArrowRight: nextPage(),\n};\nexport const pageControlDispatcher = keyEventDispatcherCreator(pageControlKeyMap);\n\nexport const toggleDisplayState = () => {\n\treturn (dispatch: Dispatch, getState: Function) => {\n\t\tconst displayState = getDisplayStatus(getState()) === \"SHOW\" ? \"HIDE\" : \"SHOW\";\n\n\t\tdispatch({ type: t.DISPLAY_STATUS, payload: displayState });\n\t};\n};\n\nexport const setSpanOrigin = (origin: SingleOrigin | null) => {\n\treturn { type: t.SPAN_ORIGIN, payload: origin };\n};\n\nexport const resetSpanOrigin = () => {\n\treturn setSpanOrigin(null);\n};\n\nexport const setDocumentSearch = (search: string | null) => {\n\treturn { type: t.DOCUMENT_SEARCH, payload: search };\n};\n\nexport const resetDocumentSearch = () => {\n\treturn setDocumentSearch(\"\");\n};\n","/// Tooltip-Text\n\nexport const switchToActiveRiverTooltip = \"Switch to the Active-River view\";\nexport const switchToSummaryRiverTooltip = \"Switch to the Summary-River view\";\n\nexport const undoTooltip = \"Undo last action\";\nexport const redoTooltip = \"Redo last action\";\n\nexport const nextPageTooltip = \"Next page\";\nexport const previousPageTooltip = \"Previous page\";\n\nexport const deleteCardTooltip = \"Delete this card\";\nexport const grabForCardTooltip = \"Activate the document-selection grab for this card(-field)\";\nexport const jumpToOriginTooltip = \"Jump to the origin of the card content\";\nexport const appendToCardTooltip = \"Add the current or next selection to this card (only from document)\";\n\nexport const newQACardTooltip = \"Create new QA-card\";\nexport const newNoteCardTooltip = \"Create new Note-card\";\n\nexport const deleteDocumentTooltip = \"Delete this document and all its corresponding cards\";\nexport const loadSavedDocumentTooltip = \"Load the card data of this document\";\n\n/// Text\n\nexport const noMaterialText = \"No PDF file specified.\";\nexport const loadingMaterialText = \"Loading PDF…\";\n\nexport const activeDocumentText = \"Active Document:\";\nexport const existingDataText = \"Inactive documents with existing data:\";\nexport const loadMaterialText = \"Load document\";\nexport const downloadDatasetsText = \"Download document datasets\";\nexport const uploadDatasetsText = \"Upload document datasets\";\n\nexport const noteText = \"Note\";\nexport const questionText = \"Question\";\nexport const answerText = \"Answer\";\n\n/// Delay\n\nexport const defaultEnterDelay = 500;\nexport const defaultEnterNextDelay = 1000;\n","import React, { ReactElement } from \"react\";\nimport { Tooltip } from \"@material-ui/core\";\nimport { newNoteCardTooltip, defaultEnterDelay, defaultEnterNextDelay } from \"../constants\";\n\nexport const NewNoteCardTooltip = ({ children }: { children: ReactElement }) => {\n\treturn (\n\t\t<Tooltip title={newNoteCardTooltip} enterDelay={defaultEnterDelay} enterNextDelay={defaultEnterNextDelay}>\n\t\t\t{children}\n\t\t</Tooltip>\n\t);\n};\n","import React, { ReactElement } from \"react\";\nimport { Tooltip } from \"@material-ui/core\";\nimport { defaultEnterDelay, defaultEnterNextDelay, newQACardTooltip } from \"../constants\";\n\nexport const AddQAButtonTooltip = ({ children }: { children: ReactElement }) => {\n\treturn (\n\t\t<Tooltip title={newQACardTooltip} enterDelay={defaultEnterDelay} enterNextDelay={defaultEnterNextDelay}>\n\t\t\t{children}\n\t\t</Tooltip>\n\t);\n};\n","import React, { ReactElement } from \"react\";\nimport { Tooltip } from \"@material-ui/core\";\nimport { defaultEnterDelay, defaultEnterNextDelay, deleteCardTooltip } from \"../constants\";\n\nexport const DeleteCardButtonTooltip = ({ children }: { children: ReactElement }) => {\n\treturn (\n\t\t<Tooltip title={deleteCardTooltip} enterDelay={defaultEnterDelay} enterNextDelay={defaultEnterNextDelay}>\n\t\t\t{children}\n\t\t</Tooltip>\n\t);\n};\n","import React, { ReactElement } from \"react\";\nimport { Tooltip } from \"@material-ui/core\";\nimport { defaultEnterDelay, defaultEnterNextDelay, appendToCardTooltip } from \"../constants\";\n\nexport const AppendButtonTooltip = ({ children }: { children: ReactElement }) => {\n\treturn (\n\t\t<Tooltip title={appendToCardTooltip} enterDelay={defaultEnterDelay} enterNextDelay={defaultEnterNextDelay}>\n\t\t\t{children}\n\t\t</Tooltip>\n\t);\n};\n","import * as components from \"./components\";\nimport * as constants from \"./constants\";\n\nexport default { components, constants };\n","import React from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { IconButton, Card, Grid, Divider, Tooltip } from \"@material-ui/core\";\nimport ArrowForwardIosIcon from \"@material-ui/icons/ArrowForwardIos\";\nimport ArrowBackIosIcon from \"@material-ui/icons/ArrowBackIos\";\nimport { nextPage, previousPage } from \"../actions\";\nimport text from \"../../text\";\n\nconst PreviousButton = () => {\n\tconst dispatch = useDispatch();\n\treturn (\n\t\t<Tooltip\n\t\t\ttitle={text.constants.previousPageTooltip}\n\t\t\tenterDelay={text.constants.defaultEnterDelay}\n\t\t\tenterNextDelay={text.constants.defaultEnterNextDelay}\n\t\t>\n\t\t\t<IconButton\n\t\t\t\ttype=\"button\"\n\t\t\t\tonClick={() => {\n\t\t\t\t\tdispatch(previousPage());\n\t\t\t\t}}\n\t\t\t>\n\t\t\t\t<ArrowBackIosIcon></ArrowBackIosIcon>\n\t\t\t</IconButton>\n\t\t</Tooltip>\n\t);\n};\n\nconst NextButton = () => {\n\tconst dispatch = useDispatch();\n\treturn (\n\t\t<Tooltip\n\t\t\ttitle={text.constants.nextPageTooltip}\n\t\t\tenterDelay={text.constants.defaultEnterDelay}\n\t\t\tenterNextDelay={text.constants.defaultEnterNextDelay}\n\t\t>\n\t\t\t<IconButton\n\t\t\t\ttype=\"button\"\n\t\t\t\tonClick={() => {\n\t\t\t\t\tdispatch(nextPage());\n\t\t\t\t}}\n\t\t\t>\n\t\t\t\t<ArrowForwardIosIcon></ArrowForwardIosIcon>\n\t\t\t</IconButton>\n\t\t</Tooltip>\n\t);\n};\n\nexport const PageNavigation = () => {\n\treturn (\n\t\t<Card variant=\"outlined\">\n\t\t\t<Grid container direction=\"row\">\n\t\t\t\t<Grid item>\n\t\t\t\t\t<PreviousButton></PreviousButton>\n\t\t\t\t</Grid>\n\t\t\t\t<Grid item>\n\t\t\t\t\t<Divider orientation=\"vertical\"></Divider>\n\t\t\t\t</Grid>\n\t\t\t\t<Grid item>\n\t\t\t\t\t<NextButton></NextButton>\n\t\t\t\t</Grid>\n\t\t\t</Grid>\n\t\t</Card>\n\t);\n};\n","import React, { useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Typography, TextField, Card, Grid } from \"@material-ui/core\";\nimport { setPage } from \"../../actions\";\nimport { getPageControlData } from \"../../selectors\";\n\nconst nonDigitRegEx = /(\\D)/;\n\nexport const validatePageChoice = (possiblePage: string, totalPages: number) => {\n\tif (possiblePage === \"\" || possiblePage.trim().match(nonDigitRegEx) !== null) return false;\n\n\tconst asInt = parseInt(possiblePage);\n\tif (asInt < 1 || totalPages < asInt) return false;\n\n\treturn true;\n};\n\nexport const PageChooser = () => {\n\tconst dispatch = useDispatch();\n\tconst { currentPage, totalPages } = useSelector(getPageControlData);\n\n\tconst [state, setState] = useState({\n\t\terror: false,\n\t\tvalue: currentPage?.toString(),\n\t\tuserInput: currentPage?.toString(),\n\t});\n\n\t// with this we can trigger a re-render onChange,\n\t// while making sure that if a new currentPage arrives, we reset the component\n\tif (state.value !== currentPage.toString()) {\n\t\tsetState({ error: false, value: currentPage.toString(), userInput: currentPage.toString() });\n\t}\n\n\treturn (\n\t\t<Card variant=\"outlined\">\n\t\t\t<Grid item>\n\t\t\t\t<Grid container direction=\"row\" alignItems=\"center\" justify=\"space-between\">\n\t\t\t\t\t<Grid item style={{ width: \"37%\" }}>\n\t\t\t\t\t\t<TextField\n\t\t\t\t\t\t\tinputProps={{\n\t\t\t\t\t\t\t\tstyle: {\n\t\t\t\t\t\t\t\t\tpadding: \"0px\",\n\t\t\t\t\t\t\t\t\t//h6 Typography style\n\t\t\t\t\t\t\t\t\tfontSize: \"1.25rem\",\n\t\t\t\t\t\t\t\t\tfontFamily: '\"Roboto\", \"Helvetica\", \"Arial\", sansSerif',\n\t\t\t\t\t\t\t\t\tfontWeight: 500,\n\t\t\t\t\t\t\t\t\tlineHeight: 1.6,\n\t\t\t\t\t\t\t\t\tletterSpacing: \"0.0075em\",\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\tvariant=\"filled\"\n\t\t\t\t\t\t\tvalue={state.userInput}\n\t\t\t\t\t\t\tonKeyDown={(event) => {\n\t\t\t\t\t\t\t\tif (event.key === \"Enter\") {\n\t\t\t\t\t\t\t\t\tevent.preventDefault();\n\t\t\t\t\t\t\t\t\tconst submittedValue = (event.target as HTMLFormElement).value;\n\t\t\t\t\t\t\t\t\tif (!state.error) {\n\t\t\t\t\t\t\t\t\t\tdispatch(setPage(parseInt(submittedValue), true));\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\tonChange={(event) => {\n\t\t\t\t\t\t\t\tconst submittedValue = (event.target as HTMLTextAreaElement).value;\n\t\t\t\t\t\t\t\tif (validatePageChoice(submittedValue, totalPages as number)) {\n\t\t\t\t\t\t\t\t\tsetState({ ...state, error: false, userInput: submittedValue });\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\tsetState({ ...state, error: true, userInput: submittedValue });\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\terror={state.error}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</Grid>\n\n\t\t\t\t\t<Grid item style={{ width: \"61%\" }}>\n\t\t\t\t\t\t<Typography variant=\"h6\">of {totalPages}</Typography>\n\t\t\t\t\t</Grid>\n\t\t\t\t</Grid>\n\t\t\t</Grid>\n\t\t</Card>\n\t);\n};\n","import { ReactNode, KeyboardEvent, useRef, MutableRefObject } from \"react\";\nimport { pageControlDispatcher } from \"../../actions\";\nimport React from \"react\";\nimport { useDispatch } from \"react-redux\";\n\n// note to self: prefer to expose components and not implementation details (actions etc.)\n\nexport const PageKeyboardControl = ({ children }: { children: ReactNode }) => {\n\tconst dispatch = useDispatch();\n\tconst ref: MutableRefObject<null | HTMLInputElement> = useRef(null);\n\n\treturn (\n\t\t<span\n\t\t\tref={ref}\n\t\t\tonKeyDown={(event: KeyboardEvent<HTMLSpanElement>) => {\n\t\t\t\tpageControlDispatcher(event, dispatch);\n\t\t\t}}\n\t\t\ttabIndex={0}\n\t\t>\n\t\t\t{children}\n\t\t</span>\n\t);\n};\n","export const NAME = \"cardRiverState\";\n","export const NAME = \"cards\";\n","import { NAME } from \"./constants\";\n\nexport const CARD_REPLACE = NAME + \"/CARD_REPLACE\";\nexport const CARD_PUSH = NAME + \"/CARD_PUSH\";\nexport const CARD_REMOVE = NAME + \"/CARD_REMOVE\";\n","import { CardField, QACardField } from \"./content\";\n\n// for origin and content the same object structure is used,\n// so same permutation api should be used\n\ntype NoteObject = any;\ntype QAObject = { [key in QACardField]: any };\ntype CardObject = NoteObject | QAObject;\n\nconst FieldValueAccessorMap: { [field in CardField]: (cardObject: CardObject) => any } = {\n\tnote: (cardObject) => cardObject,\n\tq: (cardObject) => (cardObject as QAObject).q,\n\ta: (cardObject) => (cardObject as QAObject).a,\n};\nexport const toFieldValue = (field: CardField, cardObject: CardObject) => FieldValueAccessorMap[field](cardObject);\n\ntype Modify = (oldValue: any) => any;\nconst FieldValueModifierMap: { [key in CardField]: (cardObject: CardObject, modify: Modify) => any } = {\n\tnote: (cardObject, modify) => modify(cardObject),\n\tq: (cardObject, modify) => {\n\t\treturn { ...(cardObject as QAObject), q: modify((cardObject as QAObject).q) };\n\t},\n\ta: (cardObject, modify) => {\n\t\treturn { ...(cardObject as QAObject), a: modify((cardObject as QAObject).a) };\n\t},\n};\nconst modifyFieldValue = (field: CardField, cardObject: CardObject, modify: Modify) =>\n\tFieldValueModifierMap[field](cardObject, modify);\n\nexport type CreateModify = (inputValue: any) => Modify;\n\n// this replace is generic, I dont put append here, because that is object specific\nexport const createReplace: CreateModify = (inputValue: any) => (_: any) => inputValue;\n\nexport type CardObjectChangeSpec = {\n\tinputField: CardField;\n\tinputObject: CardObject;\n\tfieldToBeChanged: CardField;\n\tobjectToBeChanged: CardObject;\n\tcreateModify: CreateModify;\n};\nexport const changeCardObject = (spec: CardObjectChangeSpec) => {\n\tconst inputValue = toFieldValue(spec.inputField, spec.inputObject);\n\tconst modify = spec.createModify(inputValue);\n\treturn modifyFieldValue(spec.fieldToBeChanged, spec.objectToBeChanged, modify);\n};\n","import { CreateModify, changeCardObject, createReplace } from \"./permutation\";\nimport { UpdateType } from \"./config\";\n\nexport type QACardField = \"q\" | \"a\";\nexport type CardField = \"note\" | QACardField;\n\nexport type StringCardContent = string;\nexport type NoteCardContent = StringCardContent;\nexport type QACardContent = {\n\t[field in QACardField]: StringCardContent;\n};\nexport type CardContent = NoteCardContent | QACardContent;\n\ntype EmptyContent = { q: \"\"; a: \"\" } | \"\";\nconst emptyQAContent = (): EmptyContent => {\n\treturn { q: \"\", a: \"\" };\n};\nconst EmptyContentMap: { [field in CardField]: () => EmptyContent } = {\n\tq: emptyQAContent,\n\ta: emptyQAContent,\n\tnote: () => \"\",\n};\nexport const emptyContent = (field: CardField) => {\n\treturn EmptyContentMap[field]();\n};\n\nexport const noteContentIsEmpty = (content: string) => content === \"\";\nexport const qaContentIsNotFull = (content: QACardContent) =>\n\t(content as QACardContent).q === \"\" || (content as QACardContent).a === \"\";\n\nconst createAppendStr: CreateModify = (inputValue: string) => (oldValue: string) => oldValue + inputValue;\nconst UpdateTypeCreateModifyMap: { [updateType in UpdateType]: CreateModify } = {\n\tAPPEND: createAppendStr,\n\tREPLACE: createReplace,\n};\nconst updateTypeToCreateModify = (updateType: UpdateType) => UpdateTypeCreateModifyMap[updateType];\n\n// noteObjects are a single value like the selectedString, so we use them as a field for convenience\n// TODO-NICE: make single value generic CardObject definition\nconst inputField: CardField = \"note\";\n\nexport const strToCardContent = (\n\tcontentStr: string,\n\toutputField: CardField,\n\tupdateType: UpdateType,\n\texistingContent: CardContent\n): CardContent => {\n\tconst changeSpec = {\n\t\tinputObject: contentStr,\n\t\tinputField,\n\t\tfieldToBeChanged: outputField,\n\t\tobjectToBeChanged: existingContent,\n\t\tcreateModify: updateTypeToCreateModify(updateType),\n\t};\n\treturn changeCardObject(changeSpec);\n};\n\nexport const strToNewCardContent = (contentStr: string, outputField: CardField) => {\n\t// new is always empty and we replace the input in the empty shell\n\tconst empty = emptyContent(outputField);\n\treturn strToCardContent(contentStr, outputField, \"REPLACE\", empty);\n};\n","import { NoteOrigin, QAOrigin } from \"./origin\";\nimport {\n\tNoteCardContent,\n\tQACardContent,\n\tnoteContentIsEmpty,\n\tqaContentIsNotFull,\n\tstrToCardContent,\n\tCardField,\n} from \"./content\";\n\nexport type CardID = string;\nexport const cardIDToNumber = (cardID: CardID) => parseInt(cardID);\nexport const nextCardID = (lastCardIDNumber: number) => (lastCardIDNumber + 1).toString();\n\nexport type CardType = \"Note\" | \"Q-A\";\nexport type NoteConfig = { cardID: CardID; type: CardType; content: NoteCardContent; origin?: NoteOrigin };\nexport type QAConfig = { cardID: CardID; type: CardType; content: QACardContent; origin?: QAOrigin };\nexport type CardConfig = NoteConfig | QAConfig;\n\nconst CardIsFullMap: { [card in CardType]: (config: CardConfig) => boolean } = {\n\tNote: (config) => noteContentIsEmpty(config.content as NoteCardContent),\n\t\"Q-A\": (config) => qaContentIsNotFull(config.content as QACardContent),\n};\nexport const cardIsNotFull = (config: CardConfig) => CardIsFullMap[config.type](config);\n\nexport type UpdateType = \"REPLACE\" | \"APPEND\";\n\nexport type CreationType = \"note\" | \"q\" | \"a\";\n\nexport const strToCardConfig = (\n\tcontentStr: string,\n\toutputField: CardField,\n\tupdateType: UpdateType,\n\tbaseCard: CardConfig\n): CardConfig => {\n\tconst changedContent = strToCardContent(contentStr, outputField, updateType, baseCard.content);\n\treturn { ...baseCard, content: changedContent } as CardConfig;\n};\n\nconst CardFieldToTypeMap: { [field in CardField]: CardType } = {\n\tq: \"Q-A\",\n\ta: \"Q-A\",\n\tnote: \"Note\",\n};\n\nexport const cardFieldToType = (field: CardField) => CardFieldToTypeMap[field];\n\nexport type CardFieldIdentifier = { cardID: CardID; cardField: CardField };\n","import { createSelector } from \"reselect\";\nimport { CardsState } from \"./model/state\";\nimport { NAME } from \"./constants\";\n\nexport const getAll = (state: any) => state[NAME].present;\n\nexport const getLastCardIDNumber = createSelector(getAll, (state) => state.lastCardIDNumber);\n\nexport const getCards = createSelector(getAll, (state: CardsState) => state.cards);\n\nexport const getCardByID = (state: any, cardID: string) => getCards(state)[cardID];\n","import { CardConfig, CardID, strToCardConfig } from \"./model/config\";\nimport { CardPayload, cardPayloadToCardConfig, emptyNotePayload, emptyQAPayload } from \"./model/payload\";\nimport * as t from \"./actionTypes\";\nimport { Dispatch } from \"redux\";\nimport { CardField } from \"./model/content\";\n\nexport const cardPush = (cardPayload: CardPayload) => {\n\treturn (dispatch: Dispatch, getState: Function) => {\n\t\tdispatch({\n\t\t\ttype: t.CARD_PUSH,\n\t\t\tpayload: cardPayloadToCardConfig(cardPayload, getState()),\n\t\t});\n\t};\n};\nexport const emptyNoteCard = () => cardPush(emptyNotePayload());\nexport const emptyQACard = () => cardPush(emptyQAPayload());\n\nexport const cardReplace = (card: CardConfig) => {\n\treturn { type: t.CARD_REPLACE, payload: card };\n};\nexport const replaceCardFieldContent = (cardField: CardField, cardConfig: CardConfig, newValue: string) => {\n\treturn cardReplace(strToCardConfig(newValue, cardField, \"REPLACE\", cardConfig));\n};\n\nexport const removeCard = (cardID: CardID) => {\n\treturn { type: t.CARD_REMOVE, payload: cardID };\n};\n","import { CardField, strToCardContent } from \"./content\";\nimport { getLastCardIDNumber } from \"../selectors\";\nimport { CardConfig, nextCardID, UpdateType } from \"./config\";\nimport { CardsState } from \"./state\";\n\nexport type CardPayload = Omit<CardConfig, \"cardID\">;\nexport const emptyNotePayload = (): CardPayload => {\n\treturn { type: \"Note\", content: \"\" };\n};\nexport const emptyQAPayload = (): CardPayload => {\n\treturn { type: \"Q-A\", content: { q: \"\", a: \"\" } };\n};\n\nexport const strToCardPayload = (\n\tcontentStr: string,\n\toutputField: CardField,\n\tupdateType: UpdateType,\n\tbaseCard: CardPayload\n): CardPayload => {\n\tconst changedContent = strToCardContent(contentStr, outputField, updateType, baseCard.content);\n\treturn { ...baseCard, content: changedContent };\n};\n\nconst EmptyPayloadFieldMap: {\n\t[key in CardField]: () => CardPayload;\n} = {\n\tnote: emptyNotePayload,\n\tq: emptyQAPayload,\n\ta: emptyQAPayload,\n};\nexport const cardFieldToEmptyPayload = (field: CardField) => EmptyPayloadFieldMap[field]();\n\nexport const cardPayloadToCardConfig = (payload: CardPayload, state: CardsState) => {\n\treturn { ...payload, cardID: nextCardID(getLastCardIDNumber(state)) } as CardConfig;\n};\n","import FeaturedVideoIcon from \"@material-ui/icons/FeaturedVideo\";\nimport React from \"react\";\nimport { IconButton } from \"@material-ui/core\";\nimport { useDispatch } from \"react-redux\";\nimport text from \"../../text\";\nimport { emptyNoteCard } from \"../actions\";\n\nexport const AddNoteButton = () => {\n\tconst dispatch = useDispatch();\n\treturn (\n\t\t<text.components.NewNoteCardTooltip>\n\t\t\t<IconButton\n\t\t\t\ttype=\"button\"\n\t\t\t\tonClick={() => {\n\t\t\t\t\tdispatch(emptyNoteCard());\n\t\t\t\t}}\n\t\t\t>\n\t\t\t\t<FeaturedVideoIcon></FeaturedVideoIcon>\n\t\t\t</IconButton>\n\t\t</text.components.NewNoteCardTooltip>\n\t);\n};\n","import FeaturedPlayListIcon from \"@material-ui/icons/FeaturedPlayList\";\nimport React from \"react\";\nimport { IconButton } from \"@material-ui/core\";\nimport { useDispatch } from \"react-redux\";\nimport text from \"../../text\";\nimport { emptyQACard } from \"../actions\";\n\nexport const AddQAButton = () => {\n\tconst dispatch = useDispatch();\n\treturn (\n\t\t<text.components.AddQAButtonTooltip>\n\t\t\t<IconButton\n\t\t\t\ttype=\"button\"\n\t\t\t\tonClick={() => {\n\t\t\t\t\tdispatch(emptyQACard());\n\t\t\t\t}}\n\t\t\t>\n\t\t\t\t<FeaturedPlayListIcon></FeaturedPlayListIcon>\n\t\t\t</IconButton>\n\t\t</text.components.AddQAButtonTooltip>\n\t);\n};\n","import DeleteForeverIcon from \"@material-ui/icons/DeleteForever\";\nimport React from \"react\";\nimport { IconButton } from \"@material-ui/core\";\nimport { useDispatch } from \"react-redux\";\nimport { CardID } from \"../model/config\";\nimport text from \"../../text\";\nimport { removeCard } from \"../actions\";\n\n//TODO-NICE: use storybook for visual component testing\n\nexport const DeleteCardButton = ({ cardID }: { cardID: CardID }) => {\n\tconst dispatch = useDispatch();\n\treturn (\n\t\t<text.components.DeleteCardButtonTooltip>\n\t\t\t<IconButton\n\t\t\t\ttype=\"button\"\n\t\t\t\tonClick={() => {\n\t\t\t\t\tdispatch(removeCard(cardID));\n\t\t\t\t}}\n\t\t\t>\n\t\t\t\t<DeleteForeverIcon fontSize=\"small\"></DeleteForeverIcon>\n\t\t\t</IconButton>\n\t\t</text.components.DeleteCardButtonTooltip>\n\t);\n};\n","import { CardField } from \"./content\";\nimport { createReplace, changeCardObject } from \"./permutation\";\n\nexport type SingleOrigin = { spanIndex: number; page: number };\nexport type QOnlyQAOrigin = { q: SingleOrigin; a: {} };\nexport type AOnlyQAOrigin = { q: {}; a: SingleOrigin };\nexport type PartialQAOrigin = QOnlyQAOrigin | AOnlyQAOrigin;\nconst emptyQAOrigin = () => {\n\treturn { q: {}, a: {} };\n};\ntype EmptyOrigin = { q: {}; a: {} } | \"\";\nconst EmptyOriginMap: { [field in CardField]: () => EmptyOrigin } = {\n\tq: emptyQAOrigin,\n\ta: emptyQAOrigin,\n\tnote: () => \"\",\n};\nexport const emptyOrigin = (field: CardField) => {\n\treturn EmptyOriginMap[field]();\n};\ntype FullQAOrigin = { q: SingleOrigin; a: SingleOrigin };\nexport type QAOrigin = FullQAOrigin | PartialQAOrigin;\nexport type NoteOrigin = SingleOrigin;\nexport type CardOrigin = NoteOrigin | QAOrigin;\n\nexport const singleOriginToCardOrigin = (\n\tsingleOrigin: SingleOrigin,\n\toutputField: CardField,\n\tbaseOrigin?: CardOrigin\n): CardOrigin => {\n\tconst changeSpec = {\n\t\tinputObject: singleOrigin,\n\t\tinputField: \"note\" as CardField,\n\t\tfieldToBeChanged: outputField,\n\t\tobjectToBeChanged: baseOrigin ? baseOrigin : emptyOrigin(outputField),\n\t\tcreateModify: createReplace,\n\t};\n\n\treturn changeCardObject(changeSpec);\n};\n","import { CardConfig, CardID } from \"./config\";\n\ntype Cards = { [cardID: string]: CardConfig };\n\nexport type CardsState = {\n\tcards: Cards;\n\tlastCardIDNumber: number;\n};\nexport const removeCardFromCardsState = (state: CardsState, cardID: CardID) => {\n\tconst cards = { ...state.cards };\n\n\t// we do not reset the ID counter\n\tdelete cards[cardID];\n\n\treturn { ...state, cards };\n};\nexport const replaceCardsInCardsState = (state: CardsState, cards: Cards, lastCardIDNumber: number) => {\n\treturn {\n\t\t...state,\n\t\tcards,\n\t\tlastCardIDNumber,\n\t};\n};\nexport const updateCardInCards = (cards: Cards, toBeUpdated: CardConfig) => {\n\tconst cardObj = { ...cards };\n\tcardObj[toBeUpdated.cardID] = toBeUpdated;\n\treturn cardObj;\n};\nexport const addCardToCards = updateCardInCards;\n","export const NAME = \"documentDB\";\n","import { NAME } from \"./constants\";\n\nexport const ARCHIVE_CURRENT_DATA = NAME + \"/ARCHIVE_CURRENT_DATA\";\nexport const LOAD_DOCUMENT_DATA_SETS = NAME + \"/LOAD_DOCUMENT_DATA_SETS\";\nexport const DELETE_DOCUMENT_DATA_SET = NAME + \"/DELETE_DOCUMENT_DATA_SET\";\nexport const DOCUMENT_CHANGE = NAME + \"/DOCUMENT_CHANGE\";\n","import { DocumentData } from \"./model\";\nimport * as t from \"./actionTypes\";\n\nexport const archiveDBData = (dbData: DocumentData) => {\n\treturn { type: t.ARCHIVE_CURRENT_DATA, payload: dbData };\n};\n\nexport const loadDocumentDataSets = (dbData: DocumentData[], newActiveDataSet?: DocumentData) => {\n\treturn { type: t.LOAD_DOCUMENT_DATA_SETS, payload: { dbData, newActiveDataSet } };\n};\n\n//TODO-NICE: might need to make my convention of always using payload as data-field obvious?\n\nexport const deleteDocumentDataSet = (document: string) => {\n\treturn { type: t.DELETE_DOCUMENT_DATA_SET, payload: document };\n};\n","import { CardRiverState } from \"../river/model\";\nimport { CardsState } from \"../cards/model/state\";\nimport { DisplayData } from \"../display/model\";\n\nexport type ArchiveRiver = Pick<CardRiverState, \"riverMakeUps\" | \"lastRiverIDNumber\">;\n\nexport type ArchiveCards = Pick<CardsState, \"cards\" | \"lastCardIDNumber\">;\n\ntype ArchiveDisplay = Pick<DisplayData, \"currentPage\" | \"totalPages\">;\n\nexport type DocumentData = {\n\tname: string;\n} & ArchiveDisplay &\n\tArchiveRiver &\n\tArchiveCards;\n\nexport type DocumentDB = { [name: string]: DocumentData };\n\nexport const updateDocumentDataInDocumentDB = (state: DocumentDB, documentData: DocumentData): DocumentDB => {\n\treturn { ...state, [documentData.name]: documentData };\n};\n\nexport const updateDocumentDataSetsInDocumentDB = (state: DocumentDB, documentDataSets: DocumentData[]): DocumentDB => {\n\treturn {\n\t\t...state,\n\t\t...documentDataSets.reduce((prev, dbData) => {\n\t\t\tprev[dbData.name] = dbData;\n\t\t\treturn prev;\n\t\t}, {} as DocumentDB),\n\t};\n};\n\nexport const removeDocumentDataFromDocumentDB = (state: DocumentDB, document: string): DocumentDB => {\n\treturn Object.fromEntries(Object.entries(state).filter((arr) => arr[0] !== document));\n};\n","import {\n\tDocumentDB,\n\tDocumentData,\n\tupdateDocumentDataInDocumentDB,\n\tupdateDocumentDataSetsInDocumentDB,\n\tremoveDocumentDataFromDocumentDB,\n} from \"./model\";\nimport * as t from \"./actionTypes\";\n\nconst initialState: DocumentDB = {};\n\n//TODO-NICE: PDF-date gets saved with name, better use some hash or something (rename of document file is likely) -> use size or last-modified or smth like that instead of name\n\nconst documentDB = (\n\tstate = initialState,\n\t{ type, payload }: { type: string; payload: DocumentData | DocumentData[] | string | { dbData: DocumentData[] } }\n): DocumentDB => {\n\tswitch (type) {\n\t\t// dont need to undo this, because if we change the active river and then change the document, the archive version gets overwritten\n\t\tcase t.ARCHIVE_CURRENT_DATA:\n\t\t\treturn updateDocumentDataInDocumentDB(state, payload as DocumentData);\n\t\tcase t.LOAD_DOCUMENT_DATA_SETS:\n\t\t\treturn updateDocumentDataSetsInDocumentDB(\n\t\t\t\tstate,\n\t\t\t\t(payload as { dbData: DocumentData[] }).dbData as DocumentData[]\n\t\t\t);\n\t\tcase t.DELETE_DOCUMENT_DATA_SET:\n\t\t\treturn removeDocumentDataFromDocumentDB(state, payload as string);\n\t\tdefault:\n\t\t\treturn state;\n\t}\n};\n\nexport default documentDB;\n","import { createSelector } from \"reselect\";\nimport { DocumentDB } from \"./model\";\nimport { NAME } from \"./constants\";\n\nexport const getAll = (state: any): DocumentDB => state[NAME].present;\n\nexport const getDocumentNames = createSelector(getAll, (db) => Object.keys(db));\n\nexport const getDocumentDataSets = createSelector(getAll, (db) => Object.values(db));\n","import * as actions from \"./actions\";\nimport * as actionTypes from \"./actionTypes\";\nimport * as constants from \"./constants\";\nimport reducer from \"./reducer\";\nimport * as selectors from \"./selectors\";\n\nexport default { actions, actionTypes, constants, reducer, selectors };\n","import * as t from \"./actionTypes\";\nimport { cardIDToNumber } from \"./model/config\";\nimport {\n\tCardsState,\n\tremoveCardFromCardsState,\n\tupdateCardInCards,\n\taddCardToCards,\n\treplaceCardsInCardsState,\n} from \"./model/state\";\nimport { ArchiveCards } from \"../db/model\";\nimport db from \"../db\";\n\nconst intialState: CardsState = {\n\tcards: {\n\t\t\"0\": {\n\t\t\tcardID: \"0\",\n\t\t\ttype: \"Q-A\",\n\t\t\tcontent: { q: \"Was ist der Sinn des Lebens?\", a: \"42\" },\n\t\t},\n\t\t\"1\": {\n\t\t\tcardID: \"1\",\n\t\t\ttype: \"Q-A\",\n\t\t\tcontent: { q: \"Welches Layout macht mehr Sinn?\", a: \"??\" },\n\t\t},\n\t\t\"2\": { cardID: \"2\", type: \"Note\", content: \"Note here\" },\n\t},\n\tlastCardIDNumber: 2,\n};\n\nconst cards = (state = intialState, { type, payload }: { type: string; payload?: any }) => {\n\tswitch (type) {\n\t\tcase t.CARD_PUSH:\n\t\t\tconst lastCardIDNumber = cardIDToNumber(payload.cardID) + 1;\n\t\t\treturn { ...state, cards: addCardToCards(state.cards, payload), lastCardIDNumber };\n\t\tcase t.CARD_REPLACE:\n\t\t\t// either the update was for a goalCard, then we want to reset it\n\t\t\t// or the update was not for a goalCard, then there should not be a goalCard anyways\n\t\t\tconst goalCard = null;\n\n\t\t\treturn { ...state, cards: updateCardInCards(state.cards, payload), goalCard };\n\t\tcase t.CARD_REMOVE:\n\t\t\treturn removeCardFromCardsState(state, payload as string);\n\t\tcase db.actionTypes.DOCUMENT_CHANGE:\n\t\t\tif (payload) {\n\t\t\t\treturn replaceCardsInCardsState(\n\t\t\t\t\tintialState,\n\t\t\t\t\t(payload as ArchiveCards).cards,\n\t\t\t\t\t(payload as ArchiveCards).lastCardIDNumber\n\t\t\t\t);\n\t\t\t} else {\n\t\t\t\treturn intialState;\n\t\t\t}\n\t\tcase db.actionTypes.LOAD_DOCUMENT_DATA_SETS:\n\t\t\t// basically the same as DOCUMENT_CHANGE, just only triggered\n\t\t\t// when uploading data that corresponds to current document\n\t\t\t// and if not we dont reset\n\t\t\tif (payload.newActiveDataSet) {\n\t\t\t\treturn replaceCardsInCardsState(\n\t\t\t\t\tintialState,\n\t\t\t\t\t(payload as ArchiveCards).cards,\n\t\t\t\t\t(payload as ArchiveCards).lastCardIDNumber\n\t\t\t\t);\n\t\t\t} else {\n\t\t\t\treturn state;\n\t\t\t}\n\t\tdefault:\n\t\t\treturn state;\n\t}\n};\n\nexport default cards;\n","import * as constants from \"./constants\";\nimport * as actionTypes from \"./actionTypes\";\nimport * as actions from \"./actions\";\nimport * as selectors from \"./selectors\";\nimport * as components from \"./components\";\nimport * as model from \"./model\";\nimport reducer from \"./reducer\";\n\nexport default { constants, actionTypes, actions, reducer, selectors, components, model };\n","import { NAME } from \"./constants\";\nimport { createSelector } from \"reselect\";\nimport { CardRiverState } from \"./model\";\nimport cards from \"../cards\";\nimport { CardID } from \"../cards/model/config\";\n\nexport const getAll = (state: any): CardRiverState => state[NAME].present;\n\nexport const getRiverMakeUps = createSelector(getAll, (state: CardRiverState) => state.riverMakeUps);\n\nexport const getActiveRiverMakeUpID = createSelector(getAll, (state: CardRiverState) => state.activeRiverMakeUpID);\n\nexport const getActiveRiverMakeUp = createSelector(getRiverMakeUps, getActiveRiverMakeUpID, (makeUps, id) => {\n\tconst makeUp = makeUps[id];\n\treturn makeUp ? makeUp : { cardIDs: [] };\n});\n\nexport const getActiveRiverCardIDs = createSelector(getActiveRiverMakeUp, (makeUp): CardID[] => makeUp.cardIDs);\n\nexport const getActiveRiverCards = createSelector(\n\tgetActiveRiverCardIDs,\n\tcards.selectors.getCards,\n\t(makeUpCardIDs, cards) => makeUpCardIDs.map((id) => cards[id])\n);\n\nexport const getRiverShowState = createSelector(getAll, (state: CardRiverState) => state.riverShowState);\n\nexport const riverShowStateIsShow = createSelector(getRiverShowState, (state) => state === \"SHOW\");\n\nexport const getLastRiverIDNumber = createSelector(getAll, (state: CardRiverState) => state.lastRiverIDNumber);\n\nexport const getRiverContentState = createSelector(getAll, (state: CardRiverState) => state.riverContentState);\n\nexport const getRiverContentFilter = createSelector(getAll, (state: CardRiverState) => state.contentFilter);\n\nexport const getOriginRequest = createSelector(getAll, (state) => state.requestedOrigin);\n","import { NAME } from \"./constants\";\n\nexport const RIVER_ACTIVE_ID = NAME + \"/RIVER_ACTIVE_ID\";\n\nexport const RIVER_SHOW_STATE = NAME + \"/RIVER_SHOW_STATE\";\nexport const RIVER_CONTENT_STATE = NAME + \"/RIVER_CONTENT_STATE\";\nexport const RIVER_CONTENT_FILTER = NAME + \"/RIVER_CONTENT_FILTER\";\n\nexport const ORIGIN_REQUEST = NAME + \"/ORIGIN_REQUEST\";\n","import * as t from \"./actionTypes\";\nimport { riverShowStateIsShow, getActiveRiverMakeUpID } from \"./selectors\";\nimport { Dispatch } from \"redux\";\nimport { RiverContentState, ContentFilter } from \"./model\";\nimport { SingleOrigin } from \"../cards/model/origin\";\n\nexport const toggleRiverShowState = () => (dispatch: Dispatch, getState: Function) => {\n\tdispatch({ type: t.RIVER_SHOW_STATE, payload: riverShowStateIsShow(getState()) ? \"HIDE\" : \"SHOW\" });\n};\n\nexport const setRiverContentState = (state: RiverContentState) => {\n\treturn { type: t.RIVER_CONTENT_STATE, payload: state };\n};\n\nexport const setActiveRiver = (id: string) => {\n\treturn { type: t.RIVER_ACTIVE_ID, payload: id };\n};\n\nexport const trySetActiveRiver = (id: string) => {\n\treturn (dispatch: Dispatch, getState: Function) => {\n\t\tconsole.log(id, getActiveRiverMakeUpID(getState()) !== id);\n\t\tif (getActiveRiverMakeUpID(getState()) !== id) dispatch(setActiveRiver(id));\n\t};\n};\n\nexport const setContentFilter = (filter: ContentFilter) => {\n\treturn { type: t.RIVER_CONTENT_FILTER, payload: filter };\n};\n\nexport const resetContentFilter = () => {\n\treturn { type: t.RIVER_CONTENT_FILTER, payload: \"\" };\n};\n\nexport const setOriginRequest = (origin: SingleOrigin | null) => {\n\treturn { type: t.ORIGIN_REQUEST, payload: origin };\n};\n\nexport const resetOriginRequest = () => {\n\treturn setOriginRequest(null);\n};\n","import { withStyles, CheckboxProps, Checkbox } from \"@material-ui/core\";\nimport React from \"react\";\nimport { green } from \"@material-ui/core/colors\";\nexport const GreenCheckbox = withStyles({\n\troot: {\n\t\tcolor: green[400],\n\t\t\"&$checked\": {\n\t\t\tcolor: green[600],\n\t\t},\n\t},\n\tchecked: {},\n})((props: CheckboxProps) => <Checkbox color=\"default\" {...props} />);\n","import { FormGroup, FormControlLabel } from \"@material-ui/core\";\nimport React from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { getRiverContentState } from \"../selectors\";\nimport { RiverContentState } from \"../model\";\nimport { setRiverContentState } from \"../actions\";\nimport { GreenCheckbox } from \"../../../shared/GreenCheckbox\";\n\nexport const RiverContentFormGroup = () => {\n\tconst riverContentState = useSelector(getRiverContentState);\n\tconst dispatch = useDispatch();\n\n\tconst showQAs = riverContentState === \"ALL\" || riverContentState === \"QAS\";\n\tconst showNotes = riverContentState === \"ALL\" || riverContentState === \"NOTES\";\n\n\tconst changeContentState = (clickedState: RiverContentState) => {\n\t\tif (!showQAs && clickedState === \"QAS\") {\n\t\t\tif (showNotes) {\n\t\t\t\tdispatch(setRiverContentState(\"ALL\"));\n\t\t\t} else {\n\t\t\t\tdispatch(setRiverContentState(\"QAS\"));\n\t\t\t}\n\t\t\treturn;\n\t\t}\n\n\t\tif (!showNotes && clickedState === \"NOTES\") {\n\t\t\tif (showQAs) {\n\t\t\t\tdispatch(setRiverContentState(\"ALL\"));\n\t\t\t} else {\n\t\t\t\tdispatch(setRiverContentState(\"NOTES\"));\n\t\t\t}\n\t\t\treturn;\n\t\t}\n\n\t\tif (showQAs && clickedState === \"QAS\") {\n\t\t\tif (!showNotes) {\n\t\t\t\tdispatch(setRiverContentState(\"NONE\"));\n\t\t\t} else {\n\t\t\t\tdispatch(setRiverContentState(\"NOTES\"));\n\t\t\t}\n\t\t\treturn;\n\t\t}\n\n\t\tif (showNotes && clickedState === \"NOTES\") {\n\t\t\tif (!showQAs) {\n\t\t\t\tdispatch(setRiverContentState(\"NONE\"));\n\t\t\t} else {\n\t\t\t\tdispatch(setRiverContentState(\"QAS\"));\n\t\t\t}\n\t\t\treturn;\n\t\t}\n\t};\n\n\treturn (\n\t\t<FormGroup>\n\t\t\t<FormControlLabel\n\t\t\t\tcontrol={\n\t\t\t\t\t<GreenCheckbox\n\t\t\t\t\t\tchecked={showQAs}\n\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\tchangeContentState(\"QAS\");\n\t\t\t\t\t\t}}\n\t\t\t\t\t/>\n\t\t\t\t}\n\t\t\t\tlabel=\"QAs\"\n\t\t\t/>\n\t\t\t<FormControlLabel\n\t\t\t\tcontrol={\n\t\t\t\t\t<GreenCheckbox\n\t\t\t\t\t\tchecked={showNotes}\n\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\tchangeContentState(\"NOTES\");\n\t\t\t\t\t\t}}\n\t\t\t\t\t/>\n\t\t\t\t}\n\t\t\t\tlabel=\"Notes\"\n\t\t\t/>\n\t\t</FormGroup>\n\t);\n};\n","export const NAME = \"selectionData\";\n","import { NAME } from \"./constants\";\nexport const SELECTION_SOURCE = NAME + \"/SELECTION_SOURCE\";\nexport const SELECTION_GOAL = NAME + \"/SELECTION_GOAL\";\n","import { NAME } from \"./constants\";\nimport { createSelector } from \"reselect\";\nimport { SelectionData } from \"./model\";\n\nexport const getAll = (state: any): SelectionData => state[NAME].present;\n\nexport const getGoalConfig = createSelector(getAll, (state) => state.goalConfig);\nexport const getSourceConfig = createSelector(getAll, (state) => state.sourceConfig);\n\nexport const sourceConfigExists = createSelector(getSourceConfig, (config) => !!config);\n","import { CardConfig } from \"../../cards/model/config\";\nimport cards from \"../../cards\";\nimport { SelectionGoalConfig, SelectionSourceConfig, goalIsCreation, SelectionExistingCardGoalConfig } from \"../model\";\nimport { CardPayload } from \"../../cards/model/payload\";\n\nconst selectionConfigToCardPayload = (sourceConfig: SelectionSourceConfig, goalConfig: SelectionGoalConfig) => {\n\tconst inputOrigin = sourceConfig.contentOrigin;\n\tconst inputValue = sourceConfig.contentStr;\n\n\tconst outputField = goalConfig.cardField;\n\n\treturn {\n\t\ttype: cards.model.config.cardFieldToType(outputField),\n\t\tcontent: cards.model.content.strToNewCardContent(inputValue, outputField),\n\t\torigin: inputOrigin ? cards.model.origin.singleOriginToCardOrigin(inputOrigin, outputField) : undefined,\n\t};\n};\n\nconst selectionConfigToActualizedCardConfig = (\n\tsourceConfig: SelectionSourceConfig,\n\tgoalConfig: SelectionExistingCardGoalConfig,\n\tstate: any\n): CardConfig => {\n\tconst existingCard = cards.selectors.getCardByID(state, goalConfig.cardID);\n\n\tconst inputOrigin = sourceConfig.contentOrigin;\n\tconst inputValue = sourceConfig.contentStr;\n\n\tconst outputField = goalConfig.cardField;\n\n\treturn {\n\t\t...existingCard,\n\t\tcontent: cards.model.content.strToCardContent(inputValue, outputField, goalConfig.updateType, existingCard.content),\n\t\torigin: inputOrigin\n\t\t\t? cards.model.origin.singleOriginToCardOrigin(inputOrigin, outputField, existingCard.origin)\n\t\t\t: existingCard.origin,\n\t} as CardConfig;\n};\n\nexport const selectionToCard = (\n\tsourceConfig: SelectionSourceConfig,\n\tgoalConfig: SelectionGoalConfig,\n\tdispatch: any,\n\tstate?: any\n) => {\n\tconst isCreation = goalIsCreation(goalConfig);\n\tif (isCreation) {\n\t\tconst cardPayload: CardPayload = selectionConfigToCardPayload(sourceConfig, goalConfig);\n\t\tdispatch(cards.actions.cardPush(cardPayload));\n\t} else {\n\t\tconst cardConfig = selectionConfigToActualizedCardConfig(\n\t\t\tsourceConfig,\n\t\t\tgoalConfig as SelectionExistingCardGoalConfig,\n\t\t\tstate\n\t\t);\n\t\tdispatch(cards.actions.cardReplace(cardConfig));\n\t}\n};\n","import { SingleOrigin } from \"../cards/model/origin\";\nimport { CardField } from \"../cards/model/content\";\nimport { CardFieldIdentifier, UpdateType } from \"../cards/model/config\";\n\nexport type SelectionSourceConfig = { contentStr: string; contentOrigin?: SingleOrigin };\n\nexport type SelectionExistingCardGoalConfig = CardFieldIdentifier & { updateType: UpdateType };\nexport type SelectionGoalConfig = SelectionExistingCardGoalConfig | { cardField: CardField };\nexport const goalIsCreation = (goalConfig: SelectionGoalConfig) => {\n\t// each existing card has an ID\n\tconst idExists = !!(goalConfig as CardFieldIdentifier).cardID;\n\treturn !idExists;\n};\n\n// Selection is made up of two parts: selecting a source and selecting a goal\n// If both are done, then a Card needs to be created or updated\n// By clarifying this concept, I was able to reduce the selection code and make it more composable\n// See: AppendButton can be used before or after selecting a source without any extra code\n// This shows that a correct conceptualisation of the problem domain operations is the most important\n// thing in programming (note to self :))\n\nexport type SelectionData = {\n\tsourceConfig: SelectionSourceConfig | null;\n\tgoalConfig: SelectionGoalConfig | null;\n};\n","import { SelectionSourceConfig } from \"../model\";\nimport { SingleOrigin } from \"../../cards/model/origin\";\n\ntype SelectionData = { text: string; selection: Selection };\n\nexport const getSelectionWorkaround = (): SelectionData | null => {\n\tconst selection = window.getSelection();\n\n\tif (!selection) return null;\n\n\ttry {\n\t\tvar activeElement = document.activeElement;\n\t\tif (activeElement && (activeElement as HTMLInputElement).value) {\n\t\t\t// firefox bug https://bugzilla.mozilla.org/show_bug.cgi?id=85686\n\t\t\tconst str = (activeElement as HTMLInputElement).value.substring(\n\t\t\t\t(activeElement as HTMLInputElement).selectionStart as number,\n\t\t\t\t(activeElement as HTMLInputElement).selectionEnd as number\n\t\t\t);\n\n\t\t\tif (str === \"\") return null;\n\n\t\t\treturn { text: str, selection };\n\t\t} else {\n\t\t\tconst selStr = selection.toString();\n\n\t\t\tif (selStr === \"\") return null;\n\n\t\t\treturn { text: selStr, selection };\n\t\t}\n\t} catch (e) {\n\t\treturn null;\n\t}\n};\n\nconst materialSelectionDataToSourceConfig = (\n\tselectionData: SelectionData,\n\tpage: number\n): SelectionSourceConfig | false => {\n\t//TODO-NICE: think about race-conditions for the delayed rendering, this might mess up the index\n\t//TODO-NICE: this also depends on the rendering order of the spans to be the same, might not be a good idea\n\t//TODO-NICE: maybe can do this async if it gets more complex?\n\n\tconst selectedParent = selectionData.selection.focusNode?.parentNode as HTMLSpanElement;\n\tif (!!!selectedParent || selectedParent.nodeName !== \"SPAN\") return false;\n\n\tconst divTextLayerParent = selectedParent.parentNode;\n\tif (!!!divTextLayerParent || divTextLayerParent.nodeName !== \"DIV\") return false;\n\n\tconst spanChildren = Array.from(divTextLayerParent.children);\n\tif (spanChildren.length === 0) return false;\n\n\tconst index = spanChildren.indexOf(selectedParent);\n\tif (index < 0) return false;\n\n\treturn { contentStr: selectionData.text, contentOrigin: { spanIndex: index, page } };\n};\n\nexport const getSelectionSourceFromMaterial = (page: number): SelectionSourceConfig | false => {\n\tconst selectionData = getSelectionWorkaround();\n\tif (!selectionData) return false;\n\n\treturn materialSelectionDataToSourceConfig(selectionData, page);\n};\n\nexport const getSelectionSourceFromCard = (contentOrigin?: SingleOrigin): SelectionSourceConfig | false => {\n\tconst selectionData = getSelectionWorkaround();\n\tif (!selectionData) return false;\n\n\treturn { contentStr: selectionData.text, contentOrigin };\n};\n","import * as t from \"./actionTypes\";\nimport { SingleOrigin } from \"../cards/model/origin\";\nimport { SelectionSourceConfig, SelectionGoalConfig, SelectionExistingCardGoalConfig } from \"./model\";\nimport { Dispatch } from \"redux\";\nimport { getGoalConfig, getSourceConfig } from \"./selectors\";\nimport { selectionToCard } from \"./services/use-selection\";\nimport { getSelectionSourceFromMaterial, getSelectionSourceFromCard } from \"./services/get-selection\";\nimport { CardID } from \"../cards/model/config\";\nimport { CardField } from \"../cards/model/content\";\n\nconst setSelectionSource = (config: SelectionSourceConfig) => {\n\treturn { type: t.SELECTION_SOURCE, payload: config };\n};\nexport const resetSelectionSource = () => {\n\treturn { type: t.SELECTION_SOURCE, payload: null };\n};\nconst setSelectionGoal = (config: SelectionGoalConfig) => {\n\treturn { type: t.SELECTION_GOAL, payload: config };\n};\nexport const resetSelectionGoal = () => {\n\treturn { type: t.SELECTION_GOAL, payload: null };\n};\n\n// we want to support either direction, first adding Goal or first adding Source\nexport const addSelectionSource = (config: SelectionSourceConfig) => {\n\treturn (dispatch: Dispatch, getState: Function) => {\n\t\tconst state = getState();\n\t\tconst goalConfig = getGoalConfig(state);\n\t\tif (!goalConfig) {\n\t\t\tdispatch(setSelectionSource(config));\n\t\t\treturn;\n\t\t}\n\t\tselectionToCard(config, goalConfig as SelectionGoalConfig, dispatch, state);\n\t\tdispatch(resetSelectionGoal());\n\t};\n};\n\nexport const addMaterialSelectionSource = (page: number) => {\n\tconst sourceConfig = getSelectionSourceFromMaterial(page);\n\tif (sourceConfig) {\n\t\treturn addSelectionSource(sourceConfig);\n\t}\n\treturn false;\n};\n\nexport const addCardSelectionSource = (contentOrigin?: SingleOrigin) => {\n\tconst sourceConfig = getSelectionSourceFromCard(contentOrigin);\n\tif (sourceConfig) {\n\t\treturn addSelectionSource(sourceConfig);\n\t}\n\treturn false;\n};\n\nexport const addSelectionGoal = (config: SelectionGoalConfig) => {\n\treturn (dispatch: Dispatch, getState: Function) => {\n\t\tconst state = getState();\n\t\tconst sourceConfig = getSourceConfig(state);\n\t\tif (!sourceConfig) {\n\t\t\tdispatch(setSelectionGoal(config));\n\t\t\treturn;\n\t\t}\n\t\tselectionToCard(sourceConfig as SelectionSourceConfig, config, dispatch, state);\n\t\tdispatch(resetSelectionSource());\n\t};\n};\n\nexport const addCardAppendSelectionGoal = (cardID: CardID, cardField: CardField) => {\n\tconst config: SelectionExistingCardGoalConfig = { cardID, cardField, updateType: \"APPEND\" };\n\treturn addSelectionGoal(config);\n};\n","import * as t from \"./actionTypes\";\nimport { SelectionData } from \"./model\";\n\nconst initialState: SelectionData = {\n\tsourceConfig: null,\n\tgoalConfig: null,\n};\n\nconst selectionData = (state = initialState, { type, payload }: { type: string; payload: any }): SelectionData => {\n\tswitch (type) {\n\t\tcase t.SELECTION_SOURCE:\n\t\t\treturn { ...state, sourceConfig: payload };\n\t\tcase t.SELECTION_GOAL:\n\t\t\treturn { ...state, goalConfig: payload };\n\t\tdefault:\n\t\t\treturn state;\n\t}\n};\n\nexport default selectionData;\n","import React, { useState, Fragment, useEffect } from \"react\";\nimport { Snackbar, IconButton } from \"@material-ui/core\";\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { resetSelectionSource } from \"../actions\";\nimport { getSourceConfig } from \"../selectors\";\n\nexport const SelectionSnackbar = () => {\n\tconst [open, setOpen] = useState(false);\n\tconst dispatch = useDispatch();\n\tconst sourceConfig = useSelector(getSourceConfig);\n\n\tif (!!!sourceConfig && open) setOpen(false);\n\n\tif (!!sourceConfig && !open) setOpen(true);\n\n\tconst handleClose = (event: any, reason: string) => {\n\t\tif (reason === \"clickaway\") {\n\t\t\t// do not close on clickaway\n\t\t\tevent.preventDefault();\n\t\t} else {\n\t\t\tsetOpen(false);\n\t\t\tdispatch(resetSelectionSource());\n\t\t}\n\t};\n\n\tconst handleDismiss = () => {\n\t\tsetOpen(false);\n\t\tdispatch(resetSelectionSource());\n\t};\n\n\tconst message = (\n\t\t<Fragment>\n\t\t\t<div>{\"Current Selection: \"}</div>\n\t\t\t<div style={{ color: \"green\" }}> {sourceConfig?.contentStr}</div>\n\t\t\t{sourceConfig?.contentOrigin && <div style={{ color: \"red\" }}> From Page {sourceConfig.contentOrigin.page}</div>}\n\t\t</Fragment>\n\t);\n\t//TODO-RC: REPLACE-button, also make APPEND with empty space between stuff, maybe Newline?\n\n\t//TODO-NICE: support IE/Edge values for ArrowRight etc\n\n\tconst escPress = (event: KeyboardEvent) => {\n\t\tif (open && (event.key === \"Escape\" || event.key === \"Esc\")) {\n\t\t\thandleDismiss();\n\t\t}\n\t};\n\n\tuseEffect(() => {\n\t\tdocument.addEventListener(\"keydown\", escPress);\n\t\treturn () => {\n\t\t\tdocument.removeEventListener(\"keydown\", escPress);\n\t\t};\n\t});\n\n\treturn (\n\t\t<Snackbar\n\t\t\tanchorOrigin={{ vertical: \"top\", horizontal: \"center\" }}\n\t\t\topen={open}\n\t\t\tonClose={handleClose}\n\t\t\tmessage={message}\n\t\t\taction={\n\t\t\t\t<IconButton size=\"small\" aria-label=\"close\" color=\"inherit\" onClick={handleDismiss}>\n\t\t\t\t\t<CloseIcon fontSize=\"small\" />\n\t\t\t\t</IconButton>\n\t\t\t}\n\t\t/>\n\t);\n};\n","import React, { ReactNode } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { addMaterialSelectionSource } from \"../actions\";\n\n// should only be used once material/pdf exists\nexport const MaterialMouseUp = ({ children, page }: { children: ReactNode; page: number }) => {\n\tconst dispatch = useDispatch();\n\n\treturn (\n\t\t<span\n\t\t\tonMouseUp={() => {\n\t\t\t\tconst materialSelectionSourceAction = addMaterialSelectionSource(page);\n\t\t\t\tif (materialSelectionSourceAction) dispatch(materialSelectionSourceAction);\n\t\t\t}}\n\t\t>\n\t\t\t{children}\n\t\t</span>\n\t);\n};\n","import React, { ReactNode } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { addCardSelectionSource } from \"../actions\";\nimport { SingleOrigin } from \"../../cards/model/origin\";\n\nexport const CardFieldMouseUp = ({ children, fieldOrigin }: { children: ReactNode; fieldOrigin?: SingleOrigin }) => {\n\tconst dispatch = useDispatch();\n\n\treturn (\n\t\t<span\n\t\t\tonMouseUp={() => {\n\t\t\t\tconst cardSelectionSourceAction = addCardSelectionSource(fieldOrigin);\n\t\t\t\tif (cardSelectionSourceAction) dispatch(cardSelectionSourceAction);\n\t\t\t}}\n\t\t>\n\t\t\t{children}\n\t\t</span>\n\t);\n};\n","import AddCircleOutlineIcon from \"@material-ui/icons/AddCircleOutline\";\nimport AddCircleOutlinedIcon from \"@material-ui/icons/AddCircleOutlined\";\nimport React, { useState } from \"react\";\nimport { IconButton } from \"@material-ui/core\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport text from \"../../text\";\nimport { CreationType, CardFieldIdentifier } from \"../../cards/model/config\";\nimport { getGoalConfig } from \"../selectors\";\nimport { addCardAppendSelectionGoal, resetSelectionGoal } from \"../actions\";\n\nexport const AppendButton = ({ cardField, cardID }: { cardField: CreationType; cardID: string }) => {\n\tconst dispatch = useDispatch();\n\n\tconst goalConfig = useSelector(getGoalConfig);\n\t// outlined means this is the goal\n\tconst [outlined, setOutlined] = useState(false);\n\n\tconst isGoal =\n\t\t!!goalConfig &&\n\t\t!!(goalConfig as CardFieldIdentifier).cardID &&\n\t\t(goalConfig as CardFieldIdentifier).cardID === cardID &&\n\t\tgoalConfig.cardField === cardField;\n\n\tif (isGoal) {\n\t\tif (!outlined) setOutlined(true);\n\t} else {\n\t\tif (outlined) setOutlined(false);\n\t}\n\t//TODO-RC: make tooltip depend on outline status\n\t//TODO-RC: test all variations of origin  (setting/copying) again (how to automate the test?)\n\n\treturn (\n\t\t<text.components.AppendButtonTooltip>\n\t\t\t<IconButton\n\t\t\t\ttype=\"button\"\n\t\t\t\tonClick={() => {\n\t\t\t\t\tif (!outlined && !!!goalConfig) {\n\t\t\t\t\t\tdispatch(addCardAppendSelectionGoal(cardID, cardField));\n\t\t\t\t\t} else if (isGoal) {\n\t\t\t\t\t\tdispatch(resetSelectionGoal());\n\t\t\t\t\t}\n\t\t\t\t}}\n\t\t\t>\n\t\t\t\t{outlined ? (\n\t\t\t\t\t<AddCircleOutlinedIcon fontSize=\"small\"></AddCircleOutlinedIcon>\n\t\t\t\t) : (\n\t\t\t\t\t<AddCircleOutlineIcon fontSize=\"small\"></AddCircleOutlineIcon>\n\t\t\t\t)}\n\t\t\t</IconButton>\n\t\t</text.components.AppendButtonTooltip>\n\t);\n};\n","import React, { Fragment, RefObject, useCallback, useEffect, useRef, useState } from \"react\";\nimport Menu from \"@material-ui/core/Menu\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Divider, MenuItem } from \"@material-ui/core\";\nimport { addSelectionGoal } from \"../actions\";\nimport { sourceConfigExists } from \"../selectors\";\n\n// the root div for the menu invisibly covers the whole screen\n// the actual div that is visible is this\nconst baseContextMenuSelector = \"div.MuiPaper-root\";\nconst contextMenuContainsTargetNode = (ref: RefObject<null | HTMLDivElement>, event: MouseEvent) => {\n\tconst target = event.target as Node;\n\tif (ref.current?.querySelector(baseContextMenuSelector)?.contains(target)) return true;\n\treturn false;\n};\n\nexport const ContextMenu = () => {\n\tconst [menuPosition, setMenuPosition] = useState<undefined | { top: number; left: number }>(undefined);\n\tconst ref = useRef(null);\n\n\tconst shouldClose = useCallback(\n\t\t(event: MouseEvent) => {\n\t\t\tconst clickOutSideOfMenu = !contextMenuContainsTargetNode(ref, event);\n\t\t\tif (clickOutSideOfMenu) {\n\t\t\t\tsetMenuPosition(undefined);\n\t\t\t}\n\t\t},\n\t\t[ref, setMenuPosition]\n\t);\n\tuseEffect(() => {\n\t\tdocument.addEventListener(\"mousedown\", shouldClose);\n\t\treturn () => {\n\t\t\tdocument.removeEventListener(\"mousedown\", shouldClose);\n\t\t};\n\t}, [shouldClose]);\n\n\tconst doesSourceConfigExists = useSelector(sourceConfigExists);\n\tconst shouldOpen = useCallback(\n\t\t(event: MouseEvent) => {\n\t\t\tif (!doesSourceConfigExists) return;\n\n\t\t\tevent.preventDefault();\n\n\t\t\tsetMenuPosition({ left: event.x, top: event.y });\n\t\t},\n\t\t[doesSourceConfigExists, setMenuPosition]\n\t);\n\tuseEffect(() => {\n\t\tdocument.addEventListener(\"contextmenu\", shouldOpen);\n\t\treturn () => {\n\t\t\tdocument.removeEventListener(\"contextmenu\", shouldOpen);\n\t\t};\n\t}, [shouldOpen]);\n\n\tconst openState = !!menuPosition;\n\n\t//TODO-RC: check if I need the state check now\n\n\tconst dispatch = useDispatch();\n\n\treturn (\n\t\t<Menu ref={ref} keepMounted open={openState} anchorReference=\"anchorPosition\" anchorPosition={menuPosition}>\n\t\t\t{openState && (\n\t\t\t\t<Fragment>\n\t\t\t\t\t<MenuItem\n\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\tdispatch(addSelectionGoal({ cardField: \"note\", updateType: \"REPLACE\" }));\n\t\t\t\t\t\t\tsetMenuPosition(undefined);\n\t\t\t\t\t\t}}\n\t\t\t\t\t>\n\t\t\t\t\t\tNew: Note\n\t\t\t\t\t</MenuItem>\n\n\t\t\t\t\t<Divider></Divider>\n\t\t\t\t\t<MenuItem\n\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\tdispatch(addSelectionGoal({ cardField: \"q\", updateType: \"REPLACE\" }));\n\t\t\t\t\t\t\tsetMenuPosition(undefined);\n\t\t\t\t\t\t}}\n\t\t\t\t\t>\n\t\t\t\t\t\tNew: Q (Q-A)\n\t\t\t\t\t</MenuItem>\n\t\t\t\t\t<MenuItem\n\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\tdispatch(addSelectionGoal({ cardField: \"a\", updateType: \"REPLACE\" }));\n\t\t\t\t\t\t\tsetMenuPosition(undefined);\n\t\t\t\t\t\t}}\n\t\t\t\t\t>\n\t\t\t\t\t\tNew: A (Q-A)\n\t\t\t\t\t</MenuItem>\n\t\t\t\t</Fragment>\n\t\t\t)}\n\t\t</Menu>\n\t);\n};\n\n//TODO-NICE: delete extracted str in source\n","import * as actions from \"./actions\";\nimport * as constants from \"./constants\";\nimport * as actionTypes from \"./actionTypes\";\nimport reducer from \"./reducer\";\nimport * as selectors from \"./selectors\";\nimport * as components from \"./components\";\nimport * as services from \"./services\";\n\nexport default { actions, actionTypes, constants, components, reducer, selectors, services };\n","import React, { useState } from \"react\";\nimport { TextField, TextFieldProps } from \"@material-ui/core\";\nimport selection from \"../../../../selection\";\nimport { SingleOrigin } from \"../../../../cards/model/origin\";\n\nexport const ClayCardField = ({\n\tstoreValue = \"\",\n\tsaveChanges,\n\tfieldOrigin,\n\tstyle,\n\t...rest\n}: {\n\tstoreValue?: string;\n\t// {} is an empty field of the QA-origin\n\tfieldOrigin?: SingleOrigin | {};\n\tsaveChanges: (value: string) => void;\n\tstyle: any;\n} & TextFieldProps) => {\n\tconst [state, setState] = useState({ storeValue, mutableValue: storeValue });\n\n\t// reset if new storeValue, otherwise keep user-mutated value\n\tif (state.storeValue !== storeValue) {\n\t\tsetState({ storeValue, mutableValue: storeValue });\n\t}\n\n\t// need the onChange-pattern, because we want to be able to pre-fill the field from the store\n\treturn (\n\t\t<selection.components.CardFieldMouseUp\n\t\t\tfieldOrigin={\n\t\t\t\tfieldOrigin && (fieldOrigin as SingleOrigin).spanIndex !== undefined ? (fieldOrigin as SingleOrigin) : undefined\n\t\t\t}\n\t\t>\n\t\t\t<TextField\n\t\t\t\tInputProps={{ disableUnderline: true, style: { minWidth: \"400px\" } }}\n\t\t\t\tmultiline\n\t\t\t\tvariant=\"filled\"\n\t\t\t\tvalue={state.mutableValue}\n\t\t\t\tonChange={(event) => {\n\t\t\t\t\tconst submittedValue = (event.target as HTMLTextAreaElement).value;\n\t\t\t\t\tsetState({ ...state, mutableValue: submittedValue });\n\t\t\t\t}}\n\t\t\t\tonBlur={(event: any) => {\n\t\t\t\t\tsaveChanges(event.target.value);\n\t\t\t\t}}\n\t\t\t\tstyle={style}\n\t\t\t\t{...rest}\n\t\t\t></TextField>\n\t\t</selection.components.CardFieldMouseUp>\n\t);\n};\n","import FindInPageIcon from \"@material-ui/icons/FindInPage\";\nimport React from \"react\";\nimport { IconButton, Tooltip } from \"@material-ui/core\";\nimport { useDispatch } from \"react-redux\";\nimport { SingleOrigin } from \"../../../../cards/model/origin\";\nimport text from \"../../../../text\";\nimport { setOriginRequest } from \"../../../actions\";\n\nexport const JumpToOriginButton = ({ cardOrigin }: { cardOrigin: SingleOrigin }) => {\n\tconst dispatch = useDispatch();\n\treturn (\n\t\t<Tooltip\n\t\t\ttitle={text.constants.jumpToOriginTooltip}\n\t\t\tenterDelay={text.constants.defaultEnterDelay}\n\t\t\tenterNextDelay={text.constants.defaultEnterNextDelay}\n\t\t>\n\t\t\t<IconButton\n\t\t\t\ttype=\"button\"\n\t\t\t\tonClick={() => {\n\t\t\t\t\tdispatch(setOriginRequest(cardOrigin));\n\t\t\t\t\t//TODO-RC: hide this if the Material is hidden\n\t\t\t\t}}\n\t\t\t>\n\t\t\t\t<FindInPageIcon fontSize=\"small\"></FindInPageIcon>\n\t\t\t</IconButton>\n\t\t</Tooltip>\n\t);\n};\n","import React from \"react\";\nimport cards from \"../../../../cards\";\nimport { JumpToOriginButton } from \"./JumpToOriginButton\";\nimport { Paper, Grid } from \"@material-ui/core\";\nimport { CardConfig } from \"../../../../cards/model/config\";\nimport { CardField } from \"../../../../cards/model/content\";\nimport selection from \"../../../../selection\";\n\nexport const ClayCardFieldButtons = ({ config, cardField }: { config: CardConfig; cardField: CardField }) => {\n\t//TODO-RC: new view concept\n\t// can show / hide rivers (indivdual?) and filter cards (indivdual?)\n\t// now with scrolling I dont need the SummaryRiver\n\t// but need to be able to switch orientation ?\n\t// the good thing of the SummaryRiver is that it is more compact and sideways\n\n\treturn (\n\t\t<Paper variant=\"outlined\">\n\t\t\t<Grid container direction=\"row\">\n\t\t\t\t<Grid item>\n\t\t\t\t\t<selection.components.AppendButton\n\t\t\t\t\t\tcardID={config.cardID}\n\t\t\t\t\t\tcardField={cardField}\n\t\t\t\t\t></selection.components.AppendButton>\n\t\t\t\t</Grid>\n\n\t\t\t\t<Grid item>\n\t\t\t\t\t{config.origin && (\n\t\t\t\t\t\t<JumpToOriginButton\n\t\t\t\t\t\t\tcardOrigin={cards.model.permutation.toFieldValue(cardField, config.origin)}\n\t\t\t\t\t\t></JumpToOriginButton>\n\t\t\t\t\t)}\n\t\t\t\t</Grid>\n\t\t\t</Grid>\n\t\t</Paper>\n\t);\n};\n","import Grid from \"@material-ui/core/Grid\";\nimport React from \"react\";\nimport { ClayCardField } from \"./ClayCardField\";\nimport { QACardContent } from \"../../../../cards/model/content\";\nimport { useDispatch } from \"react-redux\";\nimport cards from \"../../../../cards\";\nimport { Card } from \"@material-ui/core\";\nimport text from \"../../../../text\";\nimport { ClayCardFieldButtons } from \"./ClayCardFieldButtons\";\nimport { QAConfig } from \"../../../../cards/model/config\";\n\n//TODO-NICE:\n// make dropdown / menu for selection to create card from selection snackbar?\n// show if selection has origin / button jump to origin at snackbar?\n\n//TODO-NICE: use dark color pallet (theme?)\n\nexport const QACard = ({ config }: { config: QAConfig }) => {\n\tconst dispatch = useDispatch();\n\n\treturn (\n\t\t<Card variant=\"elevation\" elevation={5} style={{ padding: \"3px\" }}>\n\t\t\t<Grid container direction=\"row\" justify=\"space-between\">\n\t\t\t\t<Grid item>\n\t\t\t\t\t<Grid container direction=\"column\" spacing={1}>\n\t\t\t\t\t\t<Grid item>\n\t\t\t\t\t\t\t<Grid container direction=\"row\" spacing={1}>\n\t\t\t\t\t\t\t\t<Grid item>\n\t\t\t\t\t\t\t\t\t<ClayCardField\n\t\t\t\t\t\t\t\t\t\tsaveChanges={(value) => {\n\t\t\t\t\t\t\t\t\t\t\tdispatch(cards.actions.replaceCardFieldContent(\"q\", config, value));\n\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\tstoreValue={(config.content as QACardContent).q}\n\t\t\t\t\t\t\t\t\t\tlabel={text.constants.questionText}\n\t\t\t\t\t\t\t\t\t\tvariant=\"filled\"\n\t\t\t\t\t\t\t\t\t\tstyle={{ backgroundColor: \"#FFBF69\" }}\n\t\t\t\t\t\t\t\t\t\tInputLabelProps={{ style: { color: \"#000000\" } }}\n\t\t\t\t\t\t\t\t\t\tfieldOrigin={config.origin?.q}\n\t\t\t\t\t\t\t\t\t></ClayCardField>\n\t\t\t\t\t\t\t\t</Grid>\n\n\t\t\t\t\t\t\t\t<Grid item>\n\t\t\t\t\t\t\t\t\t<ClayCardFieldButtons cardField=\"q\" config={config}></ClayCardFieldButtons>\n\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t<Grid item>\n\t\t\t\t\t\t\t<Grid container direction=\"row\" spacing={1}>\n\t\t\t\t\t\t\t\t<Grid item>\n\t\t\t\t\t\t\t\t\t<ClayCardField\n\t\t\t\t\t\t\t\t\t\tsaveChanges={(value) => {\n\t\t\t\t\t\t\t\t\t\t\tdispatch(cards.actions.replaceCardFieldContent(\"a\", config, value));\n\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\tstoreValue={(config.content as QACardContent).a}\n\t\t\t\t\t\t\t\t\t\tlabel={text.constants.answerText}\n\t\t\t\t\t\t\t\t\t\tstyle={{ backgroundColor: \"#2EC4B6\" }}\n\t\t\t\t\t\t\t\t\t\tInputLabelProps={{ style: { color: \"#000000\" } }}\n\t\t\t\t\t\t\t\t\t\tfieldOrigin={config.origin?.a}\n\t\t\t\t\t\t\t\t\t></ClayCardField>\n\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t\t<Grid item>\n\t\t\t\t\t\t\t\t\t<ClayCardFieldButtons cardField=\"a\" config={config}></ClayCardFieldButtons>\n\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t</Grid>\n\t\t\t\t\t</Grid>\n\t\t\t\t</Grid>\n\n\t\t\t\t<Grid item>\n\t\t\t\t\t<cards.components.DeleteCardButton cardID={config.cardID}></cards.components.DeleteCardButton>\n\t\t\t\t</Grid>\n\t\t\t</Grid>\n\t\t</Card>\n\t);\n};\n","import React from \"react\";\nimport { ClayCardField } from \"./ClayCardField\";\nimport { useDispatch } from \"react-redux\";\nimport cards from \"../../../../cards\";\nimport { Card, Grid } from \"@material-ui/core\";\nimport text from \"../../../../text\";\nimport { NoteConfig } from \"../../../../cards/model/config\";\nimport { ClayCardFieldButtons } from \"./ClayCardFieldButtons\";\n\nexport const NoteCard = ({ config }: { config: NoteConfig }) => {\n\tconst dispatch = useDispatch();\n\n\treturn (\n\t\t<Card variant=\"elevation\" elevation={5} style={{ padding: \"3px\" }}>\n\t\t\t<Grid container direction=\"row\" justify=\"space-between\">\n\t\t\t\t<Grid item>\n\t\t\t\t\t<Grid container direction=\"row\" spacing={1}>\n\t\t\t\t\t\t<Grid item>\n\t\t\t\t\t\t\t<ClayCardField\n\t\t\t\t\t\t\t\tsaveChanges={(value) => {\n\t\t\t\t\t\t\t\t\tdispatch(cards.actions.cardReplace({ ...config, content: value } as NoteConfig));\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\tstoreValue={config.content as string}\n\t\t\t\t\t\t\t\tlabel={text.constants.noteText}\n\t\t\t\t\t\t\t\tvariant=\"filled\"\n\t\t\t\t\t\t\t\tstyle={{ backgroundColor: \"#CBF3F0\" }}\n\t\t\t\t\t\t\t\tInputLabelProps={{ style: { color: \"#000000\" } }}\n\t\t\t\t\t\t\t\tfieldOrigin={config.origin}\n\t\t\t\t\t\t\t></ClayCardField>\n\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t<Grid item>\n\t\t\t\t\t\t\t<ClayCardFieldButtons cardField=\"note\" config={config}></ClayCardFieldButtons>\n\t\t\t\t\t\t</Grid>\n\t\t\t\t\t</Grid>\n\t\t\t\t</Grid>\n\n\t\t\t\t<Grid item>\n\t\t\t\t\t<cards.components.DeleteCardButton cardID={config.cardID}></cards.components.DeleteCardButton>\n\t\t\t\t</Grid>\n\t\t\t</Grid>\n\t\t</Card>\n\t);\n};\n","import React from \"react\";\nimport { CardConfig, NoteConfig, QAConfig } from \"../../../../cards/model/config\";\nimport { QACard } from \"./QACard\";\nimport { NoteCard } from \"./NoteCard\";\n\ntype CardProps = { config: CardConfig; riverID: string };\n\nexport const ClayCard = ({ config, riverID }: CardProps) => {\n\tswitch (config.type) {\n\t\tcase \"Note\":\n\t\t\treturn <NoteCard config={config as NoteConfig}></NoteCard>;\n\t\tcase \"Q-A\":\n\t\t\treturn <QACard config={config as QAConfig}></QACard>;\n\t}\n};\n","import Grid from \"@material-ui/core/Grid\";\nimport React from \"react\";\nimport { incrementer } from \"../../../../shared/utils\";\nimport { ClayCard } from \"./Cards/ClayCard\";\nimport { CardConfig } from \"../../../cards/model/config\";\nimport { Divider } from \"@material-ui/core\";\n\nconst GridItemDivider = () => (\n\t<Grid item>\n\t\t<Divider></Divider>\n\t</Grid>\n);\n\nexport const toCardGridItemsWithDividers = (cards: CardConfig[], riverID: string) => {\n\tconst increment = incrementer();\n\n\treturn cards.reduce((prev, currentCard, index, arr) => {\n\t\tprev.push(\n\t\t\t<Grid item key={increment()}>\n\t\t\t\t<ClayCard config={currentCard} riverID={riverID} key={increment()}></ClayCard>\n\t\t\t</Grid>\n\t\t);\n\n\t\tconst notLastCard = index < arr.length - 1;\n\t\tif (notLastCard) prev.push(<GridItemDivider key={increment()}></GridItemDivider>);\n\t\treturn prev;\n\t}, [] as any[]);\n};\n","import { Typography, Divider } from \"@material-ui/core\";\nimport Accordion from \"@material-ui/core/Accordion\";\nimport AccordionSummary from \"@material-ui/core/AccordionSummary\";\nimport AccordionDetails from \"@material-ui/core/AccordionDetails\";\nimport Grid from \"@material-ui/core/Grid\";\nimport React, { useMemo } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { getRiverContentState, getRiverContentFilter, getRiverMakeUps } from \"../../selectors\";\nimport cards from \"../../../cards\";\nimport { NoteConfig, QAConfig } from \"../../../cards/model/config\";\nimport { ContentFilter } from \"../../model\";\nimport { toCardGridItemsWithDividers } from \"./toCardGridItemsWithDividers\";\n\n//TODO-NICE: make it not be accordion but closeable?\n//TODO-NICE: make local show / hide notes\n\nconst noteContainsContentFilter = (noteConfig: NoteConfig, contentFilter: ContentFilter) =>\n\tnoteConfig.content.includes(contentFilter);\n\nconst qaContainsContentFilter = (qaConfig: QAConfig, contentFilter: ContentFilter) =>\n\tqaConfig.content.a.includes(contentFilter) || qaConfig.content.q.includes(contentFilter);\n\nexport const CardRiver = ({ riverID, materialHeight }: { riverID: string; materialHeight: number }) => {\n\tconst cardConfigs = useSelector(cards.selectors.getCards);\n\n\tconst riverMakeUp = useSelector(getRiverMakeUps)[riverID];\n\tconst riverCards = riverMakeUp ? riverMakeUp.cardIDs.map((id) => cardConfigs[id]) : [];\n\tconst riverContentState = useSelector(getRiverContentState);\n\n\t//TODO-NICE: use regex for upper/lower-case\n\tconst contentFilter = useSelector(getRiverContentFilter);\n\n\t// this should only change if the store values change\n\tconst gridItems = useMemo(() => {\n\t\tlet inputCards = riverCards;\n\n\t\tif (riverContentState === \"NONE\") {\n\t\t\treturn [];\n\t\t}\n\n\t\tif (riverContentState !== \"ALL\") {\n\t\t\tif (riverContentState === \"QAS\") {\n\t\t\t\tinputCards = riverCards.filter((config) => config.type === \"Q-A\");\n\t\t\t}\n\t\t\tif (riverContentState === \"NOTES\") {\n\t\t\t\tinputCards = riverCards.filter((config) => config.type === \"Note\");\n\t\t\t}\n\t\t}\n\t\t//TODO-NICE: optimize this waste, move this out of the memo as it changes more rapidly\n\t\tif (contentFilter !== \"\")\n\t\t\tinputCards = inputCards.filter((card) => {\n\t\t\t\tswitch (card.type) {\n\t\t\t\t\tcase \"Note\":\n\t\t\t\t\t\treturn noteContainsContentFilter(card as NoteConfig, contentFilter);\n\t\t\t\t\tcase \"Q-A\":\n\t\t\t\t\t\treturn qaContainsContentFilter(card as QAConfig, contentFilter);\n\t\t\t\t}\n\t\t\t\treturn false;\n\t\t\t});\n\n\t\treturn toCardGridItemsWithDividers(inputCards, riverID);\n\t}, [riverCards, riverID, riverContentState, contentFilter]);\n\n\t//TODO-RC: resize still does not work, the river just stays big?\n\t//TODO-NICE: make HalfFull-sub-menu for half-full QAs\n\t//TODO-NICE: if you start without any document and then load one, the current cards should be merged into that one\n\t//TODO-NICE: scroll-to-top for overflowing river\n\n\treturn (\n\t\t<Accordion\n\t\t\tdefaultExpanded={true}\n\t\t\tstyle={{\n\t\t\t\toverflowY: \"auto\",\n\t\t\t\tmaxHeight: materialHeight,\n\t\t\t}}\n\t\t\televation={5}\n\t\t>\n\t\t\t<AccordionSummary>\n\t\t\t\t<Typography\n\t\t\t\t\tvariant=\"h6\"\n\t\t\t\t\talign=\"center\"\n\t\t\t\t\tstyle={{ MozUserSelect: \"none\", WebkitUserSelect: \"none\", msUserSelect: \"none\" }}\n\t\t\t\t>\n\t\t\t\t\t{riverID}\n\t\t\t\t</Typography>\n\t\t\t</AccordionSummary>\n\t\t\t<AccordionDetails>\n\t\t\t\t<Grid container direction=\"column\" spacing={2} justify=\"center\" alignItems=\"stretch\">\n\t\t\t\t\t<Grid item>\n\t\t\t\t\t\t<cards.components.AddQAButton></cards.components.AddQAButton>\n\t\t\t\t\t\t<cards.components.AddNoteButton></cards.components.AddNoteButton>\n\t\t\t\t\t\t<Divider></Divider>\n\t\t\t\t\t</Grid>\n\n\t\t\t\t\t<Grid item>\n\t\t\t\t\t\t<Grid container direction=\"column\" spacing={2} justify=\"center\" alignItems=\"stretch\">\n\t\t\t\t\t\t\t{gridItems}\n\t\t\t\t\t\t</Grid>\n\t\t\t\t\t</Grid>\n\t\t\t\t</Grid>\n\t\t\t</AccordionDetails>\n\t\t</Accordion>\n\t);\n};\n","import { useDispatch } from \"react-redux\";\nimport { trySetActiveRiver } from \"../actions\";\nimport { ReactNode } from \"react\";\nimport React from \"react\";\n\n//TODO-NICE: selection in CardRiver should stay highlighted when the contextMenu opens?\n\n//TODO-NICE: contextMenu as permant element, maybe sidebar?\n//TODO-NICE: preview in ContextMenu of how selected string would be used\n\n//TODO-NICE: make River-View, where you can just see one card and can make it smaller? Maybe just button to zoom \"in\" / just seeing the current river\n//TODO-NICE: mark Origin-Span or maybe rect over whole page-section?\n//TODO-NICE: make reconciliation algorithm for origin when new PDF versions come out\n// (basically, just search the text, and if it is not in the same span, just move the span - expand page forward and backward then search there)\n\nexport const SwitchActiveRiver = ({ children, riverID }: { children: ReactNode; riverID: string }) => {\n\tconst dispatch = useDispatch();\n\n\treturn (\n\t\t<span\n\t\t\tonMouseEnter={() => {\n\t\t\t\tdispatch(trySetActiveRiver(riverID));\n\t\t\t}}\n\t\t>\n\t\t\t{children}\n\t\t</span>\n\t);\n};\n","import { CardID } from \"../cards/model/config\";\nimport { SingleOrigin } from \"../cards/model/origin\";\n\nexport type RiverMakeUp = { riverID: string; cardIDs: CardID[] };\n\nexport type RiverMakeUps = { [riverID: string]: RiverMakeUp };\n\nexport type RiverShowState = \"SHOW\" | \"HIDE\";\n\nexport type RiverContentState = \"ALL\" | \"NOTES\" | \"QAS\" | \"NONE\";\n\nexport type ContentFilter = string;\n\nexport type CardRiverState = {\n\t// works by first setting it here via button\n\t// then we scroll to the page\n\t// then we set the origin in the display-store\n\t// then we scroll to origin\n\t// all happens in the display module\n\t// TODO-NICE: move this somehow to display?\n\t// problem is that we depend on the display components (list-ref)\n\t// for scrolling\n\trequestedOrigin: SingleOrigin | null;\n\triverMakeUps: RiverMakeUps;\n\tactiveRiverMakeUpID: string;\n\tlastRiverIDNumber: number;\n\t// show/hide river\n\triverShowState: RiverShowState;\n\t// filter content\n\triverContentState: RiverContentState;\n\tcontentFilter: ContentFilter | \"\";\n};\n\nexport const pageNumberToRiverMakeUpID = (page: number) => \"CardRiver \" + page;\n\nexport const riverMakeUpIDToPageNumber = (riverID: string) => parseInt(riverID.replace(\"CardRiver \", \"\"));\n\nexport const emptyCardRiver = (page: number): RiverMakeUp => {\n\treturn {\n\t\triverID: pageNumberToRiverMakeUpID(page),\n\t\tcardIDs: [],\n\t};\n};\n\nexport const updateStateWithMakeUps = (state: CardRiverState, ...makeUps: RiverMakeUp[]) => {\n\tconst updatedState = { ...state };\n\tmakeUps.forEach((makeUp) => {\n\t\tupdatedState.riverMakeUps[makeUp.riverID] = makeUp;\n\t});\n\treturn updatedState;\n};\n\nexport const removeCardFromRivers = (state: CardRiverState, cardID: CardID): CardRiverState => {\n\tconst riverMakeUps = Object.fromEntries(\n\t\tObject.entries(state.riverMakeUps).map((entry) => [\n\t\t\tentry[0],\n\t\t\t{ ...entry[1], cardIDs: entry[1].cardIDs.filter((id) => id !== cardID) },\n\t\t])\n\t);\n\treturn { ...state, riverMakeUps };\n};\n\n//TODO-RC: make option to not show card instead of delete\n// make nice small option in river to hide / show hidden cards (default: hide)\n","import {\n\tCardRiverState,\n\tRiverShowState,\n\tpageNumberToRiverMakeUpID,\n\tRiverContentState,\n\tremoveCardFromRivers,\n} from \"./model\";\nimport { CardConfig } from \"../cards/model/config\";\nimport cards from \"../cards\";\nimport * as t from \"./actionTypes\";\nimport { ArchiveRiver } from \"../db/model\";\nimport db from \"../db\";\n\nconst initialState: CardRiverState = {\n\trequestedOrigin: null,\n\triverMakeUps: {\n\t\t[pageNumberToRiverMakeUpID(1)]: {\n\t\t\triverID: pageNumberToRiverMakeUpID(1),\n\t\t\tcardIDs: [\"2\", \"0\", \"1\"],\n\t\t},\n\t},\n\tactiveRiverMakeUpID: pageNumberToRiverMakeUpID(1),\n\tlastRiverIDNumber: 1,\n\triverShowState: \"SHOW\",\n\triverContentState: \"ALL\",\n\tcontentFilter: \"\",\n};\n\n// TODO-NICE: adding to one river forces all of them to update, should not be a problem, because we only render 2-3 rivers,\n// but memo just in case?\nconst cardRiverState = (state = initialState, { type, payload }: { type: string; payload: any }): CardRiverState => {\n\tlet riverMakeUp;\n\tlet riverMakeUps;\n\tswitch (type) {\n\t\tcase t.RIVER_ACTIVE_ID:\n\t\t\treturn { ...state, activeRiverMakeUpID: payload };\n\t\tcase t.RIVER_SHOW_STATE:\n\t\t\treturn { ...state, riverShowState: payload as RiverShowState };\n\t\tcase t.RIVER_CONTENT_STATE:\n\t\t\treturn { ...state, riverContentState: payload as RiverContentState };\n\t\tcase cards.actionTypes.CARD_PUSH:\n\t\t\tif (state.riverMakeUps[state.activeRiverMakeUpID]) {\n\t\t\t\triverMakeUp = {\n\t\t\t\t\t...state.riverMakeUps[state.activeRiverMakeUpID],\n\t\t\t\t\tcardIDs: [...state.riverMakeUps[state.activeRiverMakeUpID].cardIDs, (payload as CardConfig).cardID],\n\t\t\t\t};\n\t\t\t} else {\n\t\t\t\t// create new river\n\t\t\t\triverMakeUp = {\n\t\t\t\t\triverID: state.activeRiverMakeUpID,\n\t\t\t\t\tcardIDs: [(payload as CardConfig).cardID],\n\t\t\t\t};\n\t\t\t}\n\t\t\triverMakeUps = { ...state.riverMakeUps };\n\t\t\triverMakeUps[state.activeRiverMakeUpID] = riverMakeUp;\n\n\t\t\treturn { ...state, riverMakeUps: riverMakeUps };\n\t\tcase cards.actionTypes.CARD_REMOVE:\n\t\t\treturn removeCardFromRivers(state, payload as string);\n\t\tcase db.actionTypes.DOCUMENT_CHANGE:\n\t\t\tif (payload) {\n\t\t\t\treturn {\n\t\t\t\t\t...initialState,\n\t\t\t\t\triverMakeUps: (payload as ArchiveRiver).riverMakeUps,\n\t\t\t\t\tlastRiverIDNumber: (payload as ArchiveRiver).lastRiverIDNumber,\n\t\t\t\t};\n\t\t\t} else {\n\t\t\t\treturn initialState;\n\t\t\t}\n\t\tcase db.actionTypes.LOAD_DOCUMENT_DATA_SETS:\n\t\t\t// basically the same as DOCUMENT_CHANGE, just only triggered\n\t\t\t//when uploading data that corresponds to current document\n\t\t\t// and if not, we dont reset\n\t\t\tif (payload.newActiveDataSet) {\n\t\t\t\treturn {\n\t\t\t\t\t...initialState,\n\t\t\t\t\triverMakeUps: (payload.newActiveDataSet as ArchiveRiver).riverMakeUps,\n\t\t\t\t\tlastRiverIDNumber: (payload.newActiveDataSet as ArchiveRiver).lastRiverIDNumber,\n\t\t\t\t};\n\t\t\t} else {\n\t\t\t\treturn state;\n\t\t\t}\n\t\tcase t.RIVER_CONTENT_FILTER:\n\t\t\treturn { ...state, contentFilter: payload };\n\t\tcase t.ORIGIN_REQUEST:\n\t\t\treturn { ...state, requestedOrigin: payload };\n\t\tdefault:\n\t\t\treturn state;\n\t}\n};\n\nexport default cardRiverState;\n","import * as constants from \"./constants\";\nimport * as components from \"./components\";\nimport reducer from \"./reducer\";\nimport * as selectors from \"./selectors\";\nimport * as actions from \"./actions\";\nimport * as model from \"./model\";\n\nexport default { constants, components, reducer, selectors, actions, model };\n","import { RefObject, useCallback, useEffect, useRef } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { getSpanOrigin } from \"../../selectors\";\nimport { resetSpanOrigin } from \"../../actions\";\nimport { SingleOrigin } from \"../../../cards/model/origin\";\n\nexport const PageSpanControl = ({ page, pageRef }: { page: number; pageRef: RefObject<null | HTMLDivElement> }) => {\n\tconst spanOrigin = useSelector(getSpanOrigin);\n\tconst count = useRef(0);\n\n\t//TODO-RC: color origin somehow, use my custom renderer, split up Material Module?\n\tconst dispatch = useDispatch();\n\n\t// it is not guaranteed that the effect fires after the page was fully rendered\n\t// (depends on load)\n\t// so we try up to 10 times\n\t// this assumes every machine has finished rendering after approx 100 ms\n\t// then we assume that the origin was invalid (bug somewhere) and abort\n\t// otherwise it would be a infinite loop\n\tconst trier = useCallback(() => {\n\t\tconst intervalID = setInterval(() => {\n\t\t\tif (count.current === 10) {\n\t\t\t\tcount.current = 0;\n\t\t\t\tclearInterval(intervalID);\n\t\t\t\tconsole.log(\"invalid origin clicked\", spanOrigin);\n\t\t\t\tdispatch(resetSpanOrigin());\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t//TODO-RC: when there are a lot of cards and we scroll, the river changes size while scrolling\n\n\t\t\tconst textLayer = pageRef.current?.children.item(1);\n\t\t\tif (textLayer) {\n\t\t\t\tconst originSpan = textLayer.children.item((spanOrigin as SingleOrigin).spanIndex);\n\t\t\t\tif (originSpan) {\n\t\t\t\t\toriginSpan.scrollIntoView({ behavior: \"auto\", block: \"center\", inline: \"center\" });\n\t\t\t\t\tdispatch(resetSpanOrigin());\n\t\t\t\t\tcount.current = 0;\n\t\t\t\t\tclearInterval(intervalID);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcount.current = count.current + 1;\n\t\t}, 10);\n\t}, [dispatch, count, spanOrigin, pageRef]);\n\n\t//TODO-RC: test if nearest is viable after all?\n\n\tuseEffect(() => {\n\t\tif (spanOrigin && spanOrigin.page === page && pageRef.current) {\n\t\t\t// assumption of fixed order\n\t\t\tconst textLayer = pageRef.current.children.item(1);\n\t\t\tif (textLayer) {\n\t\t\t\tconst originSpan = textLayer.children.item(spanOrigin.spanIndex);\n\t\t\t\tif (originSpan) {\n\t\t\t\t\toriginSpan.scrollIntoView({ behavior: \"auto\", block: \"center\", inline: \"center\" });\n\t\t\t\t\tdispatch(resetSpanOrigin());\n\t\t\t\t\tcount.current = 0;\n\t\t\t\t} else {\n\t\t\t\t\ttrier();\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\ttrier();\n\t\t\t}\n\t\t}\n\t}, [dispatch, page, pageRef, spanOrigin, trier]);\n\n\treturn null;\n};\n","import React, { Fragment, useRef } from \"react\";\nimport { Page } from \"react-pdf\";\nimport { PageKeyboardControl } from \"./PageKeyboardControl\";\nimport selection from \"../../../selection\";\nimport { useSelector } from \"react-redux\";\nimport { getDocumentSearch, getWindowMeasurements } from \"../../selectors\";\nimport { MaterialMultiplier } from \"./RiverMaterialPairList\";\nimport { PageSpanControl } from \"./PageSpanControl\";\nimport { TextLayerItemInternal } from \"react-pdf/dist/Page\";\n\n//TODO-RC: strg +f should jump to the searchbox\n\n// highlight what is in searchbox\n\nexport const backgroundStyle = { backgroundColor: \"blue\" };\n\n// TODO-NICE: this could be made clearer and cleaner\nexport const highlightPattern = (text: string, pattern: string) => {\n\t// the idea is that:\n\t// no matches are most likely\n\t// 1 or 2 are second most likely\n\t// after that the pattern must be really small,\n\t// so then we can look at the whole string\n\t// generally verbosity is used to guarantee speed\n\t// potentially 400+ items need to be processed for every search, so no room for slack\n\n\tconst textLength = text.length;\n\tconst patternLength = pattern.length;\n\t// most of the TextItems should not have a highlight, so short-circuit is advised\n\tif (pattern === \"\" || text === \"\" || patternLength > textLength) return text;\n\n\t// fastest match seems to be indexOf: https://jsben.ch/RVYk7\n\tconst index = text.indexOf(pattern);\n\tif (index === -1) return text;\n\n\tconst markedPattern = <mark style={backgroundStyle}>{pattern}</mark>;\n\tconst slice1 = index > 0 ? text.slice(0, index) : false;\n\n\tlet result = [];\n\tif (slice1) result.push(slice1);\n\tresult.push(markedPattern);\n\n\tconst secondIndex = text.indexOf(pattern, index + patternLength);\n\tif (secondIndex === -1) {\n\t\t// only valid if secondIndex === -1\n\t\tconst slice2Start = index + patternLength;\n\t\tconst slice2 = slice2Start < textLength ? text.slice(slice2Start) : false;\n\t\tif (slice2) result.push(slice2);\n\t\treturn result;\n\t}\n\n\tconst slice2Start = index + patternLength;\n\tconst slice2 = slice2Start !== secondIndex ? text.slice(slice2Start, secondIndex) : false;\n\tif (slice2) result.push(slice2);\n\tresult.push(markedPattern);\n\n\tconst thirdIndex = text.indexOf(pattern, secondIndex + patternLength);\n\tif (thirdIndex === -1) {\n\t\tconst slice3Start = secondIndex + patternLength;\n\t\tconst slice3 = slice3Start < textLength ? text.slice(slice3Start) : false;\n\t\tif (slice3) result.push(slice2);\n\t\treturn result;\n\t}\n\n\tconst slice3Start = secondIndex + patternLength;\n\tconst slice3 = slice3Start < textLength ? text.slice(slice3Start, thirdIndex) : false;\n\tif (slice3) result.push(slice3);\n\tresult.push(markedPattern);\n\n\tif (thirdIndex + patternLength === textLength) {\n\t\treturn result;\n\t}\n\n\tconst stringRest = text.slice(thirdIndex + patternLength);\n\tif (stringRest === pattern) {\n\t\tresult.push(markedPattern);\n\t\treturn result;\n\t}\n\n\tconst splitText = stringRest.split(pattern);\n\tif (splitText.length <= 1) {\n\t\tresult.push(stringRest);\n\t\treturn result;\n\t}\n\n\tfor (let index = 0; index < splitText.length; index++) {\n\t\tconst spliter = splitText[index];\n\t\tif (index === 0 && spliter === \"\") {\n\t\t\tresult.push(markedPattern);\n\t\t\tcontinue;\n\t\t}\n\n\t\tif (index === splitText.length - 1 && spliter !== \"\") {\n\t\t\tresult.push(spliter);\n\t\t\tcontinue;\n\t\t}\n\n\t\tif (spliter !== \"\") result.push(spliter);\n\t\tresult.push(markedPattern);\n\t}\n\n\treturn result as any;\n};\n\n//TODO-RC: multiple matches does not work?\n//TODO-RC: Creative Worldview Page 8 search Memory, partially wrong selection?\n//TODO-RC: way to slow even in prod\n\nfunction makeTextRenderer(searchText: string) {\n\treturn function textRenderer(textItem: TextLayerItemInternal) {\n\t\treturn highlightPattern(textItem.str, searchText);\n\t};\n}\n\nexport const PDFPage = ({ pageNumber }: { pageNumber: number }) => {\n\t//assumption is that the list checks for width before rendering\n\tconst materialWidth = useSelector(getWindowMeasurements)?.width as number;\n\tconst documentSearch = useSelector(getDocumentSearch);\n\n\tconst textRenderer = documentSearch !== \"\" ? makeTextRenderer(documentSearch) : undefined;\n\n\tconst pageRef = useRef<null | HTMLDivElement>(null);\n\n\treturn (\n\t\t<Fragment>\n\t\t\t<selection.components.MaterialMouseUp page={pageNumber}>\n\t\t\t\t<PageKeyboardControl>\n\t\t\t\t\t<Page\n\t\t\t\t\t\tinputRef={(instance) => {\n\t\t\t\t\t\t\tpageRef.current = instance;\n\t\t\t\t\t\t}}\n\t\t\t\t\t\tpageNumber={pageNumber}\n\t\t\t\t\t\twidth={materialWidth * MaterialMultiplier}\n\t\t\t\t\t\tonRenderSuccess={() => {\n\t\t\t\t\t\t\tconsole.log(\"rendered Page \" + pageNumber);\n\t\t\t\t\t\t}}\n\t\t\t\t\t\tcustomTextRenderer={textRenderer}\n\t\t\t\t\t/>\n\t\t\t\t</PageKeyboardControl>\n\t\t\t</selection.components.MaterialMouseUp>\n\t\t\t<PageSpanControl page={pageNumber} pageRef={pageRef}></PageSpanControl>\n\t\t</Fragment>\n\t);\n};\n","import React from \"react\";\nimport { Divider, Grid } from \"@material-ui/core\";\nimport river from \"../../../river\";\nimport { PDFPage } from \"./PDFPage\";\n\nexport const RiverMaterialPair = ({\n\tindex,\n\tdata,\n\tstyle,\n}: {\n\tindex: number;\n\tdata: {\n\t\tmaterialHeights: Map<number, number>;\n\t};\n\tstyle: any;\n}) => {\n\tconst pageNumber = index + 1;\n\tconst riverID = river.model.pageNumberToRiverMakeUpID(pageNumber);\n\tconst { materialHeights } = data;\n\n\treturn (\n\t\t<div {...{ style }}>\n\t\t\t<river.components.SwitchActiveRiver riverID={riverID}>\n\t\t\t\t<Grid container justify=\"space-between\" direction=\"row\" alignItems=\"flex-start\">\n\t\t\t\t\t<Grid item>\n\t\t\t\t\t\t<river.components.CardRiver\n\t\t\t\t\t\t\triverID={riverID}\n\t\t\t\t\t\t\tmaterialHeight={materialHeights.get(pageNumber) as number}\n\t\t\t\t\t\t></river.components.CardRiver>\n\t\t\t\t\t</Grid>\n\n\t\t\t\t\t<Grid item>\n\t\t\t\t\t\t<PDFPage pageNumber={pageNumber}></PDFPage>\n\t\t\t\t\t</Grid>\n\t\t\t\t</Grid>\n\t\t\t</river.components.SwitchActiveRiver>\n\t\t\t<Divider></Divider>\n\t\t</div>\n\t);\n};\n","import { RefObject, useEffect } from \"react\";\nimport { VariableSizeList } from \"react-window\";\nimport { getCurrentPage, getScrollToPage } from \"../../selectors\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { setPage, setSpanOrigin } from \"../../actions\";\nimport river from \"../../../river\";\n\nexport const PageScrollControl = ({ listRef }: { listRef: RefObject<VariableSizeList> }) => {\n\tconst scrollToPage = useSelector(getScrollToPage);\n\tconst currentPage = useSelector(getCurrentPage);\n\tconst requestedOrigin = useSelector(river.selectors.getOriginRequest);\n\tuseEffect(() => {\n\t\tlistRef.current?.scrollToItem(currentPage - 1, \"start\");\n\t}, []);\n\n\tconst dispatch = useDispatch();\n\n\tuseEffect(() => {\n\t\tif (requestedOrigin) {\n\t\t\tlistRef.current?.scrollToItem(requestedOrigin.page - 1, \"auto\");\n\t\t\tdispatch(setSpanOrigin(requestedOrigin));\n\t\t\tdispatch(setPage(requestedOrigin.page, false));\n\t\t\tdispatch(river.actions.resetOriginRequest());\n\t\t\treturn;\n\t\t}\n\n\t\tif (scrollToPage) {\n\t\t\tlistRef.current?.scrollToItem(scrollToPage - 1, \"start\");\n\t\t\tdispatch(setPage(scrollToPage, false));\n\t\t}\n\t}, [dispatch, listRef, scrollToPage, requestedOrigin]);\n\n\treturn null;\n};\n","import React, { RefObject, useRef, Fragment } from \"react\";\nimport { pdfjs } from \"react-pdf\";\nimport { VariableSizeList } from \"react-window\";\nimport { RiverMaterialPair } from \"./RiverMaterialPair\";\nimport { CachedPageDimensions } from \"./PDFDocument\";\nimport { getWindowMeasurements } from \"../../selectors\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { setPage } from \"../../actions\";\nimport { PageScrollControl } from \"./PageScrollControl\";\n\nexport const MaterialMultiplier = 0.57;\n\nconst calculateMaterialHeight = (\n\tpageNumber: number,\n\tcachedPageDimensions: CachedPageDimensions,\n\twindowWidth: number\n) => {\n\tconst pageDims = cachedPageDimensions.get(pageNumber) as [number, number];\n\tconst materialWidth = windowWidth * MaterialMultiplier;\n\n\tconst userSpaceUnitWidth = pageDims[0];\n\tconst pixelPerUserSpaceUnit = materialWidth / userSpaceUnitWidth;\n\tconst materialHeight = pageDims[1] * pixelPerUserSpaceUnit;\n\n\tconst extraSpaceBetweenMaterialPages = 20;\n\treturn materialHeight + extraSpaceBetweenMaterialPages;\n};\n\nexport const RiverMaterialPairList = ({\n\tpdfProxyRef,\n\tcachedPageDimensions,\n}: {\n\tpdfProxyRef: RefObject<pdfjs.PDFDocumentProxy | undefined>;\n\tcachedPageDimensions: CachedPageDimensions;\n}) => {\n\tconst listRef = useRef<VariableSizeList>();\n\n\tconst windowMeasurements = useSelector(getWindowMeasurements);\n\tconst materialHeights = windowMeasurements\n\t\t? Array.from(cachedPageDimensions.keys()).reduce((prev, pageNumber) => {\n\t\t\t\tprev.set(pageNumber, calculateMaterialHeight(pageNumber, cachedPageDimensions, windowMeasurements.width));\n\t\t\t\treturn prev;\n\t\t  }, new Map<number, number>())\n\t\t: undefined;\n\n\tconst dispatch = useDispatch();\n\n\treturn (\n\t\t<Fragment>\n\t\t\t{windowMeasurements && materialHeights && (\n\t\t\t\t<VariableSizeList\n\t\t\t\t\theight={windowMeasurements.height}\n\t\t\t\t\titemCount={(pdfProxyRef.current as pdfjs.PDFDocumentProxy).numPages}\n\t\t\t\t\titemSize={(index: number) => materialHeights.get(index + 1) as number}\n\t\t\t\t\titemData={{\n\t\t\t\t\t\tmaterialHeights,\n\t\t\t\t\t}}\n\t\t\t\t\tref={listRef as RefObject<VariableSizeList>}\n\t\t\t\t\twidth=\"100%\"\n\t\t\t\t\tonItemsRendered={(props) => {\n\t\t\t\t\t\t//TODO-NICE: find way to switch the page if it is halfway in sight\n\t\t\t\t\t\tdispatch(setPage(props.visibleStopIndex + 1, false));\n\t\t\t\t\t}}\n\t\t\t\t>\n\t\t\t\t\t{RiverMaterialPair}\n\t\t\t\t</VariableSizeList>\n\t\t\t)}\n\t\t\t<PageScrollControl listRef={listRef as RefObject<VariableSizeList>}></PageScrollControl>\n\t\t</Fragment>\n\t);\n};\n","import \"./PDFDocument.css\";\nimport \"react-pdf/dist/esm/Page/AnnotationLayer.css\";\nimport React, { useState, useRef } from \"react\";\nimport { pdfjs, Document } from \"react-pdf\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { materialLoaded, setPage } from \"../../actions\";\nimport { getPDF } from \"../../selectors\";\nimport text from \"../../../text\";\nimport { cachePageDimensions } from \"./cachePageDimensions\";\nimport { RiverMaterialPairList } from \"./RiverMaterialPairList\";\npdfjs.GlobalWorkerOptions.workerSrc = `//cdnjs.cloudflare.com/ajax/libs/pdf.js/${pdfjs.version}/pdf.worker.js`;\n\nexport type CachedPageDimensions = Map<number, [number, number]>;\n\nconst options = {\n\tcMapUrl: \"cmaps/\",\n\tcMapPacked: true,\n};\n\n//TODO-NICE: implement more pdf-reader functionality, like zoom\n\nexport const PDFDocument = () => {\n\tconst pdf = useSelector(getPDF);\n\n\tconst [cachedPageDimensions, setPageDimensions] = useState<CachedPageDimensions | undefined>();\n\n\tconst pdfProxyRef = useRef<pdfjs.PDFDocumentProxy | undefined>();\n\n\tconst dispatch = useDispatch();\n\n\t// used for abborting pageDimension-cache-collection\n\tconst pdfName = pdf?.name;\n\tconst pdfNameRef = useRef(pdfName);\n\tif (pdfNameRef.current !== pdfName) {\n\t\tpdfNameRef.current = pdfName;\n\t}\n\n\treturn (\n\t\t<Document\n\t\t\tloading={text.constants.loadingMaterialText}\n\t\t\tnoData={text.constants.noMaterialText}\n\t\t\toptions={options}\n\t\t\tfile={pdf}\n\t\t\trenderMode=\"canvas\"\n\t\t\tonLoadSuccess={(pdfProxy) => {\n\t\t\t\tdispatch(materialLoaded(pdfProxy.numPages));\n\t\t\t\tif (pdf) cachePageDimensions(pdfProxy, pdfName as string, pdfNameRef, setPageDimensions);\n\t\t\t\tpdfProxyRef.current = pdfProxy;\n\t\t\t}}\n\t\t\tonItemClick={({ pageNumber }) => {\n\t\t\t\tdispatch(setPage(parseInt(pageNumber), true));\n\t\t\t}}\n\t\t>\n\t\t\t{cachedPageDimensions && pdfNameRef.current === pdfName && (\n\t\t\t\t<RiverMaterialPairList\n\t\t\t\t\tpdfProxyRef={pdfProxyRef}\n\t\t\t\t\tcachedPageDimensions={cachedPageDimensions}\n\t\t\t\t></RiverMaterialPairList>\n\t\t\t)}\n\t\t</Document>\n\t);\n};\n","import { RefObject } from \"react\";\nimport { pdfjs } from \"react-pdf\";\nimport { CachedPageDimensions } from \"./PDFDocument\";\n\n//TODO-NICE: use more robust method than pdfName to differentiate pdfs\n//TODO-NICE: test if this abort actually works? once the function was entered,\n// is it guaranteed that it will finish before other changes?\nexport const cachePageDimensions = (\n\tpdfProxy: pdfjs.PDFDocumentProxy,\n\tpdfName: string,\n\tpdfNameRef: RefObject<string | null | undefined>,\n\tsetPageDimensions: (dims: CachedPageDimensions) => void\n) => {\n\tconst promises = Array.from({ length: pdfProxy.numPages }, (_, i) => i + 1).map((pageNumber) =>\n\t\tpdfProxy.getPage(pageNumber)\n\t);\n\n\t// Assuming all pages may have different heights. Otherwise we can just\n\t// load the first page and use its height for determining all the row\n\t// heights.\n\tPromise.all((promises as unknown) as Promise<any>[]).then((pages: pdfjs.PDFPageProxy[]) => {\n\t\t// a different pdf was loaded while these promises where executing\n\t\tif (pdfName !== pdfNameRef.current) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst pageDimensions = new Map();\n\n\t\t//TODO-NICE: zooming needs a scale\n\t\tconst scale = 1;\n\t\tfor (const page of pages) {\n\t\t\tconst w = page.view[2] * scale;\n\t\t\tconst h = page.view[3] * scale;\n\n\t\t\t// react-pdf 4.0.5 types are incorrect, _pageIndex is correct and not just pageIndex\n\t\t\tpageDimensions.set(((page as unknown) as { _pageIndex: number })._pageIndex + 1, [w, h]);\n\t\t}\n\n\t\tsetPageDimensions(pageDimensions);\n\t});\n};\n","import { useEffect, useLayoutEffect } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { widthPixels } from \"../../actions\";\nimport { debounce } from \"throttle-debounce\";\n\n//TODO-NICE: make PR to react-pdf-sample or make my own, because the Memory/height bug makes his unusable\n// height = real total height = render everything = can not scroll, because we are \"showing\" everything already\n\nexport const WindowMeasurer = () => {\n\tconst dispatch = useDispatch();\n\n\tconst measure = debounce(50, () => {\n\t\tconst currentWidth = window.innerWidth;\n\t\tconst currentHeight = window.innerHeight;\n\t\tdispatch(widthPixels({ width: currentWidth, height: currentHeight }));\n\t});\n\n\tuseLayoutEffect(() => {\n\t\t//first measurement\n\t\tmeasure();\n\t}, [measure]);\n\n\tuseEffect(() => {\n\t\twindow.addEventListener(\"resize\", measure);\n\t\treturn () => {\n\t\t\twindow.removeEventListener(\"resize\", measure);\n\t\t};\n\t});\n\n\treturn null;\n};\n","import * as t from \"./actionTypes\";\nimport type { DisplayData, DisplayStatus } from \"./model\";\nimport db from \"../db\";\n\nconst initialState: DisplayData = {\n\tdisplayStatus: \"SHOW\",\n\ttotalPages: 1000,\n\tcurrentPage: 1,\n\tscrollToPage: null,\n\twindowMeasurements: null,\n\tspanOrigin: null,\n\tdocumentSearch: \"\",\n};\n\nconst displayData = (state = initialState, { type, payload }: { type: string; payload: any }): DisplayData => {\n\tswitch (type) {\n\t\tcase t.PDF_UPLOADED:\n\t\t\treturn { ...state, pdf: payload as File, pdfName: (payload as File).name };\n\t\tcase db.actionTypes.DOCUMENT_CHANGE:\n\t\t\tif (payload) {\n\t\t\t\t// this means the pdf has been already uploaded (Load Document) and this was not triggered not via options\n\t\t\t\tif (payload.name === state.pdfName) {\n\t\t\t\t\treturn state;\n\t\t\t\t}\n\t\t\t\treturn {\n\t\t\t\t\t...initialState,\n\t\t\t\t\tpdf: undefined,\n\t\t\t\t\tpdfName: payload.name,\n\t\t\t\t\ttotalPages: payload.totalPages,\n\t\t\t\t\tcurrentPage: payload.currentPage,\n\t\t\t\t};\n\t\t\t} else {\n\t\t\t\t// dont need to reset here because when loading pdf we set automatically via other actions\n\t\t\t\treturn state;\n\t\t\t}\n\t\tcase t.MATERIAL_LOADED:\n\t\t\treturn { ...state, totalPages: payload as number };\n\t\tcase t.PAGE_UPDATE:\n\t\t\treturn { ...state, currentPage: payload.page, scrollToPage: payload.shouldScroll ? payload.page : null };\n\t\tcase t.DISPLAY_STATUS:\n\t\t\treturn { ...state, displayStatus: payload as DisplayStatus };\n\t\tcase t.SPAN_ORIGIN:\n\t\t\treturn { ...state, spanOrigin: payload };\n\t\tcase t.DOCUMENT_SEARCH:\n\t\t\treturn { ...state, documentSearch: payload };\n\t\tcase t.WINDOW_LAYOUT:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\twindowMeasurements: payload,\n\t\t\t};\n\t\tdefault:\n\t\t\treturn state;\n\t}\n};\n\nexport default displayData;\n","import * as actions from \"./actions\";\nimport * as actionTypes from \"./actionTypes\";\nimport * as components from \"./components\";\nimport * as constants from \"./constants\";\nimport reducer from \"./reducer\";\nimport * as selectors from \"./selectors\";\n\nexport default { actions, actionTypes, components, constants, reducer, selectors };\n","import { createSelector } from \"reselect\";\nimport display from \"../display\";\nimport river from \"../river\";\nimport cards from \"../cards\";\nimport { DocumentData } from \"../db/model\";\n\nexport const collectCurrentDBData: (state: any) => DocumentData | null = createSelector(\n\tdisplay.selectors.getPDFName,\n\tdisplay.selectors.getTotalPages,\n\tdisplay.selectors.getCurrentPage,\n\triver.selectors.getRiverMakeUps,\n\triver.selectors.getActiveRiverMakeUpID,\n\triver.selectors.getLastRiverIDNumber,\n\tcards.selectors.getCards,\n\tcards.selectors.getLastCardIDNumber,\n\t(pdfName, totalPages, currentPage, riverMakeUps, activeRiverMakeUpID, lastRiverIDNumber, cards, lastCardIDNumber) => {\n\t\treturn {\n\t\t\tname: pdfName as string,\n\t\t\ttotalPages,\n\t\t\tcurrentPage,\n\t\t\triverMakeUps,\n\t\t\tactiveRiverMakeUpID,\n\t\t\tlastRiverIDNumber,\n\t\t\tcards,\n\t\t\tlastCardIDNumber,\n\t\t};\n\t}\n);\n","import { Dispatch } from \"redux\";\nimport display from \"../display\";\nimport { ActionCreators } from \"redux-undo\";\nimport db from \"../db\";\nimport { collectCurrentDBData } from \"./selectors\";\nimport { DocumentData } from \"../db/model\";\n\nexport const archiveCurrentDBData = () => {\n\treturn (dispatch: Dispatch, getState: Function) => {\n\t\tconst state = getState();\n\t\tconst currentPDFName = display.selectors.getPDFName(state);\n\n\t\tif (currentPDFName !== undefined) {\n\t\t\tconst dbData = collectCurrentDBData(state) as DocumentData;\n\t\t\tdispatch(db.actions.archiveDBData(dbData));\n\t\t}\n\t};\n};\n\nconst fileDownload = require(\"js-file-download\");\nexport const downloadDBData = () => {\n\treturn (dispatch: any, getState: Function) => {\n\t\t//actualize the db before downloading\n\t\tdispatch(archiveCurrentDBData());\n\n\t\tconst documentDataSets = db.selectors.getDocumentDataSets(getState());\n\t\tconst localString = new Date().toLocaleString();\n\t\tfileDownload(JSON.stringify(documentDataSets), localString + \" ClayMemory.txt\");\n\t};\n};\n\nexport const changeDocument = (pdf: File) => {\n\treturn (dispatch: Dispatch, getState: Function) => {\n\t\tconst newPDFName = pdf.name;\n\n\t\tconst state = getState();\n\t\tconst currentPDFName = display.selectors.getPDFName(state);\n\n\t\tconst documentDB = db.selectors.getAll(state);\n\n\t\t// save current data only if pdf has been uploaded / there is an active document\n\t\tif (currentPDFName !== undefined) {\n\t\t\tconst dbData = collectCurrentDBData(state) as DocumentData;\n\t\t\tdispatch(db.actions.archiveDBData(dbData));\n\t\t}\n\n\t\tdispatch(display.actions.pdfUpload(pdf));\n\n\t\t// if the uploaded pdf is the same as the active one, then we just reloaded the app (lost the pdf)\n\t\t// and dont need load data (loading data would lead to overwrite because of the syncing order)\n\t\t//TODO-NICE: make the sync between documentDB and active document for explicit, right now I just sync when a PDF is uploaded\n\t\tif (newPDFName === currentPDFName) {\n\t\t\treturn;\n\t\t}\n\t\t// load new data or reset\n\t\tconst newDocumentData = documentDB[newPDFName];\n\t\tif (newDocumentData) {\n\t\t\tdispatch({ type: db.actionTypes.DOCUMENT_CHANGE, payload: newDocumentData });\n\t\t} else {\n\t\t\tdispatch({ type: db.actionTypes.DOCUMENT_CHANGE });\n\t\t}\n\n\t\t// no undo-redo across documents\n\t\tdispatch(ActionCreators.clearHistory());\n\t};\n};\n\n//TODO-NICE: remove save redundancy\nexport const loadSavedDocument = (document: string) => {\n\treturn (dispatch: Dispatch, getState: Function) => {\n\t\tconst state = getState();\n\t\tconst currentPDFName = display.selectors.getPDFName(state);\n\n\t\tconst documentDB = db.selectors.getAll(state);\n\n\t\t// save current data only if pdf has been uploaded / there is an active document\n\t\tif (currentPDFName !== undefined) {\n\t\t\tconst dbData = collectCurrentDBData(state) as DocumentData;\n\t\t\tdispatch(db.actions.archiveDBData(dbData));\n\t\t}\n\n\t\t// load new data\n\t\tconst newDocumentData = documentDB[document];\n\t\tdispatch({ type: db.actionTypes.DOCUMENT_CHANGE, payload: newDocumentData });\n\n\t\t// no undo-redo across documents\n\t\tdispatch(ActionCreators.clearHistory());\n\t};\n};\n\nexport const deleteDocument = (document: string) => {\n\treturn (dispatch: Dispatch, getState: Function) => {\n\t\tconst state = getState();\n\t\tconst activeDocument = display.selectors.getPDFName(state);\n\t\tif (activeDocument && activeDocument === document) {\n\t\t\t// reset data\n\t\t\tdispatch({ type: db.actionTypes.DOCUMENT_CHANGE });\n\n\t\t\t// keeping the undo history leads to weird edge cases and makes no sense\n\t\t\tdispatch(ActionCreators.clearHistory());\n\t\t}\n\n\t\t// note: no undo of this\n\t\tdispatch(db.actions.deleteDocumentDataSet(document));\n\t};\n};\n","import { useDispatch } from \"react-redux\";\nimport React, { useState } from \"react\";\nimport {\n\tIconButton,\n\tTooltip,\n\tDialog,\n\tDialogTitle,\n\tDialogContent,\n\tDialogContentText,\n\tDialogActions,\n\tButton,\n} from \"@material-ui/core\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport text from \"../../../text\";\nimport { deleteDocument } from \"../../actions\";\n\nconst DeleteDocumentDialogAlert = ({\n\tdocument,\n\thandleClose,\n\topen,\n}: {\n\tdocument: string;\n\thandleClose: () => void;\n\topen: boolean;\n}) => {\n\tconst dispatch = useDispatch();\n\n\treturn (\n\t\t<Dialog\n\t\t\topen={open}\n\t\t\tonClose={handleClose}\n\t\t\taria-labelledby=\"alert-dialog-title\"\n\t\t\taria-describedby=\"alert-dialog-description\"\n\t\t>\n\t\t\t<DialogTitle id=\"alert-dialog-title\">{\"Delete \" + document + \" and all associated card data?\"}</DialogTitle>\n\t\t\t<DialogContent>\n\t\t\t\t<DialogContentText id=\"alert-dialog-description\">This change can not be undone.</DialogContentText>\n\t\t\t</DialogContent>\n\t\t\t<DialogActions>\n\t\t\t\t<Button onClick={handleClose} color=\"primary\">\n\t\t\t\t\tAbort\n\t\t\t\t</Button>\n\t\t\t\t<Button\n\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\tdispatch(deleteDocument(document));\n\t\t\t\t\t\thandleClose();\n\t\t\t\t\t}}\n\t\t\t\t\tcolor=\"primary\"\n\t\t\t\t\tautoFocus\n\t\t\t\t>\n\t\t\t\t\tDelete document and associated card data\n\t\t\t\t</Button>\n\t\t\t</DialogActions>\n\t\t</Dialog>\n\t);\n};\n\n//TODO-NICE: deleting the active document leads only to reset it, not really delete it\nexport const DeleteDocumentButton = ({ document }: { document: string }) => {\n\tconst [open, setOpen] = useState(false);\n\n\tconst handleClose = () => {\n\t\tsetOpen(false);\n\t};\n\treturn (\n\t\t<div>\n\t\t\t<Tooltip\n\t\t\t\ttitle={text.constants.deleteDocumentTooltip}\n\t\t\t\tenterDelay={text.constants.defaultEnterDelay}\n\t\t\t\tenterNextDelay={text.constants.defaultEnterNextDelay}\n\t\t\t>\n\t\t\t\t<IconButton\n\t\t\t\t\ttype=\"button\"\n\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\tsetOpen(true);\n\t\t\t\t\t}}\n\t\t\t\t>\n\t\t\t\t\t<DeleteIcon fontSize=\"small\"></DeleteIcon>\n\t\t\t\t</IconButton>\n\t\t\t</Tooltip>\n\t\t\t<DeleteDocumentDialogAlert document={document} open={open} handleClose={handleClose}></DeleteDocumentDialogAlert>\n\t\t</div>\n\t);\n};\n","import { useSelector, useDispatch } from \"react-redux\";\nimport React, { ChangeEvent, Fragment, useRef, MutableRefObject } from \"react\";\nimport { MenuItem, Button } from \"@material-ui/core\";\nimport display from \"../../../display\";\nimport db from \"../../../db\";\nimport { DocumentData } from \"../../../db/model\";\nimport PublishIcon from \"@material-ui/icons/Publish\";\n\nexport const InputDataSets = ({ handleClose, label }: any) => {\n\tconst dispatch = useDispatch();\n\n\tconst activeDocument = useSelector(display.selectors.getPDFName);\n\n\tconst ref: MutableRefObject<null | HTMLInputElement> = useRef(null);\n\n\treturn (\n\t\t<Fragment>\n\t\t\t<MenuItem\n\t\t\t\tonClick={() => {\n\t\t\t\t\t(ref.current as HTMLInputElement).click();\n\t\t\t\t}}\n\t\t\t>\n\t\t\t\t<Button variant=\"contained\" color=\"primary\" disableElevation startIcon={<PublishIcon></PublishIcon>}>\n\t\t\t\t\t{label}\n\t\t\t\t</Button>\n\t\t\t</MenuItem>\n\t\t\t<input\n\t\t\t\tref={ref}\n\t\t\t\tstyle={{ display: \"none\" }}\n\t\t\t\tonChange={(event: ChangeEvent<HTMLInputElement>) => {\n\t\t\t\t\t// fun fact: uploading a file with the same file-name does not trigger this event\n\t\t\t\t\tconst files = event.target.files;\n\t\t\t\t\tconst file = files ? files[0] : null;\n\t\t\t\t\tif (file) {\n\t\t\t\t\t\tconst reader = new FileReader();\n\t\t\t\t\t\treader.readAsText(file);\n\t\t\t\t\t\treader.onload = () => {\n\t\t\t\t\t\t\t//TODO-NICE: sanitize, escape os new line difference, prepare multimedia cards\n\t\t\t\t\t\t\t//TODO-NICE: merge same name-pdfs and think about collision in general\n\t\t\t\t\t\t\t//TODO-NICE: merge uploaded state with current-one and dont overwrite\n\t\t\t\t\t\t\tconst uploadedDataSets = JSON.parse(reader.result as string);\n\t\t\t\t\t\t\t// if the uploaded dataset corresponds to the current document, overwrite current with uploaded\n\t\t\t\t\t\t\tconst foundDataSet = (uploadedDataSets as DocumentData[]).find(\n\t\t\t\t\t\t\t\t(dbData) => dbData.name === activeDocument\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\tdispatch(db.actions.loadDocumentDataSets(uploadedDataSets, foundDataSet));\n\t\t\t\t\t\t};\n\t\t\t\t\t}\n\t\t\t\t\thandleClose();\n\t\t\t\t}}\n\t\t\t\ttype=\"file\"\n\t\t\t\taccept=\".txt\"\n\t\t\t/>\n\t\t</Fragment>\n\t);\n};\n","import { useDispatch } from \"react-redux\";\nimport React, { ChangeEvent, Fragment, useRef, MutableRefObject } from \"react\";\nimport { MenuItem, Button } from \"@material-ui/core\";\nimport { changeDocument } from \"../../actions\";\nimport InsertDriveFileIcon from \"@material-ui/icons/InsertDriveFile\";\n//TODO-NICE: have way to merge two document-workspaces\nexport const InputDocument = ({ handleClose, label }: any) => {\n\tconst dispatch = useDispatch();\n\n\tconst ref: MutableRefObject<null | HTMLInputElement> = useRef(null);\n\n\treturn (\n\t\t<Fragment>\n\t\t\t<MenuItem\n\t\t\t\tonClick={() => {\n\t\t\t\t\t(ref.current as HTMLInputElement).click();\n\t\t\t\t}}\n\t\t\t>\n\t\t\t\t<Button\n\t\t\t\t\tvariant=\"contained\"\n\t\t\t\t\tcolor=\"primary\"\n\t\t\t\t\tdisableElevation\n\t\t\t\t\tstartIcon={<InsertDriveFileIcon></InsertDriveFileIcon>}\n\t\t\t\t>\n\t\t\t\t\t{label}\n\t\t\t\t</Button>\n\t\t\t</MenuItem>\n\t\t\t<input\n\t\t\t\tref={ref}\n\t\t\t\tstyle={{ display: \"none\" }}\n\t\t\t\tonChange={(event: ChangeEvent<HTMLInputElement>) => {\n\t\t\t\t\tconst files = event.target.files;\n\t\t\t\t\tconst pdf = files ? files[0] : null;\n\t\t\t\t\tif (pdf) {\n\t\t\t\t\t\tdispatch(changeDocument(pdf));\n\t\t\t\t\t}\n\t\t\t\t\thandleClose();\n\t\t\t\t}}\n\t\t\t\ttype=\"file\"\n\t\t\t\taccept=\".pdf\"\n\t\t\t/>\n\t\t</Fragment>\n\t);\n};\n","import { useDispatch } from \"react-redux\";\nimport React from \"react\";\nimport { IconButton, Tooltip } from \"@material-ui/core\";\nimport ImportContactsIcon from \"@material-ui/icons/ImportContacts\";\nimport { loadSavedDocument } from \"../../actions\";\nimport text from \"../../../text\";\nexport const LoadDocumentDataButton = ({ document }: { document: string }) => {\n\tconst dispatch = useDispatch();\n\treturn (\n\t\t<Tooltip\n\t\t\ttitle={text.constants.loadSavedDocumentTooltip}\n\t\t\tenterDelay={text.constants.defaultEnterDelay}\n\t\t\tenterNextDelay={text.constants.defaultEnterNextDelay}\n\t\t>\n\t\t\t<IconButton\n\t\t\t\ttype=\"button\"\n\t\t\t\tonClick={() => {\n\t\t\t\t\tdispatch(loadSavedDocument(document));\n\t\t\t\t}}\n\t\t\t>\n\t\t\t\t<ImportContactsIcon fontSize=\"small\"></ImportContactsIcon>\n\t\t\t</IconButton>\n\t\t</Tooltip>\n\t);\n};\n","import React from \"react\";\nimport { Divider, Card, Grid } from \"@material-ui/core\";\nimport { DeleteDocumentButton } from \"./DeleteDocumentButton\";\nimport { LoadDocumentDataButton } from \"./LoadDocumentDataButton\";\n\nconst DocumentOptionItemButtonRow = ({ document }: { document: string }) => {\n\treturn (\n\t\t<Grid container direction=\"row\">\n\t\t\t<Grid item>\n\t\t\t\t<LoadDocumentDataButton document={document}></LoadDocumentDataButton>\n\t\t\t</Grid>\n\n\t\t\t<Grid item>\n\t\t\t\t<Divider orientation=\"vertical\"></Divider>\n\t\t\t</Grid>\n\n\t\t\t<Grid item>\n\t\t\t\t<DeleteDocumentButton document={document}></DeleteDocumentButton>\n\t\t\t</Grid>\n\t\t</Grid>\n\t);\n};\n\nexport const DocumentOptionItem = ({ document }: { document: string }) => {\n\treturn (\n\t\t<Grid container direction=\"row\" justify=\"space-between\" alignItems=\"center\" spacing={1}>\n\t\t\t<Grid item>{document.replace(\".pdf\", \"\")}</Grid>\n\n\t\t\t<Grid item>\n\t\t\t\t<Card variant=\"outlined\">\n\t\t\t\t\t<DocumentOptionItemButtonRow document={document}></DocumentOptionItemButtonRow>\n\t\t\t\t</Card>\n\t\t\t</Grid>\n\t\t</Grid>\n\t);\n};\n","import { useSelector, useDispatch } from \"react-redux\";\nimport React from \"react\";\nimport { Divider, Menu, MenuItem, IconButton, Typography, Card, Button, Grid } from \"@material-ui/core\";\nimport { downloadDBData } from \"../../actions\";\nimport MoreVertIcon from \"@material-ui/icons/MoreVert\";\nimport display from \"../../../display\";\nimport db from \"../../../db\";\nimport GetAppIcon from \"@material-ui/icons/GetApp\";\nimport { DeleteDocumentButton } from \"./DeleteDocumentButton\";\nimport text from \"../../../text\";\nimport { incrementer } from \"../../../../shared/utils\";\nimport { InputDataSets } from \"./InputDataSets\";\nimport { InputDocument } from \"./InputDocument\";\nimport { DocumentOptionItem } from \"./DocumentOptionItem\";\n\nconst ActiveDocumentOptionItem = ({ document }: { document: string }) => {\n\treturn (\n\t\t<Grid container direction=\"row\" justify=\"space-between\" alignItems=\"center\" spacing={1}>\n\t\t\t<Grid item>{document.replace(\".pdf\", \"\")}</Grid>\n\n\t\t\t<Grid item>\n\t\t\t\t<Card variant=\"outlined\">\n\t\t\t\t\t<DeleteDocumentButton document={document}></DeleteDocumentButton>\n\t\t\t\t</Card>\n\t\t\t</Grid>\n\t\t</Grid>\n\t);\n};\n\nexport const Options = () => {\n\tconst activeDocument = useSelector(display.selectors.getPDFName);\n\tconst documents = useSelector(db.selectors.getDocumentNames).filter((doc) => doc !== activeDocument);\n\n\tconst [anchorEl, setAnchorEl] = React.useState<null | HTMLElement>(null);\n\n\tconst handleClick = (event: React.MouseEvent<HTMLButtonElement>) => {\n\t\tsetAnchorEl(event.currentTarget);\n\t};\n\n\tconst handleClose = () => {\n\t\tsetAnchorEl(null);\n\t};\n\n\tconst dispatch = useDispatch();\n\n\tconst increment = incrementer();\n\n\treturn (\n\t\t<div>\n\t\t\t<IconButton type=\"button\" onClick={handleClick}>\n\t\t\t\t<MoreVertIcon></MoreVertIcon>\n\t\t\t</IconButton>\n\t\t\t<Menu\n\t\t\t\tid=\"simple-menu\"\n\t\t\t\tanchorEl={anchorEl}\n\t\t\t\tkeepMounted\n\t\t\t\topen={Boolean(anchorEl)}\n\t\t\t\tonClose={handleClose}\n\t\t\t\tMenuListProps={{ style: { paddingLeft: \"8px\", paddingRight: \"8px\" } }}\n\t\t\t>\n\t\t\t\t{activeDocument && [\n\t\t\t\t\t<Typography key={increment()} component={\"span\"} variant=\"h6\">\n\t\t\t\t\t\t{text.constants.activeDocumentText}\n\t\t\t\t\t</Typography>,\n\t\t\t\t\t<ActiveDocumentOptionItem key={increment()} document={activeDocument}></ActiveDocumentOptionItem>,\n\t\t\t\t\t<Divider key={increment()} style={{ marginTop: \"6px\" }}></Divider>,\n\t\t\t\t]}\n\t\t\t\t{documents.length > 0 && [\n\t\t\t\t\t<Typography key={increment()} component={\"span\"} variant=\"h6\">\n\t\t\t\t\t\t{text.constants.existingDataText}\n\t\t\t\t\t</Typography>,\n\t\t\t\t\t<Typography key={increment()} component={\"span\"}>\n\t\t\t\t\t\t<ul style={{ listStyleType: \"square\" }}>\n\t\t\t\t\t\t\t{documents.map((document) =>\n\t\t\t\t\t\t\t\tdocument ? (\n\t\t\t\t\t\t\t\t\t<li key={increment()}>\n\t\t\t\t\t\t\t\t\t\t<DocumentOptionItem document={document} key={increment()}></DocumentOptionItem>\n\t\t\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t\t\t) : null\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t</ul>\n\t\t\t\t\t</Typography>,\n\t\t\t\t\t<Divider key={increment()} style={{ marginTop: \"6px\" }} />,\n\t\t\t\t]}\n\t\t\t\t<InputDocument handleClose={handleClose} label={\"Load document\"}></InputDocument>\n\t\t\t\t<Divider />\n\t\t\t\t<MenuItem\n\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\tdispatch(downloadDBData());\n\t\t\t\t\t\thandleClose();\n\t\t\t\t\t}}\n\t\t\t\t>\n\t\t\t\t\t<Button variant=\"contained\" color=\"primary\" disableElevation startIcon={<GetAppIcon></GetAppIcon>}>\n\t\t\t\t\t\t{text.constants.downloadDatasetsText}\n\t\t\t\t\t</Button>\n\t\t\t\t</MenuItem>\n\t\t\t\t<Divider />\n\t\t\t\t<InputDataSets handleClose={handleClose} label={text.constants.uploadDatasetsText}></InputDataSets>\n\t\t\t</Menu>\n\t\t</div>\n\t);\n};\n","import React, { useState } from \"react\";\nimport SearchBar from \"material-ui-search-bar\";\nimport river from \"../../river\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Grid, Select } from \"@material-ui/core\";\nimport display from \"../../display\";\n\n//TODO-RC: counter of found words\n//TODO-RC: count also in PDF\n// PDFPageProxy\n// getTextContent\n// if not rendered\n// count via Proxy\n// if rendered count via CustomRenderer\n// two dicts to hold which one\n//TODO-RC: make window with next/last found\n\n//TODO-RC: make search for PDF (right now this would need some work to find the correct text-node and partially color it)\n// https://github.com/wojtekmaj/react-pdf/issues/212\n//TODO-RC: extract text properly\n\nexport const ClayMemorySearchBar = () => {\n\tconst dispatch = useDispatch();\n\n\tconst documentSearch = useSelector(display.selectors.getDocumentSearch);\n\n\tconst [state, setState] = useState(documentSearch);\n\n\tconst [searchFocus, setSearchFocus] = useState(\"document\");\n\n\tconst onChangeCards = (newValue: string) => {\n\t\t// auto-reset on empty\n\t\tif (newValue === \"\") dispatch(river.actions.resetContentFilter());\n\t\tsetState(newValue);\n\t};\n\tconst onCancelSearchCards = () => {\n\t\tdispatch(river.actions.resetContentFilter());\n\t};\n\tconst onRequestSearchCards = () => dispatch(river.actions.setContentFilter(state));\n\n\tconst onChangeDocument = (newValue: string) => {\n\t\t// auto-reset on empty\n\t\tif (newValue === \"\") dispatch(display.actions.resetDocumentSearch());\n\t\tsetState(newValue);\n\t};\n\tconst onCancelSearchDocument = () => {\n\t\tdispatch(display.actions.resetDocumentSearch());\n\t};\n\tconst onRequestSearchDocument = () => dispatch(display.actions.setDocumentSearch(state));\n\n\tconst onChange = searchFocus === \"cards\" ? onChangeCards : onChangeDocument;\n\tconst onCancelSearch = searchFocus === \"cards\" ? onCancelSearchCards : onCancelSearchDocument;\n\tconst onRequestSearch = searchFocus === \"cards\" ? onRequestSearchCards : onRequestSearchDocument;\n\n\tconst chooseFocus = (chosenFocus: string) => {\n\t\tsetSearchFocus(chosenFocus);\n\t\tif (chosenFocus === \"cards\") {\n\t\t\tonCancelSearchDocument();\n\t\t} else {\n\t\t\tonCancelSearchCards();\n\t\t}\n\t\tsetState(\"\");\n\t};\n\n\t//TODO-NICE: search in other rivers/same river when composing to show similar cards (like in the Anki Addon)\n\t//TODO-NICE: change the color / border or something to indicate when a filter is active\n\treturn (\n\t\t<Grid container direction=\"row\" alignItems=\"center\" spacing={1}>\n\t\t\t<Grid item>\n\t\t\t\t<Select\n\t\t\t\t\tvariant=\"outlined\"\n\t\t\t\t\tcolor=\"secondary\"\n\t\t\t\t\tnative\n\t\t\t\t\tvalue={searchFocus === \"cards\" ? \"Filter cards\" : \"Search document\"}\n\t\t\t\t\tonChange={(\n\t\t\t\t\t\tevent: React.ChangeEvent<{\n\t\t\t\t\t\t\tname?: string | undefined;\n\t\t\t\t\t\t\tvalue: unknown;\n\t\t\t\t\t\t}>\n\t\t\t\t\t) => {\n\t\t\t\t\t\tchooseFocus(event.target.value === \"Search document\" ? \"document\" : \"cards\");\n\t\t\t\t\t}}\n\t\t\t\t>\n\t\t\t\t\t<option>Filter cards</option>\n\t\t\t\t\t<option>Search document</option>\n\t\t\t\t</Select>\n\t\t\t</Grid>\n\t\t\t<Grid item>\n\t\t\t\t<SearchBar\n\t\t\t\t\tvalue={state}\n\t\t\t\t\tplaceholder={searchFocus === \"cards\" ? \"Filter cards\" : \"Search document\"}\n\t\t\t\t\tonChange={onChange}\n\t\t\t\t\tonCancelSearch={onCancelSearch}\n\t\t\t\t\tonRequestSearch={onRequestSearch}\n\t\t\t\t\tcancelOnEscape={true}\n\t\t\t\t/>\n\t\t\t</Grid>\n\t\t</Grid>\n\t);\n};\n","import React from \"react\";\nimport { IconButton, Card, Divider, Grid, Tooltip } from \"@material-ui/core\";\nimport { useDispatch } from \"react-redux\";\nimport UndoIcon from \"@material-ui/icons/Undo\";\nimport RedoIcon from \"@material-ui/icons/Redo\";\nimport { ActionCreators } from \"redux-undo\";\nimport text from \"../../text\";\n\n//TODO-NICE: disable undo/redo buttons if no undo/redo possible, tried custom hook but didnt work,\n// need to check all store-objects which have future/past because they have different undo/redo\n\n// we support undo/redo instead of lengthy confirmation (see The Humane Interface)\nconst UndoButton = () => {\n\tconst dispatch = useDispatch();\n\n\t//tooltip needs non-disabled child component\n\treturn (\n\t\t<Tooltip\n\t\t\ttitle={text.constants.undoTooltip}\n\t\t\tenterDelay={text.constants.defaultEnterDelay}\n\t\t\tenterNextDelay={text.constants.defaultEnterNextDelay}\n\t\t>\n\t\t\t<span>\n\t\t\t\t<IconButton\n\t\t\t\t\ttype=\"button\"\n\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\tdispatch(ActionCreators.undo());\n\t\t\t\t\t}}\n\t\t\t\t>\n\t\t\t\t\t<UndoIcon></UndoIcon>\n\t\t\t\t</IconButton>\n\t\t\t</span>\n\t\t</Tooltip>\n\t);\n};\nconst RedoButton = () => {\n\tconst dispatch = useDispatch();\n\treturn (\n\t\t<Tooltip\n\t\t\ttitle={text.constants.redoTooltip}\n\t\t\tenterDelay={text.constants.defaultEnterDelay}\n\t\t\tenterNextDelay={text.constants.defaultEnterNextDelay}\n\t\t>\n\t\t\t<IconButton\n\t\t\t\ttype=\"button\"\n\t\t\t\tonClick={() => {\n\t\t\t\t\tdispatch(ActionCreators.redo());\n\t\t\t\t}}\n\t\t\t>\n\t\t\t\t<RedoIcon></RedoIcon>\n\t\t\t</IconButton>\n\t\t</Tooltip>\n\t);\n};\n\nexport const UndoRedoCard = () => {\n\treturn (\n\t\t<Card variant=\"outlined\">\n\t\t\t<Grid container direction=\"row\">\n\t\t\t\t<Grid item>\n\t\t\t\t\t<UndoButton></UndoButton>\n\t\t\t\t</Grid>\n\t\t\t\t<Grid item>\n\t\t\t\t\t<Divider orientation=\"vertical\"></Divider>\n\t\t\t\t</Grid>\n\t\t\t\t<Grid item>\n\t\t\t\t\t<RedoButton></RedoButton>\n\t\t\t\t</Grid>\n\t\t\t</Grid>\n\t\t</Card>\n\t);\n};\n","import display from \"../../display\";\nimport river from \"../../river\";\nimport React from \"react\";\nimport { IconButton, Menu, FormControlLabel, Typography, Divider, Grid } from \"@material-ui/core\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport VisibilityIcon from \"@material-ui/icons/Visibility\";\nimport { GreenCheckbox } from \"../../../shared/GreenCheckbox\";\n\nconst ShowRiverCheckbox = () => {\n\tconst dispatch = useDispatch();\n\tconst riverShowState = useSelector(river.selectors.getRiverShowState);\n\n\treturn (\n\t\t<FormControlLabel\n\t\t\tcontrol={\n\t\t\t\t<GreenCheckbox\n\t\t\t\t\tchecked={riverShowState === \"SHOW\"}\n\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\tdispatch(river.actions.toggleRiverShowState());\n\t\t\t\t\t}}\n\t\t\t\t/>\n\t\t\t}\n\t\t\tlabel=\"River\"\n\t\t/>\n\t);\n};\n\nconst ShowMaterialCheckbox = () => {\n\tconst dispatch = useDispatch();\n\tconst displayShowState = useSelector(display.selectors.getDisplayStatus);\n\n\treturn (\n\t\t<FormControlLabel\n\t\t\tcontrol={\n\t\t\t\t<GreenCheckbox\n\t\t\t\t\tchecked={displayShowState === \"SHOW\"}\n\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\tdispatch(display.actions.toggleDisplayState());\n\t\t\t\t\t}}\n\t\t\t\t/>\n\t\t\t}\n\t\t\tlabel=\"Material\"\n\t\t/>\n\t);\n};\n\nexport const ShowHideButton = () => {\n\tconst [anchorEl, setAnchorEl] = React.useState<null | HTMLElement>(null);\n\n\tconst handleClick = (event: React.MouseEvent<HTMLButtonElement>) => {\n\t\tsetAnchorEl(event.currentTarget);\n\t};\n\n\tconst handleClose = () => {\n\t\tsetAnchorEl(null);\n\t};\n\n\treturn (\n\t\t<div>\n\t\t\t<IconButton type=\"button\" onClick={handleClick}>\n\t\t\t\t<VisibilityIcon></VisibilityIcon>\n\t\t\t</IconButton>\n\t\t\t<Menu anchorEl={anchorEl} keepMounted open={Boolean(anchorEl)} onClose={handleClose}>\n\t\t\t\t<Typography>Show:</Typography>\n\t\t\t\t<Divider></Divider>\n\t\t\t\t<Grid container direction=\"row\">\n\t\t\t\t\t<Grid item>\n\t\t\t\t\t\t<river.components.RiverContentFormGroup></river.components.RiverContentFormGroup>\n\t\t\t\t\t</Grid>\n\t\t\t\t\t<Grid item>\n\t\t\t\t\t\t<Divider orientation=\"vertical\"></Divider>\n\t\t\t\t\t</Grid>\n\t\t\t\t\t<Grid item>\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t<Grid container direction=\"column\">\n\t\t\t\t\t\t\t\t<Grid item>\n\t\t\t\t\t\t\t\t\t<ShowRiverCheckbox></ShowRiverCheckbox>\n\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t\t<Grid item>\n\t\t\t\t\t\t\t\t\t<ShowMaterialCheckbox></ShowMaterialCheckbox>\n\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t}\n\t\t\t\t\t</Grid>\n\t\t\t\t</Grid>\n\t\t\t</Menu>\n\t\t</div>\n\t);\n};\n","import display from \"../../display\";\nimport React from \"react\";\nimport { AppBar, Toolbar, Grid, Typography } from \"@material-ui/core\";\nimport { useSelector } from \"react-redux\";\nimport { Options } from \"./Options/Options\";\nimport { ClayMemorySearchBar } from \"./ClayMemorySearchBar\";\nimport { UndoRedoCard } from \"./UndoRedoButtons\";\nimport { ShowHideButton } from \"./ShowHideButton\";\n\n//TODO-NICE: download/load csv for Anki\nexport const ControlBar = () => {\n\tconst materialName = useSelector(display.selectors.getPDFName);\n\n\treturn (\n\t\t<display.components.PageKeyboardControl>\n\t\t\t<AppBar>\n\t\t\t\t<Toolbar variant=\"regular\">\n\t\t\t\t\t<Grid item>\n\t\t\t\t\t\t<Grid container spacing={1} direction=\"row\" alignItems=\"center\" justify=\"flex-start\">\n\t\t\t\t\t\t\t<Grid item style={{ width: \"20%\" }}>\n\t\t\t\t\t\t\t\t<display.components.PageChooser></display.components.PageChooser>\n\t\t\t\t\t\t\t</Grid>\n\n\t\t\t\t\t\t\t<Grid item>\n\t\t\t\t\t\t\t\t<display.components.PageNavigation></display.components.PageNavigation>\n\t\t\t\t\t\t\t</Grid>\n\n\t\t\t\t\t\t\t<Grid item>\n\t\t\t\t\t\t\t\t<UndoRedoCard></UndoRedoCard>\n\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t</Grid>\n\t\t\t\t\t</Grid>\n\n\t\t\t\t\t<Typography style={{ flexGrow: 1 }}>{materialName?.replace(\".pdf\", \"\")}</Typography>\n\t\t\t\t\t<Grid item>\n\t\t\t\t\t\t<ClayMemorySearchBar></ClayMemorySearchBar>\n\t\t\t\t\t</Grid>\n\t\t\t\t\t<ShowHideButton></ShowHideButton>\n\t\t\t\t\t<Options></Options>\n\t\t\t\t</Toolbar>\n\t\t\t</AppBar>\n\t\t</display.components.PageKeyboardControl>\n\t);\n};\n","import * as actions from \"./actions\";\nimport * as components from \"./components\";\nimport * as selectors from \"./selectors\";\n\nexport default { actions, components, selectors };\n","import React, { Fragment } from \"react\";\nimport Grid from \"@material-ui/core/Grid\";\nimport control from \"../modules/control\";\nimport { Toolbar } from \"@material-ui/core\";\nimport selection from \"../modules/selection\";\nimport display from \"../modules/display\";\n\nexport function ReaderScene() {\n\t//TODO-RC: these need to be set in the PDFDocument?\n\t//TODO-RC: think about hide mechanism\n\t// const showMaterial = useSelector(display.selectors.displayStatusIsShow);\n\t// const showRiver = useSelector(river.selectors.riverShowStateIsShow);\n\n\treturn (\n\t\t<Fragment>\n\t\t\t<display.components.WindowMeasurer></display.components.WindowMeasurer>\n\t\t\t<Grid container justify=\"center\" direction=\"column\" alignItems=\"stretch\" spacing={1}>\n\t\t\t\t<Grid item>\n\t\t\t\t\t<control.components.ControlBar></control.components.ControlBar>\n\t\t\t\t</Grid>\n\t\t\t\t{/* TODO-NICE: need this to keep the document from overlapping the AppBar, but why? */}\n\t\t\t\t<Toolbar id=\"back-to-top-anchor\" />\n\t\t\t\t<Grid item>\n\t\t\t\t\t<display.components.PDFDocument></display.components.PDFDocument>\n\t\t\t\t</Grid>\n\t\t\t</Grid>\n\t\t\t<selection.components.ContextMenu></selection.components.ContextMenu>\n\t\t\t<selection.components.SelectionSnackbar></selection.components.SelectionSnackbar>\n\t\t</Fragment>\n\t);\n}\n","import storage from \"redux-persist/lib/storage\"; // defaults to localStorage for web\nimport { createTransform } from \"redux-persist\";\nimport { DisplayData, DisplayStatus } from \"./modules/display/model\";\nimport display from \"./modules/display\";\nimport { SingleOrigin } from \"./modules/cards/model/origin\";\nimport { CardRiverState } from \"./modules/river/model\";\nimport river from \"./modules/river\";\n\n// to get the correct object with reselect, I added .present to all getAll that belong do undoable modules\n\n//TODO-NICE: find way to save PDF in browser, maybe manually use indexeddb and use that in transform?\n// idea: make store-field pdfAsBase64 and use thunk for async-filling the field, then when reloading, use thunk to format\n// const reader = new FileReaderSync();\n\n// function readFileAsync(file: File) {\n// \treturn new Promise((resolve) => {\n// \t\treader.onload = () => {\n// \t\t\tresolve(reader.result);\n// \t\t};\n// \t\treader.onerror = () => resolve(null);\n\n// \t\treader.readAsDataURL(file);\n// \t});\n// }\n\nconst removeDOMObjectsFromDisplayData = (inboundState: DisplayData) => {\n\tlet pdf = null;\n\t// if (inboundState.pdf) {\n\t// \tpdf = await readFileAsync(inboundState.pdf);\n\t// }\n\tconst result = { ...inboundState, documentRef: null, materialData: null, pdf };\n\treturn result;\n};\n\n//TODO-NICE: create persistable type for the state in model\n\nconst addDOMObjectsToDisplayData = (outboundState: {\n\tpdf: null;\n\tpdfName?: string;\n\tdisplayStatus: DisplayStatus;\n\tcurrentPage: number;\n\tscrollToPage: number | null;\n\ttotalPages: number;\n\twindowMeasurements: { width: number; height: number } | null;\n\tspanOrigin: null | SingleOrigin;\n\tdocumentSearch: string;\n}): DisplayData => {\n\treturn {\n\t\t...outboundState,\n\t\tpdf: undefined,\n\t\tspanOrigin: null,\n\t\twindowMeasurements: null,\n\t\tdocumentSearch: \"\",\n\t};\n};\n\nconst displayTransform = createTransform(\n\t(inboundState: DisplayData) => {\n\t\treturn removeDOMObjectsFromDisplayData(inboundState);\n\t},\n\t(outboundState): DisplayData => {\n\t\treturn addDOMObjectsToDisplayData(outboundState);\n\t},\n\t{ whitelist: [display.constants.NAME] }\n);\n\nconst removeContentFilter = (state: CardRiverState): CardRiverState => {\n\treturn { ...state, contentFilter: \"\" };\n};\n\nconst riverTransform = createTransform(\n\t(inboundState: { present: CardRiverState; future: CardRiverState[]; past: CardRiverState[] }) => {\n\t\treturn inboundState;\n\t},\n\t(outboundState): { present: CardRiverState; future: CardRiverState[]; past: CardRiverState[] } => {\n\t\treturn {\n\t\t\tpresent: removeContentFilter(outboundState.present),\n\t\t\tfuture: outboundState.future.map(removeContentFilter),\n\t\t\tpast: outboundState.past.map(removeContentFilter),\n\t\t};\n\t},\n\t{ whitelist: [river.constants.NAME] }\n);\n\nexport const persistConfig = {\n\tkey: \"root\",\n\tstorage,\n\ttransforms: [displayTransform, riverTransform],\n};\n","import { createStore } from \"redux\";\nimport { applyMiddleware } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport { combineReducers } from \"redux\";\nimport river from \"./modules/river\";\nimport display from \"./modules/display\";\nimport cards from \"./modules/cards\";\nimport { persistStore, persistReducer } from \"redux-persist\";\nimport undoable, { includeAction } from \"redux-undo\";\nimport { persistConfig } from \"./persist\";\nimport db from \"./modules/db\";\nimport selection from \"./modules/selection\";\nimport { composeWithDevTools } from \"redux-devtools-extension/logOnlyInProduction\";\n\n//TODO-NICE: make limit for undo (right now its fine, if we reset on document-upload / reload)\n//TODO-NICE: make snackbar for which action is undone/redone\n//TODO-NICE: this undo-buisness is not very transparent, I just list each action that is state-relevant and not view, make action list in constants.ts?\n\nconst rootReducer = combineReducers({\n\t[selection.constants.NAME]: undoable(selection.reducer, {\n\t\tfilter: includeAction([selection.actionTypes.SELECTION_GOAL, selection.actionTypes.SELECTION_SOURCE]),\n\t}),\n\t[river.constants.NAME]: undoable(river.reducer, {\n\t\tfilter: includeAction([\n\t\t\tcards.actionTypes.CARD_PUSH,\n\t\t\tcards.actionTypes.CARD_REMOVE,\n\t\t\tdb.actionTypes.LOAD_DOCUMENT_DATA_SETS,\n\t\t]),\n\t}),\n\t[display.constants.NAME]: display.reducer,\n\t[cards.constants.NAME]: undoable(cards.reducer, {\n\t\tfilter: includeAction([\n\t\t\tdb.actionTypes.LOAD_DOCUMENT_DATA_SETS,\n\t\t\tcards.actionTypes.CARD_PUSH,\n\t\t\tcards.actionTypes.CARD_REPLACE,\n\t\t\tcards.actionTypes.CARD_REMOVE,\n\t\t]),\n\t}),\n\t[db.constants.NAME]: undoable(db.reducer, {\n\t\tfilter: includeAction([db.actionTypes.LOAD_DOCUMENT_DATA_SETS]),\n\t}),\n});\n\nconst stateSanitizer = (state: any) => {\n\treturn state.displayData.pdf ? { ...state, displayData: { ...state.displayData, pdf: \"PDF_FILE_IS_HERE\" } } : state;\n};\n\nconst persistedReducer = persistReducer(persistConfig, rootReducer);\n\nconst composeEnhancers = composeWithDevTools({ stateSanitizer });\nconst enhancer = composeEnhancers(applyMiddleware(thunk));\n\nexport const store = createStore(persistedReducer, enhancer);\n\nexport const persistor = persistStore(store);\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { ReaderScene } from \"./scene/ReaderScene\";\nimport { Provider } from \"react-redux\";\nimport { store, persistor } from \"./store\";\nimport { PersistGate } from \"redux-persist/es/integration/react\";\n// Load Roboto typeface\nrequire(\"typeface-roboto\");\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<Provider store={store}>\n\t\t\t<PersistGate loading={null} persistor={persistor}>\n\t\t\t\t<ReaderScene></ReaderScene>\n\t\t\t</PersistGate>\n\t\t</Provider>\n\t</React.StrictMode>,\n\tdocument.getElementById(\"root\")\n);\n"],"sourceRoot":""}