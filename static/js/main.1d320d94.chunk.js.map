{"version":3,"sources":["shared/utils.ts","modules/cards/constants.ts","modules/cards/model/permutation.ts","modules/cards/model/content.ts","modules/cards/model/config.ts","modules/cards/selectors.ts","modules/text/constants.ts","modules/text/components/NewNoteCardTooltip.tsx","modules/text/components/AddQAButtonTooltip.tsx","modules/text/components/DeleteCardButtonTooltip.tsx","modules/text/components/UnhideCardsTooltip.tsx","modules/text/index.ts","modules/cards/slice.ts","modules/cards/components/AddNoteButton.tsx","modules/cards/components/AddQAButton.tsx","modules/cards/components/DeleteCardButton.tsx","modules/cards/model/origin.ts","modules/cards/index.ts","modules/river/constants.ts","modules/river/model.ts","modules/river/selectors.ts","shared/GreenCheckbox.tsx","modules/river/slice.ts","modules/river/components/RiverContentFormGroup.tsx","modules/selection/selectors.ts","modules/selection/services/use-selection.ts","modules/selection/model.ts","modules/selection/services/get-selection.ts","modules/selection/slice.ts","modules/selection/constants.ts","modules/selection/actions.ts","modules/selection/components/SelectionSnackbar.tsx","modules/selection/components/MaterialMouseUp.tsx","modules/selection/components/CardMouseUp.tsx","modules/selection/components/AppendButton.tsx","modules/selection/components/ContextMenu.tsx","modules/selection/components/ReplaceButton.tsx","modules/selection/index.ts","modules/river/components/CardRiver/Cards/ClayCardField.tsx","modules/river/components/CardRiver/Cards/JumpToOriginButton.tsx","modules/river/components/CardRiver/Cards/ClayCardFieldButtons.tsx","modules/river/components/CardRiver/Cards/QACard.tsx","modules/river/components/CardRiver/Cards/NoteCard.tsx","modules/river/components/CardRiver/Cards/ClayCard.tsx","modules/river/components/CardRiver/ClayCardGridItems.tsx","modules/river/services/filterCardConfigs.tsx","modules/river/components/CardRiver/UnhideCardsButton.tsx","modules/river/components/CardRiver/CardRiver.tsx","modules/river/components/SwitchActiveRiver.tsx","modules/river/components/ShowRiverCheckbox.tsx","modules/river/index.ts","modules/pdf/constants.ts","modules/pdf/selectors.ts","modules/pdf/slice.ts","modules/pdf/components/Origin/OriginMarkedSnackbar.tsx","modules/pdf/components/Navigation/PageChooser.tsx","modules/pdf/components/Navigation/PageKeyboardControl.tsx","modules/pdf/components/Document/PDFDocument.tsx","modules/pdf/components/Document/cachePageDimensions.tsx","modules/pdf/components/Origin/PageSpanControl.tsx","modules/pdf/components/Document/PDFPage.tsx","modules/display/model.ts","modules/pdf/components/ShowMaterialCheckbox.tsx","modules/pdf/components/Navigation/NavigationButtons.tsx","modules/pdf/index.ts","modules/db/selectors.ts","modules/db/slice.ts","modules/db/constants.ts","modules/db/actions.ts","modules/db/components/DownloadDBDataButton.tsx","modules/db/index.ts","modules/control/actions.ts","modules/display/constants.ts","modules/display/slice.ts","modules/display/components/HTMLElementMeasurer.tsx","modules/display/selectors.ts","modules/display/components/RiverMaterialPairList/RiverMaterialPair.tsx","modules/display/components/RiverMaterialPairList/ListScrollControl.tsx","modules/display/components/RiverMaterialPairList/RiverMaterialPairList.tsx","modules/display/components/Views/RiverExplorer.tsx","modules/display/components/Views/Display.tsx","modules/display/components/Views/ViewTabs.tsx","modules/display/index.ts","modules/control/components/Options/DeleteDocumentButton.tsx","modules/control/components/Options/InputDataSets.tsx","modules/control/components/Options/InputDocument.tsx","modules/control/components/Options/LoadDocumentDataButton.tsx","modules/control/components/Options/DocumentOptionItem.tsx","modules/control/components/Options/Options.tsx","modules/control/components/ClayMemorySearchBar.tsx","modules/control/components/UndoRedoButtons.tsx","modules/control/components/ShowHideButton.tsx","modules/control/components/ControlBar.tsx","modules/control/index.ts","scene/ReaderScene.tsx","persist.ts","store.ts","index.tsx"],"names":["keyMap","NAME","FieldValueAccessorMap","note","cardObject","q","a","toFieldValue","field","FieldValueModifierMap","modify","createReplace","inputValue","_","changeCardObject","spec","inputField","inputObject","createModify","modifyFieldValue","fieldToBeChanged","objectToBeChanged","emptyQAContent","EmptyContentMap","emptyContent","noteContentIsEmpty","content","qaContentIsNotFull","UpdateTypeCreateModifyMap","APPEND","oldValue","trim","REPLACE","updateTypeToCreateModify","updateType","strToCardContent","contentStr","outputField","existingContent","changeSpec","strToNewCardContent","empty","noteContentContainsStringOrEmpty","noteConfig","str","includes","qaContentContainsStringOrEmpty","qaConfig","cardIDToNumber","cardID","parseInt","nextCardID","lastCardIDNumber","toString","CardIsFullMap","Note","config","cardIsNotFull","type","strToCardConfig","baseCard","changedContent","CardFieldToTypeMap","cardFieldToType","emptyNote","emptyQA","getState","state","hasPast","createSelector","cardsState","past","length","hasFuture","future","getAll","present","getLastCardIDNumber","getNextCardID","getCards","cards","getCardByID","switchToActiveRiverTooltip","switchToSummaryRiverTooltip","undoTooltip","redoTooltip","nextPageTooltip","previousPageTooltip","deleteCardTooltip","jumpToOriginTooltip","ChoiceCardAsAppendGoal","AppendToCardTooltip","CardIsAppendGoalTooltip","ChoiceCardAsReplaceGoal","ReplaceCardTooltip","CardIsReplaceGoalTooltip","newQACardTooltip","newNoteCardTooltip","unhideCardsTooltip","deleteDocumentTooltip","loadSavedDocumentTooltip","noMaterialText","loadingMaterialText","activeDocumentText","existingDataText","loadMaterialText","downloadDatasetsText","uploadDatasetsText","noteText","questionText","answerText","defaultEnterDelay","defaultEnterNextDelay","NewNoteCardTooltip","children","Tooltip","title","enterDelay","enterNextDelay","AddQAButtonTooltip","DeleteCardButtonTooltip","UnhideCardsTooltip","components","constants","initialState","updateCardInCards","toBeUpdated","cardObj","cardsSlice","createSlice","name","reducers","cardPush","payload","cardReplace","cardFieldReplace","newValue","cardField","cardConfig","cardRemove","allCardsReplace","allCardsReset","actions","AddNoteButton","dispatch","useDispatch","nextID","useSelector","IconButton","onClick","AddQAButton","DeleteCardButton","fontSize","emptyQAOrigin","EmptyOriginMap","emptyOrigin","singleOriginToCardOrigin","singleOrigin","baseOrigin","reducer","slice","selectors","model","pageNumberToRiverMakeUpID","page","riverMakeUpIDToPageNumber","riverID","replace","emptyCardRiver","cardIDs","updateStateWithMakeUps","updatedState","makeUps","forEach","makeUp","riverMakeUps","removeCardFromRivers","Object","fromEntries","entries","map","entry","filter","id","getRiverMakeUps","getNonEmptyRiverIDs","keys","getNonEmptyRiverIDsSorted","ids","sort","b","getNonEmptyRiverMakeUpsSorted","values","getNonEmptyRiverCardsSorted","cardObjects","push","getActiveRiverMakeUpID","riverActiveID","getActiveRiverMakeUp","getActiveRiverCardIDs","getActiveRiverCards","makeUpCardIDs","getRiverShowState","riverShowState","riverShowStateIsShow","getRiverContentState","riverContentState","getRiverContentFilter","riverContentFilter","getOriginRequest","riverOriginRequest","GreenCheckbox","withStyles","root","color","green","checked","props","Checkbox","incrementer","counter","curCounter","simpleReducer","count_DONT_USE","riverCardReplace","riverSlice","riverUnhide","allRiversReset","allRiversReplace","extraReducers","riverMakeUp","RiverContentFormGroup","showQAs","showNotes","changeContentState","clickedState","FormGroup","FormControlLabel","control","label","getGoalConfig","goalConfig","getSourceConfig","sourceConfig","sourceConfigExists","selectionToCard","goalIsCreation","cardPayload","inputOrigin","contentOrigin","origin","undefined","selectionConfigToCardPayload","existingCard","selectionConfigToActualizedCardConfig","getSelectionWorkaround","selection","window","getSelection","activeElement","document","value","substring","selectionStart","selectionEnd","text","selStr","e","getSelectionSourceFromMaterial","selectionData","selectedParentStart","anchorNode","parentNode","selectedParentEnd","focusNode","nodeName","divTextLayerParent","spanChildren","Array","from","childNodes","startIndex","indexOf","endIndex","spanIndexStart","spanIndexEnd","materialSelectionDataToSourceConfig","selectionSource","selectionGoal","selectionSlice","resetSelectionSource","resetSelectionGoal","addSelectionSource","addMaterialSelectionSource","addCardSelectionSource","getSelectionSourceFromCard","addSelectionGoal","addCardAppendSelectionGoal","addCardReplaceSelectionGoal","SelectionSnackbar","useState","open","setOpen","handleDismiss","escPress","event","key","useEffect","addEventListener","removeEventListener","Snackbar","style","maxWidth","overflowX","anchorOrigin","vertical","horizontal","onClose","reason","preventDefault","message","Grid","container","direction","spacing","item","Card","variant","padding","backgroundColor","square","Typography","action","size","aria-label","MaterialMouseUp","onMouseUp","materialSelectionSourceAction","onMouseDown","button","CardFieldMouseUp","fieldOrigin","cardSelectionSourceAction","AppendButton","outlined","setOutlined","isGoal","ContextMenu","menuPosition","setMenuPosition","ref","useRef","shouldClose","useCallback","target","current","querySelector","contains","contextMenuContainsTargetNode","doesSourceConfigExists","shouldOpen","left","x","top","y","openState","Menu","keepMounted","anchorReference","anchorPosition","MenuItem","Divider","ReplaceButton","services","ClayCardField","storeValue","saveChanges","rest","mutableValue","setState","TextField","InputProps","disableUnderline","minWidth","multiline","onChange","submittedValue","onBlur","JumpToOriginButton","cardOrigin","ClayCardFieldButtons","permutation","originExists","Paper","QACard","elevation","justify","InputLabelProps","NoteCard","ClayCard","GridItemDivider","qaFilter","noteFilter","filterCardConfigs","inputCards","riverContentFilterStr","filters","reduce","f","combineFilterArr","UnhideCardsButton","CardRiver","materialHeight","cardConfigs","riverCards","filteredConfigs","gridItems","increment","prev","currentCard","index","arr","ClayCardGridItems","containsFilteredCards","Accordion","expanded","defaultExpanded","overflow","height","AccordionSummary","align","MozUserSelect","WebkitUserSelect","msUserSelect","AccordionDetails","alignItems","orientation","marginTop","SwitchActiveRiver","activeRiverID","onMouseEnter","ShowRiverCheckbox","curRiverShowState","Button","startIcon","MaterialMultiplier","getPDF","pdf","getPDFName","pdfName","getTotalPages","totalPages","getCurrentPage","currentPage","getScrollToPage","scrollToPage","getPageControlData","getPDFShowStatus","pdfShowStatus","getSpanOrigin","spanOrigin","getDocumentSearch","documentSearch","pageCorrections","newPage","pdfSlice","pdfUpload","pageUpdate","shouldScroll","nextPage","previousPage","existingDocumentPayload","OriginMarkedSnackbar","nonDigitRegEx","PageNumberTextField","error","userInput","inputProps","fontFamily","fontWeight","lineHeight","letterSpacing","onKeyDown","possiblePage","match","asInt","validatePageChoice","TotalPagesIndicator","PageChooser","width","pageControlKeyMap","ArrowLeft","ArrowRight","pageControlDispatcher","PageKeyboardControl","tabIndex","pdfjs","GlobalWorkerOptions","workerSrc","version","options","cMapUrl","cMapPacked","PDFDocument","ChildComponent","cachedPageDimensions","setPageDimensions","pdfProxyRef","pdfNameRef","loading","noData","file","renderMode","onLoadSuccess","pdfProxy","numPages","promises","i","pageNumber","getPage","Promise","all","then","pages","pageDimensions","Map","w","view","h","set","_pageIndex","cachePageDimensions","onItemClick","PageSpanControl","pageRef","count","trier","intervalID","setInterval","clearInterval","console","log","textLayer","originSpan","scrollIntoView","behavior","block","inline","makeOriginHighlighter","textItem","itemIndex","highlightOrigin","backgroundStyle","makeTextRenderer","searchText","pattern","textLength","patternLength","markedPattern","slice1","result","secondIndex","slice2Start","slice2","thirdIndex","slice3Start","slice3","stringRest","splitText","split","spliter","highlightPattern","View","PDFPage","materialWidth","originHighlighter","textRenderer","searchRenderer","originRenderer","combineRenderers","inputRef","instance","customTextRenderer","renderAnnotationLayer","ShowMaterialCheckbox","pdfShowState","PreviousButton","NextButton","PageNavigation","getDocumentNames","db","getDocumentDataSets","collectCurrentDBData","river","dbSlice","storeInDocumentDB","removeFromDocumentDB","updateDocumentDB","dbData","refreshDB","fileDownload","require","downloadDBData","documentDataSets","localString","Date","toLocaleString","JSON","stringify","DownloadDBDataButton","disableElevation","resetActiveAppState","ActionCreators","clearHistory","replaceActiveAppState","newDocumentData","currentPDFName","loadPDF","pdfFile","newPDFName","documentDB","loadSavedDocument","deleteActiveDocument","activeDocument","deleteDocument","windowMeasurements","topOffset","currentView","RiverMaterial","displaySlice","HTMLElementMeasurer","measure","debounce","htmlElement","documentElement","currentWidth","clientWidth","currentHeight","clientHeight","useLayoutEffect","getWindowMeasurements","getTopOffset","getCurrentView","RiverPairItem","RiverMaterialPair","data","materialHeights","showRiver","showMaterial","hidden","get","pairTopBottomPadding","ListScrollControl","listRef","scrollToItem","Resetter","resetAfterIndex","RiverMaterialPairList","windowWidth","pageDims","pixelPerUserSpaceUnit","calculateMaterialHeight","itemCount","itemSize","itemData","onItemsRendered","visibleStopIndex","ExplorerRiver","marginBottom","RiverExplorer","riverIDs","xs","Display","ViewTabs","Tabs","Tab","DeleteDocumentDialogAlert","handleClose","Dialog","aria-labelledby","aria-describedby","DialogTitle","DialogContent","DialogContentText","DialogActions","autoFocus","DeleteDocumentButton","InputDataSets","setFile","click","display","files","accept","LoadDataSetsDialogAlert","reader","FileReader","readAsText","onload","uploadedDataSets","parse","foundDataSet","find","InputDocument","LoadDocumentDataButton","DocumentOptionItemButtonRow","DocumentOptionItem","ActiveDocumentOptionItem","component","DocumentOptionList","documents","doc","listStyleType","Options","React","anchorEl","setAnchorEl","currentTarget","Boolean","MenuListProps","paddingLeft","paddingRight","ClayMemorySearchBar","contentString","searchFocus","onCancelSearchCards","onCancelSearchDocument","onCancelSearch","onRequestSearch","placeholder","cancelOnEscape","UndoButton","cardsHasPast","undo","disabled","RedoButton","cardsHasFuture","redo","UndoRedoCard","ShowHideButton","ControlBar","materialName","offset","currentBottom","getBoundingClientRect","bottom","AppBar","position","Toolbar","disableGutters","ReaderScene","pdfTransform","createTransform","inboundState","outboundState","whitelist","persistConfig","storage","transforms","undoableCardActions","rootReducer","combineReducers","undoable","includeAction","persistedReducer","persistReducer","enhancer","composeWithDevTools","composeEnhancers","applyMiddleware","thunk","store","createStore","persistor","persistStore","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.1d320d94.chunk.js","sourcesContent":["import { CaseReducer, PayloadAction } from \"@reduxjs/toolkit\";\nimport { KeyboardEvent } from \"react\";\n\nexport const incrementer = () => {\n\tlet counter = 0;\n\treturn () => {\n\t\tconst curCounter = counter;\n\t\tcounter++;\n\t\treturn curCounter;\n\t};\n};\n\nexport type KeyActionMap = { [key: string]: any };\n\ntype KeyEventDispatcher = (event: KeyboardEvent<Element>, dispatch: any, state?: any) => void;\n\nexport const keyEventDispatcherCreator = (keyMap: KeyActionMap): KeyEventDispatcher => (\n\tevent: KeyboardEvent,\n\tdispatch: any\n) => {\n\tconst action = keyMap[event.key];\n\tif (action) {\n\t\tevent.preventDefault();\n\t\tdispatch(action);\n\t}\n};\n\nexport type ClayMemoryAction = { type: string };\nexport type ClayMemoryPayloadAction = { type: string; payload: any };\n\nexport type Filter = (element: any) => boolean;\nexport const combineFilterArr = (filters: Filter[]) => (x: any) => filters.reduce((b, f) => b || f(x), false);\n\nexport type AnyPayloadCaseReducer = CaseReducer<any, PayloadAction<any>>;\nexport const simpleReducer = (field: string): AnyPayloadCaseReducer => (state: any, { payload }: any) => {\n\treturn { ...state, [field]: payload };\n};\n\nexport const simpleReducerMap = (fields: string[]) => {\n\tconst map: { [key: string]: AnyPayloadCaseReducer } = {};\n\tfor (let field of fields) {\n\t\tmap[field] = simpleReducer(field);\n\t}\n\treturn map;\n};\n","export const NAME = \"cards\";\n","import { CardField, QACardField } from \"./content\";\n\n// for origin and content the same object structure is used,\n// so same permutation api should be used\n\ntype NoteObject = NonNullable<any>;\ntype QAObject = { [key in QACardField]: NonNullable<any> };\ntype CardObject = NoteObject | QAObject;\n\nconst FieldValueAccessorMap: { [field in CardField]: (cardObject: CardObject) => any } = {\n\tnote: (cardObject) => cardObject,\n\tq: (cardObject) => (cardObject as QAObject).q,\n\ta: (cardObject) => (cardObject as QAObject).a,\n};\nexport const toFieldValue = (field: CardField, cardObject: CardObject) => FieldValueAccessorMap[field](cardObject);\n\ntype Modify = (oldValue: any) => any;\nconst FieldValueModifierMap: { [key in CardField]: (cardObject: CardObject, modify: Modify) => any } = {\n\tnote: (cardObject, modify) => modify(cardObject),\n\tq: (cardObject, modify) => {\n\t\treturn { ...(cardObject as QAObject), q: modify((cardObject as QAObject).q) };\n\t},\n\ta: (cardObject, modify) => {\n\t\treturn { ...(cardObject as QAObject), a: modify((cardObject as QAObject).a) };\n\t},\n};\nconst modifyFieldValue = (field: CardField, cardObject: CardObject, modify: Modify) =>\n\tFieldValueModifierMap[field](cardObject, modify);\n\nexport type CreateModify = (inputValue: any) => Modify;\n\n// this replace is generic, I dont put append here, because that is object specific\nexport const createReplace: CreateModify = (inputValue: any) => (_: any) => inputValue;\n\nexport type CardObjectChangeSpec = {\n\tinputField: CardField;\n\tinputObject: CardObject;\n\tfieldToBeChanged: CardField;\n\tobjectToBeChanged: CardObject;\n\tcreateModify: CreateModify;\n};\nexport const changeCardObject = (spec: CardObjectChangeSpec) => {\n\tconst inputValue = toFieldValue(spec.inputField, spec.inputObject);\n\tconst modify = spec.createModify(inputValue);\n\treturn modifyFieldValue(spec.fieldToBeChanged, spec.objectToBeChanged, modify);\n};\n","import { CreateModify, changeCardObject, createReplace } from \"./permutation\";\nimport { NoteConfig, QAConfig, UpdateType } from \"./config\";\n\nexport type QACardField = \"q\" | \"a\";\nexport type CardField = \"note\" | QACardField;\n\nexport type StringCardContent = string;\nexport type NoteCardContent = StringCardContent;\nexport type QACardContent = {\n\t[field in QACardField]: StringCardContent;\n};\nexport type CardContent = NoteCardContent | QACardContent;\n\ntype EmptyContent = { q: \"\"; a: \"\" } | \"\";\nconst emptyQAContent = (): EmptyContent => {\n\treturn { q: \"\", a: \"\" };\n};\nconst EmptyContentMap: { [field in CardField]: () => EmptyContent } = {\n\tq: emptyQAContent,\n\ta: emptyQAContent,\n\tnote: () => \"\",\n};\nexport const emptyContent = (field: CardField) => {\n\treturn EmptyContentMap[field]();\n};\n\nexport const noteContentIsEmpty = (content: string) => content === \"\";\nexport const qaContentIsNotFull = (content: QACardContent) =>\n\t(content as QACardContent).q === \"\" || (content as QACardContent).a === \"\";\n\nconst createAppendStr: CreateModify = (inputValue: string) => (oldValue: string) =>\n\t(oldValue + \" \" + inputValue).trim();\nconst UpdateTypeCreateModifyMap: { [updateType in UpdateType]: CreateModify } = {\n\tAPPEND: createAppendStr,\n\tREPLACE: createReplace,\n};\nconst updateTypeToCreateModify = (updateType: UpdateType) => UpdateTypeCreateModifyMap[updateType];\n\n// noteObjects are a single value like the selectedString, so we use them as a field for convenience\nconst inputField: CardField = \"note\";\n\nexport const strToCardContent = (\n\tcontentStr: string,\n\toutputField: CardField,\n\tupdateType: UpdateType,\n\texistingContent: CardContent\n): CardContent => {\n\tconst changeSpec = {\n\t\tinputObject: contentStr,\n\t\tinputField,\n\t\tfieldToBeChanged: outputField,\n\t\tobjectToBeChanged: existingContent,\n\t\tcreateModify: updateTypeToCreateModify(updateType),\n\t};\n\treturn changeCardObject(changeSpec);\n};\n\nexport const strToNewCardContent = (contentStr: string, outputField: CardField) => {\n\t// new is always empty and we replace the input in the empty shell\n\tconst empty = emptyContent(outputField);\n\treturn strToCardContent(contentStr, outputField, \"REPLACE\", empty);\n};\n\nexport const noteContentContainsStringOrEmpty = (noteConfig: NoteConfig, str: string) =>\n\tnoteConfig.content === \"\" || noteConfig.content.includes(str);\n\nexport const qaContentContainsStringOrEmpty = (qaConfig: QAConfig, str: string) =>\n\tqaConfig.content.a === \"\" ||\n\tqaConfig.content.q === \"\" ||\n\tqaConfig.content.a.includes(str) ||\n\tqaConfig.content.q.includes(str);\n","import { NoteOrigin, QAOrigin } from \"./origin\";\nimport {\n\tNoteCardContent,\n\tQACardContent,\n\tnoteContentIsEmpty,\n\tqaContentIsNotFull,\n\tstrToCardContent,\n\tCardField,\n} from \"./content\";\n\nexport type CardID = string;\nexport const cardIDToNumber = (cardID: CardID) => parseInt(cardID);\nexport const nextCardID = (lastCardIDNumber: number) => (lastCardIDNumber + 1).toString();\n\nexport type CardType = \"Note\" | \"Q-A\";\nexport type NoteConfig = { cardID: CardID; type: CardType; content: NoteCardContent; origin?: NoteOrigin };\nexport type QAConfig = { cardID: CardID; type: CardType; content: QACardContent; origin?: QAOrigin };\nexport type CardConfig = NoteConfig | QAConfig;\n\nconst CardIsFullMap: { [card in CardType]: (config: CardConfig) => boolean } = {\n\tNote: (config) => noteContentIsEmpty(config.content as NoteCardContent),\n\t\"Q-A\": (config) => qaContentIsNotFull(config.content as QACardContent),\n};\nexport const cardIsNotFull = (config: CardConfig) => CardIsFullMap[config.type](config);\n\nexport type UpdateType = \"REPLACE\" | \"APPEND\";\n\nexport const strToCardConfig = (\n\tcontentStr: string,\n\toutputField: CardField,\n\tupdateType: UpdateType,\n\tbaseCard: CardConfig\n): CardConfig => {\n\tconst changedContent = strToCardContent(contentStr, outputField, updateType, baseCard.content);\n\treturn { ...baseCard, content: changedContent } as CardConfig;\n};\n\nconst CardFieldToTypeMap: { [field in CardField]: CardType } = {\n\tq: \"Q-A\",\n\ta: \"Q-A\",\n\tnote: \"Note\",\n};\n\nexport const cardFieldToType = (field: CardField) => CardFieldToTypeMap[field];\n\nexport const emptyNote = (cardID: CardID): CardConfig => {\n\treturn { type: \"Note\", content: \"\", cardID };\n};\nexport const emptyQA = (cardID: CardID): CardConfig => {\n\treturn { type: \"Q-A\", content: { q: \"\", a: \"\" }, cardID };\n};\n\nexport type CardPayload = Omit<CardConfig, \"cardID\">;\n","import { createSelector } from \"reselect\";\nimport { CardsState } from \"./model/state\";\nimport { NAME } from \"./constants\";\nimport { nextCardID } from \"./model/config\";\n\nexport const getState = (state: any) => state[NAME];\nexport const hasPast = createSelector(getState, (cardsState: any) => cardsState.past.length > 0);\nexport const hasFuture = createSelector(getState, (cardsState: any) => cardsState.future.length > 0);\n\nexport const getAll = (state: any) => state[NAME].present;\n\nexport const getLastCardIDNumber = createSelector(getAll, (state) => state.lastCardIDNumber);\n\nexport const getNextCardID = createSelector(getLastCardIDNumber, nextCardID);\n\nexport const getCards = createSelector(getAll, (state: CardsState) => state.cards);\n\nexport const getCardByID = (state: any, cardID: string) => getCards(state)[cardID];\n","/// Tooltip-Text\n\nexport const switchToActiveRiverTooltip = \"Switch to the Active-River view\";\nexport const switchToSummaryRiverTooltip = \"Switch to the Summary-River view\";\n\nexport const undoTooltip = \"Undo last action\";\nexport const redoTooltip = \"Redo last action\";\n\nexport const nextPageTooltip = \"Next page\";\nexport const previousPageTooltip = \"Previous page\";\n\nexport const deleteCardTooltip = \"Delete this card\";\nexport const jumpToOriginTooltip = \"Jump to the origin of the card content\";\n\nexport const ChoiceCardAsAppendGoal = \"Mark this card field as the goal of the next selection\";\nexport const AppendToCardTooltip = \"Add the current selection to this card field\";\nexport const CardIsAppendGoalTooltip = \"The next selection will be added to this card field (click to unselect)\";\n\nexport const ChoiceCardAsReplaceGoal = \"Mark this card field to be replaced by the next selection\";\nexport const ReplaceCardTooltip = \"Replace this card field with the current selection\";\nexport const CardIsReplaceGoalTooltip = \"The next selection will replace this card field (click to unselect)\";\n\nexport const newQACardTooltip = \"Create new QA-card\";\nexport const newNoteCardTooltip = \"Create new Note-card\";\nexport const unhideCardsTooltip = \"This river contains hidden cards. Click to show.\";\n\nexport const deleteDocumentTooltip = \"Delete this document and all its corresponding cards\";\nexport const loadSavedDocumentTooltip = \"Load the card data of this document\";\n\n/// Text\n\nexport const noMaterialText = \"No PDF file specified.\";\nexport const loadingMaterialText = \"Loading PDF…\";\n\nexport const activeDocumentText = \"Active Document:\";\nexport const existingDataText = \"Inactive documents with existing data:\";\nexport const loadMaterialText = \"Load document\";\nexport const downloadDatasetsText = \"Download document datasets\";\nexport const uploadDatasetsText = \"Upload document datasets\";\n\nexport const noteText = \"Note\";\nexport const questionText = \"Question\";\nexport const answerText = \"Answer\";\n\n/// Delay\n\nexport const defaultEnterDelay = 500;\nexport const defaultEnterNextDelay = 1000;\n","import React, { ReactElement } from \"react\";\nimport { Tooltip } from \"@material-ui/core\";\nimport { newNoteCardTooltip, defaultEnterDelay, defaultEnterNextDelay } from \"../constants\";\n\nexport const NewNoteCardTooltip = ({ children }: { children: ReactElement }) => {\n\treturn (\n\t\t<Tooltip title={newNoteCardTooltip} enterDelay={defaultEnterDelay} enterNextDelay={defaultEnterNextDelay}>\n\t\t\t{children}\n\t\t</Tooltip>\n\t);\n};\n","import React, { ReactElement } from \"react\";\nimport { Tooltip } from \"@material-ui/core\";\nimport { defaultEnterDelay, defaultEnterNextDelay, newQACardTooltip } from \"../constants\";\n\nexport const AddQAButtonTooltip = ({ children }: { children: ReactElement }) => {\n\treturn (\n\t\t<Tooltip title={newQACardTooltip} enterDelay={defaultEnterDelay} enterNextDelay={defaultEnterNextDelay}>\n\t\t\t{children}\n\t\t</Tooltip>\n\t);\n};\n","import React, { ReactElement } from \"react\";\nimport { Tooltip } from \"@material-ui/core\";\nimport { defaultEnterDelay, defaultEnterNextDelay, deleteCardTooltip } from \"../constants\";\n\nexport const DeleteCardButtonTooltip = ({ children }: { children: ReactElement }) => {\n\treturn (\n\t\t<Tooltip title={deleteCardTooltip} enterDelay={defaultEnterDelay} enterNextDelay={defaultEnterNextDelay}>\n\t\t\t{children}\n\t\t</Tooltip>\n\t);\n};\n","import React, { ReactElement } from \"react\";\nimport { Tooltip } from \"@material-ui/core\";\nimport { defaultEnterDelay, defaultEnterNextDelay, unhideCardsTooltip } from \"../constants\";\n\nexport const UnhideCardsTooltip = ({ children }: { children: ReactElement }) => {\n\treturn (\n\t\t<Tooltip title={unhideCardsTooltip} enterDelay={defaultEnterDelay} enterNextDelay={defaultEnterNextDelay}>\n\t\t\t{children}\n\t\t</Tooltip>\n\t);\n};\n","import * as components from \"./components\";\nimport * as constants from \"./constants\";\n\nexport default { components, constants };\n","import { CardConfig, CardID, cardIDToNumber, strToCardConfig } from \"./model/config\";\nimport { Cards, CardsState } from \"./model/state\";\nimport { CaseReducer, createSlice, PayloadAction } from \"@reduxjs/toolkit\";\nimport { NAME } from \"./constants\";\nimport { CardField } from \"./model/content\";\n\nconst initialState: CardsState = {\n\tcards: {},\n\tlastCardIDNumber: 0,\n};\n\nconst updateCardInCards = (cards: Cards, toBeUpdated: CardConfig) => {\n\tconst cardObj = { ...cards };\n\tcardObj[toBeUpdated.cardID] = toBeUpdated;\n\treturn cardObj;\n};\n\nconst cardPush: CaseReducer<CardsState, PayloadAction<CardConfig>> = (state, { payload }) => {\n\treturn {\n\t\t...state,\n\t\tcards: updateCardInCards(state.cards, payload),\n\t\tlastCardIDNumber: cardIDToNumber(payload.cardID) + 1,\n\t};\n};\n\nconst cardReplace: CaseReducer<CardsState, PayloadAction<CardConfig>> = (state, { payload }) => {\n\treturn { ...state, cards: updateCardInCards(state.cards, payload) };\n};\n\nconst cardFieldReplace: CaseReducer<\n\tCardsState,\n\tPayloadAction<{ cardField: CardField; cardConfig: CardConfig; newValue: string }>\n> = (state, { payload }) => {\n\treturn {\n\t\t...state,\n\t\tcards: updateCardInCards(\n\t\t\tstate.cards,\n\t\t\tstrToCardConfig(payload.newValue, payload.cardField, \"REPLACE\", payload.cardConfig)\n\t\t),\n\t};\n};\n\nconst cardRemove: CaseReducer<CardsState, PayloadAction<CardID>> = (state, { payload }) => {\n\tconst cards = { ...state.cards };\n\n\t// we do not reset the ID counter\n\tdelete cards[payload];\n\n\treturn { ...state, cards };\n};\n\nconst allCardsReplace: CaseReducer<CardsState, PayloadAction<CardsState>> = (_, { payload }) => {\n\treturn payload;\n};\n\nconst allCardsReset: CaseReducer<CardsState> = () => {\n\treturn initialState;\n};\n\nconst cardsSlice = createSlice({\n\tname: NAME,\n\tinitialState,\n\treducers: {\n\t\tcardPush,\n\t\tcardReplace,\n\t\tcardFieldReplace,\n\t\tcardRemove,\n\t\tallCardsReplace,\n\t\tallCardsReset,\n\t},\n});\n\nexport const { actions } = cardsSlice;\n\nexport default cardsSlice;\n","import FeaturedVideoIcon from \"@material-ui/icons/FeaturedVideo\";\nimport React from \"react\";\nimport { IconButton } from \"@material-ui/core\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport text from \"../../text\";\nimport { getNextCardID } from \"../selectors\";\nimport { emptyNote } from \"../model/config\";\nimport { actions } from \"../slice\";\n\nexport const AddNoteButton = () => {\n\tconst dispatch = useDispatch();\n\tconst nextID = useSelector(getNextCardID);\n\treturn (\n\t\t<text.components.NewNoteCardTooltip>\n\t\t\t<IconButton\n\t\t\t\ttype=\"button\"\n\t\t\t\tonClick={() => {\n\t\t\t\t\tdispatch(actions.cardPush(emptyNote(nextID)));\n\t\t\t\t}}\n\t\t\t>\n\t\t\t\t<FeaturedVideoIcon></FeaturedVideoIcon>\n\t\t\t</IconButton>\n\t\t</text.components.NewNoteCardTooltip>\n\t);\n};\n","import FeaturedPlayListIcon from \"@material-ui/icons/FeaturedPlayList\";\nimport React from \"react\";\nimport { IconButton } from \"@material-ui/core\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport text from \"../../text\";\nimport { getNextCardID } from \"../selectors\";\nimport { emptyQA } from \"../model/config\";\nimport { actions } from \"../slice\";\n\nexport const AddQAButton = () => {\n\tconst dispatch = useDispatch();\n\tconst nextID = useSelector(getNextCardID);\n\n\treturn (\n\t\t<text.components.AddQAButtonTooltip>\n\t\t\t<IconButton\n\t\t\t\ttype=\"button\"\n\t\t\t\tonClick={() => {\n\t\t\t\t\tdispatch(actions.cardPush(emptyQA(nextID)));\n\t\t\t\t}}\n\t\t\t>\n\t\t\t\t<FeaturedPlayListIcon></FeaturedPlayListIcon>\n\t\t\t</IconButton>\n\t\t</text.components.AddQAButtonTooltip>\n\t);\n};\n","import DeleteForeverIcon from \"@material-ui/icons/DeleteForever\";\nimport React from \"react\";\nimport { IconButton } from \"@material-ui/core\";\nimport { useDispatch } from \"react-redux\";\nimport { CardID } from \"../model/config\";\nimport text from \"../../text\";\nimport { actions } from \"../slice\";\n\nexport const DeleteCardButton = ({ cardID }: { cardID: CardID }) => {\n\tconst dispatch = useDispatch();\n\treturn (\n\t\t<text.components.DeleteCardButtonTooltip>\n\t\t\t<IconButton\n\t\t\t\ttype=\"button\"\n\t\t\t\tonClick={() => {\n\t\t\t\t\tdispatch(actions.cardRemove(cardID));\n\t\t\t\t}}\n\t\t\t>\n\t\t\t\t<DeleteForeverIcon fontSize=\"small\"></DeleteForeverIcon>\n\t\t\t</IconButton>\n\t\t</text.components.DeleteCardButtonTooltip>\n\t);\n};\n","import { CardField } from \"./content\";\nimport { createReplace, changeCardObject } from \"./permutation\";\n\nexport type SingleOrigin = { spanIndexStart: number; spanIndexEnd: number; page: number };\nexport type QOnlyQAOrigin = { q: SingleOrigin; a: {} };\nexport type AOnlyQAOrigin = { q: {}; a: SingleOrigin };\nexport type PartialQAOrigin = QOnlyQAOrigin | AOnlyQAOrigin;\nconst emptyQAOrigin = () => {\n\treturn { q: {}, a: {} };\n};\ntype EmptyOrigin = { q: {}; a: {} } | \"\";\nconst EmptyOriginMap: { [field in CardField]: () => EmptyOrigin } = {\n\tq: emptyQAOrigin,\n\ta: emptyQAOrigin,\n\tnote: () => \"\",\n};\nexport const emptyOrigin = (field: CardField) => {\n\treturn EmptyOriginMap[field]();\n};\ntype FullQAOrigin = { q: SingleOrigin; a: SingleOrigin };\nexport type QAOrigin = FullQAOrigin | PartialQAOrigin;\nexport type NoteOrigin = SingleOrigin;\nexport type CardOrigin = NoteOrigin | QAOrigin;\n\nexport const singleOriginToCardOrigin = (\n\tsingleOrigin: SingleOrigin,\n\toutputField: CardField,\n\tbaseOrigin?: CardOrigin\n): CardOrigin => {\n\tconst changeSpec = {\n\t\tinputObject: singleOrigin,\n\t\tinputField: \"note\" as CardField,\n\t\tfieldToBeChanged: outputField,\n\t\tobjectToBeChanged: baseOrigin ? baseOrigin : emptyOrigin(outputField),\n\t\tcreateModify: createReplace,\n\t};\n\n\treturn changeCardObject(changeSpec);\n};\n","import * as constants from \"./constants\";\nimport * as selectors from \"./selectors\";\nimport * as components from \"./components\";\nimport * as model from \"./model\";\nimport slice from \"./slice\";\n\nconst { reducer, actions, name } = slice;\n\nexport default { constants, actions, reducer, name, selectors, components, model };\n","export const NAME = \"cardRiverState\";\n","import { CardID } from \"../cards/model/config\";\nimport { SingleOrigin } from \"../cards/model/origin\";\n\nexport type RiverMakeUp = { riverID: string; cardIDs: CardID[] };\n\nexport type RiverMakeUps = { [riverID: string]: RiverMakeUp };\n\nexport type RiverShowState = \"SHOW\" | \"HIDE\";\n\nexport type RiverContentState = \"ALL\" | \"NOTES\" | \"QAS\" | \"NONE\";\n\nexport type ContentFilter = string;\n\nexport type CardRiverState = {\n\t// works by first setting it here via button\n\t// then we scroll to the page\n\t// then we set the origin in the display-store\n\t// then we scroll to origin\n\t// all happens in the display module\n\t// move this somehow to display?\n\t// problem is that we depend on the display components (list-ref)\n\t// for scrolling\n\triverOriginRequest: SingleOrigin | null;\n\triverMakeUps: RiverMakeUps;\n\triverActiveID: string;\n\t// show/hide river\n\triverShowState: RiverShowState;\n\t// filter content\n\triverContentState: RiverContentState;\n\triverContentFilter: ContentFilter | \"\";\n\tcount_DONT_USE: number;\n};\n\nexport const pageNumberToRiverMakeUpID = (page: number) => \"CardRiver \" + page;\n\nexport const riverMakeUpIDToPageNumber = (riverID: string) => parseInt(riverID.replace(\"CardRiver \", \"\"));\n\nexport const emptyCardRiver = (page: number): RiverMakeUp => {\n\treturn {\n\t\triverID: pageNumberToRiverMakeUpID(page),\n\t\tcardIDs: [],\n\t};\n};\n\nexport const updateStateWithMakeUps = (state: CardRiverState, ...makeUps: RiverMakeUp[]) => {\n\tconst updatedState = { ...state };\n\tmakeUps.forEach((makeUp) => {\n\t\tupdatedState.riverMakeUps[makeUp.riverID] = makeUp;\n\t});\n\treturn updatedState;\n};\n\nexport const removeCardFromRivers = (state: CardRiverState, cardID: CardID): CardRiverState => {\n\tconst riverMakeUps = Object.fromEntries(\n\t\tObject.entries(state.riverMakeUps)\n\t\t\t.map((entry) => [entry[0], { ...entry[1], cardIDs: entry[1].cardIDs.filter((id) => id !== cardID) }])\n\t\t\t.filter((entry) => (entry[1] as RiverMakeUp).cardIDs.length !== 0)\n\t);\n\treturn { ...state, riverMakeUps };\n};\n\n//TODO: make option to not show card instead of delete\n// make nice small option in river to hide / show hidden cards (default: hide)\n","import { NAME } from \"./constants\";\nimport { createSelector } from \"reselect\";\nimport { CardRiverState, riverMakeUpIDToPageNumber } from \"./model\";\nimport cards from \"../cards\";\nimport { CardID } from \"../cards/model/config\";\n\nexport const getAll = (state: any): CardRiverState => state[NAME].present;\n\nexport const getRiverMakeUps = createSelector(getAll, (state: CardRiverState) => state.riverMakeUps);\n\nexport const getNonEmptyRiverIDs = createSelector(getRiverMakeUps, (makeUps) => Object.keys(makeUps));\n\nexport const getNonEmptyRiverIDsSorted = createSelector(getNonEmptyRiverIDs, (ids) =>\n\tids.sort((a, b) => riverMakeUpIDToPageNumber(a) - riverMakeUpIDToPageNumber(b))\n);\n\nexport const getNonEmptyRiverMakeUpsSorted = createSelector(getRiverMakeUps, (makeUps) =>\n\tObject.values(makeUps).sort((a, b) => riverMakeUpIDToPageNumber(a.riverID) - riverMakeUpIDToPageNumber(b.riverID))\n);\n\nexport const getNonEmptyRiverCardsSorted = createSelector(\n\tgetNonEmptyRiverMakeUpsSorted,\n\tcards.selectors.getCards,\n\t(makeUps, cards) => {\n\t\tconst cardObjects = [];\n\t\tfor (const makeUp of makeUps) {\n\t\t\tfor (const id of makeUp.cardIDs) {\n\t\t\t\tcardObjects.push(cards[id]);\n\t\t\t}\n\t\t}\n\n\t\treturn cardObjects;\n\t}\n);\n\nexport const getActiveRiverMakeUpID = createSelector(getAll, (state: CardRiverState) => state.riverActiveID);\n\nexport const getActiveRiverMakeUp = createSelector(getRiverMakeUps, getActiveRiverMakeUpID, (makeUps, id) => {\n\tconst makeUp = makeUps[id];\n\treturn makeUp ? makeUp : { cardIDs: [] };\n});\n\nexport const getActiveRiverCardIDs = createSelector(getActiveRiverMakeUp, (makeUp): CardID[] => makeUp.cardIDs);\n\nexport const getActiveRiverCards = createSelector(\n\tgetActiveRiverCardIDs,\n\tcards.selectors.getCards,\n\t(makeUpCardIDs, cards) => makeUpCardIDs.map((id) => cards[id])\n);\n\nexport const getRiverShowState = createSelector(getAll, (state: CardRiverState) => state.riverShowState);\n\nexport const riverShowStateIsShow = createSelector(getRiverShowState, (state) => state === \"SHOW\");\n\nexport const getRiverContentState = createSelector(getAll, (state: CardRiverState) => state.riverContentState);\n\nexport const getRiverContentFilter = createSelector(getAll, (state: CardRiverState) => state.riverContentFilter);\n\nexport const getOriginRequest = createSelector(getAll, (state) => state.riverOriginRequest);\n","import { withStyles, CheckboxProps, Checkbox } from \"@material-ui/core\";\nimport React from \"react\";\nimport { green } from \"@material-ui/core/colors\";\nexport const GreenCheckbox = withStyles({\n\troot: {\n\t\tcolor: green[400],\n\t\t\"&$checked\": {\n\t\t\tcolor: green[600],\n\t\t},\n\t},\n\tchecked: {},\n})((props: CheckboxProps) => <Checkbox color=\"default\" {...props} />);\n","import {\n\tCardRiverState,\n\tRiverShowState,\n\tpageNumberToRiverMakeUpID,\n\tRiverContentState,\n\tremoveCardFromRivers,\n\tRiverMakeUps,\n} from \"./model\";\nimport { CardConfig } from \"../cards/model/config\";\nimport cards from \"../cards\";\nimport { CaseReducer, createSlice, PayloadAction } from \"@reduxjs/toolkit\";\nimport { NAME } from \"./constants\";\nimport { SingleOrigin } from \"../cards/model/origin\";\nimport { simpleReducer } from \"../../shared/utils\";\n\nconst initialState: CardRiverState = {\n\triverOriginRequest: null,\n\triverMakeUps: {},\n\triverActiveID: pageNumberToRiverMakeUpID(1),\n\triverShowState: \"SHOW\",\n\triverContentState: \"ALL\",\n\triverContentFilter: \"\",\n\tcount_DONT_USE: 0,\n};\n\nconst riverActiveID: CaseReducer<CardRiverState, PayloadAction<string>> = simpleReducer(\"riverActiveID\");\nconst riverShowState: CaseReducer<CardRiverState, PayloadAction<RiverShowState>> = simpleReducer(\"riverShowState\");\nconst riverContentState: CaseReducer<CardRiverState, PayloadAction<RiverContentState>> = simpleReducer(\n\t\"riverContentState\"\n);\nconst riverContentFilter: CaseReducer<CardRiverState, PayloadAction<string>> = simpleReducer(\"riverContentFilter\");\nconst riverOriginRequest: CaseReducer<CardRiverState, PayloadAction<SingleOrigin | null>> = simpleReducer(\n\t\"riverOriginRequest\"\n);\n\nconst riverUnhide: CaseReducer<CardRiverState> = (state) => {\n\treturn { ...state, riverContentState: \"ALL\", riverContentFilter: \"\" };\n};\n\nconst allRiversReset: CaseReducer<CardRiverState> = (_) => {\n\treturn initialState;\n};\n\nconst allRiversReplace: CaseReducer<CardRiverState, PayloadAction<RiverMakeUps>> = (_, { payload }) => {\n\treturn {\n\t\t...initialState,\n\t\triverMakeUps: payload as RiverMakeUps,\n\t};\n};\n\nconst riverCardPush: CaseReducer<CardRiverState, PayloadAction<CardConfig>> = (state, { payload }) => {\n\tlet riverMakeUp;\n\tlet riverMakeUps;\n\t// make this unchained\n\t// then make clean up action?\n\tif (state.riverMakeUps[state.riverActiveID]) {\n\t\triverMakeUp = {\n\t\t\t...state.riverMakeUps[state.riverActiveID],\n\t\t\tcardIDs: [...state.riverMakeUps[state.riverActiveID].cardIDs, (payload as CardConfig).cardID],\n\t\t};\n\t} else {\n\t\t// create new river\n\t\triverMakeUp = {\n\t\t\triverID: state.riverActiveID,\n\t\t\tcardIDs: [(payload as CardConfig).cardID],\n\t\t};\n\t}\n\triverMakeUps = { ...state.riverMakeUps };\n\triverMakeUps[state.riverActiveID] = riverMakeUp;\n\n\treturn { ...state, riverMakeUps: riverMakeUps, count_DONT_USE: 0 };\n};\n\nconst riverCardRemove: CaseReducer<CardRiverState, PayloadAction<string>> = (state, { payload }) => {\n\treturn { ...removeCardFromRivers(state, payload), count_DONT_USE: 0 };\n};\n\nconst riverCardReplace: CaseReducer<CardRiverState> = (state) => {\n\t// a new state is necessary for the undo/redo to be able to sync river and cards\n\t// by resetting this to 0 via the other card-action, we avoid a (unlikely) too high number\n\treturn { ...state, count_DONT_USE: state.count_DONT_USE + 1 };\n};\n\nconst riverSlice = createSlice({\n\tname: NAME,\n\tinitialState,\n\treducers: {\n\t\triverActiveID,\n\t\triverShowState,\n\t\triverContentState,\n\t\triverContentFilter,\n\t\triverOriginRequest,\n\t\triverUnhide,\n\t\tallRiversReset,\n\t\tallRiversReplace,\n\t},\n\textraReducers: {\n\t\t[cards.actions.cardPush.type]: riverCardPush,\n\t\t[cards.actions.cardRemove.type]: riverCardRemove,\n\t\t[cards.actions.cardReplace.type]: riverCardReplace,\n\t\t[cards.actions.cardFieldReplace.type]: riverCardReplace,\n\t},\n});\n\nexport const { actions } = riverSlice;\n\nexport default riverSlice;\n","import { FormGroup, FormControlLabel } from \"@material-ui/core\";\nimport React from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { getRiverContentState } from \"../selectors\";\nimport { RiverContentState } from \"../model\";\nimport { GreenCheckbox } from \"../../../shared/GreenCheckbox\";\nimport { actions } from \"../slice\";\n\nexport const RiverContentFormGroup = () => {\n\tconst riverContentState = useSelector(getRiverContentState);\n\tconst dispatch = useDispatch();\n\n\tconst showQAs = riverContentState === \"ALL\" || riverContentState === \"QAS\";\n\tconst showNotes = riverContentState === \"ALL\" || riverContentState === \"NOTES\";\n\n\tconst changeContentState = (clickedState: RiverContentState) => {\n\t\tif (!showQAs && clickedState === \"QAS\") {\n\t\t\tif (showNotes) {\n\t\t\t\tdispatch(actions.riverContentState(\"ALL\"));\n\t\t\t} else {\n\t\t\t\tdispatch(actions.riverContentState(\"QAS\"));\n\t\t\t}\n\t\t\treturn;\n\t\t}\n\n\t\tif (!showNotes && clickedState === \"NOTES\") {\n\t\t\tif (showQAs) {\n\t\t\t\tdispatch(actions.riverContentState(\"ALL\"));\n\t\t\t} else {\n\t\t\t\tdispatch(actions.riverContentState(\"NOTES\"));\n\t\t\t}\n\t\t\treturn;\n\t\t}\n\n\t\tif (showQAs && clickedState === \"QAS\") {\n\t\t\tif (!showNotes) {\n\t\t\t\tdispatch(actions.riverContentState(\"NONE\"));\n\t\t\t} else {\n\t\t\t\tdispatch(actions.riverContentState(\"NOTES\"));\n\t\t\t}\n\t\t\treturn;\n\t\t}\n\n\t\tif (showNotes && clickedState === \"NOTES\") {\n\t\t\tif (!showQAs) {\n\t\t\t\tdispatch(actions.riverContentState(\"NONE\"));\n\t\t\t} else {\n\t\t\t\tdispatch(actions.riverContentState(\"QAS\"));\n\t\t\t}\n\t\t\treturn;\n\t\t}\n\t};\n\n\treturn (\n\t\t<FormGroup>\n\t\t\t<FormControlLabel\n\t\t\t\tcontrol={\n\t\t\t\t\t<GreenCheckbox\n\t\t\t\t\t\tchecked={showQAs}\n\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\tchangeContentState(\"QAS\");\n\t\t\t\t\t\t}}\n\t\t\t\t\t/>\n\t\t\t\t}\n\t\t\t\tlabel=\"QAs\"\n\t\t\t/>\n\t\t\t<FormControlLabel\n\t\t\t\tcontrol={\n\t\t\t\t\t<GreenCheckbox\n\t\t\t\t\t\tchecked={showNotes}\n\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\tchangeContentState(\"NOTES\");\n\t\t\t\t\t\t}}\n\t\t\t\t\t/>\n\t\t\t\t}\n\t\t\t\tlabel=\"Notes\"\n\t\t\t/>\n\t\t</FormGroup>\n\t);\n};\n","import { NAME } from \"./constants\";\nimport { createSelector } from \"reselect\";\nimport { SelectionData } from \"./model\";\n\nexport const getAll = (state: any): SelectionData => state[NAME];\n\nexport const getGoalConfig = createSelector(getAll, (state) => state.goalConfig);\nexport const getSourceConfig = createSelector(getAll, (state) => state.sourceConfig);\n\nexport const sourceConfigExists = createSelector(getSourceConfig, (config) => !!config);\n","import { CardConfig, CardPayload } from \"../../cards/model/config\";\nimport cards from \"../../cards\";\nimport { SelectionGoalConfig, SelectionSourceConfig, goalIsCreation, SelectionExistingCardGoalConfig } from \"../model\";\nimport { getNextCardID } from \"../../cards/selectors\";\n\nconst selectionConfigToCardPayload = (sourceConfig: SelectionSourceConfig, goalConfig: SelectionGoalConfig) => {\n\tconst inputOrigin = sourceConfig.contentOrigin;\n\tconst inputValue = sourceConfig.contentStr;\n\n\tconst outputField = goalConfig.cardField;\n\n\treturn {\n\t\ttype: cards.model.config.cardFieldToType(outputField),\n\t\tcontent: cards.model.content.strToNewCardContent(inputValue, outputField),\n\t\torigin: inputOrigin ? cards.model.origin.singleOriginToCardOrigin(inputOrigin, outputField) : undefined,\n\t};\n};\n\nconst selectionConfigToActualizedCardConfig = (\n\tsourceConfig: SelectionSourceConfig,\n\tgoalConfig: SelectionExistingCardGoalConfig,\n\tstate: any\n): CardConfig => {\n\tconst existingCard = cards.selectors.getCardByID(state, goalConfig.cardID);\n\n\tconst inputOrigin = sourceConfig.contentOrigin;\n\tconst inputValue = sourceConfig.contentStr;\n\n\tconst outputField = goalConfig.cardField;\n\n\treturn {\n\t\t...existingCard,\n\t\tcontent: cards.model.content.strToCardContent(inputValue, outputField, goalConfig.updateType, existingCard.content),\n\t\torigin: inputOrigin\n\t\t\t? cards.model.origin.singleOriginToCardOrigin(inputOrigin, outputField, existingCard.origin)\n\t\t\t: existingCard.origin,\n\t} as CardConfig;\n};\n\nexport const selectionToCard = (\n\tsourceConfig: SelectionSourceConfig,\n\tgoalConfig: SelectionGoalConfig,\n\tdispatch: any,\n\tstate: any\n) => {\n\tconst isCreation = goalIsCreation(goalConfig);\n\tif (isCreation) {\n\t\tconst cardPayload: CardPayload = selectionConfigToCardPayload(sourceConfig, goalConfig);\n\t\tconst nextID = getNextCardID(state);\n\t\tdispatch(cards.actions.cardPush({ ...cardPayload, cardID: nextID } as CardConfig));\n\t} else {\n\t\tconst cardConfig = selectionConfigToActualizedCardConfig(\n\t\t\tsourceConfig,\n\t\t\tgoalConfig as SelectionExistingCardGoalConfig,\n\t\t\tstate\n\t\t);\n\t\tdispatch(cards.actions.cardReplace(cardConfig));\n\t}\n};\n","import { SingleOrigin } from \"../cards/model/origin\";\nimport { CardField } from \"../cards/model/content\";\nimport { CardID, UpdateType } from \"../cards/model/config\";\n\nexport type SelectionSourceConfig = { contentStr: string; contentOrigin?: SingleOrigin };\n\nexport type CardFieldIdentifier = { cardID: CardID; cardField: CardField };\nexport type SelectionExistingCardGoalConfig = CardFieldIdentifier & { updateType: UpdateType };\nexport type SelectionGoalConfig = SelectionExistingCardGoalConfig | { cardField: CardField };\nexport const goalIsCreation = (goalConfig: SelectionGoalConfig) => {\n\t// each existing card has an ID\n\tconst idExists = !!(goalConfig as CardFieldIdentifier).cardID;\n\treturn !idExists;\n};\n\n// Selection is made up of two parts: selecting a source and selecting a goal\n// If both are done, then a Card needs to be created or updated\n// By clarifying this concept, I was able to reduce the selection code and make it more composable\n// See: AppendButton can be used before or after selecting a source without any extra code\n// This shows that a correct conceptualisation of the problem domain operations is the most important\n// thing in programming (note to self :))\n\nexport type SelectionData = {\n\tsourceConfig: SelectionSourceConfig | null;\n\tgoalConfig: SelectionGoalConfig | null;\n};\n","import { SelectionSourceConfig } from \"../model\";\nimport { SingleOrigin } from \"../../cards/model/origin\";\n\ntype SelectionData = { text: string; selection: Selection };\n\nexport const getSelectionWorkaround = (): SelectionData | null => {\n\tconst selection = window.getSelection();\n\n\tif (!selection) return null;\n\n\ttry {\n\t\tvar activeElement = document.activeElement;\n\t\tif (activeElement && (activeElement as HTMLInputElement).value) {\n\t\t\t// firefox bug https://bugzilla.mozilla.org/show_bug.cgi?id=85686\n\t\t\tconst str = (activeElement as HTMLInputElement).value.substring(\n\t\t\t\t(activeElement as HTMLInputElement).selectionStart as number,\n\t\t\t\t(activeElement as HTMLInputElement).selectionEnd as number\n\t\t\t);\n\n\t\t\tif (str === \"\") return null;\n\n\t\t\treturn { text: str, selection };\n\t\t} else {\n\t\t\tconst selStr = selection.toString();\n\n\t\t\tif (selStr === \"\") return null;\n\n\t\t\treturn { text: selStr, selection };\n\t\t}\n\t} catch (e) {\n\t\treturn null;\n\t}\n};\n\nconst materialSelectionDataToSourceConfig = (\n\tselectionData: SelectionData,\n\tpage: number\n): SelectionSourceConfig | false => {\n\t//TODO: think about race-conditions for the delayed rendering, this might mess up the index\n\t//TODO: this also depends on the rendering order of the spans to be the same, might not be a good idea\n\t//TODO: maybe can do this async if it gets more complex?\n\n\tconst selection = selectionData.selection;\n\tlet selectedParentStart = selection.anchorNode?.parentNode as Node | null;\n\tlet selectedParentEnd = selection.focusNode?.parentNode as Node | null;\n\n\tif (!selectedParentStart || !selectedParentEnd) {\n\t\treturn false;\n\t}\n\n\tif (selectedParentStart.nodeName === \"MARK\") {\n\t\tselectedParentStart = selectedParentStart.parentNode;\n\t\tif (!selectedParentStart) return false;\n\t}\n\n\tif (selectedParentEnd.nodeName === \"MARK\") {\n\t\tselectedParentEnd = selectedParentEnd.parentNode;\n\t\tif (!selectedParentEnd) return false;\n\t}\n\n\tif (selectedParentStart.nodeName !== \"SPAN\" || selectedParentEnd.nodeName !== \"SPAN\") return false;\n\n\tconst divTextLayerParent = selectedParentStart.parentNode;\n\tif (!!!divTextLayerParent || divTextLayerParent.nodeName !== \"DIV\") return false;\n\n\tconst spanChildren = Array.from(divTextLayerParent.childNodes) as Node[];\n\tif (spanChildren.length === 0) return false;\n\n\tconst startIndex = spanChildren.indexOf(selectedParentStart);\n\tconst endIndex = spanChildren.indexOf(selectedParentEnd);\n\tif (startIndex === -1 || endIndex === -1) return false;\n\n\treturn {\n\t\tcontentStr: selectionData.text,\n\t\tcontentOrigin: { spanIndexStart: startIndex, spanIndexEnd: endIndex, page },\n\t};\n};\n\nexport const getSelectionSourceFromMaterial = (page: number): SelectionSourceConfig | false => {\n\tconst selectionData = getSelectionWorkaround();\n\tif (!selectionData) return false;\n\n\treturn materialSelectionDataToSourceConfig(selectionData, page);\n};\n\nexport const getSelectionSourceFromCard = (contentOrigin?: SingleOrigin): SelectionSourceConfig | false => {\n\tconst selectionData = getSelectionWorkaround();\n\tif (!selectionData) return false;\n\n\treturn { contentStr: selectionData.text, contentOrigin };\n};\n","import { CaseReducer, createSlice, PayloadAction } from \"@reduxjs/toolkit\";\nimport { simpleReducer } from \"../../shared/utils\";\nimport { NAME } from \"./constants\";\nimport { SelectionData, SelectionGoalConfig, SelectionSourceConfig } from \"./model\";\n\nconst initialState: SelectionData = {\n\tsourceConfig: null,\n\tgoalConfig: null,\n};\n\nconst selectionSource: CaseReducer<SelectionData, PayloadAction<SelectionSourceConfig | null>> = simpleReducer(\n\t\"sourceConfig\"\n);\nconst selectionGoal: CaseReducer<SelectionData, PayloadAction<SelectionGoalConfig | null>> = simpleReducer(\n\t\"goalConfig\"\n);\n\nconst selectionSlice = createSlice({\n\tname: NAME,\n\tinitialState,\n\treducers: {\n\t\tselectionSource,\n\t\tselectionGoal,\n\t},\n});\n\nexport const { actions } = selectionSlice;\n\nexport default selectionSlice;\n","export const NAME = \"selectionData\";\n","import { SingleOrigin } from \"../cards/model/origin\";\nimport { SelectionSourceConfig, SelectionGoalConfig, SelectionExistingCardGoalConfig } from \"./model\";\nimport { Dispatch } from \"redux\";\nimport { getGoalConfig, getSourceConfig } from \"./selectors\";\nimport { selectionToCard } from \"./services/use-selection\";\nimport { getSelectionSourceFromMaterial, getSelectionSourceFromCard } from \"./services/get-selection\";\nimport { CardID } from \"../cards/model/config\";\nimport { CardField } from \"../cards/model/content\";\nimport { actions } from \"./slice\";\n\nconst selectionSource = actions.selectionSource;\nexport const resetSelectionSource = () => selectionSource(null);\nconst selectionGoal = actions.selectionGoal;\nexport const resetSelectionGoal = () => selectionGoal(null);\n\n// we want to support either direction, first adding Goal or first adding Source\nexport const addSelectionSource = (config: SelectionSourceConfig) => {\n\treturn (dispatch: Dispatch, getState: Function) => {\n\t\tconst state = getState();\n\t\tconst goalConfig = getGoalConfig(state);\n\t\tif (!goalConfig) {\n\t\t\tdispatch(selectionSource(config));\n\t\t\treturn;\n\t\t}\n\t\tselectionToCard(config, goalConfig as SelectionGoalConfig, dispatch, state);\n\t\tdispatch(resetSelectionGoal());\n\t};\n};\n\nexport const addMaterialSelectionSource = (page: number) => {\n\tconst sourceConfig = getSelectionSourceFromMaterial(page);\n\tif (sourceConfig) {\n\t\treturn addSelectionSource(sourceConfig);\n\t}\n\treturn false;\n};\n\nexport const addCardSelectionSource = (contentOrigin?: SingleOrigin) => {\n\tconst sourceConfig = getSelectionSourceFromCard(contentOrigin);\n\tif (sourceConfig) {\n\t\treturn addSelectionSource(sourceConfig);\n\t}\n\treturn false;\n};\n\nexport const addSelectionGoal = (config: SelectionGoalConfig) => {\n\treturn (dispatch: Dispatch, getState: Function) => {\n\t\tconst state = getState();\n\t\tconst sourceConfig = getSourceConfig(state);\n\t\tif (!sourceConfig) {\n\t\t\tdispatch(selectionGoal(config));\n\t\t\treturn;\n\t\t}\n\t\tselectionToCard(sourceConfig as SelectionSourceConfig, config, dispatch, state);\n\t\tdispatch(resetSelectionSource());\n\t};\n};\n\nexport const addCardAppendSelectionGoal = (cardID: CardID, cardField: CardField) => {\n\tconst config: SelectionExistingCardGoalConfig = { cardID, cardField, updateType: \"APPEND\" };\n\treturn addSelectionGoal(config);\n};\n\nexport const addCardReplaceSelectionGoal = (cardID: CardID, cardField: CardField) => {\n\tconst config: SelectionExistingCardGoalConfig = { cardID, cardField, updateType: \"REPLACE\" };\n\treturn addSelectionGoal(config);\n};\n","import React, { useState, useEffect } from \"react\";\nimport { Snackbar, IconButton, Typography, Card, Grid } from \"@material-ui/core\";\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { resetSelectionSource } from \"../actions\";\nimport { getSourceConfig } from \"../selectors\";\n\nexport const SelectionSnackbar = () => {\n\tconst [open, setOpen] = useState(false);\n\tconst dispatch = useDispatch();\n\tconst sourceConfig = useSelector(getSourceConfig);\n\n\tif (!!!sourceConfig && open) setOpen(false);\n\n\tif (!!sourceConfig && !open) setOpen(true);\n\n\tconst handleClose = (event: any, reason: string) => {\n\t\tif (reason === \"clickaway\") {\n\t\t\t// do not close on clickaway\n\t\t\tevent.preventDefault();\n\t\t} else {\n\t\t\tsetOpen(false);\n\t\t\tdispatch(resetSelectionSource());\n\t\t}\n\t};\n\n\tconst handleDismiss = () => {\n\t\tsetOpen(false);\n\t\tdispatch(resetSelectionSource());\n\t};\n\n\tconst escPress = (event: KeyboardEvent) => {\n\t\tif (open && (event.key === \"Escape\" || event.key === \"Esc\")) {\n\t\t\thandleDismiss();\n\t\t}\n\t};\n\n\tuseEffect(() => {\n\t\tdocument.addEventListener(\"keydown\", escPress);\n\t\treturn () => {\n\t\t\tdocument.removeEventListener(\"keydown\", escPress);\n\t\t};\n\t});\n\n\treturn (\n\t\t<Snackbar\n\t\t\tstyle={{ maxWidth: \"400px\", overflowX: \"auto\" }}\n\t\t\tanchorOrigin={{ vertical: \"top\", horizontal: \"center\" }}\n\t\t\topen={open}\n\t\t\tonClose={handleClose}\n\t\t\tmessage={\n\t\t\t\t<Grid container direction=\"row\" spacing={1}>\n\t\t\t\t\t<Grid item>\n\t\t\t\t\t\t<Card\n\t\t\t\t\t\t\tvariant=\"outlined\"\n\t\t\t\t\t\t\tcolor=\"secondary\"\n\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\tpadding: \"4px\",\n\t\t\t\t\t\t\t\tcolor: \"white\",\n\t\t\t\t\t\t\t\tbackgroundColor: \"#3f51b5\",\n\t\t\t\t\t\t\t\tmaxWidth: \"400px\",\n\t\t\t\t\t\t\t\toverflowX: \"auto\",\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\tsquare={true}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<Typography variant=\"h4\">{\"Selection:\"}</Typography>\n\t\t\t\t\t\t</Card>\n\n\t\t\t\t\t\t<Card variant=\"outlined\" style={{ padding: \"4px\", color: \"black\", backgroundColor: \"white\" }} square={true}>\n\t\t\t\t\t\t\t<Typography variant=\"body1\">{sourceConfig?.contentStr}</Typography>\n\t\t\t\t\t\t</Card>\n\t\t\t\t\t</Grid>\n\n\t\t\t\t\t{sourceConfig?.contentOrigin && (\n\t\t\t\t\t\t<Grid item>\n\t\t\t\t\t\t\t<Card\n\t\t\t\t\t\t\t\tvariant=\"outlined\"\n\t\t\t\t\t\t\t\tcolor=\"secondary\"\n\t\t\t\t\t\t\t\tstyle={{ padding: \"4px\", color: \"black\", backgroundColor: \"white\" }}\n\t\t\t\t\t\t\t\tsquare={true}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<Typography variant=\"h4\">{\"Origin:\"}</Typography>\n\t\t\t\t\t\t\t</Card>\n\n\t\t\t\t\t\t\t<Card\n\t\t\t\t\t\t\t\tvariant=\"outlined\"\n\t\t\t\t\t\t\t\tstyle={{ padding: \"4px\", color: \"white\", backgroundColor: \"#3f51b5\" }}\n\t\t\t\t\t\t\t\tsquare={true}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<Typography variant=\"body1\">Page {sourceConfig.contentOrigin.page}</Typography>\n\t\t\t\t\t\t\t</Card>\n\t\t\t\t\t\t</Grid>\n\t\t\t\t\t)}\n\t\t\t\t</Grid>\n\t\t\t}\n\t\t\taction={\n\t\t\t\t<IconButton size=\"small\" aria-label=\"close\" color=\"inherit\" onClick={handleDismiss}>\n\t\t\t\t\t<CloseIcon fontSize=\"small\" />\n\t\t\t\t</IconButton>\n\t\t\t}\n\t\t/>\n\t);\n};\n","import React, { ReactNode } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { addMaterialSelectionSource } from \"../actions\";\n\n// should only be used once material/pdf exists\nexport const MaterialMouseUp = ({ children, page }: { children: ReactNode; page: number }) => {\n\tconst dispatch = useDispatch();\n\n\treturn (\n\t\t<span\n\t\t\tonMouseUp={() => {\n\t\t\t\tconst materialSelectionSourceAction = addMaterialSelectionSource(page);\n\t\t\t\tif (materialSelectionSourceAction) dispatch(materialSelectionSourceAction);\n\t\t\t}}\n\t\t\tonMouseDown={(event: React.MouseEvent<any>) => {\n\t\t\t\t// without this it is possible so have something selected\n\t\t\t\t// close the selection-snackbar\n\t\t\t\t// it stays selected (only on click inside text it woud de-select)\n\t\t\t\t// then press the mouse and\n\t\t\t\t// the selection-snackbar pops back up\n\t\t\t\t// even though it is not a new selection just the old one\n\t\t\t\tif (event.button === 0) window.getSelection()?.empty();\n\t\t\t}}\n\t\t>\n\t\t\t{children}\n\t\t</span>\n\t);\n};\n","import React, { ReactNode } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { addCardSelectionSource } from \"../actions\";\nimport { SingleOrigin } from \"../../cards/model/origin\";\n\nexport const CardFieldMouseUp = ({ children, fieldOrigin }: { children: ReactNode; fieldOrigin?: SingleOrigin }) => {\n\tconst dispatch = useDispatch();\n\n\treturn (\n\t\t<span\n\t\t\tonMouseUp={() => {\n\t\t\t\tconst cardSelectionSourceAction = addCardSelectionSource(fieldOrigin);\n\t\t\t\tif (cardSelectionSourceAction) dispatch(cardSelectionSourceAction);\n\t\t\t}}\n\t\t>\n\t\t\t{children}\n\t\t</span>\n\t);\n};\n","import AddCircleOutlineIcon from \"@material-ui/icons/AddCircleOutline\";\nimport AddCircleOutlinedIcon from \"@material-ui/icons/AddCircleOutlined\";\nimport React, { useState } from \"react\";\nimport { IconButton, Tooltip } from \"@material-ui/core\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport text from \"../../text\";\nimport { getGoalConfig, getSourceConfig } from \"../selectors\";\nimport { addCardAppendSelectionGoal, resetSelectionGoal } from \"../actions\";\nimport { SelectionExistingCardGoalConfig, CardFieldIdentifier } from \"../model\";\nimport { CardField } from \"../../cards/model/content\";\n\nexport const AppendButton = ({ cardField, cardID }: { cardField: CardField; cardID: string }) => {\n\tconst dispatch = useDispatch();\n\n\tconst sourceConfig = useSelector(getSourceConfig);\n\tconst goalConfig = useSelector(getGoalConfig);\n\t// outlined means this is the goal\n\tconst [outlined, setOutlined] = useState(false);\n\n\tconst isGoal =\n\t\t!!goalConfig &&\n\t\t!!(goalConfig as CardFieldIdentifier).cardID &&\n\t\t(goalConfig as CardFieldIdentifier).cardID === cardID &&\n\t\tgoalConfig.cardField === cardField &&\n\t\t(goalConfig as SelectionExistingCardGoalConfig).updateType === \"APPEND\";\n\n\tif (isGoal) {\n\t\tif (!outlined) setOutlined(true);\n\t} else {\n\t\tif (outlined) setOutlined(false);\n\t}\n\t//TODO: test all variations of origin  (setting/copying) again (how to automate the test?)\n\n\treturn (\n\t\t<Tooltip\n\t\t\ttitle={\n\t\t\t\tisGoal\n\t\t\t\t\t? text.constants.CardIsAppendGoalTooltip\n\t\t\t\t\t: !!sourceConfig\n\t\t\t\t\t? text.constants.AppendToCardTooltip\n\t\t\t\t\t: text.constants.ChoiceCardAsAppendGoal\n\t\t\t}\n\t\t\tenterDelay={text.constants.defaultEnterDelay}\n\t\t\tenterNextDelay={text.constants.defaultEnterNextDelay}\n\t\t>\n\t\t\t<IconButton\n\t\t\t\ttype=\"button\"\n\t\t\t\tonClick={() => {\n\t\t\t\t\tif (!outlined && !!!goalConfig) {\n\t\t\t\t\t\tdispatch(addCardAppendSelectionGoal(cardID, cardField));\n\t\t\t\t\t} else if (isGoal) {\n\t\t\t\t\t\tdispatch(resetSelectionGoal());\n\t\t\t\t\t}\n\t\t\t\t}}\n\t\t\t>\n\t\t\t\t{outlined ? (\n\t\t\t\t\t<AddCircleOutlinedIcon fontSize=\"small\"></AddCircleOutlinedIcon>\n\t\t\t\t) : (\n\t\t\t\t\t<AddCircleOutlineIcon fontSize=\"small\"></AddCircleOutlineIcon>\n\t\t\t\t)}\n\t\t\t</IconButton>\n\t\t</Tooltip>\n\t);\n};\n","import React, { RefObject, useCallback, useEffect, useRef, useState } from \"react\";\nimport Menu from \"@material-ui/core/Menu\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Divider, MenuItem } from \"@material-ui/core\";\nimport { addSelectionGoal } from \"../actions\";\nimport { sourceConfigExists } from \"../selectors\";\n\n// the root div for the menu invisibly covers the whole screen\n// the actual div that is visible is this\nconst baseContextMenuSelector = \"div.MuiPaper-root\";\nconst contextMenuContainsTargetNode = (ref: RefObject<null | HTMLDivElement>, event: MouseEvent) => {\n\tconst target = event.target as Node;\n\tif (ref.current?.querySelector(baseContextMenuSelector)?.contains(target)) return true;\n\treturn false;\n};\n\nexport const ContextMenu = () => {\n\tconst [menuPosition, setMenuPosition] = useState<undefined | { top: number; left: number }>(undefined);\n\tconst ref = useRef(null);\n\n\tconst shouldClose = useCallback(\n\t\t(event: MouseEvent) => {\n\t\t\tconst clickOutSideOfMenu = !contextMenuContainsTargetNode(ref, event);\n\t\t\tif (clickOutSideOfMenu) {\n\t\t\t\tsetMenuPosition(undefined);\n\t\t\t}\n\t\t},\n\t\t[ref, setMenuPosition]\n\t);\n\tuseEffect(() => {\n\t\tdocument.addEventListener(\"mousedown\", shouldClose);\n\t\treturn () => {\n\t\t\tdocument.removeEventListener(\"mousedown\", shouldClose);\n\t\t};\n\t}, [shouldClose]);\n\n\tconst doesSourceConfigExists = useSelector(sourceConfigExists);\n\tconst shouldOpen = useCallback(\n\t\t(event: MouseEvent) => {\n\t\t\tif (!doesSourceConfigExists) return;\n\n\t\t\tevent.preventDefault();\n\n\t\t\tsetMenuPosition({ left: event.x, top: event.y });\n\t\t},\n\t\t[doesSourceConfigExists, setMenuPosition]\n\t);\n\tuseEffect(() => {\n\t\tdocument.addEventListener(\"contextmenu\", shouldOpen);\n\t\treturn () => {\n\t\t\tdocument.removeEventListener(\"contextmenu\", shouldOpen);\n\t\t};\n\t}, [shouldOpen]);\n\n\tconst openState = !!menuPosition;\n\n\tconst dispatch = useDispatch();\n\n\treturn (\n\t\t<Menu ref={ref} keepMounted open={openState} anchorReference=\"anchorPosition\" anchorPosition={menuPosition}>\n\t\t\t<MenuItem\n\t\t\t\tonClick={() => {\n\t\t\t\t\tdispatch(addSelectionGoal({ cardField: \"note\", updateType: \"REPLACE\" }));\n\t\t\t\t\tsetMenuPosition(undefined);\n\t\t\t\t}}\n\t\t\t>\n\t\t\t\tNew: Note\n\t\t\t</MenuItem>\n\n\t\t\t<Divider></Divider>\n\t\t\t<MenuItem\n\t\t\t\tonClick={() => {\n\t\t\t\t\tdispatch(addSelectionGoal({ cardField: \"q\", updateType: \"REPLACE\" }));\n\t\t\t\t\tsetMenuPosition(undefined);\n\t\t\t\t}}\n\t\t\t>\n\t\t\t\tNew: Q (Q-A)\n\t\t\t</MenuItem>\n\t\t\t<MenuItem\n\t\t\t\tonClick={() => {\n\t\t\t\t\tdispatch(addSelectionGoal({ cardField: \"a\", updateType: \"REPLACE\" }));\n\t\t\t\t\tsetMenuPosition(undefined);\n\t\t\t\t}}\n\t\t\t>\n\t\t\t\tNew: A (Q-A)\n\t\t\t</MenuItem>\n\t\t</Menu>\n\t);\n};\n\n//TODO: delete extracted str in source\n","import RestorePageIcon from \"@material-ui/icons/RestorePage\";\nimport RestorePageOutlinedIcon from \"@material-ui/icons/RestorePageOutlined\";\nimport React, { useState } from \"react\";\nimport { IconButton, Tooltip } from \"@material-ui/core\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport text from \"../../text\";\nimport { getGoalConfig, getSourceConfig } from \"../selectors\";\nimport { addCardReplaceSelectionGoal, resetSelectionGoal } from \"../actions\";\nimport { SelectionExistingCardGoalConfig, CardFieldIdentifier } from \"../model\";\nimport { CardField } from \"../../cards/model/content\";\n\nexport const ReplaceButton = ({ cardField, cardID }: { cardField: CardField; cardID: string }) => {\n\tconst dispatch = useDispatch();\n\n\tconst sourceConfig = useSelector(getSourceConfig);\n\tconst goalConfig = useSelector(getGoalConfig);\n\t// outlined means this is the goal\n\tconst [outlined, setOutlined] = useState(false);\n\n\tconst isGoal =\n\t\t!!goalConfig &&\n\t\t!!(goalConfig as CardFieldIdentifier).cardID &&\n\t\t(goalConfig as CardFieldIdentifier).cardID === cardID &&\n\t\tgoalConfig.cardField === cardField &&\n\t\t(goalConfig as SelectionExistingCardGoalConfig).updateType === \"REPLACE\";\n\n\tif (isGoal) {\n\t\tif (!outlined) setOutlined(true);\n\t} else {\n\t\tif (outlined) setOutlined(false);\n\t}\n\n\treturn (\n\t\t<Tooltip\n\t\t\ttitle={\n\t\t\t\tisGoal\n\t\t\t\t\t? text.constants.CardIsReplaceGoalTooltip\n\t\t\t\t\t: !!sourceConfig\n\t\t\t\t\t? text.constants.ReplaceCardTooltip\n\t\t\t\t\t: text.constants.ChoiceCardAsReplaceGoal\n\t\t\t}\n\t\t\tenterDelay={text.constants.defaultEnterDelay}\n\t\t\tenterNextDelay={text.constants.defaultEnterNextDelay}\n\t\t>\n\t\t\t<IconButton\n\t\t\t\ttype=\"button\"\n\t\t\t\tonClick={() => {\n\t\t\t\t\tif (!outlined && !!!goalConfig) {\n\t\t\t\t\t\tdispatch(addCardReplaceSelectionGoal(cardID, cardField));\n\t\t\t\t\t} else if (isGoal) {\n\t\t\t\t\t\tdispatch(resetSelectionGoal());\n\t\t\t\t\t}\n\t\t\t\t}}\n\t\t\t>\n\t\t\t\t{outlined ? (\n\t\t\t\t\t<RestorePageIcon fontSize=\"small\"></RestorePageIcon>\n\t\t\t\t) : (\n\t\t\t\t\t<RestorePageOutlinedIcon fontSize=\"small\"></RestorePageOutlinedIcon>\n\t\t\t\t)}\n\t\t\t</IconButton>\n\t\t</Tooltip>\n\t);\n};\n","import * as actions from \"./actions\";\nimport slice from \"./slice\";\nimport * as selectors from \"./selectors\";\nimport * as components from \"./components\";\nimport * as services from \"./services\";\n\nconst { reducer, name } = slice;\n\nexport default { actions, name, components, reducer, selectors, services };\n","import React, { useState } from \"react\";\nimport { TextField, TextFieldProps } from \"@material-ui/core\";\nimport selection from \"../../../../selection\";\nimport { SingleOrigin } from \"../../../../cards/model/origin\";\n\nexport const ClayCardField = ({\n\tstoreValue = \"\",\n\tsaveChanges,\n\tfieldOrigin,\n\tstyle,\n\t...rest\n}: {\n\tstoreValue?: string;\n\t// {} is an empty field of the QA-origin\n\tfieldOrigin?: SingleOrigin | {};\n\tsaveChanges: (value: string) => void;\n\tstyle: any;\n} & TextFieldProps) => {\n\tconst [state, setState] = useState({ storeValue, mutableValue: storeValue });\n\n\t// reset if new storeValue, otherwise keep user-mutated value\n\tif (state.storeValue !== storeValue) {\n\t\tsetState({ storeValue, mutableValue: storeValue });\n\t}\n\n\t// need the onChange-pattern, because we want to be able to pre-fill the field from the store\n\treturn (\n\t\t<selection.components.CardFieldMouseUp\n\t\t\tfieldOrigin={\n\t\t\t\tfieldOrigin && (fieldOrigin as SingleOrigin).spanIndexStart !== undefined\n\t\t\t\t\t? (fieldOrigin as SingleOrigin)\n\t\t\t\t\t: undefined\n\t\t\t}\n\t\t>\n\t\t\t<TextField\n\t\t\t\tInputProps={{ disableUnderline: true, style: { minWidth: \"400px\" } }}\n\t\t\t\tmultiline\n\t\t\t\tvariant=\"filled\"\n\t\t\t\tvalue={state.mutableValue}\n\t\t\t\tonChange={(event) => {\n\t\t\t\t\tconst submittedValue = (event.target as HTMLTextAreaElement).value;\n\t\t\t\t\tsetState({ ...state, mutableValue: submittedValue });\n\t\t\t\t}}\n\t\t\t\tonBlur={(event: any) => {\n\t\t\t\t\tsaveChanges(event.target.value);\n\t\t\t\t}}\n\t\t\t\tstyle={style}\n\t\t\t\t{...rest}\n\t\t\t></TextField>\n\t\t</selection.components.CardFieldMouseUp>\n\t);\n};\n","import FindInPageIcon from \"@material-ui/icons/FindInPage\";\nimport React from \"react\";\nimport { IconButton, Tooltip } from \"@material-ui/core\";\nimport { useDispatch } from \"react-redux\";\nimport { SingleOrigin } from \"../../../../cards/model/origin\";\nimport text from \"../../../../text\";\nimport { actions } from \"../../../slice\";\n\nexport const JumpToOriginButton = ({ cardOrigin }: { cardOrigin: SingleOrigin }) => {\n\tconst dispatch = useDispatch();\n\treturn (\n\t\t<Tooltip\n\t\t\ttitle={text.constants.jumpToOriginTooltip}\n\t\t\tenterDelay={text.constants.defaultEnterDelay}\n\t\t\tenterNextDelay={text.constants.defaultEnterNextDelay}\n\t\t>\n\t\t\t<IconButton\n\t\t\t\ttype=\"button\"\n\t\t\t\tonClick={() => {\n\t\t\t\t\tdispatch(actions.riverOriginRequest(cardOrigin));\n\t\t\t\t}}\n\t\t\t>\n\t\t\t\t<FindInPageIcon fontSize=\"small\"></FindInPageIcon>\n\t\t\t</IconButton>\n\t\t</Tooltip>\n\t);\n};\n","import React from \"react\";\nimport cards from \"../../../../cards\";\nimport { JumpToOriginButton } from \"./JumpToOriginButton\";\nimport { Paper, Grid } from \"@material-ui/core\";\nimport { CardConfig } from \"../../../../cards/model/config\";\nimport { CardField } from \"../../../../cards/model/content\";\nimport selection from \"../../../../selection\";\nimport { SingleOrigin } from \"../../../../cards/model/origin\";\n\nexport const ClayCardFieldButtons = ({ config, cardField }: { config: CardConfig; cardField: CardField }) => {\n\tconst origin: SingleOrigin | null = config.origin\n\t\t? cards.model.permutation.toFieldValue(cardField, config.origin)\n\t\t: null;\n\tconst originExists = origin?.page !== undefined;\n\treturn (\n\t\t<Paper variant=\"outlined\">\n\t\t\t<Grid container direction=\"row\">\n\t\t\t\t<Grid item>\n\t\t\t\t\t<selection.components.AppendButton\n\t\t\t\t\t\tcardID={config.cardID}\n\t\t\t\t\t\tcardField={cardField}\n\t\t\t\t\t></selection.components.AppendButton>\n\t\t\t\t</Grid>\n\n\t\t\t\t<Grid item>\n\t\t\t\t\t<selection.components.ReplaceButton\n\t\t\t\t\t\tcardID={config.cardID}\n\t\t\t\t\t\tcardField={cardField}\n\t\t\t\t\t></selection.components.ReplaceButton>\n\t\t\t\t</Grid>\n\n\t\t\t\t<Grid item>\n\t\t\t\t\t{originExists && <JumpToOriginButton cardOrigin={origin as SingleOrigin}></JumpToOriginButton>}\n\t\t\t\t</Grid>\n\t\t\t</Grid>\n\t\t</Paper>\n\t);\n};\n","import Grid from \"@material-ui/core/Grid\";\nimport React from \"react\";\nimport { ClayCardField } from \"./ClayCardField\";\nimport { QACardContent } from \"../../../../cards/model/content\";\nimport { useDispatch } from \"react-redux\";\nimport cards from \"../../../../cards\";\nimport { Card } from \"@material-ui/core\";\nimport text from \"../../../../text\";\nimport { ClayCardFieldButtons } from \"./ClayCardFieldButtons\";\nimport { QAConfig } from \"../../../../cards/model/config\";\n\n//TODO: use dark color pallet (theme?)\n\nexport const QACard = ({ config }: { config: QAConfig }) => {\n\tconst dispatch = useDispatch();\n\n\treturn (\n\t\t<Card variant=\"elevation\" elevation={5} style={{ padding: \"3px\" }}>\n\t\t\t<Grid container direction=\"row\" justify=\"space-between\">\n\t\t\t\t<Grid item>\n\t\t\t\t\t<Grid container direction=\"column\" spacing={1}>\n\t\t\t\t\t\t<Grid item>\n\t\t\t\t\t\t\t<Grid container direction=\"row\" spacing={1}>\n\t\t\t\t\t\t\t\t<Grid item>\n\t\t\t\t\t\t\t\t\t<ClayCardField\n\t\t\t\t\t\t\t\t\t\tsaveChanges={(value) => {\n\t\t\t\t\t\t\t\t\t\t\tdispatch(cards.actions.cardFieldReplace({ cardField: \"q\", cardConfig: config, newValue: value }));\n\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\tstoreValue={(config.content as QACardContent).q}\n\t\t\t\t\t\t\t\t\t\tlabel={text.constants.questionText}\n\t\t\t\t\t\t\t\t\t\tvariant=\"filled\"\n\t\t\t\t\t\t\t\t\t\tstyle={{ backgroundColor: \"#FFBF69\" }}\n\t\t\t\t\t\t\t\t\t\tInputLabelProps={{ style: { color: \"#000000\" } }}\n\t\t\t\t\t\t\t\t\t\tfieldOrigin={config.origin?.q}\n\t\t\t\t\t\t\t\t\t></ClayCardField>\n\t\t\t\t\t\t\t\t</Grid>\n\n\t\t\t\t\t\t\t\t<Grid item>\n\t\t\t\t\t\t\t\t\t<ClayCardFieldButtons cardField=\"q\" config={config}></ClayCardFieldButtons>\n\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t<Grid item>\n\t\t\t\t\t\t\t<Grid container direction=\"row\" spacing={1}>\n\t\t\t\t\t\t\t\t<Grid item>\n\t\t\t\t\t\t\t\t\t<ClayCardField\n\t\t\t\t\t\t\t\t\t\tsaveChanges={(value) => {\n\t\t\t\t\t\t\t\t\t\t\tdispatch(cards.actions.cardFieldReplace({ cardField: \"a\", cardConfig: config, newValue: value }));\n\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\tstoreValue={(config.content as QACardContent).a}\n\t\t\t\t\t\t\t\t\t\tlabel={text.constants.answerText}\n\t\t\t\t\t\t\t\t\t\tstyle={{ backgroundColor: \"#2EC4B6\" }}\n\t\t\t\t\t\t\t\t\t\tInputLabelProps={{ style: { color: \"#000000\" } }}\n\t\t\t\t\t\t\t\t\t\tfieldOrigin={config.origin?.a}\n\t\t\t\t\t\t\t\t\t></ClayCardField>\n\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t\t<Grid item>\n\t\t\t\t\t\t\t\t\t<ClayCardFieldButtons cardField=\"a\" config={config}></ClayCardFieldButtons>\n\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t</Grid>\n\t\t\t\t\t</Grid>\n\t\t\t\t</Grid>\n\n\t\t\t\t<Grid item>\n\t\t\t\t\t<cards.components.DeleteCardButton cardID={config.cardID}></cards.components.DeleteCardButton>\n\t\t\t\t</Grid>\n\t\t\t</Grid>\n\t\t</Card>\n\t);\n};\n","import React from \"react\";\nimport { ClayCardField } from \"./ClayCardField\";\nimport { useDispatch } from \"react-redux\";\nimport cards from \"../../../../cards\";\nimport { Card, Grid } from \"@material-ui/core\";\nimport text from \"../../../../text\";\nimport { NoteConfig } from \"../../../../cards/model/config\";\nimport { ClayCardFieldButtons } from \"./ClayCardFieldButtons\";\n\nexport const NoteCard = ({ config }: { config: NoteConfig }) => {\n\tconst dispatch = useDispatch();\n\n\treturn (\n\t\t<Card variant=\"elevation\" elevation={5} style={{ padding: \"3px\" }}>\n\t\t\t<Grid container direction=\"row\" justify=\"space-between\">\n\t\t\t\t<Grid item>\n\t\t\t\t\t<Grid container direction=\"row\" spacing={1}>\n\t\t\t\t\t\t<Grid item>\n\t\t\t\t\t\t\t<ClayCardField\n\t\t\t\t\t\t\t\tsaveChanges={(value) => {\n\t\t\t\t\t\t\t\t\tdispatch(cards.actions.cardReplace({ ...config, content: value } as NoteConfig));\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\tstoreValue={config.content as string}\n\t\t\t\t\t\t\t\tlabel={text.constants.noteText}\n\t\t\t\t\t\t\t\tvariant=\"filled\"\n\t\t\t\t\t\t\t\tstyle={{ backgroundColor: \"#CBF3F0\" }}\n\t\t\t\t\t\t\t\tInputLabelProps={{ style: { color: \"#000000\" } }}\n\t\t\t\t\t\t\t\tfieldOrigin={config.origin}\n\t\t\t\t\t\t\t></ClayCardField>\n\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t<Grid item>\n\t\t\t\t\t\t\t<ClayCardFieldButtons cardField=\"note\" config={config}></ClayCardFieldButtons>\n\t\t\t\t\t\t</Grid>\n\t\t\t\t\t</Grid>\n\t\t\t\t</Grid>\n\n\t\t\t\t<Grid item>\n\t\t\t\t\t<cards.components.DeleteCardButton cardID={config.cardID}></cards.components.DeleteCardButton>\n\t\t\t\t</Grid>\n\t\t\t</Grid>\n\t\t</Card>\n\t);\n};\n","import React from \"react\";\nimport { CardConfig, NoteConfig, QAConfig } from \"../../../../cards/model/config\";\nimport { QACard } from \"./QACard\";\nimport { NoteCard } from \"./NoteCard\";\n\nexport const ClayCard = ({ config }: { config: CardConfig }) => {\n\tswitch (config.type) {\n\t\tcase \"Note\":\n\t\t\treturn <NoteCard config={config as NoteConfig}></NoteCard>;\n\t\tcase \"Q-A\":\n\t\t\treturn <QACard config={config as QAConfig}></QACard>;\n\t}\n};\n","import Grid from \"@material-ui/core/Grid\";\nimport React from \"react\";\nimport { incrementer } from \"../../../../shared/utils\";\nimport { ClayCard } from \"./Cards/ClayCard\";\nimport { CardConfig } from \"../../../cards/model/config\";\nimport { Divider } from \"@material-ui/core\";\n\nconst GridItemDivider = () => (\n\t<Grid item>\n\t\t<Divider></Divider>\n\t</Grid>\n);\n\nexport const ClayCardGridItems = (cards: CardConfig[]) => {\n\tconst increment = incrementer();\n\n\treturn cards.reduce((prev, currentCard, index, arr) => {\n\t\tprev.push(\n\t\t\t<Grid item key={increment()}>\n\t\t\t\t<ClayCard config={currentCard} key={increment()}></ClayCard>\n\t\t\t</Grid>\n\t\t);\n\n\t\tconst notLastCard = index < arr.length - 1;\n\t\tif (notLastCard) prev.push(<GridItemDivider key={increment()}></GridItemDivider>);\n\t\treturn prev;\n\t}, [] as any[]);\n};\n","import cards from \"../../cards\";\nimport { CardConfig, NoteConfig, QAConfig } from \"../../cards/model/config\";\nimport { RiverContentState } from \"../model\";\nimport { combineFilterArr, Filter } from \"../../../shared/utils\";\n\n//TODO: make it not be accordion but closeable?\n//TODO: make local show / hide notes\nconst qaFilter: Filter = (config: CardConfig) => config.type === \"Q-A\";\nconst noteFilter: Filter = (config: CardConfig) => config.type === \"Note\";\nconst riverContentFilter: (contentStr: string) => Filter = (riverContentFilterStr: string) => (config: CardConfig) => {\n\tswitch (config.type) {\n\t\tcase \"Note\":\n\t\t\treturn cards.model.content.noteContentContainsStringOrEmpty(config as NoteConfig, riverContentFilterStr);\n\t\tcase \"Q-A\":\n\t\t\treturn cards.model.content.qaContentContainsStringOrEmpty(config as QAConfig, riverContentFilterStr);\n\t}\n};\n\nexport const filterCardConfigs = (\n\tinputCards: CardConfig[],\n\triverContentState: RiverContentState,\n\triverContentFilterStr: string\n): CardConfig[] => {\n\tif (riverContentState === \"NONE\") {\n\t\treturn [];\n\t}\n\n\tconst filters: Filter[] = [];\n\n\tif (riverContentState !== \"ALL\") {\n\t\tif (riverContentState === \"QAS\") {\n\t\t\tfilters.push(qaFilter);\n\t\t} else if (riverContentState === \"NOTES\") {\n\t\t\tfilters.push(noteFilter);\n\t\t}\n\t}\n\tif (riverContentFilterStr !== \"\") {\n\t\tfilters.push(riverContentFilter(riverContentFilterStr));\n\t}\n\n\treturn filters.length > 0 ? inputCards.filter(combineFilterArr(filters)) : inputCards;\n};\n","import LayersClear from \"@material-ui/icons/LayersClear\";\nimport React from \"react\";\nimport { IconButton } from \"@material-ui/core\";\nimport { useDispatch } from \"react-redux\";\nimport { actions } from \"../../slice\";\nimport text from \"../../../text\";\n\nexport const UnhideCardsButton = () => {\n\tconst dispatch = useDispatch();\n\treturn (\n\t\t<text.components.UnhideCardsTooltip>\n\t\t\t<IconButton\n\t\t\t\ttype=\"button\"\n\t\t\t\tonClick={() => {\n\t\t\t\t\tdispatch(actions.riverUnhide());\n\t\t\t\t}}\n\t\t\t>\n\t\t\t\t<LayersClear></LayersClear>\n\t\t\t</IconButton>\n\t\t</text.components.UnhideCardsTooltip>\n\t);\n};\n","import { Typography, Divider } from \"@material-ui/core\";\nimport Accordion from \"@material-ui/core/Accordion\";\nimport AccordionSummary from \"@material-ui/core/AccordionSummary\";\nimport AccordionDetails from \"@material-ui/core/AccordionDetails\";\nimport Grid from \"@material-ui/core/Grid\";\nimport React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { getRiverContentState, getRiverContentFilter, getRiverMakeUps } from \"../../selectors\";\nimport cards from \"../../../cards\";\nimport { ClayCardGridItems } from \"./ClayCardGridItems\";\nimport { filterCardConfigs } from \"../../services/filterCardConfigs\";\nimport { UnhideCardsButton } from \"./UnhideCardsButton\";\n\nexport const CardRiver = ({ riverID, materialHeight }: { riverID: string; materialHeight: number }) => {\n\tconst cardConfigs = useSelector(cards.selectors.getCards);\n\n\tconst riverMakeUp = useSelector(getRiverMakeUps)[riverID];\n\tconst riverCards = riverMakeUp ? riverMakeUp.cardIDs.map((id) => cardConfigs[id]) : [];\n\tconst riverContentState = useSelector(getRiverContentState);\n\t//TODO: use regex for upper/lower-case\n\tconst riverContentFilter = useSelector(getRiverContentFilter);\n\n\tconst filteredConfigs = filterCardConfigs(riverCards, riverContentState, riverContentFilter);\n\tconst gridItems = ClayCardGridItems(filteredConfigs);\n\n\t//TODO: if you start without any document and then load one, the current cards should be merged into that one\n\t//TODO: scroll-to-top for overflowing river\n\n\tconst containsFilteredCards = riverCards.length !== filteredConfigs.length;\n\n\treturn (\n\t\t<Accordion\n\t\t\texpanded\n\t\t\tdefaultExpanded={true}\n\t\t\tstyle={{\n\t\t\t\toverflow: \"auto\",\n\t\t\t\t// this was maxHeight but then if we hide the Material an empty river looks weird\n\t\t\t\t// because it is surrounded by white-space\n\t\t\t\theight: materialHeight,\n\t\t\t}}\n\t\t\televation={5}\n\t\t>\n\t\t\t<AccordionSummary>\n\t\t\t\t<Typography\n\t\t\t\t\tvariant=\"h6\"\n\t\t\t\t\talign=\"center\"\n\t\t\t\t\tstyle={{ MozUserSelect: \"none\", WebkitUserSelect: \"none\", msUserSelect: \"none\" }}\n\t\t\t\t>\n\t\t\t\t\t{riverID}\n\t\t\t\t</Typography>\n\t\t\t</AccordionSummary>\n\t\t\t<AccordionDetails>\n\t\t\t\t<Grid container direction=\"column\" spacing={2} justify=\"center\" alignItems=\"stretch\">\n\t\t\t\t\t<Grid item>\n\t\t\t\t\t\t<Grid container direction=\"row\">\n\t\t\t\t\t\t\t<Grid item>\n\t\t\t\t\t\t\t\t<cards.components.AddQAButton></cards.components.AddQAButton>\n\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t<Grid item>\n\t\t\t\t\t\t\t\t<cards.components.AddNoteButton></cards.components.AddNoteButton>\n\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t<Grid item>{containsFilteredCards && <Divider orientation=\"vertical\"></Divider>}</Grid>\n\t\t\t\t\t\t\t<Grid item>{containsFilteredCards && <UnhideCardsButton></UnhideCardsButton>}</Grid>\n\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t<Divider style={{ marginTop: \"4px\" }}></Divider>\n\t\t\t\t\t</Grid>\n\n\t\t\t\t\t<Grid item>\n\t\t\t\t\t\t<Grid container direction=\"column\" spacing={2} justify=\"center\" alignItems=\"stretch\">\n\t\t\t\t\t\t\t{gridItems}\n\t\t\t\t\t\t</Grid>\n\t\t\t\t\t</Grid>\n\t\t\t\t</Grid>\n\t\t\t</AccordionDetails>\n\t\t</Accordion>\n\t);\n};\n","import { useDispatch, useSelector } from \"react-redux\";\nimport { ReactNode } from \"react\";\nimport React from \"react\";\nimport { getActiveRiverMakeUpID } from \"../selectors\";\nimport { actions } from \"../slice\";\n\n//TODO: make reconciliation algorithm for origin when new PDF versions come out\n// (basically, just search the text, and if it is not in the same span, just move the span - expand page forward and backward then search there)\n\nexport const SwitchActiveRiver = ({ children, riverID }: { children: ReactNode; riverID: string }) => {\n\tconst dispatch = useDispatch();\n\tconst activeRiverID = useSelector(getActiveRiverMakeUpID);\n\n\treturn (\n\t\t<span\n\t\t\tonMouseEnter={() => {\n\t\t\t\tif (activeRiverID !== riverID) {\n\t\t\t\t\tdispatch(actions.riverActiveID(riverID));\n\t\t\t\t}\n\t\t\t}}\n\t\t>\n\t\t\t{children}\n\t\t</span>\n\t);\n};\n","import React from \"react\";\nimport { Button, FormControlLabel } from \"@material-ui/core\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { GreenCheckbox } from \"../../../shared/GreenCheckbox\";\nimport { getRiverShowState } from \"../selectors\";\nimport { actions } from \"../slice\";\n\nexport const ShowRiverCheckbox = () => {\n\tconst dispatch = useDispatch();\n\tconst curRiverShowState = useSelector(getRiverShowState);\n\n\treturn (\n\t\t<Button\n\t\t\tstartIcon={\n\t\t\t\t<FormControlLabel\n\t\t\t\t\tlabel=\"River\"\n\t\t\t\t\tcontrol={<GreenCheckbox checked={curRiverShowState === \"SHOW\"} />}\n\t\t\t\t></FormControlLabel>\n\t\t\t}\n\t\t\tvariant=\"contained\"\n\t\t\tcolor=\"primary\"\n\t\t\tonClick={() => {\n\t\t\t\tdispatch(actions.riverShowState(curRiverShowState === \"SHOW\" ? \"HIDE\" : \"SHOW\"));\n\t\t\t}}\n\t\t></Button>\n\t);\n};\n","import * as constants from \"./constants\";\nimport * as components from \"./components\";\nimport slice from \"./slice\";\nimport * as selectors from \"./selectors\";\nimport * as model from \"./model\";\nimport * as services from \"./services\";\n\nconst { actions, reducer, name } = slice;\n\nexport default { constants, components, reducer, name, selectors, actions, model, services };\n","export const NAME = \"pdfData\";\nexport const MaterialMultiplier = 0.63;\n","import { createSelector } from \"reselect\";\nimport { PDFState } from \"./model\";\nimport { NAME } from \"./constants\";\n\nexport const getAll = (state: any): PDFState => state[NAME];\n\nexport const getPDF = createSelector(getAll, (state: PDFState) => state.pdf);\n\nexport const getPDFName = createSelector(getAll, (state) => state.pdfName);\n\nexport const getTotalPages = createSelector(getAll, (state: PDFState) => state.totalPages);\n\nexport const getCurrentPage = createSelector(getAll, (state: PDFState) => state.currentPage);\n\nexport const getScrollToPage = createSelector(getAll, (state) => state.scrollToPage);\n\nexport const getPageControlData = createSelector(getTotalPages, getCurrentPage, (totalPages, currentPage) => {\n\treturn { currentPage, totalPages };\n});\n\nexport const getPDFShowStatus = createSelector(getAll, (state: PDFState) => state.pdfShowStatus);\n\nexport const getSpanOrigin = createSelector(getAll, (state) => state.spanOrigin);\n\nexport const getDocumentSearch = createSelector(getAll, (state) => state.documentSearch);\n","import { simpleReducer } from \"../../shared/utils\";\nimport { CaseReducer, createSlice, PayloadAction } from \"@reduxjs/toolkit\";\nimport { NAME } from \"./constants\";\nimport { SingleOrigin } from \"../cards/model/origin\";\nimport { PDFState, PDFStatus } from \"./model\";\n\nconst initialState: PDFState = {\n\tpdfShowStatus: \"SHOW\",\n\ttotalPages: 1000,\n\tcurrentPage: 1,\n\tscrollToPage: null,\n\tspanOrigin: null,\n\tdocumentSearch: \"\",\n};\n\nconst totalPages: CaseReducer<PDFState, PayloadAction<number>> = simpleReducer(\"totalPages\");\nconst pdfShowStatus: CaseReducer<PDFState, PayloadAction<PDFStatus>> = simpleReducer(\"pdfShowStatus\");\nconst spanOrigin: CaseReducer<PDFState, PayloadAction<SingleOrigin | null>> = simpleReducer(\"spanOrigin\");\nconst documentSearch: CaseReducer<PDFState, PayloadAction<string>> = simpleReducer(\"documentSearch\");\n\nconst pdfUpload: CaseReducer<PDFState, PayloadAction<File>> = (state, { payload }) => {\n\treturn { ...state, pdf: payload, pdfName: payload.name };\n};\n\nconst pageUpdate: CaseReducer<PDFState, PayloadAction<{ page: number; shouldScroll: boolean }>> = (\n\tstate,\n\t{ payload }\n) => {\n\treturn { ...state, currentPage: payload.page, scrollToPage: payload.shouldScroll ? payload.page : null };\n};\n\nconst pageCorrections = {\n\tADD: (newPage: number, totalPages: number) => (newPage === totalPages + 1 ? 1 : newPage),\n\tREMOVE: (newPage: number, totalPages: number) => (newPage === 0 ? totalPages : newPage),\n};\n\nconst nextPage: CaseReducer<PDFState> = (state) => {\n\tconst page = pageCorrections[\"ADD\"](state.currentPage + 1, state.totalPages);\n\treturn { ...state, currentPage: page, scrollToPage: page };\n};\nconst previousPage: CaseReducer<PDFState> = (state) => {\n\tconst page = pageCorrections[\"REMOVE\"](state.currentPage - 1, state.totalPages);\n\treturn { ...state, currentPage: page, scrollToPage: page };\n};\n\ntype ExistingDocumentPayload = Pick<PDFState, \"currentPage\" | \"totalPages\">;\nconst existingDocumentPayload: CaseReducer<PDFState, PayloadAction<ExistingDocumentPayload>> = (_, { payload }) => {\n\treturn {\n\t\t...initialState,\n\t\tpdf: undefined,\n\t\t...(payload as ExistingDocumentPayload),\n\t};\n};\n\nconst pdfSlice = createSlice({\n\tname: NAME,\n\tinitialState,\n\treducers: {\n\t\tpdfUpload,\n\t\ttotalPages,\n\t\tpdfShowStatus,\n\t\tspanOrigin,\n\t\tdocumentSearch,\n\t\tpageUpdate,\n\t\tnextPage,\n\t\tpreviousPage,\n\t\texistingDocumentPayload,\n\t},\n});\n\nexport const { actions } = pdfSlice;\n\nexport default pdfSlice;\n","import { Button, Snackbar } from \"@material-ui/core\";\nimport React, { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { getSpanOrigin } from \"../../selectors\";\nimport { actions } from \"../../slice\";\n\n//TODO: think about that SelectionSnackbar and this both are dismissed via Esc\n\nexport const OriginMarkedSnackbar = () => {\n\tconst [open, setOpen] = useState(false);\n\tconst spanOrigin = useSelector(getSpanOrigin);\n\tconst dispatch = useDispatch();\n\n\tif (!!!spanOrigin && open) setOpen(false);\n\n\tif (!!spanOrigin && !open) setOpen(true);\n\n\tconst handleClose = (event: any, reason: string) => {\n\t\tif (reason === \"clickaway\") {\n\t\t\t// do not close on clickaway\n\t\t\tevent.preventDefault();\n\t\t} else {\n\t\t\tsetOpen(false);\n\t\t\tdispatch(actions.spanOrigin(null));\n\t\t}\n\t};\n\n\tconst handleDismiss = () => {\n\t\tsetOpen(false);\n\t\tdispatch(actions.spanOrigin(null));\n\t};\n\n\tconst escPress = (event: KeyboardEvent) => {\n\t\tif (open && (event.key === \"Escape\" || event.key === \"Esc\")) {\n\t\t\thandleDismiss();\n\t\t}\n\t};\n\n\tuseEffect(() => {\n\t\tdocument.addEventListener(\"keydown\", escPress);\n\t\treturn () => {\n\t\t\tdocument.removeEventListener(\"keydown\", escPress);\n\t\t};\n\t});\n\n\treturn (\n\t\t<Snackbar\n\t\t\tanchorOrigin={{\n\t\t\t\tvertical: \"bottom\",\n\t\t\t\thorizontal: \"left\",\n\t\t\t}}\n\t\t\topen={open}\n\t\t\tonClose={handleClose}\n\t\t\tmessage=\"Origin is marked\"\n\t\t\taction={\n\t\t\t\t<Button color=\"secondary\" size=\"small\" onClick={handleDismiss}>\n\t\t\t\t\tUNMARK\n\t\t\t\t</Button>\n\t\t\t}\n\t\t/>\n\t);\n};\n","import React, { useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Typography, TextField, Card, Grid } from \"@material-ui/core\";\nimport { getCurrentPage, getTotalPages } from \"../../selectors\";\nimport { actions } from \"../../slice\";\n\nconst nonDigitRegEx = /(\\D)/;\n\nexport const validatePageChoice = (possiblePage: string, totalPages: number) => {\n\tif (possiblePage === \"\" || possiblePage.trim().match(nonDigitRegEx) !== null) return false;\n\n\tconst asInt = parseInt(possiblePage);\n\tif (asInt < 1 || totalPages < asInt) return false;\n\n\treturn true;\n};\n\nconst PageNumberTextField = ({ totalPages }: { totalPages: number }) => {\n\tconst dispatch = useDispatch();\n\tconst currentPage = useSelector(getCurrentPage);\n\n\tconst [state, setState] = useState({\n\t\terror: false,\n\t\tvalue: currentPage?.toString(),\n\t\tuserInput: currentPage?.toString(),\n\t});\n\n\t// with this we can trigger a re-render onChange,\n\t// while making sure that if a new currentPage arrives, we reset the component\n\tif (state.value !== currentPage.toString()) {\n\t\tsetState({ error: false, value: currentPage.toString(), userInput: currentPage.toString() });\n\t}\n\n\treturn (\n\t\t<TextField\n\t\t\tinputProps={{\n\t\t\t\tstyle: {\n\t\t\t\t\tpadding: \"0px\",\n\t\t\t\t\t//h6 Typography style\n\t\t\t\t\tfontSize: \"1.25rem\",\n\t\t\t\t\tfontFamily: '\"Roboto\", \"Helvetica\", \"Arial\", sansSerif',\n\t\t\t\t\tfontWeight: 500,\n\t\t\t\t\tlineHeight: 1.6,\n\t\t\t\t\tletterSpacing: \"0.0075em\",\n\t\t\t\t},\n\t\t\t}}\n\t\t\ttype=\"text\"\n\t\t\tvariant=\"filled\"\n\t\t\tvalue={state.userInput}\n\t\t\tonKeyDown={(event) => {\n\t\t\t\tif (event.key === \"Enter\") {\n\t\t\t\t\tevent.preventDefault();\n\t\t\t\t\tconst submittedValue = (event.target as HTMLFormElement).value;\n\t\t\t\t\tif (!state.error) {\n\t\t\t\t\t\tdispatch(actions.pageUpdate({ page: parseInt(submittedValue), shouldScroll: true }));\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}}\n\t\t\tonChange={(event) => {\n\t\t\t\tconst submittedValue = (event.target as HTMLTextAreaElement).value;\n\t\t\t\tif (validatePageChoice(submittedValue, totalPages as number)) {\n\t\t\t\t\tsetState({ ...state, error: false, userInput: submittedValue });\n\t\t\t\t} else {\n\t\t\t\t\tsetState({ ...state, error: true, userInput: submittedValue });\n\t\t\t\t}\n\t\t\t}}\n\t\t\terror={state.error}\n\t\t/>\n\t);\n};\n\nconst TotalPagesIndicator = ({ totalPages }: { totalPages: number }) => (\n\t<Typography variant=\"h6\">of {totalPages}</Typography>\n);\n\nexport const PageChooser = () => {\n\tconst totalPages = useSelector(getTotalPages);\n\n\treturn (\n\t\t<Card variant=\"outlined\">\n\t\t\t<Grid item>\n\t\t\t\t<Grid container direction=\"row\" alignItems=\"center\" justify=\"space-between\">\n\t\t\t\t\t<Grid item style={{ width: \"37%\" }}>\n\t\t\t\t\t\t<PageNumberTextField totalPages={totalPages}></PageNumberTextField>\n\t\t\t\t\t</Grid>\n\n\t\t\t\t\t<Grid item style={{ width: \"61%\" }}>\n\t\t\t\t\t\t<TotalPagesIndicator totalPages={totalPages}></TotalPagesIndicator>\n\t\t\t\t\t</Grid>\n\t\t\t\t</Grid>\n\t\t\t</Grid>\n\t\t</Card>\n\t);\n};\n","import { ReactNode, KeyboardEvent, useRef, MutableRefObject } from \"react\";\nimport React from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { KeyActionMap, keyEventDispatcherCreator } from \"../../../../shared/utils\";\nimport { actions } from \"../../slice\";\n\n// note to self: prefer to expose components and not implementation details (actions etc.)\n\nconst pageControlKeyMap: KeyActionMap = {\n\tArrowLeft: actions.previousPage(),\n\tArrowRight: actions.nextPage(),\n};\nconst pageControlDispatcher = keyEventDispatcherCreator(pageControlKeyMap);\n\nexport const PageKeyboardControl = ({ children }: { children: ReactNode }) => {\n\tconst dispatch = useDispatch();\n\tconst ref: MutableRefObject<null | HTMLInputElement> = useRef(null);\n\n\treturn (\n\t\t<span\n\t\t\tref={ref}\n\t\t\tonKeyDown={(event: KeyboardEvent<HTMLSpanElement>) => {\n\t\t\t\tpageControlDispatcher(event, dispatch);\n\t\t\t}}\n\t\t\ttabIndex={0}\n\t\t>\n\t\t\t{children}\n\t\t</span>\n\t);\n};\n","import \"./PDFDocument.css\";\nimport \"react-pdf/dist/esm/Page/AnnotationLayer.css\";\nimport React, { useState, useRef, FunctionComponent, RefObject } from \"react\";\nimport { pdfjs, Document } from \"react-pdf\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport text from \"../../../text\";\nimport { cachePageDimensions } from \"./cachePageDimensions\";\nimport { getPDF } from \"../../selectors\";\nimport { actions } from \"../../slice\";\npdfjs.GlobalWorkerOptions.workerSrc = `//cdnjs.cloudflare.com/ajax/libs/pdf.js/${pdfjs.version}/pdf.worker.js`;\n\nexport type CachedPageDimensions = Map<number, [number, number]>;\n\nconst options = {\n\tcMapUrl: \"cmaps/\",\n\tcMapPacked: true,\n};\n\ntype PDFProxyRef = RefObject<pdfjs.PDFDocumentProxy | undefined>;\n\nexport type PDFDocumentChild = FunctionComponent<{\n\tpdfProxyRef: PDFProxyRef;\n\tcachedPageDimensions: CachedPageDimensions;\n}>;\n\nexport const PDFDocument = ({ ChildComponent }: { ChildComponent: PDFDocumentChild }) => {\n\tconst pdf = useSelector(getPDF);\n\n\tconst [cachedPageDimensions, setPageDimensions] = useState<CachedPageDimensions | undefined>();\n\n\tconst pdfProxyRef = useRef<pdfjs.PDFDocumentProxy | undefined>();\n\n\tconst dispatch = useDispatch();\n\n\t// used for abborting pageDimension-cache-collection\n\tconst pdfName = pdf?.name;\n\tconst pdfNameRef = useRef(pdfName);\n\tif (pdfNameRef.current !== pdfName) {\n\t\tpdfNameRef.current = pdfName;\n\t}\n\n\treturn (\n\t\t<Document\n\t\t\tloading={text.constants.loadingMaterialText}\n\t\t\tnoData={text.constants.noMaterialText}\n\t\t\toptions={options}\n\t\t\tfile={pdf}\n\t\t\trenderMode=\"canvas\"\n\t\t\tonLoadSuccess={(pdfProxy) => {\n\t\t\t\tdispatch(actions.totalPages(pdfProxy.numPages));\n\t\t\t\tif (pdf) cachePageDimensions(pdfProxy, pdfName as string, pdfNameRef, setPageDimensions);\n\t\t\t\tpdfProxyRef.current = pdfProxy;\n\t\t\t}}\n\t\t\tonItemClick={({ pageNumber }) => {\n\t\t\t\tdispatch(actions.pageUpdate({ page: parseInt(pageNumber), shouldScroll: true }));\n\t\t\t}}\n\t\t>\n\t\t\t{cachedPageDimensions && pdfNameRef.current === pdfName && (\n\t\t\t\t<ChildComponent pdfProxyRef={pdfProxyRef} cachedPageDimensions={cachedPageDimensions}></ChildComponent>\n\t\t\t)}\n\t\t</Document>\n\t);\n};\n","import { RefObject } from \"react\";\nimport { pdfjs } from \"react-pdf\";\nimport { CachedPageDimensions } from \"./PDFDocument\";\n\n//TODO: use more robust method than pdfName to differentiate pdfs in this abort\n//TODO: test if this abort actually works? once the function was entered,\n// is it guaranteed that it will finish before other changes?\nexport const cachePageDimensions = (\n\tpdfProxy: pdfjs.PDFDocumentProxy,\n\tpdfName: string,\n\tpdfNameRef: RefObject<string | null | undefined>,\n\tsetPageDimensions: (dims: CachedPageDimensions) => void\n) => {\n\tconst promises = Array.from({ length: pdfProxy.numPages }, (_, i) => i + 1).map((pageNumber) =>\n\t\tpdfProxy.getPage(pageNumber)\n\t);\n\n\t// Assuming all pages may have different heights. Otherwise we can just\n\t// load the first page and use its height for determining all the row\n\t// heights.\n\tPromise.all((promises as unknown) as Promise<any>[]).then((pages: pdfjs.PDFPageProxy[]) => {\n\t\t// a different pdf was loaded while these promises where executing\n\t\tif (pdfName !== pdfNameRef.current) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst pageDimensions = new Map();\n\n\t\tconst scale = 1;\n\t\tfor (const page of pages) {\n\t\t\tconst w = page.view[2] * scale;\n\t\t\tconst h = page.view[3] * scale;\n\n\t\t\t// react-pdf 4.0.5 types are incorrect, _pageIndex is correct and not just pageIndex\n\t\t\tpageDimensions.set(((page as unknown) as { _pageIndex: number })._pageIndex + 1, [w, h]);\n\t\t}\n\n\t\tsetPageDimensions(pageDimensions);\n\t});\n};\n","import { RefObject, useCallback, useEffect, useRef } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { SingleOrigin } from \"../../../cards/model/origin\";\nimport { getSpanOrigin } from \"../../selectors\";\nimport { actions } from \"../../slice\";\n\nexport const PageSpanControl = ({ page, pageRef }: { page: number; pageRef: RefObject<null | HTMLDivElement> }) => {\n\tconst spanOrigin = useSelector(getSpanOrigin);\n\tconst count = useRef(0);\n\n\tconst dispatch = useDispatch();\n\n\t// it is not guaranteed that the effect fires after the page was fully rendered\n\t// (depends on load)\n\t// so we try up to 10 times\n\t// this assumes every machine has finished rendering after approx 100 ms\n\t// then we assume that the origin was invalid (bug somewhere) and abort\n\t// otherwise it would be a infinite loop\n\tconst trier = useCallback(() => {\n\t\tconst intervalID = setInterval(() => {\n\t\t\tif (count.current === 10) {\n\t\t\t\tcount.current = 0;\n\t\t\t\tclearInterval(intervalID);\n\t\t\t\tconsole.log(\"invalid origin clicked\", spanOrigin);\n\t\t\t\tdispatch(actions.spanOrigin(null));\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst textLayer = pageRef.current?.children.item(1);\n\t\t\tif (textLayer) {\n\t\t\t\tconst originSpan = textLayer.children.item((spanOrigin as SingleOrigin).spanIndexStart);\n\t\t\t\tif (originSpan) {\n\t\t\t\t\toriginSpan.scrollIntoView({ behavior: \"auto\", block: \"nearest\", inline: \"nearest\" });\n\t\t\t\t\tcount.current = 0;\n\t\t\t\t\tclearInterval(intervalID);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcount.current = count.current + 1;\n\t\t}, 10);\n\t}, [dispatch, count, spanOrigin, pageRef]);\n\n\tuseEffect(() => {\n\t\tif (spanOrigin && spanOrigin.page === page && pageRef.current) {\n\t\t\t// assumption of fixed order\n\t\t\tconst textLayer = pageRef.current.children.item(1);\n\t\t\tif (textLayer) {\n\t\t\t\tconst originSpan = textLayer.children.item(spanOrigin.spanIndexStart);\n\t\t\t\tif (originSpan) {\n\t\t\t\t\toriginSpan.scrollIntoView({ behavior: \"auto\", block: \"nearest\", inline: \"nearest\" });\n\t\t\t\t\tcount.current = 0;\n\t\t\t\t} else {\n\t\t\t\t\ttrier();\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\ttrier();\n\t\t\t}\n\t\t}\n\t}, [dispatch, page, pageRef, spanOrigin, trier]);\n\n\treturn null;\n};\n","import React, { useRef } from \"react\";\nimport { Page } from \"react-pdf\";\nimport { TextLayerItemInternal } from \"react-pdf/dist/Page\";\nimport { useSelector } from \"react-redux\";\nimport { SingleOrigin } from \"../../../cards/model/origin\";\nimport { PageSpanControl } from \"../Origin/PageSpanControl\";\nimport selection from \"../../../selection\";\nimport { getDocumentSearch, getSpanOrigin } from \"../../selectors\";\nimport { MaterialMultiplier } from \"../../constants\";\nimport { PageKeyboardControl } from \"../Navigation/PageKeyboardControl\";\n\ntype Renderer = (\n\ttextItem: TextLayerItemInternal | (TextLayerItemInternal & { str: string | JSX.Element })\n) => JSX.Element | string;\n\nconst highlightOrigin = (textItem: TextLayerItemInternal, origin: SingleOrigin) => {\n\tconst itemIndex = textItem.itemIndex;\n\tif (!(itemIndex >= origin.spanIndexStart && itemIndex <= origin.spanIndexEnd)) {\n\t\treturn textItem.str;\n\t}\n\n\t// does not really make sense to make more fine-grained mark if the TextLayer is off anyways\n\treturn <mark style={{ backgroundColor: \"red\" }}>{textItem.str}</mark>;\n};\n\nconst makeOriginHighlighter = (origin: SingleOrigin) => {\n\treturn (textItem: TextLayerItemInternal) => {\n\t\treturn highlightOrigin(textItem, origin);\n\t};\n};\n\nexport const backgroundStyle = { backgroundColor: \"blue\" };\n\n// TODO: this could be made clearer and cleaner\nexport const highlightPattern = (text: string, pattern: string) => {\n\t// the idea is that:\n\t// no matches are most likely\n\t// 1 or 2 are second most likely\n\t// after that the pattern must be really small,\n\t// so then we can look at the whole string\n\t// generally verbosity is used to guarantee speed\n\t// potentially 400+ items need to be processed for every search, so no room for slack\n\n\tconst textLength = text.length;\n\tconst patternLength = pattern.length;\n\t// most of the TextItems should not have a highlight, so short-circuit is advised\n\tif (pattern === \"\" || text === \"\" || patternLength > textLength) return text;\n\n\t// fastest match seems to be indexOf: https://jsben.ch/RVYk7\n\tconst index = text.indexOf(pattern);\n\tif (index === -1) return text;\n\n\t// react says to use unqiue elements with keys, I choose not to for speed reasons\n\tconst markedPattern = <mark style={backgroundStyle}>{pattern}</mark>;\n\tconst slice1 = index > 0 ? text.slice(0, index) : false;\n\n\tlet result = [];\n\tif (slice1) result.push(slice1);\n\tresult.push(markedPattern);\n\n\tconst secondIndex = text.indexOf(pattern, index + patternLength);\n\tif (secondIndex === -1) {\n\t\tconst slice2Start = index + patternLength;\n\t\tconst slice2 = slice2Start < textLength ? text.slice(slice2Start) : false;\n\t\tif (slice2) result.push(slice2);\n\t\treturn result;\n\t}\n\n\tconst slice2Start = index + patternLength;\n\tconst slice2 = slice2Start !== secondIndex ? text.slice(slice2Start, secondIndex) : false;\n\tif (slice2) result.push(slice2);\n\tresult.push(markedPattern);\n\n\tconst thirdIndex = text.indexOf(pattern, secondIndex + patternLength);\n\tif (thirdIndex === -1) {\n\t\tconst slice3Start = secondIndex + patternLength;\n\t\tconst slice3 = slice3Start < textLength ? text.slice(slice3Start) : false;\n\t\tif (slice3) result.push(slice2);\n\t\treturn result;\n\t}\n\n\tconst slice3Start = secondIndex + patternLength;\n\tconst slice3 = slice3Start < textLength ? text.slice(slice3Start, thirdIndex) : false;\n\tif (slice3) result.push(slice3);\n\tresult.push(markedPattern);\n\n\tif (thirdIndex + patternLength === textLength) {\n\t\treturn result;\n\t}\n\n\tconst stringRest = text.slice(thirdIndex + patternLength);\n\tif (stringRest === pattern) {\n\t\tresult.push(markedPattern);\n\t\treturn result;\n\t}\n\n\tconst splitText = stringRest.split(pattern);\n\tif (splitText.length <= 1) {\n\t\tresult.push(stringRest);\n\t\treturn result;\n\t}\n\n\tfor (let index = 0; index < splitText.length; index++) {\n\t\tconst spliter = splitText[index];\n\t\tif (index === 0 && spliter === \"\") {\n\t\t\tresult.push(markedPattern);\n\t\t\tcontinue;\n\t\t}\n\n\t\tif (index === splitText.length - 1 && spliter !== \"\") {\n\t\t\tresult.push(spliter);\n\t\t\tcontinue;\n\t\t}\n\n\t\tif (spliter !== \"\") result.push(spliter);\n\t\tresult.push(markedPattern);\n\t}\n\n\treturn result as any;\n};\n\nfunction makeTextRenderer(searchText: string) {\n\treturn function textRenderer(textItem: TextLayerItemInternal) {\n\t\treturn highlightPattern(textItem.str, searchText);\n\t};\n}\n\nconst combineRenderers = (searchRenderer?: Renderer, originRenderer?: Renderer) => {\n\tif (!searchRenderer) return originRenderer;\n\tif (!originRenderer) return searchRenderer;\n\treturn (textItem: TextLayerItemInternal) => originRenderer({ ...textItem, str: searchRenderer(textItem) as any });\n};\n\n//TODO: when switching from a small page to big, the ControlBar does not size back\n\nexport const PDFPage = ({ pageNumber, materialWidth }: { pageNumber: number; materialWidth: number }) => {\n\t//assumption is that the list checks for width before rendering\n\tconst documentSearch = useSelector(getDocumentSearch);\n\tconst spanOrigin = useSelector(getSpanOrigin);\n\n\tconst originHighlighter = spanOrigin ? makeOriginHighlighter(spanOrigin) : undefined;\n\tconst searchRenderer = documentSearch !== \"\" ? makeTextRenderer(documentSearch) : undefined;\n\n\tconst textRenderer = combineRenderers(searchRenderer, originHighlighter);\n\n\tconst pageRef = useRef<null | HTMLDivElement>(null);\n\n\treturn (\n\t\t<div style={{ overflow: \"auto\" }}>\n\t\t\t<selection.components.MaterialMouseUp page={pageNumber}>\n\t\t\t\t<PageKeyboardControl>\n\t\t\t\t\t<Page\n\t\t\t\t\t\tinputRef={(instance) => {\n\t\t\t\t\t\t\tpageRef.current = instance;\n\t\t\t\t\t\t}}\n\t\t\t\t\t\tpageNumber={pageNumber}\n\t\t\t\t\t\twidth={materialWidth * MaterialMultiplier}\n\t\t\t\t\t\tcustomTextRenderer={textRenderer as any}\n\t\t\t\t\t\trenderAnnotationLayer={false}\n\t\t\t\t\t/>\n\t\t\t\t</PageKeyboardControl>\n\t\t\t</selection.components.MaterialMouseUp>\n\t\t\t<PageSpanControl page={pageNumber} pageRef={pageRef}></PageSpanControl>\n\t\t</div>\n\t);\n};\n","export type DisplayStatus = \"SHOW\" | \"HIDE\";\n\nexport enum View {\n\tRiverMaterial,\n\tRiverExplorer,\n\tCardExplorer,\n}\n\nexport type DisplayData = {\n\twindowMeasurements: { width: number; height: number } | null;\n\ttopOffset: number;\n\tcurrentView: View;\n};\n","import React from \"react\";\nimport { Button, FormControlLabel } from \"@material-ui/core\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { GreenCheckbox } from \"../../../shared/GreenCheckbox\";\nimport { getPDFShowStatus } from \"../selectors\";\nimport { actions } from \"../slice\";\n\nexport const ShowMaterialCheckbox = () => {\n\tconst dispatch = useDispatch();\n\tconst pdfShowState = useSelector(getPDFShowStatus);\n\n\treturn (\n\t\t<Button\n\t\t\tstartIcon={\n\t\t\t\t<FormControlLabel\n\t\t\t\t\tlabel=\"Material\"\n\t\t\t\t\tcontrol={<GreenCheckbox checked={pdfShowState === \"SHOW\"} />}\n\t\t\t\t></FormControlLabel>\n\t\t\t}\n\t\t\tvariant=\"contained\"\n\t\t\tcolor=\"primary\"\n\t\t\tonClick={() => {\n\t\t\t\tdispatch(actions.pdfShowStatus(pdfShowState === \"SHOW\" ? \"HIDE\" : \"SHOW\"));\n\t\t\t}}\n\t\t></Button>\n\t);\n};\n","import React from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { IconButton, Card, Grid, Divider, Tooltip } from \"@material-ui/core\";\nimport ArrowForwardIosIcon from \"@material-ui/icons/ArrowForwardIos\";\nimport ArrowBackIosIcon from \"@material-ui/icons/ArrowBackIos\";\nimport { actions } from \"../../slice\";\nimport text from \"../../../text\";\n\nconst PreviousButton = () => {\n\tconst dispatch = useDispatch();\n\n\treturn (\n\t\t<Tooltip\n\t\t\ttitle={text.constants.previousPageTooltip}\n\t\t\tenterDelay={text.constants.defaultEnterDelay}\n\t\t\tenterNextDelay={text.constants.defaultEnterNextDelay}\n\t\t>\n\t\t\t<IconButton\n\t\t\t\ttype=\"button\"\n\t\t\t\tonClick={() => {\n\t\t\t\t\tdispatch(actions.previousPage());\n\t\t\t\t}}\n\t\t\t>\n\t\t\t\t<ArrowBackIosIcon></ArrowBackIosIcon>\n\t\t\t</IconButton>\n\t\t</Tooltip>\n\t);\n};\n\nconst NextButton = () => {\n\tconst dispatch = useDispatch();\n\treturn (\n\t\t<Tooltip\n\t\t\ttitle={text.constants.nextPageTooltip}\n\t\t\tenterDelay={text.constants.defaultEnterDelay}\n\t\t\tenterNextDelay={text.constants.defaultEnterNextDelay}\n\t\t>\n\t\t\t<IconButton\n\t\t\t\ttype=\"button\"\n\t\t\t\tonClick={() => {\n\t\t\t\t\tdispatch(actions.nextPage());\n\t\t\t\t}}\n\t\t\t>\n\t\t\t\t<ArrowForwardIosIcon></ArrowForwardIosIcon>\n\t\t\t</IconButton>\n\t\t</Tooltip>\n\t);\n};\n\nexport const PageNavigation = () => {\n\treturn (\n\t\t<Card variant=\"outlined\">\n\t\t\t<Grid container direction=\"row\">\n\t\t\t\t<Grid item>\n\t\t\t\t\t<PreviousButton></PreviousButton>\n\t\t\t\t</Grid>\n\t\t\t\t<Grid item>\n\t\t\t\t\t<Divider orientation=\"vertical\"></Divider>\n\t\t\t\t</Grid>\n\t\t\t\t<Grid item>\n\t\t\t\t\t<NextButton></NextButton>\n\t\t\t\t</Grid>\n\t\t\t</Grid>\n\t\t</Card>\n\t);\n};\n","import * as components from \"./components\";\nimport slice from \"./slice\";\nimport * as selectors from \"./selectors\";\nimport * as constants from \"./constants\";\n\nconst { reducer, actions, name } = slice;\n\nexport default { actions, components, name, reducer, selectors, constants };\n","import { createSelector } from \"reselect\";\nimport { NAME } from \"./constants\";\nimport { DocumentDB, DocumentData } from \"./model\";\nimport river from \"../river\";\nimport cards from \"../cards\";\nimport pdf from \"../pdf\";\n\nexport const getAll = (state: any): DocumentDB => state[NAME];\n\nexport const getDocumentNames = createSelector(getAll, (db) => Object.keys(db));\n\nexport const getDocumentDataSets = createSelector(getAll, (db) => Object.values(db));\n\nexport const collectCurrentDBData: (state: any) => DocumentData | null = createSelector(\n\tpdf.selectors.getPDFName,\n\tpdf.selectors.getTotalPages,\n\tpdf.selectors.getCurrentPage,\n\triver.selectors.getRiverMakeUps,\n\triver.selectors.getActiveRiverMakeUpID,\n\tcards.selectors.getCards,\n\tcards.selectors.getLastCardIDNumber,\n\t(pdfName, totalPages, currentPage, riverMakeUps, riverActiveID, cards, lastCardIDNumber) => {\n\t\treturn {\n\t\t\tname: pdfName as string,\n\t\t\ttotalPages,\n\t\t\tcurrentPage,\n\t\t\triverMakeUps,\n\t\t\triverActiveID,\n\t\t\tcards,\n\t\t\tlastCardIDNumber,\n\t\t};\n\t}\n);\n","import { CaseReducer, createSlice, PayloadAction } from \"@reduxjs/toolkit\";\nimport { DocumentData, DocumentDB } from \"./model\";\nimport { NAME } from \"./constants\";\n\nconst initialState: DocumentDB = {};\n\n//TODO: PDF-data gets saved with name, better use some hash or something (rename of document file is likely) -> use size or last-modified or smth like that instead of name\n\nconst storeInDocumentDB: CaseReducer<DocumentDB, PayloadAction<DocumentData>> = (state, { payload }) => {\n\treturn { ...state, [payload.name]: payload };\n};\n\nconst updateDocumentDB: CaseReducer<DocumentDB, PayloadAction<DocumentData[]>> = (state, { payload }) => {\n\treturn {\n\t\t...state,\n\t\t...payload.reduce((prev, dbData) => {\n\t\t\tprev[dbData.name] = dbData;\n\t\t\treturn prev;\n\t\t}, {} as DocumentDB),\n\t};\n};\n\nconst removeFromDocumentDB: CaseReducer<DocumentDB, PayloadAction<string>> = (state, { payload }) => {\n\treturn Object.fromEntries(Object.entries(state).filter((arr) => arr[0] !== payload));\n};\n\nconst dbSlice = createSlice({\n\tname: NAME,\n\tinitialState,\n\treducers: {\n\t\tstoreInDocumentDB,\n\t\tremoveFromDocumentDB,\n\t\tupdateDocumentDB,\n\t},\n});\n\nexport const { actions } = dbSlice;\n\nexport default dbSlice;\n","export const NAME = \"documentDB\";\n","import { Dispatch } from \"redux\";\nimport pdf from \"../pdf\";\nimport { DocumentData } from \"./model\";\nimport { collectCurrentDBData, getDocumentDataSets } from \"./selectors\";\nimport { actions } from \"./slice\";\n\nexport const refreshDB = (dispatch: Dispatch, state: any) => {\n\t// note: need to getState again after this to make sure refreshed state is used\n\tconst currentPDFName = pdf.selectors.getPDFName(state);\n\tif (currentPDFName !== undefined) {\n\t\tconst dbData = collectCurrentDBData(state) as DocumentData;\n\t\tdispatch(actions.storeInDocumentDB(dbData));\n\t}\n};\n\nconst fileDownload = require(\"js-file-download\");\nexport const downloadDBData = () => {\n\treturn (dispatch: Dispatch, getState: Function) => {\n\t\tlet state = getState();\n\n\t\t//actualize the db before downloading\n\t\trefreshDB(dispatch, state);\n\t\t// get actualized state\n\t\tstate = getState();\n\n\t\tconst documentDataSets = getDocumentDataSets(state);\n\t\tconst localString = new Date().toLocaleString();\n\t\tfileDownload(JSON.stringify(documentDataSets), localString + \" ClayMemory.txt\");\n\t};\n};\n","import React from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { downloadDBData } from \"../actions\";\nimport GetAppIcon from \"@material-ui/icons/GetApp\";\nimport { Button } from \"@material-ui/core\";\nimport text from \"../../text\";\n\nexport const DownloadDBDataButton = () => {\n\tconst dispatch = useDispatch();\n\n\treturn (\n\t\t<span\n\t\t\tonClick={() => {\n\t\t\t\tdispatch(downloadDBData());\n\t\t\t}}\n\t\t>\n\t\t\t<Button variant=\"contained\" color=\"primary\" disableElevation startIcon={<GetAppIcon></GetAppIcon>}>\n\t\t\t\t{text.constants.downloadDatasetsText}\n\t\t\t</Button>\n\t\t</span>\n\t);\n};\n","import { downloadDBData, refreshDB } from \"./actions\";\nimport * as selectors from \"./selectors\";\nimport slice from \"./slice\";\nimport * as components from \"./components\";\n\nconst { reducer, actions, name } = slice;\n\nexport default { actions: { ...actions, downloadDBData, refreshDB }, name, reducer, selectors, components };\n","import { Dispatch } from \"redux\";\nimport { ActionCreators } from \"redux-undo\";\nimport cards from \"../cards\";\nimport river from \"../river\";\nimport db from \"../db\";\nimport { DocumentData } from \"../db/model\";\nimport pdf from \"../pdf\";\n\nconst resetActiveAppState = (dispatch: Dispatch) => {\n\t// reset river first, otherwise it might not find cards which where deleted\n\tdispatch(river.actions.allRiversReset());\n\tdispatch(cards.actions.allCardsReset());\n\t// no undo-redo across documents or when uploading a dataset\n\tdispatch(ActionCreators.clearHistory());\n};\n\nexport const replaceActiveAppState = (dispatch: Dispatch, newDocumentData: DocumentData, currentPDFName?: string) => {\n\t// this order is critical, otherwise river cant find cards\n\tdispatch(\n\t\tcards.actions.allCardsReplace({ cards: newDocumentData.cards, lastCardIDNumber: newDocumentData.lastCardIDNumber })\n\t);\n\tdispatch(river.actions.allRiversReplace(newDocumentData.riverMakeUps));\n\tif (currentPDFName !== undefined && newDocumentData.name !== currentPDFName) {\n\t\t//existing pdf is unequal to loaded data, so need to replace\n\t\t//pdf is not replaced, because when we load only data, the pdf is not yet uploaded\n\t\tdispatch(\n\t\t\tpdf.actions.existingDocumentPayload({\n\t\t\t\tcurrentPage: newDocumentData.currentPage,\n\t\t\t\ttotalPages: newDocumentData.totalPages,\n\t\t\t})\n\t\t);\n\t}\n\t// no undo-redo across documents or when uploading a dataset\n\tdispatch(ActionCreators.clearHistory());\n};\n\nexport const loadPDF = (pdfFile: File) => {\n\treturn (dispatch: Dispatch, getState: Function) => {\n\t\tconst newPDFName = pdfFile.name;\n\n\t\tconst state = getState();\n\t\tconst currentPDFName = pdf.selectors.getPDFName(state);\n\n\t\tconst documentDB = db.selectors.getAll(state);\n\n\t\tdb.actions.refreshDB(dispatch, state);\n\n\t\tdispatch(pdf.actions.pdfUpload(pdfFile));\n\n\t\t// if the uploaded pdf is the same as the active one, then we just reloaded the app (lost the pdf)\n\t\t// and dont need load data (loading data would lead to overwrite because of the syncing order)\n\t\t//TODO: make the sync between documentDB and active document more explicit, right now I just sync when a PDF is uploaded\n\t\tif (newPDFName === currentPDFName) {\n\t\t\treturn;\n\t\t}\n\t\tconst newDocumentData = documentDB[newPDFName];\n\t\tif (newDocumentData) {\n\t\t\treplaceActiveAppState(dispatch, newDocumentData);\n\t\t} else {\n\t\t\tresetActiveAppState(dispatch);\n\t\t}\n\t};\n};\n\nexport const loadSavedDocument = (document: string) => {\n\treturn (dispatch: Dispatch, getState: Function) => {\n\t\tconst state = getState();\n\t\tconst currentPDFName = pdf.selectors.getPDFName(state);\n\t\tconst pdfFile = pdf.selectors.getPDF(state);\n\n\t\tconst documentDB = db.selectors.getAll(state);\n\n\t\tdb.actions.refreshDB(dispatch, state);\n\n\t\tconst newDocumentData = documentDB[document];\n\t\t// if no pdf exists and no current pdf name then the document dataset was loaded into an empty ClayMemory,\n\t\t// then we need to set the name\n\t\tconst inputName = !!!pdfFile && !!!currentPDFName ? \"\" : currentPDFName;\n\t\treplaceActiveAppState(dispatch, newDocumentData, inputName);\n\t};\n};\n\nexport const deleteActiveDocument = () => {\n\treturn (dispatch: Dispatch, getState: Function) => {\n\t\tresetActiveAppState(dispatch);\n\t\tconst state = getState();\n\t\tconst activeDocument = pdf.selectors.getPDFName(state);\n\t\tdispatch(db.actions.removeFromDocumentDB(activeDocument as string));\n\t};\n};\n\nexport const deleteDocument = (document: string) => {\n\treturn (dispatch: any, getState: Function) => {\n\t\tconst state = getState();\n\t\tconst activeDocument = pdf.selectors.getPDFName(state);\n\t\tif (activeDocument && activeDocument === document) {\n\t\t\tdispatch(deleteActiveDocument());\n\t\t} else {\n\t\t\tdispatch(db.actions.removeFromDocumentDB(document));\n\t\t}\n\t};\n};\n","export const NAME = \"displayData\";\n","import { DisplayData, View } from \"./model\";\nimport { simpleReducer } from \"../../shared/utils\";\nimport { CaseReducer, createSlice, PayloadAction } from \"@reduxjs/toolkit\";\nimport { NAME } from \"./constants\";\n\nconst initialState: DisplayData = {\n\twindowMeasurements: null,\n\ttopOffset: 0,\n\tcurrentView: View.RiverMaterial,\n};\n\nconst topOffset: CaseReducer<DisplayData, PayloadAction<number>> = simpleReducer(\"topOffset\");\nconst windowMeasurements: CaseReducer<\n\tDisplayData,\n\tPayloadAction<{ width: number; height: number } | null>\n> = simpleReducer(\"windowMeasurements\");\nconst currentView: CaseReducer<DisplayData, PayloadAction<View>> = simpleReducer(\"currentView\");\n\nconst displaySlice = createSlice({\n\tname: NAME,\n\tinitialState,\n\treducers: {\n\t\ttopOffset,\n\t\twindowMeasurements,\n\t\tcurrentView,\n\t},\n});\n\nexport const { actions } = displaySlice;\n\nexport default displaySlice;\n","import { useEffect, useLayoutEffect } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { debounce } from \"throttle-debounce\";\nimport { actions } from \"../slice\";\n\nexport const HTMLElementMeasurer = () => {\n\tconst dispatch = useDispatch();\n\n\tconst measure = debounce(50, () => {\n\t\tconst htmlElement = document.documentElement;\n\t\tconst currentWidth = htmlElement.clientWidth;\n\t\tconst currentHeight = htmlElement.clientHeight;\n\t\tdispatch(actions.windowMeasurements({ width: currentWidth, height: currentHeight }));\n\t});\n\n\tuseLayoutEffect(() => {\n\t\t//first measurement\n\t\tmeasure();\n\t}, [measure]);\n\n\tuseEffect(() => {\n\t\twindow.addEventListener(\"resize\", measure);\n\t\treturn () => {\n\t\t\twindow.removeEventListener(\"resize\", measure);\n\t\t};\n\t});\n\n\treturn null;\n};\n","import { createSelector } from \"reselect\";\nimport { DisplayData } from \"./model\";\nimport { NAME } from \"./constants\";\n\nexport const getAll = (state: any): DisplayData => state[NAME];\n\nexport const getWindowMeasurements = createSelector(getAll, (state) => state.windowMeasurements);\n\nexport const getTopOffset = createSelector(getAll, (state) => state.topOffset);\n\nexport const getCurrentView = createSelector(getAll, (state) => state.currentView);\n","import React from \"react\";\nimport { Divider, Grid } from \"@material-ui/core\";\nimport river from \"../../../river\";\nimport { useSelector } from \"react-redux\";\nimport { getWindowMeasurements } from \"../../selectors\";\nimport pdf from \"../../../pdf\";\n\n//TODO: replace this with Material-UI breakpoints\nexport const RiverMultiplier = 0.35;\nexport const pairTopBottomPadding = 20;\n\nconst RiverPairItem = ({\n\triverID,\n\tmaterialHeight,\n\tmaterialWidth,\n}: {\n\triverID: string;\n\tmaterialHeight: number;\n\tmaterialWidth: number;\n}) => {\n\treturn (\n\t\t<div style={{ maxWidth: materialWidth * RiverMultiplier }}>\n\t\t\t<river.components.CardRiver riverID={riverID} materialHeight={materialHeight}></river.components.CardRiver>\n\t\t</div>\n\t);\n};\n\nexport const RiverMaterialPair = ({\n\tindex,\n\tdata,\n\tstyle,\n}: {\n\tindex: number;\n\tdata: {\n\t\tmaterialHeights: Map<number, number>;\n\t};\n\tstyle: any;\n}) => {\n\tconst pageNumber = index + 1;\n\tconst riverID = river.model.pageNumberToRiverMakeUpID(pageNumber);\n\tconst { materialHeights } = data;\n\tconst showRiver = useSelector(river.selectors.getRiverShowState);\n\tconst showMaterial = useSelector(pdf.selectors.getPDFShowStatus);\n\n\tconst width = useSelector(getWindowMeasurements)?.width as number;\n\n\treturn (\n\t\t<div style={{ ...style }}>\n\t\t\t<river.components.SwitchActiveRiver riverID={riverID}>\n\t\t\t\t<Grid container justify=\"space-between\" direction=\"row\" alignItems=\"flex-start\">\n\t\t\t\t\t<Grid item hidden={showRiver === \"HIDE\"}>\n\t\t\t\t\t\t<RiverPairItem\n\t\t\t\t\t\t\triverID={riverID}\n\t\t\t\t\t\t\tmaterialHeight={materialHeights.get(pageNumber) as number}\n\t\t\t\t\t\t\tmaterialWidth={width}\n\t\t\t\t\t\t></RiverPairItem>\n\t\t\t\t\t</Grid>\n\n\t\t\t\t\t<Grid item hidden={showMaterial === \"HIDE\"}>\n\t\t\t\t\t\t<pdf.components.PDFPage pageNumber={pageNumber} materialWidth={width}></pdf.components.PDFPage>\n\t\t\t\t\t</Grid>\n\t\t\t\t</Grid>\n\t\t\t</river.components.SwitchActiveRiver>\n\t\t\t<Divider style={{ marginTop: pairTopBottomPadding / 2 }}></Divider>\n\t\t</div>\n\t);\n};\n","import { RefObject, useEffect } from \"react\";\nimport { VariableSizeList } from \"react-window\";\nimport { getCurrentView } from \"../../selectors\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport river from \"../../../river\";\nimport { View } from \"../../model\";\nimport { actions } from \"../../slice\";\nimport pdf from \"../../../pdf\";\n\nexport const ListScrollControl = ({ listRef }: { listRef: RefObject<VariableSizeList> }) => {\n\tconst currentView = useSelector(getCurrentView);\n\n\tconst scrollToPage = useSelector(pdf.selectors.getScrollToPage);\n\tconst currentPage = useSelector(pdf.selectors.getCurrentPage);\n\tconst riverOriginRequest = useSelector(river.selectors.getOriginRequest);\n\tuseEffect(() => {\n\t\tlistRef.current?.scrollToItem(currentPage - 1, \"start\");\n\t}, []);\n\n\tconst dispatch = useDispatch();\n\n\tuseEffect(() => {\n\t\tif ((riverOriginRequest || scrollToPage) && currentView !== View.RiverMaterial) {\n\t\t\tdispatch(actions.currentView(View.RiverMaterial));\n\t\t}\n\n\t\tif (riverOriginRequest) {\n\t\t\tlistRef.current?.scrollToItem(riverOriginRequest.page - 1, \"auto\");\n\t\t\tdispatch(pdf.actions.spanOrigin(riverOriginRequest));\n\t\t\tdispatch(pdf.actions.pageUpdate({ page: riverOriginRequest.page, shouldScroll: false }));\n\t\t\tdispatch(river.actions.riverOriginRequest(null));\n\t\t\treturn;\n\t\t}\n\n\t\tif (scrollToPage) {\n\t\t\tlistRef.current?.scrollToItem(scrollToPage - 1, \"start\");\n\t\t\tdispatch(pdf.actions.pageUpdate({ page: scrollToPage, shouldScroll: false }));\n\t\t}\n\t}, [dispatch, listRef, scrollToPage, riverOriginRequest, currentView]);\n\n\treturn null;\n};\n","import React, { RefObject, useRef, Fragment, useEffect } from \"react\";\nimport { pdfjs } from \"react-pdf\";\nimport { VariableSizeList } from \"react-window\";\nimport { pairTopBottomPadding, RiverMaterialPair } from \"./RiverMaterialPair\";\nimport { CachedPageDimensions } from \"../../../pdf/components/Document/PDFDocument\";\nimport { getTopOffset, getWindowMeasurements } from \"../../selectors\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { ListScrollControl } from \"./ListScrollControl\";\nimport pdf from \"../../../pdf\";\n\nconst calculateMaterialHeight = (\n\tpageNumber: number,\n\tcachedPageDimensions: CachedPageDimensions,\n\twindowWidth: number\n) => {\n\tconst pageDims = cachedPageDimensions.get(pageNumber) as [number, number];\n\tconst materialWidth = windowWidth * pdf.constants.MaterialMultiplier;\n\n\tconst userSpaceUnitWidth = pageDims[0];\n\tconst pixelPerUserSpaceUnit = materialWidth / userSpaceUnitWidth;\n\tconst materialHeight = pageDims[1] * pixelPerUserSpaceUnit;\n\n\tconst extraSpaceBetweenMaterialPages = 20;\n\treturn materialHeight + extraSpaceBetweenMaterialPages;\n};\n\nconst Resetter = ({\n\tlistRef,\n\tmaterialHeights,\n}: {\n\tlistRef: RefObject<VariableSizeList>;\n\tmaterialHeights: Map<number, number>;\n}) => {\n\tconst ref = useRef(materialHeights);\n\n\tuseEffect(() => {\n\t\tif (materialHeights !== ref.current) {\n\t\t\tlistRef.current?.resetAfterIndex(0);\n\t\t\tref.current = materialHeights;\n\t\t}\n\t});\n\n\treturn null;\n};\n\nexport const RiverMaterialPairList = ({\n\tpdfProxyRef,\n\tcachedPageDimensions,\n}: {\n\tpdfProxyRef: RefObject<pdfjs.PDFDocumentProxy | undefined>;\n\tcachedPageDimensions: CachedPageDimensions;\n}) => {\n\tconst listRef = useRef<VariableSizeList>();\n\n\tconst windowMeasurements = useSelector(getWindowMeasurements);\n\tconst materialHeights = windowMeasurements\n\t\t? Array.from(cachedPageDimensions.keys()).reduce((prev, pageNumber) => {\n\t\t\t\tprev.set(pageNumber, calculateMaterialHeight(pageNumber, cachedPageDimensions, windowMeasurements.width));\n\t\t\t\treturn prev;\n\t\t  }, new Map<number, number>())\n\t\t: undefined;\n\n\tconst dispatch = useDispatch();\n\tconst topOffset = useSelector(getTopOffset);\n\n\treturn (\n\t\t<Fragment>\n\t\t\t{windowMeasurements && materialHeights && (\n\t\t\t\t<VariableSizeList\n\t\t\t\t\theight={windowMeasurements.height - topOffset}\n\t\t\t\t\titemCount={(pdfProxyRef.current as pdfjs.PDFDocumentProxy).numPages}\n\t\t\t\t\titemSize={(index: number) => (materialHeights.get(index + 1) as number) + pairTopBottomPadding}\n\t\t\t\t\titemData={{\n\t\t\t\t\t\tmaterialHeights,\n\t\t\t\t\t}}\n\t\t\t\t\tref={listRef as RefObject<VariableSizeList>}\n\t\t\t\t\twidth=\"100%\"\n\t\t\t\t\tonItemsRendered={(props) => {\n\t\t\t\t\t\t//TODO: find way to switch the page if it is halfway in sight\n\t\t\t\t\t\tdispatch(pdf.actions.pageUpdate({ page: props.visibleStopIndex + 1, shouldScroll: false }));\n\t\t\t\t\t}}\n\t\t\t\t>\n\t\t\t\t\t{RiverMaterialPair}\n\t\t\t\t</VariableSizeList>\n\t\t\t)}\n\t\t\t{materialHeights && (\n\t\t\t\t<Resetter listRef={listRef as RefObject<VariableSizeList>} materialHeights={materialHeights}></Resetter>\n\t\t\t)}\n\t\t\t<ListScrollControl listRef={listRef as RefObject<VariableSizeList>}></ListScrollControl>\n\t\t</Fragment>\n\t);\n};\n","import { Grid } from \"@material-ui/core\";\nimport React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { incrementer } from \"../../../../shared/utils\";\nimport river from \"../../../river\";\nimport { getNonEmptyRiverIDsSorted } from \"../../../river/selectors\";\nimport { getWindowMeasurements, getTopOffset } from \"../../selectors\";\n\nconst ExplorerRiver = ({ riverID }: { riverID: string }) => {\n\tconst windowMeasurements = useSelector(getWindowMeasurements);\n\tconst topOffset = useSelector(getTopOffset);\n\n\treturn windowMeasurements && topOffset ? (\n\t\t<div style={{ marginBottom: \"8px\", marginTop: \"4px\" }}>\n\t\t\t<river.components.CardRiver\n\t\t\t\triverID={riverID}\n\t\t\t\tmaterialHeight={(windowMeasurements?.height as number) - topOffset - 10}\n\t\t\t></river.components.CardRiver>\n\t\t</div>\n\t) : null;\n};\n\nexport const RiverExplorer = () => {\n\tconst riverIDs = useSelector(getNonEmptyRiverIDsSorted);\n\tconst increment = incrementer();\n\treturn (\n\t\t<Grid container justify=\"space-evenly\" alignItems=\"center\" spacing={2} style={{ width: \"100%\", height: \"100%\" }}>\n\t\t\t{riverIDs.map((id) => (\n\t\t\t\t<Grid item xs={4} key={increment()}>\n\t\t\t\t\t<river.components.SwitchActiveRiver riverID={id}>\n\t\t\t\t\t\t<ExplorerRiver riverID={id}></ExplorerRiver>\n\t\t\t\t\t</river.components.SwitchActiveRiver>\n\t\t\t\t</Grid>\n\t\t\t))}\n\t\t</Grid>\n\t);\n};\n//TODO: make error-message if jump to is executed without uploading a pdf\n","import React, { Fragment } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport pdf from \"../../../pdf\";\nimport selection from \"../../../selection\";\nimport { View } from \"../../model\";\nimport { getCurrentView } from \"../../selectors\";\nimport { RiverMaterialPairList } from \"../RiverMaterialPairList/RiverMaterialPairList\";\nimport { RiverExplorer } from \"./RiverExplorer\";\n\nexport const Display = () => {\n\tconst currentView = useSelector(getCurrentView);\n\n\t// TODO: cant hide the CardExplorer because the Material UI TextField does not render correctly\n\t// after hidding\n\n\t// TODO: disable CardExplorer until I fix the \"which River is active\" problem for that view\n\treturn (\n\t\t<Fragment>\n\t\t\t<div hidden={currentView !== View.RiverMaterial} style={{ width: \"100%\", height: \"100%\" }}>\n\t\t\t\t<pdf.components.PDFDocument ChildComponent={RiverMaterialPairList}></pdf.components.PDFDocument>\n\t\t\t\t<pdf.components.OriginMarkedSnackbar></pdf.components.OriginMarkedSnackbar>\n\t\t\t</div>\n\n\t\t\t<div hidden={currentView !== View.RiverExplorer} style={{ width: \"100%\", height: \"100%\" }}>\n\t\t\t\t<RiverExplorer></RiverExplorer>\n\t\t\t</div>\n\n\t\t\t{/* {currentView === View.CardExplorer && <CardExplorer></CardExplorer>} */}\n\n\t\t\t<selection.components.ContextMenu></selection.components.ContextMenu>\n\t\t\t<selection.components.SelectionSnackbar></selection.components.SelectionSnackbar>\n\t\t</Fragment>\n\t);\n};\n","import { Card, Tab, Tabs } from \"@material-ui/core\";\nimport React from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { getCurrentView } from \"../../selectors\";\nimport { actions } from \"../../slice\";\n\nexport const ViewTabs = () => {\n\tconst currentView = useSelector(getCurrentView);\n\tconst dispatch = useDispatch();\n\n\tconst handleChange = (_: any, newValue: number) => {\n\t\tdispatch(actions.currentView(newValue));\n\t};\n\n\treturn (\n\t\t<Card>\n\t\t\t<Tabs value={currentView} onChange={handleChange}>\n\t\t\t\t<Tab label=\"River-Material\" />\n\t\t\t\t<Tab label=\"River Explorer\" />\n\t\t\t\t{/* <Tab label=\"Card Explorer\" /> */}\n\t\t\t</Tabs>\n\t\t</Card>\n\t);\n};\n","import * as components from \"./components\";\nimport slice from \"./slice\";\nimport * as selectors from \"./selectors\";\n\nconst { reducer, actions, name } = slice;\n\nexport default { actions, components, name, reducer, selectors };\n","import { useDispatch } from \"react-redux\";\nimport React, { useState } from \"react\";\nimport {\n\tIconButton,\n\tTooltip,\n\tDialog,\n\tDialogTitle,\n\tDialogContent,\n\tDialogContentText,\n\tDialogActions,\n\tButton,\n} from \"@material-ui/core\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport text from \"../../../text\";\nimport { deleteDocument } from \"../../actions\";\n\nconst DeleteDocumentDialogAlert = ({\n\tdocument,\n\thandleClose,\n\topen,\n}: {\n\tdocument: string;\n\thandleClose: () => void;\n\topen: boolean;\n}) => {\n\tconst dispatch = useDispatch();\n\n\treturn (\n\t\t<Dialog\n\t\t\topen={open}\n\t\t\tonClose={handleClose}\n\t\t\taria-labelledby=\"alert-dialog-title\"\n\t\t\taria-describedby=\"alert-dialog-description\"\n\t\t>\n\t\t\t<DialogTitle id=\"alert-dialog-title\">{\"Delete \" + document + \" and all associated card data?\"}</DialogTitle>\n\t\t\t<DialogContent>\n\t\t\t\t<DialogContentText id=\"alert-dialog-description\">This change can not be undone.</DialogContentText>\n\t\t\t</DialogContent>\n\t\t\t<DialogActions>\n\t\t\t\t<Button onClick={handleClose} color=\"primary\">\n\t\t\t\t\tAbort\n\t\t\t\t</Button>\n\t\t\t\t<Button\n\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\tdispatch(deleteDocument(document));\n\t\t\t\t\t\thandleClose();\n\t\t\t\t\t}}\n\t\t\t\t\tcolor=\"primary\"\n\t\t\t\t\tautoFocus\n\t\t\t\t>\n\t\t\t\t\tDelete document and associated card data\n\t\t\t\t</Button>\n\t\t\t</DialogActions>\n\t\t</Dialog>\n\t);\n};\n\n//TODO: deleting the active document leads only to reset it, not really delete it\nexport const DeleteDocumentButton = ({ document }: { document: string }) => {\n\tconst [open, setOpen] = useState(false);\n\n\tconst handleClose = () => {\n\t\tsetOpen(false);\n\t};\n\treturn (\n\t\t<div>\n\t\t\t<Tooltip\n\t\t\t\ttitle={text.constants.deleteDocumentTooltip}\n\t\t\t\tenterDelay={text.constants.defaultEnterDelay}\n\t\t\t\tenterNextDelay={text.constants.defaultEnterNextDelay}\n\t\t\t>\n\t\t\t\t<IconButton\n\t\t\t\t\ttype=\"button\"\n\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\tsetOpen(true);\n\t\t\t\t\t}}\n\t\t\t\t>\n\t\t\t\t\t<DeleteIcon fontSize=\"small\"></DeleteIcon>\n\t\t\t\t</IconButton>\n\t\t\t</Tooltip>\n\t\t\t<DeleteDocumentDialogAlert document={document} open={open} handleClose={handleClose}></DeleteDocumentDialogAlert>\n\t\t</div>\n\t);\n};\n","import { useSelector, useDispatch } from \"react-redux\";\nimport React, { ChangeEvent, Fragment, useRef, MutableRefObject, useState } from \"react\";\nimport {\n\tMenuItem,\n\tButton,\n\tDialogActions,\n\tDialog,\n\tDialogContent,\n\tDialogContentText,\n\tDialogTitle,\n} from \"@material-ui/core\";\nimport PublishIcon from \"@material-ui/icons/Publish\";\nimport db from \"../../../db\";\nimport { DocumentData } from \"../../../db/model\";\nimport pdf from \"../../../pdf\";\nimport { replaceActiveAppState } from \"../../actions\";\n\nexport const InputDataSets = ({ handleClose, label }: any) => {\n\tconst ref: MutableRefObject<null | HTMLInputElement> = useRef(null);\n\n\tconst [file, setFile] = useState<File | undefined>();\n\n\tconst handleDialogClose = () => {\n\t\thandleClose();\n\t\tsetFile(undefined);\n\t};\n\n\treturn (\n\t\t<Fragment>\n\t\t\t<MenuItem\n\t\t\t\tonClick={() => {\n\t\t\t\t\t(ref.current as HTMLInputElement).click();\n\t\t\t\t}}\n\t\t\t>\n\t\t\t\t<Button variant=\"contained\" color=\"primary\" disableElevation startIcon={<PublishIcon></PublishIcon>}>\n\t\t\t\t\t{label}\n\t\t\t\t</Button>\n\t\t\t</MenuItem>\n\t\t\t<input\n\t\t\t\tref={ref}\n\t\t\t\tstyle={{ display: \"none\" }}\n\t\t\t\tonChange={(event: ChangeEvent<HTMLInputElement>) => {\n\t\t\t\t\t// fun fact: uploading a file with the same file-name does not trigger this event\n\t\t\t\t\tconst files = event.target.files;\n\t\t\t\t\tconst file = files ? files[0] : null;\n\t\t\t\t\tif (file) {\n\t\t\t\t\t\tsetFile(file);\n\t\t\t\t\t}\n\t\t\t\t}}\n\t\t\t\ttype=\"file\"\n\t\t\t\taccept=\".txt\"\n\t\t\t/>\n\t\t\t<LoadDataSetsDialogAlert\n\t\t\t\thandleClose={handleDialogClose}\n\t\t\t\topen={!!file}\n\t\t\t\tfile={(file as unknown) as File}\n\t\t\t></LoadDataSetsDialogAlert>\n\t\t</Fragment>\n\t);\n};\n\nconst LoadDataSetsDialogAlert = ({\n\thandleClose,\n\topen,\n\tfile,\n}: {\n\thandleClose: () => void;\n\topen: boolean;\n\tfile: File;\n}) => {\n\tconst dispatch = useDispatch();\n\tconst activeDocument = useSelector(pdf.selectors.getPDFName);\n\tconsole.log(open, file);\n\treturn (\n\t\t<Dialog\n\t\t\topen={open}\n\t\t\tonClose={handleClose}\n\t\t\taria-labelledby=\"alert-dialog-title\"\n\t\t\taria-describedby=\"alert-dialog-description\"\n\t\t>\n\t\t\t<DialogTitle id=\"alert-dialog-title\">{\"Load the uploaded dataset?\"}</DialogTitle>\n\t\t\t<DialogContent>\n\t\t\t\t<DialogContentText id=\"alert-dialog-description\">\n\t\t\t\t\tThis overwrites existing data of the uploaded document-datasets and can not be undone.\n\t\t\t\t</DialogContentText>\n\t\t\t</DialogContent>\n\t\t\t<DialogActions>\n\t\t\t\t<Button onClick={handleClose} color=\"primary\">\n\t\t\t\t\tAbort\n\t\t\t\t</Button>\n\t\t\t\t<Button\n\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\tconst reader = new FileReader();\n\t\t\t\t\t\treader.readAsText(file);\n\t\t\t\t\t\treader.onload = () => {\n\t\t\t\t\t\t\t//TODO: sanitize, escape os new line difference, prepare multimedia cards\n\t\t\t\t\t\t\t//TODO: merge same name-pdfs and think about collision in general\n\t\t\t\t\t\t\t//TODO: merge uploaded state with current-one and dont overwrite\n\t\t\t\t\t\t\tconst uploadedDataSets = JSON.parse(reader.result as string) as DocumentData[];\n\t\t\t\t\t\t\t// if the uploaded dataset corresponds to the current document, overwrite current with uploaded\n\t\t\t\t\t\t\tconst foundDataSet = (uploadedDataSets as DocumentData[]).find(\n\t\t\t\t\t\t\t\t(dbData) => dbData.name === activeDocument\n\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\tdispatch(db.actions.updateDocumentDB(uploadedDataSets));\n\t\t\t\t\t\t\tif (foundDataSet) {\n\t\t\t\t\t\t\t\treplaceActiveAppState(dispatch, foundDataSet);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\thandleClose();\n\t\t\t\t\t\t};\n\t\t\t\t\t}}\n\t\t\t\t\tcolor=\"primary\"\n\t\t\t\t\tautoFocus\n\t\t\t\t>\n\t\t\t\t\tLoad datasets and possibly overwrite existing data\n\t\t\t\t</Button>\n\t\t\t</DialogActions>\n\t\t</Dialog>\n\t);\n};\n","import { useDispatch } from \"react-redux\";\nimport React, { ChangeEvent, Fragment, useRef, MutableRefObject } from \"react\";\nimport { MenuItem, Button } from \"@material-ui/core\";\nimport { loadPDF } from \"../../actions\";\nimport InsertDriveFileIcon from \"@material-ui/icons/InsertDriveFile\";\n//TODO: have way to merge two document-workspaces\nexport const InputDocument = ({ handleClose, label }: any) => {\n\tconst dispatch = useDispatch();\n\n\tconst ref: MutableRefObject<null | HTMLInputElement> = useRef(null);\n\n\treturn (\n\t\t<Fragment>\n\t\t\t<MenuItem\n\t\t\t\tonClick={() => {\n\t\t\t\t\t(ref.current as HTMLInputElement).click();\n\t\t\t\t}}\n\t\t\t>\n\t\t\t\t<Button\n\t\t\t\t\tvariant=\"contained\"\n\t\t\t\t\tcolor=\"primary\"\n\t\t\t\t\tdisableElevation\n\t\t\t\t\tstartIcon={<InsertDriveFileIcon></InsertDriveFileIcon>}\n\t\t\t\t>\n\t\t\t\t\t{label}\n\t\t\t\t</Button>\n\t\t\t</MenuItem>\n\t\t\t<input\n\t\t\t\tref={ref}\n\t\t\t\tstyle={{ display: \"none\" }}\n\t\t\t\tonChange={(event: ChangeEvent<HTMLInputElement>) => {\n\t\t\t\t\tconst files = event.target.files;\n\t\t\t\t\tconst pdf = files ? files[0] : null;\n\t\t\t\t\tif (pdf) {\n\t\t\t\t\t\tdispatch(loadPDF(pdf));\n\t\t\t\t\t}\n\t\t\t\t\thandleClose();\n\t\t\t\t}}\n\t\t\t\ttype=\"file\"\n\t\t\t\taccept=\".pdf\"\n\t\t\t/>\n\t\t</Fragment>\n\t);\n};\n","import { useDispatch } from \"react-redux\";\nimport React from \"react\";\nimport { IconButton, Tooltip } from \"@material-ui/core\";\nimport ImportContactsIcon from \"@material-ui/icons/ImportContacts\";\nimport { loadSavedDocument } from \"../../actions\";\nimport text from \"../../../text\";\nexport const LoadDocumentDataButton = ({ document }: { document: string }) => {\n\tconst dispatch = useDispatch();\n\treturn (\n\t\t<Tooltip\n\t\t\ttitle={text.constants.loadSavedDocumentTooltip}\n\t\t\tenterDelay={text.constants.defaultEnterDelay}\n\t\t\tenterNextDelay={text.constants.defaultEnterNextDelay}\n\t\t>\n\t\t\t<IconButton\n\t\t\t\ttype=\"button\"\n\t\t\t\tonClick={() => {\n\t\t\t\t\tdispatch(loadSavedDocument(document));\n\t\t\t\t}}\n\t\t\t>\n\t\t\t\t<ImportContactsIcon fontSize=\"small\"></ImportContactsIcon>\n\t\t\t</IconButton>\n\t\t</Tooltip>\n\t);\n};\n","import React from \"react\";\nimport { Divider, Card, Grid } from \"@material-ui/core\";\nimport { DeleteDocumentButton } from \"./DeleteDocumentButton\";\nimport { LoadDocumentDataButton } from \"./LoadDocumentDataButton\";\n\nconst DocumentOptionItemButtonRow = ({ document }: { document: string }) => {\n\treturn (\n\t\t<Grid container direction=\"row\">\n\t\t\t<Grid item>\n\t\t\t\t<LoadDocumentDataButton document={document}></LoadDocumentDataButton>\n\t\t\t</Grid>\n\n\t\t\t<Grid item>\n\t\t\t\t<Divider orientation=\"vertical\"></Divider>\n\t\t\t</Grid>\n\n\t\t\t<Grid item>\n\t\t\t\t<DeleteDocumentButton document={document}></DeleteDocumentButton>\n\t\t\t</Grid>\n\t\t</Grid>\n\t);\n};\n\nexport const DocumentOptionItem = ({ document }: { document: string }) => {\n\treturn (\n\t\t<Grid container direction=\"row\" justify=\"space-between\" alignItems=\"center\" spacing={1}>\n\t\t\t<Grid item>{document.replace(\".pdf\", \"\")}</Grid>\n\n\t\t\t<Grid item>\n\t\t\t\t<Card variant=\"outlined\">\n\t\t\t\t\t<DocumentOptionItemButtonRow document={document}></DocumentOptionItemButtonRow>\n\t\t\t\t</Card>\n\t\t\t</Grid>\n\t\t</Grid>\n\t);\n};\n","import { useSelector } from \"react-redux\";\nimport React from \"react\";\nimport { Divider, Menu, MenuItem, IconButton, Typography, Card, Grid } from \"@material-ui/core\";\nimport MoreVertIcon from \"@material-ui/icons/MoreVert\";\nimport pdf from \"../../../pdf\";\nimport db from \"../../../db\";\nimport { DeleteDocumentButton } from \"./DeleteDocumentButton\";\nimport text from \"../../../text\";\nimport { incrementer } from \"../../../../shared/utils\";\nimport { InputDataSets } from \"./InputDataSets\";\nimport { InputDocument } from \"./InputDocument\";\nimport { DocumentOptionItem } from \"./DocumentOptionItem\";\n\nconst ActiveDocumentOptionItem = () => {\n\tconst activeDocument = useSelector(pdf.selectors.getPDFName);\n\tconst increment = incrementer();\n\n\treturn (\n\t\t<span>\n\t\t\t{activeDocument && [\n\t\t\t\t<Typography key={increment()} component={\"span\"} variant=\"h6\">\n\t\t\t\t\t{text.constants.activeDocumentText}\n\t\t\t\t</Typography>,\n\t\t\t\t<Grid container direction=\"row\" justify=\"space-between\" alignItems=\"center\" spacing={1}>\n\t\t\t\t\t<Grid item>{activeDocument.replace(\".pdf\", \"\")}</Grid>\n\n\t\t\t\t\t<Grid item>\n\t\t\t\t\t\t<Card variant=\"outlined\">\n\t\t\t\t\t\t\t<DeleteDocumentButton document={activeDocument}></DeleteDocumentButton>\n\t\t\t\t\t\t</Card>\n\t\t\t\t\t</Grid>\n\t\t\t\t</Grid>,\n\t\t\t\t<Divider key={increment()} style={{ marginTop: \"6px\" }}></Divider>,\n\t\t\t]}\n\t\t</span>\n\t);\n};\n\nconst DocumentOptionList = () => {\n\tconst activeDocument = useSelector(pdf.selectors.getPDFName);\n\tconst documents = useSelector(db.selectors.getDocumentNames).filter((doc) => doc !== activeDocument);\n\tconst increment = incrementer();\n\n\treturn (\n\t\t<span>\n\t\t\t{documents.length > 0 && [\n\t\t\t\t<Typography key={increment()} component={\"span\"} variant=\"h6\">\n\t\t\t\t\t{text.constants.existingDataText}\n\t\t\t\t</Typography>,\n\t\t\t\t<Typography key={increment()} component={\"span\"}>\n\t\t\t\t\t<ul style={{ listStyleType: \"square\" }}>\n\t\t\t\t\t\t{documents.map((document) =>\n\t\t\t\t\t\t\tdocument ? (\n\t\t\t\t\t\t\t\t<li key={increment()}>\n\t\t\t\t\t\t\t\t\t<DocumentOptionItem document={document} key={increment()}></DocumentOptionItem>\n\t\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t\t) : null\n\t\t\t\t\t\t)}\n\t\t\t\t\t</ul>\n\t\t\t\t</Typography>,\n\t\t\t\t<Divider key={increment()} style={{ marginTop: \"6px\" }} />,\n\t\t\t]}\n\t\t</span>\n\t);\n};\n\nexport const Options = () => {\n\tconst [anchorEl, setAnchorEl] = React.useState<null | HTMLElement>(null);\n\n\tconst handleClick = (event: React.MouseEvent<HTMLButtonElement>) => {\n\t\tsetAnchorEl(event.currentTarget);\n\t};\n\n\tconst handleClose = () => {\n\t\tsetAnchorEl(null);\n\t};\n\n\treturn (\n\t\t<div>\n\t\t\t<IconButton type=\"button\" onClick={handleClick}>\n\t\t\t\t<MoreVertIcon></MoreVertIcon>\n\t\t\t</IconButton>\n\t\t\t<Menu\n\t\t\t\tid=\"simple-menu\"\n\t\t\t\tanchorEl={anchorEl}\n\t\t\t\tkeepMounted\n\t\t\t\topen={Boolean(anchorEl)}\n\t\t\t\tonClose={handleClose}\n\t\t\t\tMenuListProps={{ style: { paddingLeft: \"8px\", paddingRight: \"8px\" } }}\n\t\t\t>\n\t\t\t\t<ActiveDocumentOptionItem></ActiveDocumentOptionItem>\n\t\t\t\t<DocumentOptionList></DocumentOptionList>\n\t\t\t\t<InputDocument handleClose={handleClose} label={\"Load document\"}></InputDocument>\n\t\t\t\t<Divider />\n\t\t\t\t<MenuItem\n\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\thandleClose();\n\t\t\t\t\t}}\n\t\t\t\t>\n\t\t\t\t\t<db.components.DownloadDBDataButton></db.components.DownloadDBDataButton>\n\t\t\t\t</MenuItem>\n\t\t\t\t<Divider />\n\t\t\t\t<InputDataSets handleClose={handleClose} label={text.constants.uploadDatasetsText}></InputDataSets>\n\t\t\t</Menu>\n\t\t</div>\n\t);\n};\n","import React, { useEffect, useState } from \"react\";\nimport SearchBar from \"material-ui-search-bar\";\nimport river from \"../../river\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Grid } from \"@material-ui/core\";\nimport pdf from \"../../pdf\";\n\n//TODO: react-pdf alignment is broken for some pdfs and generally for non-body text,\n// seems to be connected to choosing the wrong font\n// font is chosen per page not per item (e.g. body-font for heading/cursive)\n// needs to be fixed before making search\n// otherwise coloring findings not possible / good enough\n\n//TODO: make search for PDF (right now this would need some work to find the correct text-node and partially color it)\n// https://github.com/wojtekmaj/react-pdf/issues/212\n// counter of found words\n// count also in PDF\n// PDFPageProxy\n// getTextContent\n// if not rendered\n// count via Proxy\n// if rendered count via CustomRenderer\n// two dicts to hold which one\n// make window with next/last found\n// current renderer: multiline matches is not support / matches that cross textItems\n// strg +f should jump to the searchbox? Only if I replace the search fully\n// upper / lower case\n\nexport const ClayMemorySearchBar = () => {\n\tconst dispatch = useDispatch();\n\n\tconst contentString = useSelector(river.selectors.getRiverContentFilter);\n\n\tconst [state, setState] = useState(contentString);\n\n\tuseEffect(() => {\n\t\tif (state !== contentString) {\n\t\t\tsetState(contentString);\n\t\t}\n\t}, [contentString]);\n\n\tconst [searchFocus, setSearchFocus] = useState(\"cards\");\n\n\tconst onChangeCards = (newValue: string) => {\n\t\t// auto-reset on empty\n\t\tif (newValue === \"\") dispatch(river.actions.riverContentFilter(\"\"));\n\t\tsetState(newValue);\n\t};\n\tconst onCancelSearchCards = () => {\n\t\tdispatch(river.actions.riverContentFilter(\"\"));\n\t};\n\tconst onRequestSearchCards = () => dispatch(river.actions.riverContentFilter(state));\n\n\tconst onChangeDocument = (newValue: string) => {\n\t\t// auto-reset on empty\n\t\tif (newValue === \"\") dispatch(pdf.actions.documentSearch(\"\"));\n\t\tsetState(newValue);\n\t};\n\tconst onCancelSearchDocument = () => {\n\t\tdispatch(pdf.actions.documentSearch(\"\"));\n\t};\n\tconst onRequestSearchDocument = () => dispatch(pdf.actions.documentSearch(state));\n\n\tconst onChange = searchFocus === \"cards\" ? onChangeCards : onChangeDocument;\n\tconst onCancelSearch = searchFocus === \"cards\" ? onCancelSearchCards : onCancelSearchDocument;\n\tconst onRequestSearch = searchFocus === \"cards\" ? onRequestSearchCards : onRequestSearchDocument;\n\n\tconst chooseFocus = (chosenFocus: string) => {\n\t\tsetSearchFocus(chosenFocus);\n\t\tif (chosenFocus === \"cards\") {\n\t\t\tonCancelSearchDocument();\n\t\t} else {\n\t\t\tonCancelSearchCards();\n\t\t}\n\t\tsetState(\"\");\n\t};\n\n\t//TODO: search in other rivers/same river when composing to show similar cards (like in the Anki Addon)\n\treturn (\n\t\t<Grid container direction=\"row\" alignItems=\"center\" spacing={1}>\n\t\t\t{/* <Grid item>\n\t\t\t\t<Select\n\t\t\t\t\tvariant=\"outlined\"\n\t\t\t\t\tcolor=\"secondary\"\n\t\t\t\t\tnative\n\t\t\t\t\tvalue={searchFocus === \"cards\" ? \"Filter cards\" : \"Search document\"}\n\t\t\t\t\tonChange={(\n\t\t\t\t\t\tevent: React.ChangeEvent<{\n\t\t\t\t\t\t\tname?: string | undefined;\n\t\t\t\t\t\t\tvalue: unknown;\n\t\t\t\t\t\t}>\n\t\t\t\t\t) => {\n\t\t\t\t\t\tchooseFocus(event.target.value === \"Search document\" ? \"document\" : \"cards\");\n\t\t\t\t\t}}\n\t\t\t\t>\n\t\t\t\t\t<option>Filter cards</option>\n\t\t\t\t\t<option>Search document</option>\n\t\t\t\t</Select>\n\t\t\t</Grid> */}\n\t\t\t<Grid item>\n\t\t\t\t<SearchBar\n\t\t\t\t\tvalue={state}\n\t\t\t\t\tplaceholder={searchFocus === \"cards\" ? \"Filter cards\" : \"Search document\"}\n\t\t\t\t\tonChange={onChange}\n\t\t\t\t\tonCancelSearch={onCancelSearch}\n\t\t\t\t\tonRequestSearch={onRequestSearch}\n\t\t\t\t\tcancelOnEscape={true}\n\t\t\t\t/>\n\t\t\t</Grid>\n\t\t</Grid>\n\t);\n};\n","import React from \"react\";\nimport { IconButton, Card, Divider, Grid, Tooltip } from \"@material-ui/core\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport UndoIcon from \"@material-ui/icons/Undo\";\nimport RedoIcon from \"@material-ui/icons/Redo\";\nimport text from \"../../text\";\nimport { ActionCreators } from \"redux-undo\";\nimport cards from \"../../cards\";\n\nconst UndoButton = () => {\n\tconst dispatch = useDispatch();\n\tconst cardsHasPast = useSelector(cards.selectors.hasPast);\n\n\t//tooltip needs non-disabled child component\n\treturn (\n\t\t<Tooltip\n\t\t\ttitle={text.constants.undoTooltip}\n\t\t\tenterDelay={text.constants.defaultEnterDelay}\n\t\t\tenterNextDelay={text.constants.defaultEnterNextDelay}\n\t\t>\n\t\t\t<span>\n\t\t\t\t<IconButton\n\t\t\t\t\ttype=\"button\"\n\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\tdispatch(ActionCreators.undo());\n\t\t\t\t\t}}\n\t\t\t\t\tdisabled={!cardsHasPast}\n\t\t\t\t>\n\t\t\t\t\t<UndoIcon></UndoIcon>\n\t\t\t\t</IconButton>\n\t\t\t</span>\n\t\t</Tooltip>\n\t);\n};\nconst RedoButton = () => {\n\tconst dispatch = useDispatch();\n\tconst cardsHasFuture = useSelector(cards.selectors.hasFuture);\n\treturn (\n\t\t<Tooltip\n\t\t\ttitle={text.constants.redoTooltip}\n\t\t\tenterDelay={text.constants.defaultEnterDelay}\n\t\t\tenterNextDelay={text.constants.defaultEnterNextDelay}\n\t\t>\n\t\t\t<span>\n\t\t\t\t<IconButton\n\t\t\t\t\ttype=\"button\"\n\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\tdispatch(ActionCreators.redo());\n\t\t\t\t\t}}\n\t\t\t\t\tdisabled={!cardsHasFuture}\n\t\t\t\t>\n\t\t\t\t\t<RedoIcon></RedoIcon>\n\t\t\t\t</IconButton>\n\t\t\t</span>\n\t\t</Tooltip>\n\t);\n};\n\nexport const UndoRedoCard = () => {\n\treturn (\n\t\t<Card variant=\"outlined\">\n\t\t\t<Grid container direction=\"row\">\n\t\t\t\t<Grid item>\n\t\t\t\t\t<UndoButton></UndoButton>\n\t\t\t\t</Grid>\n\t\t\t\t<Grid item>\n\t\t\t\t\t<Divider orientation=\"vertical\"></Divider>\n\t\t\t\t</Grid>\n\t\t\t\t<Grid item>\n\t\t\t\t\t<RedoButton></RedoButton>\n\t\t\t\t</Grid>\n\t\t\t</Grid>\n\t\t</Card>\n\t);\n};\n","import river from \"../../river\";\nimport React from \"react\";\nimport { IconButton, Menu, Typography, Grid, Card } from \"@material-ui/core\";\nimport VisibilityIcon from \"@material-ui/icons/Visibility\";\nimport pdf from \"../../pdf\";\n\nexport const ShowHideButton = () => {\n\tconst [anchorEl, setAnchorEl] = React.useState<null | HTMLElement>(null);\n\n\tconst handleClick = (event: React.MouseEvent<HTMLButtonElement>) => {\n\t\tsetAnchorEl(event.currentTarget);\n\t};\n\n\tconst handleClose = () => {\n\t\tsetAnchorEl(null);\n\t};\n\n\treturn (\n\t\t<div>\n\t\t\t<IconButton type=\"button\" onClick={handleClick}>\n\t\t\t\t<VisibilityIcon></VisibilityIcon>\n\t\t\t</IconButton>\n\t\t\t<Menu\n\t\t\t\tanchorEl={anchorEl}\n\t\t\t\tkeepMounted\n\t\t\t\topen={Boolean(anchorEl)}\n\t\t\t\tonClose={handleClose}\n\t\t\t\tMenuListProps={{ style: { paddingLeft: \"8px\", paddingRight: \"8px\" } }}\n\t\t\t>\n\t\t\t\t<Typography variant=\"h6\">Show:</Typography>\n\t\t\t\t<Grid container direction=\"row\" justify=\"space-between\" spacing={1}>\n\t\t\t\t\t<Grid item>\n\t\t\t\t\t\t<Card variant=\"outlined\" style={{ paddingLeft: \"4px\", paddingRight: \"4px\" }}>\n\t\t\t\t\t\t\t<river.components.RiverContentFormGroup></river.components.RiverContentFormGroup>\n\t\t\t\t\t\t</Card>\n\t\t\t\t\t</Grid>\n\n\t\t\t\t\t<Grid item>\n\t\t\t\t\t\t<Card variant=\"outlined\" style={{ padding: \"4px\" }}>\n\t\t\t\t\t\t\t<Grid container direction=\"column\" spacing={1}>\n\t\t\t\t\t\t\t\t<Grid item>\n\t\t\t\t\t\t\t\t\t<river.components.ShowRiverCheckbox></river.components.ShowRiverCheckbox>\n\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t\t<Grid item>\n\t\t\t\t\t\t\t\t\t<pdf.components.ShowMaterialCheckbox></pdf.components.ShowMaterialCheckbox>\n\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t</Card>\n\t\t\t\t\t</Grid>\n\t\t\t\t</Grid>\n\t\t\t</Menu>\n\t\t</div>\n\t);\n};\n","import display from \"../../display\";\nimport React, { useLayoutEffect, useRef } from \"react\";\nimport { AppBar, Toolbar, Grid, Typography } from \"@material-ui/core\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Options } from \"./Options/Options\";\nimport { ClayMemorySearchBar } from \"./ClayMemorySearchBar\";\nimport { UndoRedoCard } from \"./UndoRedoButtons\";\nimport { ShowHideButton } from \"./ShowHideButton\";\nimport pdf from \"../../pdf\";\n\n//TODO: download/load csv for Anki\nexport const ControlBar = () => {\n\tconst materialName = useSelector(pdf.selectors.getPDFName);\n\tconst offset = useSelector(display.selectors.getTopOffset);\n\tconst ref = useRef<null | HTMLDivElement>(null);\n\n\tconst dispatch = useDispatch();\n\n\tuseLayoutEffect(() => {\n\t\tif (ref.current) {\n\t\t\tconst currentBottom = ref.current.getBoundingClientRect().bottom;\n\t\t\tif (currentBottom !== offset) dispatch(display.actions.topOffset(currentBottom));\n\t\t}\n\t}, [ref, dispatch, offset]);\n\n\treturn (\n\t\t<pdf.components.PageKeyboardControl>\n\t\t\t<AppBar ref={ref} position=\"sticky\">\n\t\t\t\t<Toolbar variant=\"regular\" disableGutters>\n\t\t\t\t\t<Grid container direction=\"row\" alignItems=\"center\" justify=\"space-between\">\n\t\t\t\t\t\t<Grid item xs={6}>\n\t\t\t\t\t\t\t<Grid container direction=\"row\" alignItems=\"center\" spacing={1} style={{ paddingLeft: \"4px\" }}>\n\t\t\t\t\t\t\t\t<Grid item style={{ maxWidth: \"15%\" }}>\n\t\t\t\t\t\t\t\t\t<pdf.components.PageChooser></pdf.components.PageChooser>\n\t\t\t\t\t\t\t\t</Grid>\n\n\t\t\t\t\t\t\t\t<Grid item>\n\t\t\t\t\t\t\t\t\t<pdf.components.PageNavigation></pdf.components.PageNavigation>\n\t\t\t\t\t\t\t\t</Grid>\n\n\t\t\t\t\t\t\t\t<Grid item>\n\t\t\t\t\t\t\t\t\t<UndoRedoCard></UndoRedoCard>\n\t\t\t\t\t\t\t\t</Grid>\n\n\t\t\t\t\t\t\t\t<Grid item>\n\t\t\t\t\t\t\t\t\t<display.components.ViewTabs></display.components.ViewTabs>\n\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t</Grid>\n\n\t\t\t\t\t\t<Grid item xs={2}>\n\t\t\t\t\t\t\t<Grid container justify=\"center\">\n\t\t\t\t\t\t\t\t<Grid item style={{ overflowX: \"auto\" }}>\n\t\t\t\t\t\t\t\t\t<Typography variant=\"subtitle1\">{materialName?.replace(\".pdf\", \"\")}</Typography>\n\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t</Grid>\n\n\t\t\t\t\t\t<Grid item xs={4}>\n\t\t\t\t\t\t\t<Grid container direction=\"row\" justify=\"flex-end\" alignItems=\"center\">\n\t\t\t\t\t\t\t\t<Grid item>\n\t\t\t\t\t\t\t\t\t<ClayMemorySearchBar></ClayMemorySearchBar>\n\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t\t<Grid item>\n\t\t\t\t\t\t\t\t\t<ShowHideButton></ShowHideButton>\n\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t\t<Grid item>\n\t\t\t\t\t\t\t\t\t<Options></Options>\n\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t</Grid>\n\t\t\t\t\t</Grid>\n\t\t\t\t</Toolbar>\n\t\t\t</AppBar>\n\t\t</pdf.components.PageKeyboardControl>\n\t);\n};\n","import * as actions from \"./actions\";\nimport * as components from \"./components\";\n\nexport default { actions, components };\n","import React from \"react\";\nimport Grid from \"@material-ui/core/Grid\";\nimport control from \"../modules/control\";\nimport display from \"../modules/display\";\n\nexport function ReaderScene() {\n\treturn (\n\t\t<div>\n\t\t\t<display.components.HTMLElementMeasurer></display.components.HTMLElementMeasurer>\n\t\t\t<Grid\n\t\t\t\tcontainer\n\t\t\t\tjustify=\"center\"\n\t\t\t\tdirection=\"column\"\n\t\t\t\talignItems=\"stretch\"\n\t\t\t\tstyle={{ height: \"100%\", width: \"100%\" }}\n\t\t\t>\n\t\t\t\t<Grid item>\n\t\t\t\t\t<control.components.ControlBar></control.components.ControlBar>\n\t\t\t\t</Grid>\n\n\t\t\t\t<Grid item>\n\t\t\t\t\t<display.components.Display></display.components.Display>\n\t\t\t\t</Grid>\n\t\t\t</Grid>\n\t\t</div>\n\t);\n}\n","import storage from \"redux-persist/lib/storage\"; // defaults to localStorage for web\nimport { createTransform } from \"redux-persist\";\nimport pdf from \"./modules/pdf\";\nimport { PDFState } from \"./modules/pdf/model\";\n\n// to get the correct object with reselect, I added .present to all getAll that belong do undoable modules\n\nconst removePDF = (state: any) => {\n\treturn { ...state, pdf: null };\n};\n\nconst pdfTransform = createTransform(\n\t(inboundState: PDFState) => {\n\t\treturn inboundState;\n\t},\n\t(outboundState): PDFState => {\n\t\treturn removePDF(outboundState);\n\t},\n\t{ whitelist: [pdf.name] }\n);\n\nexport const persistConfig = {\n\tkey: \"root\",\n\tstorage,\n\ttransforms: [pdfTransform],\n};\n","import { createStore } from \"redux\";\nimport { applyMiddleware } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport { combineReducers } from \"redux\";\nimport river from \"./modules/river\";\nimport display from \"./modules/display\";\nimport cards from \"./modules/cards\";\nimport { persistStore, persistReducer } from \"redux-persist\";\nimport undoable, { includeAction } from \"redux-undo\";\nimport { persistConfig } from \"./persist\";\nimport db from \"./modules/db\";\nimport selection from \"./modules/selection\";\nimport { composeWithDevTools } from \"redux-devtools-extension/logOnlyInProduction\";\nimport pdf from \"./modules/pdf\";\n\n//TODO: make limit for undo (right now its fine, if we reset on document-upload / reload)\n//TODO: make snackbar for which action is undone/redone\n\nconst undoableCardActions = [\n\tcards.actions.cardPush.type,\n\tcards.actions.cardRemove.type,\n\tcards.actions.cardReplace.type,\n\tcards.actions.cardFieldReplace.type,\n];\n\nconst rootReducer = combineReducers({\n\t[db.name]: db.reducer,\n\t[selection.name]: selection.reducer,\n\t[river.constants.NAME]: undoable(river.reducer, {\n\t\tfilter: includeAction(undoableCardActions),\n\t}),\n\t[cards.name]: undoable(cards.reducer, {\n\t\tfilter: includeAction(undoableCardActions),\n\t}),\n\t[pdf.name]: pdf.reducer,\n\t[display.name]: display.reducer,\n});\n\nconst persistedReducer = persistReducer(persistConfig, rootReducer);\n\nconst composeEnhancers = composeWithDevTools({});\nconst enhancer = composeEnhancers(applyMiddleware(thunk));\n\nexport const store = createStore(persistedReducer, enhancer);\n\nexport const persistor = persistStore(store);\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { ReaderScene } from \"./scene/ReaderScene\";\nimport { Provider } from \"react-redux\";\nimport { store, persistor } from \"./store\";\nimport { PersistGate } from \"redux-persist/es/integration/react\";\n// Load Roboto typeface\nrequire(\"typeface-roboto\");\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<Provider store={store}>\n\t\t\t<PersistGate loading={null} persistor={persistor}>\n\t\t\t\t<ReaderScene></ReaderScene>\n\t\t\t</PersistGate>\n\t\t</Provider>\n\t</React.StrictMode>,\n\tdocument.getElementById(\"root\")\n);\n"],"sourceRoot":""}