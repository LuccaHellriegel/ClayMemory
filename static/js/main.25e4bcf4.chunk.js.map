{"version":3,"sources":["modules/display/constants.ts","modules/display/actionTypes.ts","modules/display/selectors.ts","shared/utils.ts","modules/display/services/span.ts","modules/display/services/materialData.ts","modules/display/actions.ts","modules/display/components/NavigationButtons.tsx","modules/display/components/ShowMaterialButton.tsx","modules/display/components/PageChooser/PageChooser.tsx","modules/focus/constants.ts","modules/focus/actionTypes.ts","modules/focus/selectors.ts","modules/focus/actions.ts","modules/focus/reducer.ts","modules/focus/index.ts","modules/display/components/PDFDocument/PDFDocument.tsx","modules/display/components/MaterialDisplayColumn.tsx","modules/display/reducer.ts","modules/display/index.ts","modules/river/constants.ts","modules/cards/services/config.ts","modules/cards/constants.ts","modules/cards/actionTypes.ts","modules/cards/selectors.ts","modules/cards/actions.ts","modules/cards/reducer.ts","modules/cards/index.ts","modules/river/selectors.ts","modules/river/components/CardRiver/HybridCardField.tsx","modules/river/components/CardRiver/Buttons/DeleteCardButton.tsx","modules/river/components/CardRiver/Buttons/JumpToOriginButton.tsx","modules/river/components/CardRiver/Buttons/GrabForFieldButton.tsx","modules/river/actionTypes.ts","modules/river/actions.ts","modules/river/components/CardRiver/Card.tsx","modules/river/components/CardRiver/toCardGridItemsWithDividers.tsx","modules/river/components/CardRiver/Buttons/AddNoteButton.tsx","modules/river/components/CardRiver/Buttons/AddQAButton.tsx","modules/river/components/CardRiver/CardRiverAccordion.tsx","modules/river/components/CardRiver/ChildCardRiver.tsx","modules/river/model.ts","modules/river/components/SummaryRiver/SummaryRiver.tsx","modules/river/components/SummaryRiver/SummaryRiverView.tsx","modules/river/components/ActiveRiver/ActiveCardRiver.tsx","modules/river/components/ActiveRiver/ActiveRiverColumn.tsx","modules/river/components/ActiveRiver/ActiveRiverView.tsx","modules/river/components/RiverContentFormGroup.tsx","modules/river/reducer.ts","modules/river/index.ts","modules/control/constants.ts","modules/control/selectors.ts","modules/control/actionTypes.ts","modules/control/actions.ts","modules/control/hooks/useEventListener.tsx","modules/creation/constants.ts","modules/creation/actionTypes.ts","modules/creation/selectors.ts","modules/creation/services/transformInputOrigin.ts","modules/creation/actions.ts","modules/creation/reducer.ts","modules/creation/components/CardItems.tsx","modules/creation/components/NewButtons.tsx","modules/creation/components/ContextMenu.tsx","modules/creation/components/SelectionSnackbar.tsx","modules/creation/utils.ts","modules/creation/index.ts","modules/control/services/keyboardControl.ts","modules/control/components/Control.tsx","modules/control/services/mouseControl.ts","modules/control/components/ShowRiverButton.tsx","modules/control/components/Options.tsx","modules/control/components/ControlBar.tsx","modules/control/reducer.ts","modules/control/index.ts","scenes/ReaderScene.tsx","persist.ts","store.ts","index.tsx","../node_modules/pdfjs-dist/build sync"],"names":["NAME","PDF_UPLOADED","MATERIAL_LOADED","DISPLAY_STATUS","PAGE_UPDATE","ZOOM_QUEUE","MATERIAL_DATA","getAll","state","getPDF","createSelector","pdf","getPDFName","pdfName","getRenderCritialData","currentPage","documentRef","getTotalPages","totalPages","getCurrentPage","getPageControlData","getDocumentRef","getMaterialData","materialData","getTimeStamp","materialDataTimeStamp","getMaterialSpans","materialSpans","getSpanIndex","span","indexOf","getMaterialBoundingRects","materialBoundingRects","getDataExists","timestamp","getDisplayStatus","displayStatus","displayStatusIsShow","status","getZoomQueue","zoomQueue","incrementer","counter","curCounter","expandSpan","rect","getBoundingClientRect","container","startingSpans","Array","from","querySelectorAll","length","expandedSpans","spans","boundingRects","exSpan","push","splitExpandedSpans","map","expandSpans","sort","exSpan2","y","pdfUpload","type","t","payload","materialUploaded","event","dispatch","files","target","materialLoaded","tryInterval","tries","ms","func","increment","timeout","setInterval","clearInterval","captureMaterialData","getState","current","startTime","Date","now","curMaterialGroupData","emptyZoomQueue","setPage","page","pageCorrections","newPage","movePage","nextPage","previousPage","toggleDisplayState","displayState","setZoomQueue","spanIndex","zoomToCardOrigin","originSpan","focus","scrollIntoView","behavior","block","inline","PreviousButton","useDispatch","IconButton","onClick","NextButton","ShowMaterialButton","useState","outlined","setOutlined","nonDigitRegEx","PageChooser","useSelector","error","value","toString","userInput","setState","Typography","variant","TextField","onKeyDown","key","preventDefault","submittedValue","parseInt","onChange","possiblePage","trim","match","asInt","validatePageChoice","FOCUS_UPDATE","DISPLAY_FOCUS_UPDATE","getFocus","userFocus","getDisplayFocus","displayFocus","updateFocus","tryUpdateFocus","toggleContextMenuFocus","updateDisplayFocus","initialState","actions","constants","reducer","selectors","actionTypes","pdfjs","GlobalWorkerOptions","workerSrc","version","options","cMapUrl","cMapPacked","PDFDocumentContainer","connect","parentSize","file","onLoadSuccess","numPages","inputRef","onItemClick","pageNumber","width","onRenderSuccess","document","forEach","layer","style","top","left","transform","MaterialDisplayColumnWithSize","withSize","monitorHeight","noPlaceholder","size","hidden","elevation","setElevation","Grid","item","onMouseEnter","onMouseLeave","Paper","createRef","pageSpans","Infinity","components","name","updateContentStrFunctions","REPLACE","_","newStr","APPEND","oldStr","creationFunctions","NOTE","oldConfig","partialUpdateFunction","content","Q","q","A","a","contentStringToConfig","contentStr","creationType","updateType","currentCard","createPartialUpdateContentStrFunction","CARD_UPDATE","CARD_PUSH","CARD_REMOVE","CARD_GOAL","GLOBAL_RESET","present","getLastCardIDNumber","lastCardIDNumber","getCards","cards","getGoalCard","goalCard","cardPush","cardPayload","card","cardID","cardUpdate","updateCardContent","contentString","origin","config","pushCardContent","removeCard","setGoalCard","cardConfig","resetGoalCard","intialState","services","cardObj","getRiverMakeUps","riverMakeUps","getActiveRiverMakeUpID","activeRiverMakeUpID","getPushToRiver","pushToRiverID","getPushToRiverMakeUp","makeUps","id","getActiveRiverMakeUp","getPushToRiverCardIDs","makeUp","cardIDs","getPushToRiverCards","makeUpCardIDs","getActiveRiverCardIDs","getActiveRiverCards","getRiverShowState","riverShowState","riverShowStateIsShow","getHoveredCardData","highlightedCardID","field","highlightedCardField","getSourceCard","sourceCard","getLastRiverIDNumber","lastRiverIDNumber","getRiverContentState","riverContentState","HybridCardField","storeValue","saveChanges","rest","mutableValue","multiline","onBlur","DeleteCardButton","JumpToOriginButton","cardOrigin","display","GrabForFieldButton","isGoalCard","RIVER_SHOW_STATE","RIVER_CONTENT_STATE","RIVER_PUSH_STATE","RIVER_HOVERED_CARD","RIVER_CARD_SOURCE","toggleRiverShowState","setRiverContentState","setPushToRiver","trySetPushToRiver","setHoveredCard","trySetHoveredCard","highlightedCardIDData","setSourceCard","sourceField","trySetSourceCard","resetSourceCard","tryResetSourceCard","borderStyle","border","borderRadius","NoteCard","isHoveredCard","isActiveRiver","undefined","label","backgroundColor","InputLabelProps","color","QACard","direction","spacing","isNullOrUndefined","Card","riverID","GridDivider","Divider","AddNoteButton","AddQAButton","CardRiverAccordion","gridItems","summary","pushToRiver","Accordion","defaultExpanded","AccordionSummary","align","MozUserSelect","WebkitUserSelect","msUserSelect","AccordionDetails","justify","alignItems","ChildCardRiver","riverCards","useMemo","inputCards","filter","reduce","prev","index","arr","toCardGridItemsWithDividers","pageNumberToRiverMakeUpID","SummaryRiver","cardConfigs","Object","values","focusRef","useRef","useEffect","ref","replace","SummaryRiverView","ActiveCardRiver","ActiveRiverColumn","ActiveRiverView","showMaterial","showRiver","GreenCheckbox","withStyles","root","green","checked","props","Checkbox","RiverContentFormGroup","showQAs","showNotes","changeContentState","clickedState","FormGroup","row","FormControlLabel","control","emptyCardRiver","updateStateWithMakeUps","updatedState","deactivateActiveCardRiver","active","removeCardFromRivers","fromEntries","entries","entry","riverMakeUp","activeRiver","oldRiver","getDocumentDB","documentDB","getDocumentNames","db","keys","getDocumentDataSets","getCurrentDBData","river","ARCHIVE_CURRENT_DATA","LOAD_DOCUMENT_DATA_SETS","archiveDBData","dbData","archiveCurrentDBData","fileDownload","require","downloadDBData","documentDataSets","localString","toLocaleString","JSON","stringify","changeDocument","newPDFName","currentPDFName","newDocumentData","ActionCreators","clearHistory","loadDocumentDataSets","useEventListener","eventName","handler","savedHandler","eventListener","addEventListener","removeEventListener","TOGGLE_CONTEXT_MENU","CLOSE_CONTEXT_MENU","OPEN_CONTEXT_MENU","SELECTED_STRING","SELECTED_PARENT","DOCUMENT_POSITION","getContextMenuState","open","getContextMenuRef","menuRef","getContextMenuFullCardsRef","fullCardRef","getContextMenuQARefs","qaRefs","getCurrentSelectionPosition","selectionPosition","getContextMenuInitData","position","getCurrentSelectedString","manuallySelectedString","getCurrentSelectedParent","selectedParentSpan","getCurrentOrigin","selectedParent","transformInputOrigin","sourceOrigin","goalOrigin","toggleContextMenu","closeContextMenu","openContextMenu","grabSelectionForContextMenu","transformedOrigin","isUpdate","selectedString","resetManuallySelectedString","hasNonEmptyOrigin","grabSelectionForSourceMenu","newOrigin","updateManuallySelectedString","str","updateSelectionPosition","x","creationData","noteCardIsEmpty","qaCardIsNotFull","SingleOptionItem","dispatchRiver","MenuItem","QAOptionItem","qaRef","parentMenuOpen","CardConfigItem","NewQACardQ","NewQACardA","NewNoteCard","NewButtons","noteDispatch","qDispatch","aDispatch","ContextMenuContainer","fullCardsRef","openState","qaRefIndex","anchorPosition","nonFullRiverCards","fullRiverCards","Menu","keepMounted","anchorReference","SelectionSnackbar","setOpen","message","Snackbar","anchorOrigin","vertical","horizontal","onClose","reason","action","aria-label","fontSize","contextMenuContainsTargetNode","parentNode","refObject","cur","querySelector","contains","utils","keyEventDispatcher","keyMap","pageControlKeyMap","ArrowLeft","ArrowRight","contextMenuControlKeyMap","creation","doNothing","focusDispatcherMap","DOCUMENT","CONTEXT_MENU","RIVER","CONTROL","RIVER_CONTROL","ControlContainer","keyDownControl","dispatcher","mouseDownControl","mouseUpControl","selection","getSelection","selectedStr","anchorNode","rightClickControl","ShowRiverButton","InputDocument","handleClose","click","accept","InputDataSets","activeDocument","reader","FileReader","readAsText","onload","uploadedDataSets","parse","result","foundDataSet","find","Options","documents","React","anchorEl","setAnchorEl","minWidth","currentTarget","Boolean","UndoButton","undo","RedoButton","redo","ControlBar","AppBar","Toolbar","Tabs","newValue","Tab","orientation","flexItem","useStyles","makeStyles","theme","createStyles","bottom","right","ScrollTop","children","classes","trigger","useScrollTrigger","disableHysteresis","threshold","Zoom","in","anchor","ownerDocument","role","className","ReaderScene","Fab","removeDOMObjectsFromCreationData","inboundState","addDOMObjectsToCreationData","outboundState","creationTransform","createTransform","future","past","whitelist","displayTransform","removeDOMObjectsFromDisplayData","addDOMObjectsToDisplayData","persistConfig","storage","transforms","rootReducer","combineReducers","undoable","includeAction","persistedReducer","persistReducer","enhancer","composeWithDevTools","stateSanitizer","displayData","composeEnhancers","applyMiddleware","thunk","store","createStore","persistor","persistStore","ReactDOM","render","StrictMode","loading","getElementById","webpackEmptyContext","req","e","Error","code","resolve","module","exports"],"mappings":"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","file":"static/js/main.25e4bcf4.chunk.js","sourcesContent":["export const NAME = \"displayData\";\n","import { NAME } from \"./constants\";\n\nexport const PDF_UPLOADED = NAME + \"/PDF_UPLOADED\";\nexport const MATERIAL_LOADED = NAME + \"/MATERIAL_LOADED\";\nexport const DISPLAY_STATUS = NAME + \"/DISPLAY_STATUS\";\nexport const PAGE_UPDATE = NAME + \"/PAGE_UPDATE\";\nexport const ZOOM_QUEUE = NAME + \"/ZOOM_QUEUE\";\nexport const MATERIAL_DATA = NAME + \"/MATERIAL_DATA\";\n","import { createSelector } from \"reselect\";\nimport { DisplayData, MaterialData, MaterialGroupData } from \"./model\";\nimport { NAME } from \"./constants\";\n\nexport const getAll = (state: any): DisplayData => state[NAME];\n\nexport const getPDF = createSelector(getAll, (state: DisplayData) => {\n\treturn { pdf: state.pdf ? state.pdf : null };\n});\n\nexport const getPDFName = createSelector(getAll, (state) => state.pdfName);\n\nexport const getRenderCritialData = createSelector(getAll, (state: DisplayData) => {\n\treturn {\n\t\tpdf: state.pdf,\n\t\tcurrentPage: state.currentPage,\n\t\tdocumentRef: state.documentRef,\n\t};\n});\n\nexport const getTotalPages = createSelector(getAll, (state: DisplayData) => state.totalPages);\n\nexport const getCurrentPage = createSelector(getAll, (state: DisplayData) => state.currentPage);\n\nexport const getPageControlData = createSelector(\n\tgetTotalPages,\n\tgetCurrentPage,\n\t(totalPages: number | undefined, currentPage: number) => {\n\t\treturn { currentPage, totalPages };\n\t}\n);\n\nexport const getDocumentRef = createSelector(getAll, (state: DisplayData) => state.documentRef);\n\nexport const getMaterialData = createSelector(getAll, (state: DisplayData) => state.materialData);\n\nexport const getTimeStamp = createSelector(getMaterialData, (state: MaterialData) => state.materialDataTimeStamp);\n\nexport const getMaterialSpans = createSelector(\n\tgetMaterialData as (state: any) => MaterialGroupData,\n\t(state: MaterialGroupData) => state.materialSpans\n);\n\nexport const getSpanIndex = (state: any, span: HTMLSpanElement) => {\n\tconst spans = getMaterialSpans(state);\n\treturn spans.indexOf(span);\n};\n\nexport const getMaterialBoundingRects = createSelector(\n\tgetMaterialData as (state: any) => MaterialGroupData,\n\t(state: MaterialGroupData) => state.materialBoundingRects\n);\n\nexport const getDataExists = createSelector(getTimeStamp, (timestamp) => timestamp > 0);\n\nexport const getDisplayStatus = createSelector(getAll, (state: DisplayData) => state.displayStatus);\n\nexport const displayStatusIsShow = createSelector(getDisplayStatus, (status) => status === \"SHOW\");\n\nexport const getZoomQueue = createSelector(getAll, (state: DisplayData) => state.zoomQueue);\n","export const incrementer = () => {\n\tlet counter = 0;\n\treturn () => {\n\t\tconst curCounter = counter;\n\t\tcounter++;\n\t\treturn curCounter;\n\t};\n};\n","export const splitExpandedSpans = (expandedSpans: ExpandedSpan[]) => {\n\tconst spans = [];\n\tconst boundingRects = [];\n\n\tfor (const exSpan of expandedSpans) {\n\t\tspans.push(exSpan.span);\n\t\tboundingRects.push(exSpan.rect);\n\t}\n\n\treturn { spans, boundingRects };\n};\n\nexport const sortExpandedSpansAccordingToX = (expandedSpans: ExpandedSpan[]) =>\n\texpandedSpans.sort((exSpan, exSpan2) => exSpan.rect.x - exSpan2.rect.x);\n\nexport const sortExpandedSpansAccordingToY = (expandedSpans: ExpandedSpan[]) =>\n\texpandedSpans.sort((exSpan, exSpan2) => exSpan.rect.y - exSpan2.rect.y);\n\ntype ExpandedSpan = { span: HTMLSpanElement; rect: DOMRect };\n\nexport const expandSpans = (spans: HTMLSpanElement[]) => spans.map(expandSpan);\n\nconst expandSpan = (span: HTMLSpanElement): ExpandedSpan => {\n\treturn { span, rect: span.getBoundingClientRect() };\n};\n","import { MaterialGroupData } from \"../model\";\nimport { expandSpans, sortExpandedSpansAccordingToY, splitExpandedSpans } from \"./span\";\n\nexport const materialData = (container: HTMLDivElement): MaterialGroupData | null => {\n\t// assumes all spans inside the document are relevant (potentially multiple pages)\n\tconst startingSpans = Array.from(container.querySelectorAll(\"span\"));\n\tif (startingSpans.length === 0) return null;\n\n\tconst { spans, boundingRects } = splitExpandedSpans(sortExpandedSpansAccordingToY(expandSpans(startingSpans)));\n\n\treturn {\n\t\tmaterialSpans: spans,\n\t\tmaterialBoundingRects: boundingRects,\n\t};\n};\n","import { ChangeEvent, RefObject } from \"react\";\nimport { Dispatch } from \"redux\";\nimport * as t from \"./actionTypes\";\nimport { PageMove, MaterialData } from \"./model\";\nimport { getPageControlData, getDisplayStatus, getZoomQueue, getTimeStamp, getMaterialSpans } from \"./selectors\";\nimport { incrementer } from \"../../shared/utils\";\nimport { materialData } from \"./services/materialData\";\n\nexport const pdfUpload = (pdf: File) => {\n\treturn { type: t.PDF_UPLOADED, payload: pdf };\n};\n\nexport const materialUploaded = (event: ChangeEvent<HTMLInputElement>) => {\n\treturn (dispatch: Dispatch) => {\n\t\tconst files = event.target.files;\n\t\tconst pdf = files ? files[0] : null;\n\t\tif (pdf) dispatch(pdfUpload(pdf));\n\t};\n};\n\nexport const materialLoaded = (totalPages: number) => {\n\treturn { type: t.MATERIAL_LOADED, payload: totalPages };\n};\n\nexport const tryInterval = (tries: number, ms: number, func: () => boolean) => {\n\tconst increment = incrementer();\n\tconst timeout = setInterval(() => {\n\t\tif (increment() > tries) {\n\t\t\tclearInterval(timeout);\n\t\t\treturn;\n\t\t}\n\n\t\tif (func()) clearInterval(timeout);\n\t}, ms);\n};\n\n// text-layer is not really guaranteed to be rendered on render \"success\",\n// so we use this ugly \"try ten times\" approach\nexport function captureMaterialData(documentRef: RefObject<any>) {\n\treturn (dispatch: any, getState: Function) => {\n\t\tconst state = getState();\n\t\tconst container = documentRef.current;\n\t\tif (container) {\n\t\t\t// TODO-NICE: still possibility of race-condition,\n\n\t\t\tconst startTime = Date.now();\n\n\t\t\t// try once before going into intervals (most times once should work)\n\t\t\tconst curMaterialGroupData = materialData(container as HTMLDivElement);\n\t\t\tif (curMaterialGroupData && getTimeStamp(state) < startTime) {\n\t\t\t\tconst payload: MaterialData = {\n\t\t\t\t\t...curMaterialGroupData,\n\t\t\t\t\tmaterialDataTimeStamp: startTime,\n\t\t\t\t};\n\t\t\t\tdispatch({ type: t.MATERIAL_DATA, payload });\n\t\t\t\tdispatch(emptyZoomQueue());\n\t\t\t} else {\n\t\t\t\ttryInterval(10, 20, () => {\n\t\t\t\t\tconst curMaterialGroupData = materialData(container as HTMLDivElement);\n\t\t\t\t\tif (curMaterialGroupData && getTimeStamp(getState()) < startTime) {\n\t\t\t\t\t\tconst payload: MaterialData = {\n\t\t\t\t\t\t\t...curMaterialGroupData,\n\t\t\t\t\t\t\tmaterialDataTimeStamp: startTime,\n\t\t\t\t\t\t};\n\t\t\t\t\t\tdispatch({ type: t.MATERIAL_DATA, payload });\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t}\n\t\t\t\t\treturn false;\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t};\n}\n\n// assumes outside validation/correction\nexport const setPage = (page: number) => {\n\treturn { type: t.PAGE_UPDATE, payload: page };\n};\n\nconst pageCorrections = {\n\tADD: (newPage: number, totalPages: number) => (newPage === totalPages + 1 ? 1 : newPage),\n\tREMOVE: (newPage: number, totalPages: number) => (newPage === 0 ? totalPages : newPage),\n};\n\n//TODO-PERF: maybe hide all rendered pages but not shown instead of re-rendering for faster switching?\nexport const movePage = (type: PageMove) => {\n\treturn (dispatch: Dispatch, getState: Function) => {\n\t\tconst { currentPage, totalPages } = getPageControlData(getState());\n\t\tif (totalPages) {\n\t\t\tswitch (type) {\n\t\t\t\tcase \"NEXT\":\n\t\t\t\t\tdispatch({ type: t.PAGE_UPDATE, payload: pageCorrections[\"ADD\"](currentPage + 1, totalPages) });\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"PREVIOUS\":\n\t\t\t\t\tdispatch({ type: t.PAGE_UPDATE, payload: pageCorrections[\"REMOVE\"](currentPage - 1, totalPages) });\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t};\n};\nexport const nextPage = () => movePage(\"NEXT\");\nexport const previousPage = () => movePage(\"PREVIOUS\");\n\nexport const toggleDisplayState = () => {\n\treturn (dispatch: Dispatch, getState: Function) => {\n\t\tconst displayState = getDisplayStatus(getState()) === \"SHOW\" ? \"HIDE\" : \"SHOW\";\n\n\t\tdispatch({ type: t.DISPLAY_STATUS, payload: displayState });\n\t};\n};\n\nexport const setZoomQueue = (spanIndex: number | null) => {\n\treturn { type: t.ZOOM_QUEUE, payload: spanIndex };\n};\n\nexport const zoomToCardOrigin = (spanIndex: number, page: number) => {\n\treturn (dispatch: Dispatch) => {\n\t\tdispatch(setPage(page));\n\t\tdispatch(setZoomQueue(spanIndex));\n\t};\n};\n\nexport const emptyZoomQueue = () => {\n\treturn (dispatch: Dispatch, getState: Function) => {\n\t\tconst state = getState();\n\t\tconst spanIndex = getZoomQueue(state);\n\t\tif (spanIndex) {\n\t\t\tconst originSpan = getMaterialSpans(state)[spanIndex];\n\t\t\toriginSpan.focus();\n\t\t\toriginSpan.scrollIntoView({ behavior: \"smooth\", block: \"center\", inline: \"center\" });\n\n\t\t\tdispatch(setZoomQueue(null));\n\t\t}\n\t};\n};\n","import React from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { IconButton } from \"@material-ui/core\";\nimport ArrowForwardIosIcon from \"@material-ui/icons/ArrowForwardIos\";\nimport ArrowBackIosIcon from \"@material-ui/icons/ArrowBackIos\";\nimport { nextPage, previousPage } from \"../actions\";\n\nexport const PreviousButton = () => {\n\tconst dispatch = useDispatch();\n\treturn (\n\t\t<IconButton\n\t\t\ttype=\"button\"\n\t\t\tonClick={() => {\n\t\t\t\tdispatch(previousPage());\n\t\t\t}}\n\t\t>\n\t\t\t<ArrowBackIosIcon></ArrowBackIosIcon>\n\t\t</IconButton>\n\t);\n};\n\nexport const NextButton = () => {\n\tconst dispatch = useDispatch();\n\treturn (\n\t\t<IconButton\n\t\t\ttype=\"button\"\n\t\t\tonClick={() => {\n\t\t\t\tdispatch(nextPage());\n\t\t\t}}\n\t\t>\n\t\t\t<ArrowForwardIosIcon></ArrowForwardIosIcon>\n\t\t</IconButton>\n\t);\n};\n","import { useState } from \"react\";\nimport DescriptionOutlinedIcon from \"@material-ui/icons/DescriptionOutlined\";\nimport DescriptionTwoToneIcon from \"@material-ui/icons/DescriptionTwoTone\";\nimport React from \"react\";\nimport { IconButton } from \"@material-ui/core\";\nimport { useDispatch } from \"react-redux\";\nimport { toggleDisplayState } from \"../actions\";\n\nexport const ShowMaterialButton = () => {\n\tconst [outlined, setOutlined] = useState(true);\n\tconst dispatch = useDispatch();\n\n\treturn (\n\t\t<IconButton\n\t\t\ttype=\"button\"\n\t\t\tonClick={() => {\n\t\t\t\tdispatch(toggleDisplayState());\n\t\t\t\tsetOutlined(!outlined);\n\t\t\t}}\n\t\t>\n\t\t\t{outlined ? (\n\t\t\t\t<DescriptionOutlinedIcon></DescriptionOutlinedIcon>\n\t\t\t) : (\n\t\t\t\t<DescriptionTwoToneIcon></DescriptionTwoToneIcon>\n\t\t\t)}\n\t\t</IconButton>\n\t);\n};\n","import React, { useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Typography, TextField } from \"@material-ui/core\";\nimport { setPage } from \"../../actions\";\nimport { getPageControlData } from \"../../selectors\";\n\nconst nonDigitRegEx = /(\\D)/;\n\nexport const validatePageChoice = (possiblePage: string, totalPages: number) => {\n\tif (possiblePage === \"\" || possiblePage.trim().match(nonDigitRegEx) !== null) return false;\n\n\tconst asInt = parseInt(possiblePage);\n\tif (asInt < 1 || totalPages < asInt) return false;\n\n\treturn true;\n};\n\nexport const PageChooser = () => {\n\tconst dispatch = useDispatch();\n\t// parent only renders this component if these values exist\n\tconst { currentPage, totalPages }: { currentPage?: number; totalPages?: number } = useSelector(getPageControlData);\n\n\tconst [state, setState] = useState({\n\t\terror: false,\n\t\tvalue: currentPage?.toString(),\n\t\tuserInput: currentPage?.toString(),\n\t});\n\n\t// with this we can trigger a re-render onChange,\n\t// while making sure that if a new currentPage arrives, we reset the component\n\tif (state.value !== currentPage.toString()) {\n\t\tsetState({ error: false, value: currentPage.toString(), userInput: currentPage.toString() });\n\t}\n\n\treturn (\n\t\t<Typography variant=\"h6\">\n\t\t\t<TextField\n\t\t\t\ttype=\"text\"\n\t\t\t\tvariant=\"filled\"\n\t\t\t\tvalue={state.userInput}\n\t\t\t\tonKeyDown={(event) => {\n\t\t\t\t\tif (event.key === \"Enter\") {\n\t\t\t\t\t\tevent.preventDefault();\n\t\t\t\t\t\tconst submittedValue = (event.target as HTMLFormElement).value;\n\t\t\t\t\t\tif (!state.error) {\n\t\t\t\t\t\t\tdispatch(setPage(parseInt(submittedValue)));\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}}\n\t\t\t\tonChange={(event) => {\n\t\t\t\t\tconst submittedValue = (event.target as HTMLTextAreaElement).value;\n\t\t\t\t\tif (validatePageChoice(submittedValue, totalPages as number)) {\n\t\t\t\t\t\tsetState({ ...state, error: false, userInput: submittedValue });\n\t\t\t\t\t} else {\n\t\t\t\t\t\tsetState({ ...state, error: true, userInput: submittedValue });\n\t\t\t\t\t}\n\t\t\t\t}}\n\t\t\t\terror={state.error}\n\t\t\t/>\n\t\t\tof {totalPages}\n\t\t</Typography>\n\t);\n};\n","export const NAME = \"appFocus\";\n","import { NAME } from \"./constants\";\n\nexport const FOCUS_UPDATE = NAME + \"/FOCUS_UPDATE\";\nexport const DISPLAY_FOCUS_UPDATE = NAME + \"/DISPLAY_FOCUS_UPDATE\";\n","import { createSelector } from \"reselect\";\nimport { NAME } from \"./constants\";\nimport { FocusState } from \"./model\";\n\nexport const getAll = (state: any) => state[NAME];\n\nexport const getFocus = createSelector(getAll, (state: FocusState) => state.userFocus);\n\nexport const getDisplayFocus = createSelector(getAll, (state: FocusState) => state.displayFocus);\n","import * as t from \"./actionTypes\";\nimport { UserFocus, DisplayFocus } from \"./model\";\nimport { Dispatch } from \"redux\";\nimport { getFocus } from \"./selectors\";\n\nexport const updateFocus = (focus: UserFocus) => {\n\treturn { type: t.FOCUS_UPDATE, payload: focus };\n};\n\nexport const tryUpdateFocus = (focus: UserFocus) => {\n\treturn (dispatch: Dispatch, getState: Function) => {\n\t\tif (getFocus(getState()) !== focus) dispatch(updateFocus(focus));\n\t};\n};\n\nexport const toggleContextMenuFocus = () => {\n\treturn (dispatch: Dispatch, getState: Function) => {\n\t\tconst currentFocus = getFocus(getState());\n\t\tswitch (currentFocus) {\n\t\t\tcase \"CONTEXT_MENU\":\n\t\t\t\tdispatch(updateFocus(\"DOCUMENT\"));\n\t\t\t\tbreak;\n\t\t\tcase \"DOCUMENT\":\n\t\t\t\tdispatch(updateFocus(\"CONTEXT_MENU\"));\n\t\t\t\tbreak;\n\t\t}\n\t};\n};\n\nexport const updateDisplayFocus = (focus: DisplayFocus) => {\n\treturn { type: t.DISPLAY_FOCUS_UPDATE, payload: focus };\n};\n","import { FocusState, UserFocus, DisplayFocus } from \"./model\";\nimport * as t from \"./actionTypes\";\n\nconst initialState: FocusState = { userFocus: \"CONTROL\", displayFocus: \"ACTIVE_RIVER\" };\n\nconst focus = (state = initialState, { type, payload }: { type: string; payload: any }): FocusState => {\n\tswitch (type) {\n\t\tcase t.FOCUS_UPDATE:\n\t\t\treturn { ...state, userFocus: payload as UserFocus };\n\t\tcase t.DISPLAY_FOCUS_UPDATE:\n\t\t\treturn { ...state, displayFocus: payload as DisplayFocus };\n\t\tdefault:\n\t\t\treturn state;\n\t}\n};\n\nexport default focus;\n","import * as actions from \"./actions\";\nimport * as constants from \"./constants\";\nimport reducer from \"./reducer\";\nimport * as selectors from \"./selectors\";\nimport * as actionTypes from \"./actionTypes\";\n\nexport default { actions, constants, reducer, selectors, actionTypes };\n","import \"./PDFDocument.css\";\nimport \"./AnnotationLayer.css\";\nimport React, { RefObject } from \"react\";\nimport { pdfjs, Document, Page } from \"react-pdf\";\nimport { connect, useDispatch } from \"react-redux\";\nimport { materialLoaded, setPage, captureMaterialData } from \"../../actions\";\nimport { getRenderCritialData } from \"../../selectors\";\npdfjs.GlobalWorkerOptions.workerSrc = `//cdnjs.cloudflare.com/ajax/libs/pdf.js/${pdfjs.version}/pdf.worker.js`;\n\n//TODO-NICE: implent more pdf-reader functionality, like zoom\n\nfunction removeTextLayerOffset() {\n\tconst textLayers = document.querySelectorAll(\".react-pdf__Page__textContent\");\n\ttextLayers.forEach((layer) => {\n\t\tconst { style }: any = layer;\n\t\tstyle.top = \"0\";\n\t\tstyle.left = \"0\";\n\t\tstyle.transform = \"\";\n\t});\n}\n\nconst options = {\n\tcMapUrl: \"cmaps/\",\n\tcMapPacked: true,\n};\n\nfunction PDFDocument({\n\tparentSize,\n\tpdf,\n\tcurrentPage,\n\tmaterialLoaded,\n\tcaptureMaterialData,\n\tdocumentRef,\n}: {\n\tparentSize: any;\n\tpdf: File | undefined;\n\tcurrentPage: number;\n\tmaterialLoaded: (numPages: number) => void;\n\tcaptureMaterialData: Function;\n\tdocumentRef: RefObject<any>;\n}) {\n\tconst dispatch = useDispatch();\n\treturn (\n\t\t<Document\n\t\t\tfile={pdf}\n\t\t\toptions={options}\n\t\t\tonLoadSuccess={({ numPages }) => {\n\t\t\t\tmaterialLoaded(numPages);\n\t\t\t}}\n\t\t\tinputRef={documentRef}\n\t\t\tonItemClick={({ pageNumber }) => {\n\t\t\t\tdispatch(setPage(parseInt(pageNumber)));\n\t\t\t}}\n\t\t>\n\t\t\t{pdf && (\n\t\t\t\t<Page\n\t\t\t\t\twidth={parentSize.width}\n\t\t\t\t\tpageNumber={currentPage}\n\t\t\t\t\tonRenderSuccess={() => {\n\t\t\t\t\t\tremoveTextLayerOffset();\n\t\t\t\t\t\tcaptureMaterialData(documentRef);\n\t\t\t\t\t}}\n\t\t\t\t/>\n\t\t\t)}\n\t\t</Document>\n\t);\n}\n\nexport const PDFDocumentContainer = connect(getRenderCritialData, {\n\tmaterialLoaded,\n\tcaptureMaterialData,\n})(PDFDocument);\n","import React, { useState } from \"react\";\nimport Grid from \"@material-ui/core/Grid\";\nimport { withSize } from \"react-sizeme\";\nimport Paper from \"@material-ui/core/Paper\";\nimport focus from \"../../focus\";\n\nimport { useDispatch } from \"react-redux\";\nimport { PDFDocumentContainer } from \"./PDFDocument/PDFDocument\";\n\nfunction MaterialDisplayColumn({ size, hidden }: any) {\n\tconst dispatch = useDispatch();\n\n\tconst [elevation, setElevation] = useState(3);\n\n\treturn (\n\t\t<Grid\n\t\t\titem\n\t\t\tstyle={{\n\t\t\t\twidth: \"60%\",\n\t\t\t}}\n\t\t\tonMouseEnter={() => {\n\t\t\t\tdispatch(focus.actions.tryUpdateFocus(\"DOCUMENT\"));\n\t\t\t\tsetElevation(20);\n\t\t\t}}\n\t\t\tonMouseLeave={() => {\n\t\t\t\tsetElevation(3);\n\t\t\t}}\n\t\t\thidden={hidden}\n\t\t>\n\t\t\t<Paper elevation={elevation}>\n\t\t\t\t<PDFDocumentContainer parentSize={size}></PDFDocumentContainer>\n\t\t\t</Paper>\n\t\t</Grid>\n\t);\n}\n\nexport const MaterialDisplayColumnWithSize = withSize({ monitorHeight: true, noPlaceholder: true })(\n\tMaterialDisplayColumn\n);\n","import * as t from \"./actionTypes\";\nimport type { DisplayData, DisplayStatus, MaterialGroupData } from \"./model\";\nimport { createRef } from \"react\";\n\nconst initialState: DisplayData = {\n\tdisplayStatus: \"SHOW\",\n\tcurrentPage: 1,\n\tdocumentRef: createRef(),\n\tpageSpans: {},\n\tzoomQueue: null,\n\tmaterialData: { materialDataTimeStamp: -Infinity },\n};\n\nconst displayData = (state = initialState, { type, payload }: { type: string; payload: any }): DisplayData => {\n\tswitch (type) {\n\t\tcase t.PDF_UPLOADED:\n\t\t\treturn { ...state, pdf: payload as File, pdfName: (payload as File).name };\n\t\tcase t.MATERIAL_LOADED:\n\t\t\treturn { ...state, totalPages: payload as number };\n\t\tcase t.PAGE_UPDATE:\n\t\t\treturn { ...state, currentPage: payload as number };\n\t\tcase t.DISPLAY_STATUS:\n\t\t\treturn { ...state, displayStatus: payload as DisplayStatus };\n\t\tcase t.MATERIAL_DATA:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tmaterialData: payload,\n\t\t\t\tpageSpans: { ...state.pageSpans, [state.currentPage]: (payload as MaterialGroupData).materialSpans.length - 1 },\n\t\t\t};\n\t\tdefault:\n\t\t\treturn state;\n\t}\n};\n\nexport default displayData;\n","import * as actions from \"./actions\";\nimport * as actionTypes from \"./actionTypes\";\nimport * as components from \"./components\";\nimport * as constants from \"./constants\";\nimport reducer from \"./reducer\";\nimport * as selectors from \"./selectors\";\n\nexport default { actions, actionTypes, components, constants, reducer, selectors };\n","export const NAME = \"cardRiverState\";\n","import { UpdateType, CardPayloadConfig, CreationType, QACardContent, CardType } from \"../model\";\n\ntype updateContentStrFunction = (oldStr: string, newStr: string) => string;\n\ntype partialUpdateContentStrFunction = (oldStr: string) => string;\n\nconst updateContentStrFunctions: { [key in UpdateType]: updateContentStrFunction } = {\n\tREPLACE: (_: string, newStr: string) => newStr,\n\tAPPEND: (oldStr: string, newStr: string) => oldStr + newStr,\n};\n\nconst createPartialUpdateContentStrFunction = (updateType: UpdateType, newStr: string) => (oldStr: string) =>\n\tupdateContentStrFunctions[updateType](oldStr, newStr);\n\ntype creationFunction = (\n\toldConfig: CardPayloadConfig,\n\tpartialUpdateFunction: partialUpdateContentStrFunction\n) => CardPayloadConfig;\n\nconst defaultCreationFunction: creationFunction = (oldConfig, partialUpdateFunction) => {\n\treturn { ...oldConfig, content: partialUpdateFunction(oldConfig.content as string) };\n};\n\nconst creationFunctions: {\n\t[key in CreationType]: creationFunction;\n} = {\n\tNOTE: defaultCreationFunction,\n\tQ: (oldConfig, partialUpdateFunction) => {\n\t\tconst content = oldConfig.content as QACardContent;\n\t\treturn { ...oldConfig, content: { ...content, q: partialUpdateFunction(content.q) } };\n\t},\n\tA: (oldConfig, partialUpdateFunction) => {\n\t\tconst content = oldConfig.content as QACardContent;\n\t\treturn { ...oldConfig, content: { ...content, a: partialUpdateFunction(content.a) } };\n\t},\n};\n\nexport const contentStringToConfig = (\n\tcontentStr: string,\n\ttype: CardType,\n\tcreationType: CreationType,\n\tupdateType: UpdateType,\n\tcurrentCard?: CardPayloadConfig\n): CardPayloadConfig => {\n\tconst partialUpdateFunction = createPartialUpdateContentStrFunction(updateType, contentStr);\n\tconst isCardUpdate = !!currentCard;\n\treturn isCardUpdate\n\t\t? creationFunctions[creationType](currentCard as CardPayloadConfig, partialUpdateFunction)\n\t\t: creationFunctions[creationType]({ type, content: type === \"Q-A\" ? { q: \"\", a: \"\" } : \"\" }, partialUpdateFunction);\n};\n","export const NAME = \"cards\";\n","import { NAME } from \"./constants\";\n\nexport const CARD_UPDATE = NAME + \"/CARD_UPDATE\";\nexport const CARD_PUSH = NAME + \"/CARD_PUSH\";\nexport const CARD_REMOVE = NAME + \"/CARD_REMOVE\";\nexport const CARD_GOAL = NAME + \"/CARD_GOAL\";\n\n// TODO-NICE: dont know where to put this else, cards is the lowest module\n// this is used for loading a new Document-DataSet / resetting if new Document\nexport const GLOBAL_RESET = NAME + \"/GLOBAL_RESET\";\n","import { createSelector } from \"reselect\";\nimport { CardsState } from \"./model\";\nimport { NAME } from \"./constants\";\n\nexport const getAll = (state: any) => state[NAME].present;\n\nexport const getLastCardIDNumber = createSelector(getAll, (state) => state.lastCardIDNumber);\n\nexport const getCards = createSelector(getAll, (state: CardsState) => state.cards);\n\nexport const getGoalCard = createSelector(getAll, (state: CardsState) => state.goalCard);\n","import {\n\tCardPayload,\n\tFinalizedCardPayload,\n\tCreationType,\n\tUpdateType,\n\tCardType,\n\tCardOrigin,\n\tCardConfig,\n\tCardID,\n} from \"./model\";\nimport * as t from \"./actionTypes\";\nimport { Dispatch } from \"redux\";\nimport { getLastCardIDNumber, getCards } from \"./selectors\";\nimport { contentStringToConfig } from \"./services/config\";\n\nconst createCardID = (lastCardIDNumber: number) => (lastCardIDNumber + 1).toString();\n\nexport const cardPush = (cardPayload: CardPayload) => {\n\treturn (dispatch: Dispatch, getState: Function) => {\n\t\tdispatch({\n\t\t\ttype: t.CARD_PUSH,\n\t\t\tpayload: {\n\t\t\t\t...cardPayload,\n\t\t\t\tcard: { ...cardPayload.card, cardID: createCardID(getLastCardIDNumber(getState())) },\n\t\t\t} as FinalizedCardPayload,\n\t\t});\n\t};\n};\n\nexport const cardUpdate = (card: CardPayload) => {\n\treturn { type: t.CARD_UPDATE, payload: card };\n};\n\nexport const updateCardContent = (\n\tcontentString: string,\n\tcardID: CardID,\n\tcreationType: CreationType,\n\tupdateType: UpdateType,\n\torigin?: CardOrigin\n) => {\n\treturn (dispatch: Dispatch, getState: Function) => {\n\t\tconst state = getState();\n\n\t\tconst currentCard = getCards(state)[cardID as string];\n\t\tconst config = contentStringToConfig(contentString, currentCard.type, creationType, updateType, currentCard);\n\n\t\tdispatch(\n\t\t\tcardUpdate({\n\t\t\t\tcard: { ...config, origin },\n\t\t\t})\n\t\t);\n\t};\n};\n\nexport const pushCardContent = (\n\tcontentString: string,\n\tcreationType: CreationType,\n\tupdateType: UpdateType,\n\ttype: CardType,\n\torigin?: CardOrigin\n) => {\n\tconst config = contentStringToConfig(contentString, type, creationType, updateType);\n\n\treturn cardPush({ card: { ...config, origin } });\n};\n\nexport const removeCard = (cardID: CardID) => {\n\treturn { type: t.CARD_REMOVE, payload: cardID };\n};\n\nexport const setGoalCard = (cardConfig: CardConfig, creationType: CreationType) => {\n\treturn { type: t.CARD_GOAL, payload: { ...cardConfig, creationType } };\n};\n\nexport const resetGoalCard = () => {\n\treturn { type: t.CARD_GOAL, payload: null };\n};\n","import * as t from \"./actionTypes\";\nimport { CardsState, FinalizedCardPayload, CardID } from \"./model\";\nimport { CentralControlCards } from \"../control/model\";\n\nconst intialState: CardsState = {\n\tcards: {\n\t\t\"0\": {\n\t\t\tcardID: \"0\",\n\t\t\ttype: \"Q-A\",\n\t\t\tcontent: { q: \"Was ist der Sinn des Lebens?\", a: \"42\" },\n\t\t},\n\t\t\"1\": {\n\t\t\tcardID: \"1\",\n\t\t\ttype: \"Q-A\",\n\t\t\tcontent: { q: \"Welches Layout macht mehr Sinn?\", a: \"??\" },\n\t\t},\n\t\t\"2\": { cardID: \"2\", type: \"Note\", content: \"Note here\" },\n\t},\n\tlastCardIDNumber: 2,\n\tgoalCard: null,\n};\n\nconst removeCard = (state: CardsState, cardID: CardID) => {\n\tconst cards = { ...state.cards };\n\n\t// we do not reset the ID counter\n\n\tdelete cards[cardID];\n\n\treturn { ...state, cards };\n};\n\nconst cards = (state = intialState, { type, payload }: { type: string; payload?: any }) => {\n\tlet cardID;\n\tlet cardObj;\n\tswitch (type) {\n\t\tcase t.CARD_PUSH:\n\t\t\tconst lastCardIDNumber = state.lastCardIDNumber + 1;\n\n\t\t\tcardObj = { ...state.cards };\n\t\t\tcardObj[(payload as FinalizedCardPayload).card.cardID] = (payload as FinalizedCardPayload).card;\n\n\t\t\treturn { ...state, cards: cardObj, lastCardIDNumber };\n\t\tcase t.CARD_UPDATE:\n\t\t\tcardID = (payload as FinalizedCardPayload).card.cardID as string;\n\t\t\tcardObj = { ...state.cards };\n\t\t\tcardObj[cardID] = (payload as FinalizedCardPayload).card;\n\n\t\t\treturn { ...state, cards: cardObj };\n\t\tcase t.CARD_REMOVE:\n\t\t\treturn removeCard(state, payload as string);\n\t\tcase t.CARD_GOAL:\n\t\t\treturn { ...state, goalCard: payload };\n\t\tcase t.GLOBAL_RESET:\n\t\t\tif (payload) {\n\t\t\t\treturn {\n\t\t\t\t\t...intialState,\n\t\t\t\t\tcards: (payload as CentralControlCards).cards,\n\t\t\t\t\tlastCardIDNumber: (payload as CentralControlCards).lastCardIDNumber,\n\t\t\t\t};\n\t\t\t} else {\n\t\t\t\treturn intialState;\n\t\t\t}\n\t\tdefault:\n\t\t\treturn state;\n\t}\n};\n\nexport default cards;\n","import * as services from \"./services\";\nimport * as constants from \"./constants\";\nimport * as actionTypes from \"./actionTypes\";\nimport * as actions from \"./actions\";\nimport * as selectors from \"./selectors\";\nimport reducer from \"./reducer\";\n\nexport default { services, constants, actionTypes, actions, reducer, selectors };\n","import { NAME } from \"./constants\";\nimport { createSelector } from \"reselect\";\nimport { CardRiverState } from \"./model\";\nimport cards from \"../cards\";\n\nexport const getAll = (state: any) => state[NAME].present;\n\nexport const getRiverMakeUps = createSelector(getAll, (state: CardRiverState) => state.riverMakeUps);\n\nexport const getActiveRiverMakeUpID = createSelector(getAll, (state: CardRiverState) => state.activeRiverMakeUpID);\n\nexport const getPushToRiver = createSelector(getAll, (state: CardRiverState) => state.pushToRiverID);\n\nexport const getPushToRiverMakeUp = createSelector(getRiverMakeUps, getPushToRiver, (makeUps, id) => makeUps[id]);\n\nexport const getActiveRiverMakeUp = createSelector(\n\tgetRiverMakeUps,\n\tgetActiveRiverMakeUpID,\n\t(makeUps, id) => makeUps[id]\n);\n\nexport const getPushToRiverCardIDs = createSelector(getPushToRiverMakeUp, (makeUp) => makeUp.cardIDs);\n\nexport const getPushToRiverCards = createSelector(\n\tgetPushToRiverCardIDs,\n\tcards.selectors.getCards,\n\t(makeUpCardIDs, cards) => makeUpCardIDs.map((id) => cards[id])\n);\n\n//TODO-NICE: rename active=page-wise or smth like that for clarity\nexport const getActiveRiverCardIDs = createSelector(getActiveRiverMakeUp, (makeUp) => makeUp.cardIDs);\n\nexport const getActiveRiverCards = createSelector(\n\tgetActiveRiverCardIDs,\n\tcards.selectors.getCards,\n\t(makeUpCardIDs, cards) => makeUpCardIDs.map((id) => cards[id])\n);\n\nexport const getRiverShowState = createSelector(getAll, (state: CardRiverState) => state.riverShowState);\n\nexport const riverShowStateIsShow = createSelector(getRiverShowState, (state) => state === \"SHOW\");\n\nexport const getHoveredCardData = createSelector(getAll, (state: CardRiverState) => {\n\treturn { id: state.highlightedCardID, field: state.highlightedCardField };\n});\n\nexport const getSourceCard = createSelector(getAll, cards.selectors.getCards, (state, cards) =>\n\t// only return sourceCard if it still exists\n\tstate.sourceCard && cards[state.sourceCard] ? state.sourceCard : null\n);\n\nexport const getLastRiverIDNumber = createSelector(getAll, (state: CardRiverState) => state.lastRiverIDNumber);\n\nexport const getRiverContentState = createSelector(getAll, (state: CardRiverState) => state.riverContentState);\n","import React, { useState } from \"react\";\nimport { TextField, TextFieldProps } from \"@material-ui/core\";\n\nexport const HybridCardField = ({\n\tstoreValue = \"\",\n\tsaveChanges,\n\tstyle,\n\t...rest\n}: {\n\tstoreValue?: string;\n\tsaveChanges: (value: string) => void;\n\tstyle: any;\n} & TextFieldProps) => {\n\tconst [state, setState] = useState({ storeValue, mutableValue: storeValue });\n\n\t// reset if new storeValue, otherwise keep user-mutated value\n\tif (state.storeValue !== storeValue) {\n\t\tsetState({ storeValue, mutableValue: storeValue });\n\t}\n\n\t// need the onChange-pattern, because we want to be able to pre-fill the field from the store\n\treturn (\n\t\t<TextField\n\t\t\tmultiline\n\t\t\tvariant=\"filled\"\n\t\t\tvalue={state.mutableValue}\n\t\t\tonChange={(event) => {\n\t\t\t\tconst submittedValue = (event.target as HTMLTextAreaElement).value;\n\t\t\t\tsetState({ ...state, mutableValue: submittedValue });\n\t\t\t}}\n\t\t\tonBlur={(event: any) => {\n\t\t\t\tsaveChanges(event.target.value);\n\t\t\t}}\n\t\t\tstyle={style}\n\t\t\t{...rest}\n\t\t></TextField>\n\t);\n};\n","import DeleteForeverIcon from \"@material-ui/icons/DeleteForever\";\nimport React from \"react\";\nimport { IconButton } from \"@material-ui/core\";\nimport { useDispatch } from \"react-redux\";\nimport cards from \"../../../../cards\";\nimport focus from \"../../../../focus\";\nimport { CardID } from \"../../../../cards/model\";\n\n//TODO-NICE: use storybook for visual component testing\n\nexport const DeleteCardButton = ({ cardID }: { cardID: CardID }) => {\n\tconst dispatch = useDispatch();\n\treturn (\n\t\t<IconButton\n\t\t\ttype=\"button\"\n\t\t\tonClick={() => {\n\t\t\t\tdispatch(cards.actions.removeCard(cardID));\n\t\t\t}}\n\t\t\tonMouseEnter={() => {\n\t\t\t\tdispatch(focus.actions.tryUpdateFocus(\"RIVER_CONTROL\"));\n\t\t\t}}\n\t\t>\n\t\t\t<DeleteForeverIcon></DeleteForeverIcon>\n\t\t</IconButton>\n\t);\n};\n","import FindInPageIcon from \"@material-ui/icons/FindInPage\";\nimport React from \"react\";\nimport { IconButton } from \"@material-ui/core\";\nimport { useDispatch } from \"react-redux\";\nimport display from \"../../../../display\";\nimport { SingleOrigin } from \"../../../../cards/model\";\nimport focus from \"../../../../focus\";\n\nexport const JumpToOriginButton = ({ cardOrigin }: { cardOrigin: SingleOrigin }) => {\n\tconst dispatch = useDispatch();\n\treturn (\n\t\t<IconButton\n\t\t\ttype=\"button\"\n\t\t\tonClick={() => {\n\t\t\t\tdispatch(focus.actions.updateDisplayFocus(\"ACTIVE_RIVER\"));\n\t\t\t\tdispatch(display.actions.zoomToCardOrigin(cardOrigin.spanIndex, cardOrigin.page));\n\t\t\t}}\n\t\t>\n\t\t\t<FindInPageIcon></FindInPageIcon>\n\t\t</IconButton>\n\t);\n};\n","import PanToolIcon from \"@material-ui/icons/PanTool\";\nimport PanToolOutlinedIcon from \"@material-ui/icons/PanToolOutlined\";\nimport React, { useState } from \"react\";\nimport { IconButton } from \"@material-ui/core\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { CardConfig, CreationType, GoalCard } from \"../../../../cards/model\";\nimport cards from \"../../../../cards\";\nimport focus from \"../../../../focus\";\n\nconst isGoalCard = (cardConfig: CardConfig, creationType: CreationType, goalCard: GoalCard) =>\n\tcardConfig.cardID === goalCard.cardID && creationType === goalCard.creationType;\n\nexport const GrabForFieldButton = ({\n\tcardConfig,\n\tcreationType,\n}: {\n\tcardConfig: CardConfig;\n\tcreationType: CreationType;\n}) => {\n\tconst dispatch = useDispatch();\n\tconst goalCard = useSelector(cards.selectors.getGoalCard);\n\tconst [outlined, setOutlined] = useState(true);\n\n\tif (goalCard) {\n\t\tconst isGoal = isGoalCard(cardConfig, creationType, goalCard);\n\t\tif (isGoal) {\n\t\t\tif (outlined) setOutlined(false);\n\t\t} else {\n\t\t\tif (!outlined) setOutlined(true);\n\t\t}\n\t} else {\n\t\tif (!outlined) setOutlined(true);\n\t}\n\n\treturn (\n\t\t<IconButton\n\t\t\ttype=\"button\"\n\t\t\tonMouseEnter={() => {\n\t\t\t\tdispatch(focus.actions.tryUpdateFocus(\"RIVER_CONTROL\"));\n\t\t\t}}\n\t\t\tonClick={() => {\n\t\t\t\tif (outlined) {\n\t\t\t\t\tdispatch(cards.actions.setGoalCard(cardConfig, creationType));\n\t\t\t\t} else {\n\t\t\t\t\tdispatch(cards.actions.resetGoalCard());\n\t\t\t\t}\n\t\t\t}}\n\t\t>\n\t\t\t{outlined ? <PanToolOutlinedIcon></PanToolOutlinedIcon> : <PanToolIcon></PanToolIcon>}\n\t\t</IconButton>\n\t);\n};\n","import { NAME } from \"./constants\";\n\nexport const RIVER_SHOW_STATE = NAME + \"/RIVER_SHOW_STATE\";\nexport const RIVER_CONTENT_STATE = NAME + \"/RIVER_CONTENT_STATE\";\nexport const RIVER_PUSH_STATE = NAME + \"/RIVER_PUSH_STATE\";\nexport const RIVER_HOVERED_CARD = NAME + \"/RIVER_HOVERED_CARD\";\nexport const RIVER_CARD_SOURCE = NAME + \"/RIVER_CARD_SOURCE\";\n","import * as t from \"./actionTypes\";\nimport { riverShowStateIsShow, getPushToRiver, getHoveredCardData, getSourceCard } from \"./selectors\";\nimport { Dispatch } from \"redux\";\nimport { CardID, CardField, CardOrigin } from \"../cards/model\";\nimport { RiverContentState } from \"./model\";\n\nexport const toggleRiverShowState = () => (dispatch: Dispatch, getState: Function) => {\n\tdispatch({ type: t.RIVER_SHOW_STATE, payload: riverShowStateIsShow(getState()) ? \"HIDE\" : \"SHOW\" });\n};\n\nexport const setRiverContentState = (state: RiverContentState) => {\n\treturn { type: t.RIVER_CONTENT_STATE, payload: state };\n};\n\nexport const setPushToRiver = (id: string) => {\n\treturn { type: t.RIVER_PUSH_STATE, payload: id };\n};\n\nexport const trySetPushToRiver = (id: string) => {\n\treturn (dispatch: Dispatch, getState: Function) => {\n\t\tif (getPushToRiver(getState()) !== id) dispatch(setPushToRiver(id));\n\t};\n};\n\nexport const setHoveredCard = (cardID: CardID, field: CardField) => {\n\treturn { payload: { id: cardID, field }, type: t.RIVER_HOVERED_CARD };\n};\n\nexport const trySetHoveredCard = (cardID: CardID, field: CardField) => {\n\treturn (dispatch: Dispatch, getState: Function) => {\n\t\tconst state = getState();\n\t\tconst highlightedCardIDData = getHoveredCardData(state);\n\t\tif (highlightedCardIDData.id !== cardID || highlightedCardIDData.field !== field)\n\t\t\tdispatch(setHoveredCard(cardID, field));\n\t};\n};\n\nexport const setSourceCard = (sourceField: CardField, origin?: CardOrigin) => {\n\treturn { type: t.RIVER_CARD_SOURCE, payload: { origin, sourceField } };\n};\n\nexport const trySetSourceCard = (sourceField: CardField, origin?: CardOrigin) => {\n\treturn (dispatch: Dispatch, getState: Function) => {\n\t\tconst sourceCard = getSourceCard(getState());\n\t\tif (!sourceCard || sourceCard.sourceField !== sourceField || sourceCard.origin !== origin)\n\t\t\tdispatch(setSourceCard(sourceField, origin));\n\t};\n};\n\nexport const resetSourceCard = () => {\n\treturn { type: t.RIVER_CARD_SOURCE, payload: null };\n};\n\nexport const tryResetSourceCard = () => {\n\treturn (dispatch: Dispatch, getState: Function) => {\n\t\tconst sourceCardExits = getSourceCard(getState()) !== null;\n\t\tif (sourceCardExits) dispatch(resetSourceCard());\n\t};\n};\n","import Grid from \"@material-ui/core/Grid\";\nimport React from \"react\";\nimport { HybridCardField } from \"./HybridCardField\";\nimport { CardConfig, QACardContent, NoteOrigin, SingleOrigin, QAOrigin } from \"../../../cards/model\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport cards from \"../../../cards\";\nimport { DeleteCardButton } from \"./Buttons/DeleteCardButton\";\nimport { JumpToOriginButton } from \"./Buttons/JumpToOriginButton\";\nimport { GrabForFieldButton } from \"./Buttons/GrabForFieldButton\";\nimport { isNullOrUndefined } from \"util\";\nimport { getHoveredCardData } from \"../../selectors\";\nimport focus from \"../../../focus\";\nimport { trySetSourceCard } from \"../../actions\";\n\n//TODO-RC: tooltips for all buttons, multiple languages?\n\ntype CardProps = { config: CardConfig; riverID: string };\n\nconst borderStyle = { border: \"2px solid green\", borderRadius: \"4px\" };\n\n//TODO-PERF: investigate if this hover-store approach is too slow, useRef instead?\n\nconst NoteCard = ({ config }: CardProps) => {\n\tconst dispatch = useDispatch();\n\tconst { id } = useSelector(getHoveredCardData);\n\tconst isHoveredCard = config.cardID === id;\n\n\t// we only offer one way to use card-content in other cards: extract\n\t// we do not allow grabbing from other cards, just from the document, so we only need the grab button in the ActiveRiver\n\t//TODO-NICE: allow grabbing from other cards\n\tconst isActiveRiver = useSelector(focus.selectors.getDisplayFocus) === \"ACTIVE_RIVER\";\n\n\treturn (\n\t\t<div style={isHoveredCard ? borderStyle : undefined}>\n\t\t\t<HybridCardField\n\t\t\t\tsaveChanges={(value) => {\n\t\t\t\t\tdispatch(cards.actions.updateCardContent(value, config.cardID, \"NOTE\", \"REPLACE\", config.origin));\n\t\t\t\t}}\n\t\t\t\tstoreValue={config.content as string}\n\t\t\t\tlabel=\"Note\"\n\t\t\t\tvariant=\"filled\"\n\t\t\t\tstyle={{ backgroundColor: \"#CBF3F0\" }}\n\t\t\t\tInputLabelProps={{ style: { color: \"#000000\" } }}\n\t\t\t\tonMouseEnter={() => {\n\t\t\t\t\tdispatch(focus.actions.tryUpdateFocus(\"RIVER\"));\n\t\t\t\t\tdispatch(trySetSourceCard(\"NOTE\", config.origin));\n\t\t\t\t}}\n\t\t\t></HybridCardField>\n\t\t\t<DeleteCardButton cardID={config.cardID}></DeleteCardButton>\n\t\t\t{isActiveRiver && <GrabForFieldButton cardConfig={config} creationType=\"NOTE\"></GrabForFieldButton>}\n\t\t\t{config.origin && <JumpToOriginButton cardOrigin={config.origin as NoteOrigin}></JumpToOriginButton>}\n\t\t</div>\n\t);\n};\n\nconst QACard = ({ config }: CardProps) => {\n\tconst dispatch = useDispatch();\n\tconst { id, field } = useSelector(getHoveredCardData);\n\tconst isHoveredCard = config.cardID === id;\n\n\t// we only offer one way to use card-content in other cards: extract\n\t// we do not allow grabbing from other cards, just from the document, so we only need the grab button in the ActiveRiver\n\tconst isActiveRiver = useSelector(focus.selectors.getDisplayFocus) === \"ACTIVE_RIVER\";\n\n\treturn (\n\t\t<Grid container direction=\"column\" spacing={1}>\n\t\t\t<Grid item style={isHoveredCard && field === \"Q\" ? borderStyle : undefined}>\n\t\t\t\t<HybridCardField\n\t\t\t\t\tsaveChanges={(value) => {\n\t\t\t\t\t\tdispatch(cards.actions.updateCardContent(value, config.cardID, \"Q\", \"REPLACE\", config.origin));\n\t\t\t\t\t}}\n\t\t\t\t\tstoreValue={(config.content as QACardContent).q}\n\t\t\t\t\tlabel={\"Question\"}\n\t\t\t\t\tvariant=\"filled\"\n\t\t\t\t\tstyle={{ backgroundColor: \"#FFBF69\" }}\n\t\t\t\t\tInputLabelProps={{ style: { color: \"#000000\" } }}\n\t\t\t\t\tonMouseEnter={() => {\n\t\t\t\t\t\tdispatch(focus.actions.tryUpdateFocus(\"RIVER\"));\n\t\t\t\t\t\tdispatch(trySetSourceCard(\"Q\", config.origin));\n\t\t\t\t\t}}\n\t\t\t\t></HybridCardField>\n\t\t\t\t{isActiveRiver && <GrabForFieldButton cardConfig={config} creationType=\"Q\"></GrabForFieldButton>}\n\t\t\t\t{config.origin && !isNullOrUndefined((config.origin as QAOrigin).q?.spanIndex) && (\n\t\t\t\t\t<JumpToOriginButton cardOrigin={(config.origin as QAOrigin).q as SingleOrigin}></JumpToOriginButton>\n\t\t\t\t)}\n\t\t\t</Grid>\n\t\t\t<Grid item style={isHoveredCard && field === \"A\" ? borderStyle : undefined}>\n\t\t\t\t<HybridCardField\n\t\t\t\t\tsaveChanges={(value) => {\n\t\t\t\t\t\tdispatch(cards.actions.updateCardContent(value, config.cardID, \"A\", \"REPLACE\", config.origin));\n\t\t\t\t\t}}\n\t\t\t\t\tstoreValue={(config.content as QACardContent).a}\n\t\t\t\t\tlabel={\"Answer\"}\n\t\t\t\t\tvariant=\"filled\"\n\t\t\t\t\tstyle={{ backgroundColor: \"#2EC4B6\" }}\n\t\t\t\t\tInputLabelProps={{ style: { color: \"#000000\" } }}\n\t\t\t\t\tonMouseEnter={() => {\n\t\t\t\t\t\tdispatch(focus.actions.tryUpdateFocus(\"RIVER\"));\n\t\t\t\t\t\tdispatch(trySetSourceCard(\"A\", config.origin));\n\t\t\t\t\t}}\n\t\t\t\t></HybridCardField>\n\t\t\t\t{isActiveRiver && <GrabForFieldButton cardConfig={config} creationType=\"A\"></GrabForFieldButton>}\n\t\t\t\t{config.origin && !isNullOrUndefined((config.origin as QAOrigin).a?.spanIndex) && (\n\t\t\t\t\t<JumpToOriginButton cardOrigin={(config.origin as QAOrigin).a as SingleOrigin}></JumpToOriginButton>\n\t\t\t\t)}\n\t\t\t</Grid>\n\t\t\t<Grid item>\n\t\t\t\t<DeleteCardButton cardID={config.cardID}></DeleteCardButton>\n\t\t\t</Grid>\n\t\t</Grid>\n\t);\n};\n\nexport const Card = ({ config, riverID }: CardProps) => {\n\tswitch (config.type) {\n\t\tcase \"Note\":\n\t\t\treturn <NoteCard config={config} riverID={riverID}></NoteCard>;\n\t\tcase \"Q-A\":\n\t\t\treturn <QACard config={config} riverID={riverID}></QACard>;\n\t}\n};\n","import Grid from \"@material-ui/core/Grid\";\nimport React from \"react\";\nimport { incrementer } from \"../../../../shared/utils\";\nimport { Card } from \"./Card\";\nimport { CardConfig } from \"../../../cards/model\";\nimport { Divider } from \"@material-ui/core\";\n\nconst GridDivider = () => (\n\t<Grid item>\n\t\t<Divider></Divider>\n\t</Grid>\n);\n\nexport const toCardGridItemsWithDividers = (cards: CardConfig[], riverID: string) => {\n\tconst increment = incrementer();\n\n\treturn cards.reduce((prev, currentCard, index, arr) => {\n\t\tprev.push(\n\t\t\t<Grid item key={increment()}>\n\t\t\t\t<Card config={currentCard} riverID={riverID} key={increment()}></Card>\n\t\t\t</Grid>\n\t\t);\n\n\t\tconst notLastCard = index < arr.length - 1;\n\t\tif (notLastCard) prev.push(<GridDivider key={increment()}></GridDivider>);\n\t\treturn prev;\n\t}, [] as any[]);\n};\n","import FeaturedVideoIcon from \"@material-ui/icons/FeaturedVideo\";\nimport React from \"react\";\nimport { IconButton } from \"@material-ui/core\";\nimport { useDispatch } from \"react-redux\";\nimport cards from \"../../../../cards\";\nimport focus from \"../../../../focus\";\n\nexport const AddNoteButton = () => {\n\tconst dispatch = useDispatch();\n\treturn (\n\t\t<IconButton\n\t\t\ttype=\"button\"\n\t\t\tonClick={() => {\n\t\t\t\tdispatch(cards.actions.cardPush({ card: { type: \"Note\", content: \"\" } }));\n\t\t\t}}\n\t\t\tonMouseEnter={() => {\n\t\t\t\tdispatch(focus.actions.tryUpdateFocus(\"RIVER_CONTROL\"));\n\t\t\t}}\n\t\t>\n\t\t\t<FeaturedVideoIcon></FeaturedVideoIcon>\n\t\t</IconButton>\n\t);\n};\n","import FeaturedPlayListIcon from \"@material-ui/icons/FeaturedPlayList\";\nimport React from \"react\";\nimport { IconButton } from \"@material-ui/core\";\nimport { useDispatch } from \"react-redux\";\nimport cards from \"../../../../cards\";\nimport focus from \"../../../../focus\";\n\nexport const AddQAButton = () => {\n\tconst dispatch = useDispatch();\n\treturn (\n\t\t<IconButton\n\t\t\ttype=\"button\"\n\t\t\tonClick={() => {\n\t\t\t\tdispatch(cards.actions.cardPush({ card: { type: \"Q-A\", content: { q: \"\", a: \"\" } } }));\n\t\t\t}}\n\t\t\tonMouseEnter={() => {\n\t\t\t\tdispatch(focus.actions.tryUpdateFocus(\"RIVER_CONTROL\"));\n\t\t\t}}\n\t\t>\n\t\t\t<FeaturedPlayListIcon></FeaturedPlayListIcon>\n\t\t</IconButton>\n\t);\n};\n","import { Typography, Divider } from \"@material-ui/core\";\nimport Accordion from \"@material-ui/core/Accordion\";\nimport AccordionSummary from \"@material-ui/core/AccordionSummary\";\nimport AccordionDetails from \"@material-ui/core/AccordionDetails\";\nimport Grid from \"@material-ui/core/Grid\";\nimport React, { useState } from \"react\";\nimport { trySetPushToRiver } from \"../../actions\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { AddNoteButton } from \"./Buttons/AddNoteButton\";\nimport { AddQAButton } from \"./Buttons/AddQAButton\";\nimport { getPushToRiver } from \"../../selectors\";\n\n//TODO-NICE: make it not be accordion but closeable?\n//TODO-NICE: make local show / hide notes\nexport const CardRiverAccordion = ({\n\triverID,\n\tgridItems,\n\tsummary,\n}: {\n\triverID: string;\n\tgridItems: any;\n\tsummary: string;\n}) => {\n\tconst defaultElevation = 3;\n\tconst highlightElevation = 20;\n\tconst [elevation, setElevation] = useState(defaultElevation);\n\tconst pushToRiver = useSelector(getPushToRiver);\n\n\tif (riverID === pushToRiver && elevation === defaultElevation) {\n\t\tsetElevation(highlightElevation);\n\t} else if (riverID !== pushToRiver && elevation !== defaultElevation) {\n\t\tsetElevation(defaultElevation);\n\t}\n\n\tconst dispatch = useDispatch();\n\treturn (\n\t\t<Accordion\n\t\t\tdefaultExpanded={true}\n\t\t\tonMouseEnter={() => {\n\t\t\t\tdispatch(trySetPushToRiver(riverID));\n\t\t\t}}\n\t\t\televation={elevation}\n\t\t>\n\t\t\t<AccordionSummary>\n\t\t\t\t<Typography\n\t\t\t\t\tvariant=\"h6\"\n\t\t\t\t\talign=\"center\"\n\t\t\t\t\tstyle={{ MozUserSelect: \"none\", WebkitUserSelect: \"none\", msUserSelect: \"none\" }}\n\t\t\t\t>\n\t\t\t\t\t{summary}\n\t\t\t\t</Typography>\n\t\t\t</AccordionSummary>\n\t\t\t<AccordionDetails>\n\t\t\t\t<Grid container direction=\"column\" spacing={2} justify=\"center\" alignItems=\"stretch\">\n\t\t\t\t\t<Grid item>\n\t\t\t\t\t\t<AddQAButton></AddQAButton>\n\t\t\t\t\t\t<AddNoteButton></AddNoteButton>\n\t\t\t\t\t\t<Divider></Divider>\n\t\t\t\t\t</Grid>\n\t\t\t\t\t{gridItems}\n\t\t\t\t</Grid>\n\t\t\t</AccordionDetails>\n\t\t</Accordion>\n\t);\n};\n","import { CardConfig } from \"../../../cards/model\";\nimport { toCardGridItemsWithDividers } from \"./toCardGridItemsWithDividers\";\nimport { useMemo } from \"react\";\nimport { CardRiverAccordion } from \"./CardRiverAccordion\";\nimport React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { getRiverContentState } from \"../../selectors\";\n\n//TODO-RC: make Card-River non-overlapping and scroll the cards that we are considering from the Menus into view\n//TODO-NICE: untangle these components, dont need to so many subs?\n\nexport const ChildCardRiver = ({ riverID, riverCards }: { riverID: string; riverCards: CardConfig[] }) => {\n\tconst riverContentState = useSelector(getRiverContentState);\n\n\t// this should only change if the store values change\n\tconst gridItems = useMemo(() => {\n\t\tlet inputCards = riverCards;\n\n\t\tif (riverContentState !== \"ALL\") {\n\t\t\tif (riverContentState === \"QAS\") {\n\t\t\t\tinputCards = riverCards.filter((config) => config.type === \"Q-A\");\n\t\t\t}\n\t\t\tif (riverContentState === \"NOTES\") {\n\t\t\t\tinputCards = riverCards.filter((config) => config.type === \"Note\");\n\t\t\t}\n\t\t}\n\n\t\treturn toCardGridItemsWithDividers(inputCards, riverID);\n\t}, [riverCards, riverID, riverContentState]);\n\n\treturn <CardRiverAccordion riverID={riverID} gridItems={gridItems} summary={riverID}></CardRiverAccordion>;\n};\n","import { CardField, CardOrigin, CardID } from \"../cards/model\";\n\nexport type RiverMakeUp = { riverID: string; cardIDs: CardID[] };\n\nexport type RiverMakeUps = { [riverID: string]: RiverMakeUp };\n\nexport type RiverShowState = \"SHOW\" | \"HIDE\";\n\nexport type RiverContentState = \"ALL\" | \"NOTES\" | \"QAS\";\n\n//TODO-NICE: rename pushto/active river\n\n// SourceCard is used when selecting/extracting from a card\nexport type SourceCard = { origin?: CardOrigin; sourceField: CardField };\n\nexport type CardRiverState = {\n\triverMakeUps: RiverMakeUps;\n\tactiveRiverMakeUpID: string;\n\tpushToRiverID: string;\n\tlastRiverIDNumber: number;\n\t// show/hide river\n\triverShowState: RiverShowState;\n\t// filter content\n\triverContentState: RiverContentState;\n\t// this is used to determine which card should be highlighted in reaction to hovering over it in the context-menu\n\thighlightedCardID: null | CardID;\n\thighlightedCardField: null | CardField;\n\t// is used to determine if we are extracting from a card\n\tsourceCard: SourceCard | null;\n};\n\nexport const pageNumberToRiverMakeUpID = (page: number) => \"CardRiver \" + page;\n\nexport const riverMakeUpIDToPageNumber = (riverID: string) => parseInt(riverID.replace(\"CardRiver \", \"\"));\n","import { Grid } from \"@material-ui/core\";\nimport { useSelector } from \"react-redux\";\nimport { getRiverMakeUps } from \"../../selectors\";\nimport React, { useRef, useEffect } from \"react\";\nimport cards from \"../../../cards\";\nimport focus from \"../../../focus\";\nimport display from \"../../../display\";\nimport { incrementer } from \"../../../../shared/utils\";\nimport { ChildCardRiver } from \"../CardRiver/ChildCardRiver\";\nimport { riverMakeUpIDToPageNumber } from \"../../model\";\n\n//TODO-RC: make cards searchable when looking at River/Material\n//TODO-PREF: memoize Rivers (not necessary right now, because we just hide)\n\nexport const SummaryRiver = () => {\n\tconst displayFocus = useSelector(focus.selectors.getDisplayFocus);\n\tconst currentPage = useSelector(display.selectors.getCurrentPage);\n\tconst cardConfigs = useSelector(cards.selectors.getCards);\n\tconst riverMakeUps = Object.values(useSelector(getRiverMakeUps));\n\tconst focusRef = useRef<HTMLDivElement | null>(null);\n\n\t// the current-page river is scrolled into view\n\tuseEffect(() => {\n\t\tif (displayFocus === \"SUMMARY_RIVER\" && focusRef.current !== null) {\n\t\t\t(focusRef.current as HTMLDivElement).focus();\n\t\t\t(focusRef.current as HTMLDivElement).scrollIntoView({ behavior: \"smooth\", block: \"center\", inline: \"center\" });\n\t\t}\n\t}, [displayFocus, currentPage]);\n\n\tconst increment = incrementer();\n\t//TODO-NICE: find way to make UI-text unselectable globally, maybe different focus? But might be unperformant\n\treturn (\n\t\t<Grid container justify=\"flex-start\" direction=\"row\" alignItems=\"stretch\" spacing={1}>\n\t\t\t{riverMakeUps.map((makeUp) =>\n\t\t\t\tmakeUp.cardIDs.length > 0 ? (\n\t\t\t\t\t<Grid\n\t\t\t\t\t\titem\n\t\t\t\t\t\tref={riverMakeUpIDToPageNumber(makeUp.riverID) === currentPage ? focusRef : null}\n\t\t\t\t\t\tkey={increment()}\n\t\t\t\t\t>\n\t\t\t\t\t\t<ChildCardRiver\n\t\t\t\t\t\t\triverID={makeUp.riverID}\n\t\t\t\t\t\t\triverCards={makeUp.cardIDs.map((id) => cardConfigs[id])}\n\t\t\t\t\t\t\tkey={increment()}\n\t\t\t\t\t\t></ChildCardRiver>\n\t\t\t\t\t</Grid>\n\t\t\t\t) : null\n\t\t\t)}\n\t\t</Grid>\n\t);\n};\n","import React from \"react\";\nimport Grid from \"@material-ui/core/Grid\";\nimport focus from \"../../../focus\";\nimport { useSelector } from \"react-redux\";\nimport { SummaryRiver } from \"./SummaryRiver\";\n\n//TODO-RC: dont show empty rivers in summary, make dropdown/create empty river button\n\nexport const SummaryRiverView = () => {\n\tconst displayFocus = useSelector(focus.selectors.getDisplayFocus);\n\n\treturn (\n\t\t<Grid item hidden={displayFocus !== \"SUMMARY_RIVER\"}>\n\t\t\t<SummaryRiver></SummaryRiver>\n\t\t</Grid>\n\t);\n};\n","import React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { getActiveRiverCards, getActiveRiverMakeUpID } from \"../../selectors\";\nimport { ChildCardRiver } from \"../CardRiver/ChildCardRiver\";\n\n//TODO-NICE: selection in CardRiver should stay highlighted when the contextMenu opens?\n\n//TODO-NICE: contextMenu as permant element, maybe sidebar?\n//TODO-NICE: preview in ContextMenu of how selected string would be used\n\nexport const ActiveCardRiver = () => {\n\tconst riverID = useSelector(getActiveRiverMakeUpID);\n\tconst riverCards = useSelector(getActiveRiverCards);\n\n\treturn <ChildCardRiver riverID={riverID} riverCards={riverCards}></ChildCardRiver>;\n};\n","import React from \"react\";\nimport Grid from \"@material-ui/core/Grid\";\nimport { ActiveCardRiver } from \"./ActiveCardRiver\";\n//TODO-NICE: make River-View, where you can just see one card and can make it smaller? Maybe just button to zoom \"in\" / just seeing the current river\n//TODO-NICE: mark Origin-Span or maybe rect over whole page-section?\n//TODO-NICE: make reconciliation algorithm for origin when new PDF versions come out\n\nexport const ActiveRiverColumn = ({ hidden }: any) => {\n\treturn (\n\t\t<Grid\n\t\t\titem\n\t\t\tstyle={{\n\t\t\t\twidth: \"38%\",\n\t\t\t}}\n\t\t\thidden={hidden}\n\t\t>\n\t\t\t<ActiveCardRiver></ActiveCardRiver>\n\t\t</Grid>\n\t);\n};\n","import React from \"react\";\nimport Grid from \"@material-ui/core/Grid\";\nimport display from \"../../../display\";\nimport focus from \"../../../focus\";\nimport { useSelector } from \"react-redux\";\nimport { ActiveRiverColumn } from \"./ActiveRiverColumn\";\nimport { riverShowStateIsShow } from \"../../selectors\";\n\nexport const ActiveRiverView = () => {\n\tconst displayFocus = useSelector(focus.selectors.getDisplayFocus);\n\tconst showMaterial = useSelector(display.selectors.displayStatusIsShow);\n\tconst showRiver = useSelector(riverShowStateIsShow);\n\treturn (\n\t\t<Grid item hidden={displayFocus !== \"ACTIVE_RIVER\"}>\n\t\t\t<Grid container justify=\"space-around\" direction=\"row\" alignItems=\"stretch\">\n\t\t\t\t<ActiveRiverColumn hidden={!showRiver}></ActiveRiverColumn>\n\t\t\t\t<display.components.MaterialDisplayColumnWithSize\n\t\t\t\t\thidden={!showMaterial}\n\t\t\t\t></display.components.MaterialDisplayColumnWithSize>\n\t\t\t</Grid>\n\t\t</Grid>\n\t);\n};\n","import { FormGroup, FormControlLabel, withStyles, CheckboxProps, Checkbox } from \"@material-ui/core\";\nimport React from \"react\";\nimport { green } from \"@material-ui/core/colors\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { getRiverContentState } from \"../selectors\";\nimport { RiverContentState } from \"../model\";\nimport { setRiverContentState } from \"../actions\";\n\nconst GreenCheckbox = withStyles({\n\troot: {\n\t\tcolor: green[400],\n\t\t\"&$checked\": {\n\t\t\tcolor: green[600],\n\t\t},\n\t},\n\tchecked: {},\n})((props: CheckboxProps) => <Checkbox color=\"default\" {...props} />);\n\nexport const RiverContentFormGroup = () => {\n\tconst riverContentState = useSelector(getRiverContentState);\n\tconst dispatch = useDispatch();\n\n\tconst showQAs = riverContentState === \"ALL\" || riverContentState === \"QAS\";\n\tconst showNotes = riverContentState === \"ALL\" || riverContentState === \"NOTES\";\n\n\tconst changeContentState = (clickedState: RiverContentState) => {\n\t\t// deactivating changes to the other state\n\t\t// reactivating leads to all-state, we dont allow do show nothing\n\n\t\tconst wantsToDeactiveNotesWithDeactivatedQAs = !showQAs && showNotes && clickedState === \"NOTES\";\n\t\tconst wantsToDeactiveQAsWithDeactivatedNotes = !showNotes && showQAs && clickedState === \"QAS\";\n\n\t\tif (wantsToDeactiveNotesWithDeactivatedQAs || wantsToDeactiveQAsWithDeactivatedNotes) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (!showQAs && clickedState === \"QAS\") {\n\t\t\tdispatch(setRiverContentState(\"ALL\"));\n\t\t\treturn;\n\t\t}\n\n\t\tif (!showNotes && clickedState === \"NOTES\") {\n\t\t\tdispatch(setRiverContentState(\"ALL\"));\n\t\t\treturn;\n\t\t}\n\n\t\tif (showQAs && clickedState === \"QAS\") {\n\t\t\tdispatch(setRiverContentState(\"NOTES\"));\n\t\t\treturn;\n\t\t}\n\n\t\tif (showNotes && clickedState === \"NOTES\") {\n\t\t\tdispatch(setRiverContentState(\"QAS\"));\n\t\t\treturn;\n\t\t}\n\t};\n\n\treturn (\n\t\t<FormGroup row>\n\t\t\t<FormControlLabel\n\t\t\t\tcontrol={\n\t\t\t\t\t<GreenCheckbox\n\t\t\t\t\t\tchecked={showQAs}\n\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\tchangeContentState(\"QAS\");\n\t\t\t\t\t\t}}\n\t\t\t\t\t/>\n\t\t\t\t}\n\t\t\t\tlabel=\"Show QAs\"\n\t\t\t/>\n\t\t\t<FormControlLabel\n\t\t\t\tcontrol={\n\t\t\t\t\t<GreenCheckbox\n\t\t\t\t\t\tchecked={showNotes}\n\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\tchangeContentState(\"NOTES\");\n\t\t\t\t\t\t}}\n\t\t\t\t\t/>\n\t\t\t\t}\n\t\t\t\tlabel=\"Show Notes\"\n\t\t\t/>\n\t\t</FormGroup>\n\t);\n};\n","import { CardRiverState, RiverShowState, pageNumberToRiverMakeUpID, RiverMakeUp, RiverContentState } from \"./model\";\nimport { FinalizedCardPayload, CardID } from \"../cards/model\";\nimport cards from \"../cards\";\nimport * as t from \"./actionTypes\";\nimport display from \"../display\";\nimport focus from \"../focus\";\nimport { UserFocus } from \"../focus/model\";\nimport { CentralControlRiver } from \"../control/model\";\n\nconst initialState: CardRiverState = {\n\triverMakeUps: {\n\t\t[pageNumberToRiverMakeUpID(1)]: {\n\t\t\triverID: pageNumberToRiverMakeUpID(1),\n\t\t\tcardIDs: [\"2\", \"0\", \"1\"],\n\t\t},\n\t},\n\tpushToRiverID: pageNumberToRiverMakeUpID(1),\n\tactiveRiverMakeUpID: pageNumberToRiverMakeUpID(1),\n\tlastRiverIDNumber: 1,\n\triverShowState: \"SHOW\",\n\thighlightedCardID: null,\n\thighlightedCardField: null,\n\triverContentState: \"ALL\",\n\tsourceCard: null,\n};\n\nconst emptyCardRiver = (page: number): RiverMakeUp => {\n\treturn {\n\t\triverID: pageNumberToRiverMakeUpID(page),\n\t\tcardIDs: [],\n\t};\n};\n\nconst updateStateWithMakeUps = (state: CardRiverState, ...makeUps: RiverMakeUp[]) => {\n\tconst updatedState = { ...state };\n\tmakeUps.forEach((makeUp) => {\n\t\tupdatedState.riverMakeUps[makeUp.riverID] = makeUp;\n\t});\n\treturn updatedState;\n};\n\nconst deactivateActiveCardRiver = (state: CardRiverState) => {\n\treturn { ...state.riverMakeUps[state.activeRiverMakeUpID], active: false };\n};\n\nconst removeCardFromRivers = (state: CardRiverState, cardID: CardID): CardRiverState => {\n\tconst riverMakeUps = Object.fromEntries(\n\t\tObject.entries(state.riverMakeUps).map((entry) => [\n\t\t\tentry[0],\n\t\t\t{ ...entry[1], cardIDs: entry[1].cardIDs.filter((id) => id !== cardID) },\n\t\t])\n\t);\n\treturn { ...state, riverMakeUps };\n};\n\nconst cardRiverState = (state = initialState, { type, payload }: { type: string; payload: any }) => {\n\tlet riverMakeUp;\n\tlet riverMakeUps;\n\tswitch (type) {\n\t\tcase display.actionTypes.PAGE_UPDATE:\n\t\t\tlet activeRiver;\n\t\t\tif (!state.riverMakeUps[pageNumberToRiverMakeUpID(payload as number)]) {\n\t\t\t\tactiveRiver = emptyCardRiver(payload as number);\n\t\t\t} else {\n\t\t\t\tactiveRiver = { ...state.riverMakeUps[pageNumberToRiverMakeUpID(payload as number)] };\n\t\t\t}\n\n\t\t\tconst oldRiver = deactivateActiveCardRiver(state);\n\n\t\t\treturn {\n\t\t\t\t...updateStateWithMakeUps(state, activeRiver, oldRiver),\n\t\t\t\tactiveRiverMakeUpID: activeRiver.riverID,\n\t\t\t\tpushToRiverID: activeRiver.riverID,\n\t\t\t};\n\n\t\tcase cards.actionTypes.CARD_PUSH:\n\t\t\triverMakeUp = {\n\t\t\t\t...state.riverMakeUps[state.pushToRiverID],\n\t\t\t\tcardIDs: [...state.riverMakeUps[state.pushToRiverID].cardIDs, (payload as FinalizedCardPayload).card.cardID],\n\t\t\t};\n\t\t\triverMakeUps = { ...state.riverMakeUps };\n\t\t\triverMakeUps[state.pushToRiverID] = riverMakeUp;\n\n\t\t\treturn { ...state, riverMakeUps: riverMakeUps };\n\t\tcase cards.actionTypes.CARD_REMOVE:\n\t\t\treturn removeCardFromRivers(state, payload as string);\n\t\tcase t.RIVER_SHOW_STATE:\n\t\t\treturn { ...state, riverShowState: payload as RiverShowState };\n\t\tcase t.RIVER_CONTENT_STATE:\n\t\t\treturn { ...state, riverContentState: payload as RiverContentState };\n\t\tcase t.RIVER_PUSH_STATE:\n\t\t\treturn { ...state, pushToRiverID: payload };\n\t\tcase t.RIVER_HOVERED_CARD:\n\t\t\treturn { ...state, highlightedCardID: payload.id, highlightedCardField: payload.field };\n\t\tcase focus.actionTypes.FOCUS_UPDATE:\n\t\t\tlet sourceCard = state.sourceCard;\n\n\t\t\t//TODO-NICE: untangle the focus logic, might be that I can just reset in the first case\n\t\t\t// need to reset sourceCard because we want to trigger the correct Selection-Grab when in the document\n\t\t\tif ((payload as UserFocus) === \"DOCUMENT\" && sourceCard) {\n\t\t\t\tsourceCard = null;\n\t\t\t}\n\n\t\t\t// reset hovered-card once we are not focused on the context menu\n\t\t\t//TODO-NICE: investigate a better factoring for the relation between river and creation\n\t\t\tif (state.highlightedCardID !== null && (payload as UserFocus) !== \"CONTEXT_MENU\") {\n\t\t\t\treturn { ...state, highlightedCardID: null, highlightedCardField: null, sourceCard };\n\t\t\t} else {\n\t\t\t\treturn { ...state, sourceCard };\n\t\t\t}\n\t\tcase cards.actionTypes.GLOBAL_RESET:\n\t\t\tif (payload) {\n\t\t\t\treturn {\n\t\t\t\t\t...initialState,\n\t\t\t\t\triverMakeUps: (payload as CentralControlRiver).riverMakeUps,\n\t\t\t\t\tactiveRiverMakeUpID: (payload as CentralControlRiver).activeRiverMakeUpID,\n\t\t\t\t\tpushToRiverID: (payload as CentralControlRiver).pushToRiverID,\n\t\t\t\t\tlastRiverIDNumber: (payload as CentralControlRiver).lastRiverIDNumber,\n\t\t\t\t};\n\t\t\t} else {\n\t\t\t\treturn initialState;\n\t\t\t}\n\t\tcase t.RIVER_CARD_SOURCE:\n\t\t\treturn { ...state, sourceCard: payload };\n\t\tdefault:\n\t\t\treturn state;\n\t}\n};\n\nexport default cardRiverState;\n","import * as constants from \"./constants\";\nimport * as components from \"./components\";\nimport reducer from \"./reducer\";\nimport * as selectors from \"./selectors\";\nimport * as actions from \"./actions\";\n\nexport default { constants, components, reducer, selectors, actions };\n","export const NAME = \"centralControl\";\n","import { createSelector } from \"reselect\";\nimport display from \"../display\";\nimport river from \"../river\";\nimport cards from \"../cards\";\nimport { DocumentData, CentralControl } from \"./model\";\nimport { NAME } from \"./constants\";\n\nexport const getAll = (state: any) => state[NAME].present;\n\nexport const getDocumentDB = createSelector(getAll, (state: CentralControl) => state.documentDB);\n\nexport const getDocumentNames = createSelector(getDocumentDB, (db) => Object.keys(db));\n\nexport const getDocumentDataSets = createSelector(getDocumentDB, (db) => Object.values(db));\n\nexport const getCurrentDBData: (state: any) => DocumentData | null = createSelector(\n\tdisplay.selectors.getPDFName,\n\triver.selectors.getRiverMakeUps,\n\triver.selectors.getActiveRiverMakeUpID,\n\triver.selectors.getPushToRiver,\n\triver.selectors.getLastRiverIDNumber,\n\tcards.selectors.getCards,\n\tcards.selectors.getLastCardIDNumber,\n\t(pdfName, riverMakeUps, activeRiverMakeUpID, pushToRiverID, lastRiverIDNumber, cards, lastCardIDNumber) => {\n\t\treturn {\n\t\t\tname: pdfName as string,\n\t\t\triverMakeUps,\n\t\t\tactiveRiverMakeUpID,\n\t\t\tpushToRiverID,\n\t\t\tlastRiverIDNumber,\n\t\t\tcards,\n\t\t\tlastCardIDNumber,\n\t\t};\n\t}\n);\n","import { NAME } from \"./constants\";\n\nexport const ARCHIVE_CURRENT_DATA = NAME + \"/ARCHIVE_CURRENT_DATA\";\nexport const LOAD_DOCUMENT_DATA_SETS = NAME + \"/LOAD_DOCUMENT_DATA_SETS\";\n","import { Dispatch } from \"redux\";\nimport { getCurrentDBData, getDocumentDB, getDocumentDataSets } from \"./selectors\";\nimport { DocumentData } from \"./model\";\nimport display from \"../display\";\nimport cards from \"../cards\";\nimport * as t from \"./actionTypes\";\nimport { ActionCreators } from \"redux-undo\";\n\nexport const archiveDBData = (dbData: DocumentData) => {\n\treturn { type: t.ARCHIVE_CURRENT_DATA, payload: dbData };\n};\n\nexport const archiveCurrentDBData = () => {\n\treturn (dispatch: Dispatch, getState: Function) => {\n\t\tconst state = getState();\n\t\tconst currentPDFName = display.selectors.getPDFName(state);\n\n\t\tif (currentPDFName !== undefined) {\n\t\t\tconst dbData = getCurrentDBData(state) as DocumentData;\n\t\t\tdispatch(archiveDBData(dbData));\n\t\t}\n\t};\n};\n\nconst fileDownload = require(\"js-file-download\");\nexport const downloadDBData = () => {\n\treturn (dispatch: any, getState: Function) => {\n\t\t//actualize the db before downloading\n\t\tdispatch(archiveCurrentDBData());\n\n\t\tconst documentDataSets = getDocumentDataSets(getState());\n\t\tconst localString = new Date().toLocaleString();\n\t\tfileDownload(JSON.stringify(documentDataSets), localString + \" ClayMemory.txt\");\n\t};\n};\n\nexport const changeDocument = (pdf: File) => {\n\treturn (dispatch: Dispatch, getState: Function) => {\n\t\tconst newPDFName = pdf.name;\n\n\t\tconst state = getState();\n\t\tconst currentPDFName = display.selectors.getPDFName(state);\n\n\t\tconst documentDB = getDocumentDB(state);\n\n\t\t// save current data only if pdf has been uploaded / there is an active document\n\t\tif (currentPDFName !== undefined) {\n\t\t\tconst dbData = getCurrentDBData(state) as DocumentData;\n\t\t\tdispatch(archiveDBData(dbData));\n\t\t}\n\n\t\tdispatch(display.actions.pdfUpload(pdf));\n\n\t\t// if the uploaded pdf is the same as the active one, then we just reloaded the app (lost the pdf)\n\t\t// and dont need load data (loading data would lead to overwrite because of the syncing order)\n\t\t//TODO-NICE: make the sync between documentDB and active document for explicit, right now I just sync when a PDF is uploaded\n\t\tif (newPDFName === currentPDFName) {\n\t\t\treturn;\n\t\t}\n\t\t// load new data or reset\n\t\tconst newDocumentData = documentDB[newPDFName];\n\t\tif (newDocumentData) {\n\t\t\tdispatch({ type: cards.actionTypes.GLOBAL_RESET, payload: newDocumentData });\n\t\t} else {\n\t\t\tdispatch({ type: cards.actionTypes.GLOBAL_RESET });\n\t\t}\n\n\t\t// no undo-redo across documents\n\t\tdispatch(ActionCreators.clearHistory());\n\t};\n};\n\nexport const loadDocumentDataSets = (dbData: DocumentData[]) => {\n\treturn { type: t.LOAD_DOCUMENT_DATA_SETS, payload: dbData };\n};\n","import { useRef, useEffect, MutableRefObject } from \"react\";\n\n// only global eventListener for now\nexport const useEventListener = (eventName: string, handler: any) => {\n\tconst savedHandler: MutableRefObject<Function> = useRef(() => {});\n\n\tuseEffect(() => {\n\t\tsavedHandler.current = handler;\n\t}, [handler]);\n\n\tuseEffect(() => {\n\t\tconst eventListener = (event: Event) => savedHandler.current(event);\n\t\tdocument.addEventListener(eventName, eventListener);\n\t\treturn () => {\n\t\t\tdocument.removeEventListener(eventName, eventListener);\n\t\t};\n\t}, [eventName]);\n};\n","export const NAME = \"creationData\";\n","import { NAME } from \"./constants\";\n\nexport const TOGGLE_CONTEXT_MENU = NAME + \"/TOGGLE_CONTEXT_MENU\";\nexport const CLOSE_CONTEXT_MENU = NAME + \"/CLOSE_CONTEXT_MENU\";\nexport const OPEN_CONTEXT_MENU = NAME + \"/OPEN_CONTEXT_MENU\";\nexport const SELECTED_STRING = NAME + \"/SELECTED_STRING\";\nexport const SELECTED_PARENT = NAME + \"/SELECTED_PARENT\";\nexport const DOCUMENT_POSITION = NAME + \"/SELECITON_POSITION\";\n","import { NAME } from \"./constants\";\nimport { createSelector } from \"reselect\";\nimport { CreationData } from \"./model\";\nimport river from \"../river\";\nimport display from \"../display\";\nimport { SingleOrigin } from \"../cards/model\";\n\nexport const getAll = (state: any) => state[NAME].present;\n\nexport const getContextMenuState = createSelector(getAll, (state: CreationData) => state.open);\n\nexport const getContextMenuRef = createSelector(getAll, (state: CreationData) => state.menuRef);\n\nexport const getContextMenuFullCardsRef = createSelector(getAll, (state: CreationData) => state.fullCardRef);\n\nexport const getContextMenuQARefs = createSelector(getAll, (state: CreationData) => state.qaRefs);\n\nexport const getCurrentSelectionPosition = createSelector(getAll, (state: CreationData) => state.selectionPosition);\n\nexport const getContextMenuInitData = createSelector(\n\tgetCurrentSelectionPosition,\n\tgetContextMenuState,\n\tgetContextMenuRef,\n\tgetContextMenuQARefs,\n\triver.selectors.getPushToRiverCards,\n\t(position, state, menuRef, qaRefs, riverCards) => {\n\t\treturn { position, state, menuRef, qaRefs, riverCards };\n\t}\n);\n\nexport const getCurrentSelectedString = createSelector(getAll, (state: CreationData) => state.manuallySelectedString);\n\nexport const getCurrentSelectedParent = createSelector(getAll, (state: CreationData) => state.selectedParentSpan);\n\nexport const getCurrentOrigin = createSelector(\n\t(state: any) => state,\n\tdisplay.selectors.getCurrentPage,\n\tgetCurrentSelectedParent,\n\t(state, currentPage, selectedParent): SingleOrigin => {\n\t\treturn {\n\t\t\tspanIndex: display.selectors.getSpanIndex(state, selectedParent as HTMLSpanElement),\n\t\t\tpage: currentPage,\n\t\t};\n\t}\n);\n","import { CreationType, CardOrigin, QAOrigin } from \"../../cards/model\";\nimport { isNullOrUndefined } from \"util\";\n\n//TODO-NICE: make this non-redundant, but for now it works\n\nexport const transformInputOrigin = (\n\tsourceOrigin: CardOrigin,\n\tsourceField: CreationType,\n\tcreationType: CreationType,\n\tgoalOrigin?: CardOrigin\n) => {\n\tif (!goalOrigin) {\n\t\tif (sourceField === creationType) return sourceOrigin;\n\n\t\tif (sourceField === \"NOTE\") {\n\t\t\t// this means SingleOrigin\n\t\t\treturn { q: {}, a: {}, [creationType === \"Q\" ? \"q\" : \"a\"]: sourceOrigin };\n\t\t}\n\n\t\tif (creationType === \"NOTE\") {\n\t\t\t//this means we need to transfrom QAOrigin to SingleOrigin\n\t\t\treturn { ...(sourceOrigin as QAOrigin)[sourceField === \"Q\" ? \"q\" : \"a\"] };\n\t\t}\n\n\t\t// swap cases\n\t\tif (creationType === \"Q\") {\n\t\t\treturn { q: (sourceOrigin as QAOrigin).a, a: {} };\n\t\t} else {\n\t\t\t//A\n\t\t\treturn { a: (sourceOrigin as QAOrigin).q, q: {} };\n\t\t}\n\t} else {\n\t\tif (sourceField === creationType) return { ...goalOrigin, ...sourceOrigin };\n\n\t\tif (sourceField === \"NOTE\" && !isNullOrUndefined((goalOrigin as QAOrigin).q)) {\n\t\t\t// this means SingleOrigin to QAOrigin\n\t\t\treturn { ...goalOrigin, [creationType === \"Q\" ? \"q\" : \"a\"]: sourceOrigin };\n\t\t}\n\n\t\tif (creationType === \"NOTE\") {\n\t\t\t//this means we need to transfrom QAOrigin to SingleOrigin\n\t\t\treturn { ...(sourceOrigin as QAOrigin)[sourceField === \"Q\" ? \"q\" : \"a\"] };\n\t\t}\n\n\t\t// swap cases\n\t\tif (creationType === \"Q\") {\n\t\t\treturn { q: (sourceOrigin as QAOrigin).a, a: (goalOrigin as QAOrigin).a };\n\t\t} else {\n\t\t\t//A\n\t\t\treturn { a: (sourceOrigin as QAOrigin).q, q: (goalOrigin as QAOrigin).q };\n\t\t}\n\t}\n};\n","import * as t from \"./actionTypes\";\nimport { CardType, CreationType, CardOrigin, QAOrigin, SingleOrigin } from \"../cards/model\";\nimport cards from \"../cards\";\nimport focus from \"../focus\";\nimport { getCurrentSelectedString, getCurrentSelectedParent, getContextMenuState, getCurrentOrigin } from \"./selectors\";\nimport { isNullOrUndefined } from \"util\";\nimport { transformInputOrigin } from \"./services/transformInputOrigin\";\nimport display from \"../display\";\nimport river from \"../river\";\n\nexport const toggleContextMenu = () => {\n\treturn (dispatch: any, getState: Function) => {\n\t\tconst state = getState();\n\t\tif (display.selectors.getDataExists(state)) {\n\t\t\tdispatch({ type: t.TOGGLE_CONTEXT_MENU });\n\t\t\tdispatch(focus.actions.toggleContextMenuFocus());\n\t\t}\n\t};\n};\n\nexport const closeContextMenu = () => {\n\treturn (dispatch: any, getState: Function) => {\n\t\tif (getContextMenuState(getState())) {\n\t\t\tdispatch({ type: t.CLOSE_CONTEXT_MENU });\n\t\t\tdispatch(focus.actions.updateFocus(\"DOCUMENT\"));\n\t\t}\n\t};\n};\n\nexport const openContextMenu = () => {\n\treturn (dispatch: any) => {\n\t\tdispatch({ type: t.OPEN_CONTEXT_MENU });\n\t\tdispatch(focus.actions.updateFocus(\"DOCUMENT\"));\n\t};\n};\n\nexport const grabSelectionForContextMenu = (type: CardType, creationType: CreationType, cardID?: string) => {\n\treturn (dispatch: Function, getState: Function) => {\n\t\tdispatch(closeContextMenu());\n\n\t\tconst state = getState();\n\n\t\t//TODO-NICE: think of a way to make this intuitive\n\t\t//const updateType = type === \"Q-A\" ? \"REPLACE\" : \"APPEND\";\n\t\tconst updateType = \"REPLACE\";\n\t\tconst isUpdate = cardID !== undefined;\n\n\t\t// this should be from the document\n\t\tconst selectedString = getCurrentSelectedString(state);\n\t\tconst selectedParent = getCurrentSelectedParent(state);\n\n\t\t// always overwrite origin, even if isUpdate, because updateType==replace\n\t\tconst origin: CardOrigin | undefined = selectedParent ? getCurrentOrigin(state) : undefined;\n\n\t\tlet transformedOrigin;\n\t\tif (origin) {\n\t\t\t// we exploit that the input from the document is always just a SingleOrigin=NoteOrigin\n\t\t\t// need to transform it because we can create als QA-Cards from document\n\t\t\ttransformedOrigin = transformInputOrigin(\n\t\t\t\torigin,\n\t\t\t\t\"NOTE\",\n\t\t\t\tcreationType,\n\t\t\t\tisUpdate ? (cards.selectors.getCards(state)[cardID as string].origin as CardOrigin) : undefined\n\t\t\t);\n\t\t}\n\n\t\tif (isUpdate) {\n\t\t\tdispatch(\n\t\t\t\tcards.actions.updateCardContent(\n\t\t\t\t\tselectedString,\n\t\t\t\t\tcardID as string,\n\t\t\t\t\tcreationType,\n\t\t\t\t\tupdateType,\n\t\t\t\t\ttransformedOrigin as CardOrigin\n\t\t\t\t)\n\t\t\t);\n\t\t} else {\n\t\t\tdispatch(\n\t\t\t\tcards.actions.pushCardContent(selectedString, creationType, updateType, type, transformedOrigin as CardOrigin)\n\t\t\t);\n\t\t}\n\n\t\tdispatch(resetManuallySelectedString());\n\t};\n};\n\nexport const hasNonEmptyOrigin = (origin?: CardOrigin) =>\n\t!!origin &&\n\t(!isNullOrUndefined((origin as SingleOrigin).spanIndex) ||\n\t\t!isNullOrUndefined((origin as QAOrigin).a?.spanIndex) ||\n\t\t!isNullOrUndefined((origin as QAOrigin).q?.spanIndex));\n\nexport const grabSelectionForSourceMenu = (\n\ttype: CardType,\n\tcreationType: CreationType,\n\tsourceField: CreationType,\n\torigin?: CardOrigin,\n\tcardID?: string\n) => {\n\treturn (dispatch: Function, getState: Function) => {\n\t\tdispatch(closeContextMenu());\n\n\t\tconst state = getState();\n\n\t\tconst updateType = \"REPLACE\";\n\t\tconst isUpdate = cardID !== undefined;\n\n\t\t//  this should be from the SourceCard in which the extract button has been clicked\n\t\t//\tthe SourceCard can or can not have an origin\n\t\tconst sourceHasNonEmptyOrigin = hasNonEmptyOrigin(origin);\n\t\tconst newOrigin = sourceHasNonEmptyOrigin\n\t\t\t? transformInputOrigin(\n\t\t\t\t\torigin as CardOrigin,\n\t\t\t\t\tsourceField,\n\t\t\t\t\tcreationType,\n\t\t\t\t\tisUpdate ? (cards.selectors.getCards(state)[cardID as string].origin as CardOrigin) : undefined\n\t\t\t  )\n\t\t\t: undefined;\n\t\tconst selectedString = getCurrentSelectedString(state);\n\n\t\t//TODO-NICE: untangle the types so that the as CardOrigin is not necessary in the dispatch,\n\t\t//maybe merge content and origin to avoid two object hierarchies?\n\t\tif (isUpdate) {\n\t\t\tdispatch(\n\t\t\t\tcards.actions.updateCardContent(\n\t\t\t\t\tselectedString,\n\t\t\t\t\tcardID as string,\n\t\t\t\t\tcreationType,\n\t\t\t\t\tupdateType,\n\t\t\t\t\tnewOrigin as CardOrigin\n\t\t\t\t)\n\t\t\t);\n\t\t} else {\n\t\t\tdispatch(cards.actions.pushCardContent(selectedString, creationType, updateType, type, newOrigin as CardOrigin));\n\t\t}\n\n\t\tdispatch(resetManuallySelectedString());\n\t\tdispatch(river.actions.resetSourceCard());\n\t};\n};\n\nexport const updateManuallySelectedString = (str: string) => {\n\treturn { type: t.SELECTED_STRING, payload: str };\n};\n\nexport const resetManuallySelectedString = () => {\n\treturn updateManuallySelectedString(\"\");\n};\n\nexport const selectedParent = (span: null | HTMLSpanElement) => {\n\treturn { type: t.SELECTED_PARENT, payload: span };\n};\n\nexport const updateSelectionPosition = (x: number, y: number) => {\n\treturn { type: t.DOCUMENT_POSITION, payload: { x, y } };\n};\n","import * as t from \"./actionTypes\";\nimport { CreationData } from \"./model\";\nimport { createRef } from \"react\";\nimport { CardPayload } from \"../cards/model\";\nimport cards from \"../cards\";\n\nconst initialState: CreationData = {\n\topen: false,\n\tmenuRef: createRef(),\n\tfullCardRef: createRef(),\n\tqaRefs: [createRef(), createRef()],\n\tmanuallySelectedString: \"\",\n\tselectedParentSpan: null,\n\tselectionPosition: { x: 0, y: 0 },\n};\n\nconst creationData = (state = initialState, { type, payload }: { type: string; payload: any }): CreationData => {\n\tswitch (type) {\n\t\tcase t.TOGGLE_CONTEXT_MENU:\n\t\t\treturn { ...state, open: !state.open };\n\t\tcase t.CLOSE_CONTEXT_MENU:\n\t\t\treturn { ...state, open: false };\n\t\tcase t.OPEN_CONTEXT_MENU:\n\t\t\treturn { ...state, open: true };\n\t\tcase cards.actionTypes.CARD_PUSH:\n\t\t\t//TODO-NICE: reliance on order of refs (needs to be the same as order of qaRefs) and coupling to the fact that a new card was pushed\n\t\t\t// might need to change if I allow moving the cards\n\t\t\t//TODO-NICE: no support for multiple rivers\n\t\t\tif ((payload as CardPayload).card.type === \"Q-A\") return { ...state, qaRefs: [...state.qaRefs, createRef()] };\n\t\t\treturn state;\n\t\tcase t.SELECTED_STRING:\n\t\t\treturn { ...state, manuallySelectedString: payload as string };\n\t\tcase t.SELECTED_PARENT:\n\t\t\treturn { ...state, selectedParentSpan: payload };\n\t\tcase t.DOCUMENT_POSITION:\n\t\t\treturn { ...state, selectionPosition: payload };\n\t\tdefault:\n\t\t\treturn state;\n\t}\n};\n\nexport default creationData;\n","import React, { RefObject } from \"react\";\nimport NestedMenuItem from \"material-ui-nested-menu-item\";\nimport { MenuItem } from \"@material-ui/core\";\nimport { CardConfig, CardType, CreationType, QACardContent } from \"../../cards/model\";\nimport { useDispatch } from \"react-redux\";\nimport river from \"../../river\";\n\nexport const noteCardIsEmpty = (content: string) => content === \"\";\nexport const qaCardIsNotFull = (content: QACardContent) =>\n\t(content as QACardContent).q === \"\" || (content as QACardContent).a === \"\";\n\ntype dispatchRiver = (type: CardType, creationType: CreationType, cardID?: string | undefined) => void;\n\n//TODO-NICE: rename this to note\n//TODO-NICE: entangle this dispatchRiver buisness and use hooks in the card components instead\n\nconst SingleOptionItem = ({ cardConfig, dispatchRiver }: { cardConfig: CardConfig; dispatchRiver: dispatchRiver }) => {\n\tconst dispatch = useDispatch();\n\n\treturn (\n\t\t<MenuItem\n\t\t\tonClick={() => {\n\t\t\t\tdispatchRiver(cardConfig.type, \"NOTE\", cardConfig.cardID);\n\t\t\t}}\n\t\t\tonMouseEnter={() => {\n\t\t\t\tdispatch(river.actions.trySetHoveredCard(cardConfig.cardID, \"NOTE\"));\n\t\t\t}}\n\t\t>\n\t\t\t{cardConfig.type}\n\t\t</MenuItem>\n\t);\n};\n\nconst QAOptionItem = ({\n\tcardConfig,\n\tdispatchRiver,\n\tqaRef,\n}: {\n\tcardConfig: CardConfig;\n\tdispatchRiver: dispatchRiver;\n\tqaRef: RefObject<any> | undefined;\n}) => {\n\tconst dispatch = useDispatch();\n\n\treturn (\n\t\t<NestedMenuItem label=\"Q-A\" parentMenuOpen={true}>\n\t\t\t<MenuItem\n\t\t\t\tref={qaRef}\n\t\t\t\tonClick={() => {\n\t\t\t\t\tdispatchRiver(\"Q-A\", \"Q\", cardConfig.cardID);\n\t\t\t\t}}\n\t\t\t\tonMouseEnter={() => {\n\t\t\t\t\tdispatch(river.actions.trySetHoveredCard(cardConfig.cardID, \"Q\"));\n\t\t\t\t}}\n\t\t\t>\n\t\t\t\tQ\n\t\t\t</MenuItem>\n\t\t\t<MenuItem\n\t\t\t\tonClick={() => {\n\t\t\t\t\tdispatchRiver(\"Q-A\", \"A\", cardConfig.cardID);\n\t\t\t\t}}\n\t\t\t\tonMouseEnter={() => {\n\t\t\t\t\tdispatch(river.actions.trySetHoveredCard(cardConfig.cardID, \"A\"));\n\t\t\t\t}}\n\t\t\t>\n\t\t\t\tA\n\t\t\t</MenuItem>\n\t\t</NestedMenuItem>\n\t);\n};\n\nexport const CardConfigItem = ({\n\tcardConfig,\n\tdispatchRiver,\n\tqaRef,\n}: {\n\tcardConfig: CardConfig;\n\tdispatchRiver: dispatchRiver;\n\tqaRef?: RefObject<any>;\n}) => {\n\tswitch (cardConfig.type) {\n\t\tcase \"Q-A\":\n\t\t\treturn <QAOptionItem cardConfig={cardConfig} dispatchRiver={dispatchRiver} qaRef={qaRef}></QAOptionItem>;\n\t\tdefault:\n\t\t\treturn <SingleOptionItem cardConfig={cardConfig} dispatchRiver={dispatchRiver}></SingleOptionItem>;\n\t}\n};\n","import { Fragment } from \"react\";\nimport { MenuItem } from \"@material-ui/core\";\nimport React from \"react\";\n\n//TODO-NICE: clear qa-field button\n\nconst NewQACardQ = ({ onClick }: any) => <MenuItem onClick={onClick}>New: Q (Q-A)</MenuItem>;\nconst NewQACardA = ({ onClick }: any) => <MenuItem onClick={onClick}>New: A (Q-A)</MenuItem>;\nconst NewNoteCard = ({ onClick }: any) => <MenuItem onClick={onClick}>New: Note</MenuItem>;\n\nexport const NewButtons = ({ noteDispatch, qDispatch, aDispatch }: any) => {\n\treturn (\n\t\t<Fragment>\n\t\t\t<NewNoteCard onClick={noteDispatch}></NewNoteCard>\n\t\t\t<NewQACardQ onClick={qDispatch}></NewQACardQ>\n\t\t\t<NewQACardA onClick={aDispatch}></NewQACardA>\n\t\t</Fragment>\n\t);\n};\n","import React, { RefObject } from \"react\";\nimport Menu from \"@material-ui/core/Menu\";\nimport { Divider, MenuItem } from \"@material-ui/core\";\nimport { useDispatch, connect, useSelector } from \"react-redux\";\nimport { getContextMenuInitData, getContextMenuFullCardsRef } from \"../selectors\";\nimport { grabSelectionForContextMenu, grabSelectionForSourceMenu } from \"../actions\";\nimport { incrementer } from \"../../../shared/utils\";\nimport { CardConfig, CardType, CreationType, QACardContent } from \"../../cards/model\";\nimport { CardConfigItem, noteCardIsEmpty, qaCardIsNotFull } from \"./CardItems\";\nimport { NewButtons } from \"./NewButtons\";\nimport NestedMenuItem from \"material-ui-nested-menu-item\";\nimport river from \"../../river\";\nimport { SourceCard } from \"../../river/model\";\n\nfunction ContextMenu({\n\tposition,\n\tstate,\n\tmenuRef,\n\tqaRefs,\n\triverCards,\n}: {\n\tposition: { x: number; y: number };\n\tstate: boolean;\n\tmenuRef: RefObject<any>;\n\tqaRefs: RefObject<any>[];\n\triverCards: CardConfig[];\n}) {\n\tconst fullCardsRef = useSelector(getContextMenuFullCardsRef);\n\n\tconst dispatch = useDispatch();\n\tconst sourceCard = useSelector(river.selectors.getSourceCard);\n\n\t//TODO-NICE: open menu in editor to the right not over the document\n\n\tconst openState = state;\n\tconst dispatchRiver = (type: CardType, creationType: CreationType, cardID?: string) => {\n\t\tif (sourceCard) {\n\t\t\tdispatch(\n\t\t\t\tgrabSelectionForSourceMenu(\n\t\t\t\t\ttype,\n\t\t\t\t\tcreationType,\n\t\t\t\t\t(sourceCard as SourceCard).sourceField,\n\t\t\t\t\t(sourceCard as SourceCard).origin,\n\t\t\t\t\tcardID\n\t\t\t\t)\n\t\t\t);\n\t\t} else {\n\t\t\tdispatch(grabSelectionForContextMenu(type, creationType, cardID));\n\t\t}\n\t};\n\n\tconst increment = incrementer();\n\tconst qaRefIndex = incrementer();\n\n\tconst anchorPosition = openState ? { top: position.y, left: position.x } : undefined;\n\n\t//TODO-PERF: use partition function, or loop to avoid double iteration\n\t//TODO-NICE: abstract menu, this is doubled\n\tconst nonFullRiverCards = riverCards.filter((card) => {\n\t\tif (typeof card.content === \"string\") {\n\t\t\treturn noteCardIsEmpty(card.content);\n\t\t} else {\n\t\t\treturn qaCardIsNotFull(card.content as QACardContent);\n\t\t}\n\t});\n\n\tconst fullRiverCards = riverCards.filter((card) => {\n\t\tif (typeof card.content === \"string\") {\n\t\t\treturn !noteCardIsEmpty(card.content);\n\t\t} else {\n\t\t\treturn !qaCardIsNotFull(card.content as QACardContent);\n\t\t}\n\t});\n\n\t// TODO-NICE: use hidden MenuItem-pattern also for qa-ref\n\n\t// TODO-NICE: need to check for state before rendering MenuItems,\n\t// otherwise it shows up for a split-second when switching the menu off after adding to the river\n\t// weird Race Condition even if I dispatch closeContextMenu first?\n\treturn (\n\t\t<Menu\n\t\t\tref={openState ? menuRef : null}\n\t\t\tkeepMounted\n\t\t\topen={openState}\n\t\t\tanchorReference=\"anchorPosition\"\n\t\t\tanchorPosition={anchorPosition}\n\t\t>\n\t\t\t{openState &&\n\t\t\t\tnonFullRiverCards.map((cardConfig) => (\n\t\t\t\t\t<CardConfigItem\n\t\t\t\t\t\tcardConfig={cardConfig}\n\t\t\t\t\t\tdispatchRiver={dispatchRiver}\n\t\t\t\t\t\tkey={increment()}\n\t\t\t\t\t\tqaRef={cardConfig.type === \"Q-A\" ? qaRefs[qaRefIndex()] : undefined}\n\t\t\t\t\t></CardConfigItem>\n\t\t\t\t))}\n\t\t\t{openState && nonFullRiverCards.length > 0 && <Divider />}\n\n\t\t\t{openState && (\n\t\t\t\t<NewButtons\n\t\t\t\t\tnoteDispatch={() => {\n\t\t\t\t\t\tdispatchRiver(\"Note\", \"NOTE\");\n\t\t\t\t\t}}\n\t\t\t\t\tqDispatch={() => {\n\t\t\t\t\t\tdispatchRiver(\"Q-A\", \"Q\");\n\t\t\t\t\t}}\n\t\t\t\t\taDispatch={() => {\n\t\t\t\t\t\tdispatchRiver(\"Q-A\", \"A\");\n\t\t\t\t\t}}\n\t\t\t\t></NewButtons>\n\t\t\t)}\n\n\t\t\t{openState && fullRiverCards.length > 0 && <Divider />}\n\t\t\t{openState && fullRiverCards.length > 0 && (\n\t\t\t\t<NestedMenuItem label=\"Full cards: \" parentMenuOpen={true}>\n\t\t\t\t\t<MenuItem ref={fullCardsRef} style={{ position: \"absolute\" }}></MenuItem>\n\t\t\t\t\t{fullRiverCards.map((cardConfig) => (\n\t\t\t\t\t\t<CardConfigItem\n\t\t\t\t\t\t\tcardConfig={cardConfig}\n\t\t\t\t\t\t\tdispatchRiver={dispatchRiver}\n\t\t\t\t\t\t\tkey={increment()}\n\t\t\t\t\t\t\tqaRef={cardConfig.type === \"Q-A\" ? qaRefs[qaRefIndex()] : undefined}\n\t\t\t\t\t\t></CardConfigItem>\n\t\t\t\t\t))}\n\t\t\t\t</NestedMenuItem>\n\t\t\t)}\n\t\t</Menu>\n\t);\n}\n\nexport const ContextMenuContainer = connect(getContextMenuInitData)(ContextMenu);\n","import React, { useState, Fragment } from \"react\";\nimport { Snackbar, IconButton } from \"@material-ui/core\";\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { resetManuallySelectedString } from \"../actions\";\nimport { getCurrentSelectedString } from \"../selectors\";\n\nexport const SelectionSnackbar = () => {\n\tconst [open, setOpen] = useState(false);\n\tconst dispatch = useDispatch();\n\tconst selectedString = useSelector(getCurrentSelectedString);\n\n\tif (selectedString === \"\" && open) setOpen(false);\n\n\tif (selectedString !== \"\" && !open) setOpen(true);\n\n\tconst handleClose = (event: any, reason: string) => {\n\t\tif (reason === \"clickaway\") {\n\t\t\t// do not close on clickaway\n\t\t\tevent.preventDefault();\n\t\t} else {\n\t\t\tsetOpen(false);\n\t\t\tdispatch(resetManuallySelectedString());\n\t\t}\n\t};\n\n\tconst handleDismiss = () => {\n\t\tsetOpen(false);\n\t\tdispatch(resetManuallySelectedString());\n\t};\n\n\tconst message = (\n\t\t<Fragment>\n\t\t\t<div>{\"Current Selection: \"}</div>\n\t\t\t<div style={{ color: \"green\" }}> {selectedString}</div>\n\t\t</Fragment>\n\t);\n\n\treturn (\n\t\t<Snackbar\n\t\t\tanchorOrigin={{ vertical: \"top\", horizontal: \"center\" }}\n\t\t\topen={open}\n\t\t\tonClose={handleClose}\n\t\t\tmessage={message}\n\t\t\taction={\n\t\t\t\t<IconButton size=\"small\" aria-label=\"close\" color=\"inherit\" onClick={handleDismiss}>\n\t\t\t\t\t<CloseIcon fontSize=\"small\" />\n\t\t\t\t</IconButton>\n\t\t\t}\n\t\t/>\n\t);\n};\n","import { getContextMenuRef, getContextMenuQARefs, getContextMenuFullCardsRef } from \"./selectors\";\n\n// the root div for the menu invisibly covers the whole screen\n// the actual div that is visible is this\nconst baseContextMenuSelector = \"div.MuiPaper-root\";\n\nexport const contextMenuContainsTargetNode = (state: any, event: Event) => {\n\tconst menuRef = getContextMenuRef(state).current;\n\tconst fullCardsRef = getContextMenuFullCardsRef(state).current?.parentNode;\n\n\t// the nested items are rendered under a different menu\n\t// the current api does not allow access\n\t// so the qa-refs refer to the Q-button\n\t// we check the click against his parent,\n\t// which is the div that contains the Q and A buttons\n\tconst qaRefs = getContextMenuQARefs(state)\n\t\t.map((refObject) => refObject.current)\n\t\t.filter((cur) => !!cur)\n\t\t.map((ref) => ref.parentNode);\n\n\tconst target = event.target as Node;\n\n\tif (menuRef?.querySelector(baseContextMenuSelector)?.contains(target)) return true;\n\n\tif (fullCardsRef?.contains(target)) return true;\n\n\tfor (const qaRef of qaRefs) {\n\t\tif (qaRef.contains(target)) return true;\n\t}\n\n\treturn false;\n};\n","import * as actions from \"./actions\";\nimport * as constants from \"./constants\";\nimport * as actionTypes from \"./actionTypes\";\nimport reducer from \"./reducer\";\nimport * as selectors from \"./selectors\";\nimport * as components from \"./components\";\nimport * as utils from \"./utils\";\n\nexport default { actions, actionTypes, constants, components, reducer, selectors, utils };\n","import { Dispatch } from \"redux\";\nimport focus from \"../../focus\";\nimport display from \"../../display\";\nimport creation from \"../../creation\";\nimport { UserFocus } from \"../../focus/model\";\n\ntype KeyActionMap = { [key: string]: any };\n\ntype KeyEventDispatcher = (event: KeyboardEvent, dispatch: any, state?: any) => void;\n\nconst keyEventDispatcher = (keyMap: KeyActionMap) => (event: KeyboardEvent, dispatch: any) => {\n\tconst action = keyMap[event.key];\n\tif (action) {\n\t\tevent.preventDefault();\n\t\tdispatch(action);\n\t}\n};\n\nconst pageControlKeyMap: KeyActionMap = {\n\tArrowLeft: display.actions.previousPage(),\n\tArrowRight: display.actions.nextPage(),\n};\n\nconst contextMenuControlKeyMap: KeyActionMap = {\n\tt: creation.actions.toggleContextMenu(),\n};\n\nconst selectionFocusKeyMap = {\n\t...pageControlKeyMap,\n\t...contextMenuControlKeyMap,\n};\n\nconst selectionFocusDispatcher = keyEventDispatcher(selectionFocusKeyMap);\n\nconst contextMenuFocusKeyMap = { ...contextMenuControlKeyMap };\nconst contextMenuFocusDispatcher = keyEventDispatcher(contextMenuFocusKeyMap);\n\nconst doNothing = (event: any, dispatch: any) => {};\n\nconst focusDispatcherMap: { [focus in UserFocus]: KeyEventDispatcher } = {\n\tDOCUMENT: selectionFocusDispatcher,\n\tCONTEXT_MENU: contextMenuFocusDispatcher,\n\tRIVER: doNothing,\n\tCONTROL: doNothing,\n\tRIVER_CONTROL: doNothing,\n};\n\nexport const keyDownControl = (event: KeyboardEvent) => {\n\treturn (dispatch: Dispatch | any, getState: Function) => {\n\t\tconst state = getState();\n\t\tconst userFocus = focus.selectors.getFocus(state);\n\t\tconst dispatcher = focusDispatcherMap[userFocus];\n\n\t\tdispatcher(event, dispatch, state);\n\t};\n};\n","import { connect } from \"react-redux\";\nimport { useEventListener } from \"../hooks/useEventListener\";\nimport { keyDownControl } from \"../services/keyboardControl\";\nimport { mouseDownControl, mouseUpControl, rightClickControl } from \"../services/mouseControl\";\n\nfunction Control({\n\tkeyDownControl,\n\tmouseDownControl,\n\tmouseUpControl,\n\trightClickControl,\n}: {\n\tkeyDownControl: (event: KeyboardEvent) => void;\n\tmouseDownControl: (event: MouseEvent) => void;\n\tmouseUpControl: (event: MouseEvent) => void;\n\trightClickControl: (event: MouseEvent) => void;\n}) {\n\tuseEventListener(\"keydown\", keyDownControl);\n\tuseEventListener(\"mousedown\", mouseDownControl);\n\tuseEventListener(\"mouseup\", mouseUpControl);\n\tuseEventListener(\"contextmenu\", rightClickControl);\n\treturn null;\n}\n\nexport const ControlContainer = connect(\n\t() => {\n\t\treturn {};\n\t},\n\t{\n\t\tkeyDownControl,\n\t\tmouseDownControl,\n\t\tmouseUpControl,\n\t\trightClickControl,\n\t}\n)(Control);\n","import creation from \"../../creation\";\nimport focus from \"../../focus\";\nimport cards from \"../../cards\";\nimport river from \"../../river\";\n\nexport const mouseDownControl = (event: MouseEvent) => {\n\treturn (dispatch: any, getState: Function) => {\n\t\tconst state = getState();\n\t\t// the menu-ref is used for all drop-down menus, so this closes all of them\n\t\tconst clickOutSideOfMenu = !creation.utils.contextMenuContainsTargetNode(state, event);\n\t\tif (clickOutSideOfMenu) {\n\t\t\tdispatch(creation.actions.closeContextMenu());\n\t\t}\n\t};\n};\n\nexport const mouseUpControl = (event: MouseEvent) => {\n\treturn (dispatch: any, getState: Function) => {\n\t\t// if the menu is already open, this means we have opened it in the editor\n\t\tif (creation.selectors.getContextMenuState(getState())) return;\n\n\t\tconst selection = document.getSelection();\n\t\tif (selection) {\n\t\t\tconst selectedStr = selection.toString();\n\n\t\t\tif (selectedStr !== \"\") {\n\t\t\t\tconst state = getState();\n\t\t\t\tconst goalCard = cards.selectors.getGoalCard(state);\n\t\t\t\tconst userFocus = focus.selectors.getFocus(state);\n\n\t\t\t\tconst shouldGrab = userFocus === \"RIVER\" || userFocus === \"DOCUMENT\";\n\n\t\t\t\tif (goalCard && shouldGrab) {\n\t\t\t\t\t// this is the dispatch for the grab for field button\n\t\t\t\t\t//(which has been pressed before the mouse-up if goalCard is not null), here we actually update the goal card\n\n\t\t\t\t\t//TODO-NICE: allow grabbing from other cards\n\t\t\t\t\t// for now we dont allow grabbing from other cards to simplifiy the card->card workflow\n\t\t\t\t\tif (userFocus !== \"RIVER\")\n\t\t\t\t\t\tdispatch(\n\t\t\t\t\t\t\tcards.actions.updateCardContent(\n\t\t\t\t\t\t\t\tselectedStr,\n\t\t\t\t\t\t\t\tgoalCard.cardID,\n\t\t\t\t\t\t\t\tgoalCard.creationType,\n\t\t\t\t\t\t\t\t\"REPLACE\",\n\t\t\t\t\t\t\t\tgoalCard.origin\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t);\n\t\t\t\t\tdispatch(cards.actions.resetGoalCard());\n\t\t\t\t} else {\n\t\t\t\t\t// this is the dispatch for the ContextMenu\n\t\t\t\t\tif (userFocus === \"DOCUMENT\") {\n\t\t\t\t\t\t//if the user is focused on the document, the push-to river should always be the active=page-wise river\n\t\t\t\t\t\tdispatch(river.actions.setPushToRiver(river.selectors.getActiveRiverMakeUpID(state)));\n\t\t\t\t\t\tdispatch(creation.actions.selectedParent(selection.anchorNode?.parentNode as HTMLSpanElement));\n\t\t\t\t\t\tdispatch(creation.actions.updateManuallySelectedString(selectedStr));\n\t\t\t\t\t\tdispatch(creation.actions.updateSelectionPosition(event.x, event.y));\n\t\t\t\t\t\tdispatch(creation.actions.openContextMenu());\n\t\t\t\t\t}\n\n\t\t\t\t\t// this is the dispatch to prepare for extraction from card\n\t\t\t\t\tif (userFocus === \"RIVER\") {\n\t\t\t\t\t\tdispatch(creation.actions.updateManuallySelectedString(selectedStr));\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t};\n};\n\n//TODO-NICE: make selection-dropable on buttons, so that they can be send to cards, make this the default instead of context-menu?\n// imagine: toolbar with new Note, new A, new Q | all the cards and you can drop off\n\n//TODO-NICE: delete extracted str in source\n\nexport const rightClickControl = (event: MouseEvent) => {\n\treturn (dispatch: any, getState: Function) => {\n\t\tconst state = getState();\n\t\tconst userFocus = focus.selectors.getFocus(state);\n\n\t\t// this is set via left-click\n\t\tconst selectedStr = creation.selectors.getCurrentSelectedString(state);\n\n\t\tif (selectedStr === \"\") return;\n\n\t\tevent.preventDefault();\n\n\t\t// this is the dispatch for the ContextMenu inside the editor\n\t\tif (userFocus === \"RIVER\") {\n\t\t\tdispatch(creation.actions.updateSelectionPosition(event.x, event.y));\n\t\t\tdispatch(creation.actions.openContextMenu());\n\t\t}\n\t};\n};\n","import { useState } from \"react\";\nimport SpeakerNotesOutlinedIcon from \"@material-ui/icons/SpeakerNotesOutlined\";\nimport SpeakerNotesTwoToneIcon from \"@material-ui/icons/SpeakerNotesTwoTone\";\nimport React from \"react\";\nimport { IconButton } from \"@material-ui/core\";\nimport { useDispatch } from \"react-redux\";\nimport river from \"../../river\";\n\nexport const ShowRiverButton = () => {\n\tconst [outlined, setOutlined] = useState(true);\n\tconst dispatch = useDispatch();\n\treturn (\n\t\t<IconButton\n\t\t\ttype=\"button\"\n\t\t\tonClick={() => {\n\t\t\t\tdispatch(river.actions.toggleRiverShowState());\n\t\t\t\tsetOutlined(!outlined);\n\t\t\t}}\n\t\t>\n\t\t\t{outlined ? (\n\t\t\t\t<SpeakerNotesOutlinedIcon></SpeakerNotesOutlinedIcon>\n\t\t\t) : (\n\t\t\t\t<SpeakerNotesTwoToneIcon></SpeakerNotesTwoToneIcon>\n\t\t\t)}\n\t\t</IconButton>\n\t);\n};\n","import { useSelector, useDispatch } from \"react-redux\";\nimport { getDocumentNames } from \"../selectors\";\nimport React, { ChangeEvent, Fragment, useRef, MutableRefObject } from \"react\";\nimport { Divider, Menu, MenuItem, IconButton } from \"@material-ui/core\";\nimport { changeDocument, loadDocumentDataSets, downloadDBData } from \"../actions\";\nimport MoreVertIcon from \"@material-ui/icons/MoreVert\";\nimport { DocumentData } from \"../model\";\nimport display from \"../../display\";\nimport cards from \"../../cards\";\n\n//TODO-NICE: have way to merge two document-workspaces\n\nexport const InputDocument = ({ handleClose, label }: any) => {\n\tconst dispatch = useDispatch();\n\n\tconst ref: MutableRefObject<null | HTMLInputElement> = useRef(null);\n\n\treturn (\n\t\t<Fragment>\n\t\t\t<MenuItem\n\t\t\t\tonClick={() => {\n\t\t\t\t\t(ref.current as HTMLInputElement).click();\n\t\t\t\t}}\n\t\t\t>\n\t\t\t\t{label}\n\t\t\t</MenuItem>\n\t\t\t<input\n\t\t\t\tref={ref}\n\t\t\t\tstyle={{ display: \"none\" }}\n\t\t\t\tonChange={(event: ChangeEvent<HTMLInputElement>) => {\n\t\t\t\t\tconst files = event.target.files;\n\t\t\t\t\tconst pdf = files ? files[0] : null;\n\t\t\t\t\tif (pdf) {\n\t\t\t\t\t\tdispatch(changeDocument(pdf));\n\t\t\t\t\t}\n\t\t\t\t\thandleClose();\n\t\t\t\t}}\n\t\t\t\ttype=\"file\"\n\t\t\t\taccept=\".pdf\"\n\t\t\t/>\n\t\t</Fragment>\n\t);\n};\n\nexport const InputDataSets = ({ handleClose, label }: any) => {\n\tconst dispatch = useDispatch();\n\n\tconst activeDocument = useSelector(display.selectors.getPDFName);\n\n\tconst ref: MutableRefObject<null | HTMLInputElement> = useRef(null);\n\n\treturn (\n\t\t<Fragment>\n\t\t\t<MenuItem\n\t\t\t\tonClick={() => {\n\t\t\t\t\t(ref.current as HTMLInputElement).click();\n\t\t\t\t}}\n\t\t\t>\n\t\t\t\t{label}\n\t\t\t</MenuItem>\n\t\t\t<input\n\t\t\t\tref={ref}\n\t\t\t\tstyle={{ display: \"none\" }}\n\t\t\t\tonChange={(event: ChangeEvent<HTMLInputElement>) => {\n\t\t\t\t\tconst files = event.target.files;\n\t\t\t\t\tconst file = files ? files[0] : null;\n\t\t\t\t\tif (file) {\n\t\t\t\t\t\tconst reader = new FileReader();\n\t\t\t\t\t\treader.readAsText(file);\n\t\t\t\t\t\treader.onload = () => {\n\t\t\t\t\t\t\t//TODO-NICE: sanitize, escape os new line difference, prepare multimedia cards\n\t\t\t\t\t\t\t//TODO-NICE: merge same name-pdfs and think about collision in general\n\n\t\t\t\t\t\t\tconst uploadedDataSets = JSON.parse(reader.result as string);\n\t\t\t\t\t\t\tdispatch(loadDocumentDataSets(uploadedDataSets));\n\n\t\t\t\t\t\t\tconst foundDataSet = (uploadedDataSets as DocumentData[]).find(\n\t\t\t\t\t\t\t\t(dbData) => dbData.name === activeDocument\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t//TODO-RC: merge this with loadDocument because I only allow load document-datasets to be undone\n\n\t\t\t\t\t\t\tif (foundDataSet) {\n\t\t\t\t\t\t\t\t//TODO-NICE: merge uploaded state with current-one and dont overwrite\n\t\t\t\t\t\t\t\t// if the uploaded dataset corresponds to the current document, overwrite current with uploaded\n\t\t\t\t\t\t\t\tdispatch({ type: cards.actionTypes.GLOBAL_RESET, payload: foundDataSet });\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t};\n\t\t\t\t\t}\n\t\t\t\t\thandleClose();\n\t\t\t\t}}\n\t\t\t\ttype=\"file\"\n\t\t\t\taccept=\".txt\"\n\t\t\t/>\n\t\t</Fragment>\n\t);\n};\n\nexport const Options = () => {\n\tconst activeDocument = useSelector(display.selectors.getPDFName);\n\tconst documents = useSelector(getDocumentNames);\n\n\tconst [anchorEl, setAnchorEl] = React.useState<null | HTMLElement>(null);\n\n\tconst handleClick = (event: React.MouseEvent<HTMLButtonElement>) => {\n\t\tsetAnchorEl(event.currentTarget);\n\t};\n\n\tconst handleClose = () => {\n\t\tsetAnchorEl(null);\n\t};\n\n\tconst dispatch = useDispatch();\n\n\treturn (\n\t\t<div style={{ minWidth: 160 }}>\n\t\t\t<IconButton type=\"button\" onClick={handleClick}>\n\t\t\t\t<MoreVertIcon></MoreVertIcon>\n\t\t\t</IconButton>\n\t\t\t<Menu id=\"simple-menu\" anchorEl={anchorEl} keepMounted open={Boolean(anchorEl)} onClose={handleClose}>\n\t\t\t\tActive Document:\n\t\t\t\t<br></br>\n\t\t\t\t{activeDocument?.replace(\".pdf\", \"\")}\n\t\t\t\t<br></br>\n\t\t\t\t<br></br>\n\t\t\t\t<Divider />\n\t\t\t\t<br></br>\n\t\t\t\tDocuments with existing data:\n\t\t\t\t<ul>{documents.map((document) => (document ? <li>{document.replace(\".pdf\", \"\")}</li> : null))}</ul>\n\t\t\t\t<br></br>\n\t\t\t\t<Divider />\n\t\t\t\t<InputDocument handleClose={handleClose} label={\"Load document\"}></InputDocument>\n\t\t\t\t<Divider />\n\t\t\t\t<MenuItem\n\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\tdispatch(downloadDBData());\n\t\t\t\t\t\thandleClose();\n\t\t\t\t\t}}\n\t\t\t\t>\n\t\t\t\t\tDownload document datasets\n\t\t\t\t</MenuItem>\n\t\t\t\t<Divider />\n\t\t\t\t<InputDataSets handleClose={handleClose} label={\"Upload document datasets\"}></InputDataSets>\n\t\t\t</Menu>\n\t\t</div>\n\t);\n};\n","import display from \"../../display\";\nimport focus from \"../../focus\";\nimport river from \"../../river\";\nimport React, { ChangeEvent } from \"react\";\nimport { AppBar, Toolbar, Divider, Tabs, Tab, Grid, IconButton } from \"@material-ui/core\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { ShowRiverButton } from \"./ShowRiverButton\";\nimport { Options } from \"./Options\";\nimport UndoIcon from \"@material-ui/icons/Undo\";\nimport RedoIcon from \"@material-ui/icons/Redo\";\nimport { ActionCreators } from \"redux-undo\";\n\n// we support undo/redo instead of lengthy confirmation (see The Humane Interface)\n\nconst UndoButton = () => {\n\tconst dispatch = useDispatch();\n\treturn (\n\t\t<IconButton\n\t\t\ttype=\"button\"\n\t\t\tonClick={() => {\n\t\t\t\tdispatch(ActionCreators.undo());\n\t\t\t}}\n\t\t>\n\t\t\t<UndoIcon></UndoIcon>\n\t\t</IconButton>\n\t);\n};\n\nconst RedoButton = () => {\n\tconst dispatch = useDispatch();\n\treturn (\n\t\t<IconButton\n\t\t\ttype=\"button\"\n\t\t\tonClick={() => {\n\t\t\t\tdispatch(ActionCreators.redo());\n\t\t\t}}\n\t\t>\n\t\t\t<RedoIcon></RedoIcon>\n\t\t</IconButton>\n\t);\n};\n\n//TODO-NICE: download/load csv for Anki\nexport const ControlBar = () => {\n\tconst dispatch = useDispatch();\n\tconst displayFocus = useSelector(focus.selectors.getDisplayFocus);\n\n\tconst value = displayFocus === \"ACTIVE_RIVER\" ? 0 : 1;\n\n\tconst handleChange = (_: ChangeEvent<{}>, newValue: number) => {\n\t\tdispatch(\n\t\t\tnewValue === 0\n\t\t\t\t? focus.actions.updateDisplayFocus(\"ACTIVE_RIVER\")\n\t\t\t\t: focus.actions.updateDisplayFocus(\"SUMMARY_RIVER\")\n\t\t);\n\t};\n\n\tconst totalPages = useSelector(display.selectors.getTotalPages);\n\treturn (\n\t\t<Grid\n\t\t\titem\n\t\t\tonMouseEnter={() => {\n\t\t\t\tdispatch(focus.actions.tryUpdateFocus(\"CONTROL\"));\n\t\t\t}}\n\t\t>\n\t\t\t<AppBar>\n\t\t\t\t<Toolbar variant=\"dense\">\n\t\t\t\t\t<Tabs value={value} onChange={handleChange}>\n\t\t\t\t\t\t<Tab label=\"ActiveRiver\" />\n\t\t\t\t\t\t<Tab label=\"SummaryRiver\" />\n\t\t\t\t\t</Tabs>\n\t\t\t\t\t<Divider orientation=\"vertical\" flexItem />\n\t\t\t\t\t<UndoButton></UndoButton>\n\t\t\t\t\t<RedoButton></RedoButton>\n\t\t\t\t\t<Divider orientation=\"vertical\" flexItem />\n\t\t\t\t\t{totalPages && <display.components.PageChooser></display.components.PageChooser>}\n\t\t\t\t\t{totalPages && <display.components.PreviousButton></display.components.PreviousButton>}\n\t\t\t\t\t{totalPages && <display.components.NextButton></display.components.NextButton>}\n\t\t\t\t\t<Divider orientation=\"vertical\" flexItem />\n\t\t\t\t\t{value === 0 && <ShowRiverButton></ShowRiverButton>}\n\t\t\t\t\t{value === 0 && <display.components.ShowMaterialButton></display.components.ShowMaterialButton>}\n\t\t\t\t\t{value === 0 && <Divider orientation=\"vertical\" flexItem />}\n\t\t\t\t\t{totalPages && <river.components.RiverContentFormGroup></river.components.RiverContentFormGroup>}\n\t\t\t\t\t{totalPages && <Divider orientation=\"vertical\" flexItem />}\n\t\t\t\t\t<Options></Options>\n\t\t\t\t</Toolbar>\n\t\t\t</AppBar>\n\t\t</Grid>\n\t);\n};\n","import { CentralControl, DocumentData, DocumentDB } from \"./model\";\nimport * as t from \"./actionTypes\";\n\nconst initialState: CentralControl = { documentDB: {} };\n\n//TODO-NICE: PDF-date gets saved with name, better use some hash or something (rename of document file is likely) -> use size or last-modified or smth like that instead of name\n\nconst centralControl = (\n\tstate = initialState,\n\t{ type, payload }: { type: string; payload: DocumentData | DocumentData[] }\n): CentralControl => {\n\tswitch (type) {\n\t\t// dont need to undo this, because if we change the active river and then change the document, the archive version gets overwritten\n\t\tcase t.ARCHIVE_CURRENT_DATA:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tdocumentDB: { ...state.documentDB, [(payload as DocumentData).name]: payload as DocumentData },\n\t\t\t};\n\t\tcase t.LOAD_DOCUMENT_DATA_SETS:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tdocumentDB: {\n\t\t\t\t\t...state.documentDB,\n\t\t\t\t\t...(payload as DocumentData[]).reduce((prev, dbData) => {\n\t\t\t\t\t\tprev[dbData.name] = dbData;\n\t\t\t\t\t\treturn prev;\n\t\t\t\t\t}, {} as DocumentDB),\n\t\t\t\t},\n\t\t\t};\n\t\tdefault:\n\t\t\treturn state;\n\t}\n};\n\nexport default centralControl;\n","import * as actions from \"./actions\";\nimport * as actionTypes from \"./actionTypes\";\nimport * as components from \"./components\";\nimport * as constants from \"./constants\";\nimport reducer from \"./reducer\";\nimport * as selectors from \"./selectors\";\n\nexport default { actions, actionTypes, components, constants, reducer, selectors };\n","import React from \"react\";\nimport Grid from \"@material-ui/core/Grid\";\nimport control from \"../modules/control\";\nimport creation from \"../modules/creation\";\nimport river from \"../modules/river\";\nimport { makeStyles, Theme, createStyles, useScrollTrigger, Zoom, Toolbar, Fab } from \"@material-ui/core\";\nimport KeyboardArrowUpIcon from \"@material-ui/icons/KeyboardArrowUp\";\n\n//TODO: make show/hide depdendant on tab, also Page choice, control-bar dependant on tab\n\nconst useStyles = makeStyles((theme: Theme) =>\n\tcreateStyles({\n\t\troot: {\n\t\t\tposition: \"fixed\",\n\t\t\tbottom: theme.spacing(2),\n\t\t\tright: theme.spacing(2),\n\t\t},\n\t})\n);\n\nfunction ScrollTop(props: any) {\n\tconst { children } = props;\n\tconst classes = useStyles();\n\tconst trigger = useScrollTrigger({\n\t\tdisableHysteresis: true,\n\t\tthreshold: 100,\n\t});\n\n\tconst handleClick = (event: React.MouseEvent<HTMLDivElement>) => {\n\t\tconst anchor = ((event.target as HTMLDivElement).ownerDocument || document).querySelector(\"#back-to-top-anchor\");\n\n\t\tif (anchor) {\n\t\t\tanchor.scrollIntoView({ behavior: \"smooth\", block: \"center\" });\n\t\t}\n\t};\n\n\treturn (\n\t\t<Zoom in={trigger}>\n\t\t\t<div onClick={handleClick} role=\"presentation\" className={classes.root}>\n\t\t\t\t{children}\n\t\t\t</div>\n\t\t</Zoom>\n\t);\n}\n\nexport function ReaderScene() {\n\treturn (\n\t\t<div>\n\t\t\t<control.components.ControlContainer></control.components.ControlContainer>\n\t\t\t<Grid container justify=\"center\" direction=\"column\" alignItems=\"stretch\" spacing={1}>\n\t\t\t\t<control.components.ControlBar></control.components.ControlBar>\n\t\t\t\t<Toolbar id=\"back-to-top-anchor\" />\n\n\t\t\t\t<river.components.ActiveRiverView></river.components.ActiveRiverView>\n\t\t\t\t<river.components.SummaryRiverView></river.components.SummaryRiverView>\n\t\t\t</Grid>\n\t\t\t<ScrollTop>\n\t\t\t\t<Fab color=\"secondary\" size=\"small\" aria-label=\"scroll back to top\">\n\t\t\t\t\t<KeyboardArrowUpIcon />\n\t\t\t\t</Fab>\n\t\t\t</ScrollTop>\n\t\t\t<creation.components.ContextMenuContainer></creation.components.ContextMenuContainer>\n\t\t\t<creation.components.SelectionSnackbar></creation.components.SelectionSnackbar>\n\t\t</div>\n\t);\n}\n","import storage from \"redux-persist/lib/storage\"; // defaults to localStorage for web\nimport { createTransform } from \"redux-persist\";\nimport { CreationData } from \"./modules/creation/model\";\nimport { createRef } from \"react\";\nimport creation from \"./modules/creation\";\nimport { DisplayData, DisplayStatus, PerPageSpans } from \"./modules/display/model\";\nimport display from \"./modules/display\";\n\n// to get the correct object with reselect, I added .present to all getAll that belong do undoable modules\n\nconst removeDOMObjectsFromCreationData = (inboundState: CreationData) => {\n\treturn {\n\t\t...inboundState,\n\t\tmenuRef: null,\n\t\tfullCardRef: null,\n\t\tqaRefs: inboundState.qaRefs.map((_) => null),\n\t\tselectedParentSpan: null,\n\t};\n};\n\nconst addDOMObjectsToCreationData = (outboundState: {\n\topen: boolean;\n\tmenuRef: null;\n\tfullCardRef: null;\n\tqaRefs: null[];\n\tmanuallySelectedString: string;\n\tselectedParentSpan: null;\n\tselectionPosition: { x: number; y: number };\n}): CreationData => {\n\treturn {\n\t\t...outboundState,\n\t\tmenuRef: createRef(),\n\t\tfullCardRef: createRef(),\n\t\tqaRefs: outboundState.qaRefs.map((_) => createRef()),\n\t};\n};\n\nconst creationTransform = createTransform(\n\t(inboundState: { future: CreationData[]; past: CreationData[]; present: CreationData }) => {\n\t\treturn {\n\t\t\t...inboundState,\n\t\t\tfuture: inboundState.future.map(removeDOMObjectsFromCreationData),\n\t\t\tpast: inboundState.past.map(removeDOMObjectsFromCreationData),\n\t\t\tpresent: removeDOMObjectsFromCreationData(inboundState.present),\n\t\t};\n\t},\n\t(outboundState): { future: CreationData[]; past: CreationData[]; present: CreationData } => {\n\t\treturn {\n\t\t\t...outboundState,\n\t\t\tfuture: outboundState.future.map(addDOMObjectsToCreationData),\n\t\t\tpast: outboundState.past.map(addDOMObjectsToCreationData),\n\t\t\tpresent: addDOMObjectsToCreationData(outboundState.present),\n\t\t};\n\t},\n\t{ whitelist: [creation.constants.NAME] }\n);\n\n//TODO-NICE: find way to save PDF in browser, maybe manually use indexeddb and use that in transform?\n// idea: make store-field pdfAsBase64 and use thunk for async-filling the field, then when reloading, use thunk to format\n// const reader = new FileReaderSync();\n\n// function readFileAsync(file: File) {\n// \treturn new Promise((resolve) => {\n// \t\treader.onload = () => {\n// \t\t\tresolve(reader.result);\n// \t\t};\n// \t\treader.onerror = () => resolve(null);\n\n// \t\treader.readAsDataURL(file);\n// \t});\n// }\n\nconst removeDOMObjectsFromDisplayData = (inboundState: DisplayData) => {\n\tlet pdf = null;\n\t// if (inboundState.pdf) {\n\t// \tpdf = await readFileAsync(inboundState.pdf);\n\t// }\n\tconst result = { ...inboundState, documentRef: null, materialData: null, pdf };\n\treturn result;\n};\n\n//TODO-NICE: create persistable type for the state in model\n\nconst addDOMObjectsToDisplayData = (outboundState: {\n\tpdf: null;\n\tpdfName?: string;\n\tdisplayStatus: DisplayStatus;\n\tcurrentPage: number;\n\ttotalPages?: number;\n\t//TODO-NICE:might need amount of spans per page for validation? if yes, use this\n\tpageSpans: PerPageSpans;\n\tdocumentRef: null;\n\tzoomQueue: number | null;\n\tmaterialData: null;\n}): DisplayData => {\n\treturn {\n\t\t...outboundState,\n\t\tpdf: undefined,\n\t\tdocumentRef: createRef(),\n\t\tmaterialData: { materialDataTimeStamp: -Infinity },\n\t};\n};\n\nconst displayTransform = createTransform(\n\t(inboundState: DisplayData) => {\n\t\treturn removeDOMObjectsFromDisplayData(inboundState);\n\t},\n\t(outboundState): DisplayData => {\n\t\treturn addDOMObjectsToDisplayData(outboundState);\n\t},\n\t{ whitelist: [display.constants.NAME] }\n);\n\nexport const persistConfig = {\n\tkey: \"root\",\n\tstorage,\n\ttransforms: [creationTransform, displayTransform],\n};\n","import { createStore } from \"redux\";\nimport { applyMiddleware } from \"redux\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport thunk from \"redux-thunk\";\nimport { combineReducers } from \"redux\";\nimport focus from \"./modules/focus\";\nimport creation from \"./modules/creation\";\nimport river from \"./modules/river\";\nimport display from \"./modules/display\";\nimport cards from \"./modules/cards\";\nimport { persistStore, persistReducer } from \"redux-persist\";\nimport control from \"./modules/control\";\nimport undoable, { includeAction } from \"redux-undo\";\nimport { persistConfig } from \"./persist\";\n\n//TODO-NICE: this undo-buisness is not very transparent, I just list each action that is state-relevant and not view, make action list in constants.ts?\n\nconst rootReducer = combineReducers({\n\t[focus.constants.NAME]: focus.reducer,\n\t[creation.constants.NAME]: undoable(creation.reducer, {\n\t\tfilter: includeAction([cards.actionTypes.CARD_PUSH, creation.actionTypes.SELECTED_STRING]),\n\t}),\n\t[river.constants.NAME]: undoable(river.reducer, {\n\t\tfilter: includeAction([cards.actionTypes.CARD_PUSH, cards.actionTypes.CARD_REMOVE]),\n\t}),\n\t[display.constants.NAME]: display.reducer,\n\t[cards.constants.NAME]: undoable(cards.reducer, {\n\t\tfilter: includeAction([\n\t\t\tcards.actionTypes.CARD_PUSH,\n\t\t\tcards.actionTypes.CARD_UPDATE,\n\t\t\tcards.actionTypes.CARD_REMOVE,\n\t\t\t//this needs to be here, because we use display it to the user with the grab-icon\n\t\t\tcards.actionTypes.CARD_GOAL,\n\t\t]),\n\t}),\n\t[control.constants.NAME]: undoable(control.reducer, {\n\t\tfilter: includeAction([control.actionTypes.LOAD_DOCUMENT_DATA_SETS]),\n\t}),\n});\n\nconst stateSanitizer = (state: any) => {\n\treturn state.displayData.pdf ? { ...state, displayData: { ...state.displayData, pdf: \"PDF_FILE_IS_HERE\" } } : state;\n};\n\nconst persistedReducer = persistReducer(persistConfig, rootReducer);\n\nconst composeEnhancers = composeWithDevTools({ stateSanitizer });\nconst enhancer = composeEnhancers(applyMiddleware(thunk));\n\nexport const store = createStore(persistedReducer, enhancer);\n\nexport const persistor = persistStore(store);\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { ReaderScene } from \"./scenes/ReaderScene\";\nimport { Provider } from \"react-redux\";\nimport { store, persistor } from \"./store\";\nimport { PersistGate } from \"redux-persist/es/integration/react\";\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<Provider store={store}>\n\t\t\t<PersistGate loading={null} persistor={persistor}>\n\t\t\t\t<ReaderScene></ReaderScene>\n\t\t\t</PersistGate>\n\t\t</Provider>\n\t</React.StrictMode>,\n\tdocument.getElementById(\"root\")\n);\n","function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 79;"],"sourceRoot":""}