{"version":3,"sources":["modules/display/constants.ts","modules/display/actionTypes.ts","modules/selection/constants.ts","modules/selection/actionTypes.ts","modules/cards/model/model-origin.ts","modules/cards/model/model-permutation.ts","modules/cards/services/transformInputOrigin.ts","modules/cards/constants.ts","modules/cards/actionTypes.ts","modules/cards/selectors.ts","modules/cards/model/model-content.ts","modules/cards/model/model.ts","modules/cards/model/model-payload.ts","modules/cards/services/contentStringToConfig.ts","modules/cards/actions.ts","modules/text/constants.ts","modules/text/components/NewNoteCardTooltip.tsx","modules/text/components/AddQAButtonTooltip.tsx","modules/text/components/DeleteCardButtonTooltip.tsx","modules/text/components/AppendButtonTooltip.tsx","modules/text/index.ts","modules/cards/components/AddNoteButton.tsx","modules/cards/components/AddQAButton.tsx","modules/cards/components/DeleteCardButton.tsx","modules/db/constants.ts","modules/db/actionTypes.ts","modules/db/actions.ts","modules/db/model.ts","modules/db/reducer.ts","modules/db/selectors.ts","modules/db/index.ts","modules/cards/reducer.ts","modules/cards/index.ts","modules/selection/selectors.ts","modules/selection/actions.ts","modules/selection/reducer.ts","modules/selection/components/SelectionSnackbar.tsx","modules/selection/services/getSelection.ts","modules/selection/index.ts","modules/display/selectors.ts","shared/utils.ts","modules/display/services/span.ts","modules/display/services/materialData.ts","modules/display/actions.ts","modules/display/components/NavigationButtons.tsx","modules/display/components/PageChooser/PageChooser.tsx","modules/display/components/PDFDocument/PageKeyboardControl.tsx","modules/display/components/PDFDocument/PDFDocument.tsx","modules/display/components/PDFDocument/PDFPageRenderer.tsx","modules/display/components/PDFDocument/PDFViewer.tsx","modules/display/components/MaterialDisplayColumn.tsx","modules/display/reducer.ts","modules/display/index.ts","modules/river/constants.ts","modules/river/selectors.ts","modules/river/actionTypes.ts","modules/river/actions.ts","shared/GreenCheckbox.tsx","modules/river/components/RiverContentFormGroup.tsx","modules/focus/constants.ts","modules/focus/actionTypes.ts","modules/focus/actions.ts","modules/focus/reducer.ts","modules/focus/selectors.ts","modules/focus/index.ts","modules/river/components/CardRiver/HybridCardField.tsx","modules/river/components/CardRiver/Buttons/JumpToOriginButton.tsx","modules/river/components/CardRiver/Buttons/GrabForFieldButton.tsx","modules/river/components/CardRiver/Buttons/AppendButton.tsx","modules/river/components/CardRiver/Cards/QACard.tsx","modules/river/components/CardRiver/Cards/NoteCard.tsx","modules/river/components/CardRiver/Cards/ClayCard.tsx","modules/river/components/CardRiver/toCardGridItemsWithDividers.tsx","modules/river/components/CardRiver/CardRiverAccordion.tsx","modules/river/components/CardRiver/ChildCardRiver.tsx","modules/river/model.ts","modules/river/components/SummaryRiver.tsx","modules/river/components/ActiveCardRiver.tsx","modules/river/reducer.ts","modules/river/index.ts","modules/control/selectors.ts","modules/control/actions.ts","modules/control/components/Options/DeleteDocumentButton.tsx","modules/control/components/Options/InputDataSets.tsx","modules/control/components/Options/InputDocument.tsx","modules/control/components/Options/LoadDocumentDataButton.tsx","modules/control/components/Options/DocumentOptionItem.tsx","modules/control/components/Options/Options.tsx","modules/control/components/CardSearchBar.tsx","modules/control/components/UndoRedoButtons.tsx","modules/control/components/ShowHideButton.tsx","modules/control/components/ViewTabs.tsx","modules/control/components/ControlBar.tsx","modules/control/index.ts","modules/extraction/constants.ts","modules/extraction/actionTypes.ts","modules/extraction/selectors.ts","modules/extraction/actions.ts","modules/extraction/reducer.ts","modules/extraction/components/CardItems.tsx","modules/extraction/components/NewButtons.tsx","shared/useEventListener.tsx","modules/extraction/services/contextMenuContainsTargetNode.ts","modules/extraction/components/ContextMenu.tsx","modules/extraction/index.ts","scene/ReaderScene.tsx","persist.ts","store.ts","index.tsx"],"names":["NAME","PDF_UPLOADED","MATERIAL_LOADED","DISPLAY_STATUS","PAGE_UPDATE","ZOOM_QUEUE","MATERIAL_DATA","MATERIAL_HEIGHT","SELECTED_STRING","SELECTED_PARENT","DOCUMENT_POSITION","SOURCE_CARD","emptyQAOrigin","q","a","EmptyOriginMap","note","FieldValueAccessorMap","cardObject","FieldValueModifierMap","modify","createReplace","inputValue","_","changeCardObject","spec","field","inputField","inputObject","createModify","modifyFieldValue","fieldToBeChanged","objectToBeChanged","transformInputOrigin","inputOrigin","outputField","oldOrigin","CARD_UPDATE","CARD_PUSH","CARD_REMOVE","CARD_GOAL","getAll","state","present","getLastCardIDNumber","createSelector","lastCardIDNumber","getCards","cards","getGoalCard","goalCard","emptyQAContent","EmptyContentMap","cardIDToNumber","cardID","parseInt","nextCardID","toString","CardIsFullMap","Note","config","content","cardIsNotFull","type","removeCardFromCardsState","replaceCardsInCardsState","updateCardInCards","toBeUpdated","cardObj","addCardToCards","emptyNotePayload","emptyQAPayload","EmptyPayloadFieldMap","createAppendStr","oldValue","contentStringToConfig","contentStr","updateType","existingCard","cardFieldToEmptyPayload","cardPush","cardPayload","dispatch","getState","payload","t","emptyNoteCard","emptyQACard","cardUpdate","card","updateCardContent","contentString","creationType","origin","currentCard","pushCardContent","removeCard","setGoalCard","cardConfig","resetGoalCard","switchToActiveRiverTooltip","switchToSummaryRiverTooltip","undoTooltip","redoTooltip","nextPageTooltip","previousPageTooltip","deleteCardTooltip","grabForCardTooltip","jumpToOriginTooltip","appendToCardTooltip","newQACardTooltip","newNoteCardTooltip","deleteDocumentTooltip","loadSavedDocumentTooltip","noMaterialText","loadingMaterialText","activeDocumentText","existingDataText","loadMaterialText","downloadDatasetsText","uploadDatasetsText","noteText","questionText","answerText","defaultEnterDelay","defaultEnterNextDelay","NewNoteCardTooltip","children","Tooltip","title","enterDelay","enterNextDelay","AddQAButtonTooltip","DeleteCardButtonTooltip","AppendButtonTooltip","components","constants","AddNoteButton","useDispatch","IconButton","onClick","AddQAButton","DeleteCardButton","fontSize","ARCHIVE_CURRENT_DATA","LOAD_DOCUMENT_DATA_SETS","DELETE_DOCUMENT_DATA_SET","DOCUMENT_CHANGE","archiveDBData","dbData","loadDocumentDataSets","newActiveDataSet","deleteDocumentDataSet","document","updateDocumentDataInDocumentDB","documentData","documentDB","name","updateDocumentDataSetsInDocumentDB","documentDataSets","reduce","prev","removeDocumentDataFromDocumentDB","Object","fromEntries","entries","filter","arr","initialState","getDocumentDB","getDocumentNames","db","keys","getDocumentDataSets","values","actions","actionTypes","reducer","selectors","intialState","services","model","getCurrentSelectionPosition","selectionPosition","getCurrentSelectedString","manuallySelectedString","currentSelectionExists","str","getCurrentSelectedParent","selectedParentSpan","getSourceCard","sourceCard","selectionToCardAppend","transformedOrigin","isUpdate","undefined","selectedString","resetManuallySelectedString","selectionToCard","selectionToCardForSourceCard","sourceField","resetSourceCard","newOrigin","isNullOrUndefined","spanIndex","hasNonEmptyOrigin","updateManuallySelectedString","selectedParent","span","updateSelectionPosition","x","y","setSourceCard","trySetSourceCard","tryResetSourceCard","selectionData","SelectionSnackbar","useState","open","setOpen","useSelector","message","style","color","Snackbar","anchorOrigin","vertical","horizontal","onClose","event","reason","preventDefault","action","size","aria-label","getSelection","selection","window","activeElement","value","substring","selectionStart","selectionEnd","text","e","getPDF","pdf","getPDFName","pdfName","getRenderCritialData","currentPage","documentRef","getTotalPages","totalPages","getCurrentPage","getPageControlData","getDocumentRef","getMaterialData","materialData","getTimeStamp","materialDataTimeStamp","getMaterialSpans","materialSpans","getSpanIndex","indexOf","getMaterialBoundingRects","materialBoundingRects","getDataExists","timestamp","getDisplayStatus","displayStatus","displayStatusIsShow","status","getZoomQueue","zoomQueue","getMaterialHeight","materialHeight","getCurrentOrigin","page","incrementer","counter","curCounter","expandSpan","rect","getBoundingClientRect","container","startingSpans","Array","from","querySelectorAll","length","expandedSpans","spans","boundingRects","exSpan","push","splitExpandedSpans","map","expandSpans","sort","exSpan2","pdfUpload","materialUploaded","files","target","materialLoaded","tryInterval","tries","ms","func","increment","timeout","setInterval","clearInterval","captureMaterialData","current","startTime","Date","now","curMaterialGroupData","keyMap","setPage","pageCorrections","newPage","movePage","nextPage","previousPage","pageControlKeyMap","ArrowLeft","ArrowRight","pageControlDispatcher","key","toggleDisplayState","displayState","setZoomQueue","zoomToCardOrigin","console","log","emptyZoomQueue","scrollIntoView","behavior","block","inline","setMaterialHeight","height","deleteDocument","activeDocument","ActionCreators","clearHistory","PreviousButton","NextButton","PageNavigation","Card","variant","Grid","direction","item","Divider","orientation","nonDigitRegEx","PageChooser","error","userInput","setState","alignItems","justify","width","TextField","inputProps","padding","fontFamily","fontWeight","lineHeight","letterSpacing","onKeyDown","submittedValue","onChange","possiblePage","trim","match","asInt","validatePageChoice","Typography","PageKeyboardControl","ref","useRef","tabIndex","pdfjs","GlobalWorkerOptions","workerSrc","version","options","cMapUrl","cMapPacked","PDFDocumentContainer","connect","parentSize","useEffect","onMouseUp","mouseUpDocument","file","onLoadSuccess","numPages","inputRef","onItemClick","pageNumber","loading","noData","renderMode","onRenderSuccess","forEach","layer","top","left","transform","selectedStr","selectionObject","anchorNode","parentNode","PDFPageRenderer","index","data","scale","triggerResize","pages","pageNumbers","has","set","get","renderAnnotationLayer","onLoadError","Loader","className","PDFViewer","props","_callOrientationChangeHandler","_callResizeHandler","_list","_mounted","initialContainerHeight","containerHeight","cachedPageDimensions","responsiveScale","Map","WeakMap","createRef","debounce","handleResize","bind","this","addEventListener","removeEventListener","promises","v","i","getPage","Promise","all","then","pageDimensions","w","view","h","_pageIndex","resetAfterIndex","cachePageDimensions","visibleStopIndex","node","clientHeight","newResponsiveScale","computeResponsiveScale","recomputeRowHeights","pdfFile","onDocumentLoadSuccess","itemCount","itemSize","computeRowHeight","itemData","overscanCount","onItemsRendered","updateCurrentVisiblePage","PureComponent","defaultProps","MaterialDisplayColumnWithSize","withSize","monitorHeight","noPlaceholder","hidden","elevation","setElevation","useLayoutEffect","onMouseEnter","onMouseLeave","Paper","pageSpans","Infinity","getRiverMakeUps","riverMakeUps","getActiveRiverMakeUpID","activeRiverMakeUpID","getPushToRiver","pushToRiverID","getPushToRiverMakeUp","makeUps","id","getActiveRiverMakeUp","getPushToRiverCardIDs","makeUp","cardIDs","getPushToRiverCards","makeUpCardIDs","getActiveRiverCardIDs","getActiveRiverCards","getRiverShowState","riverShowState","riverShowStateIsShow","getHoveredCardData","highlightedCardID","highlightedCardField","getLastRiverIDNumber","lastRiverIDNumber","getRiverContentState","riverContentState","getRiverContentFilter","contentFilter","RIVER_SHOW_STATE","RIVER_CONTENT_STATE","RIVER_PUSH_STATE","RIVER_HOVERED_CARD","RIVER_CONTENT_FILTER","toggleRiverShowState","setRiverContentState","setPushToRiver","trySetPushToRiver","setHoveredCard","trySetHoveredCard","highlightedCardIDData","resetHoveredCard","setContentFilter","resetContentFilter","GreenCheckbox","withStyles","root","green","checked","Checkbox","RiverContentFormGroup","showQAs","showNotes","changeContentState","clickedState","FormGroup","FormControlLabel","control","label","DISPLAY_FOCUS_UPDATE","updateDisplayFocus","focus","displayFocus","getDisplayFocus","HybridCardField","storeValue","saveChanges","rest","mutableValue","InputProps","disableUnderline","minWidth","multiline","onBlur","mouseUpCardField","JumpToOriginButton","cardOrigin","display","GrabForFieldButton","cardField","outlined","setOutlined","isGoalCard","AppendButton","selectionParent","store","useStore","QACard","isHoveredCard","isActiveRiver","spacing","borderStyle","backgroundColor","InputLabelProps","NoteCard","border","borderRadius","ClayCard","riverID","GridDivider","CardRiverAccordion","gridItems","summary","pushToRiver","Accordion","defaultExpanded","overflowY","maxHeight","AccordionSummary","align","MozUserSelect","WebkitUserSelect","msUserSelect","AccordionDetails","ChildCardRiver","riverCards","useMemo","inputCards","noteConfig","includes","noteContainsContentFilter","qaConfig","qaContainsContentFilter","toCardGridItemsWithDividers","pageNumberToRiverMakeUpID","SummaryRiver","cardConfigs","focusRef","scrollTo","replace","ActiveCardRiver","emptyCardRiver","updateStateWithMakeUps","updatedState","deactivateActiveCardRiver","active","removeCardFromRivers","entry","riverMakeUp","activeRiver","oldRiver","collectCurrentDBData","river","archiveCurrentDBData","fileDownload","require","downloadDBData","localString","toLocaleString","JSON","stringify","changeDocument","newPDFName","currentPDFName","newDocumentData","loadSavedDocument","DeleteDocumentDialogAlert","handleClose","Dialog","aria-labelledby","aria-describedby","DialogTitle","DialogContent","DialogContentText","DialogActions","Button","autoFocus","DeleteDocumentButton","InputDataSets","MenuItem","click","disableElevation","startIcon","reader","FileReader","readAsText","onload","uploadedDataSets","parse","result","foundDataSet","find","accept","InputDocument","LoadDocumentDataButton","DocumentOptionItemButtonRow","DocumentOptionItem","ActiveDocumentOptionItem","Options","documents","doc","React","anchorEl","setAnchorEl","currentTarget","Menu","keepMounted","Boolean","MenuListProps","paddingLeft","paddingRight","component","marginTop","listStyleType","CardSearchBar","placeholder","newValue","onCancelSearch","onRequestSearch","UndoButton","undo","RedoButton","redo","UndoRedoCard","ShowRiverCheckbox","ShowMaterialCheckbox","displayShowState","ShowHideButton","ViewTabs","Tabs","Tab","disableFocusListener","ControlBar","materialName","AppBar","Toolbar","flexGrow","TOGGLE_CONTEXT_MENU","CLOSE_CONTEXT_MENU","OPEN_CONTEXT_MENU","getContextMenuState","getContextMenuRef","menuRef","getContextMenuFullCardsRef","fullCardRef","getContextMenuQARefs","qaRefs","getContextMenuInitData","position","toggleContextMenu","closeContextMenu","openContextMenu","creationData","SingleOptionItem","dispatchRiver","QAOptionItem","qaRef","parentMenuOpen","CardConfigItem","NewQACardQ","NewQACardA","NewNoteCard","NewButtons","noteDispatch","qDispatch","aDispatch","useEventListener","eventName","handler","savedHandler","eventListener","contextMenuContainsTargetNode","fullCardsRef","refObject","cur","querySelector","contains","mouseDownControl","rightClickControl","ContextMenuContainer","openState","qaRefIndex","anchorPosition","array","pass","fail","partition","nonFullRiverCards","fullRiverCards","anchorReference","useStyles","makeStyles","theme","createStyles","bottom","right","ScrollTop","classes","trigger","useScrollTrigger","disableHysteresis","threshold","Zoom","in","anchor","ownerDocument","role","ReaderScene","showMaterial","showRiver","Fab","removeDOMObjectsFromCreationData","inboundState","addDOMObjectsToCreationData","outboundState","extractionTransform","createTransform","future","past","whitelist","extraction","displayTransform","removeDOMObjectsFromDisplayData","addDOMObjectsToDisplayData","selectionTransform","persistConfig","storage","transforms","rootReducer","combineReducers","undoable","includeAction","creation","persistedReducer","persistReducer","enhancer","composeWithDevTools","stateSanitizer","displayData","composeEnhancers","applyMiddleware","thunk","createStore","persistor","persistStore","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.fb162877.chunk.js","sourcesContent":["export const NAME = \"displayData\";\n","import { NAME } from \"./constants\";\n\nexport const PDF_UPLOADED = NAME + \"/PDF_UPLOADED\";\nexport const MATERIAL_LOADED = NAME + \"/MATERIAL_LOADED\";\nexport const DISPLAY_STATUS = NAME + \"/DISPLAY_STATUS\";\nexport const PAGE_UPDATE = NAME + \"/PAGE_UPDATE\";\nexport const ZOOM_QUEUE = NAME + \"/ZOOM_QUEUE\";\nexport const MATERIAL_DATA = NAME + \"/MATERIAL_DATA\";\nexport const MATERIAL_HEIGHT = NAME + \"/MATERIAL_HEIGHT\";\n","export const NAME = \"selectionData\";\n","import { NAME } from \"./constants\";\n\nexport const SELECTED_STRING = NAME + \"/SELECTED_STRING\";\nexport const SELECTED_PARENT = NAME + \"/SELECTED_PARENT\";\nexport const DOCUMENT_POSITION = NAME + \"/SELECTION_POSITION\";\nexport const SOURCE_CARD = NAME + \"/SOURCE_CARD\";\n","import { isNullOrUndefined } from \"util\";\nimport { CardField } from \"./model-content\";\n\nexport type SingleOrigin = { spanIndex: number; page: number };\nexport type QOnlyQAOrigin = { q: SingleOrigin; a: {} };\nexport type AOnlyQAOrigin = { q: {}; a: SingleOrigin };\nexport type PartialQAOrigin = QOnlyQAOrigin | AOnlyQAOrigin;\nconst emptyQAOrigin = () => {\n\treturn { q: {}, a: {} };\n};\ntype EmptyOrigin = { q: {}; a: {} } | \"\";\nconst EmptyOriginMap: { [field in CardField]: () => EmptyOrigin } = {\n\tq: emptyQAOrigin,\n\ta: emptyQAOrigin,\n\tnote: () => \"\",\n};\nexport const emptyOrigin = (field: CardField) => {\n\treturn EmptyOriginMap[field]();\n};\ntype FullQAOrigin = { q: SingleOrigin; a: SingleOrigin };\nexport type QAOrigin = FullQAOrigin | PartialQAOrigin;\nexport type NoteOrigin = SingleOrigin;\nexport type CardOrigin = NoteOrigin | QAOrigin;\n\nexport const hasNonEmptyOrigin = (origin?: CardOrigin) =>\n\t!!origin &&\n\t(!isNullOrUndefined((origin as SingleOrigin).spanIndex) ||\n\t\t!isNullOrUndefined((origin as AOnlyQAOrigin).a?.spanIndex) ||\n\t\t!isNullOrUndefined((origin as QOnlyQAOrigin).q?.spanIndex));\n","import { CardField, QACardField } from \"./model-content\";\n\n// for origin and content the same object structure is used,\n// so same permutation api should be used\n\ntype NoteObject = any;\ntype QAObject = { [key in QACardField]: any };\ntype CardObject = NoteObject | QAObject;\n\nconst FieldValueAccessorMap: { [field in CardField]: (cardObject: CardObject) => any } = {\n\tnote: (cardObject) => cardObject,\n\tq: (cardObject) => (cardObject as QAObject).q,\n\ta: (cardObject) => (cardObject as QAObject).a,\n};\nexport const toFieldValue = (field: CardField, cardObject: CardObject) => FieldValueAccessorMap[field](cardObject);\n\ntype Modify = (oldValue: any) => any;\nconst FieldValueModifierMap: { [key in CardField]: (cardObject: CardObject, modify: Modify) => any } = {\n\tnote: (cardObject, modify) => modify(cardObject),\n\tq: (cardObject, modify) => {\n\t\treturn { ...(cardObject as QAObject), q: modify((cardObject as QAObject).q) };\n\t},\n\ta: (cardObject, modify) => {\n\t\treturn { ...(cardObject as QAObject), a: modify((cardObject as QAObject).a) };\n\t},\n};\nconst modifyFieldValue = (field: CardField, cardObject: CardObject, modify: Modify) =>\n\tFieldValueModifierMap[field](cardObject, modify);\n\nexport type CreateModify = (inputValue: any) => Modify;\n\nexport const createReplace: CreateModify = (inputValue: any) => (_: any) => inputValue;\n\nexport type CardObjectChangeSpec = {\n\tinputField: CardField;\n\tinputObject: CardObject;\n\tfieldToBeChanged: CardField;\n\tobjectToBeChanged: CardObject;\n\tcreateModify: CreateModify;\n};\nexport const changeCardObject = (spec: CardObjectChangeSpec) => {\n\tconst inputValue = toFieldValue(spec.inputField, spec.inputObject);\n\tconst modify = spec.createModify(inputValue);\n\treturn modifyFieldValue(spec.fieldToBeChanged, spec.objectToBeChanged, modify);\n};\n","import { CardField } from \"../model/model-content\";\nimport { CardOrigin, emptyOrigin } from \"../model/model-origin\";\nimport { changeCardObject, createReplace } from \"../model/model-permutation\";\n\nexport const transformInputOrigin = (\n\tinputOrigin: CardOrigin,\n\tinputField: CardField,\n\toutputField: CardField,\n\toldOrigin?: CardOrigin\n): CardOrigin => {\n\tconst objectToBeChanged = oldOrigin ? oldOrigin : emptyOrigin(outputField);\n\tconst changeSpec = {\n\t\tinputField,\n\t\tfieldToBeChanged: outputField,\n\t\tobjectToBeChanged,\n\t\tinputObject: inputOrigin,\n\t\tcreateModify: createReplace,\n\t};\n\treturn changeCardObject(changeSpec);\n};\n","export const NAME = \"cards\";\n","import { NAME } from \"./constants\";\n\nexport const CARD_UPDATE = NAME + \"/CARD_UPDATE\";\nexport const CARD_PUSH = NAME + \"/CARD_PUSH\";\nexport const CARD_REMOVE = NAME + \"/CARD_REMOVE\";\nexport const CARD_GOAL = NAME + \"/CARD_GOAL\";\n","import { createSelector } from \"reselect\";\nimport { CardsState } from \"./model/model\";\nimport { NAME } from \"./constants\";\n\nexport const getAll = (state: any) => state[NAME].present;\n\nexport const getLastCardIDNumber = createSelector(getAll, (state) => state.lastCardIDNumber);\n\nexport const getCards = createSelector(getAll, (state: CardsState) => state.cards);\n\nexport const getGoalCard = createSelector(getAll, (state: CardsState) => state.goalCard);\n","export type QACardField = \"q\" | \"a\";\nexport type CardField = \"note\" | QACardField;\n\nexport type StringCardContent = string;\nexport type NoteCardContent = StringCardContent;\nexport type QACardContent = {\n\t[field in QACardField]: StringCardContent;\n};\nexport type CardContent = NoteCardContent | QACardContent;\n\ntype EmptyContent = { q: \"\"; a: \"\" } | \"\";\nconst emptyQAContent = (): EmptyContent => {\n\treturn { q: \"\", a: \"\" };\n};\nconst EmptyContentMap: { [field in CardField]: () => EmptyContent } = {\n\tq: emptyQAContent,\n\ta: emptyQAContent,\n\tnote: () => \"\",\n};\nexport const emptyContent = (field: CardField) => {\n\treturn EmptyContentMap[field]();\n};\n\nexport const noteContentIsEmpty = (content: string) => content === \"\";\nexport const qaContentIsNotFull = (content: QACardContent) =>\n\t(content as QACardContent).q === \"\" || (content as QACardContent).a === \"\";\n","import { NoteOrigin, QAOrigin } from \"./model-origin\";\nimport { NoteCardContent, QACardContent, noteContentIsEmpty, qaContentIsNotFull } from \"./model-content\";\n\nexport type CardID = string;\nexport const cardIDToNumber = (cardID: CardID) => parseInt(cardID);\nexport const nextCardID = (lastCardIDNumber: number) => (lastCardIDNumber + 1).toString();\n\nexport type CardType = \"Note\" | \"Q-A\";\nexport type NoteConfig = { cardID: CardID; type: CardType; content: NoteCardContent; origin?: NoteOrigin };\nexport type QAConfig = { cardID: CardID; type: CardType; content: QACardContent; origin?: QAOrigin };\nexport type CardConfig = NoteConfig | QAConfig;\n\nconst CardIsFullMap: { [card in CardType]: (config: CardConfig) => boolean } = {\n\tNote: (config) => noteContentIsEmpty(config.content as NoteCardContent),\n\t\"Q-A\": (config) => qaContentIsNotFull(config.content as QACardContent),\n};\nexport const cardIsNotFull = (config: CardConfig) => CardIsFullMap[config.type](config);\n\nexport type UpdateType = \"REPLACE\" | \"APPEND\";\n\nexport type CreationType = \"note\" | \"q\" | \"a\";\n\nexport type GoalCard = CardConfig & { creationType: CreationType };\n\nexport type Cards = { [cardID: string]: CardConfig };\n\nexport type CardsState = {\n\tcards: Cards;\n\tlastCardIDNumber: number;\n\tgoalCard: GoalCard | null;\n};\nexport const removeCardFromCardsState = (state: CardsState, cardID: CardID) => {\n\tconst cards = { ...state.cards };\n\n\t// we do not reset the ID counter\n\n\tdelete cards[cardID];\n\n\treturn { ...state, cards };\n};\nexport const replaceCardsInCardsState = (state: CardsState, cards: Cards, lastCardIDNumber: number) => {\n\treturn {\n\t\t...state,\n\t\tcards,\n\t\tlastCardIDNumber,\n\t};\n};\nexport const updateCardInCards = (cards: Cards, toBeUpdated: CardConfig) => {\n\tconst cardObj = { ...cards };\n\tcardObj[toBeUpdated.cardID] = toBeUpdated;\n\treturn cardObj;\n};\nexport const addCardToCards = updateCardInCards;\n","import { CardField } from \"./model-content\";\nimport { getLastCardIDNumber } from \"../selectors\";\nimport { CardConfig, CardsState, nextCardID } from \"./model\";\n\nexport type CardPayload = Omit<CardConfig, \"cardID\">;\nexport const emptyNotePayload = (): CardPayload => {\n\treturn { type: \"Note\", content: \"\" };\n};\nexport const emptyQAPayload = (): CardPayload => {\n\treturn { type: \"Q-A\", content: { q: \"\", a: \"\" } };\n};\nconst EmptyPayloadFieldMap: {\n\t[key in CardField]: () => CardPayload;\n} = {\n\tnote: emptyNotePayload,\n\tq: emptyQAPayload,\n\ta: emptyQAPayload,\n};\nexport const cardFieldToEmptyPayload = (field: CardField) => EmptyPayloadFieldMap[field]();\n\nexport const cardPayloadToCardConfig = (payload: CardPayload, state: CardsState) => {\n\treturn { ...payload, cardID: nextCardID(getLastCardIDNumber(state)) } as CardConfig;\n};\n","import { UpdateType } from \"../model/model\";\nimport { CardPayload, cardFieldToEmptyPayload } from \"../model/model-payload\";\nimport { CardField, emptyContent } from \"../model/model-content\";\nimport { CreateModify, createReplace, changeCardObject } from \"../model/model-permutation\";\n\nconst createAppendStr: CreateModify = (inputValue: string) => (oldValue: string) => oldValue + inputValue;\n\nexport const contentStringToConfig = (\n\tcontentStr: string,\n\toutputField: CardField,\n\tupdateType: UpdateType,\n\texistingCard?: CardPayload\n): CardPayload => {\n\tconst objectToBeChanged = existingCard ? existingCard.content : emptyContent(outputField);\n\tconst changeSpec = {\n\t\tinputObject: contentStr,\n\t\tinputField: \"note\" as CardField,\n\t\tfieldToBeChanged: outputField,\n\t\tobjectToBeChanged,\n\t\tcreateModify: updateType === \"APPEND\" ? createAppendStr : createReplace,\n\t};\n\tconst content = changeCardObject(changeSpec);\n\n\treturn existingCard ? { ...existingCard, content } : { ...cardFieldToEmptyPayload(outputField), content };\n};\n","import { CreationType, UpdateType, CardConfig, CardID } from \"./model/model\";\nimport { CardPayload, cardPayloadToCardConfig, emptyNotePayload, emptyQAPayload } from \"./model/model-payload\";\nimport { CardOrigin } from \"./model/model-origin\";\nimport * as t from \"./actionTypes\";\nimport { Dispatch } from \"redux\";\nimport { getCards } from \"./selectors\";\nimport { contentStringToConfig } from \"./services/contentStringToConfig\";\n\nexport const cardPush = (cardPayload: CardPayload) => {\n\treturn (dispatch: Dispatch, getState: Function) => {\n\t\tdispatch({\n\t\t\ttype: t.CARD_PUSH,\n\t\t\tpayload: cardPayloadToCardConfig(cardPayload, getState()),\n\t\t});\n\t};\n};\nexport const emptyNoteCard = () => cardPush(emptyNotePayload());\nexport const emptyQACard = () => cardPush(emptyQAPayload());\n\nexport const cardUpdate = (card: CardConfig) => {\n\treturn { type: t.CARD_UPDATE, payload: card };\n};\n\nexport const updateCardContent = (\n\tcontentString: string,\n\tcardID: CardID,\n\tcreationType: CreationType,\n\tupdateType: UpdateType,\n\torigin?: CardOrigin\n) => {\n\treturn (dispatch: Dispatch, getState: Function) => {\n\t\tconst state = getState();\n\n\t\tconst currentCard = getCards(state)[cardID as string];\n\t\tconst config = contentStringToConfig(contentString, creationType, updateType, currentCard);\n\n\t\tdispatch(cardUpdate({ ...config, origin } as CardConfig));\n\t};\n};\n\nexport const pushCardContent = (\n\tcontentString: string,\n\tcreationType: CreationType,\n\tupdateType: UpdateType,\n\torigin?: CardOrigin\n) => {\n\tconst config = contentStringToConfig(contentString, creationType, updateType);\n\n\treturn cardPush({ ...config, origin });\n};\n\nexport const removeCard = (cardID: CardID) => {\n\treturn { type: t.CARD_REMOVE, payload: cardID };\n};\n\nexport const setGoalCard = (cardConfig: CardConfig, creationType: CreationType) => {\n\treturn { type: t.CARD_GOAL, payload: { ...cardConfig, creationType } };\n};\n\nexport const resetGoalCard = () => {\n\treturn { type: t.CARD_GOAL, payload: null };\n};\n","export const switchToActiveRiverTooltip = \"Switch to the Active-River view\";\nexport const switchToSummaryRiverTooltip = \"Switch to the Summary-River view\";\n\nexport const undoTooltip = \"Undo last action\";\nexport const redoTooltip = \"Redo last action\";\n\nexport const nextPageTooltip = \"Next page\";\nexport const previousPageTooltip = \"Previous page\";\n\nexport const deleteCardTooltip = \"Delete this card\";\nexport const grabForCardTooltip = \"Activate the document-selection grab for this card(-field)\";\nexport const jumpToOriginTooltip = \"Jump to the origin of the card content\";\nexport const appendToCardTooltip = \"Add the current selection to this card (only from document)\";\n\nexport const newQACardTooltip = \"Create new QA-card\";\nexport const newNoteCardTooltip = \"Create new Note-card\";\n\nexport const deleteDocumentTooltip = \"Delete this document and all its corresponding cards\";\nexport const loadSavedDocumentTooltip = \"Load the card data of this document\";\n\n///\n\nexport const noMaterialText = \"No PDF file specified.\";\nexport const loadingMaterialText = \"Loading PDF…\";\n\nexport const activeDocumentText = \"Active Document:\";\nexport const existingDataText = \"Inactive documents with existing data:\";\nexport const loadMaterialText = \"Load document\";\nexport const downloadDatasetsText = \"Download document datasets\";\nexport const uploadDatasetsText = \"Upload document datasets\";\n\nexport const noteText = \"Note\";\nexport const questionText = \"Question\";\nexport const answerText = \"Answer\";\n\n///\n\nexport const defaultEnterDelay = 500;\nexport const defaultEnterNextDelay = 1000;\n","import React, { ReactElement } from \"react\";\nimport { Tooltip } from \"@material-ui/core\";\nimport { newNoteCardTooltip, defaultEnterDelay, defaultEnterNextDelay } from \"../constants\";\n\nexport const NewNoteCardTooltip = ({ children }: { children: ReactElement }) => {\n\treturn (\n\t\t<Tooltip title={newNoteCardTooltip} enterDelay={defaultEnterDelay} enterNextDelay={defaultEnterNextDelay}>\n\t\t\t{children}\n\t\t</Tooltip>\n\t);\n};\n","import React, { ReactElement } from \"react\";\nimport { Tooltip } from \"@material-ui/core\";\nimport { defaultEnterDelay, defaultEnterNextDelay, newQACardTooltip } from \"../constants\";\n\nexport const AddQAButtonTooltip = ({ children }: { children: ReactElement }) => {\n\treturn (\n\t\t<Tooltip title={newQACardTooltip} enterDelay={defaultEnterDelay} enterNextDelay={defaultEnterNextDelay}>\n\t\t\t{children}\n\t\t</Tooltip>\n\t);\n};\n","import React, { ReactElement } from \"react\";\nimport { Tooltip } from \"@material-ui/core\";\nimport { defaultEnterDelay, defaultEnterNextDelay, deleteCardTooltip } from \"../constants\";\n\nexport const DeleteCardButtonTooltip = ({ children }: { children: ReactElement }) => {\n\treturn (\n\t\t<Tooltip title={deleteCardTooltip} enterDelay={defaultEnterDelay} enterNextDelay={defaultEnterNextDelay}>\n\t\t\t{children}\n\t\t</Tooltip>\n\t);\n};\n","import React, { ReactElement } from \"react\";\nimport { Tooltip } from \"@material-ui/core\";\nimport { defaultEnterDelay, defaultEnterNextDelay, appendToCardTooltip } from \"../constants\";\n\nexport const AppendButtonTooltip = ({ children }: { children: ReactElement }) => {\n\treturn (\n\t\t<Tooltip title={appendToCardTooltip} enterDelay={defaultEnterDelay} enterNextDelay={defaultEnterNextDelay}>\n\t\t\t{children}\n\t\t</Tooltip>\n\t);\n};\n","import * as components from \"./components\";\nimport * as constants from \"./constants\";\n\nexport default { components, constants };\n","import FeaturedVideoIcon from \"@material-ui/icons/FeaturedVideo\";\nimport React from \"react\";\nimport { IconButton } from \"@material-ui/core\";\nimport { useDispatch } from \"react-redux\";\nimport text from \"../../text\";\nimport { emptyNoteCard } from \"../actions\";\n\nexport const AddNoteButton = () => {\n\tconst dispatch = useDispatch();\n\treturn (\n\t\t<text.components.NewNoteCardTooltip>\n\t\t\t<IconButton\n\t\t\t\ttype=\"button\"\n\t\t\t\tonClick={() => {\n\t\t\t\t\tdispatch(emptyNoteCard());\n\t\t\t\t}}\n\t\t\t>\n\t\t\t\t<FeaturedVideoIcon></FeaturedVideoIcon>\n\t\t\t</IconButton>\n\t\t</text.components.NewNoteCardTooltip>\n\t);\n};\n","import FeaturedPlayListIcon from \"@material-ui/icons/FeaturedPlayList\";\nimport React from \"react\";\nimport { IconButton } from \"@material-ui/core\";\nimport { useDispatch } from \"react-redux\";\nimport text from \"../../text\";\nimport { emptyQACard } from \"../actions\";\n\nexport const AddQAButton = () => {\n\tconst dispatch = useDispatch();\n\treturn (\n\t\t<text.components.AddQAButtonTooltip>\n\t\t\t<IconButton\n\t\t\t\ttype=\"button\"\n\t\t\t\tonClick={() => {\n\t\t\t\t\tdispatch(emptyQACard());\n\t\t\t\t}}\n\t\t\t>\n\t\t\t\t<FeaturedPlayListIcon></FeaturedPlayListIcon>\n\t\t\t</IconButton>\n\t\t</text.components.AddQAButtonTooltip>\n\t);\n};\n","import DeleteForeverIcon from \"@material-ui/icons/DeleteForever\";\nimport React from \"react\";\nimport { IconButton } from \"@material-ui/core\";\nimport { useDispatch } from \"react-redux\";\nimport { CardID } from \"../model/model\";\nimport text from \"../../text\";\nimport { removeCard } from \"../actions\";\n\n//TODO-NICE: use storybook for visual component testing\n\nexport const DeleteCardButton = ({ cardID }: { cardID: CardID }) => {\n\tconst dispatch = useDispatch();\n\treturn (\n\t\t<text.components.DeleteCardButtonTooltip>\n\t\t\t<IconButton\n\t\t\t\ttype=\"button\"\n\t\t\t\tonClick={() => {\n\t\t\t\t\tdispatch(removeCard(cardID));\n\t\t\t\t}}\n\t\t\t>\n\t\t\t\t<DeleteForeverIcon fontSize=\"small\"></DeleteForeverIcon>\n\t\t\t</IconButton>\n\t\t</text.components.DeleteCardButtonTooltip>\n\t);\n};\n","export const NAME = \"documentDB\";\n","import { NAME } from \"./constants\";\n\nexport const ARCHIVE_CURRENT_DATA = NAME + \"/ARCHIVE_CURRENT_DATA\";\nexport const LOAD_DOCUMENT_DATA_SETS = NAME + \"/LOAD_DOCUMENT_DATA_SETS\";\nexport const DELETE_DOCUMENT_DATA_SET = NAME + \"/DELETE_DOCUMENT_DATA_SET\";\nexport const DOCUMENT_CHANGE = NAME + \"/DOCUMENT_CHANGE\";\n","import { DocumentData } from \"./model\";\nimport * as t from \"./actionTypes\";\n\nexport const archiveDBData = (dbData: DocumentData) => {\n\treturn { type: t.ARCHIVE_CURRENT_DATA, payload: dbData };\n};\n\nexport const loadDocumentDataSets = (dbData: DocumentData[], newActiveDataSet?: DocumentData) => {\n\treturn { type: t.LOAD_DOCUMENT_DATA_SETS, payload: { dbData, newActiveDataSet } };\n};\n\n//TODO-NICE: might need to make my convention of always using payload as data-field obvious?\n\nexport const deleteDocumentDataSet = (document: string) => {\n\treturn { type: t.DELETE_DOCUMENT_DATA_SET, payload: document };\n};\n","import { CardRiverState } from \"../river/model\";\nimport { CardsState } from \"../cards/model/model\";\nimport { DisplayData } from \"../display/model\";\n\nexport type ArchiveRiver = Pick<\n\tCardRiverState,\n\t\"riverMakeUps\" | \"activeRiverMakeUpID\" | \"pushToRiverID\" | \"lastRiverIDNumber\"\n>;\n\nexport type ArchiveCards = Pick<CardsState, \"cards\" | \"lastCardIDNumber\">;\n\ntype ArchiveDisplay = Pick<DisplayData, \"currentPage\" | \"totalPages\">;\n\nexport type DocumentData = {\n\tname: string;\n} & ArchiveDisplay &\n\tArchiveRiver &\n\tArchiveCards;\n\nexport type DocumentDB = { [name: string]: DocumentData };\n\nexport type DocumentDBState = { documentDB: DocumentDB };\n\nexport const updateDocumentDataInDocumentDB = (state: DocumentDBState, documentData: DocumentData): DocumentDBState => {\n\treturn {\n\t\t...state,\n\t\tdocumentDB: { ...state.documentDB, [documentData.name]: documentData },\n\t};\n};\n\nexport const updateDocumentDataSetsInDocumentDB = (\n\tstate: DocumentDBState,\n\tdocumentDataSets: DocumentData[]\n): DocumentDBState => {\n\treturn {\n\t\t...state,\n\t\tdocumentDB: {\n\t\t\t...state.documentDB,\n\t\t\t...documentDataSets.reduce((prev, dbData) => {\n\t\t\t\tprev[dbData.name] = dbData;\n\t\t\t\treturn prev;\n\t\t\t}, {} as DocumentDB),\n\t\t},\n\t};\n};\n\nexport const removeDocumentDataFromDocumentDB = (state: DocumentDBState, document: string): DocumentDBState => {\n\treturn {\n\t\t...state,\n\t\tdocumentDB: Object.fromEntries(Object.entries(state.documentDB).filter((arr) => arr[0] !== document)),\n\t};\n};\n","import {\n\tDocumentDBState,\n\tDocumentData,\n\tupdateDocumentDataInDocumentDB,\n\tupdateDocumentDataSetsInDocumentDB,\n\tremoveDocumentDataFromDocumentDB,\n} from \"./model\";\nimport * as t from \"./actionTypes\";\n\nconst initialState: DocumentDBState = { documentDB: {} };\n\n//TODO-NICE: PDF-date gets saved with name, better use some hash or something (rename of document file is likely) -> use size or last-modified or smth like that instead of name\n\nconst documentDB = (\n\tstate = initialState,\n\t{ type, payload }: { type: string; payload: DocumentData | DocumentData[] | string | { dbData: DocumentData[] } }\n): DocumentDBState => {\n\tswitch (type) {\n\t\t// dont need to undo this, because if we change the active river and then change the document, the archive version gets overwritten\n\t\tcase t.ARCHIVE_CURRENT_DATA:\n\t\t\treturn updateDocumentDataInDocumentDB(state, payload as DocumentData);\n\t\tcase t.LOAD_DOCUMENT_DATA_SETS:\n\t\t\treturn updateDocumentDataSetsInDocumentDB(\n\t\t\t\tstate,\n\t\t\t\t(payload as { dbData: DocumentData[] }).dbData as DocumentData[]\n\t\t\t);\n\t\tcase t.DELETE_DOCUMENT_DATA_SET:\n\t\t\treturn removeDocumentDataFromDocumentDB(state, payload as string);\n\t\tdefault:\n\t\t\treturn state;\n\t}\n};\n\nexport default documentDB;\n","import { createSelector } from \"reselect\";\nimport { DocumentDBState } from \"./model\";\nimport { NAME } from \"./constants\";\n\nexport const getAll = (state: any) => state[NAME].present;\n\nexport const getDocumentDB = createSelector(getAll, (state: DocumentDBState) => state.documentDB);\n\nexport const getDocumentNames = createSelector(getDocumentDB, (db) => Object.keys(db));\n\nexport const getDocumentDataSets = createSelector(getDocumentDB, (db) => Object.values(db));\n","import * as actions from \"./actions\";\nimport * as actionTypes from \"./actionTypes\";\nimport * as constants from \"./constants\";\nimport reducer from \"./reducer\";\nimport * as selectors from \"./selectors\";\n\nexport default { actions, actionTypes, constants, reducer, selectors };\n","import * as t from \"./actionTypes\";\nimport {\n\tCardsState,\n\tremoveCardFromCardsState,\n\tcardIDToNumber,\n\tupdateCardInCards,\n\taddCardToCards,\n\treplaceCardsInCardsState,\n} from \"./model/model\";\nimport { ArchiveCards } from \"../db/model\";\nimport db from \"../db\";\n\nconst intialState: CardsState = {\n\tcards: {\n\t\t\"0\": {\n\t\t\tcardID: \"0\",\n\t\t\ttype: \"Q-A\",\n\t\t\tcontent: { q: \"Was ist der Sinn des Lebens?\", a: \"42\" },\n\t\t},\n\t\t\"1\": {\n\t\t\tcardID: \"1\",\n\t\t\ttype: \"Q-A\",\n\t\t\tcontent: { q: \"Welches Layout macht mehr Sinn?\", a: \"??\" },\n\t\t},\n\t\t\"2\": { cardID: \"2\", type: \"Note\", content: \"Note here\" },\n\t},\n\tlastCardIDNumber: 2,\n\tgoalCard: null,\n};\n\nconst cards = (state = intialState, { type, payload }: { type: string; payload?: any }) => {\n\tswitch (type) {\n\t\tcase t.CARD_PUSH:\n\t\t\tconst lastCardIDNumber = cardIDToNumber(payload.cardID) + 1;\n\t\t\treturn { ...state, cards: addCardToCards(state.cards, payload), lastCardIDNumber };\n\t\tcase t.CARD_UPDATE:\n\t\t\t// either the update was for a goalCard, then we want to reset it\n\t\t\t// or the update was not for a goalCard, then there should not be a goalCard anyways\n\t\t\tconst goalCard = null;\n\n\t\t\treturn { ...state, cards: updateCardInCards(state.cards, payload), goalCard };\n\t\tcase t.CARD_REMOVE:\n\t\t\treturn removeCardFromCardsState(state, payload as string);\n\t\tcase t.CARD_GOAL:\n\t\t\treturn { ...state, goalCard: payload };\n\t\tcase db.actionTypes.DOCUMENT_CHANGE:\n\t\t\tif (payload) {\n\t\t\t\treturn replaceCardsInCardsState(\n\t\t\t\t\tintialState,\n\t\t\t\t\t(payload as ArchiveCards).cards,\n\t\t\t\t\t(payload as ArchiveCards).lastCardIDNumber\n\t\t\t\t);\n\t\t\t} else {\n\t\t\t\treturn intialState;\n\t\t\t}\n\t\tcase db.actionTypes.LOAD_DOCUMENT_DATA_SETS:\n\t\t\t// basically the same as DOCUMENT_CHANGE, just only triggered\n\t\t\t// when uploading data that corresponds to current document\n\t\t\t// and if not we dont reset\n\t\t\tif (payload.newActiveDataSet) {\n\t\t\t\treturn replaceCardsInCardsState(\n\t\t\t\t\tintialState,\n\t\t\t\t\t(payload as ArchiveCards).cards,\n\t\t\t\t\t(payload as ArchiveCards).lastCardIDNumber\n\t\t\t\t);\n\t\t\t} else {\n\t\t\t\treturn state;\n\t\t\t}\n\t\tdefault:\n\t\t\treturn state;\n\t}\n};\n\nexport default cards;\n","import * as services from \"./services\";\nimport * as constants from \"./constants\";\nimport * as actionTypes from \"./actionTypes\";\nimport * as actions from \"./actions\";\nimport * as selectors from \"./selectors\";\nimport * as components from \"./components\";\nimport * as model from \"./model\";\nimport reducer from \"./reducer\";\n\nexport default { services, constants, actionTypes, actions, reducer, selectors, components, model };\n","import { NAME } from \"./constants\";\nimport { createSelector } from \"reselect\";\nimport { SelectionData } from \"./model\";\n\nexport const getAll = (state: any): SelectionData => state[NAME].present;\n\nexport const getCurrentSelectionPosition = createSelector(getAll, (state: SelectionData) => state.selectionPosition);\n\nexport const getCurrentSelectedString = createSelector(getAll, (state: SelectionData) => state.manuallySelectedString);\n\nexport const currentSelectionExists = createSelector(getCurrentSelectedString, (str) => str !== \"\");\n\nexport const getCurrentSelectedParent = createSelector(getAll, (state: SelectionData) => state.selectedParentSpan);\n\nexport const getSourceCard = createSelector(getAll, (state) => state.sourceCard);\n","import * as t from \"./actionTypes\";\nimport { CreationType } from \"../cards/model/model\";\nimport { CardOrigin, hasNonEmptyOrigin } from \"../cards/model/model-origin\";\nimport cards from \"../cards\";\nimport { getCurrentSelectedString, getSourceCard } from \"./selectors\";\nimport { Dispatch } from \"redux\";\nimport { CardField } from \"../cards/model/model-content\";\n\nexport const selectionToCardAppend = (creationType: CreationType, origin?: CardOrigin, cardID?: string) => {\n\treturn (dispatch: Function, getState: Function) => {\n\t\tconst state = getState();\n\n\t\tconst updateType = \"APPEND\";\n\t\tconst isUpdate = cardID !== undefined;\n\n\t\t// this should be from the document\n\t\tconst selectedString = getCurrentSelectedString(state);\n\n\t\tlet transformedOrigin;\n\t\tif (origin) {\n\t\t\t// we exploit that the input from the document is always just a SingleOrigin=NoteOrigin\n\t\t\t// need to transform it because we can create also QA-Cards from document\n\t\t\ttransformedOrigin = cards.services.transformInputOrigin(\n\t\t\t\torigin,\n\t\t\t\t\"note\",\n\t\t\t\tcreationType,\n\t\t\t\tisUpdate ? (cards.selectors.getCards(state)[cardID as string].origin as CardOrigin) : undefined\n\t\t\t);\n\t\t}\n\n\t\tif (isUpdate) {\n\t\t\tdispatch(\n\t\t\t\tcards.actions.updateCardContent(\n\t\t\t\t\tselectedString,\n\t\t\t\t\tcardID as string,\n\t\t\t\t\tcreationType,\n\t\t\t\t\tupdateType,\n\t\t\t\t\ttransformedOrigin as CardOrigin\n\t\t\t\t)\n\t\t\t);\n\t\t} else {\n\t\t\tdispatch(\n\t\t\t\tcards.actions.pushCardContent(selectedString, creationType, updateType, transformedOrigin as CardOrigin)\n\t\t\t);\n\t\t}\n\n\t\tdispatch(resetManuallySelectedString());\n\t};\n};\n\nexport const selectionToCard = (creationType: CreationType, origin?: CardOrigin, cardID?: string) => {\n\treturn (dispatch: Function, getState: Function) => {\n\t\tconst state = getState();\n\n\t\t//TODO-NICE: think of a way to make this intuitive\n\t\t//const updateType = type === \"Q-A\" ? \"REPLACE\" : \"APPEND\";\n\t\tconst updateType = \"REPLACE\";\n\t\tconst isUpdate = cardID !== undefined;\n\n\t\t// this should be from the document\n\t\tconst selectedString = getCurrentSelectedString(state);\n\n\t\tlet transformedOrigin;\n\t\tif (origin) {\n\t\t\t// we exploit that the input from the document is always just a SingleOrigin=NoteOrigin\n\t\t\t// need to transform it because we can create also QA-Cards from document\n\t\t\ttransformedOrigin = cards.services.transformInputOrigin(\n\t\t\t\torigin,\n\t\t\t\t\"note\",\n\t\t\t\tcreationType,\n\t\t\t\tisUpdate ? (cards.selectors.getCards(state)[cardID as string].origin as CardOrigin) : undefined\n\t\t\t);\n\t\t}\n\n\t\tif (isUpdate) {\n\t\t\tdispatch(\n\t\t\t\tcards.actions.updateCardContent(\n\t\t\t\t\tselectedString,\n\t\t\t\t\tcardID as string,\n\t\t\t\t\tcreationType,\n\t\t\t\t\tupdateType,\n\t\t\t\t\ttransformedOrigin as CardOrigin\n\t\t\t\t)\n\t\t\t);\n\t\t} else {\n\t\t\tdispatch(\n\t\t\t\tcards.actions.pushCardContent(selectedString, creationType, updateType, transformedOrigin as CardOrigin)\n\t\t\t);\n\t\t}\n\n\t\tdispatch(resetManuallySelectedString());\n\t};\n};\n\nexport const selectionToCardForSourceCard = (\n\tcreationType: CreationType,\n\tsourceField: CreationType,\n\torigin?: CardOrigin,\n\tcardID?: string\n) => {\n\treturn (dispatch: Function, getState: Function) => {\n\t\tdispatch(resetSourceCard());\n\n\t\tconst state = getState();\n\n\t\tconst updateType = \"REPLACE\";\n\t\tconst isUpdate = cardID !== undefined;\n\n\t\t//  this should be from the SourceCard in which the extract button has been clicked\n\t\t//\tthe SourceCard can or can not have an origin\n\t\tconst sourceHasNonEmptyOrigin = hasNonEmptyOrigin(origin);\n\t\tconst newOrigin = sourceHasNonEmptyOrigin\n\t\t\t? cards.services.transformInputOrigin(\n\t\t\t\t\torigin as CardOrigin,\n\t\t\t\t\tsourceField,\n\t\t\t\t\tcreationType,\n\t\t\t\t\tisUpdate ? (cards.selectors.getCards(state)[cardID as string].origin as CardOrigin) : undefined\n\t\t\t  )\n\t\t\t: undefined;\n\t\tconst selectedString = getCurrentSelectedString(state);\n\n\t\t//TODO-NICE: untangle the types so that the as CardOrigin is not necessary in the dispatch,\n\t\t//maybe merge content and origin to avoid two object hierarchies?\n\t\tif (isUpdate) {\n\t\t\tdispatch(\n\t\t\t\tcards.actions.updateCardContent(\n\t\t\t\t\tselectedString,\n\t\t\t\t\tcardID as string,\n\t\t\t\t\tcreationType,\n\t\t\t\t\tupdateType,\n\t\t\t\t\tnewOrigin as CardOrigin\n\t\t\t\t)\n\t\t\t);\n\t\t} else {\n\t\t\tdispatch(cards.actions.pushCardContent(selectedString, creationType, updateType, newOrigin as CardOrigin));\n\t\t}\n\n\t\tdispatch(resetManuallySelectedString());\n\t};\n};\n\nexport const updateManuallySelectedString = (str: string) => {\n\treturn { type: t.SELECTED_STRING, payload: str };\n};\n\nexport const resetManuallySelectedString = () => {\n\treturn updateManuallySelectedString(\"\");\n};\n\nexport const selectedParent = (span: null | HTMLSpanElement) => {\n\treturn { type: t.SELECTED_PARENT, payload: span };\n};\n\nexport const updateSelectionPosition = (x: number, y: number) => {\n\treturn { type: t.DOCUMENT_POSITION, payload: { x, y } };\n};\n\nexport const setSourceCard = (sourceField: CardField, origin?: CardOrigin) => {\n\treturn { type: t.SOURCE_CARD, payload: { origin, sourceField } };\n};\n\nexport const trySetSourceCard = (sourceField: CardField, origin?: CardOrigin) => {\n\treturn (dispatch: Dispatch, getState: Function) => {\n\t\tconst sourceCard = getSourceCard(getState());\n\t\tif (!sourceCard || sourceCard.sourceField !== sourceField || sourceCard.origin !== origin)\n\t\t\tdispatch(setSourceCard(sourceField, origin));\n\t};\n};\n\nexport const resetSourceCard = () => {\n\treturn { type: t.SOURCE_CARD, payload: null };\n};\n\nexport const tryResetSourceCard = () => {\n\treturn (dispatch: Dispatch, getState: Function) => {\n\t\tconst sourceCardExits = getSourceCard(getState()) !== null;\n\t\tif (sourceCardExits) dispatch(resetSourceCard());\n\t};\n};\n","import * as t from \"./actionTypes\";\nimport { SelectionData } from \"./model\";\n\nconst initialState: SelectionData = {\n\tmanuallySelectedString: \"\",\n\tselectedParentSpan: null,\n\tselectionPosition: { x: 0, y: 0 },\n\tsourceCard: null,\n};\n\nconst selectionData = (state = initialState, { type, payload }: { type: string; payload: any }): SelectionData => {\n\tswitch (type) {\n\t\tcase t.SELECTED_STRING:\n\t\t\treturn { ...state, manuallySelectedString: payload as string };\n\t\tcase t.SELECTED_PARENT:\n\t\t\t// we toggle between sourceCard and selectedParentSpan because they cant co-exist\n\n\t\t\treturn { ...state, sourceCard: null, selectedParentSpan: payload };\n\t\tcase t.DOCUMENT_POSITION:\n\t\t\treturn { ...state, selectionPosition: payload };\n\t\tcase t.SOURCE_CARD:\n\t\t\treturn { ...state, sourceCard: payload, selectedParentSpan: null };\n\t\tdefault:\n\t\t\treturn state;\n\t}\n};\n\nexport default selectionData;\n","import React, { useState, Fragment } from \"react\";\nimport { Snackbar, IconButton } from \"@material-ui/core\";\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { resetManuallySelectedString } from \"../actions\";\nimport { getCurrentSelectedString } from \"../selectors\";\n\nexport const SelectionSnackbar = () => {\n\tconst [open, setOpen] = useState(false);\n\tconst dispatch = useDispatch();\n\tconst selectedString = useSelector(getCurrentSelectedString);\n\n\tif (selectedString === \"\" && open) setOpen(false);\n\n\tif (selectedString !== \"\" && !open) setOpen(true);\n\n\tconst handleClose = (event: any, reason: string) => {\n\t\tif (reason === \"clickaway\") {\n\t\t\t// do not close on clickaway\n\t\t\tevent.preventDefault();\n\t\t} else {\n\t\t\tsetOpen(false);\n\t\t\tdispatch(resetManuallySelectedString());\n\t\t}\n\t};\n\n\tconst handleDismiss = () => {\n\t\tsetOpen(false);\n\t\tdispatch(resetManuallySelectedString());\n\t};\n\n\tconst message = (\n\t\t<Fragment>\n\t\t\t<div>{\"Current Selection: \"}</div>\n\t\t\t<div style={{ color: \"green\" }}> {selectedString}</div>\n\t\t</Fragment>\n\t);\n\n\treturn (\n\t\t<Snackbar\n\t\t\tanchorOrigin={{ vertical: \"top\", horizontal: \"center\" }}\n\t\t\topen={open}\n\t\t\tonClose={handleClose}\n\t\t\tmessage={message}\n\t\t\taction={\n\t\t\t\t<IconButton size=\"small\" aria-label=\"close\" color=\"inherit\" onClick={handleDismiss}>\n\t\t\t\t\t<CloseIcon fontSize=\"small\" />\n\t\t\t\t</IconButton>\n\t\t\t}\n\t\t/>\n\t);\n};\n","export function getSelection() {\n\tconst selection = window.getSelection();\n\n\tif (!selection) return null;\n\n\ttry {\n\t\tvar activeElement = document.activeElement;\n\t\tif (activeElement && (activeElement as HTMLInputElement).value) {\n\t\t\t// firefox bug https://bugzilla.mozilla.org/show_bug.cgi?id=85686\n\t\t\tconst str = (activeElement as HTMLInputElement).value.substring(\n\t\t\t\t(activeElement as HTMLInputElement).selectionStart as number,\n\t\t\t\t(activeElement as HTMLInputElement).selectionEnd as number\n\t\t\t);\n\n\t\t\tif (str === \"\") return null;\n\n\t\t\treturn { text: str, selection };\n\t\t} else {\n\t\t\treturn { text: selection.toString(), selection };\n\t\t}\n\t} catch (e) {\n\t\treturn null;\n\t}\n}\n","import * as actions from \"./actions\";\nimport * as constants from \"./constants\";\nimport * as actionTypes from \"./actionTypes\";\nimport reducer from \"./reducer\";\nimport * as selectors from \"./selectors\";\nimport * as components from \"./components\";\nimport * as services from \"./services\";\n\nexport default { actions, actionTypes, constants, components, reducer, selectors, services };\n","import { createSelector } from \"reselect\";\nimport { DisplayData, MaterialData, MaterialGroupData } from \"./model\";\nimport { NAME } from \"./constants\";\nimport selection from \"../selection\";\nimport { SingleOrigin } from \"../cards/model/model-origin\";\n\nexport const getAll = (state: any): DisplayData => state[NAME];\n\nexport const getPDF = createSelector(getAll, (state: DisplayData) => {\n\treturn { pdf: state.pdf ? state.pdf : null };\n});\n\nexport const getPDFName = createSelector(getAll, (state) => state.pdfName);\n\nexport const getRenderCritialData = createSelector(getAll, (state: DisplayData) => {\n\treturn {\n\t\tpdf: state.pdf,\n\t\tcurrentPage: state.currentPage,\n\t\tdocumentRef: state.documentRef,\n\t};\n});\n\nexport const getTotalPages = createSelector(getAll, (state: DisplayData) => state.totalPages);\n\nexport const getCurrentPage = createSelector(getAll, (state: DisplayData) => state.currentPage);\n\nexport const getPageControlData = createSelector(getTotalPages, getCurrentPage, (totalPages, currentPage) => {\n\treturn { currentPage, totalPages };\n});\n\nexport const getDocumentRef = createSelector(getAll, (state: DisplayData) => state.documentRef);\n\nexport const getMaterialData = createSelector(getAll, (state: DisplayData) => state.materialData);\n\nexport const getTimeStamp = createSelector(getMaterialData, (state: MaterialData) => state.materialDataTimeStamp);\n\nexport const getMaterialSpans = createSelector(\n\tgetMaterialData as (state: any) => MaterialGroupData,\n\t(state: MaterialGroupData) => state.materialSpans\n);\n\nexport const getSpanIndex = (state: any, span: HTMLSpanElement) => {\n\tconst spans = getMaterialSpans(state);\n\treturn spans.indexOf(span);\n};\n\nexport const getMaterialBoundingRects = createSelector(\n\tgetMaterialData as (state: any) => MaterialGroupData,\n\t(state: MaterialGroupData) => state.materialBoundingRects\n);\n\nexport const getDataExists = createSelector(getTimeStamp, (timestamp) => timestamp > 0);\n\nexport const getDisplayStatus = createSelector(getAll, (state: DisplayData) => state.displayStatus);\n\nexport const displayStatusIsShow = createSelector(getDisplayStatus, (status) => status === \"SHOW\");\n\nexport const getZoomQueue = createSelector(getAll, (state: DisplayData) => state.zoomQueue);\n\nexport const getMaterialHeight = createSelector(getAll, (state: DisplayData) => state.materialHeight);\n\nexport const getCurrentOrigin = createSelector(\n\t(state: any) => state,\n\tgetCurrentPage,\n\tselection.selectors.getCurrentSelectedParent,\n\t(state, currentPage, selectedParent): SingleOrigin => {\n\t\treturn {\n\t\t\tspanIndex: getSpanIndex(state, selectedParent as HTMLSpanElement),\n\t\t\tpage: currentPage,\n\t\t};\n\t}\n);\n","import { KeyboardEvent } from \"react\";\n\nexport const incrementer = () => {\n\tlet counter = 0;\n\treturn () => {\n\t\tconst curCounter = counter;\n\t\tcounter++;\n\t\treturn curCounter;\n\t};\n};\n\nexport type KeyActionMap = { [key: string]: any };\n\ntype KeyEventDispatcher = (event: KeyboardEvent<Element>, dispatch: any, state?: any) => void;\n\nexport const keyEventDispatcherCreator = (keyMap: KeyActionMap): KeyEventDispatcher => (\n\tevent: KeyboardEvent,\n\tdispatch: any\n) => {\n\tconst action = keyMap[event.key];\n\tif (action) {\n\t\tevent.preventDefault();\n\t\tdispatch(action);\n\t}\n};\n\nexport function partition(array: Array<any>, filter: (val: any) => boolean) {\n\tlet pass: any[] = [],\n\t\tfail: any[] = [];\n\tarray.forEach((e) => (filter(e) ? pass : fail).push(e));\n\treturn [pass, fail];\n}\n","export const splitExpandedSpans = (expandedSpans: ExpandedSpan[]) => {\n\tconst spans = [];\n\tconst boundingRects = [];\n\n\tfor (const exSpan of expandedSpans) {\n\t\tspans.push(exSpan.span);\n\t\tboundingRects.push(exSpan.rect);\n\t}\n\n\treturn { spans, boundingRects };\n};\n\nexport const sortExpandedSpansAccordingToX = (expandedSpans: ExpandedSpan[]) =>\n\texpandedSpans.sort((exSpan, exSpan2) => exSpan.rect.x - exSpan2.rect.x);\n\nexport const sortExpandedSpansAccordingToY = (expandedSpans: ExpandedSpan[]) =>\n\texpandedSpans.sort((exSpan, exSpan2) => exSpan.rect.y - exSpan2.rect.y);\n\ntype ExpandedSpan = { span: HTMLSpanElement; rect: DOMRect };\n\nexport const expandSpans = (spans: HTMLSpanElement[]) => spans.map(expandSpan);\n\nconst expandSpan = (span: HTMLSpanElement): ExpandedSpan => {\n\treturn { span, rect: span.getBoundingClientRect() };\n};\n","import { MaterialGroupData } from \"../model\";\nimport { expandSpans, sortExpandedSpansAccordingToY, splitExpandedSpans } from \"./span\";\n\nexport const materialData = (container: HTMLDivElement): MaterialGroupData | null => {\n\t// assumes all spans inside the document are relevant (potentially multiple pages)\n\tconst startingSpans = Array.from(container.querySelectorAll(\"span\"));\n\tif (startingSpans.length === 0) return null;\n\n\tconst { spans, boundingRects } = splitExpandedSpans(sortExpandedSpansAccordingToY(expandSpans(startingSpans)));\n\n\treturn {\n\t\tmaterialSpans: spans,\n\t\tmaterialBoundingRects: boundingRects,\n\t};\n};\n","import { ChangeEvent, RefObject } from \"react\";\nimport { Dispatch } from \"redux\";\nimport * as t from \"./actionTypes\";\nimport { PageMove, MaterialData } from \"./model\";\nimport {\n\tgetPageControlData,\n\tgetDisplayStatus,\n\tgetZoomQueue,\n\tgetTimeStamp,\n\tgetMaterialSpans,\n\tgetPDFName,\n} from \"./selectors\";\nimport { incrementer, keyEventDispatcherCreator, KeyActionMap } from \"../../shared/utils\";\nimport { materialData } from \"./services/materialData\";\nimport db from \"../db\";\nimport { ActionCreators } from \"redux-undo\";\n\nexport const pdfUpload = (pdf: File) => {\n\treturn { type: t.PDF_UPLOADED, payload: pdf };\n};\n\nexport const materialUploaded = (event: ChangeEvent<HTMLInputElement>) => {\n\treturn (dispatch: Dispatch) => {\n\t\tconst files = event.target.files;\n\t\tconst pdf = files ? files[0] : null;\n\t\tif (pdf) dispatch(pdfUpload(pdf));\n\t};\n};\n\nexport const materialLoaded = (totalPages: number) => {\n\treturn { type: t.MATERIAL_LOADED, payload: totalPages };\n};\n\nexport const tryInterval = (tries: number, ms: number, func: () => boolean) => {\n\tconst increment = incrementer();\n\tconst timeout = setInterval(() => {\n\t\tif (increment() > tries) {\n\t\t\tclearInterval(timeout);\n\t\t\treturn;\n\t\t}\n\n\t\tif (func()) clearInterval(timeout);\n\t}, ms);\n};\n\n// text-layer is not really guaranteed to be rendered on render \"success\",\n// so we use this ugly \"try ten times\" approach\nexport function captureMaterialData(documentRef: RefObject<any>) {\n\treturn (dispatch: any, getState: Function) => {\n\t\tconst state = getState();\n\t\tconst container = documentRef.current;\n\t\tif (container) {\n\t\t\t// TODO-NICE: still possibility of race-condition,\n\n\t\t\tconst startTime = Date.now();\n\n\t\t\t// try once before going into intervals (most times once should work)\n\t\t\tconst curMaterialGroupData = materialData(container as HTMLDivElement);\n\t\t\tif (curMaterialGroupData && getTimeStamp(state) < startTime) {\n\t\t\t\tconst payload: MaterialData = {\n\t\t\t\t\t...curMaterialGroupData,\n\t\t\t\t\tmaterialDataTimeStamp: startTime,\n\t\t\t\t};\n\t\t\t\tdispatch({ type: t.MATERIAL_DATA, payload });\n\t\t\t} else {\n\t\t\t\ttryInterval(10, 20, () => {\n\t\t\t\t\tconst curMaterialGroupData = materialData(container as HTMLDivElement);\n\t\t\t\t\tif (curMaterialGroupData && getTimeStamp(getState()) < startTime) {\n\t\t\t\t\t\tconst payload: MaterialData = {\n\t\t\t\t\t\t\t...curMaterialGroupData,\n\t\t\t\t\t\t\tmaterialDataTimeStamp: startTime,\n\t\t\t\t\t\t};\n\t\t\t\t\t\tdispatch({ type: t.MATERIAL_DATA, payload });\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t}\n\t\t\t\t\treturn false;\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t};\n}\n\n// assumes outside validation/correction\nexport const setPage = (page: number) => {\n\treturn { type: t.PAGE_UPDATE, payload: page };\n};\n\nconst pageCorrections = {\n\tADD: (newPage: number, totalPages: number) => (newPage === totalPages + 1 ? 1 : newPage),\n\tREMOVE: (newPage: number, totalPages: number) => (newPage === 0 ? totalPages : newPage),\n};\n\n//TODO-PERF: maybe hide all rendered pages but not shown instead of re-rendering for faster switching?\nexport const movePage = (type: PageMove) => {\n\treturn (dispatch: Dispatch, getState: Function) => {\n\t\tconst { currentPage, totalPages } = getPageControlData(getState());\n\t\tswitch (type) {\n\t\t\tcase \"NEXT\":\n\t\t\t\tdispatch({ type: t.PAGE_UPDATE, payload: pageCorrections[\"ADD\"](currentPage + 1, totalPages) });\n\t\t\t\tbreak;\n\t\t\tcase \"PREVIOUS\":\n\t\t\t\tdispatch({ type: t.PAGE_UPDATE, payload: pageCorrections[\"REMOVE\"](currentPage - 1, totalPages) });\n\t\t\t\tbreak;\n\t\t}\n\t};\n};\nexport const nextPage = () => movePage(\"NEXT\");\nexport const previousPage = () => movePage(\"PREVIOUS\");\n\nconst pageControlKeyMap: KeyActionMap = {\n\tArrowLeft: previousPage(),\n\tArrowRight: nextPage(),\n};\n\nexport const pageControlDispatcher = keyEventDispatcherCreator(pageControlKeyMap);\n\nexport const toggleDisplayState = () => {\n\treturn (dispatch: Dispatch, getState: Function) => {\n\t\tconst displayState = getDisplayStatus(getState()) === \"SHOW\" ? \"HIDE\" : \"SHOW\";\n\n\t\tdispatch({ type: t.DISPLAY_STATUS, payload: displayState });\n\t};\n};\n\nexport const setZoomQueue = (spanIndex: number | null) => {\n\treturn { type: t.ZOOM_QUEUE, payload: spanIndex };\n};\n\nexport const zoomToCardOrigin = (spanIndex: number, page: number) => {\n\treturn (dispatch: Dispatch) => {\n\t\tconsole.log(page, spanIndex);\n\t\tdispatch(setPage(page));\n\t\tdispatch(setZoomQueue(spanIndex));\n\t};\n};\n\nexport const emptyZoomQueue = () => {\n\treturn (dispatch: Dispatch, getState: Function) => {\n\t\tconst state = getState();\n\t\tconst spanIndex = getZoomQueue(state);\n\t\tif (!!spanIndex) {\n\t\t\tconst materialSpans = getMaterialSpans(state);\n\t\t\tif (materialSpans) {\n\t\t\t\t// this way when no pdf was present we prevent the race-condition of pdf being loaded later\n\t\t\t\tconst originSpan = materialSpans[spanIndex];\n\t\t\t\toriginSpan.scrollIntoView({ behavior: \"smooth\", block: \"center\", inline: \"center\" });\n\t\t\t}\n\t\t\tdispatch(setZoomQueue(null));\n\t\t}\n\t};\n};\n\nexport const setMaterialHeight = (height: number) => {\n\treturn { type: t.MATERIAL_HEIGHT, payload: height };\n};\n\nexport const deleteDocument = (document: string) => {\n\treturn (dispatch: Dispatch, getState: Function) => {\n\t\tconst state = getState();\n\t\tconst activeDocument = getPDFName(state);\n\t\tif (activeDocument && activeDocument === document) {\n\t\t\t// reset data\n\t\t\tdispatch({ type: db.actionTypes.DOCUMENT_CHANGE });\n\n\t\t\t// keeping the undo history leads to weird edge cases and makes no sense\n\t\t\tdispatch(ActionCreators.clearHistory());\n\t\t}\n\n\t\t// note: no undo of this\n\t\tdispatch(db.actions.deleteDocumentDataSet(document));\n\t};\n};\n","import React from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { IconButton, Card, Grid, Divider, Tooltip } from \"@material-ui/core\";\nimport ArrowForwardIosIcon from \"@material-ui/icons/ArrowForwardIos\";\nimport ArrowBackIosIcon from \"@material-ui/icons/ArrowBackIos\";\nimport { nextPage, previousPage } from \"../actions\";\nimport text from \"../../text\";\n\nconst PreviousButton = () => {\n\tconst dispatch = useDispatch();\n\treturn (\n\t\t<Tooltip\n\t\t\ttitle={text.constants.previousPageTooltip}\n\t\t\tenterDelay={text.constants.defaultEnterDelay}\n\t\t\tenterNextDelay={text.constants.defaultEnterNextDelay}\n\t\t>\n\t\t\t<IconButton\n\t\t\t\ttype=\"button\"\n\t\t\t\tonClick={() => {\n\t\t\t\t\tdispatch(previousPage());\n\t\t\t\t}}\n\t\t\t>\n\t\t\t\t<ArrowBackIosIcon></ArrowBackIosIcon>\n\t\t\t</IconButton>\n\t\t</Tooltip>\n\t);\n};\n\nconst NextButton = () => {\n\tconst dispatch = useDispatch();\n\treturn (\n\t\t<Tooltip\n\t\t\ttitle={text.constants.nextPageTooltip}\n\t\t\tenterDelay={text.constants.defaultEnterDelay}\n\t\t\tenterNextDelay={text.constants.defaultEnterNextDelay}\n\t\t>\n\t\t\t<IconButton\n\t\t\t\ttype=\"button\"\n\t\t\t\tonClick={() => {\n\t\t\t\t\tdispatch(nextPage());\n\t\t\t\t}}\n\t\t\t>\n\t\t\t\t<ArrowForwardIosIcon></ArrowForwardIosIcon>\n\t\t\t</IconButton>\n\t\t</Tooltip>\n\t);\n};\n\nexport const PageNavigation = () => {\n\treturn (\n\t\t<Card variant=\"outlined\">\n\t\t\t<Grid container direction=\"row\">\n\t\t\t\t<Grid item>\n\t\t\t\t\t<PreviousButton></PreviousButton>\n\t\t\t\t</Grid>\n\t\t\t\t<Grid item>\n\t\t\t\t\t<Divider orientation=\"vertical\"></Divider>\n\t\t\t\t</Grid>\n\t\t\t\t<Grid item>\n\t\t\t\t\t<NextButton></NextButton>\n\t\t\t\t</Grid>\n\t\t\t</Grid>\n\t\t</Card>\n\t);\n};\n","import React, { useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Typography, TextField, Card, Grid } from \"@material-ui/core\";\nimport { setPage } from \"../../actions\";\nimport { getPageControlData } from \"../../selectors\";\n\nconst nonDigitRegEx = /(\\D)/;\n\nexport const validatePageChoice = (possiblePage: string, totalPages: number) => {\n\tif (possiblePage === \"\" || possiblePage.trim().match(nonDigitRegEx) !== null) return false;\n\n\tconst asInt = parseInt(possiblePage);\n\tif (asInt < 1 || totalPages < asInt) return false;\n\n\treturn true;\n};\n\nexport const PageChooser = () => {\n\tconst dispatch = useDispatch();\n\tconst { currentPage, totalPages } = useSelector(getPageControlData);\n\n\tconst [state, setState] = useState({\n\t\terror: false,\n\t\tvalue: currentPage?.toString(),\n\t\tuserInput: currentPage?.toString(),\n\t});\n\n\t// with this we can trigger a re-render onChange,\n\t// while making sure that if a new currentPage arrives, we reset the component\n\tif (state.value !== currentPage.toString()) {\n\t\tsetState({ error: false, value: currentPage.toString(), userInput: currentPage.toString() });\n\t}\n\n\treturn (\n\t\t<Card variant=\"outlined\">\n\t\t\t<Grid item>\n\t\t\t\t<Grid container direction=\"row\" alignItems=\"center\" justify=\"space-between\">\n\t\t\t\t\t<Grid item style={{ width: \"37%\" }}>\n\t\t\t\t\t\t<TextField\n\t\t\t\t\t\t\tinputProps={{\n\t\t\t\t\t\t\t\tstyle: {\n\t\t\t\t\t\t\t\t\tpadding: \"0px\",\n\t\t\t\t\t\t\t\t\t//h6 Typography style\n\t\t\t\t\t\t\t\t\tfontSize: \"1.25rem\",\n\t\t\t\t\t\t\t\t\tfontFamily: '\"Roboto\", \"Helvetica\", \"Arial\", sansSerif',\n\t\t\t\t\t\t\t\t\tfontWeight: 500,\n\t\t\t\t\t\t\t\t\tlineHeight: 1.6,\n\t\t\t\t\t\t\t\t\tletterSpacing: \"0.0075em\",\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\tvariant=\"filled\"\n\t\t\t\t\t\t\tvalue={state.userInput}\n\t\t\t\t\t\t\tonKeyDown={(event) => {\n\t\t\t\t\t\t\t\tif (event.key === \"Enter\") {\n\t\t\t\t\t\t\t\t\tevent.preventDefault();\n\t\t\t\t\t\t\t\t\tconst submittedValue = (event.target as HTMLFormElement).value;\n\t\t\t\t\t\t\t\t\tif (!state.error) {\n\t\t\t\t\t\t\t\t\t\tdispatch(setPage(parseInt(submittedValue)));\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\tonChange={(event) => {\n\t\t\t\t\t\t\t\tconst submittedValue = (event.target as HTMLTextAreaElement).value;\n\t\t\t\t\t\t\t\tif (validatePageChoice(submittedValue, totalPages as number)) {\n\t\t\t\t\t\t\t\t\tsetState({ ...state, error: false, userInput: submittedValue });\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\tsetState({ ...state, error: true, userInput: submittedValue });\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\terror={state.error}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</Grid>\n\n\t\t\t\t\t<Grid item style={{ width: \"61%\" }}>\n\t\t\t\t\t\t<Typography variant=\"h6\">of {totalPages}</Typography>\n\t\t\t\t\t</Grid>\n\t\t\t\t</Grid>\n\t\t\t</Grid>\n\t\t</Card>\n\t);\n};\n","import { ReactNode, KeyboardEvent, useRef, MutableRefObject } from \"react\";\nimport { pageControlDispatcher } from \"../../actions\";\nimport React from \"react\";\nimport { useDispatch } from \"react-redux\";\n\n// note to self: prefer to expose components and not implementation details (actions etc.)\n\nexport const PageKeyboardControl = ({ children }: { children: ReactNode }) => {\n\tconst dispatch = useDispatch();\n\tconst ref: MutableRefObject<null | HTMLInputElement> = useRef(null);\n\n\treturn (\n\t\t<span\n\t\t\tref={ref}\n\t\t\tonKeyDown={(event: KeyboardEvent<HTMLSpanElement>) => {\n\t\t\t\tpageControlDispatcher(event, dispatch);\n\t\t\t}}\n\t\t\ttabIndex={0}\n\t\t>\n\t\t\t{children}\n\t\t</span>\n\t);\n};\n","import \"./PDFDocument.css\";\nimport \"./AnnotationLayer.css\";\nimport React, { RefObject, useEffect } from \"react\";\nimport { pdfjs, Document, Page } from \"react-pdf\";\nimport { connect, useDispatch, useSelector } from \"react-redux\";\nimport { materialLoaded, setPage, captureMaterialData, emptyZoomQueue } from \"../../actions\";\nimport { getRenderCritialData, getZoomQueue } from \"../../selectors\";\nimport text from \"../../../text\";\nimport cards from \"../../../cards\";\nimport selection from \"../../../selection\";\nimport { PageKeyboardControl } from \"./PageKeyboardControl\";\npdfjs.GlobalWorkerOptions.workerSrc = `//cdnjs.cloudflare.com/ajax/libs/pdf.js/${pdfjs.version}/pdf.worker.js`;\n\n//TODO-NICE: implent more pdf-reader functionality, like zoom\n\nfunction removeTextLayerOffset() {\n\tconst textLayers = document.querySelectorAll(\".react-pdf__Page__textContent\");\n\ttextLayers.forEach((layer) => {\n\t\tconst { style }: any = layer;\n\t\tstyle.top = \"0\";\n\t\tstyle.left = \"0\";\n\t\tstyle.transform = \"\";\n\t});\n}\n\nconst options = {\n\tcMapUrl: \"cmaps/\",\n\tcMapPacked: true,\n};\n\nfunction PDFDocument({\n\tparentSize,\n\tpdf,\n\tcurrentPage,\n\tmaterialLoaded,\n\tcaptureMaterialData,\n\tdocumentRef,\n}: {\n\tparentSize: any;\n\tpdf: File | undefined;\n\tcurrentPage: number;\n\tmaterialLoaded: (numPages: number) => void;\n\tcaptureMaterialData: Function;\n\tdocumentRef: RefObject<any>;\n}) {\n\tconst dispatch = useDispatch();\n\n\t//TODO-NICE: this is not a queue...\n\tconst zoomQueue = useSelector(getZoomQueue);\n\n\tuseEffect(() => {\n\t\tif (!!zoomQueue && pdf) {\n\t\t\tdispatch(emptyZoomQueue());\n\t\t}\n\t}, [zoomQueue, pdf, dispatch]);\n\n\treturn (\n\t\t<span\n\t\t\tonMouseUp={() => {\n\t\t\t\tif (pdf) dispatch(mouseUpDocument());\n\t\t\t}}\n\t\t>\n\t\t\t<PageKeyboardControl>\n\t\t\t\t<Document\n\t\t\t\t\tfile={pdf}\n\t\t\t\t\toptions={options}\n\t\t\t\t\tonLoadSuccess={({ numPages }) => {\n\t\t\t\t\t\tmaterialLoaded(numPages);\n\t\t\t\t\t}}\n\t\t\t\t\tinputRef={documentRef}\n\t\t\t\t\tonItemClick={({ pageNumber }) => {\n\t\t\t\t\t\tdispatch(setPage(parseInt(pageNumber)));\n\t\t\t\t\t}}\n\t\t\t\t\tloading={text.constants.loadingMaterialText}\n\t\t\t\t\tnoData={text.constants.noMaterialText}\n\t\t\t\t\trenderMode=\"canvas\"\n\t\t\t\t>\n\t\t\t\t\t{pdf && (\n\t\t\t\t\t\t<Page\n\t\t\t\t\t\t\twidth={parentSize.width}\n\t\t\t\t\t\t\tpageNumber={currentPage}\n\t\t\t\t\t\t\tonRenderSuccess={() => {\n\t\t\t\t\t\t\t\tremoveTextLayerOffset();\n\t\t\t\t\t\t\t\tcaptureMaterialData(documentRef);\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t/>\n\t\t\t\t\t)}\n\t\t\t\t</Document>\n\t\t\t</PageKeyboardControl>\n\t\t</span>\n\t);\n}\n\nexport const PDFDocumentContainer = connect(getRenderCritialData, {\n\tmaterialLoaded,\n\tcaptureMaterialData,\n})(PDFDocument);\n\nconst mouseUpDocument = () => {\n\treturn (dispatch: any, getState: Function) => {\n\t\tconst selectionData = selection.services.getSelection();\n\n\t\tif (selectionData) {\n\t\t\tconst selectedStr = selectionData.text;\n\t\t\tconst selectionObject = selectionData.selection;\n\n\t\t\tconst state = getState();\n\n\t\t\t// check if we activated a Grab-button\n\t\t\tconst goalCard = cards.selectors.getGoalCard(state);\n\n\t\t\tif (goalCard) {\n\t\t\t\t// this is the dispatch for the grab for field button\n\t\t\t\t//(which has been pressed before the mouse-up if goalCard is not null), here we actually update the goal card\n\n\t\t\t\t//TODO-NICE: allow grabbing from other cards\n\t\t\t\t// for now we dont allow grabbing from other cards to simplifiy the card->card workflow\n\n\t\t\t\tdispatch(\n\t\t\t\t\tcards.actions.updateCardContent(\n\t\t\t\t\t\tselectedStr,\n\t\t\t\t\t\tgoalCard.cardID,\n\t\t\t\t\t\tgoalCard.creationType,\n\t\t\t\t\t\t\"REPLACE\",\n\t\t\t\t\t\tgoalCard.origin\n\t\t\t\t\t)\n\t\t\t\t);\n\t\t\t} else {\n\t\t\t\tdispatch(selection.actions.selectedParent(selectionObject.anchorNode?.parentNode as HTMLSpanElement));\n\t\t\t\tdispatch(selection.actions.updateManuallySelectedString(selectedStr));\n\t\t\t}\n\t\t}\n\t};\n};\n","import React from \"react\";\nimport { Page } from \"react-pdf\";\n\nexport const PDFPageRenderer = ({\n\tindex,\n\tdata,\n\tstyle,\n}: {\n\tindex: number;\n\tdata: {\n\t\tscale: number;\n\t\tnumPages: number;\n\t\ttriggerResize: Function;\n\t\tpages: WeakMap<any, any>;\n\t\tpageNumbers: WeakMap<any, any>;\n\t};\n\tstyle: any;\n}) => {\n\tconst { scale, numPages, triggerResize } = data;\n\tconst pageNumber = index + 1;\n\n\treturn (\n\t\t<div {...{ style }}>\n\t\t\t<div\n\t\t\t\tref={(ref) => {\n\t\t\t\t\tconst { pages, pageNumbers } = data;\n\t\t\t\t\tif (!pageNumbers.has(pageNumber)) {\n\t\t\t\t\t\tconst key = { pageNumber };\n\t\t\t\t\t\tpageNumbers.set(pageNumber, key);\n\t\t\t\t\t}\n\t\t\t\t\tpages.set(pageNumbers.get(pageNumber), ref);\n\t\t\t\t}}\n\t\t\t>\n\t\t\t\t<Page\n\t\t\t\t\t{...{ pageNumber }}\n\t\t\t\t\t{...{ scale }}\n\t\t\t\t\trenderAnnotationLayer={false}\n\t\t\t\t\tonLoadError={(error) => console.error(error) /* eslint-disable-line no-console */}\n\t\t\t\t\tonLoadSuccess={(page) => {\n\t\t\t\t\t\t// This is necessary to ensure the row heights of\n\t\t\t\t\t\t// the variable list are correctly initialised.\n\t\t\t\t\t\tif (page.pageNumber === numPages) {\n\t\t\t\t\t\t\ttriggerResize();\n\t\t\t\t\t\t}\n\t\t\t\t\t}}\n\t\t\t\t/>\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n","import React, { PureComponent, createRef } from \"react\";\nimport { VariableSizeList } from \"react-window\";\nimport { debounce } from \"throttle-debounce\";\nimport { PDFPageRenderer } from \"./PDFPageRenderer\";\nimport { pdfjs, Document } from \"react-pdf\";\npdfjs.GlobalWorkerOptions.workerSrc = `//cdnjs.cloudflare.com/ajax/libs/pdf.js/${pdfjs.version}/pdf.worker.js`;\n\n//TODO-RC: https://react-window.now.sh/#/examples/list/fixed-size\n\nconst Loader = () => {\n\treturn (\n\t\t<div className=\"loader\">\n\t\t\t<div className=\"loader-invert line-scale\">\n\t\t\t\t<div></div>\n\t\t\t\t<div></div>\n\t\t\t\t<div></div>\n\t\t\t\t<div></div>\n\t\t\t\t<div></div>\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n\nexport class PDFViewer extends PureComponent<any, any, any> {\n\t// static propTypes = {\n\t// \tscale: PropTypes.number.isRequired,\n\t// };\n\n\tstatic defaultProps = {\n\t\tscale: 1.2,\n\t};\n\n\tprops: any;\n\tstate: any;\n\n\tprivate _callOrientationChangeHandler: any;\n\tprivate _callResizeHandler: any;\n\tprivate _list: React.RefObject<any>;\n\tprivate _mounted: boolean = false;\n\n\tconstructor(props: { pdfFile: any }) {\n\t\tsuper({ ...props, scale: 1.2 });\n\n\t\tthis.state = {\n\t\t\tinitialContainerHeight: null,\n\t\t\tcontainerHeight: null,\n\t\t\tpdf: null,\n\t\t\tcurrentPage: 1,\n\t\t\tcachedPageDimensions: null,\n\t\t\tresponsiveScale: 1,\n\t\t\tpageNumbers: new Map(),\n\t\t\tpages: new WeakMap(),\n\t\t};\n\n\t\tthis._list = createRef();\n\n\t\tthis._callResizeHandler = debounce(50, this.handleResize.bind(this));\n\t\tthis._callOrientationChangeHandler = debounce(1000, this.handleResize.bind(this));\n\t}\n\n\tcomponentDidMount() {\n\t\tconsole.log(\"mounting\");\n\t\tthis._mounted = true;\n\t\twindow.addEventListener(\"resize\", this._callResizeHandler);\n\t\twindow.addEventListener(\"orientationchange\", this._callOrientationChangeHandler);\n\t}\n\n\tcomponentWillUnmount() {\n\t\tthis._mounted = false;\n\t\twindow.removeEventListener(\"resize\", this._callResizeHandler);\n\t\twindow.removeEventListener(\"orientationchange\", this._callOrientationChangeHandler);\n\t}\n\n\t/**\n\t * Load all pages so we can cache all page dimensions.\n\t *\n\t * @param {Object} pdf\n\t * @returns {void}\n\t */\n\tcachePageDimensions(pdf: any) {\n\t\tconst promises = Array.from({ length: pdf.numPages }, (v, i) => i + 1).map((pageNumber) => pdf.getPage(pageNumber));\n\n\t\tlet height = 0;\n\n\t\t// Assuming all pages may have different heights. Otherwise we can just\n\t\t// load the first page and use its height for determining all the row\n\t\t// heights.\n\t\tPromise.all(promises).then((pages) => {\n\t\t\tif (!this._mounted) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst pageDimensions = new Map();\n\t\t\tfor (const page of pages) {\n\t\t\t\tconst w = page.view[2] * this.props.scale;\n\t\t\t\tconst h = page.view[3] * this.props.scale;\n\n\t\t\t\tconsole.log(this.props.scale, page, [w, h]);\n\n\t\t\t\tpageDimensions.set(page._pageIndex + 1, [w, h]);\n\t\t\t\theight += h;\n\t\t\t}\n\n\t\t\tconsole.log(pages, pageDimensions);\n\n\t\t\tthis.setState({\n\t\t\t\tcachedPageDimensions: pageDimensions,\n\t\t\t\tinitialContainerHeight: height,\n\t\t\t\tcontainerHeight: height,\n\t\t\t});\n\t\t});\n\t}\n\n\trecomputeRowHeights() {\n\t\tthis._list.current.resetAfterIndex(0);\n\t}\n\n\tcomputeRowHeight(index: number) {\n\t\tconst { cachedPageDimensions, responsiveScale } = this.state;\n\t\tif (cachedPageDimensions && responsiveScale) {\n\t\t\treturn cachedPageDimensions.get(index + 1)[1] / responsiveScale;\n\t\t}\n\n\t\treturn 768; // Initial height\n\t}\n\n\tonDocumentLoadSuccess(pdf: any) {\n\t\tthis.setState({ pdf });\n\t\tthis.cachePageDimensions(pdf);\n\t}\n\n\tupdateCurrentVisiblePage({ visibleStopIndex }: any) {\n\t\tthis.setState({ currentPage: visibleStopIndex + 1 });\n\t}\n\n\tcomputeResponsiveScale(pageNumber: any) {\n\t\tconst { cachedPageDimensions, pages, pageNumbers } = this.state;\n\n\t\tconst node = pages.get(pageNumbers.get(pageNumber));\n\n\t\tif (!node) return;\n\n\t\treturn cachedPageDimensions.get(pageNumber)[1] / node.clientHeight;\n\t}\n\n\thandleResize() {\n\t\tconst { currentPage, responsiveScale, initialContainerHeight } = this.state;\n\n\t\t// Recompute the responsive scale factor on window resize\n\t\tconst newResponsiveScale = this.computeResponsiveScale(currentPage);\n\n\t\tif (newResponsiveScale && responsiveScale !== newResponsiveScale) {\n\t\t\tconst containerHeight = initialContainerHeight / newResponsiveScale;\n\n\t\t\tthis.setState({ responsiveScale: newResponsiveScale, containerHeight }, () => this.recomputeRowHeights());\n\t\t}\n\t}\n\n\trender() {\n\t\tconst { scale } = this.props;\n\t\tconst { cachedPageDimensions, containerHeight, pdf, pages, pageNumbers } = this.state;\n\n\t\treturn (\n\t\t\t<Document\n\t\t\t\tfile={this.props.pdfFile}\n\t\t\t\tloading={<Loader />}\n\t\t\t\tonLoadSuccess={this.onDocumentLoadSuccess.bind(this)}\n\t\t\t\tonLoadError={(error) => console.error(error)} // eslint-disable-line no-console\n\t\t\t>\n\t\t\t\t{cachedPageDimensions && (\n\t\t\t\t\t<VariableSizeList\n\t\t\t\t\t\theight={containerHeight}\n\t\t\t\t\t\titemCount={pdf.numPages}\n\t\t\t\t\t\titemSize={this.computeRowHeight.bind(this)}\n\t\t\t\t\t\titemData={{\n\t\t\t\t\t\t\tscale,\n\t\t\t\t\t\t\tpages,\n\t\t\t\t\t\t\tpageNumbers,\n\t\t\t\t\t\t\tnumPages: pdf.numPages,\n\t\t\t\t\t\t\ttriggerResize: this.handleResize.bind(this),\n\t\t\t\t\t\t}}\n\t\t\t\t\t\toverscanCount={2}\n\t\t\t\t\t\tonItemsRendered={this.updateCurrentVisiblePage.bind(this)}\n\t\t\t\t\t\tref={this._list}\n\t\t\t\t\t\twidth=\"100%\"\n\t\t\t\t\t>\n\t\t\t\t\t\t{PDFPageRenderer}\n\t\t\t\t\t</VariableSizeList>\n\t\t\t\t)}\n\t\t\t</Document>\n\t\t);\n\t}\n}\n","import React, { useState, useLayoutEffect } from \"react\";\nimport Grid from \"@material-ui/core/Grid\";\nimport { withSize } from \"react-sizeme\";\nimport Paper from \"@material-ui/core/Paper\";\nimport { PDFDocumentContainer } from \"./PDFDocument/PDFDocument\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { getMaterialHeight, getPDF } from \"../selectors\";\nimport { setMaterialHeight } from \"../actions\";\nimport { PDFViewer } from \"./PDFDocument/PDFViewer\";\n\nfunction MaterialDisplayColumn({ size, hidden }: any) {\n\tconst [elevation, setElevation] = useState(3);\n\n\tconst dispatch = useDispatch();\n\n\tconst materialHeight = useSelector(getMaterialHeight);\n\n\tuseLayoutEffect(() => {\n\t\t// first setting\n\t\tif (!materialHeight) {\n\t\t\tdispatch(setMaterialHeight(size.height));\n\t\t}\n\n\t\t// setting if changed\n\t\tif (materialHeight && materialHeight !== size.height) {\n\t\t\tdispatch(setMaterialHeight(size.height));\n\t\t}\n\t}, [dispatch, materialHeight, size.height]);\n\n\tconst pdf = useSelector(getPDF);\n\n\t//<PDFDocumentContainer parentSize={size}></PDFDocumentContainer>\n\n\treturn (\n\t\t<Grid\n\t\t\titem\n\t\t\tstyle={{\n\t\t\t\twidth: \"60%\",\n\t\t\t}}\n\t\t\tonMouseEnter={() => {\n\t\t\t\tsetElevation(20);\n\t\t\t}}\n\t\t\tonMouseLeave={() => {\n\t\t\t\tsetElevation(3);\n\t\t\t}}\n\t\t\thidden={hidden}\n\t\t>\n\t\t\t<Paper elevation={elevation}>\n\t\t\t\t<PDFDocumentContainer parentSize={size}></PDFDocumentContainer>\n\t\t\t\t{pdf.pdf && false && <PDFViewer pdfFile={pdf.pdf}></PDFViewer>}\n\t\t\t</Paper>\n\t\t</Grid>\n\t);\n}\n\nexport const MaterialDisplayColumnWithSize = withSize({ monitorHeight: true, noPlaceholder: true })(\n\tMaterialDisplayColumn\n);\n","import * as t from \"./actionTypes\";\nimport type { DisplayData, DisplayStatus, MaterialGroupData } from \"./model\";\nimport { createRef } from \"react\";\nimport db from \"../db\";\n\nconst initialState: DisplayData = {\n\tdisplayStatus: \"SHOW\",\n\ttotalPages: 1000,\n\tcurrentPage: 1,\n\tdocumentRef: createRef(),\n\tpageSpans: {},\n\tzoomQueue: null,\n\tmaterialData: { materialDataTimeStamp: -Infinity },\n};\n\nconst displayData = (state = initialState, { type, payload }: { type: string; payload: any }): DisplayData => {\n\tswitch (type) {\n\t\tcase t.PDF_UPLOADED:\n\t\t\treturn { ...state, pdf: payload as File, pdfName: (payload as File).name };\n\t\tcase db.actionTypes.DOCUMENT_CHANGE:\n\t\t\tif (payload) {\n\t\t\t\t// this means the pdf has been already uploaded (Load Document) and this was not triggered not via options\n\t\t\t\tif (payload.name === state.pdfName) {\n\t\t\t\t\treturn state;\n\t\t\t\t}\n\t\t\t\treturn {\n\t\t\t\t\t...initialState,\n\t\t\t\t\tpdf: undefined,\n\t\t\t\t\tpdfName: payload.name,\n\t\t\t\t\ttotalPages: payload.totalPages,\n\t\t\t\t\tcurrentPage: payload.currentPage,\n\t\t\t\t};\n\t\t\t} else {\n\t\t\t\t// dont need to reset here because when loading pdf we set automatically via other actions\n\t\t\t\treturn state;\n\t\t\t}\n\t\tcase t.MATERIAL_LOADED:\n\t\t\treturn { ...state, totalPages: payload as number };\n\t\tcase t.PAGE_UPDATE:\n\t\t\treturn { ...state, currentPage: payload as number };\n\t\tcase t.DISPLAY_STATUS:\n\t\t\treturn { ...state, displayStatus: payload as DisplayStatus };\n\t\tcase t.MATERIAL_DATA:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tmaterialData: payload,\n\t\t\t\tpageSpans: { ...state.pageSpans, [state.currentPage]: (payload as MaterialGroupData).materialSpans.length - 1 },\n\t\t\t};\n\t\tcase t.MATERIAL_HEIGHT:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tmaterialHeight: payload,\n\t\t\t};\n\t\tcase t.ZOOM_QUEUE:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tzoomQueue: payload,\n\t\t\t};\n\t\tdefault:\n\t\t\treturn state;\n\t}\n};\n\nexport default displayData;\n","import * as actions from \"./actions\";\nimport * as actionTypes from \"./actionTypes\";\nimport * as components from \"./components\";\nimport * as constants from \"./constants\";\nimport reducer from \"./reducer\";\nimport * as selectors from \"./selectors\";\n\nexport default { actions, actionTypes, components, constants, reducer, selectors };\n\n//TODO-RC: make scrollable...\n","export const NAME = \"cardRiverState\";\n","import { NAME } from \"./constants\";\nimport { createSelector } from \"reselect\";\nimport { CardRiverState } from \"./model\";\nimport cards from \"../cards\";\n\nexport const getAll = (state: any) => state[NAME].present;\n\nexport const getRiverMakeUps = createSelector(getAll, (state: CardRiverState) => state.riverMakeUps);\n\nexport const getActiveRiverMakeUpID = createSelector(getAll, (state: CardRiverState) => state.activeRiverMakeUpID);\n\nexport const getPushToRiver = createSelector(getAll, (state: CardRiverState) => state.pushToRiverID);\n\nexport const getPushToRiverMakeUp = createSelector(getRiverMakeUps, getPushToRiver, (makeUps, id) => makeUps[id]);\n\nexport const getActiveRiverMakeUp = createSelector(\n\tgetRiverMakeUps,\n\tgetActiveRiverMakeUpID,\n\t(makeUps, id) => makeUps[id]\n);\n\nexport const getPushToRiverCardIDs = createSelector(getPushToRiverMakeUp, (makeUp) => makeUp.cardIDs);\n\nexport const getPushToRiverCards = createSelector(\n\tgetPushToRiverCardIDs,\n\tcards.selectors.getCards,\n\t(makeUpCardIDs, cards) => makeUpCardIDs.map((id) => cards[id])\n);\n\n//TODO-NICE: rename active=page-wise or smth like that for clarity\nexport const getActiveRiverCardIDs = createSelector(getActiveRiverMakeUp, (makeUp) => makeUp.cardIDs);\n\nexport const getActiveRiverCards = createSelector(\n\tgetActiveRiverCardIDs,\n\tcards.selectors.getCards,\n\t(makeUpCardIDs, cards) => makeUpCardIDs.map((id) => cards[id])\n);\n\nexport const getRiverShowState = createSelector(getAll, (state: CardRiverState) => state.riverShowState);\n\nexport const riverShowStateIsShow = createSelector(getRiverShowState, (state) => state === \"SHOW\");\n\nexport const getHoveredCardData = createSelector(getAll, (state: CardRiverState) => {\n\treturn { id: state.highlightedCardID, field: state.highlightedCardField };\n});\n\nexport const getLastRiverIDNumber = createSelector(getAll, (state: CardRiverState) => state.lastRiverIDNumber);\n\nexport const getRiverContentState = createSelector(getAll, (state: CardRiverState) => state.riverContentState);\n\nexport const getRiverContentFilter = createSelector(getAll, (state: CardRiverState) => state.contentFilter);\n","import { NAME } from \"./constants\";\n\nexport const RIVER_SHOW_STATE = NAME + \"/RIVER_SHOW_STATE\";\nexport const RIVER_CONTENT_STATE = NAME + \"/RIVER_CONTENT_STATE\";\nexport const RIVER_PUSH_STATE = NAME + \"/RIVER_PUSH_STATE\";\nexport const RIVER_HOVERED_CARD = NAME + \"/RIVER_HOVERED_CARD\";\nexport const RIVER_CONTENT_FILTER = NAME + \"/RIVER_CONTENT_FILTER\";\n","import * as t from \"./actionTypes\";\nimport { riverShowStateIsShow, getPushToRiver, getHoveredCardData } from \"./selectors\";\nimport { Dispatch } from \"redux\";\nimport { CardID } from \"../cards/model/model\";\nimport { CardField } from \"../cards/model/model-content\";\nimport { RiverContentState, ContentFilter } from \"./model\";\n\nexport const toggleRiverShowState = () => (dispatch: Dispatch, getState: Function) => {\n\tdispatch({ type: t.RIVER_SHOW_STATE, payload: riverShowStateIsShow(getState()) ? \"HIDE\" : \"SHOW\" });\n};\n\nexport const setRiverContentState = (state: RiverContentState) => {\n\treturn { type: t.RIVER_CONTENT_STATE, payload: state };\n};\n\nexport const setPushToRiver = (id: string) => {\n\treturn { type: t.RIVER_PUSH_STATE, payload: id };\n};\n\nexport const trySetPushToRiver = (id: string) => {\n\treturn (dispatch: Dispatch, getState: Function) => {\n\t\tif (getPushToRiver(getState()) !== id) dispatch(setPushToRiver(id));\n\t};\n};\n\nexport const setHoveredCard = (cardID: CardID, field: CardField) => {\n\treturn { payload: { id: cardID, field }, type: t.RIVER_HOVERED_CARD };\n};\n\nexport const trySetHoveredCard = (cardID: CardID, field: CardField) => {\n\treturn (dispatch: Dispatch, getState: Function) => {\n\t\tconst state = getState();\n\t\tconst highlightedCardIDData = getHoveredCardData(state);\n\t\tif (highlightedCardIDData.id !== cardID || highlightedCardIDData.field !== field)\n\t\t\tdispatch(setHoveredCard(cardID, field));\n\t};\n};\n\nexport const resetHoveredCard = () => {\n\treturn { payload: { id: null, field: null }, type: t.RIVER_HOVERED_CARD };\n};\n\nexport const setContentFilter = (filter: ContentFilter) => {\n\treturn { type: t.RIVER_CONTENT_FILTER, payload: filter };\n};\n\nexport const resetContentFilter = () => {\n\treturn { type: t.RIVER_CONTENT_FILTER, payload: \"\" };\n};\n","import { withStyles, CheckboxProps, Checkbox } from \"@material-ui/core\";\nimport React from \"react\";\nimport { green } from \"@material-ui/core/colors\";\nexport const GreenCheckbox = withStyles({\n\troot: {\n\t\tcolor: green[400],\n\t\t\"&$checked\": {\n\t\t\tcolor: green[600],\n\t\t},\n\t},\n\tchecked: {},\n})((props: CheckboxProps) => <Checkbox color=\"default\" {...props} />);\n","import { FormGroup, FormControlLabel } from \"@material-ui/core\";\nimport React from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { getRiverContentState } from \"../selectors\";\nimport { RiverContentState } from \"../model\";\nimport { setRiverContentState } from \"../actions\";\nimport { GreenCheckbox } from \"../../../shared/GreenCheckbox\";\n\nexport const RiverContentFormGroup = () => {\n\tconst riverContentState = useSelector(getRiverContentState);\n\tconst dispatch = useDispatch();\n\n\tconst showQAs = riverContentState === \"ALL\" || riverContentState === \"QAS\";\n\tconst showNotes = riverContentState === \"ALL\" || riverContentState === \"NOTES\";\n\n\tconst changeContentState = (clickedState: RiverContentState) => {\n\t\tif (!showQAs && clickedState === \"QAS\") {\n\t\t\tif (showNotes) {\n\t\t\t\tdispatch(setRiverContentState(\"ALL\"));\n\t\t\t} else {\n\t\t\t\tdispatch(setRiverContentState(\"QAS\"));\n\t\t\t}\n\t\t\treturn;\n\t\t}\n\n\t\tif (!showNotes && clickedState === \"NOTES\") {\n\t\t\tif (showQAs) {\n\t\t\t\tdispatch(setRiverContentState(\"ALL\"));\n\t\t\t} else {\n\t\t\t\tdispatch(setRiverContentState(\"NOTES\"));\n\t\t\t}\n\t\t\treturn;\n\t\t}\n\n\t\tif (showQAs && clickedState === \"QAS\") {\n\t\t\tif (!showNotes) {\n\t\t\t\tdispatch(setRiverContentState(\"NONE\"));\n\t\t\t} else {\n\t\t\t\tdispatch(setRiverContentState(\"NOTES\"));\n\t\t\t}\n\t\t\treturn;\n\t\t}\n\n\t\tif (showNotes && clickedState === \"NOTES\") {\n\t\t\tif (!showQAs) {\n\t\t\t\tdispatch(setRiverContentState(\"NONE\"));\n\t\t\t} else {\n\t\t\t\tdispatch(setRiverContentState(\"QAS\"));\n\t\t\t}\n\t\t\treturn;\n\t\t}\n\t};\n\n\treturn (\n\t\t<FormGroup>\n\t\t\t<FormControlLabel\n\t\t\t\tcontrol={\n\t\t\t\t\t<GreenCheckbox\n\t\t\t\t\t\tchecked={showQAs}\n\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\tchangeContentState(\"QAS\");\n\t\t\t\t\t\t}}\n\t\t\t\t\t/>\n\t\t\t\t}\n\t\t\t\tlabel=\"QAs\"\n\t\t\t/>\n\t\t\t<FormControlLabel\n\t\t\t\tcontrol={\n\t\t\t\t\t<GreenCheckbox\n\t\t\t\t\t\tchecked={showNotes}\n\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\tchangeContentState(\"NOTES\");\n\t\t\t\t\t\t}}\n\t\t\t\t\t/>\n\t\t\t\t}\n\t\t\t\tlabel=\"Notes\"\n\t\t\t/>\n\t\t</FormGroup>\n\t);\n};\n","export const NAME = \"appFocus\";\n","import { NAME } from \"./constants\";\n\nexport const DISPLAY_FOCUS_UPDATE = NAME + \"/DISPLAY_FOCUS_UPDATE\";\n","import * as t from \"./actionTypes\";\nimport { DisplayFocus } from \"./model\";\n\nexport const updateDisplayFocus = (focus: DisplayFocus) => {\n\treturn { type: t.DISPLAY_FOCUS_UPDATE, payload: focus };\n};\n","import { FocusState, DisplayFocus } from \"./model\";\nimport * as t from \"./actionTypes\";\n\nconst initialState: FocusState = { displayFocus: \"ACTIVE_RIVER\" };\n\nconst focus = (state = initialState, { type, payload }: { type: string; payload: any }): FocusState => {\n\tswitch (type) {\n\t\tcase t.DISPLAY_FOCUS_UPDATE:\n\t\t\treturn { ...state, displayFocus: payload as DisplayFocus };\n\t\tdefault:\n\t\t\treturn state;\n\t}\n};\n\nexport default focus;\n","import { createSelector } from \"reselect\";\nimport { NAME } from \"./constants\";\nimport { FocusState } from \"./model\";\n\nexport const getAll = (state: any) => state[NAME];\n\nexport const getDisplayFocus = createSelector(getAll, (state: FocusState) => state.displayFocus);\n","import * as actions from \"./actions\";\nimport * as constants from \"./constants\";\nimport reducer from \"./reducer\";\nimport * as selectors from \"./selectors\";\nimport * as actionTypes from \"./actionTypes\";\n\nexport default { actions, constants, reducer, selectors, actionTypes };\n","import React, { useState } from \"react\";\nimport { TextField, TextFieldProps } from \"@material-ui/core\";\nimport selection from \"../../../selection\";\nimport { useDispatch } from \"react-redux\";\nimport { Dispatch } from \"redux\";\n\nexport const HybridCardField = ({\n\tstoreValue = \"\",\n\tsaveChanges,\n\tsetSourceCard,\n\tstyle,\n\t...rest\n}: {\n\tstoreValue?: string;\n\tsetSourceCard: () => void;\n\tsaveChanges: (value: string) => void;\n\tstyle: any;\n} & TextFieldProps) => {\n\tconst [state, setState] = useState({ storeValue, mutableValue: storeValue });\n\tconst dispatch = useDispatch();\n\n\t// reset if new storeValue, otherwise keep user-mutated value\n\tif (state.storeValue !== storeValue) {\n\t\tsetState({ storeValue, mutableValue: storeValue });\n\t}\n\n\t// need the onChange-pattern, because we want to be able to pre-fill the field from the store\n\treturn (\n\t\t<TextField\n\t\t\tInputProps={{ disableUnderline: true, style: { minWidth: \"400px\" } }}\n\t\t\tmultiline\n\t\t\tvariant=\"filled\"\n\t\t\tvalue={state.mutableValue}\n\t\t\tonChange={(event) => {\n\t\t\t\tconst submittedValue = (event.target as HTMLTextAreaElement).value;\n\t\t\t\tsetState({ ...state, mutableValue: submittedValue });\n\t\t\t}}\n\t\t\tonBlur={(event: any) => {\n\t\t\t\tsaveChanges(event.target.value);\n\t\t\t}}\n\t\t\tonMouseUp={() => {\n\t\t\t\tmouseUpCardField(dispatch, setSourceCard);\n\t\t\t}}\n\t\t\tstyle={style}\n\t\t\t{...rest}\n\t\t></TextField>\n\t);\n};\n\nconst mouseUpCardField = (dispatch: Dispatch, setSourceCard: () => void) => {\n\t//TODO-NICE: allow grabbing from other cards\n\tconst selectionData = selection.services.getSelection();\n\tif (selectionData) {\n\t\tconst selectedStr = selectionData.text;\n\n\t\tsetSourceCard();\n\t\tdispatch(selection.actions.updateManuallySelectedString(selectedStr));\n\t}\n};\n","import FindInPageIcon from \"@material-ui/icons/FindInPage\";\nimport React from \"react\";\nimport { IconButton, Tooltip } from \"@material-ui/core\";\nimport { useDispatch } from \"react-redux\";\nimport display from \"../../../../display\";\nimport { SingleOrigin } from \"../../../../cards/model/model-origin\";\nimport focus from \"../../../../focus\";\nimport text from \"../../../../text\";\n\n//TODO-NICE: replace/simplify focus system with element specific mouse-listeners\nexport const JumpToOriginButton = ({ cardOrigin }: { cardOrigin: SingleOrigin }) => {\n\tconst dispatch = useDispatch();\n\treturn (\n\t\t<Tooltip\n\t\t\ttitle={text.constants.jumpToOriginTooltip}\n\t\t\tenterDelay={text.constants.defaultEnterDelay}\n\t\t\tenterNextDelay={text.constants.defaultEnterNextDelay}\n\t\t>\n\t\t\t<IconButton\n\t\t\t\ttype=\"button\"\n\t\t\t\tonClick={() => {\n\t\t\t\t\tdispatch(focus.actions.updateDisplayFocus(\"ACTIVE_RIVER\"));\n\t\t\t\t\tdispatch(display.actions.zoomToCardOrigin(cardOrigin.spanIndex, cardOrigin.page));\n\t\t\t\t}}\n\t\t\t>\n\t\t\t\t<FindInPageIcon fontSize=\"small\"></FindInPageIcon>\n\t\t\t</IconButton>\n\t\t</Tooltip>\n\t);\n};\n","import PanToolIcon from \"@material-ui/icons/PanTool\";\nimport PanToolOutlinedIcon from \"@material-ui/icons/PanToolOutlined\";\nimport React, { useState } from \"react\";\nimport { IconButton, Tooltip } from \"@material-ui/core\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { CardConfig, GoalCard } from \"../../../../cards/model/model\";\nimport cards from \"../../../../cards\";\nimport text from \"../../../../text\";\nimport { CardField } from \"../../../../cards/model/model-content\";\n\nconst isGoalCard = (cardConfig: CardConfig, cardField: CardField, goalCard: GoalCard) =>\n\tcardConfig.cardID === goalCard.cardID && cardField === goalCard.creationType;\n\nexport const GrabForFieldButton = ({ cardConfig, cardField }: { cardConfig: CardConfig; cardField: CardField }) => {\n\tconst dispatch = useDispatch();\n\tconst goalCard = useSelector(cards.selectors.getGoalCard);\n\tconst [outlined, setOutlined] = useState(true);\n\n\tif (goalCard) {\n\t\tconst isGoal = isGoalCard(cardConfig, cardField, goalCard);\n\t\tif (isGoal) {\n\t\t\tif (outlined) setOutlined(false);\n\t\t} else {\n\t\t\tif (!outlined) setOutlined(true);\n\t\t}\n\t} else {\n\t\tif (!outlined) setOutlined(true);\n\t}\n\n\treturn (\n\t\t<Tooltip\n\t\t\ttitle={text.constants.grabForCardTooltip}\n\t\t\tenterDelay={text.constants.defaultEnterDelay}\n\t\t\tenterNextDelay={text.constants.defaultEnterNextDelay}\n\t\t>\n\t\t\t<IconButton\n\t\t\t\ttype=\"button\"\n\t\t\t\tonClick={() => {\n\t\t\t\t\tif (outlined) {\n\t\t\t\t\t\tdispatch(cards.actions.setGoalCard(cardConfig, cardField));\n\t\t\t\t\t} else {\n\t\t\t\t\t\tdispatch(cards.actions.resetGoalCard());\n\t\t\t\t\t}\n\t\t\t\t}}\n\t\t\t>\n\t\t\t\t{outlined ? (\n\t\t\t\t\t<PanToolOutlinedIcon fontSize=\"small\"></PanToolOutlinedIcon>\n\t\t\t\t) : (\n\t\t\t\t\t<PanToolIcon fontSize=\"small\"></PanToolIcon>\n\t\t\t\t)}\n\t\t\t</IconButton>\n\t\t</Tooltip>\n\t);\n};\n","import AddCircleOutlineIcon from \"@material-ui/icons/AddCircleOutline\";\nimport React from \"react\";\nimport { IconButton } from \"@material-ui/core\";\nimport { useDispatch, useSelector, useStore } from \"react-redux\";\nimport text from \"../../../../text\";\nimport selection from \"../../../../selection\";\nimport { CreationType } from \"../../../../cards/model/model\";\nimport display from \"../../../../display\";\nimport { CardOrigin } from \"../../../../cards/model/model-origin\";\n\nexport const AppendButton = ({ creationType, cardID }: { creationType: CreationType; cardID?: string }) => {\n\tconst dispatch = useDispatch();\n\tconst selectionParent = useSelector(selection.selectors.getCurrentSelectedParent);\n\tconst store = useStore();\n\n\treturn (\n\t\t<text.components.AppendButtonTooltip>\n\t\t\t<IconButton\n\t\t\t\ttype=\"button\"\n\t\t\t\tonClick={() => {\n\t\t\t\t\t//TODO-NICE: allow append from other cards (origin-copying is the work here)\n\t\t\t\t\tif (selectionParent) {\n\t\t\t\t\t\tconst origin: CardOrigin | undefined = display.selectors.getCurrentOrigin(store.getState());\n\n\t\t\t\t\t\tdispatch(selection.actions.selectionToCardAppend(creationType, origin, cardID));\n\t\t\t\t\t}\n\t\t\t\t}}\n\t\t\t>\n\t\t\t\t<AddCircleOutlineIcon fontSize=\"small\"></AddCircleOutlineIcon>\n\t\t\t</IconButton>\n\t\t</text.components.AppendButtonTooltip>\n\t);\n};\n","import Grid from \"@material-ui/core/Grid\";\nimport React, { useRef, useEffect, MutableRefObject } from \"react\";\nimport { HybridCardField } from \"../HybridCardField\";\nimport { QACardContent } from \"../../../../cards/model/model-content\";\nimport { SingleOrigin, QAOrigin, QOnlyQAOrigin, AOnlyQAOrigin } from \"../../../../cards/model/model-origin\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport cards from \"../../../../cards\";\nimport { JumpToOriginButton } from \"../Buttons/JumpToOriginButton\";\nimport { GrabForFieldButton } from \"../Buttons/GrabForFieldButton\";\nimport { isNullOrUndefined } from \"util\";\nimport { getHoveredCardData } from \"../../../selectors\";\nimport focus from \"../../../../focus\";\nimport { Card, Paper } from \"@material-ui/core\";\nimport { CardProps, borderStyle } from \"./ClayCard\";\nimport text from \"../../../../text\";\nimport { AppendButton } from \"../Buttons/AppendButton\";\nimport selection from \"../../../../selection\";\n\n//TODO-NICE:\n// make dropdown / menu for selection to create card from selection snackbar?\n// show if selection has origin / button jump to origin at snackbar?\n// make REPLACE-button for River\n// replace Context-Menu with APPEND/REPLACE button flow? / allow both?\n\n//TODO-NICE: think of way to not have menu over the cards, because you cant read them this way? end of card?\n//TODO-NICE: use dark color pallet (theme?)\n\nexport const QACard = ({ config }: CardProps) => {\n\tconst dispatch = useDispatch();\n\tconst { id, field } = useSelector(getHoveredCardData);\n\tconst isHoveredCard = config.cardID === id;\n\n\t// we only offer one way to use card-content in other cards: extract\n\t// we do not allow grabbing from other cards, just from the document, so we only need the grab button in the ActiveRiver\n\tconst isActiveRiver = useSelector(focus.selectors.getDisplayFocus) === \"ACTIVE_RIVER\";\n\n\tconst ref: MutableRefObject<undefined | HTMLDivElement> = useRef();\n\tuseEffect(() => {\n\t\tif (ref.current && isHoveredCard) {\n\t\t\t(ref.current as HTMLDivElement).scrollIntoView({ behavior: \"smooth\", block: \"center\", inline: \"center\" });\n\t\t}\n\t});\n\n\treturn (\n\t\t<Card variant=\"elevation\" elevation={5} ref={ref} style={{ padding: \"3px\" }}>\n\t\t\t<Grid container direction=\"row\" justify=\"space-between\">\n\t\t\t\t<Grid item>\n\t\t\t\t\t<Grid container direction=\"column\" spacing={1}>\n\t\t\t\t\t\t<Grid item>\n\t\t\t\t\t\t\t<Grid container direction=\"row\" spacing={1}>\n\t\t\t\t\t\t\t\t<Grid item>\n\t\t\t\t\t\t\t\t\t<div style={isHoveredCard && field === \"q\" ? borderStyle : undefined}>\n\t\t\t\t\t\t\t\t\t\t<HybridCardField\n\t\t\t\t\t\t\t\t\t\t\tsaveChanges={(value) => {\n\t\t\t\t\t\t\t\t\t\t\t\tdispatch(cards.actions.updateCardContent(value, config.cardID, \"q\", \"REPLACE\", config.origin));\n\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t\tstoreValue={(config.content as QACardContent).q}\n\t\t\t\t\t\t\t\t\t\t\tlabel={text.constants.questionText}\n\t\t\t\t\t\t\t\t\t\t\tvariant=\"filled\"\n\t\t\t\t\t\t\t\t\t\t\tstyle={{ backgroundColor: \"#FFBF69\" }}\n\t\t\t\t\t\t\t\t\t\t\tInputLabelProps={{ style: { color: \"#000000\" } }}\n\t\t\t\t\t\t\t\t\t\t\tsetSourceCard={() => {\n\t\t\t\t\t\t\t\t\t\t\t\tdispatch(selection.actions.setSourceCard(\"q\", config.origin));\n\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t></HybridCardField>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t</Grid>\n\n\t\t\t\t\t\t\t\t<Grid item>\n\t\t\t\t\t\t\t\t\t<Paper variant=\"outlined\">\n\t\t\t\t\t\t\t\t\t\t<Grid container direction=\"row\">\n\t\t\t\t\t\t\t\t\t\t\t{isActiveRiver && <AppendButton creationType=\"q\" cardID={config.cardID}></AppendButton>}\n\t\t\t\t\t\t\t\t\t\t\t{isActiveRiver && <GrabForFieldButton cardConfig={config} cardField=\"q\"></GrabForFieldButton>}\n\t\t\t\t\t\t\t\t\t\t\t{config.origin && !isNullOrUndefined((config.origin as QOnlyQAOrigin).q?.spanIndex) && (\n\t\t\t\t\t\t\t\t\t\t\t\t<JumpToOriginButton\n\t\t\t\t\t\t\t\t\t\t\t\t\tcardOrigin={(config.origin as QAOrigin).q as SingleOrigin}\n\t\t\t\t\t\t\t\t\t\t\t\t></JumpToOriginButton>\n\t\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t\t\t</Paper>\n\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t<Grid item>\n\t\t\t\t\t\t\t<Grid container direction=\"row\" spacing={1}>\n\t\t\t\t\t\t\t\t<Grid item>\n\t\t\t\t\t\t\t\t\t<div style={isHoveredCard && field === \"a\" ? borderStyle : undefined}>\n\t\t\t\t\t\t\t\t\t\t<HybridCardField\n\t\t\t\t\t\t\t\t\t\t\tsaveChanges={(value) => {\n\t\t\t\t\t\t\t\t\t\t\t\tdispatch(cards.actions.updateCardContent(value, config.cardID, \"a\", \"REPLACE\", config.origin));\n\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t\tstoreValue={(config.content as QACardContent).a}\n\t\t\t\t\t\t\t\t\t\t\tlabel={text.constants.answerText}\n\t\t\t\t\t\t\t\t\t\t\tstyle={{ backgroundColor: \"#2EC4B6\" }}\n\t\t\t\t\t\t\t\t\t\t\tInputLabelProps={{ style: { color: \"#000000\" } }}\n\t\t\t\t\t\t\t\t\t\t\tsetSourceCard={() => {\n\t\t\t\t\t\t\t\t\t\t\t\tdispatch(selection.actions.setSourceCard(\"a\", config.origin));\n\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t></HybridCardField>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t\t<Grid item>\n\t\t\t\t\t\t\t\t\t<Paper variant=\"outlined\">\n\t\t\t\t\t\t\t\t\t\t<Grid container direction=\"row\">\n\t\t\t\t\t\t\t\t\t\t\t{isActiveRiver && <AppendButton creationType=\"a\" cardID={config.cardID}></AppendButton>}\n\n\t\t\t\t\t\t\t\t\t\t\t{isActiveRiver && <GrabForFieldButton cardConfig={config} cardField=\"a\"></GrabForFieldButton>}\n\t\t\t\t\t\t\t\t\t\t\t{config.origin && !isNullOrUndefined((config.origin as AOnlyQAOrigin).a?.spanIndex) && (\n\t\t\t\t\t\t\t\t\t\t\t\t<JumpToOriginButton\n\t\t\t\t\t\t\t\t\t\t\t\t\tcardOrigin={(config.origin as QAOrigin).a as SingleOrigin}\n\t\t\t\t\t\t\t\t\t\t\t\t></JumpToOriginButton>\n\t\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t\t\t</Paper>\n\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t</Grid>\n\t\t\t\t\t</Grid>\n\t\t\t\t</Grid>\n\n\t\t\t\t<Grid item>\n\t\t\t\t\t<cards.components.DeleteCardButton cardID={config.cardID}></cards.components.DeleteCardButton>\n\t\t\t\t</Grid>\n\t\t\t</Grid>\n\t\t</Card>\n\t);\n};\n","import React, { useRef, useEffect, MutableRefObject } from \"react\";\nimport { HybridCardField } from \"../HybridCardField\";\nimport { NoteOrigin } from \"../../../../cards/model/model-origin\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport cards from \"../../../../cards\";\nimport { JumpToOriginButton } from \"../Buttons/JumpToOriginButton\";\nimport { GrabForFieldButton } from \"../Buttons/GrabForFieldButton\";\nimport { getHoveredCardData } from \"../../../selectors\";\nimport focus from \"../../../../focus\";\nimport { Card, Paper, Grid } from \"@material-ui/core\";\nimport { CardProps, borderStyle } from \"./ClayCard\";\nimport text from \"../../../../text\";\nimport { AppendButton } from \"../Buttons/AppendButton\";\nimport selection from \"../../../../selection\";\n\n//TODO-PERF: investigate if this hover-store approach is too slow, useRef instead?\nexport const NoteCard = ({ config }: CardProps) => {\n\tconst dispatch = useDispatch();\n\tconst { id } = useSelector(getHoveredCardData);\n\tconst isHoveredCard = config.cardID === id;\n\n\t// we only offer one way to use card-content in other cards: extract\n\t// we do not allow grabbing from other cards, just from the document, so we only need the grab button in the ActiveRiver\n\t//TODO-NICE: allow grabbing from other cards\n\tconst isActiveRiver = useSelector(focus.selectors.getDisplayFocus) === \"ACTIVE_RIVER\";\n\n\tconst ref: MutableRefObject<undefined | HTMLDivElement> = useRef();\n\tuseEffect(() => {\n\t\tif (ref.current && isHoveredCard) {\n\t\t\t(ref.current as HTMLDivElement).scrollIntoView({ behavior: \"smooth\", block: \"center\", inline: \"center\" });\n\t\t}\n\t});\n\n\treturn (\n\t\t<Card\n\t\t\tvariant=\"elevation\"\n\t\t\televation={5}\n\t\t\tstyle={isHoveredCard ? { ...borderStyle, padding: \"3px\" } : { padding: \"3px\" }}\n\t\t\tref={ref}\n\t\t>\n\t\t\t<Grid container direction=\"row\" justify=\"space-between\">\n\t\t\t\t<Grid item>\n\t\t\t\t\t<Grid container direction=\"row\" spacing={1}>\n\t\t\t\t\t\t<Grid item>\n\t\t\t\t\t\t\t<HybridCardField\n\t\t\t\t\t\t\t\tsaveChanges={(value) => {\n\t\t\t\t\t\t\t\t\tdispatch(cards.actions.updateCardContent(value, config.cardID, \"note\", \"REPLACE\", config.origin));\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\tstoreValue={config.content as string}\n\t\t\t\t\t\t\t\tlabel={text.constants.noteText}\n\t\t\t\t\t\t\t\tvariant=\"filled\"\n\t\t\t\t\t\t\t\tstyle={{ backgroundColor: \"#CBF3F0\" }}\n\t\t\t\t\t\t\t\tInputLabelProps={{ style: { color: \"#000000\" } }}\n\t\t\t\t\t\t\t\tsetSourceCard={() => {\n\t\t\t\t\t\t\t\t\tdispatch(selection.actions.setSourceCard(\"note\", config.origin));\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t></HybridCardField>\n\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t<Grid item>\n\t\t\t\t\t\t\t<Paper variant=\"outlined\">\n\t\t\t\t\t\t\t\t<Grid container direction=\"row\">\n\t\t\t\t\t\t\t\t\t<Grid item>\n\t\t\t\t\t\t\t\t\t\t{isActiveRiver && <AppendButton creationType=\"note\" cardID={config.cardID}></AppendButton>}\n\t\t\t\t\t\t\t\t\t</Grid>\n\n\t\t\t\t\t\t\t\t\t<Grid item>\n\t\t\t\t\t\t\t\t\t\t{isActiveRiver && <GrabForFieldButton cardConfig={config} cardField=\"note\"></GrabForFieldButton>}\n\t\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t\t\t<Grid item>\n\t\t\t\t\t\t\t\t\t\t{config.origin && (\n\t\t\t\t\t\t\t\t\t\t\t<JumpToOriginButton cardOrigin={config.origin as NoteOrigin}></JumpToOriginButton>\n\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t</Paper>\n\t\t\t\t\t\t</Grid>\n\t\t\t\t\t</Grid>\n\t\t\t\t</Grid>\n\n\t\t\t\t<Grid item>\n\t\t\t\t\t<cards.components.DeleteCardButton cardID={config.cardID}></cards.components.DeleteCardButton>\n\t\t\t\t</Grid>\n\t\t\t</Grid>\n\t\t</Card>\n\t);\n};\n","import React from \"react\";\nimport { CardConfig } from \"../../../../cards/model/model\";\nimport { QACard } from \"./QACard\";\nimport { NoteCard } from \"./NoteCard\";\n\nexport type CardProps = { config: CardConfig; riverID: string };\n\nexport const borderStyle = { border: \"4px solid green\", borderRadius: \"4px\" };\n\nexport const ClayCard = ({ config, riverID }: CardProps) => {\n\tswitch (config.type) {\n\t\tcase \"Note\":\n\t\t\treturn <NoteCard config={config} riverID={riverID}></NoteCard>;\n\t\tcase \"Q-A\":\n\t\t\treturn <QACard config={config} riverID={riverID}></QACard>;\n\t}\n};\n","import Grid from \"@material-ui/core/Grid\";\nimport React from \"react\";\nimport { incrementer } from \"../../../../shared/utils\";\nimport { ClayCard } from \"./Cards/ClayCard\";\nimport { CardConfig } from \"../../../cards/model/model\";\nimport { Divider } from \"@material-ui/core\";\n\nconst GridDivider = () => (\n\t<Grid item>\n\t\t<Divider></Divider>\n\t</Grid>\n);\n\nexport const toCardGridItemsWithDividers = (cards: CardConfig[], riverID: string) => {\n\tconst increment = incrementer();\n\n\treturn cards.reduce((prev, currentCard, index, arr) => {\n\t\tprev.push(\n\t\t\t<Grid item key={increment()}>\n\t\t\t\t<ClayCard config={currentCard} riverID={riverID} key={increment()}></ClayCard>\n\t\t\t</Grid>\n\t\t);\n\n\t\tconst notLastCard = index < arr.length - 1;\n\t\tif (notLastCard) prev.push(<GridDivider key={increment()}></GridDivider>);\n\t\treturn prev;\n\t}, [] as any[]);\n};\n","import { Typography, Divider } from \"@material-ui/core\";\nimport Accordion from \"@material-ui/core/Accordion\";\nimport AccordionSummary from \"@material-ui/core/AccordionSummary\";\nimport AccordionDetails from \"@material-ui/core/AccordionDetails\";\nimport Grid from \"@material-ui/core/Grid\";\nimport React, { useState } from \"react\";\nimport { trySetPushToRiver } from \"../../actions\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { getPushToRiver } from \"../../selectors\";\nimport display from \"../../../display\";\nimport focus from \"../../../focus\";\nimport cards from \"../../../cards\";\n\n//TODO-NICE: make it not be accordion but closeable?\n//TODO-NICE: make local show / hide notes\nexport const CardRiverAccordion = ({\n\triverID,\n\tgridItems,\n\tsummary,\n}: {\n\triverID: string;\n\tgridItems: any;\n\tsummary: string;\n}) => {\n\tconst defaultElevation = 3;\n\tconst highlightElevation = 20;\n\tconst [elevation, setElevation] = useState(defaultElevation);\n\tconst pushToRiver = useSelector(getPushToRiver);\n\n\tif (riverID === pushToRiver && elevation === defaultElevation) {\n\t\tsetElevation(highlightElevation);\n\t} else if (riverID !== pushToRiver && elevation !== defaultElevation) {\n\t\tsetElevation(defaultElevation);\n\t}\n\n\tconst materialHeight = useSelector(display.selectors.getMaterialHeight);\n\tconst displayFocus = useSelector(focus.selectors.getDisplayFocus);\n\n\tconst dispatch = useDispatch();\n\n\t//TODO-NICE: make HalfFull-sub-menu for half-full QAs\n\t//TODO-NICE: if you start without any document and then load one, the current cards should be merged into that one\n\t//TODO-NICE: scroll-to-top for overflowing river\n\treturn (\n\t\t<Accordion\n\t\t\tdefaultExpanded={true}\n\t\t\tonMouseEnter={() => {\n\t\t\t\tdispatch(trySetPushToRiver(riverID));\n\t\t\t}}\n\t\t\televation={elevation}\n\t\t\t//TODO-NICE: I use 1400 to prevent non-overflow on reloading (the site would be stretched)\n\t\t\t// if the river is bigger than the pdf-page would be, then the site is stretchted and the pdf-page-element assumes the size of the river\n\t\t\t// this solution assumes the pdf page is always bigger than 1400 (true on 22'), need solution to get height of pdf-page-element itself and not its parent\n\t\t\tstyle={\n\t\t\t\tdisplayFocus === \"ACTIVE_RIVER\"\n\t\t\t\t\t? {\n\t\t\t\t\t\t\toverflowY: \"auto\",\n\t\t\t\t\t\t\tmaxHeight: materialHeight ? materialHeight : \"1400px\",\n\t\t\t\t\t  }\n\t\t\t\t\t: {}\n\t\t\t}\n\t\t>\n\t\t\t<AccordionSummary>\n\t\t\t\t<Typography\n\t\t\t\t\tvariant=\"h6\"\n\t\t\t\t\talign=\"center\"\n\t\t\t\t\tstyle={{ MozUserSelect: \"none\", WebkitUserSelect: \"none\", msUserSelect: \"none\" }}\n\t\t\t\t>\n\t\t\t\t\t{summary}\n\t\t\t\t</Typography>\n\t\t\t</AccordionSummary>\n\t\t\t<AccordionDetails>\n\t\t\t\t<Grid container direction=\"column\" spacing={2} justify=\"center\" alignItems=\"stretch\">\n\t\t\t\t\t<Grid item>\n\t\t\t\t\t\t<cards.components.AddQAButton></cards.components.AddQAButton>\n\t\t\t\t\t\t<cards.components.AddNoteButton></cards.components.AddNoteButton>\n\t\t\t\t\t\t<Divider></Divider>\n\t\t\t\t\t</Grid>\n\n\t\t\t\t\t<Grid item>\n\t\t\t\t\t\t<Grid container direction=\"column\" spacing={2} justify=\"center\" alignItems=\"stretch\">\n\t\t\t\t\t\t\t{gridItems}\n\t\t\t\t\t\t</Grid>\n\t\t\t\t\t</Grid>\n\t\t\t\t</Grid>\n\t\t\t</AccordionDetails>\n\t\t</Accordion>\n\t);\n};\n","import { CardConfig, NoteConfig, QAConfig } from \"../../../cards/model/model\";\nimport { toCardGridItemsWithDividers } from \"./toCardGridItemsWithDividers\";\nimport { useMemo } from \"react\";\nimport { CardRiverAccordion } from \"./CardRiverAccordion\";\nimport React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { getRiverContentState, getRiverContentFilter } from \"../../selectors\";\nimport { ContentFilter } from \"../../model\";\n\n//TODO-NICE: untangle these components, dont need to so many subs?\n\nconst noteContainsContentFilter = (noteConfig: NoteConfig, contentFilter: ContentFilter) =>\n\tnoteConfig.content.includes(contentFilter);\n\nconst qaContainsContentFilter = (qaConfig: QAConfig, contentFilter: ContentFilter) =>\n\tqaConfig.content.a.includes(contentFilter) || qaConfig.content.q.includes(contentFilter);\n\nexport const ChildCardRiver = ({ riverID, riverCards }: { riverID: string; riverCards: CardConfig[] }) => {\n\tconst riverContentState = useSelector(getRiverContentState);\n\n\t//TODO-NICE: use regex for upper/lower-case\n\tconst contentFilter = useSelector(getRiverContentFilter);\n\n\t// this should only change if the store values change\n\tconst gridItems = useMemo(() => {\n\t\tlet inputCards = riverCards;\n\n\t\tif (riverContentState === \"NONE\") {\n\t\t\treturn [];\n\t\t}\n\n\t\tif (riverContentState !== \"ALL\") {\n\t\t\tif (riverContentState === \"QAS\") {\n\t\t\t\tinputCards = riverCards.filter((config) => config.type === \"Q-A\");\n\t\t\t}\n\t\t\tif (riverContentState === \"NOTES\") {\n\t\t\t\tinputCards = riverCards.filter((config) => config.type === \"Note\");\n\t\t\t}\n\t\t}\n\t\t//TODO-NICE: optimize this waste, move this out of the memo as it changes more rapidly\n\t\tif (contentFilter !== \"\")\n\t\t\tinputCards = inputCards.filter((card) => {\n\t\t\t\tswitch (card.type) {\n\t\t\t\t\tcase \"Note\":\n\t\t\t\t\t\treturn noteContainsContentFilter(card as NoteConfig, contentFilter);\n\t\t\t\t\tcase \"Q-A\":\n\t\t\t\t\t\treturn qaContainsContentFilter(card as QAConfig, contentFilter);\n\t\t\t\t}\n\t\t\t\treturn false;\n\t\t\t});\n\n\t\treturn toCardGridItemsWithDividers(inputCards, riverID);\n\t}, [riverCards, riverID, riverContentState, contentFilter]);\n\n\treturn <CardRiverAccordion riverID={riverID} gridItems={gridItems} summary={riverID}></CardRiverAccordion>;\n};\n","import { CardID } from \"../cards/model/model\";\nimport { CardField } from \"../cards/model/model-content\";\n\nexport type RiverMakeUp = { riverID: string; cardIDs: CardID[] };\n\nexport type RiverMakeUps = { [riverID: string]: RiverMakeUp };\n\nexport type RiverShowState = \"SHOW\" | \"HIDE\";\n\nexport type RiverContentState = \"ALL\" | \"NOTES\" | \"QAS\" | \"NONE\";\n\n//TODO-NICE: rename pushto/active river\n\nexport type ContentFilter = string;\n\nexport type CardRiverState = {\n\triverMakeUps: RiverMakeUps;\n\tactiveRiverMakeUpID: string;\n\tpushToRiverID: string;\n\tlastRiverIDNumber: number;\n\t// show/hide river\n\triverShowState: RiverShowState;\n\t// filter content\n\triverContentState: RiverContentState;\n\t// this is used to determine which card should be highlighted in reaction to hovering over it in the context-menu\n\thighlightedCardID: null | CardID;\n\thighlightedCardField: null | CardField;\n\tcontentFilter: ContentFilter | \"\";\n};\n\nexport const pageNumberToRiverMakeUpID = (page: number) => \"CardRiver \" + page;\n\nexport const riverMakeUpIDToPageNumber = (riverID: string) => parseInt(riverID.replace(\"CardRiver \", \"\"));\n","import { Grid } from \"@material-ui/core\";\nimport { useSelector } from \"react-redux\";\nimport { getRiverMakeUps } from \"../selectors\";\nimport React, { useRef, useEffect } from \"react\";\nimport cards from \"../../cards\";\nimport focus from \"../../focus\";\nimport display from \"../../display\";\nimport { incrementer } from \"../../../shared/utils\";\nimport { ChildCardRiver } from \"./CardRiver/ChildCardRiver\";\nimport { riverMakeUpIDToPageNumber } from \"../model\";\n\n//TODO-PREF: memoize Rivers (not necessary right now, because we just hide)\n\nexport const SummaryRiver = () => {\n\tconst displayFocus = useSelector(focus.selectors.getDisplayFocus);\n\tconst currentPage = useSelector(display.selectors.getCurrentPage);\n\tconst cardConfigs = useSelector(cards.selectors.getCards);\n\tconst riverMakeUps = Object.values(useSelector(getRiverMakeUps));\n\tconst focusRef = useRef<HTMLDivElement | null>(null);\n\n\t// the current-page river is scrolled into view\n\tuseEffect(() => {\n\t\tif (displayFocus === \"SUMMARY_RIVER\" && focusRef.current !== null) {\n\t\t\tconst boundingRect = (focusRef.current as HTMLDivElement).getBoundingClientRect();\n\t\t\t//TODO-NICE: 100 is just experience on 22', I assume that then the River is in the top row\n\t\t\t// we need to scroll to top otherwise it is covered by the AppBar\n\t\t\tif (boundingRect.y < 100) {\n\t\t\t\twindow.scrollTo({ top: 0, behavior: \"smooth\" });\n\t\t\t} else {\n\t\t\t\t(focusRef.current as HTMLDivElement).scrollIntoView({ behavior: \"smooth\", block: \"start\", inline: \"start\" });\n\t\t\t}\n\t\t}\n\t}, [displayFocus, currentPage]);\n\n\tconst increment = incrementer();\n\t//TODO-NICE: find way to make UI-text unselectable globally, maybe different focus? But might be unperformant\n\treturn (\n\t\t<Grid container justify=\"flex-start\" direction=\"row\" alignItems=\"stretch\" spacing={1}>\n\t\t\t{riverMakeUps.map((makeUp) =>\n\t\t\t\tmakeUp.cardIDs.length > 0 ? (\n\t\t\t\t\t<Grid\n\t\t\t\t\t\titem\n\t\t\t\t\t\tref={riverMakeUpIDToPageNumber(makeUp.riverID) === currentPage ? focusRef : null}\n\t\t\t\t\t\tkey={increment()}\n\t\t\t\t\t>\n\t\t\t\t\t\t<ChildCardRiver\n\t\t\t\t\t\t\triverID={makeUp.riverID}\n\t\t\t\t\t\t\triverCards={makeUp.cardIDs.map((id) => cardConfigs[id])}\n\t\t\t\t\t\t\tkey={increment()}\n\t\t\t\t\t\t></ChildCardRiver>\n\t\t\t\t\t</Grid>\n\t\t\t\t) : null\n\t\t\t)}\n\t\t</Grid>\n\t);\n};\n","import React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { getActiveRiverCards, getActiveRiverMakeUpID } from \"../selectors\";\nimport { ChildCardRiver } from \"./CardRiver/ChildCardRiver\";\n\n//TODO-NICE: selection in CardRiver should stay highlighted when the contextMenu opens?\n\n//TODO-NICE: contextMenu as permant element, maybe sidebar?\n//TODO-NICE: preview in ContextMenu of how selected string would be used\n\n//TODO-NICE: make River-View, where you can just see one card and can make it smaller? Maybe just button to zoom \"in\" / just seeing the current river\n//TODO-NICE: mark Origin-Span or maybe rect over whole page-section?\n//TODO-NICE: make reconciliation algorithm for origin when new PDF versions come out\n// (basically, just search the text, and if it is not in the same span, just move the span - expand page forward and backward then search there)\n\nexport const ActiveCardRiver = () => {\n\tconst riverID = useSelector(getActiveRiverMakeUpID);\n\tconst riverCards = useSelector(getActiveRiverCards);\n\n\treturn <ChildCardRiver riverID={riverID} riverCards={riverCards}></ChildCardRiver>;\n};\n","import { CardRiverState, RiverShowState, pageNumberToRiverMakeUpID, RiverMakeUp, RiverContentState } from \"./model\";\nimport { CardID, CardConfig } from \"../cards/model/model\";\nimport cards from \"../cards\";\nimport * as t from \"./actionTypes\";\nimport display from \"../display\";\nimport { ArchiveRiver } from \"../db/model\";\nimport db from \"../db\";\n\nconst initialState: CardRiverState = {\n\triverMakeUps: {\n\t\t[pageNumberToRiverMakeUpID(1)]: {\n\t\t\triverID: pageNumberToRiverMakeUpID(1),\n\t\t\tcardIDs: [\"2\", \"0\", \"1\"],\n\t\t},\n\t},\n\tpushToRiverID: pageNumberToRiverMakeUpID(1),\n\tactiveRiverMakeUpID: pageNumberToRiverMakeUpID(1),\n\tlastRiverIDNumber: 1,\n\triverShowState: \"SHOW\",\n\thighlightedCardID: null,\n\thighlightedCardField: null,\n\triverContentState: \"ALL\",\n\tcontentFilter: \"\",\n};\n\nconst emptyCardRiver = (page: number): RiverMakeUp => {\n\treturn {\n\t\triverID: pageNumberToRiverMakeUpID(page),\n\t\tcardIDs: [],\n\t};\n};\n\nconst updateStateWithMakeUps = (state: CardRiverState, ...makeUps: RiverMakeUp[]) => {\n\tconst updatedState = { ...state };\n\tmakeUps.forEach((makeUp) => {\n\t\tupdatedState.riverMakeUps[makeUp.riverID] = makeUp;\n\t});\n\treturn updatedState;\n};\n\nconst deactivateActiveCardRiver = (state: CardRiverState) => {\n\treturn { ...state.riverMakeUps[state.activeRiverMakeUpID], active: false };\n};\n\nconst removeCardFromRivers = (state: CardRiverState, cardID: CardID): CardRiverState => {\n\tconst riverMakeUps = Object.fromEntries(\n\t\tObject.entries(state.riverMakeUps).map((entry) => [\n\t\t\tentry[0],\n\t\t\t{ ...entry[1], cardIDs: entry[1].cardIDs.filter((id) => id !== cardID) },\n\t\t])\n\t);\n\treturn { ...state, riverMakeUps };\n};\n\nconst cardRiverState = (state = initialState, { type, payload }: { type: string; payload: any }): CardRiverState => {\n\tlet riverMakeUp;\n\tlet riverMakeUps;\n\tswitch (type) {\n\t\tcase display.actionTypes.PAGE_UPDATE:\n\t\t\tlet activeRiver;\n\t\t\tif (!state.riverMakeUps[pageNumberToRiverMakeUpID(payload as number)]) {\n\t\t\t\tactiveRiver = emptyCardRiver(payload as number);\n\t\t\t} else {\n\t\t\t\tactiveRiver = { ...state.riverMakeUps[pageNumberToRiverMakeUpID(payload as number)] };\n\t\t\t}\n\n\t\t\tconst oldRiver = deactivateActiveCardRiver(state);\n\n\t\t\treturn {\n\t\t\t\t...updateStateWithMakeUps(state, activeRiver, oldRiver),\n\t\t\t\tactiveRiverMakeUpID: activeRiver.riverID,\n\t\t\t\tpushToRiverID: activeRiver.riverID,\n\t\t\t};\n\n\t\tcase cards.actionTypes.CARD_PUSH:\n\t\t\triverMakeUp = {\n\t\t\t\t...state.riverMakeUps[state.pushToRiverID],\n\t\t\t\tcardIDs: [...state.riverMakeUps[state.pushToRiverID].cardIDs, (payload as CardConfig).cardID],\n\t\t\t};\n\t\t\triverMakeUps = { ...state.riverMakeUps };\n\t\t\triverMakeUps[state.pushToRiverID] = riverMakeUp;\n\n\t\t\treturn { ...state, riverMakeUps: riverMakeUps };\n\t\tcase cards.actionTypes.CARD_REMOVE:\n\t\t\treturn removeCardFromRivers(state, payload as string);\n\t\tcase t.RIVER_SHOW_STATE:\n\t\t\treturn { ...state, riverShowState: payload as RiverShowState };\n\t\tcase t.RIVER_CONTENT_STATE:\n\t\t\treturn { ...state, riverContentState: payload as RiverContentState };\n\t\tcase t.RIVER_PUSH_STATE:\n\t\t\treturn { ...state, pushToRiverID: payload };\n\t\tcase t.RIVER_HOVERED_CARD:\n\t\t\treturn { ...state, highlightedCardID: payload.id, highlightedCardField: payload.field };\n\t\tcase db.actionTypes.DOCUMENT_CHANGE:\n\t\t\tif (payload) {\n\t\t\t\treturn {\n\t\t\t\t\t...initialState,\n\t\t\t\t\triverMakeUps: (payload as ArchiveRiver).riverMakeUps,\n\t\t\t\t\tactiveRiverMakeUpID: (payload as ArchiveRiver).activeRiverMakeUpID,\n\t\t\t\t\tpushToRiverID: (payload as ArchiveRiver).pushToRiverID,\n\t\t\t\t\tlastRiverIDNumber: (payload as ArchiveRiver).lastRiverIDNumber,\n\t\t\t\t};\n\t\t\t} else {\n\t\t\t\treturn initialState;\n\t\t\t}\n\t\tcase db.actionTypes.LOAD_DOCUMENT_DATA_SETS:\n\t\t\t// basically the same as DOCUMENT_CHANGE, just only triggered\n\t\t\t//when uploading data that corresponds to current document\n\t\t\t// and if not, we dont reset\n\t\t\tif (payload.newActiveDataSet) {\n\t\t\t\treturn {\n\t\t\t\t\t...initialState,\n\t\t\t\t\triverMakeUps: (payload.newActiveDataSet as ArchiveRiver).riverMakeUps,\n\t\t\t\t\tactiveRiverMakeUpID: (payload.newActiveDataSet as ArchiveRiver).activeRiverMakeUpID,\n\t\t\t\t\tpushToRiverID: (payload.newActiveDataSet as ArchiveRiver).pushToRiverID,\n\t\t\t\t\tlastRiverIDNumber: (payload.newActiveDataSet as ArchiveRiver).lastRiverIDNumber,\n\t\t\t\t};\n\t\t\t} else {\n\t\t\t\treturn state;\n\t\t\t}\n\t\tcase t.RIVER_CONTENT_FILTER:\n\t\t\treturn { ...state, contentFilter: payload };\n\t\tdefault:\n\t\t\treturn state;\n\t}\n};\n\nexport default cardRiverState;\n","import * as constants from \"./constants\";\nimport * as components from \"./components\";\nimport reducer from \"./reducer\";\nimport * as selectors from \"./selectors\";\nimport * as actions from \"./actions\";\n\nexport default { constants, components, reducer, selectors, actions };\n","import { createSelector } from \"reselect\";\nimport display from \"../display\";\nimport river from \"../river\";\nimport cards from \"../cards\";\nimport { DocumentData } from \"../db/model\";\n\nexport const collectCurrentDBData: (state: any) => DocumentData | null = createSelector(\n\tdisplay.selectors.getPDFName,\n\tdisplay.selectors.getTotalPages,\n\tdisplay.selectors.getCurrentPage,\n\triver.selectors.getRiverMakeUps,\n\triver.selectors.getActiveRiverMakeUpID,\n\triver.selectors.getPushToRiver,\n\triver.selectors.getLastRiverIDNumber,\n\tcards.selectors.getCards,\n\tcards.selectors.getLastCardIDNumber,\n\t(\n\t\tpdfName,\n\t\ttotalPages,\n\t\tcurrentPage,\n\t\triverMakeUps,\n\t\tactiveRiverMakeUpID,\n\t\tpushToRiverID,\n\t\tlastRiverIDNumber,\n\t\tcards,\n\t\tlastCardIDNumber\n\t) => {\n\t\treturn {\n\t\t\tname: pdfName as string,\n\t\t\ttotalPages,\n\t\t\tcurrentPage,\n\t\t\triverMakeUps,\n\t\t\tactiveRiverMakeUpID,\n\t\t\tpushToRiverID,\n\t\t\tlastRiverIDNumber,\n\t\t\tcards,\n\t\t\tlastCardIDNumber,\n\t\t};\n\t}\n);\n","import { Dispatch } from \"redux\";\nimport display from \"../display\";\nimport { ActionCreators } from \"redux-undo\";\nimport db from \"../db\";\nimport { collectCurrentDBData } from \"./selectors\";\nimport { DocumentData } from \"../db/model\";\n\nexport const archiveCurrentDBData = () => {\n\treturn (dispatch: Dispatch, getState: Function) => {\n\t\tconst state = getState();\n\t\tconst currentPDFName = display.selectors.getPDFName(state);\n\n\t\tif (currentPDFName !== undefined) {\n\t\t\tconst dbData = collectCurrentDBData(state) as DocumentData;\n\t\t\tdispatch(db.actions.archiveDBData(dbData));\n\t\t}\n\t};\n};\n\nconst fileDownload = require(\"js-file-download\");\nexport const downloadDBData = () => {\n\treturn (dispatch: any, getState: Function) => {\n\t\t//actualize the db before downloading\n\t\tdispatch(archiveCurrentDBData());\n\n\t\tconst documentDataSets = db.selectors.getDocumentDataSets(getState());\n\t\tconst localString = new Date().toLocaleString();\n\t\tfileDownload(JSON.stringify(documentDataSets), localString + \" ClayMemory.txt\");\n\t};\n};\n\nexport const changeDocument = (pdf: File) => {\n\treturn (dispatch: Dispatch, getState: Function) => {\n\t\tconst newPDFName = pdf.name;\n\n\t\tconst state = getState();\n\t\tconst currentPDFName = display.selectors.getPDFName(state);\n\n\t\tconst documentDB = db.selectors.getDocumentDB(state);\n\n\t\t// save current data only if pdf has been uploaded / there is an active document\n\t\tif (currentPDFName !== undefined) {\n\t\t\tconst dbData = collectCurrentDBData(state) as DocumentData;\n\t\t\tdispatch(db.actions.archiveDBData(dbData));\n\t\t}\n\n\t\tdispatch(display.actions.pdfUpload(pdf));\n\n\t\t// if the uploaded pdf is the same as the active one, then we just reloaded the app (lost the pdf)\n\t\t// and dont need load data (loading data would lead to overwrite because of the syncing order)\n\t\t//TODO-NICE: make the sync between documentDB and active document for explicit, right now I just sync when a PDF is uploaded\n\t\tif (newPDFName === currentPDFName) {\n\t\t\treturn;\n\t\t}\n\t\t// load new data or reset\n\t\tconst newDocumentData = documentDB[newPDFName];\n\t\tif (newDocumentData) {\n\t\t\tdispatch({ type: db.actionTypes.DOCUMENT_CHANGE, payload: newDocumentData });\n\t\t} else {\n\t\t\tdispatch({ type: db.actionTypes.DOCUMENT_CHANGE });\n\t\t}\n\n\t\t// no undo-redo across documents\n\t\tdispatch(ActionCreators.clearHistory());\n\t};\n};\n\n//TODO-NICE: remove save redundancy\nexport const loadSavedDocument = (document: string) => {\n\treturn (dispatch: Dispatch, getState: Function) => {\n\t\tconst state = getState();\n\t\tconst currentPDFName = display.selectors.getPDFName(state);\n\n\t\tconst documentDB = db.selectors.getDocumentDB(state);\n\n\t\t// save current data only if pdf has been uploaded / there is an active document\n\t\tif (currentPDFName !== undefined) {\n\t\t\tconst dbData = collectCurrentDBData(state) as DocumentData;\n\t\t\tdispatch(db.actions.archiveDBData(dbData));\n\t\t}\n\n\t\t// load new data\n\t\tconst newDocumentData = documentDB[document];\n\t\tdispatch({ type: db.actionTypes.DOCUMENT_CHANGE, payload: newDocumentData });\n\n\t\t// no undo-redo across documents\n\t\tdispatch(ActionCreators.clearHistory());\n\t};\n};\n","import { useDispatch } from \"react-redux\";\nimport React, { useState } from \"react\";\nimport {\n\tIconButton,\n\tTooltip,\n\tDialog,\n\tDialogTitle,\n\tDialogContent,\n\tDialogContentText,\n\tDialogActions,\n\tButton,\n} from \"@material-ui/core\";\nimport display from \"../../../display\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport text from \"../../../text\";\n\nconst DeleteDocumentDialogAlert = ({\n\tdocument,\n\thandleClose,\n\topen,\n}: {\n\tdocument: string;\n\thandleClose: () => void;\n\topen: boolean;\n}) => {\n\tconst dispatch = useDispatch();\n\n\treturn (\n\t\t<Dialog\n\t\t\topen={open}\n\t\t\tonClose={handleClose}\n\t\t\taria-labelledby=\"alert-dialog-title\"\n\t\t\taria-describedby=\"alert-dialog-description\"\n\t\t>\n\t\t\t<DialogTitle id=\"alert-dialog-title\">{\"Delete \" + document + \" and all associated card data?\"}</DialogTitle>\n\t\t\t<DialogContent>\n\t\t\t\t<DialogContentText id=\"alert-dialog-description\">This change can not be undone.</DialogContentText>\n\t\t\t</DialogContent>\n\t\t\t<DialogActions>\n\t\t\t\t<Button onClick={handleClose} color=\"primary\">\n\t\t\t\t\tAbort\n\t\t\t\t</Button>\n\t\t\t\t<Button\n\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\tdispatch(display.actions.deleteDocument(document));\n\t\t\t\t\t\thandleClose();\n\t\t\t\t\t}}\n\t\t\t\t\tcolor=\"primary\"\n\t\t\t\t\tautoFocus\n\t\t\t\t>\n\t\t\t\t\tDelete document and associated card data\n\t\t\t\t</Button>\n\t\t\t</DialogActions>\n\t\t</Dialog>\n\t);\n};\n\n//TODO-NICE: deleting the active document leads only to reset it, not really delete it\nexport const DeleteDocumentButton = ({ document }: { document: string }) => {\n\tconst [open, setOpen] = useState(false);\n\n\tconst handleClose = () => {\n\t\tsetOpen(false);\n\t};\n\treturn (\n\t\t<div>\n\t\t\t<Tooltip\n\t\t\t\ttitle={text.constants.deleteDocumentTooltip}\n\t\t\t\tenterDelay={text.constants.defaultEnterDelay}\n\t\t\t\tenterNextDelay={text.constants.defaultEnterNextDelay}\n\t\t\t>\n\t\t\t\t<IconButton\n\t\t\t\t\ttype=\"button\"\n\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\tsetOpen(true);\n\t\t\t\t\t}}\n\t\t\t\t>\n\t\t\t\t\t<DeleteIcon fontSize=\"small\"></DeleteIcon>\n\t\t\t\t</IconButton>\n\t\t\t</Tooltip>\n\t\t\t<DeleteDocumentDialogAlert document={document} open={open} handleClose={handleClose}></DeleteDocumentDialogAlert>\n\t\t</div>\n\t);\n};\n","import { useSelector, useDispatch } from \"react-redux\";\nimport React, { ChangeEvent, Fragment, useRef, MutableRefObject } from \"react\";\nimport { MenuItem, Button } from \"@material-ui/core\";\nimport display from \"../../../display\";\nimport db from \"../../../db\";\nimport { DocumentData } from \"../../../db/model\";\nimport PublishIcon from \"@material-ui/icons/Publish\";\n\nexport const InputDataSets = ({ handleClose, label }: any) => {\n\tconst dispatch = useDispatch();\n\n\tconst activeDocument = useSelector(display.selectors.getPDFName);\n\n\tconst ref: MutableRefObject<null | HTMLInputElement> = useRef(null);\n\n\treturn (\n\t\t<Fragment>\n\t\t\t<MenuItem\n\t\t\t\tonClick={() => {\n\t\t\t\t\t(ref.current as HTMLInputElement).click();\n\t\t\t\t}}\n\t\t\t>\n\t\t\t\t<Button variant=\"contained\" color=\"primary\" disableElevation startIcon={<PublishIcon></PublishIcon>}>\n\t\t\t\t\t{label}\n\t\t\t\t</Button>\n\t\t\t</MenuItem>\n\t\t\t<input\n\t\t\t\tref={ref}\n\t\t\t\tstyle={{ display: \"none\" }}\n\t\t\t\tonChange={(event: ChangeEvent<HTMLInputElement>) => {\n\t\t\t\t\t// fun fact: uploading a file with the same file-name does not trigger this event\n\t\t\t\t\tconst files = event.target.files;\n\t\t\t\t\tconst file = files ? files[0] : null;\n\t\t\t\t\tif (file) {\n\t\t\t\t\t\tconst reader = new FileReader();\n\t\t\t\t\t\treader.readAsText(file);\n\t\t\t\t\t\treader.onload = () => {\n\t\t\t\t\t\t\t//TODO-NICE: sanitize, escape os new line difference, prepare multimedia cards\n\t\t\t\t\t\t\t//TODO-NICE: merge same name-pdfs and think about collision in general\n\t\t\t\t\t\t\t//TODO-NICE: merge uploaded state with current-one and dont overwrite\n\t\t\t\t\t\t\tconst uploadedDataSets = JSON.parse(reader.result as string);\n\t\t\t\t\t\t\t// if the uploaded dataset corresponds to the current document, overwrite current with uploaded\n\t\t\t\t\t\t\tconst foundDataSet = (uploadedDataSets as DocumentData[]).find(\n\t\t\t\t\t\t\t\t(dbData) => dbData.name === activeDocument\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\tdispatch(db.actions.loadDocumentDataSets(uploadedDataSets, foundDataSet));\n\t\t\t\t\t\t};\n\t\t\t\t\t}\n\t\t\t\t\thandleClose();\n\t\t\t\t}}\n\t\t\t\ttype=\"file\"\n\t\t\t\taccept=\".txt\"\n\t\t\t/>\n\t\t</Fragment>\n\t);\n};\n","import { useDispatch } from \"react-redux\";\nimport React, { ChangeEvent, Fragment, useRef, MutableRefObject } from \"react\";\nimport { MenuItem, Button } from \"@material-ui/core\";\nimport { changeDocument } from \"../../actions\";\nimport InsertDriveFileIcon from \"@material-ui/icons/InsertDriveFile\";\n//TODO-NICE: have way to merge two document-workspaces\nexport const InputDocument = ({ handleClose, label }: any) => {\n\tconst dispatch = useDispatch();\n\n\tconst ref: MutableRefObject<null | HTMLInputElement> = useRef(null);\n\n\treturn (\n\t\t<Fragment>\n\t\t\t<MenuItem\n\t\t\t\tonClick={() => {\n\t\t\t\t\t(ref.current as HTMLInputElement).click();\n\t\t\t\t}}\n\t\t\t>\n\t\t\t\t<Button\n\t\t\t\t\tvariant=\"contained\"\n\t\t\t\t\tcolor=\"primary\"\n\t\t\t\t\tdisableElevation\n\t\t\t\t\tstartIcon={<InsertDriveFileIcon></InsertDriveFileIcon>}\n\t\t\t\t>\n\t\t\t\t\t{label}\n\t\t\t\t</Button>\n\t\t\t</MenuItem>\n\t\t\t<input\n\t\t\t\tref={ref}\n\t\t\t\tstyle={{ display: \"none\" }}\n\t\t\t\tonChange={(event: ChangeEvent<HTMLInputElement>) => {\n\t\t\t\t\tconst files = event.target.files;\n\t\t\t\t\tconst pdf = files ? files[0] : null;\n\t\t\t\t\tif (pdf) {\n\t\t\t\t\t\tdispatch(changeDocument(pdf));\n\t\t\t\t\t}\n\t\t\t\t\thandleClose();\n\t\t\t\t}}\n\t\t\t\ttype=\"file\"\n\t\t\t\taccept=\".pdf\"\n\t\t\t/>\n\t\t</Fragment>\n\t);\n};\n","import { useDispatch } from \"react-redux\";\nimport React from \"react\";\nimport { IconButton, Tooltip } from \"@material-ui/core\";\nimport ImportContactsIcon from \"@material-ui/icons/ImportContacts\";\nimport { loadSavedDocument } from \"../../actions\";\nimport text from \"../../../text\";\nexport const LoadDocumentDataButton = ({ document }: { document: string }) => {\n\tconst dispatch = useDispatch();\n\treturn (\n\t\t<Tooltip\n\t\t\ttitle={text.constants.loadSavedDocumentTooltip}\n\t\t\tenterDelay={text.constants.defaultEnterDelay}\n\t\t\tenterNextDelay={text.constants.defaultEnterNextDelay}\n\t\t>\n\t\t\t<IconButton\n\t\t\t\ttype=\"button\"\n\t\t\t\tonClick={() => {\n\t\t\t\t\tdispatch(loadSavedDocument(document));\n\t\t\t\t}}\n\t\t\t>\n\t\t\t\t<ImportContactsIcon fontSize=\"small\"></ImportContactsIcon>\n\t\t\t</IconButton>\n\t\t</Tooltip>\n\t);\n};\n","import React from \"react\";\nimport { Divider, Card, Grid } from \"@material-ui/core\";\nimport { DeleteDocumentButton } from \"./DeleteDocumentButton\";\nimport { LoadDocumentDataButton } from \"./LoadDocumentDataButton\";\n\nconst DocumentOptionItemButtonRow = ({ document }: { document: string }) => {\n\treturn (\n\t\t<Grid container direction=\"row\">\n\t\t\t<Grid item>\n\t\t\t\t<LoadDocumentDataButton document={document}></LoadDocumentDataButton>\n\t\t\t</Grid>\n\n\t\t\t<Grid item>\n\t\t\t\t<Divider orientation=\"vertical\"></Divider>\n\t\t\t</Grid>\n\n\t\t\t<Grid item>\n\t\t\t\t<DeleteDocumentButton document={document}></DeleteDocumentButton>\n\t\t\t</Grid>\n\t\t</Grid>\n\t);\n};\n\nexport const DocumentOptionItem = ({ document }: { document: string }) => {\n\treturn (\n\t\t<Grid container direction=\"row\" justify=\"space-between\" alignItems=\"center\" spacing={1}>\n\t\t\t<Grid item>{document.replace(\".pdf\", \"\")}</Grid>\n\n\t\t\t<Grid item>\n\t\t\t\t<Card variant=\"outlined\">\n\t\t\t\t\t<DocumentOptionItemButtonRow document={document}></DocumentOptionItemButtonRow>\n\t\t\t\t</Card>\n\t\t\t</Grid>\n\t\t</Grid>\n\t);\n};\n","import { useSelector, useDispatch } from \"react-redux\";\nimport React from \"react\";\nimport { Divider, Menu, MenuItem, IconButton, Typography, Card, Button, Grid } from \"@material-ui/core\";\nimport { downloadDBData } from \"../../actions\";\nimport MoreVertIcon from \"@material-ui/icons/MoreVert\";\nimport display from \"../../../display\";\nimport db from \"../../../db\";\nimport GetAppIcon from \"@material-ui/icons/GetApp\";\nimport { DeleteDocumentButton } from \"./DeleteDocumentButton\";\nimport text from \"../../../text\";\nimport { incrementer } from \"../../../../shared/utils\";\nimport { InputDataSets } from \"./InputDataSets\";\nimport { InputDocument } from \"./InputDocument\";\nimport { DocumentOptionItem } from \"./DocumentOptionItem\";\n\nconst ActiveDocumentOptionItem = ({ document }: { document: string }) => {\n\treturn (\n\t\t<Grid container direction=\"row\" justify=\"space-between\" alignItems=\"center\" spacing={1}>\n\t\t\t<Grid item>{document.replace(\".pdf\", \"\")}</Grid>\n\n\t\t\t<Grid item>\n\t\t\t\t<Card variant=\"outlined\">\n\t\t\t\t\t<DeleteDocumentButton document={document}></DeleteDocumentButton>\n\t\t\t\t</Card>\n\t\t\t</Grid>\n\t\t</Grid>\n\t);\n};\n\nexport const Options = () => {\n\tconst activeDocument = useSelector(display.selectors.getPDFName);\n\tconst documents = useSelector(db.selectors.getDocumentNames).filter((doc) => doc !== activeDocument);\n\n\tconst [anchorEl, setAnchorEl] = React.useState<null | HTMLElement>(null);\n\n\tconst handleClick = (event: React.MouseEvent<HTMLButtonElement>) => {\n\t\tsetAnchorEl(event.currentTarget);\n\t};\n\n\tconst handleClose = () => {\n\t\tsetAnchorEl(null);\n\t};\n\n\tconst dispatch = useDispatch();\n\n\tconst increment = incrementer();\n\n\treturn (\n\t\t<div>\n\t\t\t<IconButton type=\"button\" onClick={handleClick}>\n\t\t\t\t<MoreVertIcon></MoreVertIcon>\n\t\t\t</IconButton>\n\t\t\t<Menu\n\t\t\t\tid=\"simple-menu\"\n\t\t\t\tanchorEl={anchorEl}\n\t\t\t\tkeepMounted\n\t\t\t\topen={Boolean(anchorEl)}\n\t\t\t\tonClose={handleClose}\n\t\t\t\tMenuListProps={{ style: { paddingLeft: \"8px\", paddingRight: \"8px\" } }}\n\t\t\t>\n\t\t\t\t{activeDocument && [\n\t\t\t\t\t<Typography key={increment()} component={\"span\"} variant=\"h6\">\n\t\t\t\t\t\t{text.constants.activeDocumentText}\n\t\t\t\t\t</Typography>,\n\t\t\t\t\t<ActiveDocumentOptionItem key={increment()} document={activeDocument}></ActiveDocumentOptionItem>,\n\t\t\t\t\t<Divider key={increment()} style={{ marginTop: \"6px\" }}></Divider>,\n\t\t\t\t]}\n\t\t\t\t{documents.length > 0 && [\n\t\t\t\t\t<Typography key={increment()} component={\"span\"} variant=\"h6\">\n\t\t\t\t\t\t{text.constants.existingDataText}\n\t\t\t\t\t</Typography>,\n\t\t\t\t\t<Typography key={increment()} component={\"span\"}>\n\t\t\t\t\t\t<ul style={{ listStyleType: \"square\" }}>\n\t\t\t\t\t\t\t{documents.map((document) =>\n\t\t\t\t\t\t\t\tdocument ? (\n\t\t\t\t\t\t\t\t\t<li key={increment()}>\n\t\t\t\t\t\t\t\t\t\t<DocumentOptionItem document={document} key={increment()}></DocumentOptionItem>\n\t\t\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t\t\t) : null\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t</ul>\n\t\t\t\t\t</Typography>,\n\t\t\t\t\t<Divider key={increment()} style={{ marginTop: \"6px\" }} />,\n\t\t\t\t]}\n\t\t\t\t<InputDocument handleClose={handleClose} label={\"Load document\"}></InputDocument>\n\t\t\t\t<Divider />\n\t\t\t\t<MenuItem\n\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\tdispatch(downloadDBData());\n\t\t\t\t\t\thandleClose();\n\t\t\t\t\t}}\n\t\t\t\t>\n\t\t\t\t\t<Button variant=\"contained\" color=\"primary\" disableElevation startIcon={<GetAppIcon></GetAppIcon>}>\n\t\t\t\t\t\t{text.constants.downloadDatasetsText}\n\t\t\t\t\t</Button>\n\t\t\t\t</MenuItem>\n\t\t\t\t<Divider />\n\t\t\t\t<InputDataSets handleClose={handleClose} label={text.constants.uploadDatasetsText}></InputDataSets>\n\t\t\t</Menu>\n\t\t</div>\n\t);\n};\n","import React, { useState } from \"react\";\nimport SearchBar from \"material-ui-search-bar\";\nimport river from \"../../river\";\nimport { useDispatch, useSelector } from \"react-redux\";\n\n//TODO-RC: make search for PDF (right now this would need some work to find the correct text-node and partially color it)\n// https://github.com/wojtekmaj/react-pdf/issues/212\nexport const CardSearchBar = () => {\n\tconst dispatch = useDispatch();\n\tconst contentFilter = useSelector(river.selectors.getRiverContentFilter);\n\tconst [state, setState] = useState(contentFilter);\n\n\t//TODO-NICE: search in other rivers/same river when composing to show similar cards (like in the Anki Addon)\n\t//TODO-NICE: change the color / border or something to indicate when a filter is active\n\treturn (\n\t\t<SearchBar\n\t\t\tvalue={state}\n\t\t\tplaceholder=\"Search in cards\"\n\t\t\tonChange={(newValue) => {\n\t\t\t\t// auto-reset on empty\n\t\t\t\tif (newValue === \"\") dispatch(river.actions.resetContentFilter());\n\t\t\t\tsetState(newValue);\n\t\t\t}}\n\t\t\tonCancelSearch={() => {\n\t\t\t\tdispatch(river.actions.resetContentFilter());\n\t\t\t}}\n\t\t\tonRequestSearch={() => dispatch(river.actions.setContentFilter(state))}\n\t\t/>\n\t);\n};\n","import React from \"react\";\nimport { IconButton, Card, Divider, Grid, Tooltip } from \"@material-ui/core\";\nimport { useDispatch } from \"react-redux\";\nimport UndoIcon from \"@material-ui/icons/Undo\";\nimport RedoIcon from \"@material-ui/icons/Redo\";\nimport { ActionCreators } from \"redux-undo\";\nimport text from \"../../text\";\n\n//TODO-NICE: disable undo/redo buttons if no undo/redo possible, tried custom hook but didnt work,\n// need to check all store-objects which have future/past because they have different undo/redo\n\n// we support undo/redo instead of lengthy confirmation (see The Humane Interface)\nconst UndoButton = () => {\n\tconst dispatch = useDispatch();\n\n\t//tooltip needs non-disabled child component\n\treturn (\n\t\t<Tooltip\n\t\t\ttitle={text.constants.undoTooltip}\n\t\t\tenterDelay={text.constants.defaultEnterDelay}\n\t\t\tenterNextDelay={text.constants.defaultEnterNextDelay}\n\t\t>\n\t\t\t<span>\n\t\t\t\t<IconButton\n\t\t\t\t\ttype=\"button\"\n\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\tdispatch(ActionCreators.undo());\n\t\t\t\t\t}}\n\t\t\t\t>\n\t\t\t\t\t<UndoIcon></UndoIcon>\n\t\t\t\t</IconButton>\n\t\t\t</span>\n\t\t</Tooltip>\n\t);\n};\nconst RedoButton = () => {\n\tconst dispatch = useDispatch();\n\treturn (\n\t\t<Tooltip\n\t\t\ttitle={text.constants.redoTooltip}\n\t\t\tenterDelay={text.constants.defaultEnterDelay}\n\t\t\tenterNextDelay={text.constants.defaultEnterNextDelay}\n\t\t>\n\t\t\t<IconButton\n\t\t\t\ttype=\"button\"\n\t\t\t\tonClick={() => {\n\t\t\t\t\tdispatch(ActionCreators.redo());\n\t\t\t\t}}\n\t\t\t>\n\t\t\t\t<RedoIcon></RedoIcon>\n\t\t\t</IconButton>\n\t\t</Tooltip>\n\t);\n};\n\nexport const UndoRedoCard = () => {\n\treturn (\n\t\t<Card variant=\"outlined\">\n\t\t\t<Grid container direction=\"row\">\n\t\t\t\t<Grid item>\n\t\t\t\t\t<UndoButton></UndoButton>\n\t\t\t\t</Grid>\n\t\t\t\t<Grid item>\n\t\t\t\t\t<Divider orientation=\"vertical\"></Divider>\n\t\t\t\t</Grid>\n\t\t\t\t<Grid item>\n\t\t\t\t\t<RedoButton></RedoButton>\n\t\t\t\t</Grid>\n\t\t\t</Grid>\n\t\t</Card>\n\t);\n};\n","import display from \"../../display\";\nimport focus from \"../../focus\";\nimport river from \"../../river\";\nimport React from \"react\";\nimport { IconButton, Menu, FormControlLabel, Typography, Divider, Grid } from \"@material-ui/core\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport VisibilityIcon from \"@material-ui/icons/Visibility\";\nimport { GreenCheckbox } from \"../../../shared/GreenCheckbox\";\n\nconst ShowRiverCheckbox = () => {\n\tconst dispatch = useDispatch();\n\tconst riverShowState = useSelector(river.selectors.getRiverShowState);\n\n\treturn (\n\t\t<FormControlLabel\n\t\t\tcontrol={\n\t\t\t\t<GreenCheckbox\n\t\t\t\t\tchecked={riverShowState === \"SHOW\"}\n\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\tdispatch(river.actions.toggleRiverShowState());\n\t\t\t\t\t}}\n\t\t\t\t/>\n\t\t\t}\n\t\t\tlabel=\"River\"\n\t\t/>\n\t);\n};\n\nconst ShowMaterialCheckbox = () => {\n\tconst dispatch = useDispatch();\n\tconst displayShowState = useSelector(display.selectors.getDisplayStatus);\n\n\treturn (\n\t\t<FormControlLabel\n\t\t\tcontrol={\n\t\t\t\t<GreenCheckbox\n\t\t\t\t\tchecked={displayShowState === \"SHOW\"}\n\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\tdispatch(display.actions.toggleDisplayState());\n\t\t\t\t\t}}\n\t\t\t\t/>\n\t\t\t}\n\t\t\tlabel=\"Material\"\n\t\t/>\n\t);\n};\n\nexport const ShowHideButton = () => {\n\tconst [anchorEl, setAnchorEl] = React.useState<null | HTMLElement>(null);\n\n\tconst handleClick = (event: React.MouseEvent<HTMLButtonElement>) => {\n\t\tsetAnchorEl(event.currentTarget);\n\t};\n\n\tconst handleClose = () => {\n\t\tsetAnchorEl(null);\n\t};\n\n\tconst displayFocus = useSelector(focus.selectors.getDisplayFocus);\n\n\treturn (\n\t\t<div>\n\t\t\t<IconButton type=\"button\" onClick={handleClick}>\n\t\t\t\t<VisibilityIcon></VisibilityIcon>\n\t\t\t</IconButton>\n\t\t\t<Menu anchorEl={anchorEl} keepMounted open={Boolean(anchorEl)} onClose={handleClose}>\n\t\t\t\t<Typography>Show:</Typography>\n\t\t\t\t<Divider></Divider>\n\t\t\t\t<Grid container direction=\"row\">\n\t\t\t\t\t<Grid item>\n\t\t\t\t\t\t<river.components.RiverContentFormGroup></river.components.RiverContentFormGroup>\n\t\t\t\t\t</Grid>\n\t\t\t\t\t<Grid item>\n\t\t\t\t\t\t<Divider orientation=\"vertical\"></Divider>\n\t\t\t\t\t</Grid>\n\t\t\t\t\t<Grid item>\n\t\t\t\t\t\t{displayFocus === \"ACTIVE_RIVER\" && (\n\t\t\t\t\t\t\t<Grid container direction=\"column\">\n\t\t\t\t\t\t\t\t<Grid item>\n\t\t\t\t\t\t\t\t\t<ShowRiverCheckbox></ShowRiverCheckbox>\n\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t\t<Grid item>\n\t\t\t\t\t\t\t\t\t<ShowMaterialCheckbox></ShowMaterialCheckbox>\n\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t)}\n\t\t\t\t\t</Grid>\n\t\t\t\t</Grid>\n\t\t\t</Menu>\n\t\t</div>\n\t);\n};\n","import React, { ChangeEvent } from \"react\";\nimport { Tabs, Tab, Card, Tooltip } from \"@material-ui/core\";\nimport text from \"../../text\";\nimport focus from \"../../focus\";\n\nimport { useDispatch, useSelector } from \"react-redux\";\n\nexport const ViewTabs = () => {\n\tconst dispatch = useDispatch();\n\tconst displayFocus = useSelector(focus.selectors.getDisplayFocus);\n\n\tconst value = displayFocus === \"ACTIVE_RIVER\" ? 0 : 1;\n\n\tconst handleChange = (_: ChangeEvent<{}>, newValue: number) => {\n\t\tdispatch(\n\t\t\tnewValue === 0\n\t\t\t\t? focus.actions.updateDisplayFocus(\"ACTIVE_RIVER\")\n\t\t\t\t: focus.actions.updateDisplayFocus(\"SUMMARY_RIVER\")\n\t\t);\n\t};\n\n\treturn (\n\t\t<Card variant=\"outlined\">\n\t\t\t<Tabs value={value} onChange={handleChange}>\n\t\t\t\t<Tab\n\t\t\t\t\tlabel={\n\t\t\t\t\t\t<Tooltip\n\t\t\t\t\t\t\ttitle={text.constants.switchToActiveRiverTooltip}\n\t\t\t\t\t\t\tenterDelay={text.constants.defaultEnterDelay}\n\t\t\t\t\t\t\tenterNextDelay={500}\n\t\t\t\t\t\t\tdisableFocusListener={true}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<span>ActiveRiver</span>\n\t\t\t\t\t\t</Tooltip>\n\t\t\t\t\t}\n\t\t\t\t></Tab>\n\t\t\t\t<Tab\n\t\t\t\t\tlabel={\n\t\t\t\t\t\t<Tooltip\n\t\t\t\t\t\t\ttitle={text.constants.switchToSummaryRiverTooltip}\n\t\t\t\t\t\t\tenterDelay={text.constants.defaultEnterDelay}\n\t\t\t\t\t\t\tenterNextDelay={500}\n\t\t\t\t\t\t\tdisableFocusListener={true}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<span>SummaryRiver</span>\n\t\t\t\t\t\t</Tooltip>\n\t\t\t\t\t}\n\t\t\t\t/>\n\t\t\t</Tabs>\n\t\t</Card>\n\t);\n};\n","import display from \"../../display\";\nimport React from \"react\";\nimport { AppBar, Toolbar, Grid, Typography } from \"@material-ui/core\";\nimport { useSelector } from \"react-redux\";\nimport { Options } from \"./Options/Options\";\nimport { CardSearchBar } from \"./CardSearchBar\";\nimport { UndoRedoCard } from \"./UndoRedoButtons\";\nimport { ShowHideButton } from \"./ShowHideButton\";\nimport { ViewTabs } from \"./ViewTabs\";\n\n//TODO-NICE: download/load csv for Anki\nexport const ControlBar = () => {\n\tconst materialName = useSelector(display.selectors.getPDFName);\n\n\treturn (\n\t\t<Grid item>\n\t\t\t<display.components.PageKeyboardControl>\n\t\t\t\t<AppBar>\n\t\t\t\t\t<Toolbar variant=\"regular\">\n\t\t\t\t\t\t<Grid item>\n\t\t\t\t\t\t\t<Grid container spacing={1} direction=\"row\" alignItems=\"center\" justify=\"flex-start\">\n\t\t\t\t\t\t\t\t<Grid item style={{ width: \"15%\" }}>\n\t\t\t\t\t\t\t\t\t<display.components.PageChooser></display.components.PageChooser>\n\t\t\t\t\t\t\t\t</Grid>\n\n\t\t\t\t\t\t\t\t<Grid item>\n\t\t\t\t\t\t\t\t\t<display.components.PageNavigation></display.components.PageNavigation>\n\t\t\t\t\t\t\t\t</Grid>\n\n\t\t\t\t\t\t\t\t<Grid item>\n\t\t\t\t\t\t\t\t\t<ViewTabs></ViewTabs>\n\t\t\t\t\t\t\t\t</Grid>\n\n\t\t\t\t\t\t\t\t<Grid item>\n\t\t\t\t\t\t\t\t\t<UndoRedoCard></UndoRedoCard>\n\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t</Grid>\n\n\t\t\t\t\t\t<Typography style={{ flexGrow: 1 }}>{materialName?.replace(\".pdf\", \"\")}</Typography>\n\n\t\t\t\t\t\t<CardSearchBar></CardSearchBar>\n\t\t\t\t\t\t<ShowHideButton></ShowHideButton>\n\t\t\t\t\t\t<Options></Options>\n\t\t\t\t\t</Toolbar>\n\t\t\t\t</AppBar>\n\t\t\t</display.components.PageKeyboardControl>\n\t\t</Grid>\n\t);\n};\n","import * as actions from \"./actions\";\nimport * as components from \"./components\";\nimport * as selectors from \"./selectors\";\n\nexport default { actions, components, selectors };\n","export const NAME = \"extractionData\";\n","import { NAME } from \"./constants\";\n\nexport const TOGGLE_CONTEXT_MENU = NAME + \"/TOGGLE_CONTEXT_MENU\";\nexport const CLOSE_CONTEXT_MENU = NAME + \"/CLOSE_CONTEXT_MENU\";\nexport const OPEN_CONTEXT_MENU = NAME + \"/OPEN_CONTEXT_MENU\";\n","import { NAME } from \"./constants\";\nimport { createSelector } from \"reselect\";\nimport { CreationData } from \"./model\";\nimport river from \"../river\";\nimport selection from \"../selection\";\n\nexport const getAll = (state: any) => state[NAME].present;\n\nexport const getContextMenuState = createSelector(getAll, (state: CreationData) => state.open);\n\nexport const getContextMenuRef = createSelector(getAll, (state: CreationData) => state.menuRef);\n\nexport const getContextMenuFullCardsRef = createSelector(getAll, (state: CreationData) => state.fullCardRef);\n\nexport const getContextMenuQARefs = createSelector(getAll, (state: CreationData) => state.qaRefs);\n\nexport const getContextMenuInitData = createSelector(\n\tselection.selectors.getCurrentSelectionPosition,\n\tgetContextMenuState,\n\tgetContextMenuRef,\n\tgetContextMenuQARefs,\n\triver.selectors.getPushToRiverCards,\n\t(position, state, menuRef, qaRefs, riverCards) => {\n\t\treturn { position, state, menuRef, qaRefs, riverCards };\n\t}\n);\n","import * as t from \"./actionTypes\";\nimport { getContextMenuState } from \"./selectors\";\nimport display from \"../display\";\n\nexport const toggleContextMenu = () => {\n\treturn (dispatch: any, getState: Function) => {\n\t\tconst state = getState();\n\t\tif (display.selectors.getDataExists(state)) {\n\t\t\tdispatch({ type: t.TOGGLE_CONTEXT_MENU });\n\t\t}\n\t};\n};\n\nexport const closeContextMenu = () => {\n\treturn (dispatch: any, getState: Function) => {\n\t\tif (getContextMenuState(getState())) {\n\t\t\tdispatch({ type: t.CLOSE_CONTEXT_MENU });\n\t\t}\n\t};\n};\n\nexport const openContextMenu = () => {\n\treturn (dispatch: any) => {\n\t\tdispatch({ type: t.OPEN_CONTEXT_MENU });\n\t};\n};\n","import * as t from \"./actionTypes\";\nimport { CreationData } from \"./model\";\nimport { createRef } from \"react\";\nimport cards from \"../cards\";\nimport { CardConfig } from \"../cards/model/model\";\n\nconst initialState: CreationData = {\n\topen: false,\n\tmenuRef: createRef(),\n\tfullCardRef: createRef(),\n\tqaRefs: [createRef(), createRef()],\n};\n\nconst creationData = (state = initialState, { type, payload }: { type: string; payload: any }): CreationData => {\n\tswitch (type) {\n\t\tcase t.TOGGLE_CONTEXT_MENU:\n\t\t\treturn { ...state, open: !state.open };\n\t\tcase t.CLOSE_CONTEXT_MENU:\n\t\t\treturn { ...state, open: false };\n\t\tcase t.OPEN_CONTEXT_MENU:\n\t\t\treturn { ...state, open: true };\n\t\tcase cards.actionTypes.CARD_PUSH:\n\t\t\t//TODO-NICE: reliance on order of refs (needs to be the same as order of qaRefs) and coupling to the fact that a new card was pushed\n\t\t\t// might need to change if I allow moving the cards\n\t\t\t//TODO-NICE: no support for multiple rivers\n\t\t\tif ((payload as CardConfig).type === \"Q-A\") return { ...state, qaRefs: [...state.qaRefs, createRef()] };\n\t\t\treturn state;\n\t\tdefault:\n\t\t\treturn state;\n\t}\n};\n\nexport default creationData;\n","import React, { RefObject } from \"react\";\nimport NestedMenuItem from \"material-ui-nested-menu-item\";\nimport { MenuItem } from \"@material-ui/core\";\nimport { CardConfig, CreationType } from \"../../cards/model/model\";\nimport { useDispatch } from \"react-redux\";\nimport river from \"../../river\";\n\ntype dispatchRiver = (creationType: CreationType, cardID?: string | undefined) => void;\n\n//TODO-NICE: rename this to note\n//TODO-NICE: entangle this dispatchRiver buisness and use hooks in the card components instead\n\nconst SingleOptionItem = ({ cardConfig, dispatchRiver }: { cardConfig: CardConfig; dispatchRiver: dispatchRiver }) => {\n\tconst dispatch = useDispatch();\n\n\treturn (\n\t\t<MenuItem\n\t\t\tonClick={() => {\n\t\t\t\tdispatchRiver(\"note\", cardConfig.cardID);\n\t\t\t}}\n\t\t\tonMouseEnter={() => {\n\t\t\t\tdispatch(river.actions.trySetHoveredCard(cardConfig.cardID, \"note\"));\n\t\t\t}}\n\t\t>\n\t\t\t{cardConfig.type}\n\t\t</MenuItem>\n\t);\n};\n\nconst QAOptionItem = ({\n\tcardConfig,\n\tdispatchRiver,\n\tqaRef,\n}: {\n\tcardConfig: CardConfig;\n\tdispatchRiver: dispatchRiver;\n\tqaRef: RefObject<any> | undefined;\n}) => {\n\tconst dispatch = useDispatch();\n\n\treturn (\n\t\t<NestedMenuItem\n\t\t\tlabel=\"Q-A\"\n\t\t\tparentMenuOpen={true}\n\t\t\tonMouseEnter={() => {\n\t\t\t\t// hover over first field as default\n\t\t\t\tdispatch(river.actions.trySetHoveredCard(cardConfig.cardID, \"q\"));\n\t\t\t}}\n\t\t>\n\t\t\t<MenuItem\n\t\t\t\tref={qaRef}\n\t\t\t\tonClick={() => {\n\t\t\t\t\tdispatchRiver(\"q\", cardConfig.cardID);\n\t\t\t\t}}\n\t\t\t\tonMouseEnter={() => {\n\t\t\t\t\tdispatch(river.actions.trySetHoveredCard(cardConfig.cardID, \"q\"));\n\t\t\t\t}}\n\t\t\t>\n\t\t\t\tQ-field\n\t\t\t</MenuItem>\n\t\t\t<MenuItem\n\t\t\t\tonClick={() => {\n\t\t\t\t\tdispatchRiver(\"a\", cardConfig.cardID);\n\t\t\t\t}}\n\t\t\t\tonMouseEnter={() => {\n\t\t\t\t\tdispatch(river.actions.trySetHoveredCard(cardConfig.cardID, \"a\"));\n\t\t\t\t}}\n\t\t\t>\n\t\t\t\tA-field\n\t\t\t</MenuItem>\n\t\t</NestedMenuItem>\n\t);\n};\n\nexport const CardConfigItem = ({\n\tcardConfig,\n\tdispatchRiver,\n\tqaRef,\n}: {\n\tcardConfig: CardConfig;\n\tdispatchRiver: dispatchRiver;\n\tqaRef?: RefObject<any>;\n}) => {\n\tswitch (cardConfig.type) {\n\t\tcase \"Q-A\":\n\t\t\treturn <QAOptionItem cardConfig={cardConfig} dispatchRiver={dispatchRiver} qaRef={qaRef}></QAOptionItem>;\n\t\tdefault:\n\t\t\treturn <SingleOptionItem cardConfig={cardConfig} dispatchRiver={dispatchRiver}></SingleOptionItem>;\n\t}\n};\n","import { Fragment } from \"react\";\nimport { MenuItem } from \"@material-ui/core\";\nimport React from \"react\";\n\n//TODO-NICE: clear qa-field button\n\nconst NewQACardQ = ({ onClick }: any) => <MenuItem onClick={onClick}>New: Q (Q-A)</MenuItem>;\nconst NewQACardA = ({ onClick }: any) => <MenuItem onClick={onClick}>New: A (Q-A)</MenuItem>;\nconst NewNoteCard = ({ onClick }: any) => <MenuItem onClick={onClick}>New: Note</MenuItem>;\n\nexport const NewButtons = ({ noteDispatch, qDispatch, aDispatch }: any) => {\n\treturn (\n\t\t<Fragment>\n\t\t\t<NewNoteCard onClick={noteDispatch}></NewNoteCard>\n\t\t\t<NewQACardQ onClick={qDispatch}></NewQACardQ>\n\t\t\t<NewQACardA onClick={aDispatch}></NewQACardA>\n\t\t</Fragment>\n\t);\n};\n","import { useRef, useEffect, MutableRefObject } from \"react\";\n\n// only global eventListener for now\nexport const useEventListener = (eventName: string, handler: any) => {\n\tconst savedHandler: MutableRefObject<Function> = useRef(() => {});\n\n\tuseEffect(() => {\n\t\tsavedHandler.current = handler;\n\t}, [handler]);\n\n\tuseEffect(() => {\n\t\tconst eventListener = (event: Event) => savedHandler.current(event);\n\t\tdocument.addEventListener(eventName, eventListener);\n\t\treturn () => {\n\t\t\tdocument.removeEventListener(eventName, eventListener);\n\t\t};\n\t}, [eventName]);\n};\n","import { getContextMenuRef, getContextMenuQARefs, getContextMenuFullCardsRef } from \"../selectors\";\n\n// the root div for the menu invisibly covers the whole screen\n// the actual div that is visible is this\nconst baseContextMenuSelector = \"div.MuiPaper-root\";\n\nexport const contextMenuContainsTargetNode = (state: any, event: Event) => {\n\tconst menuRef = getContextMenuRef(state).current;\n\tconst fullCardsRef = getContextMenuFullCardsRef(state).current?.parentNode;\n\n\t// the nested items are rendered under a different menu\n\t// the current api does not allow access\n\t// so the qa-refs refer to the Q-button\n\t// we check the click against his parent,\n\t// which is the div that contains the Q and A buttons\n\tconst qaRefs = getContextMenuQARefs(state)\n\t\t.map((refObject) => refObject.current)\n\t\t.filter((cur) => !!cur)\n\t\t.map((ref) => ref.parentNode);\n\n\tconst target = event.target as Node;\n\n\tif (menuRef?.querySelector(baseContextMenuSelector)?.contains(target)) return true;\n\n\tif (fullCardsRef?.contains(target)) return true;\n\n\tfor (const qaRef of qaRefs) {\n\t\tif (qaRef.contains(target)) return true;\n\t}\n\n\treturn false;\n};\n","import React, { RefObject } from \"react\";\nimport Menu from \"@material-ui/core/Menu\";\nimport { Divider, MenuItem } from \"@material-ui/core\";\nimport { useDispatch, connect, useSelector, useStore } from \"react-redux\";\nimport { getContextMenuInitData, getContextMenuFullCardsRef } from \"../selectors\";\nimport { closeContextMenu, openContextMenu } from \"../actions\";\nimport { incrementer, partition } from \"../../../shared/utils\";\nimport { CardConfig, CreationType } from \"../../cards/model/model\";\nimport { CardConfigItem } from \"./CardItems\";\nimport { NewButtons } from \"./NewButtons\";\nimport NestedMenuItem from \"material-ui-nested-menu-item\";\nimport selection from \"../../selection\";\nimport { CardOrigin } from \"../../cards/model/model-origin\";\nimport display from \"../../display\";\nimport { SourceCard } from \"../../selection/model\";\nimport river from \"../../river\";\nimport focus from \"../../focus\";\nimport { useEventListener } from \"../../../shared/useEventListener\";\nimport { contextMenuContainsTargetNode } from \"../services\";\nimport cards from \"../../cards\";\n\nfunction ContextMenu({\n\tposition,\n\tstate,\n\tmenuRef,\n\tqaRefs,\n\triverCards,\n}: {\n\tposition: { x: number; y: number };\n\tstate: boolean;\n\tmenuRef: RefObject<any>;\n\tqaRefs: RefObject<any>[];\n\triverCards: CardConfig[];\n}) {\n\tconst dispatch = useDispatch();\n\n\tuseEventListener(\"mousedown\", (event: MouseEvent) => {\n\t\tdispatch(mouseDownControl(event));\n\t});\n\n\tuseEventListener(\"contextmenu\", (event: MouseEvent) => {\n\t\tdispatch(rightClickControl(event));\n\t});\n\n\tconst fullCardsRef = useSelector(getContextMenuFullCardsRef);\n\n\tconst sourceCard = useSelector(selection.selectors.getSourceCard);\n\n\tconst openState = state;\n\n\tconst selectedParent = useSelector(selection.selectors.getCurrentSelectedParent);\n\tconst store = useStore();\n\n\tconst dispatchRiver = (creationType: CreationType, cardID?: string) => {\n\t\tdispatch(closeContextMenu());\n\n\t\tif (sourceCard) {\n\t\t\tdispatch(\n\t\t\t\tselection.actions.selectionToCardForSourceCard(\n\t\t\t\t\tcreationType,\n\t\t\t\t\t(sourceCard as SourceCard).sourceField,\n\t\t\t\t\t(sourceCard as SourceCard).origin,\n\t\t\t\t\tcardID\n\t\t\t\t)\n\t\t\t);\n\t\t} else {\n\t\t\t// always overwrite origin, even if isUpdate, because updateType==replace\n\t\t\tconst origin: CardOrigin | undefined = selectedParent\n\t\t\t\t? display.selectors.getCurrentOrigin(store.getState())\n\t\t\t\t: undefined;\n\n\t\t\tdispatch(selection.actions.selectionToCard(creationType, origin, cardID));\n\t\t}\n\t};\n\n\tconst increment = incrementer();\n\tconst qaRefIndex = incrementer();\n\n\tconst anchorPosition = openState ? { top: position.y, left: position.x } : undefined;\n\n\tconst [nonFullRiverCards, fullRiverCards] = partition(riverCards, cards.model.model.cardIsNotFull);\n\n\t// TODO-NICE: use hidden MenuItem-pattern also for qa-ref\n\n\t// TODO-NICE: need to check for state before rendering MenuItems,\n\t// otherwise it shows up for a split-second when switching the menu off after adding to the river\n\t// weird Race Condition even if I dispatch closeContextMenu first?\n\treturn (\n\t\t<Menu\n\t\t\tref={openState ? menuRef : null}\n\t\t\tkeepMounted\n\t\t\topen={openState}\n\t\t\tanchorReference=\"anchorPosition\"\n\t\t\tanchorPosition={anchorPosition}\n\t\t>\n\t\t\t{openState &&\n\t\t\t\tnonFullRiverCards.map((cardConfig) => (\n\t\t\t\t\t<CardConfigItem\n\t\t\t\t\t\tcardConfig={cardConfig}\n\t\t\t\t\t\tdispatchRiver={dispatchRiver}\n\t\t\t\t\t\tkey={increment()}\n\t\t\t\t\t\tqaRef={cardConfig.type === \"Q-A\" ? qaRefs[qaRefIndex()] : undefined}\n\t\t\t\t\t></CardConfigItem>\n\t\t\t\t))}\n\t\t\t{openState && nonFullRiverCards.length > 0 && <Divider />}\n\n\t\t\t{openState && (\n\t\t\t\t<NewButtons\n\t\t\t\t\tnoteDispatch={() => {\n\t\t\t\t\t\tdispatchRiver(\"note\");\n\t\t\t\t\t}}\n\t\t\t\t\tqDispatch={() => {\n\t\t\t\t\t\tdispatchRiver(\"q\");\n\t\t\t\t\t}}\n\t\t\t\t\taDispatch={() => {\n\t\t\t\t\t\tdispatchRiver(\"a\");\n\t\t\t\t\t}}\n\t\t\t\t></NewButtons>\n\t\t\t)}\n\n\t\t\t{openState && fullRiverCards.length > 0 && <Divider />}\n\t\t\t{openState && fullRiverCards.length > 0 && (\n\t\t\t\t<NestedMenuItem label=\"Full cards: \" parentMenuOpen={true}>\n\t\t\t\t\t<MenuItem ref={fullCardsRef} style={{ position: \"absolute\" }}></MenuItem>\n\t\t\t\t\t{fullRiverCards.map((cardConfig) => (\n\t\t\t\t\t\t<CardConfigItem\n\t\t\t\t\t\t\tcardConfig={cardConfig}\n\t\t\t\t\t\t\tdispatchRiver={dispatchRiver}\n\t\t\t\t\t\t\tkey={increment()}\n\t\t\t\t\t\t\tqaRef={cardConfig.type === \"Q-A\" ? qaRefs[qaRefIndex()] : undefined}\n\t\t\t\t\t\t></CardConfigItem>\n\t\t\t\t\t))}\n\t\t\t\t</NestedMenuItem>\n\t\t\t)}\n\t\t</Menu>\n\t);\n}\n\nconst mouseDownControl = (event: MouseEvent) => {\n\treturn (dispatch: any, getState: Function) => {\n\t\tconst clickOutSideOfMenu = !contextMenuContainsTargetNode(getState(), event);\n\t\tif (clickOutSideOfMenu) {\n\t\t\tdispatch(closeContextMenu());\n\t\t\tdispatch(river.actions.resetHoveredCard());\n\t\t}\n\t};\n};\n\n//TODO-NICE: make selection-dropable on buttons, so that they can be send to cards, make this the default instead of context-menu?\n// imagine: toolbar with new Note, new A, new Q | all the cards and you can drop off\n\n//TODO-NICE: delete extracted str in source\n\nconst rightClickControl = (event: MouseEvent) => {\n\treturn (dispatch: any, getState: Function) => {\n\t\tconst state = getState();\n\n\t\tif (!selection.selectors.currentSelectionExists(state)) return;\n\t\tevent.preventDefault();\n\n\t\tconst displayFocus = focus.selectors.getDisplayFocus(state);\n\n\t\tdispatch(selection.actions.updateSelectionPosition(event.x, event.y));\n\t\tdispatch(openContextMenu());\n\n\t\tif (displayFocus === \"ACTIVE_RIVER\") {\n\t\t\t//if the user is focused on the document, the push-to river should always be the active=page-wise river\n\t\t\tdispatch(river.actions.setPushToRiver(river.selectors.getActiveRiverMakeUpID(state)));\n\t\t}\n\t};\n};\n\nexport const ContextMenuContainer = connect(getContextMenuInitData)(ContextMenu);\n","import * as actions from \"./actions\";\nimport * as constants from \"./constants\";\nimport * as actionTypes from \"./actionTypes\";\nimport reducer from \"./reducer\";\nimport * as selectors from \"./selectors\";\nimport * as components from \"./components\";\nimport * as services from \"./services\";\n\nexport default { actions, actionTypes, constants, components, reducer, selectors, services };\n","import React from \"react\";\nimport Grid from \"@material-ui/core/Grid\";\nimport control from \"../modules/control\";\nimport creation from \"../modules/extraction\";\nimport { makeStyles, Theme, createStyles, useScrollTrigger, Zoom, Toolbar, Fab } from \"@material-ui/core\";\nimport KeyboardArrowUpIcon from \"@material-ui/icons/KeyboardArrowUp\";\nimport selection from \"../modules/selection\";\nimport river from \"../modules/river\";\nimport focus from \"../modules/focus\";\nimport { useSelector } from \"react-redux\";\nimport display from \"../modules/display\";\n\n//TODO: make show/hide depdendant on tab, also Page choice, control-bar dependant on tab\n\nconst useStyles = makeStyles((theme: Theme) =>\n\tcreateStyles({\n\t\troot: {\n\t\t\tposition: \"fixed\",\n\t\t\tbottom: theme.spacing(2),\n\t\t\tright: theme.spacing(2),\n\t\t},\n\t})\n);\n\nfunction ScrollTop(props: any) {\n\tconst { children } = props;\n\tconst classes = useStyles();\n\tconst trigger = useScrollTrigger({\n\t\tdisableHysteresis: true,\n\t\tthreshold: 100,\n\t});\n\n\tconst handleClick = (event: React.MouseEvent<HTMLDivElement>) => {\n\t\tconst anchor = ((event.target as HTMLDivElement).ownerDocument || document).querySelector(\"#back-to-top-anchor\");\n\n\t\tif (anchor) {\n\t\t\tanchor.scrollIntoView({ behavior: \"smooth\", block: \"center\" });\n\t\t}\n\t};\n\n\treturn (\n\t\t<Zoom in={trigger}>\n\t\t\t<div onClick={handleClick} role=\"presentation\" className={classes.root}>\n\t\t\t\t{children}\n\t\t\t</div>\n\t\t</Zoom>\n\t);\n}\n\nexport function ReaderScene() {\n\tconst displayFocus = useSelector(focus.selectors.getDisplayFocus);\n\tconst showMaterial = useSelector(display.selectors.displayStatusIsShow);\n\tconst showRiver = useSelector(river.selectors.riverShowStateIsShow);\n\n\treturn (\n\t\t<div>\n\t\t\t<Grid container justify=\"center\" direction=\"column\" alignItems=\"stretch\" spacing={1}>\n\t\t\t\t<control.components.ControlBar></control.components.ControlBar>\n\t\t\t\t<Toolbar id=\"back-to-top-anchor\" />\n\n\t\t\t\t<Grid item hidden={displayFocus !== \"ACTIVE_RIVER\"}>\n\t\t\t\t\t<Grid container justify=\"space-around\" direction=\"row\" alignItems=\"stretch\">\n\t\t\t\t\t\t<Grid\n\t\t\t\t\t\t\titem\n\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\twidth: \"38%\",\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\thidden={!showRiver}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<river.components.ActiveCardRiver></river.components.ActiveCardRiver>\n\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t<display.components.MaterialDisplayColumnWithSize\n\t\t\t\t\t\t\thidden={!showMaterial}\n\t\t\t\t\t\t></display.components.MaterialDisplayColumnWithSize>\n\t\t\t\t\t</Grid>\n\t\t\t\t</Grid>\n\n\t\t\t\t<Grid item hidden={displayFocus !== \"SUMMARY_RIVER\"}>\n\t\t\t\t\t<river.components.SummaryRiver></river.components.SummaryRiver>\n\t\t\t\t</Grid>\n\t\t\t</Grid>\n\t\t\t<ScrollTop>\n\t\t\t\t<Fab color=\"secondary\" size=\"small\" aria-label=\"scroll back to top\">\n\t\t\t\t\t<KeyboardArrowUpIcon />\n\t\t\t\t</Fab>\n\t\t\t</ScrollTop>\n\t\t\t<creation.components.ContextMenuContainer></creation.components.ContextMenuContainer>\n\t\t\t<selection.components.SelectionSnackbar></selection.components.SelectionSnackbar>\n\t\t</div>\n\t);\n}\n","import storage from \"redux-persist/lib/storage\"; // defaults to localStorage for web\nimport { createTransform } from \"redux-persist\";\nimport { CreationData } from \"./modules/extraction/model\";\nimport { createRef } from \"react\";\nimport extraction from \"./modules/extraction\";\nimport { DisplayData, DisplayStatus, PerPageSpans } from \"./modules/display/model\";\nimport display from \"./modules/display\";\nimport { SelectionData } from \"./modules/selection/model\";\nimport selection from \"./modules/selection\";\n\n// to get the correct object with reselect, I added .present to all getAll that belong do undoable modules\n\nconst removeDOMObjectsFromCreationData = (inboundState: CreationData) => {\n\treturn {\n\t\t...inboundState,\n\t\tmenuRef: null,\n\t\tfullCardRef: null,\n\t\tqaRefs: inboundState.qaRefs.map((_) => null),\n\t};\n};\n\nconst addDOMObjectsToCreationData = (outboundState: {\n\topen: boolean;\n\tmenuRef: null;\n\tfullCardRef: null;\n\tqaRefs: null[];\n}): CreationData => {\n\treturn {\n\t\t...outboundState,\n\t\tmenuRef: createRef(),\n\t\tfullCardRef: createRef(),\n\t\tqaRefs: outboundState.qaRefs.map((_) => createRef()),\n\t};\n};\n\nconst extractionTransform = createTransform(\n\t(inboundState: { future: CreationData[]; past: CreationData[]; present: CreationData }) => {\n\t\treturn {\n\t\t\t...inboundState,\n\t\t\tfuture: inboundState.future.map(removeDOMObjectsFromCreationData),\n\t\t\tpast: inboundState.past.map(removeDOMObjectsFromCreationData),\n\t\t\tpresent: removeDOMObjectsFromCreationData(inboundState.present),\n\t\t};\n\t},\n\t(outboundState): { future: CreationData[]; past: CreationData[]; present: CreationData } => {\n\t\treturn {\n\t\t\t...outboundState,\n\t\t\tfuture: outboundState.future.map(addDOMObjectsToCreationData),\n\t\t\tpast: outboundState.past.map(addDOMObjectsToCreationData),\n\t\t\tpresent: addDOMObjectsToCreationData(outboundState.present),\n\t\t};\n\t},\n\t{ whitelist: [extraction.constants.NAME] }\n);\n\n//TODO-NICE: find way to save PDF in browser, maybe manually use indexeddb and use that in transform?\n// idea: make store-field pdfAsBase64 and use thunk for async-filling the field, then when reloading, use thunk to format\n// const reader = new FileReaderSync();\n\n// function readFileAsync(file: File) {\n// \treturn new Promise((resolve) => {\n// \t\treader.onload = () => {\n// \t\t\tresolve(reader.result);\n// \t\t};\n// \t\treader.onerror = () => resolve(null);\n\n// \t\treader.readAsDataURL(file);\n// \t});\n// }\n\nconst removeDOMObjectsFromDisplayData = (inboundState: DisplayData) => {\n\tlet pdf = null;\n\t// if (inboundState.pdf) {\n\t// \tpdf = await readFileAsync(inboundState.pdf);\n\t// }\n\tconst result = { ...inboundState, documentRef: null, materialData: null, pdf };\n\treturn result;\n};\n\n//TODO-NICE: create persistable type for the state in model\n\nconst addDOMObjectsToDisplayData = (outboundState: {\n\tpdf: null;\n\tpdfName?: string;\n\tdisplayStatus: DisplayStatus;\n\tcurrentPage: number;\n\ttotalPages: number;\n\t//TODO-NICE:might need amount of spans per page for validation? if yes, use this\n\tpageSpans: PerPageSpans;\n\tdocumentRef: null;\n\tzoomQueue: number | null;\n\tmaterialData: null;\n}): DisplayData => {\n\treturn {\n\t\t...outboundState,\n\t\tpdf: undefined,\n\t\tdocumentRef: createRef(),\n\t\tmaterialData: { materialDataTimeStamp: -Infinity },\n\t};\n};\n\nconst displayTransform = createTransform(\n\t(inboundState: DisplayData) => {\n\t\treturn removeDOMObjectsFromDisplayData(inboundState);\n\t},\n\t(outboundState): DisplayData => {\n\t\treturn addDOMObjectsToDisplayData(outboundState);\n\t},\n\t{ whitelist: [display.constants.NAME] }\n);\n\n// for selection we just use the initialState and dont persist future/past\nconst selectionTransform = createTransform(\n\t(inboundState: { future: SelectionData[]; past: SelectionData[]; present: SelectionData }) => {\n\t\treturn {\n\t\t\t...inboundState,\n\t\t\tfuture: [],\n\t\t\tpast: [],\n\t\t\tpresent: {\n\t\t\t\tmanuallySelectedString: \"\",\n\t\t\t\tselectedParentSpan: null,\n\t\t\t\tselectionPosition: { x: 0, y: 0 },\n\t\t\t\tsourceCard: null,\n\t\t\t},\n\t\t};\n\t},\n\t(outboundState): { future: SelectionData[]; past: SelectionData[]; present: SelectionData } => {\n\t\treturn outboundState;\n\t},\n\t{ whitelist: [selection.constants.NAME] }\n);\n\nexport const persistConfig = {\n\tkey: \"root\",\n\tstorage,\n\ttransforms: [extractionTransform, displayTransform, selectionTransform],\n};\n","import { createStore } from \"redux\";\nimport { applyMiddleware } from \"redux\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport thunk from \"redux-thunk\";\nimport { combineReducers } from \"redux\";\nimport focus from \"./modules/focus\";\nimport creation from \"./modules/extraction\";\nimport river from \"./modules/river\";\nimport display from \"./modules/display\";\nimport cards from \"./modules/cards\";\nimport { persistStore, persistReducer } from \"redux-persist\";\nimport undoable, { includeAction } from \"redux-undo\";\nimport { persistConfig } from \"./persist\";\nimport db from \"./modules/db\";\nimport selection from \"./modules/selection\";\n\n//TODO-NICE: make limit for undo (right now its fine, if we reset on document-upload)\n//TODO-NICE: make snackbar for which action is undone/redone\n//TODO-NICE: this undo-buisness is not very transparent, I just list each action that is state-relevant and not view, make action list in constants.ts?\n\n//TODO-NICE: can undo selected-string but then the source-card might still be set\n// I think this is not a problem, because then when something else is selected the old-source-Card is overwritten\n// but not as clean as it could be\n\nconst rootReducer = combineReducers({\n\t[focus.constants.NAME]: focus.reducer,\n\t[selection.constants.NAME]: undoable(selection.reducer, {\n\t\tfilter: includeAction([selection.actionTypes.SELECTED_STRING]),\n\t}),\n\t[creation.constants.NAME]: undoable(creation.reducer, {\n\t\tfilter: includeAction([cards.actionTypes.CARD_PUSH]),\n\t}),\n\t[river.constants.NAME]: undoable(river.reducer, {\n\t\tfilter: includeAction([\n\t\t\tcards.actionTypes.CARD_PUSH,\n\t\t\tcards.actionTypes.CARD_REMOVE,\n\t\t\tdb.actionTypes.LOAD_DOCUMENT_DATA_SETS,\n\t\t]),\n\t}),\n\t[display.constants.NAME]: display.reducer,\n\t[cards.constants.NAME]: undoable(cards.reducer, {\n\t\tfilter: includeAction([\n\t\t\tdb.actionTypes.LOAD_DOCUMENT_DATA_SETS,\n\t\t\tcards.actionTypes.CARD_PUSH,\n\t\t\tcards.actionTypes.CARD_UPDATE,\n\t\t\tcards.actionTypes.CARD_REMOVE,\n\t\t\t//this needs to be here, because we use display it to the user with the grab-icon\n\t\t\tcards.actionTypes.CARD_GOAL,\n\t\t]),\n\t}),\n\t[db.constants.NAME]: undoable(db.reducer, {\n\t\tfilter: includeAction([db.actionTypes.LOAD_DOCUMENT_DATA_SETS]),\n\t}),\n});\n\nconst stateSanitizer = (state: any) => {\n\treturn state.displayData.pdf ? { ...state, displayData: { ...state.displayData, pdf: \"PDF_FILE_IS_HERE\" } } : state;\n};\n\nconst persistedReducer = persistReducer(persistConfig, rootReducer);\n\nconst composeEnhancers = composeWithDevTools({ stateSanitizer });\nconst enhancer = composeEnhancers(applyMiddleware(thunk));\n\nexport const store = createStore(persistedReducer, enhancer);\n\nexport const persistor = persistStore(store);\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { ReaderScene } from \"./scene/ReaderScene\";\nimport { Provider } from \"react-redux\";\nimport { store, persistor } from \"./store\";\nimport { PersistGate } from \"redux-persist/es/integration/react\";\n// Load Roboto typeface\nrequire(\"typeface-roboto\");\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<Provider store={store}>\n\t\t\t<PersistGate loading={null} persistor={persistor}>\n\t\t\t\t<ReaderScene></ReaderScene>\n\t\t\t</PersistGate>\n\t\t</Provider>\n\t</React.StrictMode>,\n\tdocument.getElementById(\"root\")\n);\n"],"sourceRoot":""}