{"version":3,"sources":["modules/display/constants.ts","modules/display/actionTypes.ts","modules/display/model.ts","modules/selection/constants.ts","modules/selection/actionTypes.ts","modules/selection/selectors.ts","modules/selection/actions.ts","modules/selection/model.ts","modules/selection/reducer.ts","modules/selection/components/SelectionSnackbar.tsx","modules/selection/services/get-selection.ts","modules/cards/model/model-permutation.ts","modules/cards/model/model-origin.ts","modules/cards/services/transformInputOrigin.ts","modules/cards/constants.ts","modules/cards/actionTypes.ts","modules/cards/model/model-content.ts","modules/cards/model/model-config.ts","modules/cards/selectors.ts","modules/cards/model/model-payload.ts","modules/cards/actions.ts","modules/text/constants.ts","modules/text/components/NewNoteCardTooltip.tsx","modules/text/components/AddQAButtonTooltip.tsx","modules/text/components/DeleteCardButtonTooltip.tsx","modules/text/components/AppendButtonTooltip.tsx","modules/text/index.ts","modules/cards/components/AddNoteButton.tsx","modules/cards/components/AddQAButton.tsx","modules/cards/components/DeleteCardButton.tsx","modules/cards/model/model-state.ts","modules/db/constants.ts","modules/db/actionTypes.ts","modules/db/actions.ts","modules/db/model.ts","modules/db/reducer.ts","modules/db/selectors.ts","modules/db/index.ts","modules/cards/reducer.ts","modules/cards/index.ts","modules/selection/services/use-selection.ts","modules/selection/index.ts","modules/display/selectors.ts","shared/utils.ts","modules/display/services/span.ts","modules/display/services/materialData.ts","modules/display/actions.ts","modules/display/components/NavigationButtons.tsx","modules/display/components/PageChooser/PageChooser.tsx","modules/display/components/PDFDocument/PageKeyboardControl.tsx","modules/display/components/PDFDocument/PDFDocument.tsx","modules/display/components/PDFDocument/PDFPageRenderer.tsx","modules/display/components/PDFDocument/PDFViewer.tsx","modules/display/components/MaterialDisplayColumn.tsx","modules/display/reducer.ts","modules/display/index.ts","modules/river/constants.ts","modules/river/selectors.ts","modules/river/actionTypes.ts","modules/river/actions.ts","shared/GreenCheckbox.tsx","modules/river/components/RiverContentFormGroup.tsx","modules/focus/constants.ts","modules/focus/actionTypes.ts","modules/focus/actions.ts","modules/focus/reducer.ts","modules/focus/selectors.ts","modules/focus/index.ts","modules/river/components/CardRiver/Cards/ClayCardField.tsx","modules/river/components/CardRiver/Buttons/JumpToOriginButton.tsx","modules/river/components/CardRiver/Buttons/GrabForFieldButton.tsx","modules/river/components/CardRiver/Buttons/AppendButton.tsx","modules/river/components/CardRiver/Cards/ClayCardFieldButtons.tsx","modules/river/components/CardRiver/Cards/QACard.tsx","modules/river/components/CardRiver/Cards/NoteCard.tsx","modules/river/components/CardRiver/Cards/ClayCard.tsx","modules/river/components/CardRiver/toCardGridItemsWithDividers.tsx","modules/river/components/CardRiver/CardRiverAccordion.tsx","modules/river/components/CardRiver/ChildCardRiver.tsx","modules/river/model.ts","modules/river/components/SummaryRiver.tsx","modules/river/components/ActiveCardRiver.tsx","modules/river/reducer.ts","modules/river/index.ts","modules/control/selectors.ts","modules/control/actions.ts","modules/control/components/Options/DeleteDocumentButton.tsx","modules/control/components/Options/InputDataSets.tsx","modules/control/components/Options/InputDocument.tsx","modules/control/components/Options/LoadDocumentDataButton.tsx","modules/control/components/Options/DocumentOptionItem.tsx","modules/control/components/Options/Options.tsx","modules/control/components/CardSearchBar.tsx","modules/control/components/UndoRedoButtons.tsx","modules/control/components/ShowHideButton.tsx","modules/control/components/ViewTabs.tsx","modules/control/components/ControlBar.tsx","modules/control/index.ts","modules/extraction/constants.ts","modules/extraction/actionTypes.ts","modules/extraction/selectors.ts","modules/extraction/services/contextMenuContainsTargetNode.ts","modules/extraction/actions.ts","modules/extraction/reducer.ts","modules/extraction/components/CardConfigItem.tsx","modules/extraction/components/NewButtons.tsx","shared/useEventListener.tsx","modules/extraction/components/ContextMenu.tsx","modules/extraction/index.ts","scene/ReaderScene.tsx","persist.ts","store.ts","index.tsx"],"names":["NAME","PDF_UPLOADED","MATERIAL_LOADED","DISPLAY_STATUS","PAGE_UPDATE","ZOOM_QUEUE","MATERIAL_DATA","MATERIAL_HEIGHT","pageCorrections","newPage","totalPages","SELECTED_STRING","SELECTED_PARENT","DOCUMENT_POSITION","SOURCE_CARD","getAll","state","present","getCurrentSelectionPosition","createSelector","selectionPosition","getCurrentSelectedString","manuallySelectedString","currentSelectionExists","str","getCurrentSelectedParent","selectedParentSpan","getSourceCard","sourceCard","updateManuallySelectedString","type","t","payload","resetManuallySelectedString","selectedParent","span","updateSelectionPosition","x","y","setSourceCard","sourceField","origin","trySetSourceCard","dispatch","getState","otherField","otherOrigin","isDifferentSourceCard","resetSourceCard","tryResetSourceCard","initialState","selectionData","SelectionSnackbar","useState","open","setOpen","useDispatch","selectedString","useSelector","message","style","color","Snackbar","anchorOrigin","vertical","horizontal","onClose","event","reason","preventDefault","action","IconButton","size","aria-label","onClick","fontSize","getSelection","selection","window","activeElement","document","value","substring","selectionStart","selectionEnd","text","toString","e","FieldValueAccessorMap","note","cardObject","q","a","toFieldValue","field","FieldValueModifierMap","modify","createReplace","inputValue","_","changeCardObject","spec","inputField","inputObject","createModify","modifyFieldValue","fieldToBeChanged","objectToBeChanged","emptyQAOrigin","EmptyOriginMap","emptyOrigin","singleOriginToCardOrigin","singleOrigin","outputField","baseOrigin","changeSpec","transformInputOrigin","inputOrigin","oldOrigin","CARD_UPDATE","CARD_PUSH","CARD_REMOVE","CARD_GOAL","emptyQAContent","EmptyContentMap","emptyContent","noteContentIsEmpty","content","qaContentIsNotFull","UpdateTypeCreateModifyMap","APPEND","oldValue","REPLACE","updateTypeToCreateModify","updateType","strToCardContent","contentStr","existingContent","cardIDToNumber","cardID","parseInt","nextCardID","lastCardIDNumber","CardIsFullMap","Note","config","cardIsNotFull","strToCardConfig","baseCard","changedContent","originToCardConfig","changedOrigin","getLastCardIDNumber","getCards","cards","getGoalCard","goalCard","getCardByID","getCardOriginByID","emptyNotePayload","emptyQAPayload","strToCardPayload","EmptyPayloadFieldMap","cardFieldToEmptyPayload","cardPayloadToCardConfig","cardPush","cardPayload","emptyNoteCard","emptyQACard","cardUpdate","card","replaceCardFieldContent","cardField","cardConfig","newValue","replaceCardFieldOrigin","newOrigin","replaceCardField","removeCard","setGoalCard","creationType","resetGoalCard","switchToActiveRiverTooltip","switchToSummaryRiverTooltip","undoTooltip","redoTooltip","nextPageTooltip","previousPageTooltip","deleteCardTooltip","grabForCardTooltip","jumpToOriginTooltip","appendToCardTooltip","newQACardTooltip","newNoteCardTooltip","deleteDocumentTooltip","loadSavedDocumentTooltip","noMaterialText","loadingMaterialText","activeDocumentText","existingDataText","loadMaterialText","downloadDatasetsText","uploadDatasetsText","noteText","questionText","answerText","defaultEnterDelay","defaultEnterNextDelay","NewNoteCardTooltip","children","Tooltip","title","enterDelay","enterNextDelay","AddQAButtonTooltip","DeleteCardButtonTooltip","AppendButtonTooltip","components","constants","AddNoteButton","AddQAButton","DeleteCardButton","removeCardFromCardsState","replaceCardsInCardsState","updateCardInCards","toBeUpdated","cardObj","addCardToCards","ARCHIVE_CURRENT_DATA","LOAD_DOCUMENT_DATA_SETS","DELETE_DOCUMENT_DATA_SET","DOCUMENT_CHANGE","archiveDBData","dbData","loadDocumentDataSets","newActiveDataSet","deleteDocumentDataSet","updateDocumentDataInDocumentDB","documentData","documentDB","name","updateDocumentDataSetsInDocumentDB","documentDataSets","reduce","prev","removeDocumentDataFromDocumentDB","Object","fromEntries","entries","filter","arr","getDocumentDB","getDocumentNames","db","keys","getDocumentDataSets","values","actions","actionTypes","reducer","selectors","intialState","services","model","selectionToCardBase","isUpdate","undefined","currentCard","outputOrigin","model_config","emptyPayload","model_payload","selectionToCardAppend","selectionToCardReplace","getPDF","pdf","getPDFName","pdfName","getRenderCritialData","currentPage","documentRef","getTotalPages","getCurrentPage","getPageControlData","getDocumentRef","getMaterialData","materialData","getTimeStamp","materialDataTimeStamp","getMaterialSpans","materialSpans","getSpanIndex","indexOf","getMaterialBoundingRects","materialBoundingRects","getDataExists","timestamp","getDisplayStatus","displayStatus","displayStatusIsShow","status","getZoomTarget","zoomTargetSpanIndex","getMaterialHeight","materialHeight","getCurrentOrigin","spanIndex","page","incrementer","counter","curCounter","expandSpan","rect","getBoundingClientRect","container","startingSpans","Array","from","querySelectorAll","length","expandedSpans","spans","boundingRects","exSpan","push","splitExpandedSpans","map","expandSpans","sort","exSpan2","pdfUpload","materialUploaded","files","target","materialLoaded","captureMaterialData","current","startTime","Date","now","curMaterialGroupData","tries","ms","func","increment","timeout","setInterval","clearInterval","tryInterval","keyMap","setPage","movePage","nextPage","previousPage","pageControlKeyMap","ArrowLeft","ArrowRight","pageControlDispatcher","key","toggleDisplayState","displayState","setZoomTarget","zoomToCardOrigin","console","log","scrollToZoomTarget","scrollIntoView","behavior","block","inline","setMaterialHeight","height","mouseUpDocument","selectedStr","selectionObject","anchorNode","parentNode","PreviousButton","NextButton","PageNavigation","Card","variant","Grid","direction","item","Divider","orientation","nonDigitRegEx","PageChooser","error","userInput","setState","alignItems","justify","width","TextField","inputProps","padding","fontFamily","fontWeight","lineHeight","letterSpacing","onKeyDown","submittedValue","onChange","possiblePage","trim","match","asInt","validatePageChoice","Typography","PageKeyboardControl","ref","useRef","tabIndex","pdfjs","GlobalWorkerOptions","workerSrc","version","options","cMapUrl","cMapPacked","PDFDocumentContainer","connect","parentSize","useEffect","onMouseUp","file","onLoadSuccess","numPages","inputRef","onItemClick","pageNumber","loading","noData","renderMode","onRenderSuccess","forEach","layer","top","left","transform","PDFPageRenderer","index","data","scale","triggerResize","pages","pageNumbers","has","set","get","renderAnnotationLayer","onLoadError","Loader","className","PDFViewer","props","_callOrientationChangeHandler","_callResizeHandler","_list","_mounted","initialContainerHeight","containerHeight","cachedPageDimensions","responsiveScale","Map","WeakMap","createRef","debounce","handleResize","bind","this","addEventListener","removeEventListener","promises","v","i","getPage","Promise","all","then","pageDimensions","w","view","h","_pageIndex","resetAfterIndex","cachePageDimensions","visibleStopIndex","node","clientHeight","newResponsiveScale","computeResponsiveScale","recomputeRowHeights","pdfFile","onDocumentLoadSuccess","itemCount","itemSize","computeRowHeight","itemData","overscanCount","onItemsRendered","updateCurrentVisiblePage","PureComponent","defaultProps","MaterialDisplayColumnWithSize","withSize","monitorHeight","noPlaceholder","hidden","elevation","setElevation","useLayoutEffect","onMouseEnter","onMouseLeave","Paper","pageSpans","Infinity","getRiverMakeUps","riverMakeUps","getActiveRiverMakeUpID","activeRiverMakeUpID","getPushToRiver","pushToRiverID","getPushToRiverMakeUp","makeUps","id","getActiveRiverMakeUp","getPushToRiverCardIDs","makeUp","cardIDs","getPushToRiverCards","makeUpCardIDs","getActiveRiverCardIDs","getActiveRiverCards","getRiverShowState","riverShowState","riverShowStateIsShow","getHoveredCardData","highlightedCardID","highlightedCardField","getLastRiverIDNumber","lastRiverIDNumber","getRiverContentState","riverContentState","getRiverContentFilter","contentFilter","RIVER_SHOW_STATE","RIVER_CONTENT_STATE","RIVER_PUSH_STATE","RIVER_HOVERED_CARD","RIVER_CONTENT_FILTER","toggleRiverShowState","setRiverContentState","setPushToRiver","trySetPushToRiver","setHoveredCard","trySetHoveredCard","highlightedCardIDData","resetHoveredCard","setContentFilter","resetContentFilter","GreenCheckbox","withStyles","root","green","checked","Checkbox","RiverContentFormGroup","showQAs","showNotes","changeContentState","clickedState","FormGroup","FormControlLabel","control","label","DISPLAY_FOCUS_UPDATE","updateDisplayFocus","focus","displayFocus","getDisplayFocus","ClayCardField","storeValue","saveChanges","rest","mutableValue","InputProps","disableUnderline","minWidth","multiline","onBlur","mouseUpCardField","JumpToOriginButton","cardOrigin","display","GrabForFieldButton","outlined","setOutlined","isGoalCard","AppendButton","selectionParent","store","useStore","use_selection","ClayCardFieldButtons","isActiveRiver","model_permutation","QACard","isHoveredCard","spacing","borderStyle","backgroundColor","InputLabelProps","NoteCard","border","borderRadius","ClayCard","riverID","GridItemDivider","CardRiverAccordion","gridItems","summary","pushToRiver","Accordion","defaultExpanded","overflowY","maxHeight","AccordionSummary","align","MozUserSelect","WebkitUserSelect","msUserSelect","AccordionDetails","ChildCardRiver","riverCards","useMemo","inputCards","noteConfig","includes","noteContainsContentFilter","qaConfig","qaContainsContentFilter","toCardGridItemsWithDividers","pageNumberToRiverMakeUpID","emptyCardRiver","updateStateWithMakeUps","updatedState","deactivateActiveCardRiver","active","removeCardFromRivers","entry","SummaryRiver","cardConfigs","focusRef","scrollTo","replace","ActiveCardRiver","riverMakeUp","activeRiver","oldRiver","collectCurrentDBData","river","archiveCurrentDBData","fileDownload","require","downloadDBData","localString","toLocaleString","JSON","stringify","changeDocument","newPDFName","currentPDFName","newDocumentData","ActionCreators","clearHistory","loadSavedDocument","deleteDocument","activeDocument","DeleteDocumentDialogAlert","handleClose","Dialog","aria-labelledby","aria-describedby","DialogTitle","DialogContent","DialogContentText","DialogActions","Button","autoFocus","DeleteDocumentButton","InputDataSets","MenuItem","click","disableElevation","startIcon","reader","FileReader","readAsText","onload","uploadedDataSets","parse","result","foundDataSet","find","accept","InputDocument","LoadDocumentDataButton","DocumentOptionItemButtonRow","DocumentOptionItem","ActiveDocumentOptionItem","Options","documents","doc","React","anchorEl","setAnchorEl","currentTarget","Menu","keepMounted","Boolean","MenuListProps","paddingLeft","paddingRight","component","marginTop","listStyleType","CardSearchBar","placeholder","onCancelSearch","onRequestSearch","UndoButton","undo","RedoButton","redo","UndoRedoCard","ShowRiverCheckbox","ShowMaterialCheckbox","displayShowState","ShowHideButton","ViewTabs","Tabs","Tab","disableFocusListener","ControlBar","materialName","AppBar","Toolbar","flexGrow","TOGGLE_CONTEXT_MENU","CLOSE_CONTEXT_MENU","OPEN_CONTEXT_MENU","getContextMenuState","getContextMenuRef","menuRef","getContextMenuFullCardsRef","fullCardRef","getContextMenuQARefs","qaRefs","getContextMenuInitData","position","contextMenuContainsTargetNode","fullCardsRef","refObject","cur","querySelector","contains","toggleContextMenu","closeContextMenu","openContextMenu","mouseDownControl","rightClickControl","dispatchCreationFromContextMenu","creationData","SingleOptionItem","QAOptionItem","qaRef","parentMenuOpen","CardConfigItem","NewQACardQ","NewQACardA","NewNoteCard","NewButtons","useEventListener","eventName","handler","savedHandler","eventListener","ContextMenuContainer","openState","qaRefIndex","anchorPosition","array","pass","fail","partition","nonFullRiverCards","fullRiverCards","anchorReference","useStyles","makeStyles","theme","createStyles","bottom","right","ScrollTop","classes","trigger","useScrollTrigger","disableHysteresis","threshold","Zoom","in","anchor","ownerDocument","role","ReaderScene","showMaterial","showRiver","Fab","removeDOMObjectsFromCreationData","inboundState","addDOMObjectsToCreationData","outboundState","extractionTransform","createTransform","future","past","whitelist","extraction","displayTransform","removeDOMObjectsFromDisplayData","addDOMObjectsToDisplayData","selectionTransform","persistConfig","storage","transforms","rootReducer","combineReducers","undoable","includeAction","creation","persistedReducer","persistReducer","enhancer","composeWithDevTools","stateSanitizer","displayData","composeEnhancers","applyMiddleware","thunk","createStore","persistor","persistStore","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.657e75b1.chunk.js","sourcesContent":["export const NAME = \"displayData\";\n","import { NAME } from \"./constants\";\n\nexport const PDF_UPLOADED = NAME + \"/PDF_UPLOADED\";\nexport const MATERIAL_LOADED = NAME + \"/MATERIAL_LOADED\";\nexport const DISPLAY_STATUS = NAME + \"/DISPLAY_STATUS\";\nexport const PAGE_UPDATE = NAME + \"/PAGE_UPDATE\";\nexport const ZOOM_QUEUE = NAME + \"/ZOOM_QUEUE\";\nexport const MATERIAL_DATA = NAME + \"/MATERIAL_DATA\";\nexport const MATERIAL_HEIGHT = NAME + \"/MATERIAL_HEIGHT\";\n","import { RefObject } from \"react\";\n\nexport type MaterialGroupData = {\n\tmaterialSpans: HTMLSpanElement[];\n\tmaterialBoundingRects: DOMRect[];\n};\n\nexport type MaterialData =\n\t| {\n\t\t\tmaterialDataTimeStamp: number;\n\t  }\n\t| ({\n\t\t\tmaterialDataTimeStamp: number;\n\t  } & MaterialGroupData);\n\nexport type DisplayStatus = \"SHOW\" | \"HIDE\";\n\n//the number is the arr position and not the actual count of spans\nexport type PerPageSpans = { [page: number]: number };\n\nexport type DisplayData = {\n\tpdf?: File;\n\tpdfName?: string;\n\tdisplayStatus: DisplayStatus;\n\tcurrentPage: number;\n\ttotalPages: number;\n\t//TODO-NICE:might need amount of spans per page for validation? if yes, use this\n\tpageSpans: PerPageSpans;\n\tdocumentRef: RefObject<HTMLDivElement>;\n\tzoomTargetSpanIndex: number | null;\n\tmaterialData: MaterialData;\n\tmaterialHeight?: number;\n};\n\nexport type PageMove = \"PREVIOUS\" | \"NEXT\";\n\nexport const pageCorrections = {\n\tADD: (newPage: number, totalPages: number) => (newPage === totalPages + 1 ? 1 : newPage),\n\tREMOVE: (newPage: number, totalPages: number) => (newPage === 0 ? totalPages : newPage),\n};\n","export const NAME = \"selectionData\";\n","import { NAME } from \"./constants\";\n\nexport const SELECTED_STRING = NAME + \"/SELECTED_STRING\";\nexport const SELECTED_PARENT = NAME + \"/SELECTED_PARENT\";\nexport const DOCUMENT_POSITION = NAME + \"/SELECTION_POSITION\";\nexport const SOURCE_CARD = NAME + \"/SOURCE_CARD\";\n","import { NAME } from \"./constants\";\nimport { createSelector } from \"reselect\";\nimport { SelectionData } from \"./model\";\n\nexport const getAll = (state: any): SelectionData => state[NAME].present;\n\nexport const getCurrentSelectionPosition = createSelector(getAll, (state: SelectionData) => state.selectionPosition);\n\nexport const getCurrentSelectedString = createSelector(getAll, (state: SelectionData) => state.manuallySelectedString);\n\nexport const currentSelectionExists = createSelector(getCurrentSelectedString, (str) => str !== \"\");\n\nexport const getCurrentSelectedParent = createSelector(getAll, (state: SelectionData) => state.selectedParentSpan);\n\nexport const getSourceCard = createSelector(getAll, (state) => state.sourceCard);\n","import * as t from \"./actionTypes\";\nimport { CardOrigin } from \"../cards/model/model-origin\";\nimport { getSourceCard } from \"./selectors\";\nimport { Dispatch } from \"redux\";\nimport { CardField } from \"../cards/model/model-content\";\nimport { isDifferentSourceCard } from \"./model\";\n\nexport const updateManuallySelectedString = (str: string) => {\n\treturn { type: t.SELECTED_STRING, payload: str };\n};\n\nexport const resetManuallySelectedString = () => {\n\treturn updateManuallySelectedString(\"\");\n};\n\nexport const selectedParent = (span: null | HTMLSpanElement) => {\n\treturn { type: t.SELECTED_PARENT, payload: span };\n};\n\nexport const updateSelectionPosition = (x: number, y: number) => {\n\treturn { type: t.DOCUMENT_POSITION, payload: { x, y } };\n};\n\nexport const setSourceCard = (sourceField: CardField, origin?: CardOrigin) => {\n\treturn { type: t.SOURCE_CARD, payload: { origin, sourceField } };\n};\n\nexport const trySetSourceCard = (sourceField: CardField, origin?: CardOrigin) => {\n\treturn (dispatch: Dispatch, getState: Function) => {\n\t\tconst sourceCard = getSourceCard(getState());\n\t\tif (isDifferentSourceCard(sourceCard, sourceField, origin)) dispatch(setSourceCard(sourceField, origin));\n\t};\n};\n\nexport const resetSourceCard = () => {\n\treturn { type: t.SOURCE_CARD, payload: null };\n};\n\nexport const tryResetSourceCard = () => {\n\treturn (dispatch: Dispatch, getState: Function) => {\n\t\tconst sourceCardExits = getSourceCard(getState()) !== null;\n\t\tif (sourceCardExits) dispatch(resetSourceCard());\n\t};\n};\n","import { CardOrigin } from \"../cards/model/model-origin\";\nimport { CardField } from \"../cards/model/model-content\";\n\n// SourceCard is used when selecting/extracting from a card\n// we need to copy origin if it exists and we need the sourceField to copy the correct origin value\nexport type SourceCard = { origin?: CardOrigin; sourceField: CardField };\nexport const isDifferentSourceCard = (\n\tsourceCard: SourceCard | null,\n\totherField: CardField,\n\totherOrigin?: CardOrigin\n) => {\n\treturn !sourceCard || sourceCard.sourceField !== otherField || sourceCard.origin !== otherOrigin;\n};\n\nexport type SelectionData = {\n\tmanuallySelectedString: string;\n\tselectedParentSpan: null | HTMLSpanElement;\n\tselectionPosition: { x: number; y: number };\n\t// is used to determine if we are extracting from a card\n\tsourceCard: SourceCard | null;\n};\n","import * as t from \"./actionTypes\";\nimport { SelectionData } from \"./model\";\n\nconst initialState: SelectionData = {\n\tmanuallySelectedString: \"\",\n\tselectedParentSpan: null,\n\tselectionPosition: { x: 0, y: 0 },\n\tsourceCard: null,\n};\n\nconst selectionData = (state = initialState, { type, payload }: { type: string; payload: any }): SelectionData => {\n\tswitch (type) {\n\t\tcase t.SELECTED_STRING:\n\t\t\treturn { ...state, manuallySelectedString: payload as string };\n\t\tcase t.SELECTED_PARENT:\n\t\t\t// we toggle between sourceCard and selectedParentSpan because they cant co-exist\n\n\t\t\treturn { ...state, sourceCard: null, selectedParentSpan: payload };\n\t\tcase t.DOCUMENT_POSITION:\n\t\t\treturn { ...state, selectionPosition: payload };\n\t\tcase t.SOURCE_CARD:\n\t\t\treturn { ...state, sourceCard: payload, selectedParentSpan: null };\n\t\tdefault:\n\t\t\treturn state;\n\t}\n};\n\nexport default selectionData;\n","import React, { useState, Fragment } from \"react\";\nimport { Snackbar, IconButton } from \"@material-ui/core\";\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { resetManuallySelectedString } from \"../actions\";\nimport { getCurrentSelectedString } from \"../selectors\";\n\nexport const SelectionSnackbar = () => {\n\tconst [open, setOpen] = useState(false);\n\tconst dispatch = useDispatch();\n\tconst selectedString = useSelector(getCurrentSelectedString);\n\n\tif (selectedString === \"\" && open) setOpen(false);\n\n\tif (selectedString !== \"\" && !open) setOpen(true);\n\n\tconst handleClose = (event: any, reason: string) => {\n\t\tif (reason === \"clickaway\") {\n\t\t\t// do not close on clickaway\n\t\t\tevent.preventDefault();\n\t\t} else {\n\t\t\tsetOpen(false);\n\t\t\tdispatch(resetManuallySelectedString());\n\t\t}\n\t};\n\n\tconst handleDismiss = () => {\n\t\tsetOpen(false);\n\t\tdispatch(resetManuallySelectedString());\n\t};\n\n\tconst message = (\n\t\t<Fragment>\n\t\t\t<div>{\"Current Selection: \"}</div>\n\t\t\t<div style={{ color: \"green\" }}> {selectedString}</div>\n\t\t</Fragment>\n\t);\n\n\treturn (\n\t\t<Snackbar\n\t\t\tanchorOrigin={{ vertical: \"top\", horizontal: \"center\" }}\n\t\t\topen={open}\n\t\t\tonClose={handleClose}\n\t\t\tmessage={message}\n\t\t\taction={\n\t\t\t\t<IconButton size=\"small\" aria-label=\"close\" color=\"inherit\" onClick={handleDismiss}>\n\t\t\t\t\t<CloseIcon fontSize=\"small\" />\n\t\t\t\t</IconButton>\n\t\t\t}\n\t\t/>\n\t);\n};\n","export function getSelection() {\n\tconst selection = window.getSelection();\n\n\tif (!selection) return null;\n\n\ttry {\n\t\tvar activeElement = document.activeElement;\n\t\tif (activeElement && (activeElement as HTMLInputElement).value) {\n\t\t\t// firefox bug https://bugzilla.mozilla.org/show_bug.cgi?id=85686\n\t\t\tconst str = (activeElement as HTMLInputElement).value.substring(\n\t\t\t\t(activeElement as HTMLInputElement).selectionStart as number,\n\t\t\t\t(activeElement as HTMLInputElement).selectionEnd as number\n\t\t\t);\n\n\t\t\tif (str === \"\") return null;\n\n\t\t\treturn { text: str, selection };\n\t\t} else {\n\t\t\treturn { text: selection.toString(), selection };\n\t\t}\n\t} catch (e) {\n\t\treturn null;\n\t}\n}\n","import { CardField, QACardField } from \"./model-content\";\n\n// for origin and content the same object structure is used,\n// so same permutation api should be used\n\ntype NoteObject = any;\ntype QAObject = { [key in QACardField]: any };\ntype CardObject = NoteObject | QAObject;\n\nconst FieldValueAccessorMap: { [field in CardField]: (cardObject: CardObject) => any } = {\n\tnote: (cardObject) => cardObject,\n\tq: (cardObject) => (cardObject as QAObject).q,\n\ta: (cardObject) => (cardObject as QAObject).a,\n};\nexport const toFieldValue = (field: CardField, cardObject: CardObject) => FieldValueAccessorMap[field](cardObject);\n\ntype Modify = (oldValue: any) => any;\nconst FieldValueModifierMap: { [key in CardField]: (cardObject: CardObject, modify: Modify) => any } = {\n\tnote: (cardObject, modify) => modify(cardObject),\n\tq: (cardObject, modify) => {\n\t\treturn { ...(cardObject as QAObject), q: modify((cardObject as QAObject).q) };\n\t},\n\ta: (cardObject, modify) => {\n\t\treturn { ...(cardObject as QAObject), a: modify((cardObject as QAObject).a) };\n\t},\n};\nconst modifyFieldValue = (field: CardField, cardObject: CardObject, modify: Modify) =>\n\tFieldValueModifierMap[field](cardObject, modify);\n\nexport type CreateModify = (inputValue: any) => Modify;\n\n// this replace is generic, I dont put append here, because that is object specific\nexport const createReplace: CreateModify = (inputValue: any) => (_: any) => inputValue;\n\nexport type CardObjectChangeSpec = {\n\tinputField: CardField;\n\tinputObject: CardObject;\n\tfieldToBeChanged: CardField;\n\tobjectToBeChanged: CardObject;\n\tcreateModify: CreateModify;\n};\nexport const changeCardObject = (spec: CardObjectChangeSpec) => {\n\tconst inputValue = toFieldValue(spec.inputField, spec.inputObject);\n\tconst modify = spec.createModify(inputValue);\n\treturn modifyFieldValue(spec.fieldToBeChanged, spec.objectToBeChanged, modify);\n};\n","import { CardField } from \"./model-content\";\nimport { createReplace, changeCardObject } from \"./model-permutation\";\n\nexport type SingleOrigin = { spanIndex: number; page: number };\nexport type QOnlyQAOrigin = { q: SingleOrigin; a: {} };\nexport type AOnlyQAOrigin = { q: {}; a: SingleOrigin };\nexport type PartialQAOrigin = QOnlyQAOrigin | AOnlyQAOrigin;\nconst emptyQAOrigin = () => {\n\treturn { q: {}, a: {} };\n};\ntype EmptyOrigin = { q: {}; a: {} } | \"\";\nconst EmptyOriginMap: { [field in CardField]: () => EmptyOrigin } = {\n\tq: emptyQAOrigin,\n\ta: emptyQAOrigin,\n\tnote: () => \"\",\n};\nexport const emptyOrigin = (field: CardField) => {\n\treturn EmptyOriginMap[field]();\n};\ntype FullQAOrigin = { q: SingleOrigin; a: SingleOrigin };\nexport type QAOrigin = FullQAOrigin | PartialQAOrigin;\nexport type NoteOrigin = SingleOrigin;\nexport type CardOrigin = NoteOrigin | QAOrigin;\n\nexport const singleOriginToCardOrigin = (\n\tsingleOrigin: SingleOrigin,\n\toutputField: CardField,\n\tbaseOrigin?: CardOrigin\n): CardOrigin => {\n\tconst changeSpec = {\n\t\tinputObject: singleOrigin,\n\t\tinputField: \"note\" as CardField,\n\t\tfieldToBeChanged: outputField,\n\t\tobjectToBeChanged: baseOrigin ? baseOrigin : emptyOrigin(outputField),\n\t\tcreateModify: createReplace,\n\t};\n\n\treturn changeCardObject(changeSpec);\n};\n","import { CardField } from \"../model/model-content\";\nimport { CardOrigin, emptyOrigin } from \"../model/model-origin\";\nimport { changeCardObject, createReplace } from \"../model/model-permutation\";\n\nexport const transformInputOrigin = (\n\tinputOrigin: CardOrigin,\n\tinputField: CardField,\n\toutputField: CardField,\n\toldOrigin?: CardOrigin\n): CardOrigin => {\n\tconst objectToBeChanged = oldOrigin ? oldOrigin : emptyOrigin(outputField);\n\tconst changeSpec = {\n\t\tinputField,\n\t\tfieldToBeChanged: outputField,\n\t\tobjectToBeChanged,\n\t\tinputObject: inputOrigin,\n\t\tcreateModify: createReplace,\n\t};\n\treturn changeCardObject(changeSpec);\n};\n","export const NAME = \"cards\";\n","import { NAME } from \"./constants\";\n\nexport const CARD_UPDATE = NAME + \"/CARD_UPDATE\";\nexport const CARD_PUSH = NAME + \"/CARD_PUSH\";\nexport const CARD_REMOVE = NAME + \"/CARD_REMOVE\";\nexport const CARD_GOAL = NAME + \"/CARD_GOAL\";\n","import { CreateModify, changeCardObject, createReplace } from \"./model-permutation\";\nimport { UpdateType } from \"./model-config\";\n\nexport type QACardField = \"q\" | \"a\";\nexport type CardField = \"note\" | QACardField;\n\nexport type StringCardContent = string;\nexport type NoteCardContent = StringCardContent;\nexport type QACardContent = {\n\t[field in QACardField]: StringCardContent;\n};\nexport type CardContent = NoteCardContent | QACardContent;\n\ntype EmptyContent = { q: \"\"; a: \"\" } | \"\";\nconst emptyQAContent = (): EmptyContent => {\n\treturn { q: \"\", a: \"\" };\n};\nconst EmptyContentMap: { [field in CardField]: () => EmptyContent } = {\n\tq: emptyQAContent,\n\ta: emptyQAContent,\n\tnote: () => \"\",\n};\nexport const emptyContent = (field: CardField) => {\n\treturn EmptyContentMap[field]();\n};\n\nexport const noteContentIsEmpty = (content: string) => content === \"\";\nexport const qaContentIsNotFull = (content: QACardContent) =>\n\t(content as QACardContent).q === \"\" || (content as QACardContent).a === \"\";\n\nconst createAppendStr: CreateModify = (inputValue: string) => (oldValue: string) => oldValue + inputValue;\nconst UpdateTypeCreateModifyMap: { [updateType in UpdateType]: CreateModify } = {\n\tAPPEND: createAppendStr,\n\tREPLACE: createReplace,\n};\nconst updateTypeToCreateModify = (updateType: UpdateType) => UpdateTypeCreateModifyMap[updateType];\n\n// noteObjects are a single value like the selectedString, so we use them as a field for convenience\n// TOOD-NICE: make single value generic CardObject definition\nconst inputField: CardField = \"note\";\n\nexport const strToCardContent = (\n\tcontentStr: string,\n\toutputField: CardField,\n\tupdateType: UpdateType,\n\texistingContent: CardContent\n): CardContent => {\n\tconst changeSpec = {\n\t\tinputObject: contentStr,\n\t\tinputField,\n\t\tfieldToBeChanged: outputField,\n\t\tobjectToBeChanged: existingContent,\n\t\tcreateModify: updateTypeToCreateModify(updateType),\n\t};\n\treturn changeCardObject(changeSpec);\n};\n","import { NoteOrigin, QAOrigin, SingleOrigin, emptyOrigin } from \"./model-origin\";\nimport {\n\tNoteCardContent,\n\tQACardContent,\n\tnoteContentIsEmpty,\n\tqaContentIsNotFull,\n\tstrToCardContent,\n\tCardField,\n} from \"./model-content\";\nimport { createReplace, changeCardObject } from \"./model-permutation\";\n\nexport type CardID = string;\nexport const cardIDToNumber = (cardID: CardID) => parseInt(cardID);\nexport const nextCardID = (lastCardIDNumber: number) => (lastCardIDNumber + 1).toString();\n\nexport type CardType = \"Note\" | \"Q-A\";\nexport type NoteConfig = { cardID: CardID; type: CardType; content: NoteCardContent; origin?: NoteOrigin };\nexport type QAConfig = { cardID: CardID; type: CardType; content: QACardContent; origin?: QAOrigin };\nexport type CardConfig = NoteConfig | QAConfig;\n\nconst CardIsFullMap: { [card in CardType]: (config: CardConfig) => boolean } = {\n\tNote: (config) => noteContentIsEmpty(config.content as NoteCardContent),\n\t\"Q-A\": (config) => qaContentIsNotFull(config.content as QACardContent),\n};\nexport const cardIsNotFull = (config: CardConfig) => CardIsFullMap[config.type](config);\n\nexport type UpdateType = \"REPLACE\" | \"APPEND\";\n\nexport type CreationType = \"note\" | \"q\" | \"a\";\n\nexport const strToCardConfig = (\n\tcontentStr: string,\n\toutputField: CardField,\n\tupdateType: UpdateType,\n\tbaseCard: CardConfig\n): CardConfig => {\n\tconst changedContent = strToCardContent(contentStr, outputField, updateType, baseCard.content);\n\treturn { ...baseCard, content: changedContent } as CardConfig;\n};\n\nexport const originToCardConfig = (\n\tsingleOrigin: SingleOrigin,\n\toutputField: CardField,\n\tbaseCard: CardConfig\n): CardConfig => {\n\tconst changeSpec = {\n\t\tinputObject: singleOrigin,\n\t\tinputField: \"note\" as CardField,\n\t\tfieldToBeChanged: outputField,\n\t\tobjectToBeChanged: baseCard.origin ? baseCard.origin : emptyOrigin(outputField),\n\t\tcreateModify: createReplace,\n\t};\n\n\tconst changedOrigin = changeCardObject(changeSpec);\n\treturn { ...baseCard, origin: changedOrigin } as CardConfig;\n};\n","import { createSelector } from \"reselect\";\nimport { CardsState } from \"./model/model-state\";\nimport { NAME } from \"./constants\";\n\nexport const getAll = (state: any) => state[NAME].present;\n\nexport const getLastCardIDNumber = createSelector(getAll, (state) => state.lastCardIDNumber);\n\nexport const getCards = createSelector(getAll, (state: CardsState) => state.cards);\n\nexport const getGoalCard = createSelector(getAll, (state: CardsState) => state.goalCard);\n\nexport const getCardByID = (state: any, cardID: string) => getCards(state)[cardID];\n\nexport const getCardOriginByID = (state: any, cardID: string) => getCardByID(state, cardID).origin;\n","import { CardField, strToCardContent } from \"./model-content\";\nimport { getLastCardIDNumber } from \"../selectors\";\nimport { CardConfig, nextCardID, UpdateType } from \"./model-config\";\nimport { CardsState } from \"./model-state\";\n\nexport type CardPayload = Omit<CardConfig, \"cardID\">;\nexport const emptyNotePayload = (): CardPayload => {\n\treturn { type: \"Note\", content: \"\" };\n};\nexport const emptyQAPayload = (): CardPayload => {\n\treturn { type: \"Q-A\", content: { q: \"\", a: \"\" } };\n};\n\nexport const strToCardPayload = (\n\tcontentStr: string,\n\toutputField: CardField,\n\tupdateType: UpdateType,\n\tbaseCard: CardPayload\n): CardPayload => {\n\tconst changedContent = strToCardContent(contentStr, outputField, updateType, baseCard.content);\n\treturn { ...baseCard, content: changedContent };\n};\n\nconst EmptyPayloadFieldMap: {\n\t[key in CardField]: () => CardPayload;\n} = {\n\tnote: emptyNotePayload,\n\tq: emptyQAPayload,\n\ta: emptyQAPayload,\n};\nexport const cardFieldToEmptyPayload = (field: CardField) => EmptyPayloadFieldMap[field]();\n\nexport const cardPayloadToCardConfig = (payload: CardPayload, state: CardsState) => {\n\treturn { ...payload, cardID: nextCardID(getLastCardIDNumber(state)) } as CardConfig;\n};\n","import { CreationType, CardConfig, CardID, strToCardConfig, originToCardConfig } from \"./model/model-config\";\nimport { CardPayload, cardPayloadToCardConfig, emptyNotePayload, emptyQAPayload } from \"./model/model-payload\";\nimport * as t from \"./actionTypes\";\nimport { Dispatch } from \"redux\";\nimport { CardField, strToCardContent, StringCardContent } from \"./model/model-content\";\nimport { SingleOrigin, singleOriginToCardOrigin } from \"./model/model-origin\";\n\nexport const cardPush = (cardPayload: CardPayload) => {\n\treturn (dispatch: Dispatch, getState: Function) => {\n\t\tdispatch({\n\t\t\ttype: t.CARD_PUSH,\n\t\t\tpayload: cardPayloadToCardConfig(cardPayload, getState()),\n\t\t});\n\t};\n};\nexport const emptyNoteCard = () => cardPush(emptyNotePayload());\nexport const emptyQACard = () => cardPush(emptyQAPayload());\n\nexport const cardUpdate = (card: CardConfig) => {\n\treturn { type: t.CARD_UPDATE, payload: card };\n};\nexport const replaceCardFieldContent = (cardField: CardField, cardConfig: CardConfig, newValue: string) => {\n\treturn cardUpdate(strToCardConfig(newValue, cardField, \"REPLACE\", cardConfig));\n};\nexport const replaceCardFieldOrigin = (cardField: CardField, cardConfig: CardConfig, newOrigin: SingleOrigin) => {\n\treturn cardUpdate(originToCardConfig(newOrigin, cardField, cardConfig));\n};\nexport const replaceCardField = (\n\tcardField: CardField,\n\tcardConfig: CardConfig,\n\tnewValue: StringCardContent,\n\tnewOrigin: SingleOrigin\n) => {\n\tconst config = {\n\t\t...cardConfig,\n\t\tcontent: strToCardContent(newValue, cardField, \"REPLACE\", cardConfig.content),\n\t\torigin: singleOriginToCardOrigin(newOrigin, cardField, cardConfig.origin),\n\t};\n\treturn cardUpdate(config as CardConfig);\n};\n\nexport const removeCard = (cardID: CardID) => {\n\treturn { type: t.CARD_REMOVE, payload: cardID };\n};\n\nexport const setGoalCard = (cardConfig: CardConfig, creationType: CreationType) => {\n\treturn { type: t.CARD_GOAL, payload: { ...cardConfig, creationType } };\n};\n\nexport const resetGoalCard = () => {\n\treturn { type: t.CARD_GOAL, payload: null };\n};\n","/// Tooltip-Text\n\nexport const switchToActiveRiverTooltip = \"Switch to the Active-River view\";\nexport const switchToSummaryRiverTooltip = \"Switch to the Summary-River view\";\n\nexport const undoTooltip = \"Undo last action\";\nexport const redoTooltip = \"Redo last action\";\n\nexport const nextPageTooltip = \"Next page\";\nexport const previousPageTooltip = \"Previous page\";\n\nexport const deleteCardTooltip = \"Delete this card\";\nexport const grabForCardTooltip = \"Activate the document-selection grab for this card(-field)\";\nexport const jumpToOriginTooltip = \"Jump to the origin of the card content\";\nexport const appendToCardTooltip = \"Add the current selection to this card (only from document)\";\n\nexport const newQACardTooltip = \"Create new QA-card\";\nexport const newNoteCardTooltip = \"Create new Note-card\";\n\nexport const deleteDocumentTooltip = \"Delete this document and all its corresponding cards\";\nexport const loadSavedDocumentTooltip = \"Load the card data of this document\";\n\n/// Text\n\nexport const noMaterialText = \"No PDF file specified.\";\nexport const loadingMaterialText = \"Loading PDF…\";\n\nexport const activeDocumentText = \"Active Document:\";\nexport const existingDataText = \"Inactive documents with existing data:\";\nexport const loadMaterialText = \"Load document\";\nexport const downloadDatasetsText = \"Download document datasets\";\nexport const uploadDatasetsText = \"Upload document datasets\";\n\nexport const noteText = \"Note\";\nexport const questionText = \"Question\";\nexport const answerText = \"Answer\";\n\n/// Delay\n\nexport const defaultEnterDelay = 500;\nexport const defaultEnterNextDelay = 1000;\n","import React, { ReactElement } from \"react\";\nimport { Tooltip } from \"@material-ui/core\";\nimport { newNoteCardTooltip, defaultEnterDelay, defaultEnterNextDelay } from \"../constants\";\n\nexport const NewNoteCardTooltip = ({ children }: { children: ReactElement }) => {\n\treturn (\n\t\t<Tooltip title={newNoteCardTooltip} enterDelay={defaultEnterDelay} enterNextDelay={defaultEnterNextDelay}>\n\t\t\t{children}\n\t\t</Tooltip>\n\t);\n};\n","import React, { ReactElement } from \"react\";\nimport { Tooltip } from \"@material-ui/core\";\nimport { defaultEnterDelay, defaultEnterNextDelay, newQACardTooltip } from \"../constants\";\n\nexport const AddQAButtonTooltip = ({ children }: { children: ReactElement }) => {\n\treturn (\n\t\t<Tooltip title={newQACardTooltip} enterDelay={defaultEnterDelay} enterNextDelay={defaultEnterNextDelay}>\n\t\t\t{children}\n\t\t</Tooltip>\n\t);\n};\n","import React, { ReactElement } from \"react\";\nimport { Tooltip } from \"@material-ui/core\";\nimport { defaultEnterDelay, defaultEnterNextDelay, deleteCardTooltip } from \"../constants\";\n\nexport const DeleteCardButtonTooltip = ({ children }: { children: ReactElement }) => {\n\treturn (\n\t\t<Tooltip title={deleteCardTooltip} enterDelay={defaultEnterDelay} enterNextDelay={defaultEnterNextDelay}>\n\t\t\t{children}\n\t\t</Tooltip>\n\t);\n};\n","import React, { ReactElement } from \"react\";\nimport { Tooltip } from \"@material-ui/core\";\nimport { defaultEnterDelay, defaultEnterNextDelay, appendToCardTooltip } from \"../constants\";\n\nexport const AppendButtonTooltip = ({ children }: { children: ReactElement }) => {\n\treturn (\n\t\t<Tooltip title={appendToCardTooltip} enterDelay={defaultEnterDelay} enterNextDelay={defaultEnterNextDelay}>\n\t\t\t{children}\n\t\t</Tooltip>\n\t);\n};\n","import * as components from \"./components\";\nimport * as constants from \"./constants\";\n\nexport default { components, constants };\n","import FeaturedVideoIcon from \"@material-ui/icons/FeaturedVideo\";\nimport React from \"react\";\nimport { IconButton } from \"@material-ui/core\";\nimport { useDispatch } from \"react-redux\";\nimport text from \"../../text\";\nimport { emptyNoteCard } from \"../actions\";\n\nexport const AddNoteButton = () => {\n\tconst dispatch = useDispatch();\n\treturn (\n\t\t<text.components.NewNoteCardTooltip>\n\t\t\t<IconButton\n\t\t\t\ttype=\"button\"\n\t\t\t\tonClick={() => {\n\t\t\t\t\tdispatch(emptyNoteCard());\n\t\t\t\t}}\n\t\t\t>\n\t\t\t\t<FeaturedVideoIcon></FeaturedVideoIcon>\n\t\t\t</IconButton>\n\t\t</text.components.NewNoteCardTooltip>\n\t);\n};\n","import FeaturedPlayListIcon from \"@material-ui/icons/FeaturedPlayList\";\nimport React from \"react\";\nimport { IconButton } from \"@material-ui/core\";\nimport { useDispatch } from \"react-redux\";\nimport text from \"../../text\";\nimport { emptyQACard } from \"../actions\";\n\nexport const AddQAButton = () => {\n\tconst dispatch = useDispatch();\n\treturn (\n\t\t<text.components.AddQAButtonTooltip>\n\t\t\t<IconButton\n\t\t\t\ttype=\"button\"\n\t\t\t\tonClick={() => {\n\t\t\t\t\tdispatch(emptyQACard());\n\t\t\t\t}}\n\t\t\t>\n\t\t\t\t<FeaturedPlayListIcon></FeaturedPlayListIcon>\n\t\t\t</IconButton>\n\t\t</text.components.AddQAButtonTooltip>\n\t);\n};\n","import DeleteForeverIcon from \"@material-ui/icons/DeleteForever\";\nimport React from \"react\";\nimport { IconButton } from \"@material-ui/core\";\nimport { useDispatch } from \"react-redux\";\nimport { CardID } from \"../model/model-config\";\nimport text from \"../../text\";\nimport { removeCard } from \"../actions\";\n\n//TODO-NICE: use storybook for visual component testing\n\nexport const DeleteCardButton = ({ cardID }: { cardID: CardID }) => {\n\tconst dispatch = useDispatch();\n\treturn (\n\t\t<text.components.DeleteCardButtonTooltip>\n\t\t\t<IconButton\n\t\t\t\ttype=\"button\"\n\t\t\t\tonClick={() => {\n\t\t\t\t\tdispatch(removeCard(cardID));\n\t\t\t\t}}\n\t\t\t>\n\t\t\t\t<DeleteForeverIcon fontSize=\"small\"></DeleteForeverIcon>\n\t\t\t</IconButton>\n\t\t</text.components.DeleteCardButtonTooltip>\n\t);\n};\n","import { CardConfig, CreationType, CardID } from \"./model-config\";\n\nexport type GoalCard = CardConfig & { creationType: CreationType };\n\nexport type Cards = { [cardID: string]: CardConfig };\n\nexport type CardsState = {\n\tcards: Cards;\n\tlastCardIDNumber: number;\n\tgoalCard: GoalCard | null;\n};\nexport const removeCardFromCardsState = (state: CardsState, cardID: CardID) => {\n\tconst cards = { ...state.cards };\n\n\t// we do not reset the ID counter\n\tdelete cards[cardID];\n\n\treturn { ...state, cards };\n};\nexport const replaceCardsInCardsState = (state: CardsState, cards: Cards, lastCardIDNumber: number) => {\n\treturn {\n\t\t...state,\n\t\tcards,\n\t\tlastCardIDNumber,\n\t};\n};\nexport const updateCardInCards = (cards: Cards, toBeUpdated: CardConfig) => {\n\tconst cardObj = { ...cards };\n\tcardObj[toBeUpdated.cardID] = toBeUpdated;\n\treturn cardObj;\n};\nexport const addCardToCards = updateCardInCards;\n","export const NAME = \"documentDB\";\n","import { NAME } from \"./constants\";\n\nexport const ARCHIVE_CURRENT_DATA = NAME + \"/ARCHIVE_CURRENT_DATA\";\nexport const LOAD_DOCUMENT_DATA_SETS = NAME + \"/LOAD_DOCUMENT_DATA_SETS\";\nexport const DELETE_DOCUMENT_DATA_SET = NAME + \"/DELETE_DOCUMENT_DATA_SET\";\nexport const DOCUMENT_CHANGE = NAME + \"/DOCUMENT_CHANGE\";\n","import { DocumentData } from \"./model\";\nimport * as t from \"./actionTypes\";\n\nexport const archiveDBData = (dbData: DocumentData) => {\n\treturn { type: t.ARCHIVE_CURRENT_DATA, payload: dbData };\n};\n\nexport const loadDocumentDataSets = (dbData: DocumentData[], newActiveDataSet?: DocumentData) => {\n\treturn { type: t.LOAD_DOCUMENT_DATA_SETS, payload: { dbData, newActiveDataSet } };\n};\n\n//TODO-NICE: might need to make my convention of always using payload as data-field obvious?\n\nexport const deleteDocumentDataSet = (document: string) => {\n\treturn { type: t.DELETE_DOCUMENT_DATA_SET, payload: document };\n};\n","import { CardRiverState } from \"../river/model\";\nimport { CardsState } from \"../cards/model/model-state\";\nimport { DisplayData } from \"../display/model\";\n\nexport type ArchiveRiver = Pick<\n\tCardRiverState,\n\t\"riverMakeUps\" | \"activeRiverMakeUpID\" | \"pushToRiverID\" | \"lastRiverIDNumber\"\n>;\n\nexport type ArchiveCards = Pick<CardsState, \"cards\" | \"lastCardIDNumber\">;\n\ntype ArchiveDisplay = Pick<DisplayData, \"currentPage\" | \"totalPages\">;\n\nexport type DocumentData = {\n\tname: string;\n} & ArchiveDisplay &\n\tArchiveRiver &\n\tArchiveCards;\n\nexport type DocumentDB = { [name: string]: DocumentData };\n\nexport type DocumentDBState = { documentDB: DocumentDB };\n\nexport const updateDocumentDataInDocumentDB = (state: DocumentDBState, documentData: DocumentData): DocumentDBState => {\n\treturn {\n\t\t...state,\n\t\tdocumentDB: { ...state.documentDB, [documentData.name]: documentData },\n\t};\n};\n\nexport const updateDocumentDataSetsInDocumentDB = (\n\tstate: DocumentDBState,\n\tdocumentDataSets: DocumentData[]\n): DocumentDBState => {\n\treturn {\n\t\t...state,\n\t\tdocumentDB: {\n\t\t\t...state.documentDB,\n\t\t\t...documentDataSets.reduce((prev, dbData) => {\n\t\t\t\tprev[dbData.name] = dbData;\n\t\t\t\treturn prev;\n\t\t\t}, {} as DocumentDB),\n\t\t},\n\t};\n};\n\nexport const removeDocumentDataFromDocumentDB = (state: DocumentDBState, document: string): DocumentDBState => {\n\treturn {\n\t\t...state,\n\t\tdocumentDB: Object.fromEntries(Object.entries(state.documentDB).filter((arr) => arr[0] !== document)),\n\t};\n};\n","import {\n\tDocumentDBState,\n\tDocumentData,\n\tupdateDocumentDataInDocumentDB,\n\tupdateDocumentDataSetsInDocumentDB,\n\tremoveDocumentDataFromDocumentDB,\n} from \"./model\";\nimport * as t from \"./actionTypes\";\n\nconst initialState: DocumentDBState = { documentDB: {} };\n\n//TODO-NICE: PDF-date gets saved with name, better use some hash or something (rename of document file is likely) -> use size or last-modified or smth like that instead of name\n\nconst documentDB = (\n\tstate = initialState,\n\t{ type, payload }: { type: string; payload: DocumentData | DocumentData[] | string | { dbData: DocumentData[] } }\n): DocumentDBState => {\n\tswitch (type) {\n\t\t// dont need to undo this, because if we change the active river and then change the document, the archive version gets overwritten\n\t\tcase t.ARCHIVE_CURRENT_DATA:\n\t\t\treturn updateDocumentDataInDocumentDB(state, payload as DocumentData);\n\t\tcase t.LOAD_DOCUMENT_DATA_SETS:\n\t\t\treturn updateDocumentDataSetsInDocumentDB(\n\t\t\t\tstate,\n\t\t\t\t(payload as { dbData: DocumentData[] }).dbData as DocumentData[]\n\t\t\t);\n\t\tcase t.DELETE_DOCUMENT_DATA_SET:\n\t\t\treturn removeDocumentDataFromDocumentDB(state, payload as string);\n\t\tdefault:\n\t\t\treturn state;\n\t}\n};\n\nexport default documentDB;\n","import { createSelector } from \"reselect\";\nimport { DocumentDBState } from \"./model\";\nimport { NAME } from \"./constants\";\n\nexport const getAll = (state: any) => state[NAME].present;\n\nexport const getDocumentDB = createSelector(getAll, (state: DocumentDBState) => state.documentDB);\n\nexport const getDocumentNames = createSelector(getDocumentDB, (db) => Object.keys(db));\n\nexport const getDocumentDataSets = createSelector(getDocumentDB, (db) => Object.values(db));\n","import * as actions from \"./actions\";\nimport * as actionTypes from \"./actionTypes\";\nimport * as constants from \"./constants\";\nimport reducer from \"./reducer\";\nimport * as selectors from \"./selectors\";\n\nexport default { actions, actionTypes, constants, reducer, selectors };\n","import * as t from \"./actionTypes\";\nimport { cardIDToNumber } from \"./model/model-config\";\nimport {\n\tCardsState,\n\tremoveCardFromCardsState,\n\tupdateCardInCards,\n\taddCardToCards,\n\treplaceCardsInCardsState,\n} from \"./model/model-state\";\nimport { ArchiveCards } from \"../db/model\";\nimport db from \"../db\";\n\nconst intialState: CardsState = {\n\tcards: {\n\t\t\"0\": {\n\t\t\tcardID: \"0\",\n\t\t\ttype: \"Q-A\",\n\t\t\tcontent: { q: \"Was ist der Sinn des Lebens?\", a: \"42\" },\n\t\t},\n\t\t\"1\": {\n\t\t\tcardID: \"1\",\n\t\t\ttype: \"Q-A\",\n\t\t\tcontent: { q: \"Welches Layout macht mehr Sinn?\", a: \"??\" },\n\t\t},\n\t\t\"2\": { cardID: \"2\", type: \"Note\", content: \"Note here\" },\n\t},\n\tlastCardIDNumber: 2,\n\tgoalCard: null,\n};\n\nconst cards = (state = intialState, { type, payload }: { type: string; payload?: any }) => {\n\tswitch (type) {\n\t\tcase t.CARD_PUSH:\n\t\t\tconst lastCardIDNumber = cardIDToNumber(payload.cardID) + 1;\n\t\t\treturn { ...state, cards: addCardToCards(state.cards, payload), lastCardIDNumber };\n\t\tcase t.CARD_UPDATE:\n\t\t\t// either the update was for a goalCard, then we want to reset it\n\t\t\t// or the update was not for a goalCard, then there should not be a goalCard anyways\n\t\t\tconst goalCard = null;\n\n\t\t\treturn { ...state, cards: updateCardInCards(state.cards, payload), goalCard };\n\t\tcase t.CARD_REMOVE:\n\t\t\treturn removeCardFromCardsState(state, payload as string);\n\t\tcase t.CARD_GOAL:\n\t\t\treturn { ...state, goalCard: payload };\n\t\tcase db.actionTypes.DOCUMENT_CHANGE:\n\t\t\tif (payload) {\n\t\t\t\treturn replaceCardsInCardsState(\n\t\t\t\t\tintialState,\n\t\t\t\t\t(payload as ArchiveCards).cards,\n\t\t\t\t\t(payload as ArchiveCards).lastCardIDNumber\n\t\t\t\t);\n\t\t\t} else {\n\t\t\t\treturn intialState;\n\t\t\t}\n\t\tcase db.actionTypes.LOAD_DOCUMENT_DATA_SETS:\n\t\t\t// basically the same as DOCUMENT_CHANGE, just only triggered\n\t\t\t// when uploading data that corresponds to current document\n\t\t\t// and if not we dont reset\n\t\t\tif (payload.newActiveDataSet) {\n\t\t\t\treturn replaceCardsInCardsState(\n\t\t\t\t\tintialState,\n\t\t\t\t\t(payload as ArchiveCards).cards,\n\t\t\t\t\t(payload as ArchiveCards).lastCardIDNumber\n\t\t\t\t);\n\t\t\t} else {\n\t\t\t\treturn state;\n\t\t\t}\n\t\tdefault:\n\t\t\treturn state;\n\t}\n};\n\nexport default cards;\n","import * as services from \"./services\";\nimport * as constants from \"./constants\";\nimport * as actionTypes from \"./actionTypes\";\nimport * as actions from \"./actions\";\nimport * as selectors from \"./selectors\";\nimport * as components from \"./components\";\nimport * as model from \"./model\";\nimport reducer from \"./reducer\";\n\nexport default { services, constants, actionTypes, actions, reducer, selectors, components, model };\n","import { CreationType, UpdateType, CardID, CardConfig } from \"../../cards/model/model-config\";\nimport { CardOrigin } from \"../../cards/model/model-origin\";\nimport { getCurrentSelectedString, getSourceCard } from \"../selectors\";\nimport cards from \"../../cards\";\nimport { resetManuallySelectedString, resetSourceCard } from \"../actions\";\nimport { CardField } from \"../../cards/model/model-content\";\n\nconst selectionToCardBase = (\n\tcreationType: CreationType,\n\tupdateType: UpdateType,\n\torigin?: CardOrigin,\n\tcardID?: string\n) => {\n\treturn (dispatch: Function, getState: Function) => {\n\t\tconst state = getState();\n\n\t\tconst isUpdate = cardID !== undefined;\n\n\t\tlet inputField: CardField;\n\t\tlet inputOrigin;\n\n\t\tconst sourceCard = getSourceCard(state);\n\t\tif (sourceCard) {\n\t\t\tdispatch(resetSourceCard());\n\t\t\t// if a soureCard exists, then we are working with a selection from a card and not the document,\n\t\t\t// so we need to use the sourceCard field\n\t\t\tinputField = sourceCard.sourceField;\n\t\t\t// origin should be from the SourceCard  in which the extract button has been clicked\n\t\t\t// if it exists\n\t\t\t// the SourceCard can or can not have an origin\n\t\t\tinputOrigin = sourceCard.origin;\n\t\t} else {\n\t\t\t// we exploit that the input from the document is always just a SingleOrigin=NoteOrigin\n\t\t\t// need to transform it because we can create also QA-Cards from document\n\t\t\tinputField = \"note\";\n\t\t\t// this origin is created by the caller of this function from the document\n\t\t\tinputOrigin = origin;\n\t\t}\n\n\t\tconst selectedString = getCurrentSelectedString(state);\n\n\t\tif (isUpdate) {\n\t\t\tconst currentCard = cards.selectors.getCardByID(getState(), cardID as CardID);\n\t\t\tconst outputOrigin = inputOrigin\n\t\t\t\t? cards.services.transformInputOrigin(inputOrigin, inputField, creationType, currentCard.origin)\n\t\t\t\t: undefined;\n\t\t\tconst config = cards.model.model_config.strToCardConfig(selectedString, creationType, updateType, currentCard);\n\n\t\t\tdispatch(cards.actions.cardUpdate({ ...config, origin: outputOrigin } as CardConfig));\n\t\t} else {\n\t\t\tconst outputOrigin = inputOrigin\n\t\t\t\t? cards.services.transformInputOrigin(inputOrigin, inputField, creationType)\n\t\t\t\t: undefined;\n\t\t\tconst emptyPayload = cards.model.model_payload.cardFieldToEmptyPayload(creationType);\n\t\t\tconst cardPayload = cards.model.model_payload.strToCardPayload(\n\t\t\t\tselectedString,\n\t\t\t\tcreationType,\n\t\t\t\tupdateType,\n\t\t\t\temptyPayload\n\t\t\t);\n\n\t\t\tdispatch(cards.actions.cardPush({ ...cardPayload, origin: outputOrigin }));\n\t\t}\n\n\t\tdispatch(resetManuallySelectedString());\n\t};\n};\n\nexport const selectionToCardAppend = (creationType: CreationType, origin?: CardOrigin, cardID?: string) =>\n\tselectionToCardBase(creationType, \"APPEND\", origin, cardID);\n\nexport const selectionToCardReplace = (creationType: CreationType, origin?: CardOrigin, cardID?: string) =>\n\tselectionToCardBase(creationType, \"REPLACE\", origin, cardID);\n","import * as actions from \"./actions\";\nimport * as constants from \"./constants\";\nimport * as actionTypes from \"./actionTypes\";\nimport reducer from \"./reducer\";\nimport * as selectors from \"./selectors\";\nimport * as components from \"./components\";\nimport * as services from \"./services\";\n\nexport default { actions, actionTypes, constants, components, reducer, selectors, services };\n","import { createSelector } from \"reselect\";\nimport { DisplayData, MaterialData, MaterialGroupData } from \"./model\";\nimport { NAME } from \"./constants\";\nimport selection from \"../selection\";\nimport { SingleOrigin } from \"../cards/model/model-origin\";\n\nexport const getAll = (state: any): DisplayData => state[NAME];\n\nexport const getPDF = createSelector(getAll, (state: DisplayData) => {\n\treturn { pdf: state.pdf ? state.pdf : null };\n});\n\nexport const getPDFName = createSelector(getAll, (state) => state.pdfName);\n\nexport const getRenderCritialData = createSelector(getAll, (state: DisplayData) => {\n\treturn {\n\t\tpdf: state.pdf,\n\t\tcurrentPage: state.currentPage,\n\t\tdocumentRef: state.documentRef,\n\t};\n});\n\nexport const getTotalPages = createSelector(getAll, (state: DisplayData) => state.totalPages);\n\nexport const getCurrentPage = createSelector(getAll, (state: DisplayData) => state.currentPage);\n\nexport const getPageControlData = createSelector(getTotalPages, getCurrentPage, (totalPages, currentPage) => {\n\treturn { currentPage, totalPages };\n});\n\nexport const getDocumentRef = createSelector(getAll, (state: DisplayData) => state.documentRef);\n\nexport const getMaterialData = createSelector(getAll, (state: DisplayData) => state.materialData);\n\nexport const getTimeStamp = createSelector(getMaterialData, (state: MaterialData) => state.materialDataTimeStamp);\n\nexport const getMaterialSpans = createSelector(\n\tgetMaterialData as (state: any) => MaterialGroupData,\n\t(state: MaterialGroupData) => state.materialSpans\n);\n\nexport const getSpanIndex = (state: any, span: HTMLSpanElement) => {\n\tconst spans = getMaterialSpans(state);\n\treturn spans.indexOf(span);\n};\n\nexport const getMaterialBoundingRects = createSelector(\n\tgetMaterialData as (state: any) => MaterialGroupData,\n\t(state: MaterialGroupData) => state.materialBoundingRects\n);\n\nexport const getDataExists = createSelector(getTimeStamp, (timestamp) => timestamp > 0);\n\nexport const getDisplayStatus = createSelector(getAll, (state: DisplayData) => state.displayStatus);\n\nexport const displayStatusIsShow = createSelector(getDisplayStatus, (status) => status === \"SHOW\");\n\nexport const getZoomTarget = createSelector(getAll, (state: DisplayData) => state.zoomTargetSpanIndex);\n\nexport const getMaterialHeight = createSelector(getAll, (state: DisplayData) => state.materialHeight);\n\nexport const getCurrentOrigin = createSelector(\n\t(state: any) => state,\n\tgetCurrentPage,\n\tselection.selectors.getCurrentSelectedParent,\n\t(state, currentPage, selectedParent): SingleOrigin => {\n\t\treturn {\n\t\t\tspanIndex: getSpanIndex(state, selectedParent as HTMLSpanElement),\n\t\t\tpage: currentPage,\n\t\t};\n\t}\n);\n","import { KeyboardEvent } from \"react\";\n\nexport const incrementer = () => {\n\tlet counter = 0;\n\treturn () => {\n\t\tconst curCounter = counter;\n\t\tcounter++;\n\t\treturn curCounter;\n\t};\n};\n\nexport type KeyActionMap = { [key: string]: any };\n\ntype KeyEventDispatcher = (event: KeyboardEvent<Element>, dispatch: any, state?: any) => void;\n\nexport const keyEventDispatcherCreator = (keyMap: KeyActionMap): KeyEventDispatcher => (\n\tevent: KeyboardEvent,\n\tdispatch: any\n) => {\n\tconst action = keyMap[event.key];\n\tif (action) {\n\t\tevent.preventDefault();\n\t\tdispatch(action);\n\t}\n};\n\nexport function partition(array: Array<any>, filter: (val: any) => boolean) {\n\tlet pass: any[] = [],\n\t\tfail: any[] = [];\n\tarray.forEach((e) => (filter(e) ? pass : fail).push(e));\n\treturn [pass, fail];\n}\n\nexport const tryInterval = (tries: number, ms: number, func: () => boolean) => {\n\tconst increment = incrementer();\n\tconst timeout = setInterval(() => {\n\t\tif (increment() > tries) {\n\t\t\tclearInterval(timeout);\n\t\t\treturn;\n\t\t}\n\n\t\tif (func()) clearInterval(timeout);\n\t}, ms);\n};\n","export const splitExpandedSpans = (expandedSpans: ExpandedSpan[]) => {\n\tconst spans = [];\n\tconst boundingRects = [];\n\n\tfor (const exSpan of expandedSpans) {\n\t\tspans.push(exSpan.span);\n\t\tboundingRects.push(exSpan.rect);\n\t}\n\n\treturn { spans, boundingRects };\n};\n\nexport const sortExpandedSpansAccordingToX = (expandedSpans: ExpandedSpan[]) =>\n\texpandedSpans.sort((exSpan, exSpan2) => exSpan.rect.x - exSpan2.rect.x);\n\nexport const sortExpandedSpansAccordingToY = (expandedSpans: ExpandedSpan[]) =>\n\texpandedSpans.sort((exSpan, exSpan2) => exSpan.rect.y - exSpan2.rect.y);\n\ntype ExpandedSpan = { span: HTMLSpanElement; rect: DOMRect };\n\nexport const expandSpans = (spans: HTMLSpanElement[]) => spans.map(expandSpan);\n\nconst expandSpan = (span: HTMLSpanElement): ExpandedSpan => {\n\treturn { span, rect: span.getBoundingClientRect() };\n};\n","import { MaterialGroupData } from \"../model\";\nimport { expandSpans, sortExpandedSpansAccordingToY, splitExpandedSpans } from \"./span\";\n\nexport const materialData = (container: HTMLDivElement): MaterialGroupData | null => {\n\t// assumes all spans inside the document are relevant (potentially multiple pages)\n\tconst startingSpans = Array.from(container.querySelectorAll(\"span\"));\n\tif (startingSpans.length === 0) return null;\n\n\tconst { spans, boundingRects } = splitExpandedSpans(sortExpandedSpansAccordingToY(expandSpans(startingSpans)));\n\n\treturn {\n\t\tmaterialSpans: spans,\n\t\tmaterialBoundingRects: boundingRects,\n\t};\n};\n","import { ChangeEvent, RefObject } from \"react\";\nimport { Dispatch } from \"redux\";\nimport * as t from \"./actionTypes\";\nimport { PageMove, MaterialData, pageCorrections } from \"./model\";\nimport {\n\tgetPageControlData,\n\tgetDisplayStatus,\n\tgetZoomTarget,\n\tgetTimeStamp,\n\tgetMaterialSpans,\n\tgetCurrentOrigin,\n} from \"./selectors\";\nimport { keyEventDispatcherCreator, KeyActionMap, tryInterval } from \"../../shared/utils\";\nimport { materialData } from \"./services/materialData\";\nimport selection from \"../selection\";\nimport cards from \"../cards\";\n\nexport const pdfUpload = (pdf: File) => {\n\treturn { type: t.PDF_UPLOADED, payload: pdf };\n};\n\nexport const materialUploaded = (event: ChangeEvent<HTMLInputElement>) => {\n\treturn (dispatch: Dispatch) => {\n\t\tconst files = event.target.files;\n\t\tconst pdf = files ? files[0] : null;\n\t\tif (pdf) dispatch(pdfUpload(pdf));\n\t};\n};\n\nexport const materialLoaded = (totalPages: number) => {\n\treturn { type: t.MATERIAL_LOADED, payload: totalPages };\n};\n\n// text-layer is not really guaranteed to be rendered on render \"success\",\n// so we use this ugly \"try ten times\" approach\nexport function captureMaterialData(documentRef: RefObject<any>) {\n\treturn (dispatch: any, getState: Function) => {\n\t\tconst state = getState();\n\t\tconst container = documentRef.current;\n\t\tif (container) {\n\t\t\t// TODO-NICE: still possibility of race-condition,\n\n\t\t\tconst startTime = Date.now();\n\n\t\t\t// try once before going into intervals (most times once should work)\n\t\t\tconst curMaterialGroupData = materialData(container as HTMLDivElement);\n\t\t\tif (curMaterialGroupData && getTimeStamp(state) < startTime) {\n\t\t\t\tconst payload: MaterialData = {\n\t\t\t\t\t...curMaterialGroupData,\n\t\t\t\t\tmaterialDataTimeStamp: startTime,\n\t\t\t\t};\n\t\t\t\tdispatch({ type: t.MATERIAL_DATA, payload });\n\t\t\t} else {\n\t\t\t\ttryInterval(10, 20, () => {\n\t\t\t\t\tconst curMaterialGroupData = materialData(container as HTMLDivElement);\n\t\t\t\t\tif (curMaterialGroupData && getTimeStamp(getState()) < startTime) {\n\t\t\t\t\t\tconst payload: MaterialData = {\n\t\t\t\t\t\t\t...curMaterialGroupData,\n\t\t\t\t\t\t\tmaterialDataTimeStamp: startTime,\n\t\t\t\t\t\t};\n\t\t\t\t\t\tdispatch({ type: t.MATERIAL_DATA, payload });\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t}\n\t\t\t\t\treturn false;\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t};\n}\n\nexport const setPage = (page: number) => {\n\treturn { type: t.PAGE_UPDATE, payload: page };\n};\n\n//TODO-PERF: maybe hide all rendered pages but not shown instead of re-rendering for faster switching?\nexport const movePage = (type: PageMove) => {\n\treturn (dispatch: Dispatch, getState: Function) => {\n\t\tconst { currentPage, totalPages } = getPageControlData(getState());\n\t\tswitch (type) {\n\t\t\tcase \"NEXT\":\n\t\t\t\tdispatch(setPage(pageCorrections[\"ADD\"](currentPage + 1, totalPages)));\n\t\t\t\tbreak;\n\t\t\tcase \"PREVIOUS\":\n\t\t\t\tdispatch(setPage(pageCorrections[\"REMOVE\"](currentPage - 1, totalPages)));\n\t\t\t\tbreak;\n\t\t}\n\t};\n};\nexport const nextPage = () => movePage(\"NEXT\");\nexport const previousPage = () => movePage(\"PREVIOUS\");\nconst pageControlKeyMap: KeyActionMap = {\n\tArrowLeft: previousPage(),\n\tArrowRight: nextPage(),\n};\nexport const pageControlDispatcher = keyEventDispatcherCreator(pageControlKeyMap);\n\nexport const toggleDisplayState = () => {\n\treturn (dispatch: Dispatch, getState: Function) => {\n\t\tconst displayState = getDisplayStatus(getState()) === \"SHOW\" ? \"HIDE\" : \"SHOW\";\n\n\t\tdispatch({ type: t.DISPLAY_STATUS, payload: displayState });\n\t};\n};\n\nexport const setZoomTarget = (spanIndex: number | null) => {\n\treturn { type: t.ZOOM_QUEUE, payload: spanIndex };\n};\n\nexport const zoomToCardOrigin = (spanIndex: number, page: number) => {\n\treturn (dispatch: Dispatch) => {\n\t\tconsole.log(page, spanIndex);\n\t\tdispatch(setPage(page));\n\t\tdispatch(setZoomTarget(spanIndex));\n\t};\n};\n\nexport const scrollToZoomTarget = () => {\n\treturn (dispatch: Dispatch, getState: Function) => {\n\t\tconst state = getState();\n\t\tconst spanIndex = getZoomTarget(state);\n\t\tif (!!spanIndex) {\n\t\t\tconst materialSpans = getMaterialSpans(state);\n\t\t\tif (materialSpans) {\n\t\t\t\t// this way when no pdf was present we prevent the race-condition of pdf being loaded later\n\t\t\t\tconst originSpan = materialSpans[spanIndex];\n\t\t\t\toriginSpan.scrollIntoView({ behavior: \"smooth\", block: \"center\", inline: \"center\" });\n\t\t\t}\n\t\t\tdispatch(setZoomTarget(null));\n\t\t}\n\t};\n};\n\nexport const setMaterialHeight = (height: number) => {\n\treturn { type: t.MATERIAL_HEIGHT, payload: height };\n};\n\nexport const mouseUpDocument = () => {\n\treturn (dispatch: any, getState: Function) => {\n\t\tconst selectionData = selection.services.getSelection();\n\n\t\tif (selectionData) {\n\t\t\tconst selectedStr = selectionData.text;\n\t\t\tconst selectionObject = selectionData.selection;\n\n\t\t\tconst state = getState();\n\n\t\t\t// check if we activated a Grab-button\n\t\t\tconst goalCard = cards.selectors.getGoalCard(state);\n\n\t\t\tconst selectedParent = selectionObject.anchorNode?.parentNode as HTMLSpanElement;\n\t\t\tdispatch(selection.actions.selectedParent(selectedParent));\n\n\t\t\tif (goalCard) {\n\t\t\t\t// this is the dispatch for the grab for field button\n\t\t\t\t//(which has been pressed before the mouse-up if goalCard is not null), here we actually update the goal card\n\n\t\t\t\t//TODO-NICE: allow grabbing from other cards\n\t\t\t\t// for now we dont allow grabbing from other cards to simplifiy the card->card workflow\n\n\t\t\t\tdispatch(\n\t\t\t\t\tcards.actions.replaceCardField(goalCard.creationType, goalCard, selectedStr, getCurrentOrigin(getState()))\n\t\t\t\t);\n\t\t\t} else {\n\t\t\t\tdispatch(selection.actions.updateManuallySelectedString(selectedStr));\n\t\t\t}\n\t\t}\n\t};\n};\n","import React from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { IconButton, Card, Grid, Divider, Tooltip } from \"@material-ui/core\";\nimport ArrowForwardIosIcon from \"@material-ui/icons/ArrowForwardIos\";\nimport ArrowBackIosIcon from \"@material-ui/icons/ArrowBackIos\";\nimport { nextPage, previousPage } from \"../actions\";\nimport text from \"../../text\";\n\nconst PreviousButton = () => {\n\tconst dispatch = useDispatch();\n\treturn (\n\t\t<Tooltip\n\t\t\ttitle={text.constants.previousPageTooltip}\n\t\t\tenterDelay={text.constants.defaultEnterDelay}\n\t\t\tenterNextDelay={text.constants.defaultEnterNextDelay}\n\t\t>\n\t\t\t<IconButton\n\t\t\t\ttype=\"button\"\n\t\t\t\tonClick={() => {\n\t\t\t\t\tdispatch(previousPage());\n\t\t\t\t}}\n\t\t\t>\n\t\t\t\t<ArrowBackIosIcon></ArrowBackIosIcon>\n\t\t\t</IconButton>\n\t\t</Tooltip>\n\t);\n};\n\nconst NextButton = () => {\n\tconst dispatch = useDispatch();\n\treturn (\n\t\t<Tooltip\n\t\t\ttitle={text.constants.nextPageTooltip}\n\t\t\tenterDelay={text.constants.defaultEnterDelay}\n\t\t\tenterNextDelay={text.constants.defaultEnterNextDelay}\n\t\t>\n\t\t\t<IconButton\n\t\t\t\ttype=\"button\"\n\t\t\t\tonClick={() => {\n\t\t\t\t\tdispatch(nextPage());\n\t\t\t\t}}\n\t\t\t>\n\t\t\t\t<ArrowForwardIosIcon></ArrowForwardIosIcon>\n\t\t\t</IconButton>\n\t\t</Tooltip>\n\t);\n};\n\nexport const PageNavigation = () => {\n\treturn (\n\t\t<Card variant=\"outlined\">\n\t\t\t<Grid container direction=\"row\">\n\t\t\t\t<Grid item>\n\t\t\t\t\t<PreviousButton></PreviousButton>\n\t\t\t\t</Grid>\n\t\t\t\t<Grid item>\n\t\t\t\t\t<Divider orientation=\"vertical\"></Divider>\n\t\t\t\t</Grid>\n\t\t\t\t<Grid item>\n\t\t\t\t\t<NextButton></NextButton>\n\t\t\t\t</Grid>\n\t\t\t</Grid>\n\t\t</Card>\n\t);\n};\n","import React, { useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Typography, TextField, Card, Grid } from \"@material-ui/core\";\nimport { setPage } from \"../../actions\";\nimport { getPageControlData } from \"../../selectors\";\n\nconst nonDigitRegEx = /(\\D)/;\n\nexport const validatePageChoice = (possiblePage: string, totalPages: number) => {\n\tif (possiblePage === \"\" || possiblePage.trim().match(nonDigitRegEx) !== null) return false;\n\n\tconst asInt = parseInt(possiblePage);\n\tif (asInt < 1 || totalPages < asInt) return false;\n\n\treturn true;\n};\n\nexport const PageChooser = () => {\n\tconst dispatch = useDispatch();\n\tconst { currentPage, totalPages } = useSelector(getPageControlData);\n\n\tconst [state, setState] = useState({\n\t\terror: false,\n\t\tvalue: currentPage?.toString(),\n\t\tuserInput: currentPage?.toString(),\n\t});\n\n\t// with this we can trigger a re-render onChange,\n\t// while making sure that if a new currentPage arrives, we reset the component\n\tif (state.value !== currentPage.toString()) {\n\t\tsetState({ error: false, value: currentPage.toString(), userInput: currentPage.toString() });\n\t}\n\n\treturn (\n\t\t<Card variant=\"outlined\">\n\t\t\t<Grid item>\n\t\t\t\t<Grid container direction=\"row\" alignItems=\"center\" justify=\"space-between\">\n\t\t\t\t\t<Grid item style={{ width: \"37%\" }}>\n\t\t\t\t\t\t<TextField\n\t\t\t\t\t\t\tinputProps={{\n\t\t\t\t\t\t\t\tstyle: {\n\t\t\t\t\t\t\t\t\tpadding: \"0px\",\n\t\t\t\t\t\t\t\t\t//h6 Typography style\n\t\t\t\t\t\t\t\t\tfontSize: \"1.25rem\",\n\t\t\t\t\t\t\t\t\tfontFamily: '\"Roboto\", \"Helvetica\", \"Arial\", sansSerif',\n\t\t\t\t\t\t\t\t\tfontWeight: 500,\n\t\t\t\t\t\t\t\t\tlineHeight: 1.6,\n\t\t\t\t\t\t\t\t\tletterSpacing: \"0.0075em\",\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\tvariant=\"filled\"\n\t\t\t\t\t\t\tvalue={state.userInput}\n\t\t\t\t\t\t\tonKeyDown={(event) => {\n\t\t\t\t\t\t\t\tif (event.key === \"Enter\") {\n\t\t\t\t\t\t\t\t\tevent.preventDefault();\n\t\t\t\t\t\t\t\t\tconst submittedValue = (event.target as HTMLFormElement).value;\n\t\t\t\t\t\t\t\t\tif (!state.error) {\n\t\t\t\t\t\t\t\t\t\tdispatch(setPage(parseInt(submittedValue)));\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\tonChange={(event) => {\n\t\t\t\t\t\t\t\tconst submittedValue = (event.target as HTMLTextAreaElement).value;\n\t\t\t\t\t\t\t\tif (validatePageChoice(submittedValue, totalPages as number)) {\n\t\t\t\t\t\t\t\t\tsetState({ ...state, error: false, userInput: submittedValue });\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\tsetState({ ...state, error: true, userInput: submittedValue });\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\terror={state.error}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</Grid>\n\n\t\t\t\t\t<Grid item style={{ width: \"61%\" }}>\n\t\t\t\t\t\t<Typography variant=\"h6\">of {totalPages}</Typography>\n\t\t\t\t\t</Grid>\n\t\t\t\t</Grid>\n\t\t\t</Grid>\n\t\t</Card>\n\t);\n};\n","import { ReactNode, KeyboardEvent, useRef, MutableRefObject } from \"react\";\nimport { pageControlDispatcher } from \"../../actions\";\nimport React from \"react\";\nimport { useDispatch } from \"react-redux\";\n\n// note to self: prefer to expose components and not implementation details (actions etc.)\n\nexport const PageKeyboardControl = ({ children }: { children: ReactNode }) => {\n\tconst dispatch = useDispatch();\n\tconst ref: MutableRefObject<null | HTMLInputElement> = useRef(null);\n\n\treturn (\n\t\t<span\n\t\t\tref={ref}\n\t\t\tonKeyDown={(event: KeyboardEvent<HTMLSpanElement>) => {\n\t\t\t\tpageControlDispatcher(event, dispatch);\n\t\t\t}}\n\t\t\ttabIndex={0}\n\t\t>\n\t\t\t{children}\n\t\t</span>\n\t);\n};\n","import \"./PDFDocument.css\";\nimport \"./AnnotationLayer.css\";\nimport React, { RefObject, useEffect } from \"react\";\nimport { pdfjs, Document, Page } from \"react-pdf\";\nimport { connect, useDispatch, useSelector } from \"react-redux\";\nimport { materialLoaded, setPage, captureMaterialData, scrollToZoomTarget, mouseUpDocument } from \"../../actions\";\nimport { getRenderCritialData, getZoomTarget } from \"../../selectors\";\nimport text from \"../../../text\";\nimport { PageKeyboardControl } from \"./PageKeyboardControl\";\npdfjs.GlobalWorkerOptions.workerSrc = `//cdnjs.cloudflare.com/ajax/libs/pdf.js/${pdfjs.version}/pdf.worker.js`;\n\n//TODO-NICE: implent more pdf-reader functionality, like zoom\n\nfunction removeTextLayerOffset() {\n\tconst textLayers = document.querySelectorAll(\".react-pdf__Page__textContent\");\n\ttextLayers.forEach((layer) => {\n\t\tconst { style }: any = layer;\n\t\tstyle.top = \"0\";\n\t\tstyle.left = \"0\";\n\t\tstyle.transform = \"\";\n\t});\n}\n\nconst options = {\n\tcMapUrl: \"cmaps/\",\n\tcMapPacked: true,\n};\n\nfunction PDFDocument({\n\tparentSize,\n\tpdf,\n\tcurrentPage,\n\tmaterialLoaded,\n\tcaptureMaterialData,\n\tdocumentRef,\n}: {\n\tparentSize: any;\n\tpdf: File | undefined;\n\tcurrentPage: number;\n\tmaterialLoaded: (numPages: number) => void;\n\tcaptureMaterialData: Function;\n\tdocumentRef: RefObject<any>;\n}) {\n\tconst dispatch = useDispatch();\n\n\tconst zoomTargetSpanIndex = useSelector(getZoomTarget);\n\n\tuseEffect(() => {\n\t\tif (!!zoomTargetSpanIndex && pdf) {\n\t\t\tdispatch(scrollToZoomTarget());\n\t\t}\n\t}, [zoomTargetSpanIndex, pdf, dispatch]);\n\n\treturn (\n\t\t<span\n\t\t\tonMouseUp={() => {\n\t\t\t\tif (pdf) dispatch(mouseUpDocument());\n\t\t\t}}\n\t\t>\n\t\t\t<PageKeyboardControl>\n\t\t\t\t<Document\n\t\t\t\t\tfile={pdf}\n\t\t\t\t\toptions={options}\n\t\t\t\t\tonLoadSuccess={({ numPages }) => {\n\t\t\t\t\t\tmaterialLoaded(numPages);\n\t\t\t\t\t}}\n\t\t\t\t\tinputRef={documentRef}\n\t\t\t\t\tonItemClick={({ pageNumber }) => {\n\t\t\t\t\t\tdispatch(setPage(parseInt(pageNumber)));\n\t\t\t\t\t}}\n\t\t\t\t\tloading={text.constants.loadingMaterialText}\n\t\t\t\t\tnoData={text.constants.noMaterialText}\n\t\t\t\t\trenderMode=\"canvas\"\n\t\t\t\t>\n\t\t\t\t\t{pdf && (\n\t\t\t\t\t\t<Page\n\t\t\t\t\t\t\twidth={parentSize.width}\n\t\t\t\t\t\t\tpageNumber={currentPage}\n\t\t\t\t\t\t\tonRenderSuccess={() => {\n\t\t\t\t\t\t\t\tremoveTextLayerOffset();\n\t\t\t\t\t\t\t\tcaptureMaterialData(documentRef);\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t/>\n\t\t\t\t\t)}\n\t\t\t\t</Document>\n\t\t\t</PageKeyboardControl>\n\t\t</span>\n\t);\n}\n\nexport const PDFDocumentContainer = connect(getRenderCritialData, {\n\tmaterialLoaded,\n\tcaptureMaterialData,\n})(PDFDocument);\n","import React from \"react\";\nimport { Page } from \"react-pdf\";\n\nexport const PDFPageRenderer = ({\n\tindex,\n\tdata,\n\tstyle,\n}: {\n\tindex: number;\n\tdata: {\n\t\tscale: number;\n\t\tnumPages: number;\n\t\ttriggerResize: Function;\n\t\tpages: WeakMap<any, any>;\n\t\tpageNumbers: WeakMap<any, any>;\n\t};\n\tstyle: any;\n}) => {\n\tconst { scale, numPages, triggerResize } = data;\n\tconst pageNumber = index + 1;\n\n\treturn (\n\t\t<div {...{ style }}>\n\t\t\t<div\n\t\t\t\tref={(ref) => {\n\t\t\t\t\tconst { pages, pageNumbers } = data;\n\t\t\t\t\tif (!pageNumbers.has(pageNumber)) {\n\t\t\t\t\t\tconst key = { pageNumber };\n\t\t\t\t\t\tpageNumbers.set(pageNumber, key);\n\t\t\t\t\t}\n\t\t\t\t\tpages.set(pageNumbers.get(pageNumber), ref);\n\t\t\t\t}}\n\t\t\t>\n\t\t\t\t<Page\n\t\t\t\t\t{...{ pageNumber }}\n\t\t\t\t\t{...{ scale }}\n\t\t\t\t\trenderAnnotationLayer={false}\n\t\t\t\t\tonLoadError={(error) => console.error(error) /* eslint-disable-line no-console */}\n\t\t\t\t\tonLoadSuccess={(page) => {\n\t\t\t\t\t\t// This is necessary to ensure the row heights of\n\t\t\t\t\t\t// the variable list are correctly initialised.\n\t\t\t\t\t\tif (page.pageNumber === numPages) {\n\t\t\t\t\t\t\ttriggerResize();\n\t\t\t\t\t\t}\n\t\t\t\t\t}}\n\t\t\t\t/>\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n","import React, { PureComponent, createRef } from \"react\";\nimport { VariableSizeList } from \"react-window\";\nimport { debounce } from \"throttle-debounce\";\nimport { PDFPageRenderer } from \"./PDFPageRenderer\";\nimport { pdfjs, Document } from \"react-pdf\";\npdfjs.GlobalWorkerOptions.workerSrc = `//cdnjs.cloudflare.com/ajax/libs/pdf.js/${pdfjs.version}/pdf.worker.js`;\n\n//TODO-RC: https://react-window.now.sh/#/examples/list/fixed-size\n\nconst Loader = () => {\n\treturn (\n\t\t<div className=\"loader\">\n\t\t\t<div className=\"loader-invert line-scale\">\n\t\t\t\t<div></div>\n\t\t\t\t<div></div>\n\t\t\t\t<div></div>\n\t\t\t\t<div></div>\n\t\t\t\t<div></div>\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n\nexport class PDFViewer extends PureComponent<any, any, any> {\n\t// static propTypes = {\n\t// \tscale: PropTypes.number.isRequired,\n\t// };\n\n\tstatic defaultProps = {\n\t\tscale: 1.2,\n\t};\n\n\tprops: any;\n\tstate: any;\n\n\tprivate _callOrientationChangeHandler: any;\n\tprivate _callResizeHandler: any;\n\tprivate _list: React.RefObject<any>;\n\tprivate _mounted: boolean = false;\n\n\tconstructor(props: { pdfFile: any }) {\n\t\tsuper({ ...props, scale: 1.2 });\n\n\t\tthis.state = {\n\t\t\tinitialContainerHeight: null,\n\t\t\tcontainerHeight: null,\n\t\t\tpdf: null,\n\t\t\tcurrentPage: 1,\n\t\t\tcachedPageDimensions: null,\n\t\t\tresponsiveScale: 1,\n\t\t\tpageNumbers: new Map(),\n\t\t\tpages: new WeakMap(),\n\t\t};\n\n\t\tthis._list = createRef();\n\n\t\tthis._callResizeHandler = debounce(50, this.handleResize.bind(this));\n\t\tthis._callOrientationChangeHandler = debounce(1000, this.handleResize.bind(this));\n\t}\n\n\tcomponentDidMount() {\n\t\tconsole.log(\"mounting\");\n\t\tthis._mounted = true;\n\t\twindow.addEventListener(\"resize\", this._callResizeHandler);\n\t\twindow.addEventListener(\"orientationchange\", this._callOrientationChangeHandler);\n\t}\n\n\tcomponentWillUnmount() {\n\t\tthis._mounted = false;\n\t\twindow.removeEventListener(\"resize\", this._callResizeHandler);\n\t\twindow.removeEventListener(\"orientationchange\", this._callOrientationChangeHandler);\n\t}\n\n\t/**\n\t * Load all pages so we can cache all page dimensions.\n\t *\n\t * @param {Object} pdf\n\t * @returns {void}\n\t */\n\tcachePageDimensions(pdf: any) {\n\t\tconst promises = Array.from({ length: pdf.numPages }, (v, i) => i + 1).map((pageNumber) => pdf.getPage(pageNumber));\n\n\t\tlet height = 0;\n\n\t\t// Assuming all pages may have different heights. Otherwise we can just\n\t\t// load the first page and use its height for determining all the row\n\t\t// heights.\n\t\tPromise.all(promises).then((pages) => {\n\t\t\tif (!this._mounted) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst pageDimensions = new Map();\n\t\t\tfor (const page of pages) {\n\t\t\t\tconst w = page.view[2] * this.props.scale;\n\t\t\t\tconst h = page.view[3] * this.props.scale;\n\n\t\t\t\tconsole.log(this.props.scale, page, [w, h]);\n\n\t\t\t\tpageDimensions.set(page._pageIndex + 1, [w, h]);\n\t\t\t\theight += h;\n\t\t\t}\n\n\t\t\tconsole.log(pages, pageDimensions);\n\n\t\t\tthis.setState({\n\t\t\t\tcachedPageDimensions: pageDimensions,\n\t\t\t\tinitialContainerHeight: height,\n\t\t\t\tcontainerHeight: height,\n\t\t\t});\n\t\t});\n\t}\n\n\trecomputeRowHeights() {\n\t\tthis._list.current.resetAfterIndex(0);\n\t}\n\n\tcomputeRowHeight(index: number) {\n\t\tconst { cachedPageDimensions, responsiveScale } = this.state;\n\t\tif (cachedPageDimensions && responsiveScale) {\n\t\t\treturn cachedPageDimensions.get(index + 1)[1] / responsiveScale;\n\t\t}\n\n\t\treturn 768; // Initial height\n\t}\n\n\tonDocumentLoadSuccess(pdf: any) {\n\t\tthis.setState({ pdf });\n\t\tthis.cachePageDimensions(pdf);\n\t}\n\n\tupdateCurrentVisiblePage({ visibleStopIndex }: any) {\n\t\tthis.setState({ currentPage: visibleStopIndex + 1 });\n\t}\n\n\tcomputeResponsiveScale(pageNumber: any) {\n\t\tconst { cachedPageDimensions, pages, pageNumbers } = this.state;\n\n\t\tconst node = pages.get(pageNumbers.get(pageNumber));\n\n\t\tif (!node) return;\n\n\t\treturn cachedPageDimensions.get(pageNumber)[1] / node.clientHeight;\n\t}\n\n\thandleResize() {\n\t\tconst { currentPage, responsiveScale, initialContainerHeight } = this.state;\n\n\t\t// Recompute the responsive scale factor on window resize\n\t\tconst newResponsiveScale = this.computeResponsiveScale(currentPage);\n\n\t\tif (newResponsiveScale && responsiveScale !== newResponsiveScale) {\n\t\t\tconst containerHeight = initialContainerHeight / newResponsiveScale;\n\n\t\t\tthis.setState({ responsiveScale: newResponsiveScale, containerHeight }, () => this.recomputeRowHeights());\n\t\t}\n\t}\n\n\trender() {\n\t\tconst { scale } = this.props;\n\t\tconst { cachedPageDimensions, containerHeight, pdf, pages, pageNumbers } = this.state;\n\n\t\treturn (\n\t\t\t<Document\n\t\t\t\tfile={this.props.pdfFile}\n\t\t\t\tloading={<Loader />}\n\t\t\t\tonLoadSuccess={this.onDocumentLoadSuccess.bind(this)}\n\t\t\t\tonLoadError={(error) => console.error(error)} // eslint-disable-line no-console\n\t\t\t>\n\t\t\t\t{cachedPageDimensions && (\n\t\t\t\t\t<VariableSizeList\n\t\t\t\t\t\theight={containerHeight}\n\t\t\t\t\t\titemCount={pdf.numPages}\n\t\t\t\t\t\titemSize={this.computeRowHeight.bind(this)}\n\t\t\t\t\t\titemData={{\n\t\t\t\t\t\t\tscale,\n\t\t\t\t\t\t\tpages,\n\t\t\t\t\t\t\tpageNumbers,\n\t\t\t\t\t\t\tnumPages: pdf.numPages,\n\t\t\t\t\t\t\ttriggerResize: this.handleResize.bind(this),\n\t\t\t\t\t\t}}\n\t\t\t\t\t\toverscanCount={2}\n\t\t\t\t\t\tonItemsRendered={this.updateCurrentVisiblePage.bind(this)}\n\t\t\t\t\t\tref={this._list}\n\t\t\t\t\t\twidth=\"100%\"\n\t\t\t\t\t>\n\t\t\t\t\t\t{PDFPageRenderer}\n\t\t\t\t\t</VariableSizeList>\n\t\t\t\t)}\n\t\t\t</Document>\n\t\t);\n\t}\n}\n","import React, { useState, useLayoutEffect } from \"react\";\nimport Grid from \"@material-ui/core/Grid\";\nimport { withSize } from \"react-sizeme\";\nimport Paper from \"@material-ui/core/Paper\";\nimport { PDFDocumentContainer } from \"./PDFDocument/PDFDocument\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { getMaterialHeight, getPDF } from \"../selectors\";\nimport { setMaterialHeight } from \"../actions\";\nimport { PDFViewer } from \"./PDFDocument/PDFViewer\";\n\nfunction MaterialDisplayColumn({ size, hidden }: any) {\n\tconst [elevation, setElevation] = useState(3);\n\n\tconst dispatch = useDispatch();\n\n\tconst materialHeight = useSelector(getMaterialHeight);\n\n\tuseLayoutEffect(() => {\n\t\t// first setting\n\t\tif (!materialHeight) {\n\t\t\tdispatch(setMaterialHeight(size.height));\n\t\t}\n\n\t\t// setting if changed\n\t\tif (materialHeight && materialHeight !== size.height) {\n\t\t\tdispatch(setMaterialHeight(size.height));\n\t\t}\n\t}, [dispatch, materialHeight, size.height]);\n\n\tconst pdf = useSelector(getPDF);\n\n\treturn (\n\t\t<Grid\n\t\t\titem\n\t\t\tstyle={{\n\t\t\t\twidth: \"60%\",\n\t\t\t}}\n\t\t\tonMouseEnter={() => {\n\t\t\t\tsetElevation(20);\n\t\t\t}}\n\t\t\tonMouseLeave={() => {\n\t\t\t\tsetElevation(3);\n\t\t\t}}\n\t\t\thidden={hidden}\n\t\t>\n\t\t\t<Paper elevation={elevation}>\n\t\t\t\t<PDFDocumentContainer parentSize={size}></PDFDocumentContainer>\n\t\t\t\t{pdf.pdf && false && <PDFViewer pdfFile={pdf.pdf}></PDFViewer>}\n\t\t\t</Paper>\n\t\t</Grid>\n\t);\n}\n\nexport const MaterialDisplayColumnWithSize = withSize({ monitorHeight: true, noPlaceholder: true })(\n\tMaterialDisplayColumn\n);\n","import * as t from \"./actionTypes\";\nimport type { DisplayData, DisplayStatus, MaterialGroupData } from \"./model\";\nimport { createRef } from \"react\";\nimport db from \"../db\";\n\nconst initialState: DisplayData = {\n\tdisplayStatus: \"SHOW\",\n\ttotalPages: 1000,\n\tcurrentPage: 1,\n\tdocumentRef: createRef(),\n\tpageSpans: {},\n\tzoomTargetSpanIndex: null,\n\tmaterialData: { materialDataTimeStamp: -Infinity },\n};\n\nconst displayData = (state = initialState, { type, payload }: { type: string; payload: any }): DisplayData => {\n\tswitch (type) {\n\t\tcase t.PDF_UPLOADED:\n\t\t\treturn { ...state, pdf: payload as File, pdfName: (payload as File).name };\n\t\tcase db.actionTypes.DOCUMENT_CHANGE:\n\t\t\tif (payload) {\n\t\t\t\t// this means the pdf has been already uploaded (Load Document) and this was not triggered not via options\n\t\t\t\tif (payload.name === state.pdfName) {\n\t\t\t\t\treturn state;\n\t\t\t\t}\n\t\t\t\treturn {\n\t\t\t\t\t...initialState,\n\t\t\t\t\tpdf: undefined,\n\t\t\t\t\tpdfName: payload.name,\n\t\t\t\t\ttotalPages: payload.totalPages,\n\t\t\t\t\tcurrentPage: payload.currentPage,\n\t\t\t\t};\n\t\t\t} else {\n\t\t\t\t// dont need to reset here because when loading pdf we set automatically via other actions\n\t\t\t\treturn state;\n\t\t\t}\n\t\tcase t.MATERIAL_LOADED:\n\t\t\treturn { ...state, totalPages: payload as number };\n\t\tcase t.PAGE_UPDATE:\n\t\t\treturn { ...state, currentPage: payload as number };\n\t\tcase t.DISPLAY_STATUS:\n\t\t\treturn { ...state, displayStatus: payload as DisplayStatus };\n\t\tcase t.MATERIAL_DATA:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tmaterialData: payload,\n\t\t\t\tpageSpans: { ...state.pageSpans, [state.currentPage]: (payload as MaterialGroupData).materialSpans.length - 1 },\n\t\t\t};\n\t\tcase t.MATERIAL_HEIGHT:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tmaterialHeight: payload,\n\t\t\t};\n\t\tcase t.ZOOM_QUEUE:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tzoomTargetSpanIndex: payload,\n\t\t\t};\n\t\tdefault:\n\t\t\treturn state;\n\t}\n};\n\nexport default displayData;\n","import * as actions from \"./actions\";\nimport * as actionTypes from \"./actionTypes\";\nimport * as components from \"./components\";\nimport * as constants from \"./constants\";\nimport reducer from \"./reducer\";\nimport * as selectors from \"./selectors\";\n\nexport default { actions, actionTypes, components, constants, reducer, selectors };\n\n//TODO-RC: make scrollable...\n","export const NAME = \"cardRiverState\";\n","import { NAME } from \"./constants\";\nimport { createSelector } from \"reselect\";\nimport { CardRiverState } from \"./model\";\nimport cards from \"../cards\";\n\nexport const getAll = (state: any) => state[NAME].present;\n\nexport const getRiverMakeUps = createSelector(getAll, (state: CardRiverState) => state.riverMakeUps);\n\nexport const getActiveRiverMakeUpID = createSelector(getAll, (state: CardRiverState) => state.activeRiverMakeUpID);\n\nexport const getPushToRiver = createSelector(getAll, (state: CardRiverState) => state.pushToRiverID);\n\nexport const getPushToRiverMakeUp = createSelector(getRiverMakeUps, getPushToRiver, (makeUps, id) => makeUps[id]);\n\nexport const getActiveRiverMakeUp = createSelector(\n\tgetRiverMakeUps,\n\tgetActiveRiverMakeUpID,\n\t(makeUps, id) => makeUps[id]\n);\n\nexport const getPushToRiverCardIDs = createSelector(getPushToRiverMakeUp, (makeUp) => makeUp.cardIDs);\n\nexport const getPushToRiverCards = createSelector(\n\tgetPushToRiverCardIDs,\n\tcards.selectors.getCards,\n\t(makeUpCardIDs, cards) => makeUpCardIDs.map((id) => cards[id])\n);\n\n//TODO-NICE: rename active=page-wise or smth like that for clarity\nexport const getActiveRiverCardIDs = createSelector(getActiveRiverMakeUp, (makeUp) => makeUp.cardIDs);\n\nexport const getActiveRiverCards = createSelector(\n\tgetActiveRiverCardIDs,\n\tcards.selectors.getCards,\n\t(makeUpCardIDs, cards) => makeUpCardIDs.map((id) => cards[id])\n);\n\nexport const getRiverShowState = createSelector(getAll, (state: CardRiverState) => state.riverShowState);\n\nexport const riverShowStateIsShow = createSelector(getRiverShowState, (state) => state === \"SHOW\");\n\nexport const getHoveredCardData = createSelector(getAll, (state: CardRiverState) => {\n\treturn { id: state.highlightedCardID, field: state.highlightedCardField };\n});\n\nexport const getLastRiverIDNumber = createSelector(getAll, (state: CardRiverState) => state.lastRiverIDNumber);\n\nexport const getRiverContentState = createSelector(getAll, (state: CardRiverState) => state.riverContentState);\n\nexport const getRiverContentFilter = createSelector(getAll, (state: CardRiverState) => state.contentFilter);\n","import { NAME } from \"./constants\";\n\nexport const RIVER_SHOW_STATE = NAME + \"/RIVER_SHOW_STATE\";\nexport const RIVER_CONTENT_STATE = NAME + \"/RIVER_CONTENT_STATE\";\nexport const RIVER_PUSH_STATE = NAME + \"/RIVER_PUSH_STATE\";\nexport const RIVER_HOVERED_CARD = NAME + \"/RIVER_HOVERED_CARD\";\nexport const RIVER_CONTENT_FILTER = NAME + \"/RIVER_CONTENT_FILTER\";\n","import * as t from \"./actionTypes\";\nimport { riverShowStateIsShow, getPushToRiver, getHoveredCardData } from \"./selectors\";\nimport { Dispatch } from \"redux\";\nimport { CardID } from \"../cards/model/model-config\";\nimport { CardField } from \"../cards/model/model-content\";\nimport { RiverContentState, ContentFilter } from \"./model\";\n\nexport const toggleRiverShowState = () => (dispatch: Dispatch, getState: Function) => {\n\tdispatch({ type: t.RIVER_SHOW_STATE, payload: riverShowStateIsShow(getState()) ? \"HIDE\" : \"SHOW\" });\n};\n\nexport const setRiverContentState = (state: RiverContentState) => {\n\treturn { type: t.RIVER_CONTENT_STATE, payload: state };\n};\n\nexport const setPushToRiver = (id: string) => {\n\treturn { type: t.RIVER_PUSH_STATE, payload: id };\n};\n\nexport const trySetPushToRiver = (id: string) => {\n\treturn (dispatch: Dispatch, getState: Function) => {\n\t\tif (getPushToRiver(getState()) !== id) dispatch(setPushToRiver(id));\n\t};\n};\n\nexport const setHoveredCard = (cardID: CardID, field: CardField) => {\n\treturn { payload: { id: cardID, field }, type: t.RIVER_HOVERED_CARD };\n};\n\nexport const trySetHoveredCard = (cardID: CardID, field: CardField) => {\n\treturn (dispatch: Dispatch, getState: Function) => {\n\t\tconst state = getState();\n\t\tconst highlightedCardIDData = getHoveredCardData(state);\n\t\tif (highlightedCardIDData.id !== cardID || highlightedCardIDData.field !== field)\n\t\t\tdispatch(setHoveredCard(cardID, field));\n\t};\n};\n\nexport const resetHoveredCard = () => {\n\treturn { payload: { id: null, field: null }, type: t.RIVER_HOVERED_CARD };\n};\n\nexport const setContentFilter = (filter: ContentFilter) => {\n\treturn { type: t.RIVER_CONTENT_FILTER, payload: filter };\n};\n\nexport const resetContentFilter = () => {\n\treturn { type: t.RIVER_CONTENT_FILTER, payload: \"\" };\n};\n","import { withStyles, CheckboxProps, Checkbox } from \"@material-ui/core\";\nimport React from \"react\";\nimport { green } from \"@material-ui/core/colors\";\nexport const GreenCheckbox = withStyles({\n\troot: {\n\t\tcolor: green[400],\n\t\t\"&$checked\": {\n\t\t\tcolor: green[600],\n\t\t},\n\t},\n\tchecked: {},\n})((props: CheckboxProps) => <Checkbox color=\"default\" {...props} />);\n","import { FormGroup, FormControlLabel } from \"@material-ui/core\";\nimport React from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { getRiverContentState } from \"../selectors\";\nimport { RiverContentState } from \"../model\";\nimport { setRiverContentState } from \"../actions\";\nimport { GreenCheckbox } from \"../../../shared/GreenCheckbox\";\n\nexport const RiverContentFormGroup = () => {\n\tconst riverContentState = useSelector(getRiverContentState);\n\tconst dispatch = useDispatch();\n\n\tconst showQAs = riverContentState === \"ALL\" || riverContentState === \"QAS\";\n\tconst showNotes = riverContentState === \"ALL\" || riverContentState === \"NOTES\";\n\n\tconst changeContentState = (clickedState: RiverContentState) => {\n\t\tif (!showQAs && clickedState === \"QAS\") {\n\t\t\tif (showNotes) {\n\t\t\t\tdispatch(setRiverContentState(\"ALL\"));\n\t\t\t} else {\n\t\t\t\tdispatch(setRiverContentState(\"QAS\"));\n\t\t\t}\n\t\t\treturn;\n\t\t}\n\n\t\tif (!showNotes && clickedState === \"NOTES\") {\n\t\t\tif (showQAs) {\n\t\t\t\tdispatch(setRiverContentState(\"ALL\"));\n\t\t\t} else {\n\t\t\t\tdispatch(setRiverContentState(\"NOTES\"));\n\t\t\t}\n\t\t\treturn;\n\t\t}\n\n\t\tif (showQAs && clickedState === \"QAS\") {\n\t\t\tif (!showNotes) {\n\t\t\t\tdispatch(setRiverContentState(\"NONE\"));\n\t\t\t} else {\n\t\t\t\tdispatch(setRiverContentState(\"NOTES\"));\n\t\t\t}\n\t\t\treturn;\n\t\t}\n\n\t\tif (showNotes && clickedState === \"NOTES\") {\n\t\t\tif (!showQAs) {\n\t\t\t\tdispatch(setRiverContentState(\"NONE\"));\n\t\t\t} else {\n\t\t\t\tdispatch(setRiverContentState(\"QAS\"));\n\t\t\t}\n\t\t\treturn;\n\t\t}\n\t};\n\n\treturn (\n\t\t<FormGroup>\n\t\t\t<FormControlLabel\n\t\t\t\tcontrol={\n\t\t\t\t\t<GreenCheckbox\n\t\t\t\t\t\tchecked={showQAs}\n\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\tchangeContentState(\"QAS\");\n\t\t\t\t\t\t}}\n\t\t\t\t\t/>\n\t\t\t\t}\n\t\t\t\tlabel=\"QAs\"\n\t\t\t/>\n\t\t\t<FormControlLabel\n\t\t\t\tcontrol={\n\t\t\t\t\t<GreenCheckbox\n\t\t\t\t\t\tchecked={showNotes}\n\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\tchangeContentState(\"NOTES\");\n\t\t\t\t\t\t}}\n\t\t\t\t\t/>\n\t\t\t\t}\n\t\t\t\tlabel=\"Notes\"\n\t\t\t/>\n\t\t</FormGroup>\n\t);\n};\n","export const NAME = \"appFocus\";\n","import { NAME } from \"./constants\";\n\nexport const DISPLAY_FOCUS_UPDATE = NAME + \"/DISPLAY_FOCUS_UPDATE\";\n","import * as t from \"./actionTypes\";\nimport { DisplayFocus } from \"./model\";\n\nexport const updateDisplayFocus = (focus: DisplayFocus) => {\n\treturn { type: t.DISPLAY_FOCUS_UPDATE, payload: focus };\n};\n","import { FocusState, DisplayFocus } from \"./model\";\nimport * as t from \"./actionTypes\";\n\nconst initialState: FocusState = { displayFocus: \"ACTIVE_RIVER\" };\n\nconst focus = (state = initialState, { type, payload }: { type: string; payload: any }): FocusState => {\n\tswitch (type) {\n\t\tcase t.DISPLAY_FOCUS_UPDATE:\n\t\t\treturn { ...state, displayFocus: payload as DisplayFocus };\n\t\tdefault:\n\t\t\treturn state;\n\t}\n};\n\nexport default focus;\n","import { createSelector } from \"reselect\";\nimport { NAME } from \"./constants\";\nimport { FocusState } from \"./model\";\n\nexport const getAll = (state: any) => state[NAME];\n\nexport const getDisplayFocus = createSelector(getAll, (state: FocusState) => state.displayFocus);\n","import * as actions from \"./actions\";\nimport * as constants from \"./constants\";\nimport reducer from \"./reducer\";\nimport * as selectors from \"./selectors\";\nimport * as actionTypes from \"./actionTypes\";\n\nexport default { actions, constants, reducer, selectors, actionTypes };\n","import React, { useState } from \"react\";\nimport { TextField, TextFieldProps } from \"@material-ui/core\";\nimport selection from \"../../../../selection\";\nimport { useDispatch } from \"react-redux\";\nimport { Dispatch } from \"redux\";\n\nexport const ClayCardField = ({\n\tstoreValue = \"\",\n\tsaveChanges,\n\tsetSourceCard,\n\tstyle,\n\t...rest\n}: {\n\tstoreValue?: string;\n\tsetSourceCard: () => void;\n\tsaveChanges: (value: string) => void;\n\tstyle: any;\n} & TextFieldProps) => {\n\tconst [state, setState] = useState({ storeValue, mutableValue: storeValue });\n\tconst dispatch = useDispatch();\n\n\t// reset if new storeValue, otherwise keep user-mutated value\n\tif (state.storeValue !== storeValue) {\n\t\tsetState({ storeValue, mutableValue: storeValue });\n\t}\n\n\t// need the onChange-pattern, because we want to be able to pre-fill the field from the store\n\treturn (\n\t\t<TextField\n\t\t\tInputProps={{ disableUnderline: true, style: { minWidth: \"400px\" } }}\n\t\t\tmultiline\n\t\t\tvariant=\"filled\"\n\t\t\tvalue={state.mutableValue}\n\t\t\tonChange={(event) => {\n\t\t\t\tconst submittedValue = (event.target as HTMLTextAreaElement).value;\n\t\t\t\tsetState({ ...state, mutableValue: submittedValue });\n\t\t\t}}\n\t\t\tonBlur={(event: any) => {\n\t\t\t\tsaveChanges(event.target.value);\n\t\t\t}}\n\t\t\tonMouseUp={() => {\n\t\t\t\tmouseUpCardField(dispatch, setSourceCard);\n\t\t\t}}\n\t\t\tstyle={style}\n\t\t\t{...rest}\n\t\t></TextField>\n\t);\n};\n\nconst mouseUpCardField = (dispatch: Dispatch, setSourceCard: () => void) => {\n\t//TODO-NICE: allow grabbing from other cards\n\tconst selectionData = selection.services.getSelection();\n\tif (selectionData) {\n\t\tconst selectedStr = selectionData.text;\n\n\t\tsetSourceCard();\n\t\tdispatch(selection.actions.updateManuallySelectedString(selectedStr));\n\t}\n};\n","import FindInPageIcon from \"@material-ui/icons/FindInPage\";\nimport React from \"react\";\nimport { IconButton, Tooltip } from \"@material-ui/core\";\nimport { useDispatch } from \"react-redux\";\nimport display from \"../../../../display\";\nimport { SingleOrigin } from \"../../../../cards/model/model-origin\";\nimport focus from \"../../../../focus\";\nimport text from \"../../../../text\";\n\n//TODO-NICE: replace/simplify focus system with element specific mouse-listeners\nexport const JumpToOriginButton = ({ cardOrigin }: { cardOrigin: SingleOrigin }) => {\n\tconst dispatch = useDispatch();\n\treturn (\n\t\t<Tooltip\n\t\t\ttitle={text.constants.jumpToOriginTooltip}\n\t\t\tenterDelay={text.constants.defaultEnterDelay}\n\t\t\tenterNextDelay={text.constants.defaultEnterNextDelay}\n\t\t>\n\t\t\t<IconButton\n\t\t\t\ttype=\"button\"\n\t\t\t\tonClick={() => {\n\t\t\t\t\tdispatch(focus.actions.updateDisplayFocus(\"ACTIVE_RIVER\"));\n\t\t\t\t\tdispatch(display.actions.zoomToCardOrigin(cardOrigin.spanIndex, cardOrigin.page));\n\t\t\t\t}}\n\t\t\t>\n\t\t\t\t<FindInPageIcon fontSize=\"small\"></FindInPageIcon>\n\t\t\t</IconButton>\n\t\t</Tooltip>\n\t);\n};\n","import PanToolIcon from \"@material-ui/icons/PanTool\";\nimport PanToolOutlinedIcon from \"@material-ui/icons/PanToolOutlined\";\nimport React, { useState } from \"react\";\nimport { IconButton, Tooltip } from \"@material-ui/core\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { CardConfig } from \"../../../../cards/model/model-config\";\nimport { GoalCard } from \"../../../../cards/model/model-state\";\nimport cards from \"../../../../cards\";\nimport text from \"../../../../text\";\nimport { CardField } from \"../../../../cards/model/model-content\";\n\nconst isGoalCard = (cardConfig: CardConfig, cardField: CardField, goalCard: GoalCard) =>\n\tcardConfig.cardID === goalCard.cardID && cardField === goalCard.creationType;\n\nexport const GrabForFieldButton = ({ cardConfig, cardField }: { cardConfig: CardConfig; cardField: CardField }) => {\n\tconst dispatch = useDispatch();\n\tconst goalCard = useSelector(cards.selectors.getGoalCard);\n\tconst [outlined, setOutlined] = useState(true);\n\n\tif (goalCard) {\n\t\tconst isGoal = isGoalCard(cardConfig, cardField, goalCard);\n\t\tif (isGoal) {\n\t\t\tif (outlined) setOutlined(false);\n\t\t} else {\n\t\t\tif (!outlined) setOutlined(true);\n\t\t}\n\t} else {\n\t\tif (!outlined) setOutlined(true);\n\t}\n\n\treturn (\n\t\t<Tooltip\n\t\t\ttitle={text.constants.grabForCardTooltip}\n\t\t\tenterDelay={text.constants.defaultEnterDelay}\n\t\t\tenterNextDelay={text.constants.defaultEnterNextDelay}\n\t\t>\n\t\t\t<IconButton\n\t\t\t\ttype=\"button\"\n\t\t\t\tonClick={() => {\n\t\t\t\t\tif (outlined) {\n\t\t\t\t\t\tdispatch(cards.actions.setGoalCard(cardConfig, cardField));\n\t\t\t\t\t} else {\n\t\t\t\t\t\tdispatch(cards.actions.resetGoalCard());\n\t\t\t\t\t}\n\t\t\t\t}}\n\t\t\t>\n\t\t\t\t{outlined ? (\n\t\t\t\t\t<PanToolOutlinedIcon fontSize=\"small\"></PanToolOutlinedIcon>\n\t\t\t\t) : (\n\t\t\t\t\t<PanToolIcon fontSize=\"small\"></PanToolIcon>\n\t\t\t\t)}\n\t\t\t</IconButton>\n\t\t</Tooltip>\n\t);\n};\n","import AddCircleOutlineIcon from \"@material-ui/icons/AddCircleOutline\";\nimport React from \"react\";\nimport { IconButton } from \"@material-ui/core\";\nimport { useDispatch, useSelector, useStore } from \"react-redux\";\nimport text from \"../../../../text\";\nimport selection from \"../../../../selection\";\nimport { CreationType } from \"../../../../cards/model/model-config\";\nimport display from \"../../../../display\";\nimport { CardOrigin } from \"../../../../cards/model/model-origin\";\n\nexport const AppendButton = ({ cardField, cardID }: { cardField: CreationType; cardID?: string }) => {\n\tconst dispatch = useDispatch();\n\tconst selectionParent = useSelector(selection.selectors.getCurrentSelectedParent);\n\tconst store = useStore();\n\n\treturn (\n\t\t<text.components.AppendButtonTooltip>\n\t\t\t<IconButton\n\t\t\t\ttype=\"button\"\n\t\t\t\tonClick={() => {\n\t\t\t\t\t//TODO-NICE: allow append from other cards (origin-copying is the work here)\n\t\t\t\t\tif (selectionParent) {\n\t\t\t\t\t\tconst origin: CardOrigin | undefined = display.selectors.getCurrentOrigin(store.getState());\n\n\t\t\t\t\t\tdispatch(selection.services.use_selection.selectionToCardAppend(cardField, origin, cardID));\n\t\t\t\t\t}\n\t\t\t\t}}\n\t\t\t>\n\t\t\t\t<AddCircleOutlineIcon fontSize=\"small\"></AddCircleOutlineIcon>\n\t\t\t</IconButton>\n\t\t</text.components.AppendButtonTooltip>\n\t);\n};\n","import React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport cards from \"../../../../cards\";\nimport { JumpToOriginButton } from \"../Buttons/JumpToOriginButton\";\nimport { GrabForFieldButton } from \"../Buttons/GrabForFieldButton\";\nimport focus from \"../../../../focus\";\nimport { Paper, Grid } from \"@material-ui/core\";\nimport { AppendButton } from \"../Buttons/AppendButton\";\nimport { CardConfig } from \"../../../../cards/model/model-config\";\nimport { CardField } from \"../../../../cards/model/model-content\";\n\nexport const ClayCardFieldButtons = ({ config, cardField }: { config: CardConfig; cardField: CardField }) => {\n\t// we only offer one way to use card-content in other cards: extract\n\t// we do not allow grabbing from other cards, just from the document, so we only need the grab button in the ActiveRiver\n\tconst isActiveRiver = useSelector(focus.selectors.getDisplayFocus) === \"ACTIVE_RIVER\";\n\n\treturn (\n\t\t<Paper variant=\"outlined\">\n\t\t\t<Grid container direction=\"row\">\n\t\t\t\t<Grid item>{isActiveRiver && <AppendButton cardID={config.cardID} cardField={cardField}></AppendButton>}</Grid>\n\n\t\t\t\t<Grid item>\n\t\t\t\t\t{isActiveRiver && <GrabForFieldButton cardConfig={config} cardField={cardField}></GrabForFieldButton>}\n\t\t\t\t</Grid>\n\t\t\t\t<Grid item>\n\t\t\t\t\t{config.origin && (\n\t\t\t\t\t\t<JumpToOriginButton\n\t\t\t\t\t\t\tcardOrigin={cards.model.model_permutation.toFieldValue(cardField, config.origin)}\n\t\t\t\t\t\t></JumpToOriginButton>\n\t\t\t\t\t)}\n\t\t\t\t</Grid>\n\t\t\t</Grid>\n\t\t</Paper>\n\t);\n};\n","import Grid from \"@material-ui/core/Grid\";\nimport React, { useRef, useEffect, MutableRefObject } from \"react\";\nimport { ClayCardField } from \"./ClayCardField\";\nimport { QACardContent } from \"../../../../cards/model/model-content\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport cards from \"../../../../cards\";\nimport { getHoveredCardData } from \"../../../selectors\";\nimport { Card } from \"@material-ui/core\";\nimport { CardProps, borderStyle } from \"./ClayCard\";\nimport text from \"../../../../text\";\nimport selection from \"../../../../selection\";\nimport { ClayCardFieldButtons } from \"./ClayCardFieldButtons\";\n\n//TODO-NICE:\n// make dropdown / menu for selection to create card from selection snackbar?\n// show if selection has origin / button jump to origin at snackbar?\n// make REPLACE-button for River\n// replace Context-Menu with APPEND/REPLACE button flow? / allow both?\n\n//TODO-NICE: think of way to not have menu over the cards, because you cant read them this way? end of card?\n//TODO-NICE: use dark color pallet (theme?)\n\nexport const QACard = ({ config }: CardProps) => {\n\tconst dispatch = useDispatch();\n\tconst { id, field } = useSelector(getHoveredCardData);\n\tconst isHoveredCard = config.cardID === id;\n\n\tconst ref: MutableRefObject<undefined | HTMLDivElement> = useRef();\n\tuseEffect(() => {\n\t\tif (ref.current && isHoveredCard) {\n\t\t\t(ref.current as HTMLDivElement).scrollIntoView({ behavior: \"smooth\", block: \"center\", inline: \"center\" });\n\t\t}\n\t});\n\n\treturn (\n\t\t<Card variant=\"elevation\" elevation={5} ref={ref} style={{ padding: \"3px\" }}>\n\t\t\t<Grid container direction=\"row\" justify=\"space-between\">\n\t\t\t\t<Grid item>\n\t\t\t\t\t<Grid container direction=\"column\" spacing={1}>\n\t\t\t\t\t\t<Grid item>\n\t\t\t\t\t\t\t<Grid container direction=\"row\" spacing={1}>\n\t\t\t\t\t\t\t\t<Grid item>\n\t\t\t\t\t\t\t\t\t<div style={isHoveredCard && field === \"q\" ? borderStyle : undefined}>\n\t\t\t\t\t\t\t\t\t\t<ClayCardField\n\t\t\t\t\t\t\t\t\t\t\tsaveChanges={(value) => {\n\t\t\t\t\t\t\t\t\t\t\t\tdispatch(cards.actions.replaceCardFieldContent(\"q\", config, value));\n\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t\tstoreValue={(config.content as QACardContent).q}\n\t\t\t\t\t\t\t\t\t\t\tlabel={text.constants.questionText}\n\t\t\t\t\t\t\t\t\t\t\tvariant=\"filled\"\n\t\t\t\t\t\t\t\t\t\t\tstyle={{ backgroundColor: \"#FFBF69\" }}\n\t\t\t\t\t\t\t\t\t\t\tInputLabelProps={{ style: { color: \"#000000\" } }}\n\t\t\t\t\t\t\t\t\t\t\tsetSourceCard={() => {\n\t\t\t\t\t\t\t\t\t\t\t\tdispatch(selection.actions.setSourceCard(\"q\", config.origin));\n\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t></ClayCardField>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t</Grid>\n\n\t\t\t\t\t\t\t\t<Grid item>\n\t\t\t\t\t\t\t\t\t<ClayCardFieldButtons cardField=\"q\" config={config}></ClayCardFieldButtons>\n\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t<Grid item>\n\t\t\t\t\t\t\t<Grid container direction=\"row\" spacing={1}>\n\t\t\t\t\t\t\t\t<Grid item>\n\t\t\t\t\t\t\t\t\t<div style={isHoveredCard && field === \"a\" ? borderStyle : undefined}>\n\t\t\t\t\t\t\t\t\t\t<ClayCardField\n\t\t\t\t\t\t\t\t\t\t\tsaveChanges={(value) => {\n\t\t\t\t\t\t\t\t\t\t\t\tdispatch(cards.actions.replaceCardFieldContent(\"a\", config, value));\n\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t\tstoreValue={(config.content as QACardContent).a}\n\t\t\t\t\t\t\t\t\t\t\tlabel={text.constants.answerText}\n\t\t\t\t\t\t\t\t\t\t\tstyle={{ backgroundColor: \"#2EC4B6\" }}\n\t\t\t\t\t\t\t\t\t\t\tInputLabelProps={{ style: { color: \"#000000\" } }}\n\t\t\t\t\t\t\t\t\t\t\tsetSourceCard={() => {\n\t\t\t\t\t\t\t\t\t\t\t\tdispatch(selection.actions.setSourceCard(\"a\", config.origin));\n\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t></ClayCardField>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t\t<Grid item>\n\t\t\t\t\t\t\t\t\t<ClayCardFieldButtons cardField=\"a\" config={config}></ClayCardFieldButtons>\n\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t</Grid>\n\t\t\t\t\t</Grid>\n\t\t\t\t</Grid>\n\n\t\t\t\t<Grid item>\n\t\t\t\t\t<cards.components.DeleteCardButton cardID={config.cardID}></cards.components.DeleteCardButton>\n\t\t\t\t</Grid>\n\t\t\t</Grid>\n\t\t</Card>\n\t);\n};\n","import React, { useRef, useEffect, MutableRefObject } from \"react\";\nimport { ClayCardField } from \"./ClayCardField\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport cards from \"../../../../cards\";\nimport { getHoveredCardData } from \"../../../selectors\";\nimport { Card, Grid } from \"@material-ui/core\";\nimport { CardProps, borderStyle } from \"./ClayCard\";\nimport text from \"../../../../text\";\nimport selection from \"../../../../selection\";\nimport { NoteConfig } from \"../../../../cards/model/model-config\";\nimport { ClayCardFieldButtons } from \"./ClayCardFieldButtons\";\n\n//TODO-PERF: investigate if this hover-store approach is too slow, useRef instead?\nexport const NoteCard = ({ config }: CardProps) => {\n\tconst dispatch = useDispatch();\n\tconst { id } = useSelector(getHoveredCardData);\n\tconst isHoveredCard = config.cardID === id;\n\n\t// we only offer one way to use card-content in other cards: extract\n\t// we do not allow grabbing from other cards, just from the document, so we only need the grab button in the ActiveRiver\n\t//TODO-NICE: allow grabbing from other cards\n\n\tconst ref: MutableRefObject<undefined | HTMLDivElement> = useRef();\n\tuseEffect(() => {\n\t\tif (ref.current && isHoveredCard) {\n\t\t\t(ref.current as HTMLDivElement).scrollIntoView({ behavior: \"smooth\", block: \"center\", inline: \"center\" });\n\t\t}\n\t});\n\n\treturn (\n\t\t<Card\n\t\t\tvariant=\"elevation\"\n\t\t\televation={5}\n\t\t\tstyle={isHoveredCard ? { ...borderStyle, padding: \"3px\" } : { padding: \"3px\" }}\n\t\t\tref={ref}\n\t\t>\n\t\t\t<Grid container direction=\"row\" justify=\"space-between\">\n\t\t\t\t<Grid item>\n\t\t\t\t\t<Grid container direction=\"row\" spacing={1}>\n\t\t\t\t\t\t<Grid item>\n\t\t\t\t\t\t\t<ClayCardField\n\t\t\t\t\t\t\t\tsaveChanges={(value) => {\n\t\t\t\t\t\t\t\t\tdispatch(cards.actions.cardUpdate({ ...config, content: value } as NoteConfig));\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\tstoreValue={config.content as string}\n\t\t\t\t\t\t\t\tlabel={text.constants.noteText}\n\t\t\t\t\t\t\t\tvariant=\"filled\"\n\t\t\t\t\t\t\t\tstyle={{ backgroundColor: \"#CBF3F0\" }}\n\t\t\t\t\t\t\t\tInputLabelProps={{ style: { color: \"#000000\" } }}\n\t\t\t\t\t\t\t\tsetSourceCard={() => {\n\t\t\t\t\t\t\t\t\tdispatch(selection.actions.setSourceCard(\"note\", config.origin));\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t></ClayCardField>\n\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t<Grid item>\n\t\t\t\t\t\t\t<ClayCardFieldButtons cardField=\"note\" config={config}></ClayCardFieldButtons>\n\t\t\t\t\t\t</Grid>\n\t\t\t\t\t</Grid>\n\t\t\t\t</Grid>\n\n\t\t\t\t<Grid item>\n\t\t\t\t\t<cards.components.DeleteCardButton cardID={config.cardID}></cards.components.DeleteCardButton>\n\t\t\t\t</Grid>\n\t\t\t</Grid>\n\t\t</Card>\n\t);\n};\n","import React from \"react\";\nimport { CardConfig } from \"../../../../cards/model/model-config\";\nimport { QACard } from \"./QACard\";\nimport { NoteCard } from \"./NoteCard\";\n\nexport type CardProps = { config: CardConfig; riverID: string };\n\nexport const borderStyle = { border: \"4px solid green\", borderRadius: \"4px\" };\n\nexport const ClayCard = ({ config, riverID }: CardProps) => {\n\tswitch (config.type) {\n\t\tcase \"Note\":\n\t\t\treturn <NoteCard config={config} riverID={riverID}></NoteCard>;\n\t\tcase \"Q-A\":\n\t\t\treturn <QACard config={config} riverID={riverID}></QACard>;\n\t}\n};\n","import Grid from \"@material-ui/core/Grid\";\nimport React from \"react\";\nimport { incrementer } from \"../../../../shared/utils\";\nimport { ClayCard } from \"./Cards/ClayCard\";\nimport { CardConfig } from \"../../../cards/model/model-config\";\nimport { Divider } from \"@material-ui/core\";\n\nconst GridItemDivider = () => (\n\t<Grid item>\n\t\t<Divider></Divider>\n\t</Grid>\n);\n\nexport const toCardGridItemsWithDividers = (cards: CardConfig[], riverID: string) => {\n\tconst increment = incrementer();\n\n\treturn cards.reduce((prev, currentCard, index, arr) => {\n\t\tprev.push(\n\t\t\t<Grid item key={increment()}>\n\t\t\t\t<ClayCard config={currentCard} riverID={riverID} key={increment()}></ClayCard>\n\t\t\t</Grid>\n\t\t);\n\n\t\tconst notLastCard = index < arr.length - 1;\n\t\tif (notLastCard) prev.push(<GridItemDivider key={increment()}></GridItemDivider>);\n\t\treturn prev;\n\t}, [] as any[]);\n};\n","import { Typography, Divider } from \"@material-ui/core\";\nimport Accordion from \"@material-ui/core/Accordion\";\nimport AccordionSummary from \"@material-ui/core/AccordionSummary\";\nimport AccordionDetails from \"@material-ui/core/AccordionDetails\";\nimport Grid from \"@material-ui/core/Grid\";\nimport React, { useState } from \"react\";\nimport { trySetPushToRiver } from \"../../actions\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { getPushToRiver } from \"../../selectors\";\nimport display from \"../../../display\";\nimport focus from \"../../../focus\";\nimport cards from \"../../../cards\";\n\n//TODO-NICE: make it not be accordion but closeable?\n//TODO-NICE: make local show / hide notes\nexport const CardRiverAccordion = ({\n\triverID,\n\tgridItems,\n\tsummary,\n}: {\n\triverID: string;\n\tgridItems: any;\n\tsummary: string;\n}) => {\n\tconst defaultElevation = 3;\n\tconst highlightElevation = 20;\n\tconst [elevation, setElevation] = useState(defaultElevation);\n\tconst pushToRiver = useSelector(getPushToRiver);\n\n\tif (riverID === pushToRiver && elevation === defaultElevation) {\n\t\tsetElevation(highlightElevation);\n\t} else if (riverID !== pushToRiver && elevation !== defaultElevation) {\n\t\tsetElevation(defaultElevation);\n\t}\n\n\tconst materialHeight = useSelector(display.selectors.getMaterialHeight);\n\tconst displayFocus = useSelector(focus.selectors.getDisplayFocus);\n\n\tconst dispatch = useDispatch();\n\n\t//TODO-NICE: make HalfFull-sub-menu for half-full QAs\n\t//TODO-NICE: if you start without any document and then load one, the current cards should be merged into that one\n\t//TODO-NICE: scroll-to-top for overflowing river\n\treturn (\n\t\t<Accordion\n\t\t\tdefaultExpanded={true}\n\t\t\tonMouseEnter={() => {\n\t\t\t\tdispatch(trySetPushToRiver(riverID));\n\t\t\t}}\n\t\t\televation={elevation}\n\t\t\t//TODO-NICE: I use 1400 to prevent non-overflow on reloading (the site would be stretched)\n\t\t\t// if the river is bigger than the pdf-page would be, then the site is stretchted and the pdf-page-element assumes the size of the river\n\t\t\t// this solution assumes the pdf page is always bigger than 1400 (true on 22'), need solution to get height of pdf-page-element itself and not its parent\n\t\t\tstyle={\n\t\t\t\tdisplayFocus === \"ACTIVE_RIVER\"\n\t\t\t\t\t? {\n\t\t\t\t\t\t\toverflowY: \"auto\",\n\t\t\t\t\t\t\tmaxHeight: materialHeight ? materialHeight : \"1400px\",\n\t\t\t\t\t  }\n\t\t\t\t\t: {}\n\t\t\t}\n\t\t>\n\t\t\t<AccordionSummary>\n\t\t\t\t<Typography\n\t\t\t\t\tvariant=\"h6\"\n\t\t\t\t\talign=\"center\"\n\t\t\t\t\tstyle={{ MozUserSelect: \"none\", WebkitUserSelect: \"none\", msUserSelect: \"none\" }}\n\t\t\t\t>\n\t\t\t\t\t{summary}\n\t\t\t\t</Typography>\n\t\t\t</AccordionSummary>\n\t\t\t<AccordionDetails>\n\t\t\t\t<Grid container direction=\"column\" spacing={2} justify=\"center\" alignItems=\"stretch\">\n\t\t\t\t\t<Grid item>\n\t\t\t\t\t\t<cards.components.AddQAButton></cards.components.AddQAButton>\n\t\t\t\t\t\t<cards.components.AddNoteButton></cards.components.AddNoteButton>\n\t\t\t\t\t\t<Divider></Divider>\n\t\t\t\t\t</Grid>\n\n\t\t\t\t\t<Grid item>\n\t\t\t\t\t\t<Grid container direction=\"column\" spacing={2} justify=\"center\" alignItems=\"stretch\">\n\t\t\t\t\t\t\t{gridItems}\n\t\t\t\t\t\t</Grid>\n\t\t\t\t\t</Grid>\n\t\t\t\t</Grid>\n\t\t\t</AccordionDetails>\n\t\t</Accordion>\n\t);\n};\n","import { CardConfig, NoteConfig, QAConfig } from \"../../../cards/model/model-config\";\nimport { toCardGridItemsWithDividers } from \"./toCardGridItemsWithDividers\";\nimport { useMemo } from \"react\";\nimport { CardRiverAccordion } from \"./CardRiverAccordion\";\nimport React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { getRiverContentState, getRiverContentFilter } from \"../../selectors\";\nimport { ContentFilter } from \"../../model\";\n\n//TODO-NICE: untangle these components, dont need to so many subs?\n\nconst noteContainsContentFilter = (noteConfig: NoteConfig, contentFilter: ContentFilter) =>\n\tnoteConfig.content.includes(contentFilter);\n\nconst qaContainsContentFilter = (qaConfig: QAConfig, contentFilter: ContentFilter) =>\n\tqaConfig.content.a.includes(contentFilter) || qaConfig.content.q.includes(contentFilter);\n\nexport const ChildCardRiver = ({ riverID, riverCards }: { riverID: string; riverCards: CardConfig[] }) => {\n\tconst riverContentState = useSelector(getRiverContentState);\n\n\t//TODO-NICE: use regex for upper/lower-case\n\tconst contentFilter = useSelector(getRiverContentFilter);\n\n\t// this should only change if the store values change\n\tconst gridItems = useMemo(() => {\n\t\tlet inputCards = riverCards;\n\n\t\tif (riverContentState === \"NONE\") {\n\t\t\treturn [];\n\t\t}\n\n\t\tif (riverContentState !== \"ALL\") {\n\t\t\tif (riverContentState === \"QAS\") {\n\t\t\t\tinputCards = riverCards.filter((config) => config.type === \"Q-A\");\n\t\t\t}\n\t\t\tif (riverContentState === \"NOTES\") {\n\t\t\t\tinputCards = riverCards.filter((config) => config.type === \"Note\");\n\t\t\t}\n\t\t}\n\t\t//TODO-NICE: optimize this waste, move this out of the memo as it changes more rapidly\n\t\tif (contentFilter !== \"\")\n\t\t\tinputCards = inputCards.filter((card) => {\n\t\t\t\tswitch (card.type) {\n\t\t\t\t\tcase \"Note\":\n\t\t\t\t\t\treturn noteContainsContentFilter(card as NoteConfig, contentFilter);\n\t\t\t\t\tcase \"Q-A\":\n\t\t\t\t\t\treturn qaContainsContentFilter(card as QAConfig, contentFilter);\n\t\t\t\t}\n\t\t\t\treturn false;\n\t\t\t});\n\n\t\treturn toCardGridItemsWithDividers(inputCards, riverID);\n\t}, [riverCards, riverID, riverContentState, contentFilter]);\n\n\treturn <CardRiverAccordion riverID={riverID} gridItems={gridItems} summary={riverID}></CardRiverAccordion>;\n};\n","import { CardID } from \"../cards/model/model-config\";\nimport { CardField } from \"../cards/model/model-content\";\n\nexport type RiverMakeUp = { riverID: string; cardIDs: CardID[] };\n\nexport type RiverMakeUps = { [riverID: string]: RiverMakeUp };\n\nexport type RiverShowState = \"SHOW\" | \"HIDE\";\n\nexport type RiverContentState = \"ALL\" | \"NOTES\" | \"QAS\" | \"NONE\";\n\n//TODO-NICE: rename pushto/active river\n\nexport type ContentFilter = string;\n\nexport type CardRiverState = {\n\triverMakeUps: RiverMakeUps;\n\tactiveRiverMakeUpID: string;\n\tpushToRiverID: string;\n\tlastRiverIDNumber: number;\n\t// show/hide river\n\triverShowState: RiverShowState;\n\t// filter content\n\triverContentState: RiverContentState;\n\t// this is used to determine which card should be highlighted in reaction to hovering over it in the context-menu\n\thighlightedCardID: null | CardID;\n\thighlightedCardField: null | CardField;\n\tcontentFilter: ContentFilter | \"\";\n};\n\nexport const pageNumberToRiverMakeUpID = (page: number) => \"CardRiver \" + page;\n\nexport const riverMakeUpIDToPageNumber = (riverID: string) => parseInt(riverID.replace(\"CardRiver \", \"\"));\n\nexport const emptyCardRiver = (page: number): RiverMakeUp => {\n\treturn {\n\t\triverID: pageNumberToRiverMakeUpID(page),\n\t\tcardIDs: [],\n\t};\n};\n\nexport const updateStateWithMakeUps = (state: CardRiverState, ...makeUps: RiverMakeUp[]) => {\n\tconst updatedState = { ...state };\n\tmakeUps.forEach((makeUp) => {\n\t\tupdatedState.riverMakeUps[makeUp.riverID] = makeUp;\n\t});\n\treturn updatedState;\n};\n\nexport const deactivateActiveCardRiver = (state: CardRiverState) => {\n\treturn { ...state.riverMakeUps[state.activeRiverMakeUpID], active: false };\n};\n\nexport const removeCardFromRivers = (state: CardRiverState, cardID: CardID): CardRiverState => {\n\tconst riverMakeUps = Object.fromEntries(\n\t\tObject.entries(state.riverMakeUps).map((entry) => [\n\t\t\tentry[0],\n\t\t\t{ ...entry[1], cardIDs: entry[1].cardIDs.filter((id) => id !== cardID) },\n\t\t])\n\t);\n\treturn { ...state, riverMakeUps };\n};\n","import { Grid } from \"@material-ui/core\";\nimport { useSelector } from \"react-redux\";\nimport { getRiverMakeUps } from \"../selectors\";\nimport React, { useRef, useEffect } from \"react\";\nimport cards from \"../../cards\";\nimport focus from \"../../focus\";\nimport display from \"../../display\";\nimport { incrementer } from \"../../../shared/utils\";\nimport { ChildCardRiver } from \"./CardRiver/ChildCardRiver\";\nimport { riverMakeUpIDToPageNumber } from \"../model\";\n\nexport const SummaryRiver = () => {\n\tconst displayFocus = useSelector(focus.selectors.getDisplayFocus);\n\tconst currentPage = useSelector(display.selectors.getCurrentPage);\n\tconst cardConfigs = useSelector(cards.selectors.getCards);\n\tconst riverMakeUps = Object.values(useSelector(getRiverMakeUps));\n\tconst focusRef = useRef<HTMLDivElement | null>(null);\n\n\t// the current-page river is scrolled into view\n\tuseEffect(() => {\n\t\tif (displayFocus === \"SUMMARY_RIVER\" && focusRef.current !== null) {\n\t\t\tconst boundingRect = (focusRef.current as HTMLDivElement).getBoundingClientRect();\n\t\t\t//TODO-NICE: 100 is just experience on 22', I assume that then the River is in the top row\n\t\t\t// we need to scroll to top otherwise it is covered by the AppBar\n\t\t\tif (boundingRect.y < 100) {\n\t\t\t\twindow.scrollTo({ top: 0, behavior: \"smooth\" });\n\t\t\t} else {\n\t\t\t\t(focusRef.current as HTMLDivElement).scrollIntoView({ behavior: \"smooth\", block: \"start\", inline: \"start\" });\n\t\t\t}\n\t\t}\n\t}, [displayFocus, currentPage]);\n\n\tconst increment = incrementer();\n\t//TODO-NICE: find way to make UI-text unselectable globally, maybe different focus? But might be unperformant\n\treturn (\n\t\t<Grid container justify=\"flex-start\" direction=\"row\" alignItems=\"stretch\" spacing={1}>\n\t\t\t{riverMakeUps.map((makeUp) =>\n\t\t\t\tmakeUp.cardIDs.length > 0 ? (\n\t\t\t\t\t<Grid\n\t\t\t\t\t\titem\n\t\t\t\t\t\tref={riverMakeUpIDToPageNumber(makeUp.riverID) === currentPage ? focusRef : null}\n\t\t\t\t\t\tkey={increment()}\n\t\t\t\t\t>\n\t\t\t\t\t\t<ChildCardRiver\n\t\t\t\t\t\t\triverID={makeUp.riverID}\n\t\t\t\t\t\t\triverCards={makeUp.cardIDs.map((id) => cardConfigs[id])}\n\t\t\t\t\t\t\tkey={increment()}\n\t\t\t\t\t\t></ChildCardRiver>\n\t\t\t\t\t</Grid>\n\t\t\t\t) : null\n\t\t\t)}\n\t\t</Grid>\n\t);\n};\n","import React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { getActiveRiverCards, getActiveRiverMakeUpID } from \"../selectors\";\nimport { ChildCardRiver } from \"./CardRiver/ChildCardRiver\";\n\n//TODO-NICE: selection in CardRiver should stay highlighted when the contextMenu opens?\n\n//TODO-NICE: contextMenu as permant element, maybe sidebar?\n//TODO-NICE: preview in ContextMenu of how selected string would be used\n\n//TODO-NICE: make River-View, where you can just see one card and can make it smaller? Maybe just button to zoom \"in\" / just seeing the current river\n//TODO-NICE: mark Origin-Span or maybe rect over whole page-section?\n//TODO-NICE: make reconciliation algorithm for origin when new PDF versions come out\n// (basically, just search the text, and if it is not in the same span, just move the span - expand page forward and backward then search there)\n\nexport const ActiveCardRiver = () => {\n\tconst riverID = useSelector(getActiveRiverMakeUpID);\n\tconst riverCards = useSelector(getActiveRiverCards);\n\n\treturn <ChildCardRiver riverID={riverID} riverCards={riverCards}></ChildCardRiver>;\n};\n","import {\n\tCardRiverState,\n\tRiverShowState,\n\tpageNumberToRiverMakeUpID,\n\tRiverContentState,\n\temptyCardRiver,\n\tdeactivateActiveCardRiver,\n\tupdateStateWithMakeUps,\n\tremoveCardFromRivers,\n} from \"./model\";\nimport { CardConfig } from \"../cards/model/model-config\";\nimport cards from \"../cards\";\nimport * as t from \"./actionTypes\";\nimport display from \"../display\";\nimport { ArchiveRiver } from \"../db/model\";\nimport db from \"../db\";\n\nconst initialState: CardRiverState = {\n\triverMakeUps: {\n\t\t[pageNumberToRiverMakeUpID(1)]: {\n\t\t\triverID: pageNumberToRiverMakeUpID(1),\n\t\t\tcardIDs: [\"2\", \"0\", \"1\"],\n\t\t},\n\t},\n\tpushToRiverID: pageNumberToRiverMakeUpID(1),\n\tactiveRiverMakeUpID: pageNumberToRiverMakeUpID(1),\n\tlastRiverIDNumber: 1,\n\triverShowState: \"SHOW\",\n\thighlightedCardID: null,\n\thighlightedCardField: null,\n\triverContentState: \"ALL\",\n\tcontentFilter: \"\",\n};\n\nconst cardRiverState = (state = initialState, { type, payload }: { type: string; payload: any }): CardRiverState => {\n\tlet riverMakeUp;\n\tlet riverMakeUps;\n\tswitch (type) {\n\t\tcase display.actionTypes.PAGE_UPDATE:\n\t\t\tlet activeRiver;\n\t\t\tif (!state.riverMakeUps[pageNumberToRiverMakeUpID(payload as number)]) {\n\t\t\t\tactiveRiver = emptyCardRiver(payload as number);\n\t\t\t} else {\n\t\t\t\tactiveRiver = { ...state.riverMakeUps[pageNumberToRiverMakeUpID(payload as number)] };\n\t\t\t}\n\n\t\t\tconst oldRiver = deactivateActiveCardRiver(state);\n\n\t\t\treturn {\n\t\t\t\t...updateStateWithMakeUps(state, activeRiver, oldRiver),\n\t\t\t\tactiveRiverMakeUpID: activeRiver.riverID,\n\t\t\t\tpushToRiverID: activeRiver.riverID,\n\t\t\t};\n\n\t\tcase cards.actionTypes.CARD_PUSH:\n\t\t\triverMakeUp = {\n\t\t\t\t...state.riverMakeUps[state.pushToRiverID],\n\t\t\t\tcardIDs: [...state.riverMakeUps[state.pushToRiverID].cardIDs, (payload as CardConfig).cardID],\n\t\t\t};\n\t\t\triverMakeUps = { ...state.riverMakeUps };\n\t\t\triverMakeUps[state.pushToRiverID] = riverMakeUp;\n\n\t\t\treturn { ...state, riverMakeUps: riverMakeUps };\n\t\tcase cards.actionTypes.CARD_REMOVE:\n\t\t\treturn removeCardFromRivers(state, payload as string);\n\t\tcase t.RIVER_SHOW_STATE:\n\t\t\treturn { ...state, riverShowState: payload as RiverShowState };\n\t\tcase t.RIVER_CONTENT_STATE:\n\t\t\treturn { ...state, riverContentState: payload as RiverContentState };\n\t\tcase t.RIVER_PUSH_STATE:\n\t\t\treturn { ...state, pushToRiverID: payload };\n\t\tcase t.RIVER_HOVERED_CARD:\n\t\t\treturn { ...state, highlightedCardID: payload.id, highlightedCardField: payload.field };\n\t\tcase db.actionTypes.DOCUMENT_CHANGE:\n\t\t\tif (payload) {\n\t\t\t\treturn {\n\t\t\t\t\t...initialState,\n\t\t\t\t\triverMakeUps: (payload as ArchiveRiver).riverMakeUps,\n\t\t\t\t\tactiveRiverMakeUpID: (payload as ArchiveRiver).activeRiverMakeUpID,\n\t\t\t\t\tpushToRiverID: (payload as ArchiveRiver).pushToRiverID,\n\t\t\t\t\tlastRiverIDNumber: (payload as ArchiveRiver).lastRiverIDNumber,\n\t\t\t\t};\n\t\t\t} else {\n\t\t\t\treturn initialState;\n\t\t\t}\n\t\tcase db.actionTypes.LOAD_DOCUMENT_DATA_SETS:\n\t\t\t// basically the same as DOCUMENT_CHANGE, just only triggered\n\t\t\t//when uploading data that corresponds to current document\n\t\t\t// and if not, we dont reset\n\t\t\tif (payload.newActiveDataSet) {\n\t\t\t\treturn {\n\t\t\t\t\t...initialState,\n\t\t\t\t\triverMakeUps: (payload.newActiveDataSet as ArchiveRiver).riverMakeUps,\n\t\t\t\t\tactiveRiverMakeUpID: (payload.newActiveDataSet as ArchiveRiver).activeRiverMakeUpID,\n\t\t\t\t\tpushToRiverID: (payload.newActiveDataSet as ArchiveRiver).pushToRiverID,\n\t\t\t\t\tlastRiverIDNumber: (payload.newActiveDataSet as ArchiveRiver).lastRiverIDNumber,\n\t\t\t\t};\n\t\t\t} else {\n\t\t\t\treturn state;\n\t\t\t}\n\t\tcase t.RIVER_CONTENT_FILTER:\n\t\t\treturn { ...state, contentFilter: payload };\n\t\tdefault:\n\t\t\treturn state;\n\t}\n};\n\nexport default cardRiverState;\n","import * as constants from \"./constants\";\nimport * as components from \"./components\";\nimport reducer from \"./reducer\";\nimport * as selectors from \"./selectors\";\nimport * as actions from \"./actions\";\n\nexport default { constants, components, reducer, selectors, actions };\n","import { createSelector } from \"reselect\";\nimport display from \"../display\";\nimport river from \"../river\";\nimport cards from \"../cards\";\nimport { DocumentData } from \"../db/model\";\n\nexport const collectCurrentDBData: (state: any) => DocumentData | null = createSelector(\n\tdisplay.selectors.getPDFName,\n\tdisplay.selectors.getTotalPages,\n\tdisplay.selectors.getCurrentPage,\n\triver.selectors.getRiverMakeUps,\n\triver.selectors.getActiveRiverMakeUpID,\n\triver.selectors.getPushToRiver,\n\triver.selectors.getLastRiverIDNumber,\n\tcards.selectors.getCards,\n\tcards.selectors.getLastCardIDNumber,\n\t(\n\t\tpdfName,\n\t\ttotalPages,\n\t\tcurrentPage,\n\t\triverMakeUps,\n\t\tactiveRiverMakeUpID,\n\t\tpushToRiverID,\n\t\tlastRiverIDNumber,\n\t\tcards,\n\t\tlastCardIDNumber\n\t) => {\n\t\treturn {\n\t\t\tname: pdfName as string,\n\t\t\ttotalPages,\n\t\t\tcurrentPage,\n\t\t\triverMakeUps,\n\t\t\tactiveRiverMakeUpID,\n\t\t\tpushToRiverID,\n\t\t\tlastRiverIDNumber,\n\t\t\tcards,\n\t\t\tlastCardIDNumber,\n\t\t};\n\t}\n);\n","import { Dispatch } from \"redux\";\nimport display from \"../display\";\nimport { ActionCreators } from \"redux-undo\";\nimport db from \"../db\";\nimport { collectCurrentDBData } from \"./selectors\";\nimport { DocumentData } from \"../db/model\";\n\nexport const archiveCurrentDBData = () => {\n\treturn (dispatch: Dispatch, getState: Function) => {\n\t\tconst state = getState();\n\t\tconst currentPDFName = display.selectors.getPDFName(state);\n\n\t\tif (currentPDFName !== undefined) {\n\t\t\tconst dbData = collectCurrentDBData(state) as DocumentData;\n\t\t\tdispatch(db.actions.archiveDBData(dbData));\n\t\t}\n\t};\n};\n\nconst fileDownload = require(\"js-file-download\");\nexport const downloadDBData = () => {\n\treturn (dispatch: any, getState: Function) => {\n\t\t//actualize the db before downloading\n\t\tdispatch(archiveCurrentDBData());\n\n\t\tconst documentDataSets = db.selectors.getDocumentDataSets(getState());\n\t\tconst localString = new Date().toLocaleString();\n\t\tfileDownload(JSON.stringify(documentDataSets), localString + \" ClayMemory.txt\");\n\t};\n};\n\nexport const changeDocument = (pdf: File) => {\n\treturn (dispatch: Dispatch, getState: Function) => {\n\t\tconst newPDFName = pdf.name;\n\n\t\tconst state = getState();\n\t\tconst currentPDFName = display.selectors.getPDFName(state);\n\n\t\tconst documentDB = db.selectors.getDocumentDB(state);\n\n\t\t// save current data only if pdf has been uploaded / there is an active document\n\t\tif (currentPDFName !== undefined) {\n\t\t\tconst dbData = collectCurrentDBData(state) as DocumentData;\n\t\t\tdispatch(db.actions.archiveDBData(dbData));\n\t\t}\n\n\t\tdispatch(display.actions.pdfUpload(pdf));\n\n\t\t// if the uploaded pdf is the same as the active one, then we just reloaded the app (lost the pdf)\n\t\t// and dont need load data (loading data would lead to overwrite because of the syncing order)\n\t\t//TODO-NICE: make the sync between documentDB and active document for explicit, right now I just sync when a PDF is uploaded\n\t\tif (newPDFName === currentPDFName) {\n\t\t\treturn;\n\t\t}\n\t\t// load new data or reset\n\t\tconst newDocumentData = documentDB[newPDFName];\n\t\tif (newDocumentData) {\n\t\t\tdispatch({ type: db.actionTypes.DOCUMENT_CHANGE, payload: newDocumentData });\n\t\t} else {\n\t\t\tdispatch({ type: db.actionTypes.DOCUMENT_CHANGE });\n\t\t}\n\n\t\t// no undo-redo across documents\n\t\tdispatch(ActionCreators.clearHistory());\n\t};\n};\n\n//TODO-NICE: remove save redundancy\nexport const loadSavedDocument = (document: string) => {\n\treturn (dispatch: Dispatch, getState: Function) => {\n\t\tconst state = getState();\n\t\tconst currentPDFName = display.selectors.getPDFName(state);\n\n\t\tconst documentDB = db.selectors.getDocumentDB(state);\n\n\t\t// save current data only if pdf has been uploaded / there is an active document\n\t\tif (currentPDFName !== undefined) {\n\t\t\tconst dbData = collectCurrentDBData(state) as DocumentData;\n\t\t\tdispatch(db.actions.archiveDBData(dbData));\n\t\t}\n\n\t\t// load new data\n\t\tconst newDocumentData = documentDB[document];\n\t\tdispatch({ type: db.actionTypes.DOCUMENT_CHANGE, payload: newDocumentData });\n\n\t\t// no undo-redo across documents\n\t\tdispatch(ActionCreators.clearHistory());\n\t};\n};\n\nexport const deleteDocument = (document: string) => {\n\treturn (dispatch: Dispatch, getState: Function) => {\n\t\tconst state = getState();\n\t\tconst activeDocument = display.selectors.getPDFName(state);\n\t\tif (activeDocument && activeDocument === document) {\n\t\t\t// reset data\n\t\t\tdispatch({ type: db.actionTypes.DOCUMENT_CHANGE });\n\n\t\t\t// keeping the undo history leads to weird edge cases and makes no sense\n\t\t\tdispatch(ActionCreators.clearHistory());\n\t\t}\n\n\t\t// note: no undo of this\n\t\tdispatch(db.actions.deleteDocumentDataSet(document));\n\t};\n};\n","import { useDispatch } from \"react-redux\";\nimport React, { useState } from \"react\";\nimport {\n\tIconButton,\n\tTooltip,\n\tDialog,\n\tDialogTitle,\n\tDialogContent,\n\tDialogContentText,\n\tDialogActions,\n\tButton,\n} from \"@material-ui/core\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport text from \"../../../text\";\nimport { deleteDocument } from \"../../actions\";\n\nconst DeleteDocumentDialogAlert = ({\n\tdocument,\n\thandleClose,\n\topen,\n}: {\n\tdocument: string;\n\thandleClose: () => void;\n\topen: boolean;\n}) => {\n\tconst dispatch = useDispatch();\n\n\treturn (\n\t\t<Dialog\n\t\t\topen={open}\n\t\t\tonClose={handleClose}\n\t\t\taria-labelledby=\"alert-dialog-title\"\n\t\t\taria-describedby=\"alert-dialog-description\"\n\t\t>\n\t\t\t<DialogTitle id=\"alert-dialog-title\">{\"Delete \" + document + \" and all associated card data?\"}</DialogTitle>\n\t\t\t<DialogContent>\n\t\t\t\t<DialogContentText id=\"alert-dialog-description\">This change can not be undone.</DialogContentText>\n\t\t\t</DialogContent>\n\t\t\t<DialogActions>\n\t\t\t\t<Button onClick={handleClose} color=\"primary\">\n\t\t\t\t\tAbort\n\t\t\t\t</Button>\n\t\t\t\t<Button\n\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\tdispatch(deleteDocument(document));\n\t\t\t\t\t\thandleClose();\n\t\t\t\t\t}}\n\t\t\t\t\tcolor=\"primary\"\n\t\t\t\t\tautoFocus\n\t\t\t\t>\n\t\t\t\t\tDelete document and associated card data\n\t\t\t\t</Button>\n\t\t\t</DialogActions>\n\t\t</Dialog>\n\t);\n};\n\n//TODO-NICE: deleting the active document leads only to reset it, not really delete it\nexport const DeleteDocumentButton = ({ document }: { document: string }) => {\n\tconst [open, setOpen] = useState(false);\n\n\tconst handleClose = () => {\n\t\tsetOpen(false);\n\t};\n\treturn (\n\t\t<div>\n\t\t\t<Tooltip\n\t\t\t\ttitle={text.constants.deleteDocumentTooltip}\n\t\t\t\tenterDelay={text.constants.defaultEnterDelay}\n\t\t\t\tenterNextDelay={text.constants.defaultEnterNextDelay}\n\t\t\t>\n\t\t\t\t<IconButton\n\t\t\t\t\ttype=\"button\"\n\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\tsetOpen(true);\n\t\t\t\t\t}}\n\t\t\t\t>\n\t\t\t\t\t<DeleteIcon fontSize=\"small\"></DeleteIcon>\n\t\t\t\t</IconButton>\n\t\t\t</Tooltip>\n\t\t\t<DeleteDocumentDialogAlert document={document} open={open} handleClose={handleClose}></DeleteDocumentDialogAlert>\n\t\t</div>\n\t);\n};\n","import { useSelector, useDispatch } from \"react-redux\";\nimport React, { ChangeEvent, Fragment, useRef, MutableRefObject } from \"react\";\nimport { MenuItem, Button } from \"@material-ui/core\";\nimport display from \"../../../display\";\nimport db from \"../../../db\";\nimport { DocumentData } from \"../../../db/model\";\nimport PublishIcon from \"@material-ui/icons/Publish\";\n\nexport const InputDataSets = ({ handleClose, label }: any) => {\n\tconst dispatch = useDispatch();\n\n\tconst activeDocument = useSelector(display.selectors.getPDFName);\n\n\tconst ref: MutableRefObject<null | HTMLInputElement> = useRef(null);\n\n\treturn (\n\t\t<Fragment>\n\t\t\t<MenuItem\n\t\t\t\tonClick={() => {\n\t\t\t\t\t(ref.current as HTMLInputElement).click();\n\t\t\t\t}}\n\t\t\t>\n\t\t\t\t<Button variant=\"contained\" color=\"primary\" disableElevation startIcon={<PublishIcon></PublishIcon>}>\n\t\t\t\t\t{label}\n\t\t\t\t</Button>\n\t\t\t</MenuItem>\n\t\t\t<input\n\t\t\t\tref={ref}\n\t\t\t\tstyle={{ display: \"none\" }}\n\t\t\t\tonChange={(event: ChangeEvent<HTMLInputElement>) => {\n\t\t\t\t\t// fun fact: uploading a file with the same file-name does not trigger this event\n\t\t\t\t\tconst files = event.target.files;\n\t\t\t\t\tconst file = files ? files[0] : null;\n\t\t\t\t\tif (file) {\n\t\t\t\t\t\tconst reader = new FileReader();\n\t\t\t\t\t\treader.readAsText(file);\n\t\t\t\t\t\treader.onload = () => {\n\t\t\t\t\t\t\t//TODO-NICE: sanitize, escape os new line difference, prepare multimedia cards\n\t\t\t\t\t\t\t//TODO-NICE: merge same name-pdfs and think about collision in general\n\t\t\t\t\t\t\t//TODO-NICE: merge uploaded state with current-one and dont overwrite\n\t\t\t\t\t\t\tconst uploadedDataSets = JSON.parse(reader.result as string);\n\t\t\t\t\t\t\t// if the uploaded dataset corresponds to the current document, overwrite current with uploaded\n\t\t\t\t\t\t\tconst foundDataSet = (uploadedDataSets as DocumentData[]).find(\n\t\t\t\t\t\t\t\t(dbData) => dbData.name === activeDocument\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\tdispatch(db.actions.loadDocumentDataSets(uploadedDataSets, foundDataSet));\n\t\t\t\t\t\t};\n\t\t\t\t\t}\n\t\t\t\t\thandleClose();\n\t\t\t\t}}\n\t\t\t\ttype=\"file\"\n\t\t\t\taccept=\".txt\"\n\t\t\t/>\n\t\t</Fragment>\n\t);\n};\n","import { useDispatch } from \"react-redux\";\nimport React, { ChangeEvent, Fragment, useRef, MutableRefObject } from \"react\";\nimport { MenuItem, Button } from \"@material-ui/core\";\nimport { changeDocument } from \"../../actions\";\nimport InsertDriveFileIcon from \"@material-ui/icons/InsertDriveFile\";\n//TODO-NICE: have way to merge two document-workspaces\nexport const InputDocument = ({ handleClose, label }: any) => {\n\tconst dispatch = useDispatch();\n\n\tconst ref: MutableRefObject<null | HTMLInputElement> = useRef(null);\n\n\treturn (\n\t\t<Fragment>\n\t\t\t<MenuItem\n\t\t\t\tonClick={() => {\n\t\t\t\t\t(ref.current as HTMLInputElement).click();\n\t\t\t\t}}\n\t\t\t>\n\t\t\t\t<Button\n\t\t\t\t\tvariant=\"contained\"\n\t\t\t\t\tcolor=\"primary\"\n\t\t\t\t\tdisableElevation\n\t\t\t\t\tstartIcon={<InsertDriveFileIcon></InsertDriveFileIcon>}\n\t\t\t\t>\n\t\t\t\t\t{label}\n\t\t\t\t</Button>\n\t\t\t</MenuItem>\n\t\t\t<input\n\t\t\t\tref={ref}\n\t\t\t\tstyle={{ display: \"none\" }}\n\t\t\t\tonChange={(event: ChangeEvent<HTMLInputElement>) => {\n\t\t\t\t\tconst files = event.target.files;\n\t\t\t\t\tconst pdf = files ? files[0] : null;\n\t\t\t\t\tif (pdf) {\n\t\t\t\t\t\tdispatch(changeDocument(pdf));\n\t\t\t\t\t}\n\t\t\t\t\thandleClose();\n\t\t\t\t}}\n\t\t\t\ttype=\"file\"\n\t\t\t\taccept=\".pdf\"\n\t\t\t/>\n\t\t</Fragment>\n\t);\n};\n","import { useDispatch } from \"react-redux\";\nimport React from \"react\";\nimport { IconButton, Tooltip } from \"@material-ui/core\";\nimport ImportContactsIcon from \"@material-ui/icons/ImportContacts\";\nimport { loadSavedDocument } from \"../../actions\";\nimport text from \"../../../text\";\nexport const LoadDocumentDataButton = ({ document }: { document: string }) => {\n\tconst dispatch = useDispatch();\n\treturn (\n\t\t<Tooltip\n\t\t\ttitle={text.constants.loadSavedDocumentTooltip}\n\t\t\tenterDelay={text.constants.defaultEnterDelay}\n\t\t\tenterNextDelay={text.constants.defaultEnterNextDelay}\n\t\t>\n\t\t\t<IconButton\n\t\t\t\ttype=\"button\"\n\t\t\t\tonClick={() => {\n\t\t\t\t\tdispatch(loadSavedDocument(document));\n\t\t\t\t}}\n\t\t\t>\n\t\t\t\t<ImportContactsIcon fontSize=\"small\"></ImportContactsIcon>\n\t\t\t</IconButton>\n\t\t</Tooltip>\n\t);\n};\n","import React from \"react\";\nimport { Divider, Card, Grid } from \"@material-ui/core\";\nimport { DeleteDocumentButton } from \"./DeleteDocumentButton\";\nimport { LoadDocumentDataButton } from \"./LoadDocumentDataButton\";\n\nconst DocumentOptionItemButtonRow = ({ document }: { document: string }) => {\n\treturn (\n\t\t<Grid container direction=\"row\">\n\t\t\t<Grid item>\n\t\t\t\t<LoadDocumentDataButton document={document}></LoadDocumentDataButton>\n\t\t\t</Grid>\n\n\t\t\t<Grid item>\n\t\t\t\t<Divider orientation=\"vertical\"></Divider>\n\t\t\t</Grid>\n\n\t\t\t<Grid item>\n\t\t\t\t<DeleteDocumentButton document={document}></DeleteDocumentButton>\n\t\t\t</Grid>\n\t\t</Grid>\n\t);\n};\n\nexport const DocumentOptionItem = ({ document }: { document: string }) => {\n\treturn (\n\t\t<Grid container direction=\"row\" justify=\"space-between\" alignItems=\"center\" spacing={1}>\n\t\t\t<Grid item>{document.replace(\".pdf\", \"\")}</Grid>\n\n\t\t\t<Grid item>\n\t\t\t\t<Card variant=\"outlined\">\n\t\t\t\t\t<DocumentOptionItemButtonRow document={document}></DocumentOptionItemButtonRow>\n\t\t\t\t</Card>\n\t\t\t</Grid>\n\t\t</Grid>\n\t);\n};\n","import { useSelector, useDispatch } from \"react-redux\";\nimport React from \"react\";\nimport { Divider, Menu, MenuItem, IconButton, Typography, Card, Button, Grid } from \"@material-ui/core\";\nimport { downloadDBData } from \"../../actions\";\nimport MoreVertIcon from \"@material-ui/icons/MoreVert\";\nimport display from \"../../../display\";\nimport db from \"../../../db\";\nimport GetAppIcon from \"@material-ui/icons/GetApp\";\nimport { DeleteDocumentButton } from \"./DeleteDocumentButton\";\nimport text from \"../../../text\";\nimport { incrementer } from \"../../../../shared/utils\";\nimport { InputDataSets } from \"./InputDataSets\";\nimport { InputDocument } from \"./InputDocument\";\nimport { DocumentOptionItem } from \"./DocumentOptionItem\";\n\nconst ActiveDocumentOptionItem = ({ document }: { document: string }) => {\n\treturn (\n\t\t<Grid container direction=\"row\" justify=\"space-between\" alignItems=\"center\" spacing={1}>\n\t\t\t<Grid item>{document.replace(\".pdf\", \"\")}</Grid>\n\n\t\t\t<Grid item>\n\t\t\t\t<Card variant=\"outlined\">\n\t\t\t\t\t<DeleteDocumentButton document={document}></DeleteDocumentButton>\n\t\t\t\t</Card>\n\t\t\t</Grid>\n\t\t</Grid>\n\t);\n};\n\nexport const Options = () => {\n\tconst activeDocument = useSelector(display.selectors.getPDFName);\n\tconst documents = useSelector(db.selectors.getDocumentNames).filter((doc) => doc !== activeDocument);\n\n\tconst [anchorEl, setAnchorEl] = React.useState<null | HTMLElement>(null);\n\n\tconst handleClick = (event: React.MouseEvent<HTMLButtonElement>) => {\n\t\tsetAnchorEl(event.currentTarget);\n\t};\n\n\tconst handleClose = () => {\n\t\tsetAnchorEl(null);\n\t};\n\n\tconst dispatch = useDispatch();\n\n\tconst increment = incrementer();\n\n\treturn (\n\t\t<div>\n\t\t\t<IconButton type=\"button\" onClick={handleClick}>\n\t\t\t\t<MoreVertIcon></MoreVertIcon>\n\t\t\t</IconButton>\n\t\t\t<Menu\n\t\t\t\tid=\"simple-menu\"\n\t\t\t\tanchorEl={anchorEl}\n\t\t\t\tkeepMounted\n\t\t\t\topen={Boolean(anchorEl)}\n\t\t\t\tonClose={handleClose}\n\t\t\t\tMenuListProps={{ style: { paddingLeft: \"8px\", paddingRight: \"8px\" } }}\n\t\t\t>\n\t\t\t\t{activeDocument && [\n\t\t\t\t\t<Typography key={increment()} component={\"span\"} variant=\"h6\">\n\t\t\t\t\t\t{text.constants.activeDocumentText}\n\t\t\t\t\t</Typography>,\n\t\t\t\t\t<ActiveDocumentOptionItem key={increment()} document={activeDocument}></ActiveDocumentOptionItem>,\n\t\t\t\t\t<Divider key={increment()} style={{ marginTop: \"6px\" }}></Divider>,\n\t\t\t\t]}\n\t\t\t\t{documents.length > 0 && [\n\t\t\t\t\t<Typography key={increment()} component={\"span\"} variant=\"h6\">\n\t\t\t\t\t\t{text.constants.existingDataText}\n\t\t\t\t\t</Typography>,\n\t\t\t\t\t<Typography key={increment()} component={\"span\"}>\n\t\t\t\t\t\t<ul style={{ listStyleType: \"square\" }}>\n\t\t\t\t\t\t\t{documents.map((document) =>\n\t\t\t\t\t\t\t\tdocument ? (\n\t\t\t\t\t\t\t\t\t<li key={increment()}>\n\t\t\t\t\t\t\t\t\t\t<DocumentOptionItem document={document} key={increment()}></DocumentOptionItem>\n\t\t\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t\t\t) : null\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t</ul>\n\t\t\t\t\t</Typography>,\n\t\t\t\t\t<Divider key={increment()} style={{ marginTop: \"6px\" }} />,\n\t\t\t\t]}\n\t\t\t\t<InputDocument handleClose={handleClose} label={\"Load document\"}></InputDocument>\n\t\t\t\t<Divider />\n\t\t\t\t<MenuItem\n\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\tdispatch(downloadDBData());\n\t\t\t\t\t\thandleClose();\n\t\t\t\t\t}}\n\t\t\t\t>\n\t\t\t\t\t<Button variant=\"contained\" color=\"primary\" disableElevation startIcon={<GetAppIcon></GetAppIcon>}>\n\t\t\t\t\t\t{text.constants.downloadDatasetsText}\n\t\t\t\t\t</Button>\n\t\t\t\t</MenuItem>\n\t\t\t\t<Divider />\n\t\t\t\t<InputDataSets handleClose={handleClose} label={text.constants.uploadDatasetsText}></InputDataSets>\n\t\t\t</Menu>\n\t\t</div>\n\t);\n};\n","import React, { useState } from \"react\";\nimport SearchBar from \"material-ui-search-bar\";\nimport river from \"../../river\";\nimport { useDispatch, useSelector } from \"react-redux\";\n\n//TODO-RC: make search for PDF (right now this would need some work to find the correct text-node and partially color it)\n// https://github.com/wojtekmaj/react-pdf/issues/212\nexport const CardSearchBar = () => {\n\tconst dispatch = useDispatch();\n\tconst contentFilter = useSelector(river.selectors.getRiverContentFilter);\n\tconst [state, setState] = useState(contentFilter);\n\n\t//TODO-NICE: search in other rivers/same river when composing to show similar cards (like in the Anki Addon)\n\t//TODO-NICE: change the color / border or something to indicate when a filter is active\n\treturn (\n\t\t<SearchBar\n\t\t\tvalue={state}\n\t\t\tplaceholder=\"Search in cards\"\n\t\t\tonChange={(newValue) => {\n\t\t\t\t// auto-reset on empty\n\t\t\t\tif (newValue === \"\") dispatch(river.actions.resetContentFilter());\n\t\t\t\tsetState(newValue);\n\t\t\t}}\n\t\t\tonCancelSearch={() => {\n\t\t\t\tdispatch(river.actions.resetContentFilter());\n\t\t\t}}\n\t\t\tonRequestSearch={() => dispatch(river.actions.setContentFilter(state))}\n\t\t/>\n\t);\n};\n","import React from \"react\";\nimport { IconButton, Card, Divider, Grid, Tooltip } from \"@material-ui/core\";\nimport { useDispatch } from \"react-redux\";\nimport UndoIcon from \"@material-ui/icons/Undo\";\nimport RedoIcon from \"@material-ui/icons/Redo\";\nimport { ActionCreators } from \"redux-undo\";\nimport text from \"../../text\";\n\n//TODO-NICE: disable undo/redo buttons if no undo/redo possible, tried custom hook but didnt work,\n// need to check all store-objects which have future/past because they have different undo/redo\n\n// we support undo/redo instead of lengthy confirmation (see The Humane Interface)\nconst UndoButton = () => {\n\tconst dispatch = useDispatch();\n\n\t//tooltip needs non-disabled child component\n\treturn (\n\t\t<Tooltip\n\t\t\ttitle={text.constants.undoTooltip}\n\t\t\tenterDelay={text.constants.defaultEnterDelay}\n\t\t\tenterNextDelay={text.constants.defaultEnterNextDelay}\n\t\t>\n\t\t\t<span>\n\t\t\t\t<IconButton\n\t\t\t\t\ttype=\"button\"\n\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\tdispatch(ActionCreators.undo());\n\t\t\t\t\t}}\n\t\t\t\t>\n\t\t\t\t\t<UndoIcon></UndoIcon>\n\t\t\t\t</IconButton>\n\t\t\t</span>\n\t\t</Tooltip>\n\t);\n};\nconst RedoButton = () => {\n\tconst dispatch = useDispatch();\n\treturn (\n\t\t<Tooltip\n\t\t\ttitle={text.constants.redoTooltip}\n\t\t\tenterDelay={text.constants.defaultEnterDelay}\n\t\t\tenterNextDelay={text.constants.defaultEnterNextDelay}\n\t\t>\n\t\t\t<IconButton\n\t\t\t\ttype=\"button\"\n\t\t\t\tonClick={() => {\n\t\t\t\t\tdispatch(ActionCreators.redo());\n\t\t\t\t}}\n\t\t\t>\n\t\t\t\t<RedoIcon></RedoIcon>\n\t\t\t</IconButton>\n\t\t</Tooltip>\n\t);\n};\n\nexport const UndoRedoCard = () => {\n\treturn (\n\t\t<Card variant=\"outlined\">\n\t\t\t<Grid container direction=\"row\">\n\t\t\t\t<Grid item>\n\t\t\t\t\t<UndoButton></UndoButton>\n\t\t\t\t</Grid>\n\t\t\t\t<Grid item>\n\t\t\t\t\t<Divider orientation=\"vertical\"></Divider>\n\t\t\t\t</Grid>\n\t\t\t\t<Grid item>\n\t\t\t\t\t<RedoButton></RedoButton>\n\t\t\t\t</Grid>\n\t\t\t</Grid>\n\t\t</Card>\n\t);\n};\n","import display from \"../../display\";\nimport focus from \"../../focus\";\nimport river from \"../../river\";\nimport React from \"react\";\nimport { IconButton, Menu, FormControlLabel, Typography, Divider, Grid } from \"@material-ui/core\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport VisibilityIcon from \"@material-ui/icons/Visibility\";\nimport { GreenCheckbox } from \"../../../shared/GreenCheckbox\";\n\nconst ShowRiverCheckbox = () => {\n\tconst dispatch = useDispatch();\n\tconst riverShowState = useSelector(river.selectors.getRiverShowState);\n\n\treturn (\n\t\t<FormControlLabel\n\t\t\tcontrol={\n\t\t\t\t<GreenCheckbox\n\t\t\t\t\tchecked={riverShowState === \"SHOW\"}\n\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\tdispatch(river.actions.toggleRiverShowState());\n\t\t\t\t\t}}\n\t\t\t\t/>\n\t\t\t}\n\t\t\tlabel=\"River\"\n\t\t/>\n\t);\n};\n\nconst ShowMaterialCheckbox = () => {\n\tconst dispatch = useDispatch();\n\tconst displayShowState = useSelector(display.selectors.getDisplayStatus);\n\n\treturn (\n\t\t<FormControlLabel\n\t\t\tcontrol={\n\t\t\t\t<GreenCheckbox\n\t\t\t\t\tchecked={displayShowState === \"SHOW\"}\n\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\tdispatch(display.actions.toggleDisplayState());\n\t\t\t\t\t}}\n\t\t\t\t/>\n\t\t\t}\n\t\t\tlabel=\"Material\"\n\t\t/>\n\t);\n};\n\nexport const ShowHideButton = () => {\n\tconst [anchorEl, setAnchorEl] = React.useState<null | HTMLElement>(null);\n\n\tconst handleClick = (event: React.MouseEvent<HTMLButtonElement>) => {\n\t\tsetAnchorEl(event.currentTarget);\n\t};\n\n\tconst handleClose = () => {\n\t\tsetAnchorEl(null);\n\t};\n\n\tconst displayFocus = useSelector(focus.selectors.getDisplayFocus);\n\n\treturn (\n\t\t<div>\n\t\t\t<IconButton type=\"button\" onClick={handleClick}>\n\t\t\t\t<VisibilityIcon></VisibilityIcon>\n\t\t\t</IconButton>\n\t\t\t<Menu anchorEl={anchorEl} keepMounted open={Boolean(anchorEl)} onClose={handleClose}>\n\t\t\t\t<Typography>Show:</Typography>\n\t\t\t\t<Divider></Divider>\n\t\t\t\t<Grid container direction=\"row\">\n\t\t\t\t\t<Grid item>\n\t\t\t\t\t\t<river.components.RiverContentFormGroup></river.components.RiverContentFormGroup>\n\t\t\t\t\t</Grid>\n\t\t\t\t\t<Grid item>\n\t\t\t\t\t\t<Divider orientation=\"vertical\"></Divider>\n\t\t\t\t\t</Grid>\n\t\t\t\t\t<Grid item>\n\t\t\t\t\t\t{displayFocus === \"ACTIVE_RIVER\" && (\n\t\t\t\t\t\t\t<Grid container direction=\"column\">\n\t\t\t\t\t\t\t\t<Grid item>\n\t\t\t\t\t\t\t\t\t<ShowRiverCheckbox></ShowRiverCheckbox>\n\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t\t<Grid item>\n\t\t\t\t\t\t\t\t\t<ShowMaterialCheckbox></ShowMaterialCheckbox>\n\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t)}\n\t\t\t\t\t</Grid>\n\t\t\t\t</Grid>\n\t\t\t</Menu>\n\t\t</div>\n\t);\n};\n","import React, { ChangeEvent } from \"react\";\nimport { Tabs, Tab, Card, Tooltip } from \"@material-ui/core\";\nimport text from \"../../text\";\nimport focus from \"../../focus\";\n\nimport { useDispatch, useSelector } from \"react-redux\";\n\nexport const ViewTabs = () => {\n\tconst dispatch = useDispatch();\n\tconst displayFocus = useSelector(focus.selectors.getDisplayFocus);\n\n\tconst value = displayFocus === \"ACTIVE_RIVER\" ? 0 : 1;\n\n\tconst handleChange = (_: ChangeEvent<{}>, newValue: number) => {\n\t\tdispatch(\n\t\t\tnewValue === 0\n\t\t\t\t? focus.actions.updateDisplayFocus(\"ACTIVE_RIVER\")\n\t\t\t\t: focus.actions.updateDisplayFocus(\"SUMMARY_RIVER\")\n\t\t);\n\t};\n\n\treturn (\n\t\t<Card variant=\"outlined\">\n\t\t\t<Tabs value={value} onChange={handleChange}>\n\t\t\t\t<Tab\n\t\t\t\t\tlabel={\n\t\t\t\t\t\t<Tooltip\n\t\t\t\t\t\t\ttitle={text.constants.switchToActiveRiverTooltip}\n\t\t\t\t\t\t\tenterDelay={text.constants.defaultEnterDelay}\n\t\t\t\t\t\t\tenterNextDelay={500}\n\t\t\t\t\t\t\tdisableFocusListener={true}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<span>ActiveRiver</span>\n\t\t\t\t\t\t</Tooltip>\n\t\t\t\t\t}\n\t\t\t\t></Tab>\n\t\t\t\t<Tab\n\t\t\t\t\tlabel={\n\t\t\t\t\t\t<Tooltip\n\t\t\t\t\t\t\ttitle={text.constants.switchToSummaryRiverTooltip}\n\t\t\t\t\t\t\tenterDelay={text.constants.defaultEnterDelay}\n\t\t\t\t\t\t\tenterNextDelay={500}\n\t\t\t\t\t\t\tdisableFocusListener={true}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<span>SummaryRiver</span>\n\t\t\t\t\t\t</Tooltip>\n\t\t\t\t\t}\n\t\t\t\t/>\n\t\t\t</Tabs>\n\t\t</Card>\n\t);\n};\n","import display from \"../../display\";\nimport React from \"react\";\nimport { AppBar, Toolbar, Grid, Typography } from \"@material-ui/core\";\nimport { useSelector } from \"react-redux\";\nimport { Options } from \"./Options/Options\";\nimport { CardSearchBar } from \"./CardSearchBar\";\nimport { UndoRedoCard } from \"./UndoRedoButtons\";\nimport { ShowHideButton } from \"./ShowHideButton\";\nimport { ViewTabs } from \"./ViewTabs\";\n\n//TODO-NICE: download/load csv for Anki\nexport const ControlBar = () => {\n\tconst materialName = useSelector(display.selectors.getPDFName);\n\n\treturn (\n\t\t<Grid item>\n\t\t\t<display.components.PageKeyboardControl>\n\t\t\t\t<AppBar>\n\t\t\t\t\t<Toolbar variant=\"regular\">\n\t\t\t\t\t\t<Grid item>\n\t\t\t\t\t\t\t<Grid container spacing={1} direction=\"row\" alignItems=\"center\" justify=\"flex-start\">\n\t\t\t\t\t\t\t\t<Grid item style={{ width: \"15%\" }}>\n\t\t\t\t\t\t\t\t\t<display.components.PageChooser></display.components.PageChooser>\n\t\t\t\t\t\t\t\t</Grid>\n\n\t\t\t\t\t\t\t\t<Grid item>\n\t\t\t\t\t\t\t\t\t<display.components.PageNavigation></display.components.PageNavigation>\n\t\t\t\t\t\t\t\t</Grid>\n\n\t\t\t\t\t\t\t\t<Grid item>\n\t\t\t\t\t\t\t\t\t<ViewTabs></ViewTabs>\n\t\t\t\t\t\t\t\t</Grid>\n\n\t\t\t\t\t\t\t\t<Grid item>\n\t\t\t\t\t\t\t\t\t<UndoRedoCard></UndoRedoCard>\n\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t</Grid>\n\n\t\t\t\t\t\t<Typography style={{ flexGrow: 1 }}>{materialName?.replace(\".pdf\", \"\")}</Typography>\n\n\t\t\t\t\t\t<CardSearchBar></CardSearchBar>\n\t\t\t\t\t\t<ShowHideButton></ShowHideButton>\n\t\t\t\t\t\t<Options></Options>\n\t\t\t\t\t</Toolbar>\n\t\t\t\t</AppBar>\n\t\t\t</display.components.PageKeyboardControl>\n\t\t</Grid>\n\t);\n};\n","import * as actions from \"./actions\";\nimport * as components from \"./components\";\nimport * as selectors from \"./selectors\";\n\nexport default { actions, components, selectors };\n","export const NAME = \"extractionData\";\n","import { NAME } from \"./constants\";\n\nexport const TOGGLE_CONTEXT_MENU = NAME + \"/TOGGLE_CONTEXT_MENU\";\nexport const CLOSE_CONTEXT_MENU = NAME + \"/CLOSE_CONTEXT_MENU\";\nexport const OPEN_CONTEXT_MENU = NAME + \"/OPEN_CONTEXT_MENU\";\n","import { NAME } from \"./constants\";\nimport { createSelector } from \"reselect\";\nimport { CreationData } from \"./model\";\nimport river from \"../river\";\nimport selection from \"../selection\";\n\nexport const getAll = (state: any) => state[NAME].present;\n\nexport const getContextMenuState = createSelector(getAll, (state: CreationData) => state.open);\n\nexport const getContextMenuRef = createSelector(getAll, (state: CreationData) => state.menuRef);\n\nexport const getContextMenuFullCardsRef = createSelector(getAll, (state: CreationData) => state.fullCardRef);\n\nexport const getContextMenuQARefs = createSelector(getAll, (state: CreationData) => state.qaRefs);\n\nexport const getContextMenuInitData = createSelector(\n\tselection.selectors.getCurrentSelectionPosition,\n\tgetContextMenuState,\n\tgetContextMenuRef,\n\tgetContextMenuQARefs,\n\triver.selectors.getPushToRiverCards,\n\t(position, state, menuRef, qaRefs, riverCards) => {\n\t\treturn { position, state, menuRef, qaRefs, riverCards };\n\t}\n);\n","import { getContextMenuRef, getContextMenuQARefs, getContextMenuFullCardsRef } from \"../selectors\";\n\n// the root div for the menu invisibly covers the whole screen\n// the actual div that is visible is this\nconst baseContextMenuSelector = \"div.MuiPaper-root\";\n\nexport const contextMenuContainsTargetNode = (state: any, event: Event) => {\n\tconst menuRef = getContextMenuRef(state).current;\n\tconst fullCardsRef = getContextMenuFullCardsRef(state).current?.parentNode;\n\n\t// the nested items are rendered under a different menu\n\t// the current api does not allow access\n\t// so the qa-refs refer to the Q-button\n\t// we check the click against his parent,\n\t// which is the div that contains the Q and A buttons\n\tconst qaRefs = getContextMenuQARefs(state)\n\t\t.map((refObject) => refObject.current)\n\t\t.filter((cur) => !!cur)\n\t\t.map((ref) => ref.parentNode);\n\n\tconst target = event.target as Node;\n\n\tif (menuRef?.querySelector(baseContextMenuSelector)?.contains(target)) return true;\n\n\tif (fullCardsRef?.contains(target)) return true;\n\n\tfor (const qaRef of qaRefs) {\n\t\tif (qaRef.contains(target)) return true;\n\t}\n\n\treturn false;\n};\n","import * as t from \"./actionTypes\";\nimport { getContextMenuState } from \"./selectors\";\nimport display from \"../display\";\nimport selection from \"../selection\";\nimport { CardOrigin } from \"../cards/model/model-origin\";\nimport { CreationType } from \"../cards/model/model-config\";\nimport { contextMenuContainsTargetNode } from \"./services\";\nimport river from \"../river\";\nimport focus from \"../focus\";\n\nexport const toggleContextMenu = () => {\n\treturn (dispatch: any, getState: Function) => {\n\t\tconst state = getState();\n\t\tif (display.selectors.getDataExists(state)) {\n\t\t\tdispatch({ type: t.TOGGLE_CONTEXT_MENU });\n\t\t}\n\t};\n};\n\nexport const closeContextMenu = () => {\n\treturn (dispatch: any, getState: Function) => {\n\t\tif (getContextMenuState(getState())) {\n\t\t\tdispatch({ type: t.CLOSE_CONTEXT_MENU });\n\t\t}\n\t};\n};\n\nexport const openContextMenu = () => {\n\treturn (dispatch: any) => {\n\t\tdispatch({ type: t.OPEN_CONTEXT_MENU });\n\t};\n};\n\nexport const mouseDownControl = (event: MouseEvent) => {\n\treturn (dispatch: any, getState: Function) => {\n\t\tconst clickOutSideOfMenu = !contextMenuContainsTargetNode(getState(), event);\n\t\tif (clickOutSideOfMenu) {\n\t\t\tdispatch(closeContextMenu());\n\t\t\tdispatch(river.actions.resetHoveredCard());\n\t\t}\n\t};\n};\n\nexport const rightClickControl = (event: MouseEvent) => {\n\treturn (dispatch: any, getState: Function) => {\n\t\tconst state = getState();\n\n\t\tif (!selection.selectors.currentSelectionExists(state)) return;\n\n\t\tevent.preventDefault();\n\n\t\tconst displayFocus = focus.selectors.getDisplayFocus(state);\n\n\t\tdispatch(selection.actions.updateSelectionPosition(event.x, event.y));\n\t\tdispatch(openContextMenu());\n\n\t\tif (displayFocus === \"ACTIVE_RIVER\") {\n\t\t\t//if the user is focused on the document, the push-to river should always be the active=page-wise river\n\t\t\tdispatch(river.actions.setPushToRiver(river.selectors.getActiveRiverMakeUpID(state)));\n\t\t}\n\t};\n};\n\nexport const dispatchCreationFromContextMenu = (creationType: CreationType, cardID?: string) => {\n\treturn (dispatch: any, getState: Function) => {\n\t\tdispatch(closeContextMenu());\n\n\t\tconst state = getState();\n\t\t// if this does exist, we dont need to provide an origin, because it will be provided by the sourceCard\n\t\tconst sourceCard = selection.selectors.getSourceCard(state);\n\t\t// always overwrite origin, even if isUpdate, because updateType==replace\n\t\tconst origin: CardOrigin | undefined = sourceCard ? undefined : display.selectors.getCurrentOrigin(state);\n\t\tdispatch(selection.services.use_selection.selectionToCardReplace(creationType, origin, cardID));\n\t};\n};\n","import * as t from \"./actionTypes\";\nimport { CreationData } from \"./model\";\nimport { createRef } from \"react\";\nimport cards from \"../cards\";\nimport { CardConfig } from \"../cards/model/model-config\";\n\nconst initialState: CreationData = {\n\topen: false,\n\tmenuRef: createRef(),\n\tfullCardRef: createRef(),\n\tqaRefs: [createRef(), createRef()],\n};\n\nconst creationData = (state = initialState, { type, payload }: { type: string; payload: any }): CreationData => {\n\tswitch (type) {\n\t\tcase t.TOGGLE_CONTEXT_MENU:\n\t\t\treturn { ...state, open: !state.open };\n\t\tcase t.CLOSE_CONTEXT_MENU:\n\t\t\treturn { ...state, open: false };\n\t\tcase t.OPEN_CONTEXT_MENU:\n\t\t\treturn { ...state, open: true };\n\t\tcase cards.actionTypes.CARD_PUSH:\n\t\t\t//TODO-NICE: reliance on order of refs (needs to be the same as order of qaRefs) and coupling to the fact that a new card was pushed\n\t\t\t// might need to change if I allow moving the cards\n\t\t\t//TODO-NICE: no support for multiple rivers\n\t\t\t// need to check cards, this could lead to unnecessary amounts of refs because I dont check if enough are ready\n\t\t\tif ((payload as CardConfig).type === \"Q-A\") return { ...state, qaRefs: [...state.qaRefs, createRef()] };\n\t\t\treturn state;\n\t\tdefault:\n\t\t\treturn state;\n\t}\n};\n\nexport default creationData;\n","import React, { RefObject } from \"react\";\nimport NestedMenuItem from \"material-ui-nested-menu-item\";\nimport { MenuItem } from \"@material-ui/core\";\nimport { CardConfig } from \"../../cards/model/model-config\";\nimport { useDispatch } from \"react-redux\";\nimport river from \"../../river\";\nimport { dispatchCreationFromContextMenu } from \"../actions\";\n\n//TODO-NICE: rename this to note\n\nconst SingleOptionItem = ({ cardConfig }: { cardConfig: CardConfig }) => {\n\tconst dispatch = useDispatch();\n\n\treturn (\n\t\t<MenuItem\n\t\t\tonClick={() => {\n\t\t\t\tdispatch(dispatchCreationFromContextMenu(\"note\", cardConfig.cardID));\n\t\t\t}}\n\t\t\tonMouseEnter={() => {\n\t\t\t\tdispatch(river.actions.trySetHoveredCard(cardConfig.cardID, \"note\"));\n\t\t\t}}\n\t\t>\n\t\t\t{cardConfig.type}\n\t\t</MenuItem>\n\t);\n};\n\nconst QAOptionItem = ({ cardConfig, qaRef }: { cardConfig: CardConfig; qaRef: RefObject<any> | undefined }) => {\n\tconst dispatch = useDispatch();\n\n\treturn (\n\t\t<NestedMenuItem\n\t\t\tlabel=\"Q-A\"\n\t\t\tparentMenuOpen={true}\n\t\t\tonMouseEnter={() => {\n\t\t\t\t// hover over first field as default\n\t\t\t\tdispatch(river.actions.trySetHoveredCard(cardConfig.cardID, \"q\"));\n\t\t\t}}\n\t\t>\n\t\t\t<MenuItem\n\t\t\t\tref={qaRef}\n\t\t\t\tonClick={() => {\n\t\t\t\t\tdispatch(dispatchCreationFromContextMenu(\"q\", cardConfig.cardID));\n\t\t\t\t}}\n\t\t\t\tonMouseEnter={() => {\n\t\t\t\t\tdispatch(river.actions.trySetHoveredCard(cardConfig.cardID, \"q\"));\n\t\t\t\t}}\n\t\t\t>\n\t\t\t\tQ-field\n\t\t\t</MenuItem>\n\t\t\t<MenuItem\n\t\t\t\tonClick={() => {\n\t\t\t\t\tdispatch(dispatchCreationFromContextMenu(\"a\", cardConfig.cardID));\n\t\t\t\t}}\n\t\t\t\tonMouseEnter={() => {\n\t\t\t\t\tdispatch(river.actions.trySetHoveredCard(cardConfig.cardID, \"a\"));\n\t\t\t\t}}\n\t\t\t>\n\t\t\t\tA-field\n\t\t\t</MenuItem>\n\t\t</NestedMenuItem>\n\t);\n};\n\nexport const CardConfigItem = ({ cardConfig, qaRef }: { cardConfig: CardConfig; qaRef?: RefObject<any> }) => {\n\tswitch (cardConfig.type) {\n\t\tcase \"Q-A\":\n\t\t\treturn <QAOptionItem cardConfig={cardConfig} qaRef={qaRef}></QAOptionItem>;\n\t\tdefault:\n\t\t\treturn <SingleOptionItem cardConfig={cardConfig}></SingleOptionItem>;\n\t}\n};\n","import { Fragment } from \"react\";\nimport { MenuItem } from \"@material-ui/core\";\nimport React from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { dispatchCreationFromContextMenu } from \"../actions\";\n\nconst NewQACardQ = ({ onClick }: any) => <MenuItem onClick={onClick}>New: Q (Q-A)</MenuItem>;\nconst NewQACardA = ({ onClick }: any) => <MenuItem onClick={onClick}>New: A (Q-A)</MenuItem>;\nconst NewNoteCard = ({ onClick }: any) => <MenuItem onClick={onClick}>New: Note</MenuItem>;\n\nexport const NewButtons = () => {\n\tconst dispatch = useDispatch();\n\n\treturn (\n\t\t<Fragment>\n\t\t\t<NewNoteCard\n\t\t\t\tonClick={() => {\n\t\t\t\t\tdispatch(dispatchCreationFromContextMenu(\"note\"));\n\t\t\t\t}}\n\t\t\t></NewNoteCard>\n\t\t\t<NewQACardQ\n\t\t\t\tonClick={() => {\n\t\t\t\t\tdispatch(dispatchCreationFromContextMenu(\"q\"));\n\t\t\t\t}}\n\t\t\t></NewQACardQ>\n\t\t\t<NewQACardA\n\t\t\t\tonClick={() => {\n\t\t\t\t\tdispatch(dispatchCreationFromContextMenu(\"a\"));\n\t\t\t\t}}\n\t\t\t></NewQACardA>\n\t\t</Fragment>\n\t);\n};\n","import { useRef, useEffect, MutableRefObject } from \"react\";\n\n// only global eventListener for now\nexport const useEventListener = (eventName: string, handler: any) => {\n\tconst savedHandler: MutableRefObject<Function> = useRef(() => {});\n\n\tuseEffect(() => {\n\t\tsavedHandler.current = handler;\n\t}, [handler]);\n\n\tuseEffect(() => {\n\t\tconst eventListener = (event: Event) => savedHandler.current(event);\n\t\tdocument.addEventListener(eventName, eventListener);\n\t\treturn () => {\n\t\t\tdocument.removeEventListener(eventName, eventListener);\n\t\t};\n\t}, [eventName]);\n};\n","import React, { RefObject } from \"react\";\nimport Menu from \"@material-ui/core/Menu\";\nimport { Divider, MenuItem } from \"@material-ui/core\";\nimport { useDispatch, connect, useSelector } from \"react-redux\";\nimport { getContextMenuInitData, getContextMenuFullCardsRef } from \"../selectors\";\nimport { rightClickControl, mouseDownControl } from \"../actions\";\nimport { incrementer, partition } from \"../../../shared/utils\";\nimport { CardConfig } from \"../../cards/model/model-config\";\nimport { CardConfigItem } from \"./CardConfigItem\";\nimport { NewButtons } from \"./NewButtons\";\nimport NestedMenuItem from \"material-ui-nested-menu-item\";\nimport { useEventListener } from \"../../../shared/useEventListener\";\nimport cards from \"../../cards\";\n\nfunction ContextMenu({\n\tposition,\n\tstate,\n\tmenuRef,\n\tqaRefs,\n\triverCards,\n}: {\n\tposition: { x: number; y: number };\n\tstate: boolean;\n\tmenuRef: RefObject<any>;\n\tqaRefs: RefObject<any>[];\n\triverCards: CardConfig[];\n}) {\n\tconst dispatch = useDispatch();\n\n\tuseEventListener(\"mousedown\", (event: MouseEvent) => {\n\t\tdispatch(mouseDownControl(event));\n\t});\n\n\tuseEventListener(\"contextmenu\", (event: MouseEvent) => {\n\t\tdispatch(rightClickControl(event));\n\t});\n\n\tconst fullCardsRef = useSelector(getContextMenuFullCardsRef);\n\n\tconst openState = state;\n\n\tconst increment = incrementer();\n\tconst qaRefIndex = incrementer();\n\n\tconst anchorPosition = openState ? { top: position.y, left: position.x } : undefined;\n\n\tconst [nonFullRiverCards, fullRiverCards] = partition(riverCards, cards.model.model_config.cardIsNotFull);\n\n\t// TODO-NICE: use hidden MenuItem-pattern also for qa-ref\n\n\t// TODO-NICE: need to check for state before rendering MenuItems,\n\t// otherwise it shows up for a split-second when switching the menu off after adding to the river\n\t// weird Race Condition even if I dispatch closeContextMenu first?\n\treturn (\n\t\t<Menu\n\t\t\tref={openState ? menuRef : null}\n\t\t\tkeepMounted\n\t\t\topen={openState}\n\t\t\tanchorReference=\"anchorPosition\"\n\t\t\tanchorPosition={anchorPosition}\n\t\t>\n\t\t\t{openState &&\n\t\t\t\tnonFullRiverCards.map((cardConfig) => (\n\t\t\t\t\t<CardConfigItem\n\t\t\t\t\t\tcardConfig={cardConfig}\n\t\t\t\t\t\tkey={increment()}\n\t\t\t\t\t\tqaRef={cardConfig.type === \"Q-A\" ? qaRefs[qaRefIndex()] : undefined}\n\t\t\t\t\t></CardConfigItem>\n\t\t\t\t))}\n\t\t\t{openState && nonFullRiverCards.length > 0 && <Divider />}\n\n\t\t\t{openState && <NewButtons></NewButtons>}\n\n\t\t\t{openState && fullRiverCards.length > 0 && <Divider />}\n\t\t\t{openState && fullRiverCards.length > 0 && (\n\t\t\t\t<NestedMenuItem label=\"Full cards: \" parentMenuOpen={true}>\n\t\t\t\t\t<MenuItem ref={fullCardsRef} style={{ position: \"absolute\" }}></MenuItem>\n\t\t\t\t\t{fullRiverCards.map((cardConfig) => (\n\t\t\t\t\t\t<CardConfigItem\n\t\t\t\t\t\t\tcardConfig={cardConfig}\n\t\t\t\t\t\t\tkey={increment()}\n\t\t\t\t\t\t\tqaRef={cardConfig.type === \"Q-A\" ? qaRefs[qaRefIndex()] : undefined}\n\t\t\t\t\t\t></CardConfigItem>\n\t\t\t\t\t))}\n\t\t\t\t</NestedMenuItem>\n\t\t\t)}\n\t\t</Menu>\n\t);\n}\n\n//TODO-NICE: make selection-dropable on buttons, so that they can be send to cards, make this the default instead of context-menu?\n// imagine: toolbar with new Note, new A, new Q | all the cards and you can drop off\n\n//TODO-NICE: delete extracted str in source\n\nexport const ContextMenuContainer = connect(getContextMenuInitData)(ContextMenu);\n","import * as actions from \"./actions\";\nimport * as constants from \"./constants\";\nimport * as actionTypes from \"./actionTypes\";\nimport reducer from \"./reducer\";\nimport * as selectors from \"./selectors\";\nimport * as components from \"./components\";\nimport * as services from \"./services\";\n\nexport default { actions, actionTypes, constants, components, reducer, selectors, services };\n","import React from \"react\";\nimport Grid from \"@material-ui/core/Grid\";\nimport control from \"../modules/control\";\nimport creation from \"../modules/extraction\";\nimport { makeStyles, Theme, createStyles, useScrollTrigger, Zoom, Toolbar, Fab } from \"@material-ui/core\";\nimport KeyboardArrowUpIcon from \"@material-ui/icons/KeyboardArrowUp\";\nimport selection from \"../modules/selection\";\nimport river from \"../modules/river\";\nimport focus from \"../modules/focus\";\nimport { useSelector } from \"react-redux\";\nimport display from \"../modules/display\";\n\n//TODO: make show/hide depdendant on tab, also Page choice, control-bar dependant on tab\n\nconst useStyles = makeStyles((theme: Theme) =>\n\tcreateStyles({\n\t\troot: {\n\t\t\tposition: \"fixed\",\n\t\t\tbottom: theme.spacing(2),\n\t\t\tright: theme.spacing(2),\n\t\t},\n\t})\n);\n\nfunction ScrollTop(props: any) {\n\tconst { children } = props;\n\tconst classes = useStyles();\n\tconst trigger = useScrollTrigger({\n\t\tdisableHysteresis: true,\n\t\tthreshold: 100,\n\t});\n\n\tconst handleClick = (event: React.MouseEvent<HTMLDivElement>) => {\n\t\tconst anchor = ((event.target as HTMLDivElement).ownerDocument || document).querySelector(\"#back-to-top-anchor\");\n\n\t\tif (anchor) {\n\t\t\tanchor.scrollIntoView({ behavior: \"smooth\", block: \"center\" });\n\t\t}\n\t};\n\n\treturn (\n\t\t<Zoom in={trigger}>\n\t\t\t<div onClick={handleClick} role=\"presentation\" className={classes.root}>\n\t\t\t\t{children}\n\t\t\t</div>\n\t\t</Zoom>\n\t);\n}\n\nexport function ReaderScene() {\n\tconst displayFocus = useSelector(focus.selectors.getDisplayFocus);\n\tconst showMaterial = useSelector(display.selectors.displayStatusIsShow);\n\tconst showRiver = useSelector(river.selectors.riverShowStateIsShow);\n\n\treturn (\n\t\t<div>\n\t\t\t<Grid container justify=\"center\" direction=\"column\" alignItems=\"stretch\" spacing={1}>\n\t\t\t\t<control.components.ControlBar></control.components.ControlBar>\n\t\t\t\t<Toolbar id=\"back-to-top-anchor\" />\n\n\t\t\t\t<Grid item hidden={displayFocus !== \"ACTIVE_RIVER\"}>\n\t\t\t\t\t<Grid container justify=\"space-around\" direction=\"row\" alignItems=\"stretch\">\n\t\t\t\t\t\t<Grid\n\t\t\t\t\t\t\titem\n\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\twidth: \"38%\",\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\thidden={!showRiver}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<river.components.ActiveCardRiver></river.components.ActiveCardRiver>\n\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t<display.components.MaterialDisplayColumnWithSize\n\t\t\t\t\t\t\thidden={!showMaterial}\n\t\t\t\t\t\t></display.components.MaterialDisplayColumnWithSize>\n\t\t\t\t\t</Grid>\n\t\t\t\t</Grid>\n\n\t\t\t\t<Grid item hidden={displayFocus !== \"SUMMARY_RIVER\"}>\n\t\t\t\t\t<river.components.SummaryRiver></river.components.SummaryRiver>\n\t\t\t\t</Grid>\n\t\t\t</Grid>\n\t\t\t<ScrollTop>\n\t\t\t\t<Fab color=\"secondary\" size=\"small\" aria-label=\"scroll back to top\">\n\t\t\t\t\t<KeyboardArrowUpIcon />\n\t\t\t\t</Fab>\n\t\t\t</ScrollTop>\n\t\t\t<creation.components.ContextMenuContainer></creation.components.ContextMenuContainer>\n\t\t\t<selection.components.SelectionSnackbar></selection.components.SelectionSnackbar>\n\t\t</div>\n\t);\n}\n","import storage from \"redux-persist/lib/storage\"; // defaults to localStorage for web\nimport { createTransform } from \"redux-persist\";\nimport { CreationData } from \"./modules/extraction/model\";\nimport { createRef } from \"react\";\nimport extraction from \"./modules/extraction\";\nimport { DisplayData, DisplayStatus, PerPageSpans } from \"./modules/display/model\";\nimport display from \"./modules/display\";\nimport { SelectionData } from \"./modules/selection/model\";\nimport selection from \"./modules/selection\";\n\n// to get the correct object with reselect, I added .present to all getAll that belong do undoable modules\n\nconst removeDOMObjectsFromCreationData = (inboundState: CreationData) => {\n\treturn {\n\t\t...inboundState,\n\t\tmenuRef: null,\n\t\tfullCardRef: null,\n\t\tqaRefs: inboundState.qaRefs.map((_) => null),\n\t};\n};\n\nconst addDOMObjectsToCreationData = (outboundState: {\n\topen: boolean;\n\tmenuRef: null;\n\tfullCardRef: null;\n\tqaRefs: null[];\n}): CreationData => {\n\treturn {\n\t\t...outboundState,\n\t\tmenuRef: createRef(),\n\t\tfullCardRef: createRef(),\n\t\tqaRefs: outboundState.qaRefs.map((_) => createRef()),\n\t};\n};\n\nconst extractionTransform = createTransform(\n\t(inboundState: { future: CreationData[]; past: CreationData[]; present: CreationData }) => {\n\t\treturn {\n\t\t\t...inboundState,\n\t\t\tfuture: inboundState.future.map(removeDOMObjectsFromCreationData),\n\t\t\tpast: inboundState.past.map(removeDOMObjectsFromCreationData),\n\t\t\tpresent: removeDOMObjectsFromCreationData(inboundState.present),\n\t\t};\n\t},\n\t(outboundState): { future: CreationData[]; past: CreationData[]; present: CreationData } => {\n\t\treturn {\n\t\t\t...outboundState,\n\t\t\tfuture: outboundState.future.map(addDOMObjectsToCreationData),\n\t\t\tpast: outboundState.past.map(addDOMObjectsToCreationData),\n\t\t\tpresent: addDOMObjectsToCreationData(outboundState.present),\n\t\t};\n\t},\n\t{ whitelist: [extraction.constants.NAME] }\n);\n\n//TODO-NICE: find way to save PDF in browser, maybe manually use indexeddb and use that in transform?\n// idea: make store-field pdfAsBase64 and use thunk for async-filling the field, then when reloading, use thunk to format\n// const reader = new FileReaderSync();\n\n// function readFileAsync(file: File) {\n// \treturn new Promise((resolve) => {\n// \t\treader.onload = () => {\n// \t\t\tresolve(reader.result);\n// \t\t};\n// \t\treader.onerror = () => resolve(null);\n\n// \t\treader.readAsDataURL(file);\n// \t});\n// }\n\nconst removeDOMObjectsFromDisplayData = (inboundState: DisplayData) => {\n\tlet pdf = null;\n\t// if (inboundState.pdf) {\n\t// \tpdf = await readFileAsync(inboundState.pdf);\n\t// }\n\tconst result = { ...inboundState, documentRef: null, materialData: null, pdf };\n\treturn result;\n};\n\n//TODO-NICE: create persistable type for the state in model\n\nconst addDOMObjectsToDisplayData = (outboundState: {\n\tpdf: null;\n\tpdfName?: string;\n\tdisplayStatus: DisplayStatus;\n\tcurrentPage: number;\n\ttotalPages: number;\n\t//TODO-NICE:might need amount of spans per page for validation? if yes, use this\n\tpageSpans: PerPageSpans;\n\tdocumentRef: null;\n\tzoomTargetSpanIndex: number | null;\n\tmaterialData: null;\n}): DisplayData => {\n\treturn {\n\t\t...outboundState,\n\t\tpdf: undefined,\n\t\tdocumentRef: createRef(),\n\t\tmaterialData: { materialDataTimeStamp: -Infinity },\n\t};\n};\n\nconst displayTransform = createTransform(\n\t(inboundState: DisplayData) => {\n\t\treturn removeDOMObjectsFromDisplayData(inboundState);\n\t},\n\t(outboundState): DisplayData => {\n\t\treturn addDOMObjectsToDisplayData(outboundState);\n\t},\n\t{ whitelist: [display.constants.NAME] }\n);\n\n// for selection we just use the initialState and dont persist future/past\nconst selectionTransform = createTransform(\n\t(inboundState: { future: SelectionData[]; past: SelectionData[]; present: SelectionData }) => {\n\t\treturn {\n\t\t\t...inboundState,\n\t\t\tfuture: [],\n\t\t\tpast: [],\n\t\t\tpresent: {\n\t\t\t\tmanuallySelectedString: \"\",\n\t\t\t\tselectedParentSpan: null,\n\t\t\t\tselectionPosition: { x: 0, y: 0 },\n\t\t\t\tsourceCard: null,\n\t\t\t},\n\t\t};\n\t},\n\t(outboundState): { future: SelectionData[]; past: SelectionData[]; present: SelectionData } => {\n\t\treturn outboundState;\n\t},\n\t{ whitelist: [selection.constants.NAME] }\n);\n\nexport const persistConfig = {\n\tkey: \"root\",\n\tstorage,\n\ttransforms: [extractionTransform, displayTransform, selectionTransform],\n};\n","import { createStore } from \"redux\";\nimport { applyMiddleware } from \"redux\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport thunk from \"redux-thunk\";\nimport { combineReducers } from \"redux\";\nimport focus from \"./modules/focus\";\nimport creation from \"./modules/extraction\";\nimport river from \"./modules/river\";\nimport display from \"./modules/display\";\nimport cards from \"./modules/cards\";\nimport { persistStore, persistReducer } from \"redux-persist\";\nimport undoable, { includeAction } from \"redux-undo\";\nimport { persistConfig } from \"./persist\";\nimport db from \"./modules/db\";\nimport selection from \"./modules/selection\";\n\n//TODO-NICE: make limit for undo (right now its fine, if we reset on document-upload)\n//TODO-NICE: make snackbar for which action is undone/redone\n//TODO-NICE: this undo-buisness is not very transparent, I just list each action that is state-relevant and not view, make action list in constants.ts?\n\n//TODO-NICE: can undo selected-string but then the source-card might still be set\n// I think this is not a problem, because then when something else is selected the old-source-Card is overwritten\n// but not as clean as it could be\n\nconst rootReducer = combineReducers({\n\t[focus.constants.NAME]: focus.reducer,\n\t[selection.constants.NAME]: undoable(selection.reducer, {\n\t\tfilter: includeAction([selection.actionTypes.SELECTED_STRING]),\n\t}),\n\t[creation.constants.NAME]: undoable(creation.reducer, {\n\t\tfilter: includeAction([cards.actionTypes.CARD_PUSH]),\n\t}),\n\t[river.constants.NAME]: undoable(river.reducer, {\n\t\tfilter: includeAction([\n\t\t\tcards.actionTypes.CARD_PUSH,\n\t\t\tcards.actionTypes.CARD_REMOVE,\n\t\t\tdb.actionTypes.LOAD_DOCUMENT_DATA_SETS,\n\t\t]),\n\t}),\n\t[display.constants.NAME]: display.reducer,\n\t[cards.constants.NAME]: undoable(cards.reducer, {\n\t\tfilter: includeAction([\n\t\t\tdb.actionTypes.LOAD_DOCUMENT_DATA_SETS,\n\t\t\tcards.actionTypes.CARD_PUSH,\n\t\t\tcards.actionTypes.CARD_UPDATE,\n\t\t\tcards.actionTypes.CARD_REMOVE,\n\t\t\t//this needs to be here, because we use display it to the user with the grab-icon\n\t\t\tcards.actionTypes.CARD_GOAL,\n\t\t]),\n\t}),\n\t[db.constants.NAME]: undoable(db.reducer, {\n\t\tfilter: includeAction([db.actionTypes.LOAD_DOCUMENT_DATA_SETS]),\n\t}),\n});\n\nconst stateSanitizer = (state: any) => {\n\treturn state.displayData.pdf ? { ...state, displayData: { ...state.displayData, pdf: \"PDF_FILE_IS_HERE\" } } : state;\n};\n\nconst persistedReducer = persistReducer(persistConfig, rootReducer);\n\nconst composeEnhancers = composeWithDevTools({ stateSanitizer });\nconst enhancer = composeEnhancers(applyMiddleware(thunk));\n\nexport const store = createStore(persistedReducer, enhancer);\n\nexport const persistor = persistStore(store);\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { ReaderScene } from \"./scene/ReaderScene\";\nimport { Provider } from \"react-redux\";\nimport { store, persistor } from \"./store\";\nimport { PersistGate } from \"redux-persist/es/integration/react\";\n// Load Roboto typeface\nrequire(\"typeface-roboto\");\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<Provider store={store}>\n\t\t\t<PersistGate loading={null} persistor={persistor}>\n\t\t\t\t<ReaderScene></ReaderScene>\n\t\t\t</PersistGate>\n\t\t</Provider>\n\t</React.StrictMode>,\n\tdocument.getElementById(\"root\")\n);\n"],"sourceRoot":""}