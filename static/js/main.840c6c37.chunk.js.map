{"version":3,"sources":["modules/display/model.ts","modules/display/constants.ts","modules/display/actionTypes.ts","shared/utils.ts","modules/display/selectors.ts","modules/display/actions.ts","modules/text/constants.ts","modules/text/components/NewNoteCardTooltip.tsx","modules/text/components/AddQAButtonTooltip.tsx","modules/text/components/DeleteCardButtonTooltip.tsx","modules/text/index.ts","modules/display/components/NavigationButtons.tsx","modules/display/components/PageChooser/PageChooser.tsx","modules/display/components/PDFDocument/PageKeyboardControl.tsx","modules/display/components/PDFDocument/HTMLElementMeasurer.tsx","modules/display/components/OriginMarkedSnackbar.tsx","modules/river/constants.ts","modules/river/model.ts","modules/cards/constants.ts","modules/cards/actionTypes.ts","modules/cards/model/permutation.ts","modules/cards/model/content.ts","modules/cards/model/config.ts","modules/cards/selectors.ts","modules/cards/actions.ts","modules/cards/model/payload.ts","modules/cards/components/AddNoteButton.tsx","modules/cards/components/AddQAButton.tsx","modules/cards/components/DeleteCardButton.tsx","modules/cards/model/origin.ts","modules/cards/model/state.ts","modules/db/constants.ts","modules/db/actionTypes.ts","modules/db/actions.ts","modules/db/model.ts","modules/db/reducer.ts","modules/db/selectors.ts","modules/db/index.ts","modules/cards/reducer.ts","modules/cards/index.ts","modules/river/selectors.ts","modules/river/actionTypes.ts","modules/river/actions.ts","shared/GreenCheckbox.tsx","modules/river/components/RiverContentFormGroup.tsx","modules/selection/constants.ts","modules/selection/actionTypes.ts","modules/selection/selectors.ts","modules/selection/services/use-selection.ts","modules/selection/model.ts","modules/selection/services/get-selection.ts","modules/selection/actions.ts","modules/selection/reducer.ts","modules/selection/components/SelectionSnackbar.tsx","modules/selection/components/MaterialMouseUp.tsx","modules/selection/components/CardMouseUp.tsx","modules/selection/components/AppendButton.tsx","modules/selection/components/ContextMenu.tsx","modules/selection/components/ReplaceButton.tsx","modules/selection/index.ts","modules/river/components/CardRiver/Cards/ClayCardField.tsx","modules/river/components/CardRiver/Cards/JumpToOriginButton.tsx","modules/river/components/CardRiver/Cards/ClayCardFieldButtons.tsx","modules/river/components/CardRiver/Cards/QACard.tsx","modules/river/components/CardRiver/Cards/NoteCard.tsx","modules/river/components/CardRiver/Cards/ClayCard.tsx","modules/river/components/CardRiver/ClayCardGridItems.tsx","modules/river/services/filterCardConfigs.tsx","modules/river/components/CardRiver/CardRiver.tsx","modules/river/components/SwitchActiveRiver.tsx","modules/river/reducer.ts","modules/river/index.ts","modules/display/components/PageSpanControl.tsx","modules/display/components/PDFDocument/PDFPage.tsx","modules/display/components/PDFDocument/RiverMaterialPair.tsx","modules/display/components/PDFDocument/PageScrollControl.tsx","modules/display/components/PDFDocument/RiverMaterialPairList.tsx","modules/display/components/PDFDocument/PDFDocument.tsx","modules/display/components/PDFDocument/cachePageDimensions.tsx","modules/display/components/RiverExplorer.tsx","modules/display/components/Display.tsx","modules/display/components/ViewTabs.tsx","modules/display/reducer.ts","modules/display/index.ts","modules/control/constants.ts","modules/control/selectors.ts","modules/control/actionTypes.ts","modules/control/actions.ts","modules/control/components/Options/DeleteDocumentButton.tsx","modules/control/components/Options/InputDataSets.tsx","modules/control/components/Options/InputDocument.tsx","modules/control/components/Options/LoadDocumentDataButton.tsx","modules/control/components/Options/DocumentOptionItem.tsx","modules/control/components/Options/Options.tsx","modules/control/components/ClayMemorySearchBar.tsx","modules/control/components/UndoRedoButtons.tsx","modules/control/components/ShowHideButton.tsx","modules/control/components/ControlBar.tsx","modules/control/model.ts","modules/control/reducer.ts","modules/control/index.ts","scene/ReaderScene.tsx","persist.ts","store.ts","index.tsx"],"names":["View","NAME","PDF_UPLOADED","MATERIAL_LOADED","DISPLAY_STATUS","PAGE_UPDATE","SPAN_ORIGIN","DOCUMENT_SEARCH","WINDOW_LAYOUT","TOP_OFFSET","VIEW_CHANGE","keyMap","pageCorrections","newPage","totalPages","getAll","state","getPDF","createSelector","pdf","getWindowMeasurements","windowMeasurements","getPDFName","pdfName","getTotalPages","getCurrentPage","currentPage","getScrollToPage","scrollToPage","getPageControlData","getDisplayStatus","displayStatus","displayStatusIsShow","status","getSpanOrigin","spanOrigin","getDocumentSearch","documentSearch","getTopOffset","topOffset","getCurrentView","currentView","incrementer","counter","curCounter","widthPixels","type","t","payload","pdfUpload","materialLoaded","setPage","page","shouldScroll","movePage","dispatch","getState","nextPage","previousPage","pageControlKeyMap","ArrowLeft","ArrowRight","pageControlDispatcher","event","action","key","preventDefault","toggleDisplayState","displayState","setSpanOrigin","origin","resetSpanOrigin","setDocumentSearch","search","resetDocumentSearch","setTopOffset","offset","setView","view","switchToActiveRiverTooltip","switchToSummaryRiverTooltip","undoTooltip","redoTooltip","nextPageTooltip","previousPageTooltip","deleteCardTooltip","jumpToOriginTooltip","ChoiceCardAsAppendGoal","AppendToCardTooltip","CardIsAppendGoalTooltip","ChoiceCardAsReplaceGoal","ReplaceCardTooltip","CardIsReplaceGoalTooltip","newQACardTooltip","newNoteCardTooltip","deleteDocumentTooltip","loadSavedDocumentTooltip","noMaterialText","loadingMaterialText","activeDocumentText","existingDataText","loadMaterialText","downloadDatasetsText","uploadDatasetsText","noteText","questionText","answerText","defaultEnterDelay","defaultEnterNextDelay","NewNoteCardTooltip","children","Tooltip","title","enterDelay","enterNextDelay","AddQAButtonTooltip","DeleteCardButtonTooltip","components","constants","PreviousButton","useDispatch","text","IconButton","onClick","NextButton","PageNavigation","Card","variant","Grid","container","direction","item","Divider","orientation","nonDigitRegEx","PageNumberTextField","useSelector","useState","error","value","toString","userInput","setState","TextField","inputProps","style","padding","fontSize","fontFamily","fontWeight","lineHeight","letterSpacing","onKeyDown","submittedValue","target","parseInt","onChange","possiblePage","trim","match","asInt","validatePageChoice","TotalPagesIndicator","Typography","PageChooser","alignItems","justify","width","PageKeyboardControl","ref","useRef","tabIndex","HTMLElementMeasurer","measure","debounce","htmlElement","document","documentElement","currentWidth","clientWidth","currentHeight","clientHeight","height","useLayoutEffect","useEffect","window","addEventListener","removeEventListener","OriginMarkedSnackbar","open","setOpen","handleDismiss","escPress","Snackbar","anchorOrigin","vertical","horizontal","onClose","reason","message","Button","color","size","pageNumberToRiverMakeUpID","riverMakeUpIDToPageNumber","riverID","replace","emptyCardRiver","cardIDs","updateStateWithMakeUps","updatedState","makeUps","forEach","makeUp","riverMakeUps","removeCardFromRivers","cardID","Object","fromEntries","entries","map","entry","filter","id","length","CARD_REPLACE","CARD_PUSH","CARD_REMOVE","FieldValueAccessorMap","note","cardObject","q","a","toFieldValue","field","FieldValueModifierMap","modify","createReplace","inputValue","_","changeCardObject","spec","inputField","inputObject","createModify","modifyFieldValue","fieldToBeChanged","objectToBeChanged","emptyQAContent","EmptyContentMap","emptyContent","noteContentIsEmpty","content","qaContentIsNotFull","UpdateTypeCreateModifyMap","APPEND","oldValue","REPLACE","updateTypeToCreateModify","updateType","strToCardContent","contentStr","outputField","existingContent","changeSpec","strToNewCardContent","empty","noteContentContainsStringOrEmpty","noteConfig","str","includes","qaContentContainsStringOrEmpty","qaConfig","cardIDToNumber","nextCardID","lastCardIDNumber","CardIsFullMap","Note","config","cardIsNotFull","strToCardConfig","baseCard","changedContent","CardFieldToTypeMap","cardFieldToType","present","getLastCardIDNumber","getCards","cards","getCardByID","cardPush","cardPayload","emptyNoteCard","emptyQACard","cardReplace","card","replaceCardFieldContent","cardField","cardConfig","newValue","removeCard","AddNoteButton","AddQAButton","DeleteCardButton","emptyQAOrigin","EmptyOriginMap","emptyOrigin","singleOriginToCardOrigin","singleOrigin","baseOrigin","removeCardFromCardsState","replaceCardsInCardsState","updateCardInCards","toBeUpdated","cardObj","addCardToCards","ARCHIVE_CURRENT_DATA","LOAD_DOCUMENT_DATA_SETS","DELETE_DOCUMENT_DATA_SET","DOCUMENT_CHANGE","archiveDBData","dbData","loadDocumentDataSets","newActiveDataSet","deleteDocumentDataSet","changeDocument","updateDocumentDataInDocumentDB","documentData","name","updateDocumentDataSetsInDocumentDB","documentDataSets","reduce","prev","removeDocumentDataFromDocumentDB","arr","initialState","documentDB","getDocumentNames","db","keys","getDocumentDataSets","values","actions","actionTypes","reducer","selectors","intialState","model","getRiverMakeUps","getNonEmptyRiverIDs","getNonEmptyRiverIDsSorted","ids","sort","b","getNonEmptyRiverMakeUpsSorted","getNonEmptyRiverCardsSorted","cardObjects","push","getActiveRiverMakeUpID","activeRiverMakeUpID","getActiveRiverMakeUp","getActiveRiverCardIDs","getActiveRiverCards","makeUpCardIDs","getRiverShowState","riverShowState","riverShowStateIsShow","getLastRiverIDNumber","lastRiverIDNumber","getRiverContentState","riverContentState","getRiverContentFilter","contentFilter","getOriginRequest","requestedOrigin","RIVER_ACTIVE_ID","RIVER_SHOW_STATE","RIVER_CONTENT_STATE","RIVER_CONTENT_FILTER","ORIGIN_REQUEST","toggleRiverShowState","setRiverContentState","setActiveRiver","trySetActiveRiver","setContentFilter","resetContentFilter","setOriginRequest","resetOriginRequest","GreenCheckbox","withStyles","root","green","checked","props","Checkbox","RiverContentFormGroup","showQAs","showNotes","changeContentState","clickedState","FormGroup","FormControlLabel","control","label","SELECTION_SOURCE","SELECTION_GOAL","getGoalConfig","goalConfig","getSourceConfig","sourceConfig","sourceConfigExists","selectionToCard","goalIsCreation","inputOrigin","contentOrigin","undefined","selectionConfigToCardPayload","existingCard","selectionConfigToActualizedCardConfig","getSelectionWorkaround","selection","getSelection","activeElement","substring","selectionStart","selectionEnd","selStr","e","getSelectionSourceFromMaterial","selectionData","selectedParentStart","anchorNode","parentNode","selectedParentEnd","focusNode","nodeName","divTextLayerParent","spanChildren","Array","from","childNodes","startIndex","indexOf","endIndex","spanIndexStart","spanIndexEnd","materialSelectionDataToSourceConfig","resetSelectionSource","resetSelectionGoal","addSelectionSource","setSelectionSource","addMaterialSelectionSource","addCardSelectionSource","getSelectionSourceFromCard","addSelectionGoal","setSelectionGoal","addCardAppendSelectionGoal","addCardReplaceSelectionGoal","SelectionSnackbar","spacing","backgroundColor","square","aria-label","MaterialMouseUp","onMouseUp","materialSelectionSourceAction","onMouseDown","button","CardFieldMouseUp","fieldOrigin","cardSelectionSourceAction","AppendButton","outlined","setOutlined","isGoal","ContextMenu","menuPosition","setMenuPosition","shouldClose","useCallback","current","querySelector","contains","contextMenuContainsTargetNode","doesSourceConfigExists","shouldOpen","left","x","top","y","openState","Menu","keepMounted","anchorReference","anchorPosition","MenuItem","ReplaceButton","services","ClayCardField","storeValue","saveChanges","rest","mutableValue","InputProps","disableUnderline","minWidth","multiline","onBlur","JumpToOriginButton","cardOrigin","ClayCardFieldButtons","permutation","originExists","Paper","QACard","elevation","InputLabelProps","NoteCard","ClayCard","GridItemDivider","qaFilter","noteFilter","filterCardConfigs","inputCards","contentFilterStr","filters","f","combineFilterArr","CardRiver","materialHeight","cardConfigs","riverMakeUp","riverCards","gridItems","increment","currentCard","index","ClayCardGridItems","Accordion","expanded","defaultExpanded","overflow","AccordionSummary","align","MozUserSelect","WebkitUserSelect","msUserSelect","AccordionDetails","SwitchActiveRiver","onMouseEnter","PageSpanControl","pageRef","count","trier","intervalID","setInterval","clearInterval","console","log","textLayer","originSpan","scrollIntoView","behavior","block","inline","makeOriginHighlighter","textItem","itemIndex","highlightOrigin","backgroundStyle","makeTextRenderer","searchText","pattern","textLength","patternLength","markedPattern","slice1","slice","result","secondIndex","slice2Start","slice2","thirdIndex","slice3Start","slice3","stringRest","splitText","split","spliter","highlightPattern","PDFPage","pageNumber","materialWidth","originHighlighter","textRenderer","searchRenderer","originRenderer","combineRenderers","inputRef","instance","MaterialMultiplier","customTextRenderer","renderAnnotationLayer","RiverPairItem","maxWidth","RiverMultiplier","river","RiverMaterialPair","data","materialHeights","showRiver","showMaterial","hidden","get","marginTop","pairTopBottomPadding","PageScrollControl","listRef","scrollToItem","RiverMaterial","Resetter","resetAfterIndex","RiverMaterialPairList","pdfProxyRef","cachedPageDimensions","set","windowWidth","pageDims","pixelPerUserSpaceUnit","calculateMaterialHeight","Map","itemCount","numPages","itemSize","itemData","onItemsRendered","visibleStopIndex","pdfjs","GlobalWorkerOptions","workerSrc","version","options","cMapUrl","cMapPacked","PDFDocument","setPageDimensions","pdfNameRef","loading","noData","file","renderMode","onLoadSuccess","pdfProxy","promises","i","getPage","Promise","all","then","pages","pageDimensions","w","h","_pageIndex","cachePageDimensions","onItemClick","ExplorerRiver","marginBottom","RiverExplorer","riverIDs","xs","Display","ViewTabs","Tabs","Tab","collectCurrentDBData","display","getLastUndoableAction","getLastRedoableAction","future","REDO_ACTION_HISTORY","UNDO_ACTION_HISTORY","REMOVE_ACTION_HISTORY","archiveCurrentDBData","fileDownload","require","downloadDBData","localString","Date","toLocaleString","JSON","stringify","undoActionHistory","redoActionHistory","removeActionHistory","ActionCreators","clearHistory","newPDFName","currentPDFName","newDocumentData","loadSavedDocument","deleteDocument","activeDocument","DeleteDocumentDialogAlert","handleClose","Dialog","aria-labelledby","aria-describedby","DialogTitle","DialogContent","DialogContentText","DialogActions","autoFocus","DeleteDocumentButton","InputDataSets","click","disableElevation","startIcon","files","reader","FileReader","readAsText","onload","uploadedDataSets","parse","foundDataSet","find","accept","InputDocument","LoadDocumentDataButton","DocumentOptionItemButtonRow","DocumentOptionItem","ActiveDocumentOptionItem","Options","documents","doc","React","anchorEl","setAnchorEl","currentTarget","Boolean","MenuListProps","paddingLeft","paddingRight","component","listStyleType","ClayMemorySearchBar","contentString","searchFocus","onCancelSearchCards","onCancelSearchDocument","onCancelSearch","onRequestSearch","placeholder","cancelOnEscape","UndoButton","lastUndoableAction","disabled","RedoButton","lastRedoableAction","UndoRedoCard","ShowRiverCheckbox","ShowMaterialCheckbox","displayShowState","ShowHideButton","ControlBar","materialName","currentBottom","getBoundingClientRect","bottom","AppBar","position","Toolbar","disableGutters","overflowX","selectionActions","riverActions","cardActions","dbActions","undoableActions","flat","undoRedoActionShield","actionList","undo","redo","selectionShield","cardsShield","riverShield","dbShield","past","concat","ReaderScene","displayTransform","createTransform","inboundState","documentRef","materialData","removeDOMObjectsFromDisplayData","outboundState","addDOMObjectsToDisplayData","whitelist","removeContentFilter","riverTransform","persistConfig","storage","transforms","rootReducer","combineReducers","undoable","includeAction","limit","persistedReducer","persistReducer","enhancer","composeWithDevTools","stateSanitizer","displayData","composeEnhancers","applyMiddleware","thunk","store","createStore","persistor","persistStore","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.840c6c37.chunk.js","sourcesContent":["import { SingleOrigin } from \"../cards/model/origin\";\n\nexport type DisplayStatus = \"SHOW\" | \"HIDE\";\n\nexport enum View {\n\tRiverMaterial,\n\tRiverExplorer,\n\tCardExplorer,\n}\n\nexport type DisplayData = {\n\tpdf?: File;\n\tpdfName?: string;\n\tdisplayStatus: DisplayStatus;\n\tcurrentPage: number;\n\tscrollToPage: number | null;\n\ttotalPages: number;\n\tspanOrigin: SingleOrigin | null;\n\twindowMeasurements: { width: number; height: number } | null;\n\ttopOffset: number;\n\tdocumentSearch: string | \"\";\n\tcurrentView: View;\n};\n\nexport type PageMove = \"PREVIOUS\" | \"NEXT\";\n\nexport const pageCorrections = {\n\tADD: (newPage: number, totalPages: number) => (newPage === totalPages + 1 ? 1 : newPage),\n\tREMOVE: (newPage: number, totalPages: number) => (newPage === 0 ? totalPages : newPage),\n};\n","export const NAME = \"displayData\";\n","import { NAME } from \"./constants\";\n\nexport const PDF_UPLOADED = NAME + \"/PDF_UPLOADED\";\nexport const MATERIAL_LOADED = NAME + \"/MATERIAL_LOADED\";\n\nexport const DISPLAY_STATUS = NAME + \"/DISPLAY_STATUS\";\n\nexport const PAGE_UPDATE = NAME + \"/PAGE_UPDATE\";\nexport const SPAN_ORIGIN = NAME + \"/SPAN_ORIGIN\";\nexport const DOCUMENT_SEARCH = NAME + \"/DOCUMENT_SEARCH\";\n\nexport const WINDOW_LAYOUT = NAME + \"/WINDOW_LAYOUT\";\nexport const TOP_OFFSET = NAME + \"/TOP_OFFSET\";\n\nexport const VIEW_CHANGE = NAME + \"/VIEW_CHANGE\";\n","import { KeyboardEvent } from \"react\";\n\nexport const incrementer = () => {\n\tlet counter = 0;\n\treturn () => {\n\t\tconst curCounter = counter;\n\t\tcounter++;\n\t\treturn curCounter;\n\t};\n};\n\nexport type KeyActionMap = { [key: string]: any };\n\ntype KeyEventDispatcher = (event: KeyboardEvent<Element>, dispatch: any, state?: any) => void;\n\nexport const keyEventDispatcherCreator = (keyMap: KeyActionMap): KeyEventDispatcher => (\n\tevent: KeyboardEvent,\n\tdispatch: any\n) => {\n\tconst action = keyMap[event.key];\n\tif (action) {\n\t\tevent.preventDefault();\n\t\tdispatch(action);\n\t}\n};\n\nexport type ClayMemoryAction = { type: string };\nexport type ClayMemoryPayloadAction = { type: string; payload: any };\n\nexport type Filter = (element: any) => boolean;\nexport const combineFilterArr = (filters: Filter[]) => (x: any) => filters.reduce((b, f) => b || f(x), false);\n","import { createSelector } from \"reselect\";\nimport { DisplayData } from \"./model\";\nimport { NAME } from \"./constants\";\n\nexport const getAll = (state: any): DisplayData => state[NAME];\n\nexport const getPDF = createSelector(getAll, (state: DisplayData) => state.pdf);\n\nexport const getWindowMeasurements = createSelector(getAll, (state) => state.windowMeasurements);\n\nexport const getPDFName = createSelector(getAll, (state) => state.pdfName);\n\nexport const getTotalPages = createSelector(getAll, (state: DisplayData) => state.totalPages);\n\nexport const getCurrentPage = createSelector(getAll, (state: DisplayData) => state.currentPage);\n\nexport const getScrollToPage = createSelector(getAll, (state) => state.scrollToPage);\n\nexport const getPageControlData = createSelector(getTotalPages, getCurrentPage, (totalPages, currentPage) => {\n\treturn { currentPage, totalPages };\n});\n\nexport const getDisplayStatus = createSelector(getAll, (state: DisplayData) => state.displayStatus);\n\nexport const displayStatusIsShow = createSelector(getDisplayStatus, (status) => status === \"SHOW\");\n\nexport const getSpanOrigin = createSelector(getAll, (state) => state.spanOrigin);\n\nexport const getDocumentSearch = createSelector(getAll, (state) => state.documentSearch);\n\nexport const getTopOffset = createSelector(getAll, (state) => state.topOffset);\n\nexport const getCurrentView = createSelector(getAll, (state) => state.currentView);\n","import { Dispatch } from \"redux\";\nimport * as t from \"./actionTypes\";\nimport { PageMove, pageCorrections, View } from \"./model\";\nimport { getPageControlData, getDisplayStatus } from \"./selectors\";\nimport { keyEventDispatcherCreator, KeyActionMap, ClayMemoryPayloadAction } from \"../../shared/utils\";\nimport { SingleOrigin } from \"../cards/model/origin\";\n\nexport const widthPixels = (windowMeasurements: { width: number; height: number }): ClayMemoryPayloadAction => {\n\treturn { type: t.WINDOW_LAYOUT, payload: windowMeasurements };\n};\n\nexport const pdfUpload = (pdf: File): ClayMemoryPayloadAction => {\n\treturn { type: t.PDF_UPLOADED, payload: pdf };\n};\n\nexport const materialLoaded = (totalPages: number): ClayMemoryPayloadAction => {\n\treturn { type: t.MATERIAL_LOADED, payload: totalPages };\n};\n\nexport const setPage = (page: number, shouldScroll: boolean): ClayMemoryPayloadAction => {\n\treturn { type: t.PAGE_UPDATE, payload: { page, shouldScroll } };\n};\n\nexport const movePage = (type: PageMove) => {\n\treturn (dispatch: Dispatch, getState: Function) => {\n\t\tconst { currentPage, totalPages } = getPageControlData(getState());\n\t\tswitch (type) {\n\t\t\tcase \"NEXT\":\n\t\t\t\tdispatch(setPage(pageCorrections[\"ADD\"](currentPage + 1, totalPages), true));\n\t\t\t\tbreak;\n\t\t\tcase \"PREVIOUS\":\n\t\t\t\tdispatch(setPage(pageCorrections[\"REMOVE\"](currentPage - 1, totalPages), true));\n\t\t\t\tbreak;\n\t\t}\n\t};\n};\nexport const nextPage = () => movePage(\"NEXT\");\nexport const previousPage = () => movePage(\"PREVIOUS\");\nconst pageControlKeyMap: KeyActionMap = {\n\tArrowLeft: previousPage(),\n\tArrowRight: nextPage(),\n};\nexport const pageControlDispatcher = keyEventDispatcherCreator(pageControlKeyMap);\n\nexport const toggleDisplayState = () => {\n\treturn (dispatch: Dispatch, getState: Function) => {\n\t\tconst displayState = getDisplayStatus(getState()) === \"SHOW\" ? \"HIDE\" : \"SHOW\";\n\n\t\tdispatch({ type: t.DISPLAY_STATUS, payload: displayState } as ClayMemoryPayloadAction);\n\t};\n};\n\nexport const setSpanOrigin = (origin: SingleOrigin | null): ClayMemoryPayloadAction => {\n\treturn { type: t.SPAN_ORIGIN, payload: origin };\n};\n\nexport const resetSpanOrigin = () => {\n\treturn setSpanOrigin(null);\n};\n\nexport const setDocumentSearch = (search: string | null): ClayMemoryPayloadAction => {\n\treturn { type: t.DOCUMENT_SEARCH, payload: search };\n};\n\nexport const resetDocumentSearch = () => {\n\treturn setDocumentSearch(\"\");\n};\n\nexport const setTopOffset = (offset: number): ClayMemoryPayloadAction => {\n\treturn { type: t.TOP_OFFSET, payload: offset };\n};\n\nexport const setView = (view: View): ClayMemoryPayloadAction => {\n\treturn { type: t.VIEW_CHANGE, payload: view };\n};\n","/// Tooltip-Text\n\nexport const switchToActiveRiverTooltip = \"Switch to the Active-River view\";\nexport const switchToSummaryRiverTooltip = \"Switch to the Summary-River view\";\n\nexport const undoTooltip = \"Undo last action\";\nexport const redoTooltip = \"Redo last action\";\n\nexport const nextPageTooltip = \"Next page\";\nexport const previousPageTooltip = \"Previous page\";\n\nexport const deleteCardTooltip = \"Delete this card\";\nexport const jumpToOriginTooltip = \"Jump to the origin of the card content\";\n\nexport const ChoiceCardAsAppendGoal = \"Mark this card field as the goal of the next selection\";\nexport const AppendToCardTooltip = \"Add the current selection to this card field\";\nexport const CardIsAppendGoalTooltip = \"The next selection will be added to this card field (click to unselect)\";\n\nexport const ChoiceCardAsReplaceGoal = \"Mark this card field to be replaced by the next selection\";\nexport const ReplaceCardTooltip = \"Replace this card field with the current selection\";\nexport const CardIsReplaceGoalTooltip = \"The next selection will replace this card field (click to unselect)\";\n\nexport const newQACardTooltip = \"Create new QA-card\";\nexport const newNoteCardTooltip = \"Create new Note-card\";\n\nexport const deleteDocumentTooltip = \"Delete this document and all its corresponding cards\";\nexport const loadSavedDocumentTooltip = \"Load the card data of this document\";\n\n/// Text\n\nexport const noMaterialText = \"No PDF file specified.\";\nexport const loadingMaterialText = \"Loading PDF…\";\n\nexport const activeDocumentText = \"Active Document:\";\nexport const existingDataText = \"Inactive documents with existing data:\";\nexport const loadMaterialText = \"Load document\";\nexport const downloadDatasetsText = \"Download document datasets\";\nexport const uploadDatasetsText = \"Upload document datasets\";\n\nexport const noteText = \"Note\";\nexport const questionText = \"Question\";\nexport const answerText = \"Answer\";\n\n/// Delay\n\nexport const defaultEnterDelay = 500;\nexport const defaultEnterNextDelay = 1000;\n","import React, { ReactElement } from \"react\";\nimport { Tooltip } from \"@material-ui/core\";\nimport { newNoteCardTooltip, defaultEnterDelay, defaultEnterNextDelay } from \"../constants\";\n\nexport const NewNoteCardTooltip = ({ children }: { children: ReactElement }) => {\n\treturn (\n\t\t<Tooltip title={newNoteCardTooltip} enterDelay={defaultEnterDelay} enterNextDelay={defaultEnterNextDelay}>\n\t\t\t{children}\n\t\t</Tooltip>\n\t);\n};\n","import React, { ReactElement } from \"react\";\nimport { Tooltip } from \"@material-ui/core\";\nimport { defaultEnterDelay, defaultEnterNextDelay, newQACardTooltip } from \"../constants\";\n\nexport const AddQAButtonTooltip = ({ children }: { children: ReactElement }) => {\n\treturn (\n\t\t<Tooltip title={newQACardTooltip} enterDelay={defaultEnterDelay} enterNextDelay={defaultEnterNextDelay}>\n\t\t\t{children}\n\t\t</Tooltip>\n\t);\n};\n","import React, { ReactElement } from \"react\";\nimport { Tooltip } from \"@material-ui/core\";\nimport { defaultEnterDelay, defaultEnterNextDelay, deleteCardTooltip } from \"../constants\";\n\nexport const DeleteCardButtonTooltip = ({ children }: { children: ReactElement }) => {\n\treturn (\n\t\t<Tooltip title={deleteCardTooltip} enterDelay={defaultEnterDelay} enterNextDelay={defaultEnterNextDelay}>\n\t\t\t{children}\n\t\t</Tooltip>\n\t);\n};\n","import * as components from \"./components\";\nimport * as constants from \"./constants\";\n\nexport default { components, constants };\n","import React from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { IconButton, Card, Grid, Divider, Tooltip } from \"@material-ui/core\";\nimport ArrowForwardIosIcon from \"@material-ui/icons/ArrowForwardIos\";\nimport ArrowBackIosIcon from \"@material-ui/icons/ArrowBackIos\";\nimport { nextPage, previousPage } from \"../actions\";\nimport text from \"../../text\";\n\nconst PreviousButton = () => {\n\tconst dispatch = useDispatch();\n\treturn (\n\t\t<Tooltip\n\t\t\ttitle={text.constants.previousPageTooltip}\n\t\t\tenterDelay={text.constants.defaultEnterDelay}\n\t\t\tenterNextDelay={text.constants.defaultEnterNextDelay}\n\t\t>\n\t\t\t<IconButton\n\t\t\t\ttype=\"button\"\n\t\t\t\tonClick={() => {\n\t\t\t\t\tdispatch(previousPage());\n\t\t\t\t}}\n\t\t\t>\n\t\t\t\t<ArrowBackIosIcon></ArrowBackIosIcon>\n\t\t\t</IconButton>\n\t\t</Tooltip>\n\t);\n};\n\nconst NextButton = () => {\n\tconst dispatch = useDispatch();\n\treturn (\n\t\t<Tooltip\n\t\t\ttitle={text.constants.nextPageTooltip}\n\t\t\tenterDelay={text.constants.defaultEnterDelay}\n\t\t\tenterNextDelay={text.constants.defaultEnterNextDelay}\n\t\t>\n\t\t\t<IconButton\n\t\t\t\ttype=\"button\"\n\t\t\t\tonClick={() => {\n\t\t\t\t\tdispatch(nextPage());\n\t\t\t\t}}\n\t\t\t>\n\t\t\t\t<ArrowForwardIosIcon></ArrowForwardIosIcon>\n\t\t\t</IconButton>\n\t\t</Tooltip>\n\t);\n};\n\nexport const PageNavigation = () => {\n\treturn (\n\t\t<Card variant=\"outlined\">\n\t\t\t<Grid container direction=\"row\">\n\t\t\t\t<Grid item>\n\t\t\t\t\t<PreviousButton></PreviousButton>\n\t\t\t\t</Grid>\n\t\t\t\t<Grid item>\n\t\t\t\t\t<Divider orientation=\"vertical\"></Divider>\n\t\t\t\t</Grid>\n\t\t\t\t<Grid item>\n\t\t\t\t\t<NextButton></NextButton>\n\t\t\t\t</Grid>\n\t\t\t</Grid>\n\t\t</Card>\n\t);\n};\n","import React, { useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Typography, TextField, Card, Grid } from \"@material-ui/core\";\nimport { setPage } from \"../../actions\";\nimport { getCurrentPage, getTotalPages } from \"../../selectors\";\n\nconst nonDigitRegEx = /(\\D)/;\n\nexport const validatePageChoice = (possiblePage: string, totalPages: number) => {\n\tif (possiblePage === \"\" || possiblePage.trim().match(nonDigitRegEx) !== null) return false;\n\n\tconst asInt = parseInt(possiblePage);\n\tif (asInt < 1 || totalPages < asInt) return false;\n\n\treturn true;\n};\n\nconst PageNumberTextField = ({ totalPages }: { totalPages: number }) => {\n\tconst dispatch = useDispatch();\n\tconst currentPage = useSelector(getCurrentPage);\n\n\tconst [state, setState] = useState({\n\t\terror: false,\n\t\tvalue: currentPage?.toString(),\n\t\tuserInput: currentPage?.toString(),\n\t});\n\n\t// with this we can trigger a re-render onChange,\n\t// while making sure that if a new currentPage arrives, we reset the component\n\tif (state.value !== currentPage.toString()) {\n\t\tsetState({ error: false, value: currentPage.toString(), userInput: currentPage.toString() });\n\t}\n\n\treturn (\n\t\t<TextField\n\t\t\tinputProps={{\n\t\t\t\tstyle: {\n\t\t\t\t\tpadding: \"0px\",\n\t\t\t\t\t//h6 Typography style\n\t\t\t\t\tfontSize: \"1.25rem\",\n\t\t\t\t\tfontFamily: '\"Roboto\", \"Helvetica\", \"Arial\", sansSerif',\n\t\t\t\t\tfontWeight: 500,\n\t\t\t\t\tlineHeight: 1.6,\n\t\t\t\t\tletterSpacing: \"0.0075em\",\n\t\t\t\t},\n\t\t\t}}\n\t\t\ttype=\"text\"\n\t\t\tvariant=\"filled\"\n\t\t\tvalue={state.userInput}\n\t\t\tonKeyDown={(event) => {\n\t\t\t\tif (event.key === \"Enter\") {\n\t\t\t\t\tevent.preventDefault();\n\t\t\t\t\tconst submittedValue = (event.target as HTMLFormElement).value;\n\t\t\t\t\tif (!state.error) {\n\t\t\t\t\t\tdispatch(setPage(parseInt(submittedValue), true));\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}}\n\t\t\tonChange={(event) => {\n\t\t\t\tconst submittedValue = (event.target as HTMLTextAreaElement).value;\n\t\t\t\tif (validatePageChoice(submittedValue, totalPages as number)) {\n\t\t\t\t\tsetState({ ...state, error: false, userInput: submittedValue });\n\t\t\t\t} else {\n\t\t\t\t\tsetState({ ...state, error: true, userInput: submittedValue });\n\t\t\t\t}\n\t\t\t}}\n\t\t\terror={state.error}\n\t\t/>\n\t);\n};\n\nconst TotalPagesIndicator = ({ totalPages }: { totalPages: number }) => (\n\t<Typography variant=\"h6\">of {totalPages}</Typography>\n);\n\nexport const PageChooser = () => {\n\tconst totalPages = useSelector(getTotalPages);\n\n\treturn (\n\t\t<Card variant=\"outlined\">\n\t\t\t<Grid item>\n\t\t\t\t<Grid container direction=\"row\" alignItems=\"center\" justify=\"space-between\">\n\t\t\t\t\t<Grid item style={{ width: \"37%\" }}>\n\t\t\t\t\t\t<PageNumberTextField totalPages={totalPages}></PageNumberTextField>\n\t\t\t\t\t</Grid>\n\n\t\t\t\t\t<Grid item style={{ width: \"61%\" }}>\n\t\t\t\t\t\t<TotalPagesIndicator totalPages={totalPages}></TotalPagesIndicator>\n\t\t\t\t\t</Grid>\n\t\t\t\t</Grid>\n\t\t\t</Grid>\n\t\t</Card>\n\t);\n};\n","import { ReactNode, KeyboardEvent, useRef, MutableRefObject } from \"react\";\nimport { pageControlDispatcher } from \"../../actions\";\nimport React from \"react\";\nimport { useDispatch } from \"react-redux\";\n\n// note to self: prefer to expose components and not implementation details (actions etc.)\n\nexport const PageKeyboardControl = ({ children }: { children: ReactNode }) => {\n\tconst dispatch = useDispatch();\n\tconst ref: MutableRefObject<null | HTMLInputElement> = useRef(null);\n\n\treturn (\n\t\t<span\n\t\t\tref={ref}\n\t\t\tonKeyDown={(event: KeyboardEvent<HTMLSpanElement>) => {\n\t\t\t\tpageControlDispatcher(event, dispatch);\n\t\t\t}}\n\t\t\ttabIndex={0}\n\t\t>\n\t\t\t{children}\n\t\t</span>\n\t);\n};\n","import { useEffect, useLayoutEffect } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { widthPixels } from \"../../actions\";\nimport { debounce } from \"throttle-debounce\";\n\nexport const HTMLElementMeasurer = () => {\n\tconst dispatch = useDispatch();\n\n\tconst measure = debounce(50, () => {\n\t\tconst htmlElement = document.documentElement;\n\t\tconst currentWidth = htmlElement.clientWidth;\n\t\tconst currentHeight = htmlElement.clientHeight;\n\t\tdispatch(widthPixels({ width: currentWidth, height: currentHeight }));\n\t});\n\n\tuseLayoutEffect(() => {\n\t\t//first measurement\n\t\tmeasure();\n\t}, [measure]);\n\n\tuseEffect(() => {\n\t\twindow.addEventListener(\"resize\", measure);\n\t\treturn () => {\n\t\t\twindow.removeEventListener(\"resize\", measure);\n\t\t};\n\t});\n\n\treturn null;\n};\n","import { Button, Snackbar } from \"@material-ui/core\";\nimport React, { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { getSpanOrigin } from \"../selectors\";\nimport { resetSpanOrigin } from \"../actions\";\n\n//TODO: think about that SelectionSnackbar and this both are dismissed via Esc\n\nexport const OriginMarkedSnackbar = () => {\n\tconst [open, setOpen] = useState(false);\n\tconst spanOrigin = useSelector(getSpanOrigin);\n\tconst dispatch = useDispatch();\n\n\tif (!!!spanOrigin && open) setOpen(false);\n\n\tif (!!spanOrigin && !open) setOpen(true);\n\n\tconst handleClose = (event: any, reason: string) => {\n\t\tif (reason === \"clickaway\") {\n\t\t\t// do not close on clickaway\n\t\t\tevent.preventDefault();\n\t\t} else {\n\t\t\tsetOpen(false);\n\t\t\tdispatch(resetSpanOrigin());\n\t\t}\n\t};\n\n\tconst handleDismiss = () => {\n\t\tsetOpen(false);\n\t\tdispatch(resetSpanOrigin());\n\t};\n\n\tconst escPress = (event: KeyboardEvent) => {\n\t\tif (open && (event.key === \"Escape\" || event.key === \"Esc\")) {\n\t\t\thandleDismiss();\n\t\t}\n\t};\n\n\tuseEffect(() => {\n\t\tdocument.addEventListener(\"keydown\", escPress);\n\t\treturn () => {\n\t\t\tdocument.removeEventListener(\"keydown\", escPress);\n\t\t};\n\t});\n\n\treturn (\n\t\t<Snackbar\n\t\t\tanchorOrigin={{\n\t\t\t\tvertical: \"bottom\",\n\t\t\t\thorizontal: \"left\",\n\t\t\t}}\n\t\t\topen={open}\n\t\t\tonClose={handleClose}\n\t\t\tmessage=\"Origin is marked\"\n\t\t\taction={\n\t\t\t\t<Button color=\"secondary\" size=\"small\" onClick={handleDismiss}>\n\t\t\t\t\tUNMARK\n\t\t\t\t</Button>\n\t\t\t}\n\t\t/>\n\t);\n};\n","export const NAME = \"cardRiverState\";\n","import { CardID } from \"../cards/model/config\";\nimport { SingleOrigin } from \"../cards/model/origin\";\n\nexport type RiverMakeUp = { riverID: string; cardIDs: CardID[] };\n\nexport type RiverMakeUps = { [riverID: string]: RiverMakeUp };\n\nexport type RiverShowState = \"SHOW\" | \"HIDE\";\n\nexport type RiverContentState = \"ALL\" | \"NOTES\" | \"QAS\" | \"NONE\";\n\nexport type ContentFilter = string;\n\nexport type CardRiverState = {\n\t// works by first setting it here via button\n\t// then we scroll to the page\n\t// then we set the origin in the display-store\n\t// then we scroll to origin\n\t// all happens in the display module\n\t// move this somehow to display?\n\t// problem is that we depend on the display components (list-ref)\n\t// for scrolling\n\trequestedOrigin: SingleOrigin | null;\n\triverMakeUps: RiverMakeUps;\n\tactiveRiverMakeUpID: string;\n\tlastRiverIDNumber: number;\n\t// show/hide river\n\triverShowState: RiverShowState;\n\t// filter content\n\triverContentState: RiverContentState;\n\tcontentFilter: ContentFilter | \"\";\n};\n\nexport const pageNumberToRiverMakeUpID = (page: number) => \"CardRiver \" + page;\n\nexport const riverMakeUpIDToPageNumber = (riverID: string) => parseInt(riverID.replace(\"CardRiver \", \"\"));\n\nexport const emptyCardRiver = (page: number): RiverMakeUp => {\n\treturn {\n\t\triverID: pageNumberToRiverMakeUpID(page),\n\t\tcardIDs: [],\n\t};\n};\n\nexport const updateStateWithMakeUps = (state: CardRiverState, ...makeUps: RiverMakeUp[]) => {\n\tconst updatedState = { ...state };\n\tmakeUps.forEach((makeUp) => {\n\t\tupdatedState.riverMakeUps[makeUp.riverID] = makeUp;\n\t});\n\treturn updatedState;\n};\n\nexport const removeCardFromRivers = (state: CardRiverState, cardID: CardID): CardRiverState => {\n\tconst riverMakeUps = Object.fromEntries(\n\t\tObject.entries(state.riverMakeUps)\n\t\t\t.map((entry) => [entry[0], { ...entry[1], cardIDs: entry[1].cardIDs.filter((id) => id !== cardID) }])\n\t\t\t.filter((entry) => (entry[1] as RiverMakeUp).cardIDs.length !== 0)\n\t);\n\treturn { ...state, riverMakeUps };\n};\n\n//TODO: make option to not show card instead of delete\n// make nice small option in river to hide / show hidden cards (default: hide)\n","export const NAME = \"cards\";\n","import { NAME } from \"./constants\";\n\nexport const CARD_REPLACE = NAME + \"/CARD_REPLACE\";\nexport const CARD_PUSH = NAME + \"/CARD_PUSH\";\nexport const CARD_REMOVE = NAME + \"/CARD_REMOVE\";\n","import { CardField, QACardField } from \"./content\";\n\n// for origin and content the same object structure is used,\n// so same permutation api should be used\n\ntype NoteObject = NonNullable<any>;\ntype QAObject = { [key in QACardField]: NonNullable<any> };\ntype CardObject = NoteObject | QAObject;\n\nconst FieldValueAccessorMap: { [field in CardField]: (cardObject: CardObject) => any } = {\n\tnote: (cardObject) => cardObject,\n\tq: (cardObject) => (cardObject as QAObject).q,\n\ta: (cardObject) => (cardObject as QAObject).a,\n};\nexport const toFieldValue = (field: CardField, cardObject: CardObject) => FieldValueAccessorMap[field](cardObject);\n\ntype Modify = (oldValue: any) => any;\nconst FieldValueModifierMap: { [key in CardField]: (cardObject: CardObject, modify: Modify) => any } = {\n\tnote: (cardObject, modify) => modify(cardObject),\n\tq: (cardObject, modify) => {\n\t\treturn { ...(cardObject as QAObject), q: modify((cardObject as QAObject).q) };\n\t},\n\ta: (cardObject, modify) => {\n\t\treturn { ...(cardObject as QAObject), a: modify((cardObject as QAObject).a) };\n\t},\n};\nconst modifyFieldValue = (field: CardField, cardObject: CardObject, modify: Modify) =>\n\tFieldValueModifierMap[field](cardObject, modify);\n\nexport type CreateModify = (inputValue: any) => Modify;\n\n// this replace is generic, I dont put append here, because that is object specific\nexport const createReplace: CreateModify = (inputValue: any) => (_: any) => inputValue;\n\nexport type CardObjectChangeSpec = {\n\tinputField: CardField;\n\tinputObject: CardObject;\n\tfieldToBeChanged: CardField;\n\tobjectToBeChanged: CardObject;\n\tcreateModify: CreateModify;\n};\nexport const changeCardObject = (spec: CardObjectChangeSpec) => {\n\tconst inputValue = toFieldValue(spec.inputField, spec.inputObject);\n\tconst modify = spec.createModify(inputValue);\n\treturn modifyFieldValue(spec.fieldToBeChanged, spec.objectToBeChanged, modify);\n};\n","import { CreateModify, changeCardObject, createReplace } from \"./permutation\";\nimport { NoteConfig, QAConfig, UpdateType } from \"./config\";\n\nexport type QACardField = \"q\" | \"a\";\nexport type CardField = \"note\" | QACardField;\n\nexport type StringCardContent = string;\nexport type NoteCardContent = StringCardContent;\nexport type QACardContent = {\n\t[field in QACardField]: StringCardContent;\n};\nexport type CardContent = NoteCardContent | QACardContent;\n\ntype EmptyContent = { q: \"\"; a: \"\" } | \"\";\nconst emptyQAContent = (): EmptyContent => {\n\treturn { q: \"\", a: \"\" };\n};\nconst EmptyContentMap: { [field in CardField]: () => EmptyContent } = {\n\tq: emptyQAContent,\n\ta: emptyQAContent,\n\tnote: () => \"\",\n};\nexport const emptyContent = (field: CardField) => {\n\treturn EmptyContentMap[field]();\n};\n\nexport const noteContentIsEmpty = (content: string) => content === \"\";\nexport const qaContentIsNotFull = (content: QACardContent) =>\n\t(content as QACardContent).q === \"\" || (content as QACardContent).a === \"\";\n\nconst createAppendStr: CreateModify = (inputValue: string) => (oldValue: string) =>\n\t(oldValue + \" \" + inputValue).trim();\nconst UpdateTypeCreateModifyMap: { [updateType in UpdateType]: CreateModify } = {\n\tAPPEND: createAppendStr,\n\tREPLACE: createReplace,\n};\nconst updateTypeToCreateModify = (updateType: UpdateType) => UpdateTypeCreateModifyMap[updateType];\n\n// noteObjects are a single value like the selectedString, so we use them as a field for convenience\nconst inputField: CardField = \"note\";\n\nexport const strToCardContent = (\n\tcontentStr: string,\n\toutputField: CardField,\n\tupdateType: UpdateType,\n\texistingContent: CardContent\n): CardContent => {\n\tconst changeSpec = {\n\t\tinputObject: contentStr,\n\t\tinputField,\n\t\tfieldToBeChanged: outputField,\n\t\tobjectToBeChanged: existingContent,\n\t\tcreateModify: updateTypeToCreateModify(updateType),\n\t};\n\treturn changeCardObject(changeSpec);\n};\n\nexport const strToNewCardContent = (contentStr: string, outputField: CardField) => {\n\t// new is always empty and we replace the input in the empty shell\n\tconst empty = emptyContent(outputField);\n\treturn strToCardContent(contentStr, outputField, \"REPLACE\", empty);\n};\n\nexport const noteContentContainsStringOrEmpty = (noteConfig: NoteConfig, str: string) =>\n\tnoteConfig.content === \"\" || noteConfig.content.includes(str);\n\nexport const qaContentContainsStringOrEmpty = (qaConfig: QAConfig, str: string) =>\n\tqaConfig.content.a === \"\" ||\n\tqaConfig.content.q === \"\" ||\n\tqaConfig.content.a.includes(str) ||\n\tqaConfig.content.q.includes(str);\n","import { NoteOrigin, QAOrigin } from \"./origin\";\nimport {\n\tNoteCardContent,\n\tQACardContent,\n\tnoteContentIsEmpty,\n\tqaContentIsNotFull,\n\tstrToCardContent,\n\tCardField,\n} from \"./content\";\n\nexport type CardID = string;\nexport const cardIDToNumber = (cardID: CardID) => parseInt(cardID);\nexport const nextCardID = (lastCardIDNumber: number) => (lastCardIDNumber + 1).toString();\n\nexport type CardType = \"Note\" | \"Q-A\";\nexport type NoteConfig = { cardID: CardID; type: CardType; content: NoteCardContent; origin?: NoteOrigin };\nexport type QAConfig = { cardID: CardID; type: CardType; content: QACardContent; origin?: QAOrigin };\nexport type CardConfig = NoteConfig | QAConfig;\n\nconst CardIsFullMap: { [card in CardType]: (config: CardConfig) => boolean } = {\n\tNote: (config) => noteContentIsEmpty(config.content as NoteCardContent),\n\t\"Q-A\": (config) => qaContentIsNotFull(config.content as QACardContent),\n};\nexport const cardIsNotFull = (config: CardConfig) => CardIsFullMap[config.type](config);\n\nexport type UpdateType = \"REPLACE\" | \"APPEND\";\n\nexport const strToCardConfig = (\n\tcontentStr: string,\n\toutputField: CardField,\n\tupdateType: UpdateType,\n\tbaseCard: CardConfig\n): CardConfig => {\n\tconst changedContent = strToCardContent(contentStr, outputField, updateType, baseCard.content);\n\treturn { ...baseCard, content: changedContent } as CardConfig;\n};\n\nconst CardFieldToTypeMap: { [field in CardField]: CardType } = {\n\tq: \"Q-A\",\n\ta: \"Q-A\",\n\tnote: \"Note\",\n};\n\nexport const cardFieldToType = (field: CardField) => CardFieldToTypeMap[field];\n","import { createSelector } from \"reselect\";\nimport { CardsState } from \"./model/state\";\nimport { NAME } from \"./constants\";\n\nexport const getAll = (state: any) => state[NAME].present;\n\nexport const getLastCardIDNumber = createSelector(getAll, (state) => state.lastCardIDNumber);\n\nexport const getCards = createSelector(getAll, (state: CardsState) => state.cards);\n\nexport const getCardByID = (state: any, cardID: string) => getCards(state)[cardID];\n","import { CardConfig, CardID, strToCardConfig } from \"./model/config\";\nimport { CardPayload, cardPayloadToCardConfig, emptyNotePayload, emptyQAPayload } from \"./model/payload\";\nimport * as t from \"./actionTypes\";\nimport { CardField } from \"./model/content\";\nimport { ClayMemoryPayloadAction } from \"../../shared/utils\";\nimport { Dispatch } from \"redux\";\n\nexport const cardPush = (cardPayload: CardPayload) => {\n\treturn (dispatch: Dispatch, getState: Function) => {\n\t\tdispatch({\n\t\t\ttype: t.CARD_PUSH,\n\t\t\tpayload: cardPayloadToCardConfig(cardPayload, getState()),\n\t\t} as ClayMemoryPayloadAction);\n\t};\n};\nexport const emptyNoteCard = () => cardPush(emptyNotePayload());\nexport const emptyQACard = () => cardPush(emptyQAPayload());\n\nexport const cardReplace = (card: CardConfig): ClayMemoryPayloadAction => {\n\treturn { type: t.CARD_REPLACE, payload: card };\n};\nexport const replaceCardFieldContent = (cardField: CardField, cardConfig: CardConfig, newValue: string) => {\n\treturn cardReplace(strToCardConfig(newValue, cardField, \"REPLACE\", cardConfig));\n};\n\nexport const removeCard = (cardID: CardID): ClayMemoryPayloadAction => {\n\treturn { type: t.CARD_REMOVE, payload: cardID };\n};\n","import { CardField, strToCardContent } from \"./content\";\nimport { getLastCardIDNumber } from \"../selectors\";\nimport { CardConfig, nextCardID, UpdateType } from \"./config\";\nimport { CardsState } from \"./state\";\n\nexport type CardPayload = Omit<CardConfig, \"cardID\">;\nexport const emptyNotePayload = (): CardPayload => {\n\treturn { type: \"Note\", content: \"\" };\n};\nexport const emptyQAPayload = (): CardPayload => {\n\treturn { type: \"Q-A\", content: { q: \"\", a: \"\" } };\n};\n\nexport const strToCardPayload = (\n\tcontentStr: string,\n\toutputField: CardField,\n\tupdateType: UpdateType,\n\tbaseCard: CardPayload\n): CardPayload => {\n\tconst changedContent = strToCardContent(contentStr, outputField, updateType, baseCard.content);\n\treturn { ...baseCard, content: changedContent };\n};\n\nconst EmptyPayloadFieldMap: {\n\t[key in CardField]: () => CardPayload;\n} = {\n\tnote: emptyNotePayload,\n\tq: emptyQAPayload,\n\ta: emptyQAPayload,\n};\nexport const cardFieldToEmptyPayload = (field: CardField) => EmptyPayloadFieldMap[field]();\n\nexport const cardPayloadToCardConfig = (payload: CardPayload, state: CardsState) => {\n\treturn { ...payload, cardID: nextCardID(getLastCardIDNumber(state)) } as CardConfig;\n};\n","import FeaturedVideoIcon from \"@material-ui/icons/FeaturedVideo\";\nimport React from \"react\";\nimport { IconButton } from \"@material-ui/core\";\nimport { useDispatch } from \"react-redux\";\nimport text from \"../../text\";\nimport { emptyNoteCard } from \"../actions\";\n\nexport const AddNoteButton = () => {\n\tconst dispatch = useDispatch();\n\treturn (\n\t\t<text.components.NewNoteCardTooltip>\n\t\t\t<IconButton\n\t\t\t\ttype=\"button\"\n\t\t\t\tonClick={() => {\n\t\t\t\t\tdispatch(emptyNoteCard());\n\t\t\t\t}}\n\t\t\t>\n\t\t\t\t<FeaturedVideoIcon></FeaturedVideoIcon>\n\t\t\t</IconButton>\n\t\t</text.components.NewNoteCardTooltip>\n\t);\n};\n","import FeaturedPlayListIcon from \"@material-ui/icons/FeaturedPlayList\";\nimport React from \"react\";\nimport { IconButton } from \"@material-ui/core\";\nimport { useDispatch } from \"react-redux\";\nimport text from \"../../text\";\nimport { emptyQACard } from \"../actions\";\n\nexport const AddQAButton = () => {\n\tconst dispatch = useDispatch();\n\treturn (\n\t\t<text.components.AddQAButtonTooltip>\n\t\t\t<IconButton\n\t\t\t\ttype=\"button\"\n\t\t\t\tonClick={() => {\n\t\t\t\t\tdispatch(emptyQACard());\n\t\t\t\t}}\n\t\t\t>\n\t\t\t\t<FeaturedPlayListIcon></FeaturedPlayListIcon>\n\t\t\t</IconButton>\n\t\t</text.components.AddQAButtonTooltip>\n\t);\n};\n","import DeleteForeverIcon from \"@material-ui/icons/DeleteForever\";\nimport React from \"react\";\nimport { IconButton } from \"@material-ui/core\";\nimport { useDispatch } from \"react-redux\";\nimport { CardID } from \"../model/config\";\nimport text from \"../../text\";\nimport { removeCard } from \"../actions\";\n\nexport const DeleteCardButton = ({ cardID }: { cardID: CardID }) => {\n\tconst dispatch = useDispatch();\n\treturn (\n\t\t<text.components.DeleteCardButtonTooltip>\n\t\t\t<IconButton\n\t\t\t\ttype=\"button\"\n\t\t\t\tonClick={() => {\n\t\t\t\t\tdispatch(removeCard(cardID));\n\t\t\t\t}}\n\t\t\t>\n\t\t\t\t<DeleteForeverIcon fontSize=\"small\"></DeleteForeverIcon>\n\t\t\t</IconButton>\n\t\t</text.components.DeleteCardButtonTooltip>\n\t);\n};\n","import { CardField } from \"./content\";\nimport { createReplace, changeCardObject } from \"./permutation\";\n\nexport type SingleOrigin = { spanIndexStart: number; spanIndexEnd: number; page: number };\nexport type QOnlyQAOrigin = { q: SingleOrigin; a: {} };\nexport type AOnlyQAOrigin = { q: {}; a: SingleOrigin };\nexport type PartialQAOrigin = QOnlyQAOrigin | AOnlyQAOrigin;\nconst emptyQAOrigin = () => {\n\treturn { q: {}, a: {} };\n};\ntype EmptyOrigin = { q: {}; a: {} } | \"\";\nconst EmptyOriginMap: { [field in CardField]: () => EmptyOrigin } = {\n\tq: emptyQAOrigin,\n\ta: emptyQAOrigin,\n\tnote: () => \"\",\n};\nexport const emptyOrigin = (field: CardField) => {\n\treturn EmptyOriginMap[field]();\n};\ntype FullQAOrigin = { q: SingleOrigin; a: SingleOrigin };\nexport type QAOrigin = FullQAOrigin | PartialQAOrigin;\nexport type NoteOrigin = SingleOrigin;\nexport type CardOrigin = NoteOrigin | QAOrigin;\n\nexport const singleOriginToCardOrigin = (\n\tsingleOrigin: SingleOrigin,\n\toutputField: CardField,\n\tbaseOrigin?: CardOrigin\n): CardOrigin => {\n\tconst changeSpec = {\n\t\tinputObject: singleOrigin,\n\t\tinputField: \"note\" as CardField,\n\t\tfieldToBeChanged: outputField,\n\t\tobjectToBeChanged: baseOrigin ? baseOrigin : emptyOrigin(outputField),\n\t\tcreateModify: createReplace,\n\t};\n\n\treturn changeCardObject(changeSpec);\n};\n","import { CardConfig, CardID } from \"./config\";\n\ntype Cards = { [cardID: string]: CardConfig };\n\nexport type CardsState = {\n\tcards: Cards;\n\tlastCardIDNumber: number;\n};\nexport const removeCardFromCardsState = (state: CardsState, cardID: CardID) => {\n\tconst cards = { ...state.cards };\n\n\t// we do not reset the ID counter\n\tdelete cards[cardID];\n\n\treturn { ...state, cards };\n};\nexport const replaceCardsInCardsState = (state: CardsState, cards: Cards, lastCardIDNumber: number) => {\n\treturn {\n\t\t...state,\n\t\tcards,\n\t\tlastCardIDNumber,\n\t};\n};\nexport const updateCardInCards = (cards: Cards, toBeUpdated: CardConfig) => {\n\tconst cardObj = { ...cards };\n\tcardObj[toBeUpdated.cardID] = toBeUpdated;\n\treturn cardObj;\n};\nexport const addCardToCards = updateCardInCards;\n","export const NAME = \"documentDB\";\n","import { NAME } from \"./constants\";\n\nexport const ARCHIVE_CURRENT_DATA = NAME + \"/ARCHIVE_CURRENT_DATA\";\nexport const LOAD_DOCUMENT_DATA_SETS = NAME + \"/LOAD_DOCUMENT_DATA_SETS\";\nexport const DELETE_DOCUMENT_DATA_SET = NAME + \"/DELETE_DOCUMENT_DATA_SET\";\n\nexport const DOCUMENT_CHANGE = NAME + \"/DOCUMENT_CHANGE\";\n","import { DocumentData } from \"./model\";\nimport * as t from \"./actionTypes\";\nimport { ClayMemoryPayloadAction } from \"../../shared/utils\";\n\nexport const archiveDBData = (dbData: DocumentData): ClayMemoryPayloadAction => {\n\treturn { type: t.ARCHIVE_CURRENT_DATA, payload: dbData };\n};\n\nexport const loadDocumentDataSets = (\n\tdbData: DocumentData[],\n\tnewActiveDataSet?: DocumentData\n): ClayMemoryPayloadAction => {\n\treturn { type: t.LOAD_DOCUMENT_DATA_SETS, payload: { dbData, newActiveDataSet } };\n};\n\nexport const deleteDocumentDataSet = (document: string): ClayMemoryPayloadAction => {\n\treturn { type: t.DELETE_DOCUMENT_DATA_SET, payload: document };\n};\n\nexport const changeDocument = (payload?: DocumentData): ClayMemoryPayloadAction => {\n\treturn { type: t.DOCUMENT_CHANGE, payload };\n};\n","import { CardRiverState } from \"../river/model\";\nimport { CardsState } from \"../cards/model/state\";\nimport { DisplayData } from \"../display/model\";\n\nexport type ArchiveRiver = Pick<CardRiverState, \"riverMakeUps\" | \"lastRiverIDNumber\">;\n\nexport type ArchiveCards = Pick<CardsState, \"cards\" | \"lastCardIDNumber\">;\n\ntype ArchiveDisplay = Pick<DisplayData, \"currentPage\" | \"totalPages\">;\n\nexport type DocumentData = {\n\tname: string;\n} & ArchiveDisplay &\n\tArchiveRiver &\n\tArchiveCards;\n\nexport type DocumentDB = { [name: string]: DocumentData };\n\nexport const updateDocumentDataInDocumentDB = (state: DocumentDB, documentData: DocumentData): DocumentDB => {\n\treturn { ...state, [documentData.name]: documentData };\n};\n\nexport const updateDocumentDataSetsInDocumentDB = (state: DocumentDB, documentDataSets: DocumentData[]): DocumentDB => {\n\treturn {\n\t\t...state,\n\t\t...documentDataSets.reduce((prev, dbData) => {\n\t\t\tprev[dbData.name] = dbData;\n\t\t\treturn prev;\n\t\t}, {} as DocumentDB),\n\t};\n};\n\nexport const removeDocumentDataFromDocumentDB = (state: DocumentDB, document: string): DocumentDB => {\n\treturn Object.fromEntries(Object.entries(state).filter((arr) => arr[0] !== document));\n};\n","import {\n\tDocumentDB,\n\tDocumentData,\n\tupdateDocumentDataInDocumentDB,\n\tupdateDocumentDataSetsInDocumentDB,\n\tremoveDocumentDataFromDocumentDB,\n} from \"./model\";\nimport * as t from \"./actionTypes\";\n\nconst initialState: DocumentDB = {};\n\n//TODO: PDF-data gets saved with name, better use some hash or something (rename of document file is likely) -> use size or last-modified or smth like that instead of name\n\nconst documentDB = (\n\tstate = initialState,\n\t{ type, payload }: { type: string; payload: DocumentData | DocumentData[] | string | { dbData: DocumentData[] } }\n): DocumentDB => {\n\tswitch (type) {\n\t\t// dont need to undo this, because if we change the active river and then change the document, the archive version gets overwritten\n\t\tcase t.ARCHIVE_CURRENT_DATA:\n\t\t\treturn updateDocumentDataInDocumentDB(state, payload as DocumentData);\n\t\tcase t.LOAD_DOCUMENT_DATA_SETS:\n\t\t\treturn updateDocumentDataSetsInDocumentDB(\n\t\t\t\tstate,\n\t\t\t\t(payload as { dbData: DocumentData[] }).dbData as DocumentData[]\n\t\t\t);\n\t\tcase t.DELETE_DOCUMENT_DATA_SET:\n\t\t\treturn removeDocumentDataFromDocumentDB(state, payload as string);\n\t\tdefault:\n\t\t\treturn state;\n\t}\n};\n\nexport default documentDB;\n","import { createSelector } from \"reselect\";\nimport { DocumentDB } from \"./model\";\nimport { NAME } from \"./constants\";\n\nexport const getAll = (state: any): DocumentDB => state[NAME].present;\n\nexport const getDocumentNames = createSelector(getAll, (db) => Object.keys(db));\n\nexport const getDocumentDataSets = createSelector(getAll, (db) => Object.values(db));\n","import * as actions from \"./actions\";\nimport * as actionTypes from \"./actionTypes\";\nimport * as constants from \"./constants\";\nimport reducer from \"./reducer\";\nimport * as selectors from \"./selectors\";\n\nexport default { actions, actionTypes, constants, reducer, selectors };\n","import * as t from \"./actionTypes\";\nimport { cardIDToNumber } from \"./model/config\";\nimport {\n\tCardsState,\n\tremoveCardFromCardsState,\n\tupdateCardInCards,\n\taddCardToCards,\n\treplaceCardsInCardsState,\n} from \"./model/state\";\nimport { ArchiveCards } from \"../db/model\";\nimport db from \"../db\";\nimport { ClayMemoryPayloadAction } from \"../../shared/utils\";\n\nconst intialState: CardsState = {\n\tcards: {},\n\tlastCardIDNumber: 0,\n};\n\nconst cards = (state = intialState, { type, payload }: ClayMemoryPayloadAction) => {\n\tswitch (type) {\n\t\tcase t.CARD_PUSH:\n\t\t\tconst lastCardIDNumber = cardIDToNumber(payload.cardID) + 1;\n\t\t\treturn { ...state, cards: addCardToCards(state.cards, payload), lastCardIDNumber };\n\t\tcase t.CARD_REPLACE:\n\t\t\treturn { ...state, cards: updateCardInCards(state.cards, payload) };\n\t\tcase t.CARD_REMOVE:\n\t\t\treturn removeCardFromCardsState(state, payload as string);\n\t\tcase db.actionTypes.DOCUMENT_CHANGE:\n\t\t\tif (payload) {\n\t\t\t\treturn replaceCardsInCardsState(\n\t\t\t\t\tintialState,\n\t\t\t\t\t(payload as ArchiveCards).cards,\n\t\t\t\t\t(payload as ArchiveCards).lastCardIDNumber\n\t\t\t\t);\n\t\t\t} else {\n\t\t\t\treturn intialState;\n\t\t\t}\n\t\tcase db.actionTypes.LOAD_DOCUMENT_DATA_SETS:\n\t\t\t// basically the same as DOCUMENT_CHANGE, just only triggered\n\t\t\t// when uploading data that corresponds to current document\n\t\t\t// and if not we dont reset\n\t\t\tif (payload.newActiveDataSet) {\n\t\t\t\treturn replaceCardsInCardsState(\n\t\t\t\t\tintialState,\n\t\t\t\t\t(payload as ArchiveCards).cards,\n\t\t\t\t\t(payload as ArchiveCards).lastCardIDNumber\n\t\t\t\t);\n\t\t\t} else {\n\t\t\t\treturn state;\n\t\t\t}\n\t\tdefault:\n\t\t\treturn state;\n\t}\n};\n\nexport default cards;\n","import * as constants from \"./constants\";\nimport * as actionTypes from \"./actionTypes\";\nimport * as actions from \"./actions\";\nimport * as selectors from \"./selectors\";\nimport * as components from \"./components\";\nimport * as model from \"./model\";\nimport reducer from \"./reducer\";\n\nexport default { constants, actionTypes, actions, reducer, selectors, components, model };\n","import { NAME } from \"./constants\";\nimport { createSelector } from \"reselect\";\nimport { CardRiverState, riverMakeUpIDToPageNumber } from \"./model\";\nimport cards from \"../cards\";\nimport { CardID } from \"../cards/model/config\";\n\nexport const getAll = (state: any): CardRiverState => state[NAME].present;\n\nexport const getRiverMakeUps = createSelector(getAll, (state: CardRiverState) => state.riverMakeUps);\n\nexport const getNonEmptyRiverIDs = createSelector(getRiverMakeUps, (makeUps) => Object.keys(makeUps));\n\nexport const getNonEmptyRiverIDsSorted = createSelector(getNonEmptyRiverIDs, (ids) =>\n\tids.sort((a, b) => riverMakeUpIDToPageNumber(a) - riverMakeUpIDToPageNumber(b))\n);\n\nexport const getNonEmptyRiverMakeUpsSorted = createSelector(getRiverMakeUps, (makeUps) =>\n\tObject.values(makeUps).sort((a, b) => riverMakeUpIDToPageNumber(a.riverID) - riverMakeUpIDToPageNumber(b.riverID))\n);\n\nexport const getNonEmptyRiverCardsSorted = createSelector(\n\tgetNonEmptyRiverMakeUpsSorted,\n\tcards.selectors.getCards,\n\t(makeUps, cards) => {\n\t\tconst cardObjects = [];\n\t\tfor (const makeUp of makeUps) {\n\t\t\tfor (const id of makeUp.cardIDs) {\n\t\t\t\tcardObjects.push(cards[id]);\n\t\t\t}\n\t\t}\n\n\t\treturn cardObjects;\n\t}\n);\n\nexport const getActiveRiverMakeUpID = createSelector(getAll, (state: CardRiverState) => state.activeRiverMakeUpID);\n\nexport const getActiveRiverMakeUp = createSelector(getRiverMakeUps, getActiveRiverMakeUpID, (makeUps, id) => {\n\tconst makeUp = makeUps[id];\n\treturn makeUp ? makeUp : { cardIDs: [] };\n});\n\nexport const getActiveRiverCardIDs = createSelector(getActiveRiverMakeUp, (makeUp): CardID[] => makeUp.cardIDs);\n\nexport const getActiveRiverCards = createSelector(\n\tgetActiveRiverCardIDs,\n\tcards.selectors.getCards,\n\t(makeUpCardIDs, cards) => makeUpCardIDs.map((id) => cards[id])\n);\n\nexport const getRiverShowState = createSelector(getAll, (state: CardRiverState) => state.riverShowState);\n\nexport const riverShowStateIsShow = createSelector(getRiverShowState, (state) => state === \"SHOW\");\n\nexport const getLastRiverIDNumber = createSelector(getAll, (state: CardRiverState) => state.lastRiverIDNumber);\n\nexport const getRiverContentState = createSelector(getAll, (state: CardRiverState) => state.riverContentState);\n\nexport const getRiverContentFilter = createSelector(getAll, (state: CardRiverState) => state.contentFilter);\n\nexport const getOriginRequest = createSelector(getAll, (state) => state.requestedOrigin);\n","import { NAME } from \"./constants\";\n\nexport const RIVER_ACTIVE_ID = NAME + \"/RIVER_ACTIVE_ID\";\n\nexport const RIVER_SHOW_STATE = NAME + \"/RIVER_SHOW_STATE\";\nexport const RIVER_CONTENT_STATE = NAME + \"/RIVER_CONTENT_STATE\";\nexport const RIVER_CONTENT_FILTER = NAME + \"/RIVER_CONTENT_FILTER\";\n\nexport const ORIGIN_REQUEST = NAME + \"/ORIGIN_REQUEST\";\n","import * as t from \"./actionTypes\";\nimport { riverShowStateIsShow, getActiveRiverMakeUpID } from \"./selectors\";\nimport { Dispatch } from \"redux\";\nimport { RiverContentState, ContentFilter } from \"./model\";\nimport { SingleOrigin } from \"../cards/model/origin\";\nimport { ClayMemoryPayloadAction } from \"../../shared/utils\";\n\nexport const toggleRiverShowState = () => (dispatch: Dispatch, getState: Function) => {\n\tdispatch({\n\t\ttype: t.RIVER_SHOW_STATE,\n\t\tpayload: riverShowStateIsShow(getState()) ? \"HIDE\" : \"SHOW\",\n\t} as ClayMemoryPayloadAction);\n};\n\nexport const setRiverContentState = (state: RiverContentState): ClayMemoryPayloadAction => {\n\treturn { type: t.RIVER_CONTENT_STATE, payload: state };\n};\n\nexport const setActiveRiver = (id: string): ClayMemoryPayloadAction => {\n\treturn { type: t.RIVER_ACTIVE_ID, payload: id };\n};\n\nexport const trySetActiveRiver = (id: string) => {\n\treturn (dispatch: Dispatch, getState: Function) => {\n\t\tif (getActiveRiverMakeUpID(getState()) !== id) dispatch(setActiveRiver(id));\n\t};\n};\n\nexport const setContentFilter = (filter: ContentFilter): ClayMemoryPayloadAction => {\n\treturn { type: t.RIVER_CONTENT_FILTER, payload: filter };\n};\n\nexport const resetContentFilter = (): ClayMemoryPayloadAction => {\n\treturn { type: t.RIVER_CONTENT_FILTER, payload: \"\" };\n};\n\nexport const setOriginRequest = (origin: SingleOrigin | null): ClayMemoryPayloadAction => {\n\treturn { type: t.ORIGIN_REQUEST, payload: origin };\n};\n\nexport const resetOriginRequest = () => {\n\treturn setOriginRequest(null);\n};\n","import { withStyles, CheckboxProps, Checkbox } from \"@material-ui/core\";\nimport React from \"react\";\nimport { green } from \"@material-ui/core/colors\";\nexport const GreenCheckbox = withStyles({\n\troot: {\n\t\tcolor: green[400],\n\t\t\"&$checked\": {\n\t\t\tcolor: green[600],\n\t\t},\n\t},\n\tchecked: {},\n})((props: CheckboxProps) => <Checkbox color=\"default\" {...props} />);\n","import { FormGroup, FormControlLabel } from \"@material-ui/core\";\nimport React from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { getRiverContentState } from \"../selectors\";\nimport { RiverContentState } from \"../model\";\nimport { setRiverContentState } from \"../actions\";\nimport { GreenCheckbox } from \"../../../shared/GreenCheckbox\";\n\nexport const RiverContentFormGroup = () => {\n\tconst riverContentState = useSelector(getRiverContentState);\n\tconst dispatch = useDispatch();\n\n\tconst showQAs = riverContentState === \"ALL\" || riverContentState === \"QAS\";\n\tconst showNotes = riverContentState === \"ALL\" || riverContentState === \"NOTES\";\n\n\tconst changeContentState = (clickedState: RiverContentState) => {\n\t\tif (!showQAs && clickedState === \"QAS\") {\n\t\t\tif (showNotes) {\n\t\t\t\tdispatch(setRiverContentState(\"ALL\"));\n\t\t\t} else {\n\t\t\t\tdispatch(setRiverContentState(\"QAS\"));\n\t\t\t}\n\t\t\treturn;\n\t\t}\n\n\t\tif (!showNotes && clickedState === \"NOTES\") {\n\t\t\tif (showQAs) {\n\t\t\t\tdispatch(setRiverContentState(\"ALL\"));\n\t\t\t} else {\n\t\t\t\tdispatch(setRiverContentState(\"NOTES\"));\n\t\t\t}\n\t\t\treturn;\n\t\t}\n\n\t\tif (showQAs && clickedState === \"QAS\") {\n\t\t\tif (!showNotes) {\n\t\t\t\tdispatch(setRiverContentState(\"NONE\"));\n\t\t\t} else {\n\t\t\t\tdispatch(setRiverContentState(\"NOTES\"));\n\t\t\t}\n\t\t\treturn;\n\t\t}\n\n\t\tif (showNotes && clickedState === \"NOTES\") {\n\t\t\tif (!showQAs) {\n\t\t\t\tdispatch(setRiverContentState(\"NONE\"));\n\t\t\t} else {\n\t\t\t\tdispatch(setRiverContentState(\"QAS\"));\n\t\t\t}\n\t\t\treturn;\n\t\t}\n\t};\n\n\treturn (\n\t\t<FormGroup>\n\t\t\t<FormControlLabel\n\t\t\t\tcontrol={\n\t\t\t\t\t<GreenCheckbox\n\t\t\t\t\t\tchecked={showQAs}\n\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\tchangeContentState(\"QAS\");\n\t\t\t\t\t\t}}\n\t\t\t\t\t/>\n\t\t\t\t}\n\t\t\t\tlabel=\"QAs\"\n\t\t\t/>\n\t\t\t<FormControlLabel\n\t\t\t\tcontrol={\n\t\t\t\t\t<GreenCheckbox\n\t\t\t\t\t\tchecked={showNotes}\n\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\tchangeContentState(\"NOTES\");\n\t\t\t\t\t\t}}\n\t\t\t\t\t/>\n\t\t\t\t}\n\t\t\t\tlabel=\"Notes\"\n\t\t\t/>\n\t\t</FormGroup>\n\t);\n};\n","export const NAME = \"selectionData\";\n","import { NAME } from \"./constants\";\nexport const SELECTION_SOURCE = NAME + \"/SELECTION_SOURCE\";\nexport const SELECTION_GOAL = NAME + \"/SELECTION_GOAL\";\n","import { NAME } from \"./constants\";\nimport { createSelector } from \"reselect\";\nimport { SelectionData } from \"./model\";\n\nexport const getAll = (state: any): SelectionData => state[NAME].present;\n\nexport const getGoalConfig = createSelector(getAll, (state) => state.goalConfig);\nexport const getSourceConfig = createSelector(getAll, (state) => state.sourceConfig);\n\nexport const sourceConfigExists = createSelector(getSourceConfig, (config) => !!config);\n","import { CardConfig } from \"../../cards/model/config\";\nimport cards from \"../../cards\";\nimport { SelectionGoalConfig, SelectionSourceConfig, goalIsCreation, SelectionExistingCardGoalConfig } from \"../model\";\nimport { CardPayload } from \"../../cards/model/payload\";\n\nconst selectionConfigToCardPayload = (sourceConfig: SelectionSourceConfig, goalConfig: SelectionGoalConfig) => {\n\tconst inputOrigin = sourceConfig.contentOrigin;\n\tconst inputValue = sourceConfig.contentStr;\n\n\tconst outputField = goalConfig.cardField;\n\n\treturn {\n\t\ttype: cards.model.config.cardFieldToType(outputField),\n\t\tcontent: cards.model.content.strToNewCardContent(inputValue, outputField),\n\t\torigin: inputOrigin ? cards.model.origin.singleOriginToCardOrigin(inputOrigin, outputField) : undefined,\n\t};\n};\n\nconst selectionConfigToActualizedCardConfig = (\n\tsourceConfig: SelectionSourceConfig,\n\tgoalConfig: SelectionExistingCardGoalConfig,\n\tstate: any\n): CardConfig => {\n\tconst existingCard = cards.selectors.getCardByID(state, goalConfig.cardID);\n\n\tconst inputOrigin = sourceConfig.contentOrigin;\n\tconst inputValue = sourceConfig.contentStr;\n\n\tconst outputField = goalConfig.cardField;\n\n\treturn {\n\t\t...existingCard,\n\t\tcontent: cards.model.content.strToCardContent(inputValue, outputField, goalConfig.updateType, existingCard.content),\n\t\torigin: inputOrigin\n\t\t\t? cards.model.origin.singleOriginToCardOrigin(inputOrigin, outputField, existingCard.origin)\n\t\t\t: existingCard.origin,\n\t} as CardConfig;\n};\n\nexport const selectionToCard = (\n\tsourceConfig: SelectionSourceConfig,\n\tgoalConfig: SelectionGoalConfig,\n\tdispatch: any,\n\tstate: any\n) => {\n\tconst isCreation = goalIsCreation(goalConfig);\n\tif (isCreation) {\n\t\tconst cardPayload: CardPayload = selectionConfigToCardPayload(sourceConfig, goalConfig);\n\t\tdispatch(cards.actions.cardPush(cardPayload));\n\t} else {\n\t\tconst cardConfig = selectionConfigToActualizedCardConfig(\n\t\t\tsourceConfig,\n\t\t\tgoalConfig as SelectionExistingCardGoalConfig,\n\t\t\tstate\n\t\t);\n\t\tdispatch(cards.actions.cardReplace(cardConfig));\n\t}\n};\n","import { SingleOrigin } from \"../cards/model/origin\";\nimport { CardField } from \"../cards/model/content\";\nimport { CardID, UpdateType } from \"../cards/model/config\";\n\nexport type SelectionSourceConfig = { contentStr: string; contentOrigin?: SingleOrigin };\n\nexport type CardFieldIdentifier = { cardID: CardID; cardField: CardField };\nexport type SelectionExistingCardGoalConfig = CardFieldIdentifier & { updateType: UpdateType };\nexport type SelectionGoalConfig = SelectionExistingCardGoalConfig | { cardField: CardField };\nexport const goalIsCreation = (goalConfig: SelectionGoalConfig) => {\n\t// each existing card has an ID\n\tconst idExists = !!(goalConfig as CardFieldIdentifier).cardID;\n\treturn !idExists;\n};\n\n// Selection is made up of two parts: selecting a source and selecting a goal\n// If both are done, then a Card needs to be created or updated\n// By clarifying this concept, I was able to reduce the selection code and make it more composable\n// See: AppendButton can be used before or after selecting a source without any extra code\n// This shows that a correct conceptualisation of the problem domain operations is the most important\n// thing in programming (note to self :))\n\nexport type SelectionData = {\n\tsourceConfig: SelectionSourceConfig | null;\n\tgoalConfig: SelectionGoalConfig | null;\n};\n","import { SelectionSourceConfig } from \"../model\";\nimport { SingleOrigin } from \"../../cards/model/origin\";\n\ntype SelectionData = { text: string; selection: Selection };\n\nexport const getSelectionWorkaround = (): SelectionData | null => {\n\tconst selection = window.getSelection();\n\n\tif (!selection) return null;\n\n\ttry {\n\t\tvar activeElement = document.activeElement;\n\t\tif (activeElement && (activeElement as HTMLInputElement).value) {\n\t\t\t// firefox bug https://bugzilla.mozilla.org/show_bug.cgi?id=85686\n\t\t\tconst str = (activeElement as HTMLInputElement).value.substring(\n\t\t\t\t(activeElement as HTMLInputElement).selectionStart as number,\n\t\t\t\t(activeElement as HTMLInputElement).selectionEnd as number\n\t\t\t);\n\n\t\t\tif (str === \"\") return null;\n\n\t\t\treturn { text: str, selection };\n\t\t} else {\n\t\t\tconst selStr = selection.toString();\n\n\t\t\tif (selStr === \"\") return null;\n\n\t\t\treturn { text: selStr, selection };\n\t\t}\n\t} catch (e) {\n\t\treturn null;\n\t}\n};\n\nconst materialSelectionDataToSourceConfig = (\n\tselectionData: SelectionData,\n\tpage: number\n): SelectionSourceConfig | false => {\n\t//TODO: think about race-conditions for the delayed rendering, this might mess up the index\n\t//TODO: this also depends on the rendering order of the spans to be the same, might not be a good idea\n\t//TODO: maybe can do this async if it gets more complex?\n\n\tconst selection = selectionData.selection;\n\tlet selectedParentStart = selection.anchorNode?.parentNode as Node | null;\n\tlet selectedParentEnd = selection.focusNode?.parentNode as Node | null;\n\n\tif (!selectedParentStart || !selectedParentEnd) {\n\t\treturn false;\n\t}\n\n\tif (selectedParentStart.nodeName === \"MARK\") {\n\t\tselectedParentStart = selectedParentStart.parentNode;\n\t\tif (!selectedParentStart) return false;\n\t}\n\n\tif (selectedParentEnd.nodeName === \"MARK\") {\n\t\tselectedParentEnd = selectedParentEnd.parentNode;\n\t\tif (!selectedParentEnd) return false;\n\t}\n\n\tif (selectedParentStart.nodeName !== \"SPAN\" || selectedParentEnd.nodeName !== \"SPAN\") return false;\n\n\tconst divTextLayerParent = selectedParentStart.parentNode;\n\tif (!!!divTextLayerParent || divTextLayerParent.nodeName !== \"DIV\") return false;\n\n\tconst spanChildren = Array.from(divTextLayerParent.childNodes) as Node[];\n\tif (spanChildren.length === 0) return false;\n\n\tconst startIndex = spanChildren.indexOf(selectedParentStart);\n\tconst endIndex = spanChildren.indexOf(selectedParentEnd);\n\tif (startIndex === -1 || endIndex === -1) return false;\n\n\treturn {\n\t\tcontentStr: selectionData.text,\n\t\tcontentOrigin: { spanIndexStart: startIndex, spanIndexEnd: endIndex, page },\n\t};\n};\n\nexport const getSelectionSourceFromMaterial = (page: number): SelectionSourceConfig | false => {\n\tconst selectionData = getSelectionWorkaround();\n\tif (!selectionData) return false;\n\n\treturn materialSelectionDataToSourceConfig(selectionData, page);\n};\n\nexport const getSelectionSourceFromCard = (contentOrigin?: SingleOrigin): SelectionSourceConfig | false => {\n\tconst selectionData = getSelectionWorkaround();\n\tif (!selectionData) return false;\n\n\treturn { contentStr: selectionData.text, contentOrigin };\n};\n","import * as t from \"./actionTypes\";\nimport { SingleOrigin } from \"../cards/model/origin\";\nimport { SelectionSourceConfig, SelectionGoalConfig, SelectionExistingCardGoalConfig } from \"./model\";\nimport { Dispatch } from \"redux\";\nimport { getGoalConfig, getSourceConfig } from \"./selectors\";\nimport { selectionToCard } from \"./services/use-selection\";\nimport { getSelectionSourceFromMaterial, getSelectionSourceFromCard } from \"./services/get-selection\";\nimport { CardID } from \"../cards/model/config\";\nimport { CardField } from \"../cards/model/content\";\nimport { ClayMemoryPayloadAction } from \"../../shared/utils\";\n\nconst setSelectionSource = (config: SelectionSourceConfig): ClayMemoryPayloadAction => {\n\treturn { type: t.SELECTION_SOURCE, payload: config };\n};\nexport const resetSelectionSource = (): ClayMemoryPayloadAction => {\n\treturn { type: t.SELECTION_SOURCE, payload: null };\n};\nconst setSelectionGoal = (config: SelectionGoalConfig): ClayMemoryPayloadAction => {\n\treturn { type: t.SELECTION_GOAL, payload: config };\n};\nexport const resetSelectionGoal = (): ClayMemoryPayloadAction => {\n\treturn { type: t.SELECTION_GOAL, payload: null };\n};\n\n// we want to support either direction, first adding Goal or first adding Source\nexport const addSelectionSource = (config: SelectionSourceConfig) => {\n\treturn (dispatch: Dispatch, getState: Function) => {\n\t\tconst state = getState();\n\t\tconst goalConfig = getGoalConfig(state);\n\t\tif (!goalConfig) {\n\t\t\tdispatch(setSelectionSource(config));\n\t\t\treturn;\n\t\t}\n\t\tselectionToCard(config, goalConfig as SelectionGoalConfig, dispatch, state);\n\t\tdispatch(resetSelectionGoal());\n\t};\n};\n\nexport const addMaterialSelectionSource = (page: number) => {\n\tconst sourceConfig = getSelectionSourceFromMaterial(page);\n\tif (sourceConfig) {\n\t\treturn addSelectionSource(sourceConfig);\n\t}\n\treturn false;\n};\n\nexport const addCardSelectionSource = (contentOrigin?: SingleOrigin) => {\n\tconst sourceConfig = getSelectionSourceFromCard(contentOrigin);\n\tif (sourceConfig) {\n\t\treturn addSelectionSource(sourceConfig);\n\t}\n\treturn false;\n};\n\nexport const addSelectionGoal = (config: SelectionGoalConfig) => {\n\treturn (dispatch: Dispatch, getState: Function) => {\n\t\tconst state = getState();\n\t\tconst sourceConfig = getSourceConfig(state);\n\t\tif (!sourceConfig) {\n\t\t\tdispatch(setSelectionGoal(config));\n\t\t\treturn;\n\t\t}\n\t\tselectionToCard(sourceConfig as SelectionSourceConfig, config, dispatch, state);\n\t\tdispatch(resetSelectionSource());\n\t};\n};\n\nexport const addCardAppendSelectionGoal = (cardID: CardID, cardField: CardField) => {\n\tconst config: SelectionExistingCardGoalConfig = { cardID, cardField, updateType: \"APPEND\" };\n\treturn addSelectionGoal(config);\n};\n\nexport const addCardReplaceSelectionGoal = (cardID: CardID, cardField: CardField) => {\n\tconst config: SelectionExistingCardGoalConfig = { cardID, cardField, updateType: \"REPLACE\" };\n\treturn addSelectionGoal(config);\n};\n","import { ClayMemoryPayloadAction } from \"../../shared/utils\";\nimport * as t from \"./actionTypes\";\nimport { SelectionData } from \"./model\";\n\nconst initialState: SelectionData = {\n\tsourceConfig: null,\n\tgoalConfig: null,\n};\n\nconst selectionData = (state = initialState, { type, payload }: ClayMemoryPayloadAction): SelectionData => {\n\tswitch (type) {\n\t\tcase t.SELECTION_SOURCE:\n\t\t\treturn { ...state, sourceConfig: payload };\n\t\tcase t.SELECTION_GOAL:\n\t\t\treturn { ...state, goalConfig: payload };\n\t\tdefault:\n\t\t\treturn state;\n\t}\n};\n\nexport default selectionData;\n","import React, { useState, useEffect } from \"react\";\nimport { Snackbar, IconButton, Typography, Card, Grid, Divider } from \"@material-ui/core\";\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { resetSelectionSource } from \"../actions\";\nimport { getSourceConfig } from \"../selectors\";\n\nexport const SelectionSnackbar = () => {\n\tconst [open, setOpen] = useState(false);\n\tconst dispatch = useDispatch();\n\tconst sourceConfig = useSelector(getSourceConfig);\n\n\tif (!!!sourceConfig && open) setOpen(false);\n\n\tif (!!sourceConfig && !open) setOpen(true);\n\n\tconst handleClose = (event: any, reason: string) => {\n\t\tif (reason === \"clickaway\") {\n\t\t\t// do not close on clickaway\n\t\t\tevent.preventDefault();\n\t\t} else {\n\t\t\tsetOpen(false);\n\t\t\tdispatch(resetSelectionSource());\n\t\t}\n\t};\n\n\tconst handleDismiss = () => {\n\t\tsetOpen(false);\n\t\tdispatch(resetSelectionSource());\n\t};\n\n\tconst escPress = (event: KeyboardEvent) => {\n\t\tif (open && (event.key === \"Escape\" || event.key === \"Esc\")) {\n\t\t\thandleDismiss();\n\t\t}\n\t};\n\n\tuseEffect(() => {\n\t\tdocument.addEventListener(\"keydown\", escPress);\n\t\treturn () => {\n\t\t\tdocument.removeEventListener(\"keydown\", escPress);\n\t\t};\n\t});\n\n\treturn (\n\t\t<Snackbar\n\t\t\tanchorOrigin={{ vertical: \"top\", horizontal: \"center\" }}\n\t\t\topen={open}\n\t\t\tonClose={handleClose}\n\t\t\tmessage={\n\t\t\t\t<Grid container direction=\"row\" spacing={1}>\n\t\t\t\t\t<Grid item>\n\t\t\t\t\t\t<Card\n\t\t\t\t\t\t\tvariant=\"outlined\"\n\t\t\t\t\t\t\tcolor=\"secondary\"\n\t\t\t\t\t\t\tstyle={{ padding: \"4px\", color: \"white\", backgroundColor: \"#3f51b5\" }}\n\t\t\t\t\t\t\tsquare={true}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<Typography variant=\"h4\">{\"Selection:\"}</Typography>\n\t\t\t\t\t\t</Card>\n\n\t\t\t\t\t\t<Card variant=\"outlined\" style={{ padding: \"4px\", color: \"black\", backgroundColor: \"white\" }} square={true}>\n\t\t\t\t\t\t\t<Typography variant=\"body1\">{sourceConfig?.contentStr}</Typography>\n\t\t\t\t\t\t</Card>\n\t\t\t\t\t</Grid>\n\n\t\t\t\t\t{sourceConfig?.contentOrigin && (\n\t\t\t\t\t\t<Grid item>\n\t\t\t\t\t\t\t<Card\n\t\t\t\t\t\t\t\tvariant=\"outlined\"\n\t\t\t\t\t\t\t\tcolor=\"secondary\"\n\t\t\t\t\t\t\t\tstyle={{ padding: \"4px\", color: \"black\", backgroundColor: \"white\" }}\n\t\t\t\t\t\t\t\tsquare={true}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<Typography variant=\"h4\">{\"Origin:\"}</Typography>\n\t\t\t\t\t\t\t</Card>\n\n\t\t\t\t\t\t\t<Card\n\t\t\t\t\t\t\t\tvariant=\"outlined\"\n\t\t\t\t\t\t\t\tstyle={{ padding: \"4px\", color: \"white\", backgroundColor: \"#3f51b5\" }}\n\t\t\t\t\t\t\t\tsquare={true}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<Typography variant=\"body1\">Page {sourceConfig.contentOrigin.page}</Typography>\n\t\t\t\t\t\t\t</Card>\n\t\t\t\t\t\t</Grid>\n\t\t\t\t\t)}\n\t\t\t\t</Grid>\n\t\t\t}\n\t\t\taction={\n\t\t\t\t<IconButton size=\"small\" aria-label=\"close\" color=\"inherit\" onClick={handleDismiss}>\n\t\t\t\t\t<CloseIcon fontSize=\"small\" />\n\t\t\t\t</IconButton>\n\t\t\t}\n\t\t/>\n\t);\n};\n","import React, { ReactNode } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { addMaterialSelectionSource } from \"../actions\";\n\n// should only be used once material/pdf exists\nexport const MaterialMouseUp = ({ children, page }: { children: ReactNode; page: number }) => {\n\tconst dispatch = useDispatch();\n\n\treturn (\n\t\t<span\n\t\t\tonMouseUp={() => {\n\t\t\t\tconst materialSelectionSourceAction = addMaterialSelectionSource(page);\n\t\t\t\tif (materialSelectionSourceAction) dispatch(materialSelectionSourceAction);\n\t\t\t}}\n\t\t\tonMouseDown={(event: React.MouseEvent<any>) => {\n\t\t\t\t// without this it is possible so have something selected\n\t\t\t\t// close the selection-snackbar\n\t\t\t\t// it stays selected (only on click inside text it woud de-select)\n\t\t\t\t// then press the mouse and\n\t\t\t\t// the selection-snackbar pops back up\n\t\t\t\t// even though it is not a new selection just the old one\n\t\t\t\tif (event.button === 0) window.getSelection()?.empty();\n\t\t\t}}\n\t\t>\n\t\t\t{children}\n\t\t</span>\n\t);\n};\n","import React, { ReactNode } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { addCardSelectionSource } from \"../actions\";\nimport { SingleOrigin } from \"../../cards/model/origin\";\n\nexport const CardFieldMouseUp = ({ children, fieldOrigin }: { children: ReactNode; fieldOrigin?: SingleOrigin }) => {\n\tconst dispatch = useDispatch();\n\n\treturn (\n\t\t<span\n\t\t\tonMouseUp={() => {\n\t\t\t\tconst cardSelectionSourceAction = addCardSelectionSource(fieldOrigin);\n\t\t\t\tif (cardSelectionSourceAction) dispatch(cardSelectionSourceAction);\n\t\t\t}}\n\t\t>\n\t\t\t{children}\n\t\t</span>\n\t);\n};\n","import AddCircleOutlineIcon from \"@material-ui/icons/AddCircleOutline\";\nimport AddCircleOutlinedIcon from \"@material-ui/icons/AddCircleOutlined\";\nimport React, { useState } from \"react\";\nimport { IconButton, Tooltip } from \"@material-ui/core\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport text from \"../../text\";\nimport { getGoalConfig, getSourceConfig } from \"../selectors\";\nimport { addCardAppendSelectionGoal, resetSelectionGoal } from \"../actions\";\nimport { SelectionExistingCardGoalConfig, CardFieldIdentifier } from \"../model\";\nimport { CardField } from \"../../cards/model/content\";\n\nexport const AppendButton = ({ cardField, cardID }: { cardField: CardField; cardID: string }) => {\n\tconst dispatch = useDispatch();\n\n\tconst sourceConfig = useSelector(getSourceConfig);\n\tconst goalConfig = useSelector(getGoalConfig);\n\t// outlined means this is the goal\n\tconst [outlined, setOutlined] = useState(false);\n\n\tconst isGoal =\n\t\t!!goalConfig &&\n\t\t!!(goalConfig as CardFieldIdentifier).cardID &&\n\t\t(goalConfig as CardFieldIdentifier).cardID === cardID &&\n\t\tgoalConfig.cardField === cardField &&\n\t\t(goalConfig as SelectionExistingCardGoalConfig).updateType === \"APPEND\";\n\n\tif (isGoal) {\n\t\tif (!outlined) setOutlined(true);\n\t} else {\n\t\tif (outlined) setOutlined(false);\n\t}\n\t//TODO: test all variations of origin  (setting/copying) again (how to automate the test?)\n\n\treturn (\n\t\t<Tooltip\n\t\t\ttitle={\n\t\t\t\tisGoal\n\t\t\t\t\t? text.constants.CardIsAppendGoalTooltip\n\t\t\t\t\t: !!sourceConfig\n\t\t\t\t\t? text.constants.AppendToCardTooltip\n\t\t\t\t\t: text.constants.ChoiceCardAsAppendGoal\n\t\t\t}\n\t\t\tenterDelay={text.constants.defaultEnterDelay}\n\t\t\tenterNextDelay={text.constants.defaultEnterNextDelay}\n\t\t>\n\t\t\t<IconButton\n\t\t\t\ttype=\"button\"\n\t\t\t\tonClick={() => {\n\t\t\t\t\tif (!outlined && !!!goalConfig) {\n\t\t\t\t\t\tdispatch(addCardAppendSelectionGoal(cardID, cardField));\n\t\t\t\t\t} else if (isGoal) {\n\t\t\t\t\t\tdispatch(resetSelectionGoal());\n\t\t\t\t\t}\n\t\t\t\t}}\n\t\t\t>\n\t\t\t\t{outlined ? (\n\t\t\t\t\t<AddCircleOutlinedIcon fontSize=\"small\"></AddCircleOutlinedIcon>\n\t\t\t\t) : (\n\t\t\t\t\t<AddCircleOutlineIcon fontSize=\"small\"></AddCircleOutlineIcon>\n\t\t\t\t)}\n\t\t\t</IconButton>\n\t\t</Tooltip>\n\t);\n};\n","import React, { RefObject, useCallback, useEffect, useRef, useState } from \"react\";\nimport Menu from \"@material-ui/core/Menu\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Divider, MenuItem } from \"@material-ui/core\";\nimport { addSelectionGoal } from \"../actions\";\nimport { sourceConfigExists } from \"../selectors\";\n\n// the root div for the menu invisibly covers the whole screen\n// the actual div that is visible is this\nconst baseContextMenuSelector = \"div.MuiPaper-root\";\nconst contextMenuContainsTargetNode = (ref: RefObject<null | HTMLDivElement>, event: MouseEvent) => {\n\tconst target = event.target as Node;\n\tif (ref.current?.querySelector(baseContextMenuSelector)?.contains(target)) return true;\n\treturn false;\n};\n\nexport const ContextMenu = () => {\n\tconst [menuPosition, setMenuPosition] = useState<undefined | { top: number; left: number }>(undefined);\n\tconst ref = useRef(null);\n\n\tconst shouldClose = useCallback(\n\t\t(event: MouseEvent) => {\n\t\t\tconst clickOutSideOfMenu = !contextMenuContainsTargetNode(ref, event);\n\t\t\tif (clickOutSideOfMenu) {\n\t\t\t\tsetMenuPosition(undefined);\n\t\t\t}\n\t\t},\n\t\t[ref, setMenuPosition]\n\t);\n\tuseEffect(() => {\n\t\tdocument.addEventListener(\"mousedown\", shouldClose);\n\t\treturn () => {\n\t\t\tdocument.removeEventListener(\"mousedown\", shouldClose);\n\t\t};\n\t}, [shouldClose]);\n\n\tconst doesSourceConfigExists = useSelector(sourceConfigExists);\n\tconst shouldOpen = useCallback(\n\t\t(event: MouseEvent) => {\n\t\t\tif (!doesSourceConfigExists) return;\n\n\t\t\tevent.preventDefault();\n\n\t\t\tsetMenuPosition({ left: event.x, top: event.y });\n\t\t},\n\t\t[doesSourceConfigExists, setMenuPosition]\n\t);\n\tuseEffect(() => {\n\t\tdocument.addEventListener(\"contextmenu\", shouldOpen);\n\t\treturn () => {\n\t\t\tdocument.removeEventListener(\"contextmenu\", shouldOpen);\n\t\t};\n\t}, [shouldOpen]);\n\n\tconst openState = !!menuPosition;\n\n\tconst dispatch = useDispatch();\n\n\treturn (\n\t\t<Menu ref={ref} keepMounted open={openState} anchorReference=\"anchorPosition\" anchorPosition={menuPosition}>\n\t\t\t<MenuItem\n\t\t\t\tonClick={() => {\n\t\t\t\t\tdispatch(addSelectionGoal({ cardField: \"note\", updateType: \"REPLACE\" }));\n\t\t\t\t\tsetMenuPosition(undefined);\n\t\t\t\t}}\n\t\t\t>\n\t\t\t\tNew: Note\n\t\t\t</MenuItem>\n\n\t\t\t<Divider></Divider>\n\t\t\t<MenuItem\n\t\t\t\tonClick={() => {\n\t\t\t\t\tdispatch(addSelectionGoal({ cardField: \"q\", updateType: \"REPLACE\" }));\n\t\t\t\t\tsetMenuPosition(undefined);\n\t\t\t\t}}\n\t\t\t>\n\t\t\t\tNew: Q (Q-A)\n\t\t\t</MenuItem>\n\t\t\t<MenuItem\n\t\t\t\tonClick={() => {\n\t\t\t\t\tdispatch(addSelectionGoal({ cardField: \"a\", updateType: \"REPLACE\" }));\n\t\t\t\t\tsetMenuPosition(undefined);\n\t\t\t\t}}\n\t\t\t>\n\t\t\t\tNew: A (Q-A)\n\t\t\t</MenuItem>\n\t\t</Menu>\n\t);\n};\n\n//TODO: delete extracted str in source\n","import RestorePageIcon from \"@material-ui/icons/RestorePage\";\nimport RestorePageOutlinedIcon from \"@material-ui/icons/RestorePageOutlined\";\nimport React, { useState } from \"react\";\nimport { IconButton, Tooltip } from \"@material-ui/core\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport text from \"../../text\";\nimport { getGoalConfig, getSourceConfig } from \"../selectors\";\nimport { addCardReplaceSelectionGoal, resetSelectionGoal } from \"../actions\";\nimport { SelectionExistingCardGoalConfig, CardFieldIdentifier } from \"../model\";\nimport { CardField } from \"../../cards/model/content\";\n\nexport const ReplaceButton = ({ cardField, cardID }: { cardField: CardField; cardID: string }) => {\n\tconst dispatch = useDispatch();\n\n\tconst sourceConfig = useSelector(getSourceConfig);\n\tconst goalConfig = useSelector(getGoalConfig);\n\t// outlined means this is the goal\n\tconst [outlined, setOutlined] = useState(false);\n\n\tconst isGoal =\n\t\t!!goalConfig &&\n\t\t!!(goalConfig as CardFieldIdentifier).cardID &&\n\t\t(goalConfig as CardFieldIdentifier).cardID === cardID &&\n\t\tgoalConfig.cardField === cardField &&\n\t\t(goalConfig as SelectionExistingCardGoalConfig).updateType === \"REPLACE\";\n\n\tif (isGoal) {\n\t\tif (!outlined) setOutlined(true);\n\t} else {\n\t\tif (outlined) setOutlined(false);\n\t}\n\n\treturn (\n\t\t<Tooltip\n\t\t\ttitle={\n\t\t\t\tisGoal\n\t\t\t\t\t? text.constants.CardIsReplaceGoalTooltip\n\t\t\t\t\t: !!sourceConfig\n\t\t\t\t\t? text.constants.ReplaceCardTooltip\n\t\t\t\t\t: text.constants.ChoiceCardAsReplaceGoal\n\t\t\t}\n\t\t\tenterDelay={text.constants.defaultEnterDelay}\n\t\t\tenterNextDelay={text.constants.defaultEnterNextDelay}\n\t\t>\n\t\t\t<IconButton\n\t\t\t\ttype=\"button\"\n\t\t\t\tonClick={() => {\n\t\t\t\t\tif (!outlined && !!!goalConfig) {\n\t\t\t\t\t\tdispatch(addCardReplaceSelectionGoal(cardID, cardField));\n\t\t\t\t\t} else if (isGoal) {\n\t\t\t\t\t\tdispatch(resetSelectionGoal());\n\t\t\t\t\t}\n\t\t\t\t}}\n\t\t\t>\n\t\t\t\t{outlined ? (\n\t\t\t\t\t<RestorePageIcon fontSize=\"small\"></RestorePageIcon>\n\t\t\t\t) : (\n\t\t\t\t\t<RestorePageOutlinedIcon fontSize=\"small\"></RestorePageOutlinedIcon>\n\t\t\t\t)}\n\t\t\t</IconButton>\n\t\t</Tooltip>\n\t);\n};\n","import * as actions from \"./actions\";\nimport * as constants from \"./constants\";\nimport * as actionTypes from \"./actionTypes\";\nimport reducer from \"./reducer\";\nimport * as selectors from \"./selectors\";\nimport * as components from \"./components\";\nimport * as services from \"./services\";\n\nexport default { actions, actionTypes, constants, components, reducer, selectors, services };\n","import React, { useState } from \"react\";\nimport { TextField, TextFieldProps } from \"@material-ui/core\";\nimport selection from \"../../../../selection\";\nimport { SingleOrigin } from \"../../../../cards/model/origin\";\n\nexport const ClayCardField = ({\n\tstoreValue = \"\",\n\tsaveChanges,\n\tfieldOrigin,\n\tstyle,\n\t...rest\n}: {\n\tstoreValue?: string;\n\t// {} is an empty field of the QA-origin\n\tfieldOrigin?: SingleOrigin | {};\n\tsaveChanges: (value: string) => void;\n\tstyle: any;\n} & TextFieldProps) => {\n\tconst [state, setState] = useState({ storeValue, mutableValue: storeValue });\n\n\t// reset if new storeValue, otherwise keep user-mutated value\n\tif (state.storeValue !== storeValue) {\n\t\tsetState({ storeValue, mutableValue: storeValue });\n\t}\n\n\t// need the onChange-pattern, because we want to be able to pre-fill the field from the store\n\treturn (\n\t\t<selection.components.CardFieldMouseUp\n\t\t\tfieldOrigin={\n\t\t\t\tfieldOrigin && (fieldOrigin as SingleOrigin).spanIndexStart !== undefined\n\t\t\t\t\t? (fieldOrigin as SingleOrigin)\n\t\t\t\t\t: undefined\n\t\t\t}\n\t\t>\n\t\t\t<TextField\n\t\t\t\tInputProps={{ disableUnderline: true, style: { minWidth: \"400px\" } }}\n\t\t\t\tmultiline\n\t\t\t\tvariant=\"filled\"\n\t\t\t\tvalue={state.mutableValue}\n\t\t\t\tonChange={(event) => {\n\t\t\t\t\tconst submittedValue = (event.target as HTMLTextAreaElement).value;\n\t\t\t\t\tsetState({ ...state, mutableValue: submittedValue });\n\t\t\t\t}}\n\t\t\t\tonBlur={(event: any) => {\n\t\t\t\t\tsaveChanges(event.target.value);\n\t\t\t\t}}\n\t\t\t\tstyle={style}\n\t\t\t\t{...rest}\n\t\t\t></TextField>\n\t\t</selection.components.CardFieldMouseUp>\n\t);\n};\n","import FindInPageIcon from \"@material-ui/icons/FindInPage\";\nimport React from \"react\";\nimport { IconButton, Tooltip } from \"@material-ui/core\";\nimport { useDispatch } from \"react-redux\";\nimport { SingleOrigin } from \"../../../../cards/model/origin\";\nimport text from \"../../../../text\";\nimport { setOriginRequest } from \"../../../actions\";\n\nexport const JumpToOriginButton = ({ cardOrigin }: { cardOrigin: SingleOrigin }) => {\n\tconst dispatch = useDispatch();\n\treturn (\n\t\t<Tooltip\n\t\t\ttitle={text.constants.jumpToOriginTooltip}\n\t\t\tenterDelay={text.constants.defaultEnterDelay}\n\t\t\tenterNextDelay={text.constants.defaultEnterNextDelay}\n\t\t>\n\t\t\t<IconButton\n\t\t\t\ttype=\"button\"\n\t\t\t\tonClick={() => {\n\t\t\t\t\tdispatch(setOriginRequest(cardOrigin));\n\t\t\t\t}}\n\t\t\t>\n\t\t\t\t<FindInPageIcon fontSize=\"small\"></FindInPageIcon>\n\t\t\t</IconButton>\n\t\t</Tooltip>\n\t);\n};\n","import React from \"react\";\nimport cards from \"../../../../cards\";\nimport { JumpToOriginButton } from \"./JumpToOriginButton\";\nimport { Paper, Grid } from \"@material-ui/core\";\nimport { CardConfig } from \"../../../../cards/model/config\";\nimport { CardField } from \"../../../../cards/model/content\";\nimport selection from \"../../../../selection\";\nimport { SingleOrigin } from \"../../../../cards/model/origin\";\n\nexport const ClayCardFieldButtons = ({ config, cardField }: { config: CardConfig; cardField: CardField }) => {\n\tconst origin: SingleOrigin | null = config.origin\n\t\t? cards.model.permutation.toFieldValue(cardField, config.origin)\n\t\t: null;\n\tconst originExists = origin?.page !== undefined;\n\treturn (\n\t\t<Paper variant=\"outlined\">\n\t\t\t<Grid container direction=\"row\">\n\t\t\t\t<Grid item>\n\t\t\t\t\t<selection.components.AppendButton\n\t\t\t\t\t\tcardID={config.cardID}\n\t\t\t\t\t\tcardField={cardField}\n\t\t\t\t\t></selection.components.AppendButton>\n\t\t\t\t</Grid>\n\n\t\t\t\t<Grid item>\n\t\t\t\t\t<selection.components.ReplaceButton\n\t\t\t\t\t\tcardID={config.cardID}\n\t\t\t\t\t\tcardField={cardField}\n\t\t\t\t\t></selection.components.ReplaceButton>\n\t\t\t\t</Grid>\n\n\t\t\t\t<Grid item>\n\t\t\t\t\t{originExists && <JumpToOriginButton cardOrigin={origin as SingleOrigin}></JumpToOriginButton>}\n\t\t\t\t</Grid>\n\t\t\t</Grid>\n\t\t</Paper>\n\t);\n};\n","import Grid from \"@material-ui/core/Grid\";\nimport React from \"react\";\nimport { ClayCardField } from \"./ClayCardField\";\nimport { QACardContent } from \"../../../../cards/model/content\";\nimport { useDispatch } from \"react-redux\";\nimport cards from \"../../../../cards\";\nimport { Card } from \"@material-ui/core\";\nimport text from \"../../../../text\";\nimport { ClayCardFieldButtons } from \"./ClayCardFieldButtons\";\nimport { QAConfig } from \"../../../../cards/model/config\";\n\n//TODO: use dark color pallet (theme?)\n\nexport const QACard = ({ config }: { config: QAConfig }) => {\n\tconst dispatch = useDispatch();\n\n\treturn (\n\t\t<Card variant=\"elevation\" elevation={5} style={{ padding: \"3px\" }}>\n\t\t\t<Grid container direction=\"row\" justify=\"space-between\">\n\t\t\t\t<Grid item>\n\t\t\t\t\t<Grid container direction=\"column\" spacing={1}>\n\t\t\t\t\t\t<Grid item>\n\t\t\t\t\t\t\t<Grid container direction=\"row\" spacing={1}>\n\t\t\t\t\t\t\t\t<Grid item>\n\t\t\t\t\t\t\t\t\t<ClayCardField\n\t\t\t\t\t\t\t\t\t\tsaveChanges={(value) => {\n\t\t\t\t\t\t\t\t\t\t\tdispatch(cards.actions.replaceCardFieldContent(\"q\", config, value));\n\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\tstoreValue={(config.content as QACardContent).q}\n\t\t\t\t\t\t\t\t\t\tlabel={text.constants.questionText}\n\t\t\t\t\t\t\t\t\t\tvariant=\"filled\"\n\t\t\t\t\t\t\t\t\t\tstyle={{ backgroundColor: \"#FFBF69\" }}\n\t\t\t\t\t\t\t\t\t\tInputLabelProps={{ style: { color: \"#000000\" } }}\n\t\t\t\t\t\t\t\t\t\tfieldOrigin={config.origin?.q}\n\t\t\t\t\t\t\t\t\t></ClayCardField>\n\t\t\t\t\t\t\t\t</Grid>\n\n\t\t\t\t\t\t\t\t<Grid item>\n\t\t\t\t\t\t\t\t\t<ClayCardFieldButtons cardField=\"q\" config={config}></ClayCardFieldButtons>\n\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t<Grid item>\n\t\t\t\t\t\t\t<Grid container direction=\"row\" spacing={1}>\n\t\t\t\t\t\t\t\t<Grid item>\n\t\t\t\t\t\t\t\t\t<ClayCardField\n\t\t\t\t\t\t\t\t\t\tsaveChanges={(value) => {\n\t\t\t\t\t\t\t\t\t\t\tdispatch(cards.actions.replaceCardFieldContent(\"a\", config, value));\n\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\tstoreValue={(config.content as QACardContent).a}\n\t\t\t\t\t\t\t\t\t\tlabel={text.constants.answerText}\n\t\t\t\t\t\t\t\t\t\tstyle={{ backgroundColor: \"#2EC4B6\" }}\n\t\t\t\t\t\t\t\t\t\tInputLabelProps={{ style: { color: \"#000000\" } }}\n\t\t\t\t\t\t\t\t\t\tfieldOrigin={config.origin?.a}\n\t\t\t\t\t\t\t\t\t></ClayCardField>\n\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t\t<Grid item>\n\t\t\t\t\t\t\t\t\t<ClayCardFieldButtons cardField=\"a\" config={config}></ClayCardFieldButtons>\n\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t</Grid>\n\t\t\t\t\t</Grid>\n\t\t\t\t</Grid>\n\n\t\t\t\t<Grid item>\n\t\t\t\t\t<cards.components.DeleteCardButton cardID={config.cardID}></cards.components.DeleteCardButton>\n\t\t\t\t</Grid>\n\t\t\t</Grid>\n\t\t</Card>\n\t);\n};\n","import React from \"react\";\nimport { ClayCardField } from \"./ClayCardField\";\nimport { useDispatch } from \"react-redux\";\nimport cards from \"../../../../cards\";\nimport { Card, Grid } from \"@material-ui/core\";\nimport text from \"../../../../text\";\nimport { NoteConfig } from \"../../../../cards/model/config\";\nimport { ClayCardFieldButtons } from \"./ClayCardFieldButtons\";\n\nexport const NoteCard = ({ config }: { config: NoteConfig }) => {\n\tconst dispatch = useDispatch();\n\n\treturn (\n\t\t<Card variant=\"elevation\" elevation={5} style={{ padding: \"3px\" }}>\n\t\t\t<Grid container direction=\"row\" justify=\"space-between\">\n\t\t\t\t<Grid item>\n\t\t\t\t\t<Grid container direction=\"row\" spacing={1}>\n\t\t\t\t\t\t<Grid item>\n\t\t\t\t\t\t\t<ClayCardField\n\t\t\t\t\t\t\t\tsaveChanges={(value) => {\n\t\t\t\t\t\t\t\t\tdispatch(cards.actions.cardReplace({ ...config, content: value } as NoteConfig));\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\tstoreValue={config.content as string}\n\t\t\t\t\t\t\t\tlabel={text.constants.noteText}\n\t\t\t\t\t\t\t\tvariant=\"filled\"\n\t\t\t\t\t\t\t\tstyle={{ backgroundColor: \"#CBF3F0\" }}\n\t\t\t\t\t\t\t\tInputLabelProps={{ style: { color: \"#000000\" } }}\n\t\t\t\t\t\t\t\tfieldOrigin={config.origin}\n\t\t\t\t\t\t\t></ClayCardField>\n\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t<Grid item>\n\t\t\t\t\t\t\t<ClayCardFieldButtons cardField=\"note\" config={config}></ClayCardFieldButtons>\n\t\t\t\t\t\t</Grid>\n\t\t\t\t\t</Grid>\n\t\t\t\t</Grid>\n\n\t\t\t\t<Grid item>\n\t\t\t\t\t<cards.components.DeleteCardButton cardID={config.cardID}></cards.components.DeleteCardButton>\n\t\t\t\t</Grid>\n\t\t\t</Grid>\n\t\t</Card>\n\t);\n};\n","import React from \"react\";\nimport { CardConfig, NoteConfig, QAConfig } from \"../../../../cards/model/config\";\nimport { QACard } from \"./QACard\";\nimport { NoteCard } from \"./NoteCard\";\n\nexport const ClayCard = ({ config }: { config: CardConfig }) => {\n\tswitch (config.type) {\n\t\tcase \"Note\":\n\t\t\treturn <NoteCard config={config as NoteConfig}></NoteCard>;\n\t\tcase \"Q-A\":\n\t\t\treturn <QACard config={config as QAConfig}></QACard>;\n\t}\n};\n","import Grid from \"@material-ui/core/Grid\";\nimport React from \"react\";\nimport { incrementer } from \"../../../../shared/utils\";\nimport { ClayCard } from \"./Cards/ClayCard\";\nimport { CardConfig } from \"../../../cards/model/config\";\nimport { Divider } from \"@material-ui/core\";\n\nconst GridItemDivider = () => (\n\t<Grid item>\n\t\t<Divider></Divider>\n\t</Grid>\n);\n\nexport const ClayCardGridItems = (cards: CardConfig[]) => {\n\tconst increment = incrementer();\n\n\treturn cards.reduce((prev, currentCard, index, arr) => {\n\t\tprev.push(\n\t\t\t<Grid item key={increment()}>\n\t\t\t\t<ClayCard config={currentCard} key={increment()}></ClayCard>\n\t\t\t</Grid>\n\t\t);\n\n\t\tconst notLastCard = index < arr.length - 1;\n\t\tif (notLastCard) prev.push(<GridItemDivider key={increment()}></GridItemDivider>);\n\t\treturn prev;\n\t}, [] as any[]);\n};\n","import cards from \"../../cards\";\nimport { CardConfig, NoteConfig, QAConfig } from \"../../cards/model/config\";\nimport { RiverContentState } from \"../model\";\nimport { combineFilterArr, Filter } from \"../../../shared/utils\";\n\n//TODO: make it not be accordion but closeable?\n//TODO: make local show / hide notes\nconst qaFilter: Filter = (config: CardConfig) => config.type === \"Q-A\";\nconst noteFilter: Filter = (config: CardConfig) => config.type === \"Note\";\nconst contentFilter: (contentStr: string) => Filter = (contentFilterStr: string) => (config: CardConfig) => {\n\tswitch (config.type) {\n\t\tcase \"Note\":\n\t\t\treturn cards.model.content.noteContentContainsStringOrEmpty(config as NoteConfig, contentFilterStr);\n\t\tcase \"Q-A\":\n\t\t\treturn cards.model.content.qaContentContainsStringOrEmpty(config as QAConfig, contentFilterStr);\n\t}\n};\n\nexport const filterCardConfigs = (\n\tinputCards: CardConfig[],\n\triverContentState: RiverContentState,\n\tcontentFilterStr: string\n): CardConfig[] => {\n\tif (riverContentState === \"NONE\") {\n\t\treturn [];\n\t}\n\n\tconst filters: Filter[] = [];\n\n\tif (riverContentState !== \"ALL\") {\n\t\tif (riverContentState === \"QAS\") {\n\t\t\tfilters.push(qaFilter);\n\t\t} else if (riverContentState === \"NOTES\") {\n\t\t\tfilters.push(noteFilter);\n\t\t}\n\t}\n\tif (contentFilterStr !== \"\") {\n\t\tfilters.push(contentFilter(contentFilterStr));\n\t}\n\n\treturn filters.length > 0 ? inputCards.filter(combineFilterArr(filters)) : inputCards;\n};\n","import { Typography, Divider } from \"@material-ui/core\";\nimport Accordion from \"@material-ui/core/Accordion\";\nimport AccordionSummary from \"@material-ui/core/AccordionSummary\";\nimport AccordionDetails from \"@material-ui/core/AccordionDetails\";\nimport Grid from \"@material-ui/core/Grid\";\nimport React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { getRiverContentState, getRiverContentFilter, getRiverMakeUps } from \"../../selectors\";\nimport cards from \"../../../cards\";\nimport { ClayCardGridItems } from \"./ClayCardGridItems\";\nimport { filterCardConfigs } from \"../../services/filterCardConfigs\";\n\nexport const CardRiver = ({ riverID, materialHeight }: { riverID: string; materialHeight: number }) => {\n\tconst cardConfigs = useSelector(cards.selectors.getCards);\n\n\tconst riverMakeUp = useSelector(getRiverMakeUps)[riverID];\n\tconst riverCards = riverMakeUp ? riverMakeUp.cardIDs.map((id) => cardConfigs[id]) : [];\n\tconst riverContentState = useSelector(getRiverContentState);\n\t//TODO: use regex for upper/lower-case\n\tconst contentFilter = useSelector(getRiverContentFilter);\n\n\tconst filteredConfigs = filterCardConfigs(riverCards, riverContentState, contentFilter);\n\tconst gridItems = ClayCardGridItems(filteredConfigs);\n\n\t//TODO: if you start without any document and then load one, the current cards should be merged into that one\n\t//TODO: scroll-to-top for overflowing river\n\n\treturn (\n\t\t<Accordion\n\t\t\texpanded\n\t\t\tdefaultExpanded={true}\n\t\t\tstyle={{\n\t\t\t\toverflow: \"auto\",\n\t\t\t\t// this was maxHeight but then if we hide the Material an empty river looks weird\n\t\t\t\t// because it is surrounded by white-space\n\t\t\t\theight: materialHeight,\n\t\t\t}}\n\t\t\televation={5}\n\t\t>\n\t\t\t<AccordionSummary>\n\t\t\t\t<Typography\n\t\t\t\t\tvariant=\"h6\"\n\t\t\t\t\talign=\"center\"\n\t\t\t\t\tstyle={{ MozUserSelect: \"none\", WebkitUserSelect: \"none\", msUserSelect: \"none\" }}\n\t\t\t\t>\n\t\t\t\t\t{riverID}\n\t\t\t\t</Typography>\n\t\t\t</AccordionSummary>\n\t\t\t<AccordionDetails>\n\t\t\t\t<Grid container direction=\"column\" spacing={2} justify=\"center\" alignItems=\"stretch\">\n\t\t\t\t\t<Grid item>\n\t\t\t\t\t\t<cards.components.AddQAButton></cards.components.AddQAButton>\n\t\t\t\t\t\t<cards.components.AddNoteButton></cards.components.AddNoteButton>\n\t\t\t\t\t\t<Divider></Divider>\n\t\t\t\t\t</Grid>\n\n\t\t\t\t\t<Grid item>\n\t\t\t\t\t\t<Grid container direction=\"column\" spacing={2} justify=\"center\" alignItems=\"stretch\">\n\t\t\t\t\t\t\t{gridItems}\n\t\t\t\t\t\t</Grid>\n\t\t\t\t\t</Grid>\n\t\t\t\t</Grid>\n\t\t\t</AccordionDetails>\n\t\t</Accordion>\n\t);\n};\n","import { useDispatch } from \"react-redux\";\nimport { trySetActiveRiver } from \"../actions\";\nimport { ReactNode } from \"react\";\nimport React from \"react\";\n\n//TODO: make reconciliation algorithm for origin when new PDF versions come out\n// (basically, just search the text, and if it is not in the same span, just move the span - expand page forward and backward then search there)\n\nexport const SwitchActiveRiver = ({ children, riverID }: { children: ReactNode; riverID: string }) => {\n\tconst dispatch = useDispatch();\n\n\treturn (\n\t\t<span\n\t\t\tonMouseEnter={() => {\n\t\t\t\tdispatch(trySetActiveRiver(riverID));\n\t\t\t}}\n\t\t>\n\t\t\t{children}\n\t\t</span>\n\t);\n};\n","import {\n\tCardRiverState,\n\tRiverShowState,\n\tpageNumberToRiverMakeUpID,\n\tRiverContentState,\n\tremoveCardFromRivers,\n} from \"./model\";\nimport { CardConfig } from \"../cards/model/config\";\nimport cards from \"../cards\";\nimport * as t from \"./actionTypes\";\nimport { ArchiveRiver } from \"../db/model\";\nimport db from \"../db\";\nimport { ClayMemoryPayloadAction } from \"../../shared/utils\";\n\nconst initialState: CardRiverState = {\n\trequestedOrigin: null,\n\triverMakeUps: {\n\t\t[pageNumberToRiverMakeUpID(1)]: {\n\t\t\triverID: pageNumberToRiverMakeUpID(1),\n\t\t\tcardIDs: [\"2\", \"0\", \"1\"],\n\t\t},\n\t},\n\tactiveRiverMakeUpID: pageNumberToRiverMakeUpID(1),\n\tlastRiverIDNumber: 1,\n\triverShowState: \"SHOW\",\n\triverContentState: \"ALL\",\n\tcontentFilter: \"\",\n};\n\nconst cardRiverState = (state = initialState, { type, payload }: ClayMemoryPayloadAction): CardRiverState => {\n\tlet riverMakeUp;\n\tlet riverMakeUps;\n\tswitch (type) {\n\t\tcase t.RIVER_ACTIVE_ID:\n\t\t\treturn { ...state, activeRiverMakeUpID: payload };\n\t\tcase t.RIVER_SHOW_STATE:\n\t\t\treturn { ...state, riverShowState: payload as RiverShowState };\n\t\tcase t.RIVER_CONTENT_STATE:\n\t\t\treturn { ...state, riverContentState: payload as RiverContentState };\n\t\tcase t.RIVER_CONTENT_FILTER:\n\t\t\treturn { ...state, contentFilter: payload };\n\t\tcase t.ORIGIN_REQUEST:\n\t\t\treturn { ...state, requestedOrigin: payload };\n\t\tcase cards.actionTypes.CARD_PUSH:\n\t\t\tif (state.riverMakeUps[state.activeRiverMakeUpID]) {\n\t\t\t\triverMakeUp = {\n\t\t\t\t\t...state.riverMakeUps[state.activeRiverMakeUpID],\n\t\t\t\t\tcardIDs: [...state.riverMakeUps[state.activeRiverMakeUpID].cardIDs, (payload as CardConfig).cardID],\n\t\t\t\t};\n\t\t\t} else {\n\t\t\t\t// create new river\n\t\t\t\triverMakeUp = {\n\t\t\t\t\triverID: state.activeRiverMakeUpID,\n\t\t\t\t\tcardIDs: [(payload as CardConfig).cardID],\n\t\t\t\t};\n\t\t\t}\n\t\t\triverMakeUps = { ...state.riverMakeUps };\n\t\t\triverMakeUps[state.activeRiverMakeUpID] = riverMakeUp;\n\n\t\t\treturn { ...state, riverMakeUps: riverMakeUps };\n\t\tcase cards.actionTypes.CARD_REMOVE:\n\t\t\treturn removeCardFromRivers(state, payload as string);\n\t\tcase db.actionTypes.DOCUMENT_CHANGE:\n\t\t\tif (payload) {\n\t\t\t\treturn {\n\t\t\t\t\t...initialState,\n\t\t\t\t\triverMakeUps: (payload as ArchiveRiver).riverMakeUps,\n\t\t\t\t\tlastRiverIDNumber: (payload as ArchiveRiver).lastRiverIDNumber,\n\t\t\t\t};\n\t\t\t} else {\n\t\t\t\treturn initialState;\n\t\t\t}\n\t\tcase db.actionTypes.LOAD_DOCUMENT_DATA_SETS:\n\t\t\t// basically the same as DOCUMENT_CHANGE, just only triggered\n\t\t\t//when uploading data that corresponds to current document\n\t\t\t// and if not, we dont reset\n\t\t\tif (payload.newActiveDataSet) {\n\t\t\t\treturn {\n\t\t\t\t\t...initialState,\n\t\t\t\t\triverMakeUps: (payload.newActiveDataSet as ArchiveRiver).riverMakeUps,\n\t\t\t\t\tlastRiverIDNumber: (payload.newActiveDataSet as ArchiveRiver).lastRiverIDNumber,\n\t\t\t\t};\n\t\t\t} else {\n\t\t\t\treturn state;\n\t\t\t}\n\t\tdefault:\n\t\t\treturn state;\n\t}\n};\n\nexport default cardRiverState;\n","import * as constants from \"./constants\";\nimport * as components from \"./components\";\nimport reducer from \"./reducer\";\nimport * as selectors from \"./selectors\";\nimport * as actions from \"./actions\";\nimport * as model from \"./model\";\nimport * as services from \"./services\";\n\nexport default { constants, components, reducer, selectors, actions, model, services };\n","import { RefObject, useCallback, useEffect, useRef } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { getSpanOrigin } from \"../selectors\";\nimport { resetSpanOrigin } from \"../actions\";\nimport { SingleOrigin } from \"../../cards/model/origin\";\n\nexport const PageSpanControl = ({ page, pageRef }: { page: number; pageRef: RefObject<null | HTMLDivElement> }) => {\n\tconst spanOrigin = useSelector(getSpanOrigin);\n\tconst count = useRef(0);\n\n\tconst dispatch = useDispatch();\n\n\t// it is not guaranteed that the effect fires after the page was fully rendered\n\t// (depends on load)\n\t// so we try up to 10 times\n\t// this assumes every machine has finished rendering after approx 100 ms\n\t// then we assume that the origin was invalid (bug somewhere) and abort\n\t// otherwise it would be a infinite loop\n\tconst trier = useCallback(() => {\n\t\tconst intervalID = setInterval(() => {\n\t\t\tif (count.current === 10) {\n\t\t\t\tcount.current = 0;\n\t\t\t\tclearInterval(intervalID);\n\t\t\t\tconsole.log(\"invalid origin clicked\", spanOrigin);\n\t\t\t\tdispatch(resetSpanOrigin());\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst textLayer = pageRef.current?.children.item(1);\n\t\t\tif (textLayer) {\n\t\t\t\tconst originSpan = textLayer.children.item((spanOrigin as SingleOrigin).spanIndexStart);\n\t\t\t\tif (originSpan) {\n\t\t\t\t\toriginSpan.scrollIntoView({ behavior: \"auto\", block: \"nearest\", inline: \"nearest\" });\n\t\t\t\t\tcount.current = 0;\n\t\t\t\t\tclearInterval(intervalID);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcount.current = count.current + 1;\n\t\t}, 10);\n\t}, [dispatch, count, spanOrigin, pageRef]);\n\n\tuseEffect(() => {\n\t\tif (spanOrigin && spanOrigin.page === page && pageRef.current) {\n\t\t\t// assumption of fixed order\n\t\t\tconst textLayer = pageRef.current.children.item(1);\n\t\t\tif (textLayer) {\n\t\t\t\tconst originSpan = textLayer.children.item(spanOrigin.spanIndexStart);\n\t\t\t\tif (originSpan) {\n\t\t\t\t\toriginSpan.scrollIntoView({ behavior: \"auto\", block: \"nearest\", inline: \"nearest\" });\n\t\t\t\t\tcount.current = 0;\n\t\t\t\t} else {\n\t\t\t\t\ttrier();\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\ttrier();\n\t\t\t}\n\t\t}\n\t}, [dispatch, page, pageRef, spanOrigin, trier]);\n\n\treturn null;\n};\n","import React, { useRef } from \"react\";\nimport { Page } from \"react-pdf\";\nimport { PageKeyboardControl } from \"./PageKeyboardControl\";\nimport selection from \"../../../selection\";\nimport { useSelector } from \"react-redux\";\nimport { getDocumentSearch, getSpanOrigin, getWindowMeasurements } from \"../../selectors\";\nimport { MaterialMultiplier } from \"./RiverMaterialPairList\";\nimport { PageSpanControl } from \"../PageSpanControl\";\nimport { TextLayerItemInternal } from \"react-pdf/dist/Page\";\nimport { SingleOrigin } from \"../../../cards/model/origin\";\n\ntype Renderer = (\n\ttextItem: TextLayerItemInternal | (TextLayerItemInternal & { str: string | JSX.Element })\n) => JSX.Element | string;\n\nconst highlightOrigin = (textItem: TextLayerItemInternal, origin: SingleOrigin) => {\n\tconst itemIndex = textItem.itemIndex;\n\tif (!(itemIndex >= origin.spanIndexStart && itemIndex <= origin.spanIndexEnd)) {\n\t\treturn textItem.str;\n\t}\n\n\t// does not really make sense to make more fine-grained mark if the TextLayer is off anyways\n\treturn <mark style={{ backgroundColor: \"red\" }}>{textItem.str}</mark>;\n};\n\nconst makeOriginHighlighter = (origin: SingleOrigin) => {\n\treturn (textItem: TextLayerItemInternal) => {\n\t\treturn highlightOrigin(textItem, origin);\n\t};\n};\n\nexport const backgroundStyle = { backgroundColor: \"blue\" };\n\n// TODO: this could be made clearer and cleaner\nexport const highlightPattern = (text: string, pattern: string) => {\n\t// the idea is that:\n\t// no matches are most likely\n\t// 1 or 2 are second most likely\n\t// after that the pattern must be really small,\n\t// so then we can look at the whole string\n\t// generally verbosity is used to guarantee speed\n\t// potentially 400+ items need to be processed for every search, so no room for slack\n\n\tconst textLength = text.length;\n\tconst patternLength = pattern.length;\n\t// most of the TextItems should not have a highlight, so short-circuit is advised\n\tif (pattern === \"\" || text === \"\" || patternLength > textLength) return text;\n\n\t// fastest match seems to be indexOf: https://jsben.ch/RVYk7\n\tconst index = text.indexOf(pattern);\n\tif (index === -1) return text;\n\n\t// react says to use unqiue elements with keys, I choose not to for speed reasons\n\tconst markedPattern = <mark style={backgroundStyle}>{pattern}</mark>;\n\tconst slice1 = index > 0 ? text.slice(0, index) : false;\n\n\tlet result = [];\n\tif (slice1) result.push(slice1);\n\tresult.push(markedPattern);\n\n\tconst secondIndex = text.indexOf(pattern, index + patternLength);\n\tif (secondIndex === -1) {\n\t\tconst slice2Start = index + patternLength;\n\t\tconst slice2 = slice2Start < textLength ? text.slice(slice2Start) : false;\n\t\tif (slice2) result.push(slice2);\n\t\treturn result;\n\t}\n\n\tconst slice2Start = index + patternLength;\n\tconst slice2 = slice2Start !== secondIndex ? text.slice(slice2Start, secondIndex) : false;\n\tif (slice2) result.push(slice2);\n\tresult.push(markedPattern);\n\n\tconst thirdIndex = text.indexOf(pattern, secondIndex + patternLength);\n\tif (thirdIndex === -1) {\n\t\tconst slice3Start = secondIndex + patternLength;\n\t\tconst slice3 = slice3Start < textLength ? text.slice(slice3Start) : false;\n\t\tif (slice3) result.push(slice2);\n\t\treturn result;\n\t}\n\n\tconst slice3Start = secondIndex + patternLength;\n\tconst slice3 = slice3Start < textLength ? text.slice(slice3Start, thirdIndex) : false;\n\tif (slice3) result.push(slice3);\n\tresult.push(markedPattern);\n\n\tif (thirdIndex + patternLength === textLength) {\n\t\treturn result;\n\t}\n\n\tconst stringRest = text.slice(thirdIndex + patternLength);\n\tif (stringRest === pattern) {\n\t\tresult.push(markedPattern);\n\t\treturn result;\n\t}\n\n\tconst splitText = stringRest.split(pattern);\n\tif (splitText.length <= 1) {\n\t\tresult.push(stringRest);\n\t\treturn result;\n\t}\n\n\tfor (let index = 0; index < splitText.length; index++) {\n\t\tconst spliter = splitText[index];\n\t\tif (index === 0 && spliter === \"\") {\n\t\t\tresult.push(markedPattern);\n\t\t\tcontinue;\n\t\t}\n\n\t\tif (index === splitText.length - 1 && spliter !== \"\") {\n\t\t\tresult.push(spliter);\n\t\t\tcontinue;\n\t\t}\n\n\t\tif (spliter !== \"\") result.push(spliter);\n\t\tresult.push(markedPattern);\n\t}\n\n\treturn result as any;\n};\n\nfunction makeTextRenderer(searchText: string) {\n\treturn function textRenderer(textItem: TextLayerItemInternal) {\n\t\treturn highlightPattern(textItem.str, searchText);\n\t};\n}\n\nconst combineRenderers = (searchRenderer?: Renderer, originRenderer?: Renderer) => {\n\tif (!searchRenderer) return originRenderer;\n\tif (!originRenderer) return searchRenderer;\n\treturn (textItem: TextLayerItemInternal) => originRenderer({ ...textItem, str: searchRenderer(textItem) as any });\n};\n\n//TODO: when switching from a small page to big, the ControlBar does not size back\n\nexport const PDFPage = ({ pageNumber }: { pageNumber: number }) => {\n\t//assumption is that the list checks for width before rendering\n\tconst materialWidth = useSelector(getWindowMeasurements)?.width as number;\n\tconst documentSearch = useSelector(getDocumentSearch);\n\tconst spanOrigin = useSelector(getSpanOrigin);\n\n\tconst originHighlighter = spanOrigin ? makeOriginHighlighter(spanOrigin) : undefined;\n\tconst searchRenderer = documentSearch !== \"\" ? makeTextRenderer(documentSearch) : undefined;\n\n\tconst textRenderer = combineRenderers(searchRenderer, originHighlighter);\n\n\tconst pageRef = useRef<null | HTMLDivElement>(null);\n\n\treturn (\n\t\t<div style={{ overflow: \"auto\" }}>\n\t\t\t<selection.components.MaterialMouseUp page={pageNumber}>\n\t\t\t\t<PageKeyboardControl>\n\t\t\t\t\t<Page\n\t\t\t\t\t\tinputRef={(instance) => {\n\t\t\t\t\t\t\tpageRef.current = instance;\n\t\t\t\t\t\t}}\n\t\t\t\t\t\tpageNumber={pageNumber}\n\t\t\t\t\t\twidth={materialWidth * MaterialMultiplier}\n\t\t\t\t\t\tcustomTextRenderer={textRenderer as any}\n\t\t\t\t\t\trenderAnnotationLayer={false}\n\t\t\t\t\t/>\n\t\t\t\t</PageKeyboardControl>\n\t\t\t</selection.components.MaterialMouseUp>\n\t\t\t<PageSpanControl page={pageNumber} pageRef={pageRef}></PageSpanControl>\n\t\t</div>\n\t);\n};\n","import React from \"react\";\nimport { Divider, Grid } from \"@material-ui/core\";\nimport river from \"../../../river\";\nimport { PDFPage } from \"./PDFPage\";\nimport { useSelector } from \"react-redux\";\nimport { getDisplayStatus, getWindowMeasurements } from \"../../selectors\";\nimport { pairTopBottomPadding, RiverMultiplier } from \"./RiverMaterialPairList\";\n\nconst RiverPairItem = ({ riverID, materialHeight }: { riverID: string; materialHeight: number }) => {\n\tconst width = useSelector(getWindowMeasurements)?.width as number;\n\n\treturn (\n\t\t<div style={{ maxWidth: width * RiverMultiplier }}>\n\t\t\t<river.components.CardRiver riverID={riverID} materialHeight={materialHeight}></river.components.CardRiver>\n\t\t</div>\n\t);\n};\n\nexport const RiverMaterialPair = ({\n\tindex,\n\tdata,\n\tstyle,\n}: {\n\tindex: number;\n\tdata: {\n\t\tmaterialHeights: Map<number, number>;\n\t};\n\tstyle: any;\n}) => {\n\tconst pageNumber = index + 1;\n\tconst riverID = river.model.pageNumberToRiverMakeUpID(pageNumber);\n\tconst { materialHeights } = data;\n\tconst showRiver = useSelector(river.selectors.getRiverShowState);\n\tconst showMaterial = useSelector(getDisplayStatus);\n\n\treturn (\n\t\t<div style={{ ...style }}>\n\t\t\t<river.components.SwitchActiveRiver riverID={riverID}>\n\t\t\t\t<Grid container justify=\"space-between\" direction=\"row\" alignItems=\"flex-start\">\n\t\t\t\t\t<Grid item hidden={showRiver === \"HIDE\"}>\n\t\t\t\t\t\t<RiverPairItem riverID={riverID} materialHeight={materialHeights.get(pageNumber) as number}></RiverPairItem>\n\t\t\t\t\t</Grid>\n\n\t\t\t\t\t<Grid item hidden={showMaterial === \"HIDE\"}>\n\t\t\t\t\t\t<PDFPage pageNumber={pageNumber}></PDFPage>\n\t\t\t\t\t</Grid>\n\t\t\t\t</Grid>\n\t\t\t</river.components.SwitchActiveRiver>\n\t\t\t<Divider style={{ marginTop: pairTopBottomPadding / 2 }}></Divider>\n\t\t</div>\n\t);\n};\n","import { RefObject, useEffect } from \"react\";\nimport { VariableSizeList } from \"react-window\";\nimport { getCurrentPage, getCurrentView, getScrollToPage } from \"../../selectors\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { setPage, setSpanOrigin, setView } from \"../../actions\";\nimport river from \"../../../river\";\nimport { View } from \"../../model\";\n\nexport const PageScrollControl = ({ listRef }: { listRef: RefObject<VariableSizeList> }) => {\n\tconst currentView = useSelector(getCurrentView);\n\n\tconst scrollToPage = useSelector(getScrollToPage);\n\tconst currentPage = useSelector(getCurrentPage);\n\tconst requestedOrigin = useSelector(river.selectors.getOriginRequest);\n\tuseEffect(() => {\n\t\tlistRef.current?.scrollToItem(currentPage - 1, \"start\");\n\t}, []);\n\n\tconst dispatch = useDispatch();\n\n\tuseEffect(() => {\n\t\tif ((requestedOrigin || scrollToPage) && currentView !== View.RiverMaterial) {\n\t\t\tdispatch(setView(View.RiverMaterial));\n\t\t}\n\n\t\tif (requestedOrigin) {\n\t\t\tlistRef.current?.scrollToItem(requestedOrigin.page - 1, \"auto\");\n\t\t\tdispatch(setSpanOrigin(requestedOrigin));\n\t\t\tdispatch(setPage(requestedOrigin.page, false));\n\t\t\tdispatch(river.actions.resetOriginRequest());\n\t\t\treturn;\n\t\t}\n\n\t\tif (scrollToPage) {\n\t\t\tlistRef.current?.scrollToItem(scrollToPage - 1, \"start\");\n\t\t\tdispatch(setPage(scrollToPage, false));\n\t\t}\n\t}, [dispatch, listRef, scrollToPage, requestedOrigin, currentView]);\n\n\treturn null;\n};\n","import React, { RefObject, useRef, Fragment, useEffect } from \"react\";\nimport { pdfjs } from \"react-pdf\";\nimport { VariableSizeList } from \"react-window\";\nimport { RiverMaterialPair } from \"./RiverMaterialPair\";\nimport { CachedPageDimensions } from \"./PDFDocument\";\nimport { getTopOffset, getWindowMeasurements } from \"../../selectors\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { setPage } from \"../../actions\";\nimport { PageScrollControl } from \"./PageScrollControl\";\n\n//TODO: replace this with Material-UI breakpoints\nexport const MaterialMultiplier = 0.63;\nexport const RiverMultiplier = 0.35;\n\nconst calculateMaterialHeight = (\n\tpageNumber: number,\n\tcachedPageDimensions: CachedPageDimensions,\n\twindowWidth: number\n) => {\n\tconst pageDims = cachedPageDimensions.get(pageNumber) as [number, number];\n\tconst materialWidth = windowWidth * MaterialMultiplier;\n\n\tconst userSpaceUnitWidth = pageDims[0];\n\tconst pixelPerUserSpaceUnit = materialWidth / userSpaceUnitWidth;\n\tconst materialHeight = pageDims[1] * pixelPerUserSpaceUnit;\n\n\tconst extraSpaceBetweenMaterialPages = 20;\n\treturn materialHeight + extraSpaceBetweenMaterialPages;\n};\n\nexport const pairTopBottomPadding = 20;\n\nconst Resetter = ({\n\tlistRef,\n\tmaterialHeights,\n}: {\n\tlistRef: RefObject<VariableSizeList>;\n\tmaterialHeights: Map<number, number>;\n}) => {\n\tconst ref = useRef(materialHeights);\n\n\tuseEffect(() => {\n\t\tif (materialHeights !== ref.current) {\n\t\t\tlistRef.current?.resetAfterIndex(0);\n\t\t\tref.current = materialHeights;\n\t\t}\n\t});\n\n\treturn null;\n};\n\nexport const RiverMaterialPairList = ({\n\tpdfProxyRef,\n\tcachedPageDimensions,\n}: {\n\tpdfProxyRef: RefObject<pdfjs.PDFDocumentProxy | undefined>;\n\tcachedPageDimensions: CachedPageDimensions;\n}) => {\n\tconst listRef = useRef<VariableSizeList>();\n\n\tconst windowMeasurements = useSelector(getWindowMeasurements);\n\tconst materialHeights = windowMeasurements\n\t\t? Array.from(cachedPageDimensions.keys()).reduce((prev, pageNumber) => {\n\t\t\t\tprev.set(pageNumber, calculateMaterialHeight(pageNumber, cachedPageDimensions, windowMeasurements.width));\n\t\t\t\treturn prev;\n\t\t  }, new Map<number, number>())\n\t\t: undefined;\n\n\tconst dispatch = useDispatch();\n\tconst topOffset = useSelector(getTopOffset);\n\n\treturn (\n\t\t<Fragment>\n\t\t\t{windowMeasurements && materialHeights && (\n\t\t\t\t<VariableSizeList\n\t\t\t\t\theight={windowMeasurements.height - topOffset}\n\t\t\t\t\titemCount={(pdfProxyRef.current as pdfjs.PDFDocumentProxy).numPages}\n\t\t\t\t\titemSize={(index: number) => (materialHeights.get(index + 1) as number) + pairTopBottomPadding}\n\t\t\t\t\titemData={{\n\t\t\t\t\t\tmaterialHeights,\n\t\t\t\t\t}}\n\t\t\t\t\tref={listRef as RefObject<VariableSizeList>}\n\t\t\t\t\twidth=\"100%\"\n\t\t\t\t\tonItemsRendered={(props) => {\n\t\t\t\t\t\t//TODO: find way to switch the page if it is halfway in sight\n\t\t\t\t\t\tdispatch(setPage(props.visibleStopIndex + 1, false));\n\t\t\t\t\t}}\n\t\t\t\t>\n\t\t\t\t\t{RiverMaterialPair}\n\t\t\t\t</VariableSizeList>\n\t\t\t)}\n\t\t\t{materialHeights && (\n\t\t\t\t<Resetter listRef={listRef as RefObject<VariableSizeList>} materialHeights={materialHeights}></Resetter>\n\t\t\t)}\n\t\t\t<PageScrollControl listRef={listRef as RefObject<VariableSizeList>}></PageScrollControl>\n\t\t</Fragment>\n\t);\n};\n","import \"./PDFDocument.css\";\nimport \"react-pdf/dist/esm/Page/AnnotationLayer.css\";\nimport React, { useState, useRef } from \"react\";\nimport { pdfjs, Document } from \"react-pdf\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { materialLoaded, setPage } from \"../../actions\";\nimport { getPDF } from \"../../selectors\";\nimport text from \"../../../text\";\nimport { cachePageDimensions } from \"./cachePageDimensions\";\nimport { RiverMaterialPairList } from \"./RiverMaterialPairList\";\npdfjs.GlobalWorkerOptions.workerSrc = `//cdnjs.cloudflare.com/ajax/libs/pdf.js/${pdfjs.version}/pdf.worker.js`;\n\nexport type CachedPageDimensions = Map<number, [number, number]>;\n\nconst options = {\n\tcMapUrl: \"cmaps/\",\n\tcMapPacked: true,\n};\n\nexport const PDFDocument = () => {\n\tconst pdf = useSelector(getPDF);\n\n\tconst [cachedPageDimensions, setPageDimensions] = useState<CachedPageDimensions | undefined>();\n\n\tconst pdfProxyRef = useRef<pdfjs.PDFDocumentProxy | undefined>();\n\n\tconst dispatch = useDispatch();\n\n\t// used for abborting pageDimension-cache-collection\n\tconst pdfName = pdf?.name;\n\tconst pdfNameRef = useRef(pdfName);\n\tif (pdfNameRef.current !== pdfName) {\n\t\tpdfNameRef.current = pdfName;\n\t}\n\n\treturn (\n\t\t<Document\n\t\t\tloading={text.constants.loadingMaterialText}\n\t\t\tnoData={text.constants.noMaterialText}\n\t\t\toptions={options}\n\t\t\tfile={pdf}\n\t\t\trenderMode=\"canvas\"\n\t\t\tonLoadSuccess={(pdfProxy) => {\n\t\t\t\tdispatch(materialLoaded(pdfProxy.numPages));\n\t\t\t\tif (pdf) cachePageDimensions(pdfProxy, pdfName as string, pdfNameRef, setPageDimensions);\n\t\t\t\tpdfProxyRef.current = pdfProxy;\n\t\t\t}}\n\t\t\tonItemClick={({ pageNumber }) => {\n\t\t\t\tdispatch(setPage(parseInt(pageNumber), true));\n\t\t\t}}\n\t\t>\n\t\t\t{cachedPageDimensions && pdfNameRef.current === pdfName && (\n\t\t\t\t<RiverMaterialPairList\n\t\t\t\t\tpdfProxyRef={pdfProxyRef}\n\t\t\t\t\tcachedPageDimensions={cachedPageDimensions}\n\t\t\t\t></RiverMaterialPairList>\n\t\t\t)}\n\t\t</Document>\n\t);\n};\n","import { RefObject } from \"react\";\nimport { pdfjs } from \"react-pdf\";\nimport { CachedPageDimensions } from \"./PDFDocument\";\n\n//TODO: use more robust method than pdfName to differentiate pdfs in this abort\n//TODO: test if this abort actually works? once the function was entered,\n// is it guaranteed that it will finish before other changes?\nexport const cachePageDimensions = (\n\tpdfProxy: pdfjs.PDFDocumentProxy,\n\tpdfName: string,\n\tpdfNameRef: RefObject<string | null | undefined>,\n\tsetPageDimensions: (dims: CachedPageDimensions) => void\n) => {\n\tconst promises = Array.from({ length: pdfProxy.numPages }, (_, i) => i + 1).map((pageNumber) =>\n\t\tpdfProxy.getPage(pageNumber)\n\t);\n\n\t// Assuming all pages may have different heights. Otherwise we can just\n\t// load the first page and use its height for determining all the row\n\t// heights.\n\tPromise.all((promises as unknown) as Promise<any>[]).then((pages: pdfjs.PDFPageProxy[]) => {\n\t\t// a different pdf was loaded while these promises where executing\n\t\tif (pdfName !== pdfNameRef.current) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst pageDimensions = new Map();\n\n\t\tconst scale = 1;\n\t\tfor (const page of pages) {\n\t\t\tconst w = page.view[2] * scale;\n\t\t\tconst h = page.view[3] * scale;\n\n\t\t\t// react-pdf 4.0.5 types are incorrect, _pageIndex is correct and not just pageIndex\n\t\t\tpageDimensions.set(((page as unknown) as { _pageIndex: number })._pageIndex + 1, [w, h]);\n\t\t}\n\n\t\tsetPageDimensions(pageDimensions);\n\t});\n};\n","import { Grid } from \"@material-ui/core\";\nimport React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { incrementer } from \"../../../shared/utils\";\nimport river from \"../../river\";\nimport { getNonEmptyRiverIDsSorted } from \"../../river/selectors\";\nimport { getTopOffset, getWindowMeasurements } from \"../selectors\";\n\nconst ExplorerRiver = ({ riverID }: { riverID: string }) => {\n\tconst windowMeasurements = useSelector(getWindowMeasurements);\n\tconst topOffset = useSelector(getTopOffset);\n\n\treturn windowMeasurements && topOffset ? (\n\t\t<div style={{ marginBottom: \"8px\", marginTop: \"4px\" }}>\n\t\t\t<river.components.CardRiver\n\t\t\t\triverID={riverID}\n\t\t\t\tmaterialHeight={(windowMeasurements?.height as number) - topOffset - 10}\n\t\t\t></river.components.CardRiver>\n\t\t</div>\n\t) : null;\n};\n\nexport const RiverExplorer = () => {\n\tconst riverIDs = useSelector(getNonEmptyRiverIDsSorted);\n\tconst increment = incrementer();\n\treturn (\n\t\t<Grid container justify=\"space-evenly\" alignItems=\"center\" spacing={2} style={{ width: \"100%\", height: \"100%\" }}>\n\t\t\t{riverIDs.map((id) => (\n\t\t\t\t<Grid item xs={4} key={increment()}>\n\t\t\t\t\t<river.components.SwitchActiveRiver riverID={id}>\n\t\t\t\t\t\t<ExplorerRiver riverID={id}></ExplorerRiver>\n\t\t\t\t\t</river.components.SwitchActiveRiver>\n\t\t\t\t</Grid>\n\t\t\t))}\n\t\t</Grid>\n\t);\n};\n//TODO: make error-message if jump to is executed without uploading a pdf\n","import React, { Fragment } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { View } from \"../model\";\nimport { getCurrentView } from \"../selectors\";\nimport { CardExplorer } from \"./CardExplorer\";\nimport { OriginMarkedSnackbar } from \"./OriginMarkedSnackbar\";\nimport { PDFDocument } from \"./PDFDocument/PDFDocument\";\nimport { RiverExplorer } from \"./RiverExplorer\";\n\nexport const Display = () => {\n\tconst currentView = useSelector(getCurrentView);\n\n\t// TODO: cant hide the CardExplorer because the Material UI TextField does not render correctly\n\t// after hidding\n\n\t// TODO: disable CardExplorer until I fix the \"which River is active\" problem for that view\n\treturn (\n\t\t<Fragment>\n\t\t\t<div hidden={currentView !== View.RiverMaterial} style={{ width: \"100%\", height: \"100%\" }}>\n\t\t\t\t<PDFDocument></PDFDocument>\n\t\t\t\t<OriginMarkedSnackbar></OriginMarkedSnackbar>\n\t\t\t</div>\n\n\t\t\t<div hidden={currentView !== View.RiverExplorer} style={{ width: \"100%\", height: \"100%\" }}>\n\t\t\t\t<RiverExplorer></RiverExplorer>\n\t\t\t</div>\n\n\t\t\t{/* {currentView === View.CardExplorer && <CardExplorer></CardExplorer>} */}\n\t\t</Fragment>\n\t);\n};\n","import { Card, Tab, Tabs } from \"@material-ui/core\";\nimport React from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { setView } from \"../actions\";\nimport { getCurrentView } from \"../selectors\";\n\nexport const ViewTabs = () => {\n\tconst currentView = useSelector(getCurrentView);\n\tconst dispatch = useDispatch();\n\n\tconst handleChange = (_: any, newValue: number) => {\n\t\tdispatch(setView(newValue));\n\t};\n\n\treturn (\n\t\t<Card>\n\t\t\t<Tabs value={currentView} onChange={handleChange}>\n\t\t\t\t<Tab label=\"River-Material\" />\n\t\t\t\t<Tab label=\"River Explorer\" />\n\t\t\t\t{/* <Tab label=\"Card Explorer\" /> */}\n\t\t\t</Tabs>\n\t\t</Card>\n\t);\n};\n","import * as t from \"./actionTypes\";\nimport { DisplayData, DisplayStatus, View } from \"./model\";\nimport db from \"../db\";\nimport { ClayMemoryPayloadAction } from \"../../shared/utils\";\n\nconst initialState: DisplayData = {\n\tdisplayStatus: \"SHOW\",\n\ttotalPages: 1000,\n\tcurrentPage: 1,\n\tscrollToPage: null,\n\twindowMeasurements: null,\n\tspanOrigin: null,\n\tdocumentSearch: \"\",\n\ttopOffset: 0,\n\tcurrentView: View.RiverMaterial,\n};\n\nconst displayData = (state = initialState, { type, payload }: ClayMemoryPayloadAction): DisplayData => {\n\tswitch (type) {\n\t\tcase t.PDF_UPLOADED:\n\t\t\treturn { ...state, pdf: payload as File, pdfName: (payload as File).name };\n\t\tcase t.MATERIAL_LOADED:\n\t\t\treturn { ...state, totalPages: payload as number };\n\t\tcase t.PAGE_UPDATE:\n\t\t\treturn { ...state, currentPage: payload.page, scrollToPage: payload.shouldScroll ? payload.page : null };\n\t\tcase t.DISPLAY_STATUS:\n\t\t\treturn { ...state, displayStatus: payload as DisplayStatus };\n\t\tcase t.SPAN_ORIGIN:\n\t\t\treturn { ...state, spanOrigin: payload };\n\t\tcase t.DOCUMENT_SEARCH:\n\t\t\treturn { ...state, documentSearch: payload };\n\t\tcase t.TOP_OFFSET:\n\t\t\treturn { ...state, topOffset: payload };\n\t\tcase t.WINDOW_LAYOUT:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\twindowMeasurements: payload,\n\t\t\t};\n\t\tcase t.VIEW_CHANGE:\n\t\t\treturn { ...state, currentView: payload };\n\t\tcase db.actionTypes.DOCUMENT_CHANGE:\n\t\t\tif (payload) {\n\t\t\t\t// this means the pdf has been already uploaded (Load Document) and this was not triggered not via options\n\t\t\t\tif (payload.name === state.pdfName) {\n\t\t\t\t\treturn state;\n\t\t\t\t}\n\t\t\t\treturn {\n\t\t\t\t\t...initialState,\n\t\t\t\t\tpdf: undefined,\n\t\t\t\t\tpdfName: payload.name,\n\t\t\t\t\ttotalPages: payload.totalPages,\n\t\t\t\t\tcurrentPage: payload.currentPage,\n\t\t\t\t};\n\t\t\t} else {\n\t\t\t\t// dont need to reset here because when loading pdf we set automatically via other actions\n\t\t\t\treturn state;\n\t\t\t}\n\t\tdefault:\n\t\t\treturn state;\n\t}\n};\n\nexport default displayData;\n","import * as actions from \"./actions\";\nimport * as actionTypes from \"./actionTypes\";\nimport * as components from \"./components\";\nimport * as constants from \"./constants\";\nimport reducer from \"./reducer\";\nimport * as selectors from \"./selectors\";\n\nexport default { actions, actionTypes, components, constants, reducer, selectors };\n","export const NAME = \"controlData\";\n","import { createSelector } from \"reselect\";\nimport display from \"../display\";\nimport river from \"../river\";\nimport cards from \"../cards\";\nimport { DocumentData } from \"../db/model\";\nimport { NAME } from \"./constants\";\nimport { Model } from \"./model\";\n\nexport const collectCurrentDBData: (state: any) => DocumentData | null = createSelector(\n\tdisplay.selectors.getPDFName,\n\tdisplay.selectors.getTotalPages,\n\tdisplay.selectors.getCurrentPage,\n\triver.selectors.getRiverMakeUps,\n\triver.selectors.getActiveRiverMakeUpID,\n\triver.selectors.getLastRiverIDNumber,\n\tcards.selectors.getCards,\n\tcards.selectors.getLastCardIDNumber,\n\t(pdfName, totalPages, currentPage, riverMakeUps, activeRiverMakeUpID, lastRiverIDNumber, cards, lastCardIDNumber) => {\n\t\treturn {\n\t\t\tname: pdfName as string,\n\t\t\ttotalPages,\n\t\t\tcurrentPage,\n\t\t\triverMakeUps,\n\t\t\tactiveRiverMakeUpID,\n\t\t\tlastRiverIDNumber,\n\t\t\tcards,\n\t\t\tlastCardIDNumber,\n\t\t};\n\t}\n);\n\nexport const getAll = (state: any): Model => state[NAME];\n\nexport const getLastUndoableAction = createSelector(getAll, (state) => state.present);\n\nexport const getLastRedoableAction = createSelector(getAll, (state) =>\n\tstate.future.length > 0 ? state.future[0] : null\n);\n","import { NAME } from \"./constants\";\n\nexport const REDO_ACTION_HISTORY = NAME + \"/REDO_ACTION_HISTORY\";\nexport const UNDO_ACTION_HISTORY = NAME + \"/UNDO_ACTION_HISTORY\";\nexport const REMOVE_ACTION_HISTORY = NAME + \"/REMOVE_ACTION_HISTORY\";\n","import { Dispatch } from \"redux\";\nimport display from \"../display\";\nimport { ActionCreators } from \"redux-undo\";\nimport db from \"../db\";\nimport { collectCurrentDBData } from \"./selectors\";\nimport { DocumentData } from \"../db/model\";\nimport * as t from \"./actionTypes\";\nimport { ClayMemoryPayloadAction } from \"../../shared/utils\";\n\nexport const archiveCurrentDBData = () => {\n\treturn (dispatch: Dispatch, getState: Function) => {\n\t\tconst state = getState();\n\t\tconst currentPDFName = display.selectors.getPDFName(state);\n\n\t\tif (currentPDFName !== undefined) {\n\t\t\tconst dbData = collectCurrentDBData(state) as DocumentData;\n\t\t\tdispatch(db.actions.archiveDBData(dbData));\n\t\t}\n\t};\n};\n\nconst fileDownload = require(\"js-file-download\");\nexport const downloadDBData = () => {\n\treturn (dispatch: any, getState: Function) => {\n\t\t//actualize the db before downloading\n\t\tdispatch(archiveCurrentDBData());\n\n\t\tconst documentDataSets = db.selectors.getDocumentDataSets(getState());\n\t\tconst localString = new Date().toLocaleString();\n\t\tfileDownload(JSON.stringify(documentDataSets), localString + \" ClayMemory.txt\");\n\t};\n};\n\nexport const undoActionHistory = (action: string): ClayMemoryPayloadAction => {\n\treturn { type: t.UNDO_ACTION_HISTORY, payload: action };\n};\n\nexport const redoActionHistory = (action: string): ClayMemoryPayloadAction => {\n\treturn { type: t.REDO_ACTION_HISTORY, payload: action };\n};\n\nexport const removeActionHistory = (dispatch: Dispatch) => {\n\tdispatch(ActionCreators.clearHistory());\n\tdispatch({ type: t.REMOVE_ACTION_HISTORY });\n};\n\nexport const changeDocument = (pdf: File) => {\n\treturn (dispatch: Dispatch, getState: Function) => {\n\t\tconst newPDFName = pdf.name;\n\n\t\tconst state = getState();\n\t\tconst currentPDFName = display.selectors.getPDFName(state);\n\n\t\tconst documentDB = db.selectors.getAll(state);\n\n\t\t// save current data only if pdf has been uploaded / there is an active document\n\t\tif (currentPDFName !== undefined) {\n\t\t\tconst dbData = collectCurrentDBData(state) as DocumentData;\n\t\t\tdispatch(db.actions.archiveDBData(dbData));\n\t\t}\n\n\t\tdispatch(display.actions.pdfUpload(pdf));\n\n\t\t// if the uploaded pdf is the same as the active one, then we just reloaded the app (lost the pdf)\n\t\t// and dont need load data (loading data would lead to overwrite because of the syncing order)\n\t\t//TODO: make the sync between documentDB and active document more explicit, right now I just sync when a PDF is uploaded\n\t\tif (newPDFName === currentPDFName) {\n\t\t\treturn;\n\t\t}\n\t\t// load new data or reset\n\t\tconst newDocumentData = documentDB[newPDFName];\n\t\tif (newDocumentData) {\n\t\t\tdispatch(db.actions.changeDocument(newDocumentData));\n\t\t} else {\n\t\t\tdispatch(db.actions.changeDocument());\n\t\t}\n\n\t\t// no undo-redo across documents\n\t\tremoveActionHistory(dispatch);\n\t};\n};\n\nexport const loadSavedDocument = (document: string) => {\n\treturn (dispatch: Dispatch, getState: Function) => {\n\t\tconst state = getState();\n\t\tconst currentPDFName = display.selectors.getPDFName(state);\n\n\t\tconst documentDB = db.selectors.getAll(state);\n\n\t\t// save current data only if pdf has been uploaded / there is an active document\n\t\tif (currentPDFName !== undefined) {\n\t\t\tconst dbData = collectCurrentDBData(state) as DocumentData;\n\t\t\tdispatch(db.actions.archiveDBData(dbData));\n\t\t}\n\n\t\t// load new data\n\t\tconst newDocumentData = documentDB[document];\n\t\tdispatch(db.actions.changeDocument(newDocumentData));\n\n\t\t// no undo-redo across documents\n\t\tremoveActionHistory(dispatch);\n\t};\n};\n\nexport const deleteDocument = (document: string) => {\n\treturn (dispatch: Dispatch, getState: Function) => {\n\t\tconst state = getState();\n\t\tconst activeDocument = display.selectors.getPDFName(state);\n\t\tif (activeDocument && activeDocument === document) {\n\t\t\t// reset data\n\t\t\tdispatch(db.actions.changeDocument());\n\n\t\t\t// keeping the undo history leads to weird edge cases and makes no sense\n\t\t\tremoveActionHistory(dispatch);\n\t\t}\n\n\t\t// note: no undo of this\n\t\tdispatch(db.actions.deleteDocumentDataSet(document));\n\t};\n};\n","import { useDispatch } from \"react-redux\";\nimport React, { useState } from \"react\";\nimport {\n\tIconButton,\n\tTooltip,\n\tDialog,\n\tDialogTitle,\n\tDialogContent,\n\tDialogContentText,\n\tDialogActions,\n\tButton,\n} from \"@material-ui/core\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport text from \"../../../text\";\nimport { deleteDocument } from \"../../actions\";\n\nconst DeleteDocumentDialogAlert = ({\n\tdocument,\n\thandleClose,\n\topen,\n}: {\n\tdocument: string;\n\thandleClose: () => void;\n\topen: boolean;\n}) => {\n\tconst dispatch = useDispatch();\n\n\treturn (\n\t\t<Dialog\n\t\t\topen={open}\n\t\t\tonClose={handleClose}\n\t\t\taria-labelledby=\"alert-dialog-title\"\n\t\t\taria-describedby=\"alert-dialog-description\"\n\t\t>\n\t\t\t<DialogTitle id=\"alert-dialog-title\">{\"Delete \" + document + \" and all associated card data?\"}</DialogTitle>\n\t\t\t<DialogContent>\n\t\t\t\t<DialogContentText id=\"alert-dialog-description\">This change can not be undone.</DialogContentText>\n\t\t\t</DialogContent>\n\t\t\t<DialogActions>\n\t\t\t\t<Button onClick={handleClose} color=\"primary\">\n\t\t\t\t\tAbort\n\t\t\t\t</Button>\n\t\t\t\t<Button\n\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\tdispatch(deleteDocument(document));\n\t\t\t\t\t\thandleClose();\n\t\t\t\t\t}}\n\t\t\t\t\tcolor=\"primary\"\n\t\t\t\t\tautoFocus\n\t\t\t\t>\n\t\t\t\t\tDelete document and associated card data\n\t\t\t\t</Button>\n\t\t\t</DialogActions>\n\t\t</Dialog>\n\t);\n};\n\n//TODO: deleting the active document leads only to reset it, not really delete it\nexport const DeleteDocumentButton = ({ document }: { document: string }) => {\n\tconst [open, setOpen] = useState(false);\n\n\tconst handleClose = () => {\n\t\tsetOpen(false);\n\t};\n\treturn (\n\t\t<div>\n\t\t\t<Tooltip\n\t\t\t\ttitle={text.constants.deleteDocumentTooltip}\n\t\t\t\tenterDelay={text.constants.defaultEnterDelay}\n\t\t\t\tenterNextDelay={text.constants.defaultEnterNextDelay}\n\t\t\t>\n\t\t\t\t<IconButton\n\t\t\t\t\ttype=\"button\"\n\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\tsetOpen(true);\n\t\t\t\t\t}}\n\t\t\t\t>\n\t\t\t\t\t<DeleteIcon fontSize=\"small\"></DeleteIcon>\n\t\t\t\t</IconButton>\n\t\t\t</Tooltip>\n\t\t\t<DeleteDocumentDialogAlert document={document} open={open} handleClose={handleClose}></DeleteDocumentDialogAlert>\n\t\t</div>\n\t);\n};\n","import { useSelector, useDispatch } from \"react-redux\";\nimport React, { ChangeEvent, Fragment, useRef, MutableRefObject } from \"react\";\nimport { MenuItem, Button } from \"@material-ui/core\";\nimport display from \"../../../display\";\nimport db from \"../../../db\";\nimport { DocumentData } from \"../../../db/model\";\nimport PublishIcon from \"@material-ui/icons/Publish\";\n\nexport const InputDataSets = ({ handleClose, label }: any) => {\n\tconst dispatch = useDispatch();\n\n\tconst activeDocument = useSelector(display.selectors.getPDFName);\n\n\tconst ref: MutableRefObject<null | HTMLInputElement> = useRef(null);\n\n\treturn (\n\t\t<Fragment>\n\t\t\t<MenuItem\n\t\t\t\tonClick={() => {\n\t\t\t\t\t(ref.current as HTMLInputElement).click();\n\t\t\t\t}}\n\t\t\t>\n\t\t\t\t<Button variant=\"contained\" color=\"primary\" disableElevation startIcon={<PublishIcon></PublishIcon>}>\n\t\t\t\t\t{label}\n\t\t\t\t</Button>\n\t\t\t</MenuItem>\n\t\t\t<input\n\t\t\t\tref={ref}\n\t\t\t\tstyle={{ display: \"none\" }}\n\t\t\t\tonChange={(event: ChangeEvent<HTMLInputElement>) => {\n\t\t\t\t\t// fun fact: uploading a file with the same file-name does not trigger this event\n\t\t\t\t\tconst files = event.target.files;\n\t\t\t\t\tconst file = files ? files[0] : null;\n\t\t\t\t\tif (file) {\n\t\t\t\t\t\tconst reader = new FileReader();\n\t\t\t\t\t\treader.readAsText(file);\n\t\t\t\t\t\treader.onload = () => {\n\t\t\t\t\t\t\t//TODO: sanitize, escape os new line difference, prepare multimedia cards\n\t\t\t\t\t\t\t//TODO: merge same name-pdfs and think about collision in general\n\t\t\t\t\t\t\t//TODO: merge uploaded state with current-one and dont overwrite\n\t\t\t\t\t\t\tconst uploadedDataSets = JSON.parse(reader.result as string);\n\t\t\t\t\t\t\t// if the uploaded dataset corresponds to the current document, overwrite current with uploaded\n\t\t\t\t\t\t\tconst foundDataSet = (uploadedDataSets as DocumentData[]).find(\n\t\t\t\t\t\t\t\t(dbData) => dbData.name === activeDocument\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\tdispatch(db.actions.loadDocumentDataSets(uploadedDataSets, foundDataSet));\n\t\t\t\t\t\t};\n\t\t\t\t\t}\n\t\t\t\t\thandleClose();\n\t\t\t\t}}\n\t\t\t\ttype=\"file\"\n\t\t\t\taccept=\".txt\"\n\t\t\t/>\n\t\t</Fragment>\n\t);\n};\n","import { useDispatch } from \"react-redux\";\nimport React, { ChangeEvent, Fragment, useRef, MutableRefObject } from \"react\";\nimport { MenuItem, Button } from \"@material-ui/core\";\nimport { changeDocument } from \"../../actions\";\nimport InsertDriveFileIcon from \"@material-ui/icons/InsertDriveFile\";\n//TODO: have way to merge two document-workspaces\nexport const InputDocument = ({ handleClose, label }: any) => {\n\tconst dispatch = useDispatch();\n\n\tconst ref: MutableRefObject<null | HTMLInputElement> = useRef(null);\n\n\treturn (\n\t\t<Fragment>\n\t\t\t<MenuItem\n\t\t\t\tonClick={() => {\n\t\t\t\t\t(ref.current as HTMLInputElement).click();\n\t\t\t\t}}\n\t\t\t>\n\t\t\t\t<Button\n\t\t\t\t\tvariant=\"contained\"\n\t\t\t\t\tcolor=\"primary\"\n\t\t\t\t\tdisableElevation\n\t\t\t\t\tstartIcon={<InsertDriveFileIcon></InsertDriveFileIcon>}\n\t\t\t\t>\n\t\t\t\t\t{label}\n\t\t\t\t</Button>\n\t\t\t</MenuItem>\n\t\t\t<input\n\t\t\t\tref={ref}\n\t\t\t\tstyle={{ display: \"none\" }}\n\t\t\t\tonChange={(event: ChangeEvent<HTMLInputElement>) => {\n\t\t\t\t\tconst files = event.target.files;\n\t\t\t\t\tconst pdf = files ? files[0] : null;\n\t\t\t\t\tif (pdf) {\n\t\t\t\t\t\tdispatch(changeDocument(pdf));\n\t\t\t\t\t}\n\t\t\t\t\thandleClose();\n\t\t\t\t}}\n\t\t\t\ttype=\"file\"\n\t\t\t\taccept=\".pdf\"\n\t\t\t/>\n\t\t</Fragment>\n\t);\n};\n","import { useDispatch } from \"react-redux\";\nimport React from \"react\";\nimport { IconButton, Tooltip } from \"@material-ui/core\";\nimport ImportContactsIcon from \"@material-ui/icons/ImportContacts\";\nimport { loadSavedDocument } from \"../../actions\";\nimport text from \"../../../text\";\nexport const LoadDocumentDataButton = ({ document }: { document: string }) => {\n\tconst dispatch = useDispatch();\n\treturn (\n\t\t<Tooltip\n\t\t\ttitle={text.constants.loadSavedDocumentTooltip}\n\t\t\tenterDelay={text.constants.defaultEnterDelay}\n\t\t\tenterNextDelay={text.constants.defaultEnterNextDelay}\n\t\t>\n\t\t\t<IconButton\n\t\t\t\ttype=\"button\"\n\t\t\t\tonClick={() => {\n\t\t\t\t\tdispatch(loadSavedDocument(document));\n\t\t\t\t}}\n\t\t\t>\n\t\t\t\t<ImportContactsIcon fontSize=\"small\"></ImportContactsIcon>\n\t\t\t</IconButton>\n\t\t</Tooltip>\n\t);\n};\n","import React from \"react\";\nimport { Divider, Card, Grid } from \"@material-ui/core\";\nimport { DeleteDocumentButton } from \"./DeleteDocumentButton\";\nimport { LoadDocumentDataButton } from \"./LoadDocumentDataButton\";\n\nconst DocumentOptionItemButtonRow = ({ document }: { document: string }) => {\n\treturn (\n\t\t<Grid container direction=\"row\">\n\t\t\t<Grid item>\n\t\t\t\t<LoadDocumentDataButton document={document}></LoadDocumentDataButton>\n\t\t\t</Grid>\n\n\t\t\t<Grid item>\n\t\t\t\t<Divider orientation=\"vertical\"></Divider>\n\t\t\t</Grid>\n\n\t\t\t<Grid item>\n\t\t\t\t<DeleteDocumentButton document={document}></DeleteDocumentButton>\n\t\t\t</Grid>\n\t\t</Grid>\n\t);\n};\n\nexport const DocumentOptionItem = ({ document }: { document: string }) => {\n\treturn (\n\t\t<Grid container direction=\"row\" justify=\"space-between\" alignItems=\"center\" spacing={1}>\n\t\t\t<Grid item>{document.replace(\".pdf\", \"\")}</Grid>\n\n\t\t\t<Grid item>\n\t\t\t\t<Card variant=\"outlined\">\n\t\t\t\t\t<DocumentOptionItemButtonRow document={document}></DocumentOptionItemButtonRow>\n\t\t\t\t</Card>\n\t\t\t</Grid>\n\t\t</Grid>\n\t);\n};\n","import { useSelector, useDispatch } from \"react-redux\";\nimport React from \"react\";\nimport { Divider, Menu, MenuItem, IconButton, Typography, Card, Button, Grid } from \"@material-ui/core\";\nimport { downloadDBData } from \"../../actions\";\nimport MoreVertIcon from \"@material-ui/icons/MoreVert\";\nimport display from \"../../../display\";\nimport db from \"../../../db\";\nimport GetAppIcon from \"@material-ui/icons/GetApp\";\nimport { DeleteDocumentButton } from \"./DeleteDocumentButton\";\nimport text from \"../../../text\";\nimport { incrementer } from \"../../../../shared/utils\";\nimport { InputDataSets } from \"./InputDataSets\";\nimport { InputDocument } from \"./InputDocument\";\nimport { DocumentOptionItem } from \"./DocumentOptionItem\";\n\nconst ActiveDocumentOptionItem = ({ document }: { document: string }) => {\n\treturn (\n\t\t<Grid container direction=\"row\" justify=\"space-between\" alignItems=\"center\" spacing={1}>\n\t\t\t<Grid item>{document.replace(\".pdf\", \"\")}</Grid>\n\n\t\t\t<Grid item>\n\t\t\t\t<Card variant=\"outlined\">\n\t\t\t\t\t<DeleteDocumentButton document={document}></DeleteDocumentButton>\n\t\t\t\t</Card>\n\t\t\t</Grid>\n\t\t</Grid>\n\t);\n};\n\nexport const Options = () => {\n\tconst activeDocument = useSelector(display.selectors.getPDFName);\n\tconst documents = useSelector(db.selectors.getDocumentNames).filter((doc) => doc !== activeDocument);\n\n\tconst [anchorEl, setAnchorEl] = React.useState<null | HTMLElement>(null);\n\n\tconst handleClick = (event: React.MouseEvent<HTMLButtonElement>) => {\n\t\tsetAnchorEl(event.currentTarget);\n\t};\n\n\tconst handleClose = () => {\n\t\tsetAnchorEl(null);\n\t};\n\n\tconst dispatch = useDispatch();\n\n\tconst increment = incrementer();\n\n\treturn (\n\t\t<div>\n\t\t\t<IconButton type=\"button\" onClick={handleClick}>\n\t\t\t\t<MoreVertIcon></MoreVertIcon>\n\t\t\t</IconButton>\n\t\t\t<Menu\n\t\t\t\tid=\"simple-menu\"\n\t\t\t\tanchorEl={anchorEl}\n\t\t\t\tkeepMounted\n\t\t\t\topen={Boolean(anchorEl)}\n\t\t\t\tonClose={handleClose}\n\t\t\t\tMenuListProps={{ style: { paddingLeft: \"8px\", paddingRight: \"8px\" } }}\n\t\t\t>\n\t\t\t\t{activeDocument && [\n\t\t\t\t\t<Typography key={increment()} component={\"span\"} variant=\"h6\">\n\t\t\t\t\t\t{text.constants.activeDocumentText}\n\t\t\t\t\t</Typography>,\n\t\t\t\t\t<ActiveDocumentOptionItem key={increment()} document={activeDocument}></ActiveDocumentOptionItem>,\n\t\t\t\t\t<Divider key={increment()} style={{ marginTop: \"6px\" }}></Divider>,\n\t\t\t\t]}\n\t\t\t\t{documents.length > 0 && [\n\t\t\t\t\t<Typography key={increment()} component={\"span\"} variant=\"h6\">\n\t\t\t\t\t\t{text.constants.existingDataText}\n\t\t\t\t\t</Typography>,\n\t\t\t\t\t<Typography key={increment()} component={\"span\"}>\n\t\t\t\t\t\t<ul style={{ listStyleType: \"square\" }}>\n\t\t\t\t\t\t\t{documents.map((document) =>\n\t\t\t\t\t\t\t\tdocument ? (\n\t\t\t\t\t\t\t\t\t<li key={increment()}>\n\t\t\t\t\t\t\t\t\t\t<DocumentOptionItem document={document} key={increment()}></DocumentOptionItem>\n\t\t\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t\t\t) : null\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t</ul>\n\t\t\t\t\t</Typography>,\n\t\t\t\t\t<Divider key={increment()} style={{ marginTop: \"6px\" }} />,\n\t\t\t\t]}\n\t\t\t\t<InputDocument handleClose={handleClose} label={\"Load document\"}></InputDocument>\n\t\t\t\t<Divider />\n\t\t\t\t<MenuItem\n\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\tdispatch(downloadDBData());\n\t\t\t\t\t\thandleClose();\n\t\t\t\t\t}}\n\t\t\t\t>\n\t\t\t\t\t<Button variant=\"contained\" color=\"primary\" disableElevation startIcon={<GetAppIcon></GetAppIcon>}>\n\t\t\t\t\t\t{text.constants.downloadDatasetsText}\n\t\t\t\t\t</Button>\n\t\t\t\t</MenuItem>\n\t\t\t\t<Divider />\n\t\t\t\t<InputDataSets handleClose={handleClose} label={text.constants.uploadDatasetsText}></InputDataSets>\n\t\t\t</Menu>\n\t\t</div>\n\t);\n};\n","import React, { useState } from \"react\";\nimport SearchBar from \"material-ui-search-bar\";\nimport river from \"../../river\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Grid, Select } from \"@material-ui/core\";\nimport display from \"../../display\";\n\n//TODO: react-pdf alignment is broken for some pdfs and generally for non-body text,\n// seems to be connected to choosing the wrong font\n// font is chosen per page not per item (e.g. body-font for heading/cursive)\n// needs to be fixed before making search\n// otherwise coloring findings not possible / good enough\n\n//TODO: make search for PDF (right now this would need some work to find the correct text-node and partially color it)\n// https://github.com/wojtekmaj/react-pdf/issues/212\n// counter of found words\n// count also in PDF\n// PDFPageProxy\n// getTextContent\n// if not rendered\n// count via Proxy\n// if rendered count via CustomRenderer\n// two dicts to hold which one\n// make window with next/last found\n// current renderer: multiline matches is not support / matches that cross textItems\n// strg +f should jump to the searchbox? Only if I replace the search fully\n// upper / lower case\n\nexport const ClayMemorySearchBar = () => {\n\tconst dispatch = useDispatch();\n\n\tconst contentString = useSelector(river.selectors.getRiverContentFilter);\n\n\tconst [state, setState] = useState(contentString);\n\n\tconst [searchFocus, setSearchFocus] = useState(\"cards\");\n\n\tconst onChangeCards = (newValue: string) => {\n\t\t// auto-reset on empty\n\t\tif (newValue === \"\") dispatch(river.actions.resetContentFilter());\n\t\tsetState(newValue);\n\t};\n\tconst onCancelSearchCards = () => {\n\t\tdispatch(river.actions.resetContentFilter());\n\t};\n\tconst onRequestSearchCards = () => dispatch(river.actions.setContentFilter(state));\n\n\tconst onChangeDocument = (newValue: string) => {\n\t\t// auto-reset on empty\n\t\tif (newValue === \"\") dispatch(display.actions.resetDocumentSearch());\n\t\tsetState(newValue);\n\t};\n\tconst onCancelSearchDocument = () => {\n\t\tdispatch(display.actions.resetDocumentSearch());\n\t};\n\tconst onRequestSearchDocument = () => dispatch(display.actions.setDocumentSearch(state));\n\n\tconst onChange = searchFocus === \"cards\" ? onChangeCards : onChangeDocument;\n\tconst onCancelSearch = searchFocus === \"cards\" ? onCancelSearchCards : onCancelSearchDocument;\n\tconst onRequestSearch = searchFocus === \"cards\" ? onRequestSearchCards : onRequestSearchDocument;\n\n\tconst chooseFocus = (chosenFocus: string) => {\n\t\tsetSearchFocus(chosenFocus);\n\t\tif (chosenFocus === \"cards\") {\n\t\t\tonCancelSearchDocument();\n\t\t} else {\n\t\t\tonCancelSearchCards();\n\t\t}\n\t\tsetState(\"\");\n\t};\n\n\t//TODO: search in other rivers/same river when composing to show similar cards (like in the Anki Addon)\n\treturn (\n\t\t<Grid container direction=\"row\" alignItems=\"center\" spacing={1}>\n\t\t\t{/* <Grid item>\n\t\t\t\t<Select\n\t\t\t\t\tvariant=\"outlined\"\n\t\t\t\t\tcolor=\"secondary\"\n\t\t\t\t\tnative\n\t\t\t\t\tvalue={searchFocus === \"cards\" ? \"Filter cards\" : \"Search document\"}\n\t\t\t\t\tonChange={(\n\t\t\t\t\t\tevent: React.ChangeEvent<{\n\t\t\t\t\t\t\tname?: string | undefined;\n\t\t\t\t\t\t\tvalue: unknown;\n\t\t\t\t\t\t}>\n\t\t\t\t\t) => {\n\t\t\t\t\t\tchooseFocus(event.target.value === \"Search document\" ? \"document\" : \"cards\");\n\t\t\t\t\t}}\n\t\t\t\t>\n\t\t\t\t\t<option>Filter cards</option>\n\t\t\t\t\t<option>Search document</option>\n\t\t\t\t</Select>\n\t\t\t</Grid> */}\n\t\t\t<Grid item>\n\t\t\t\t<SearchBar\n\t\t\t\t\tvalue={state}\n\t\t\t\t\tplaceholder={searchFocus === \"cards\" ? \"Filter cards\" : \"Search document\"}\n\t\t\t\t\tonChange={onChange}\n\t\t\t\t\tonCancelSearch={onCancelSearch}\n\t\t\t\t\tonRequestSearch={onRequestSearch}\n\t\t\t\t\tcancelOnEscape={true}\n\t\t\t\t/>\n\t\t\t</Grid>\n\t\t</Grid>\n\t);\n};\n","import React from \"react\";\nimport { IconButton, Card, Divider, Grid, Tooltip } from \"@material-ui/core\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport UndoIcon from \"@material-ui/icons/Undo\";\nimport RedoIcon from \"@material-ui/icons/Redo\";\nimport text from \"../../text\";\nimport { getLastUndoableAction, getLastRedoableAction } from \"../selectors\";\nimport { redoActionHistory, undoActionHistory } from \"../actions\";\n\n// we support undo/redo instead of lengthy confirmation (see The Humane Interface)\nconst UndoButton = () => {\n\tconst dispatch = useDispatch();\n\tconst lastUndoableAction = useSelector(getLastUndoableAction);\n\t//tooltip needs non-disabled child component\n\treturn (\n\t\t<Tooltip\n\t\t\ttitle={text.constants.undoTooltip}\n\t\t\tenterDelay={text.constants.defaultEnterDelay}\n\t\t\tenterNextDelay={text.constants.defaultEnterNextDelay}\n\t\t>\n\t\t\t<span>\n\t\t\t\t<IconButton\n\t\t\t\t\ttype=\"button\"\n\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\tdispatch(undoActionHistory(lastUndoableAction as string));\n\t\t\t\t\t}}\n\t\t\t\t\tdisabled={!!!lastUndoableAction}\n\t\t\t\t>\n\t\t\t\t\t<UndoIcon></UndoIcon>\n\t\t\t\t</IconButton>\n\t\t\t</span>\n\t\t</Tooltip>\n\t);\n};\nconst RedoButton = () => {\n\tconst dispatch = useDispatch();\n\tconst lastRedoableAction = useSelector(getLastRedoableAction);\n\treturn (\n\t\t<Tooltip\n\t\t\ttitle={text.constants.redoTooltip}\n\t\t\tenterDelay={text.constants.defaultEnterDelay}\n\t\t\tenterNextDelay={text.constants.defaultEnterNextDelay}\n\t\t>\n\t\t\t<span>\n\t\t\t\t<IconButton\n\t\t\t\t\ttype=\"button\"\n\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\tdispatch(redoActionHistory(lastRedoableAction as string));\n\t\t\t\t\t}}\n\t\t\t\t\tdisabled={!!!lastRedoableAction}\n\t\t\t\t>\n\t\t\t\t\t<RedoIcon></RedoIcon>\n\t\t\t\t</IconButton>\n\t\t\t</span>\n\t\t</Tooltip>\n\t);\n};\n\nexport const UndoRedoCard = () => {\n\treturn (\n\t\t<Card variant=\"outlined\">\n\t\t\t<Grid container direction=\"row\">\n\t\t\t\t<Grid item>\n\t\t\t\t\t<UndoButton></UndoButton>\n\t\t\t\t</Grid>\n\t\t\t\t<Grid item>\n\t\t\t\t\t<Divider orientation=\"vertical\"></Divider>\n\t\t\t\t</Grid>\n\t\t\t\t<Grid item>\n\t\t\t\t\t<RedoButton></RedoButton>\n\t\t\t\t</Grid>\n\t\t\t</Grid>\n\t\t</Card>\n\t);\n};\n","import display from \"../../display\";\nimport river from \"../../river\";\nimport React from \"react\";\nimport { IconButton, Menu, Typography, Grid, Card, Button, FormControlLabel } from \"@material-ui/core\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport VisibilityIcon from \"@material-ui/icons/Visibility\";\nimport { GreenCheckbox } from \"../../../shared/GreenCheckbox\";\n\nconst ShowRiverCheckbox = () => {\n\tconst dispatch = useDispatch();\n\tconst riverShowState = useSelector(river.selectors.getRiverShowState);\n\n\treturn (\n\t\t<Button\n\t\t\tstartIcon={\n\t\t\t\t<FormControlLabel\n\t\t\t\t\tlabel=\"River\"\n\t\t\t\t\tcontrol={<GreenCheckbox checked={riverShowState === \"SHOW\"} />}\n\t\t\t\t></FormControlLabel>\n\t\t\t}\n\t\t\tvariant=\"contained\"\n\t\t\tcolor=\"primary\"\n\t\t\tonClick={() => {\n\t\t\t\tdispatch(river.actions.toggleRiverShowState());\n\t\t\t}}\n\t\t></Button>\n\t);\n};\n\nconst ShowMaterialCheckbox = () => {\n\tconst dispatch = useDispatch();\n\tconst displayShowState = useSelector(display.selectors.getDisplayStatus);\n\n\treturn (\n\t\t<Button\n\t\t\tstartIcon={\n\t\t\t\t<FormControlLabel\n\t\t\t\t\tlabel=\"Material\"\n\t\t\t\t\tcontrol={<GreenCheckbox checked={displayShowState === \"SHOW\"} />}\n\t\t\t\t></FormControlLabel>\n\t\t\t}\n\t\t\tvariant=\"contained\"\n\t\t\tcolor=\"primary\"\n\t\t\tonClick={() => {\n\t\t\t\tdispatch(display.actions.toggleDisplayState());\n\t\t\t}}\n\t\t></Button>\n\t);\n};\n\nexport const ShowHideButton = () => {\n\tconst [anchorEl, setAnchorEl] = React.useState<null | HTMLElement>(null);\n\n\tconst handleClick = (event: React.MouseEvent<HTMLButtonElement>) => {\n\t\tsetAnchorEl(event.currentTarget);\n\t};\n\n\tconst handleClose = () => {\n\t\tsetAnchorEl(null);\n\t};\n\n\treturn (\n\t\t<div>\n\t\t\t<IconButton type=\"button\" onClick={handleClick}>\n\t\t\t\t<VisibilityIcon></VisibilityIcon>\n\t\t\t</IconButton>\n\t\t\t<Menu\n\t\t\t\tanchorEl={anchorEl}\n\t\t\t\tkeepMounted\n\t\t\t\topen={Boolean(anchorEl)}\n\t\t\t\tonClose={handleClose}\n\t\t\t\tMenuListProps={{ style: { paddingLeft: \"8px\", paddingRight: \"8px\" } }}\n\t\t\t>\n\t\t\t\t<Typography variant=\"h6\">Show:</Typography>\n\t\t\t\t<Grid container direction=\"row\" justify=\"space-between\" spacing={1}>\n\t\t\t\t\t<Grid item>\n\t\t\t\t\t\t<Card variant=\"outlined\" style={{ paddingLeft: \"4px\", paddingRight: \"4px\" }}>\n\t\t\t\t\t\t\t<river.components.RiverContentFormGroup></river.components.RiverContentFormGroup>\n\t\t\t\t\t\t</Card>\n\t\t\t\t\t</Grid>\n\n\t\t\t\t\t<Grid item>\n\t\t\t\t\t\t<Card variant=\"outlined\" style={{ padding: \"4px\" }}>\n\t\t\t\t\t\t\t<Grid container direction=\"column\" spacing={1}>\n\t\t\t\t\t\t\t\t<Grid item>\n\t\t\t\t\t\t\t\t\t<ShowRiverCheckbox></ShowRiverCheckbox>\n\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t\t<Grid item>\n\t\t\t\t\t\t\t\t\t<ShowMaterialCheckbox></ShowMaterialCheckbox>\n\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t</Card>\n\t\t\t\t\t</Grid>\n\t\t\t\t</Grid>\n\t\t\t</Menu>\n\t\t</div>\n\t);\n};\n","import display from \"../../display\";\nimport React, { useLayoutEffect, useRef } from \"react\";\nimport { AppBar, Toolbar, Grid, Typography } from \"@material-ui/core\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Options } from \"./Options/Options\";\nimport { ClayMemorySearchBar } from \"./ClayMemorySearchBar\";\nimport { UndoRedoCard } from \"./UndoRedoButtons\";\nimport { ShowHideButton } from \"./ShowHideButton\";\n\n//TODO: download/load csv for Anki\nexport const ControlBar = () => {\n\tconst materialName = useSelector(display.selectors.getPDFName);\n\tconst offset = useSelector(display.selectors.getTopOffset);\n\tconst ref = useRef<null | HTMLDivElement>(null);\n\n\tconst dispatch = useDispatch();\n\n\tuseLayoutEffect(() => {\n\t\tif (ref.current) {\n\t\t\tconst currentBottom = ref.current.getBoundingClientRect().bottom;\n\t\t\tif (currentBottom !== offset) dispatch(display.actions.setTopOffset(currentBottom));\n\t\t}\n\t}, [ref, dispatch, offset]);\n\n\treturn (\n\t\t<display.components.PageKeyboardControl>\n\t\t\t<AppBar ref={ref} position=\"sticky\">\n\t\t\t\t<Toolbar variant=\"regular\" disableGutters>\n\t\t\t\t\t<Grid container direction=\"row\" alignItems=\"center\" justify=\"space-between\">\n\t\t\t\t\t\t<Grid item xs={6}>\n\t\t\t\t\t\t\t<Grid container direction=\"row\" alignItems=\"center\" spacing={1} style={{ paddingLeft: \"4px\" }}>\n\t\t\t\t\t\t\t\t<Grid item style={{ maxWidth: \"15%\" }}>\n\t\t\t\t\t\t\t\t\t<display.components.PageChooser></display.components.PageChooser>\n\t\t\t\t\t\t\t\t</Grid>\n\n\t\t\t\t\t\t\t\t<Grid item>\n\t\t\t\t\t\t\t\t\t<display.components.PageNavigation></display.components.PageNavigation>\n\t\t\t\t\t\t\t\t</Grid>\n\n\t\t\t\t\t\t\t\t<Grid item>\n\t\t\t\t\t\t\t\t\t<UndoRedoCard></UndoRedoCard>\n\t\t\t\t\t\t\t\t</Grid>\n\n\t\t\t\t\t\t\t\t<Grid item>\n\t\t\t\t\t\t\t\t\t<display.components.ViewTabs></display.components.ViewTabs>\n\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t</Grid>\n\n\t\t\t\t\t\t<Grid item xs={2}>\n\t\t\t\t\t\t\t<Grid container justify=\"center\">\n\t\t\t\t\t\t\t\t<Grid item style={{ overflowX: \"auto\" }}>\n\t\t\t\t\t\t\t\t\t<Typography variant=\"subtitle1\">{materialName?.replace(\".pdf\", \"\")}</Typography>\n\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t</Grid>\n\n\t\t\t\t\t\t<Grid item xs={4}>\n\t\t\t\t\t\t\t<Grid container direction=\"row\" justify=\"flex-end\" alignItems=\"center\">\n\t\t\t\t\t\t\t\t<Grid item>\n\t\t\t\t\t\t\t\t\t<ClayMemorySearchBar></ClayMemorySearchBar>\n\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t\t<Grid item>\n\t\t\t\t\t\t\t\t\t<ShowHideButton></ShowHideButton>\n\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t\t<Grid item>\n\t\t\t\t\t\t\t\t\t<Options></Options>\n\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t</Grid>\n\t\t\t\t\t</Grid>\n\t\t\t\t</Toolbar>\n\t\t\t</AppBar>\n\t\t</display.components.PageKeyboardControl>\n\t);\n};\n","import { Reducer } from \"react\";\nimport { ActionCreators } from \"redux-undo\";\nimport cards from \"../cards\";\nimport db from \"../db\";\nimport selection from \"../selection\";\nimport { REDO_ACTION_HISTORY, UNDO_ACTION_HISTORY } from \"./actionTypes\";\n\nexport const selectionActions = [selection.actionTypes.SELECTION_GOAL, selection.actionTypes.SELECTION_SOURCE];\nexport const riverActions = [\n\tcards.actionTypes.CARD_PUSH,\n\tcards.actionTypes.CARD_REMOVE,\n\tdb.actionTypes.LOAD_DOCUMENT_DATA_SETS,\n];\nexport const cardActions = [\n\tdb.actionTypes.LOAD_DOCUMENT_DATA_SETS,\n\tcards.actionTypes.CARD_PUSH,\n\tcards.actionTypes.CARD_REPLACE,\n\tcards.actionTypes.CARD_REMOVE,\n];\nexport const dbActions = [db.actionTypes.LOAD_DOCUMENT_DATA_SETS];\n\nexport const undoableActions = [dbActions, cardActions, riverActions, selectionActions].flat();\n\nexport type Model = { past: string[]; present: string | null; future: string[] };\n\n//TODO: this is NOT bugfree, somehow I got the present to be erased\n// deletion bug? cant undo some deletions?\n\n//TODO: where to put it instead of model?\nexport const undoRedoActionShield = (reducer: Reducer<any, any>, actionList: string[]) => (state: any, action: any) => {\n\tswitch (action.type) {\n\t\tcase UNDO_ACTION_HISTORY:\n\t\t\tif (actionList.includes(action.payload)) {\n\t\t\t\treturn reducer(state, ActionCreators.undo());\n\t\t\t} else {\n\t\t\t\treturn state;\n\t\t\t}\n\t\tcase REDO_ACTION_HISTORY:\n\t\t\tif (actionList.includes(action.payload)) {\n\t\t\t\treturn reducer(state, ActionCreators.redo());\n\t\t\t} else {\n\t\t\t\treturn state;\n\t\t\t}\n\t\tdefault:\n\t\t\treturn reducer(state, action);\n\t}\n};\nexport const selectionShield = (reducer: Reducer<any, any>) => undoRedoActionShield(reducer, selectionActions);\nexport const cardsShield = (reducer: Reducer<any, any>) => undoRedoActionShield(reducer, cardActions);\nexport const riverShield = (reducer: Reducer<any, any>) => undoRedoActionShield(reducer, riverActions);\nexport const dbShield = (reducer: Reducer<any, any>) => undoRedoActionShield(reducer, dbActions);\n","import { ClayMemoryPayloadAction } from \"../../shared/utils\";\nimport * as t from \"./actionTypes\";\nimport { Model, undoableActions } from \"./model\";\n\nconst initialState: Model = {\n\tpast: [],\n\tpresent: null,\n\tfuture: [],\n};\n\n//TODO: need to reset this sometime (same point as with redux-undo history)\n\nconst control = (state = initialState, { type }: ClayMemoryPayloadAction): Model => {\n\tif (undoableActions.includes(type)) {\n\t\t// only keep full history up to 15\n\t\tlet past = state.past.length === 15 ? state.past.slice(1) : state.past;\n\t\treturn { past: state.present ? past.concat(state.present) : past, present: type, future: [] };\n\t}\n\tlet present;\n\tswitch (type) {\n\t\tcase t.UNDO_ACTION_HISTORY:\n\t\t\tpresent = state.past.length > 0 ? state.past[state.past.length - 1] : null;\n\t\t\treturn {\n\t\t\t\tpast: state.past.slice(0, state.past.length - 1),\n\t\t\t\tpresent,\n\t\t\t\tfuture: state.present ? [state.present, ...state.future] : state.future,\n\t\t\t};\n\t\tcase t.REDO_ACTION_HISTORY:\n\t\t\tpresent = state.future.length > 0 ? state.future[0] : null;\n\t\t\treturn {\n\t\t\t\tpast: state.present ? [...state.past, state.present] : state.past,\n\t\t\t\tpresent,\n\t\t\t\tfuture: state.future.slice(1),\n\t\t\t};\n\t\tcase t.REMOVE_ACTION_HISTORY:\n\t\t\treturn initialState;\n\t\tdefault:\n\t\t\treturn state;\n\t}\n};\n\nexport default control;\n","import * as actions from \"./actions\";\nimport * as components from \"./components\";\nimport * as selectors from \"./selectors\";\nimport * as constants from \"./constants\";\nimport * as model from \"./model\";\nimport reducer from \"./reducer\";\n\nexport default { actions, components, selectors, constants, reducer, model };\n","import React from \"react\";\nimport Grid from \"@material-ui/core/Grid\";\nimport control from \"../modules/control\";\nimport selection from \"../modules/selection\";\nimport display from \"../modules/display\";\n\nexport function ReaderScene() {\n\treturn (\n\t\t<div>\n\t\t\t<display.components.HTMLElementMeasurer></display.components.HTMLElementMeasurer>\n\t\t\t<Grid\n\t\t\t\tcontainer\n\t\t\t\tjustify=\"center\"\n\t\t\t\tdirection=\"column\"\n\t\t\t\talignItems=\"stretch\"\n\t\t\t\tstyle={{ height: \"100%\", width: \"100%\" }}\n\t\t\t>\n\t\t\t\t<Grid item>\n\t\t\t\t\t<control.components.ControlBar></control.components.ControlBar>\n\t\t\t\t</Grid>\n\n\t\t\t\t<Grid item>\n\t\t\t\t\t<display.components.Display></display.components.Display>\n\t\t\t\t</Grid>\n\t\t\t</Grid>\n\t\t\t<selection.components.ContextMenu></selection.components.ContextMenu>\n\t\t\t<selection.components.SelectionSnackbar></selection.components.SelectionSnackbar>\n\t\t</div>\n\t);\n}\n","import storage from \"redux-persist/lib/storage\"; // defaults to localStorage for web\nimport { createTransform } from \"redux-persist\";\nimport { DisplayData, DisplayStatus, View } from \"./modules/display/model\";\nimport display from \"./modules/display\";\nimport { SingleOrigin } from \"./modules/cards/model/origin\";\nimport { CardRiverState } from \"./modules/river/model\";\nimport river from \"./modules/river\";\n\n// TODO: undo/redo seems to have some issues after loading? or maybe just my local state? disable for study\n\n// to get the correct object with reselect, I added .present to all getAll that belong do undoable modules\n\n//TODO: find way to save PDF in browser, maybe manually use indexeddb and use that in transform?\n// idea: make store-field pdfAsBase64 and use thunk for async-filling the field, then when reloading, use thunk to format\n// const reader = new FileReaderSync();\n\n// function readFileAsync(file: File) {\n// \treturn new Promise((resolve) => {\n// \t\treader.onload = () => {\n// \t\t\tresolve(reader.result);\n// \t\t};\n// \t\treader.onerror = () => resolve(null);\n\n// \t\treader.readAsDataURL(file);\n// \t});\n// }\n\nconst removeDOMObjectsFromDisplayData = (inboundState: DisplayData) => {\n\tlet pdf = null;\n\t// if (inboundState.pdf) {\n\t// \tpdf = await readFileAsync(inboundState.pdf);\n\t// }\n\tconst result = { ...inboundState, documentRef: null, materialData: null, pdf };\n\treturn result;\n};\n\n//TODO: create persistable type for the state in model\n\nconst addDOMObjectsToDisplayData = (outboundState: {\n\tpdf: null;\n\tpdfName?: string;\n\tdisplayStatus: DisplayStatus;\n\tcurrentPage: number;\n\tscrollToPage: number | null;\n\ttotalPages: number;\n\twindowMeasurements: { width: number; height: number } | null;\n\tspanOrigin: null | SingleOrigin;\n\tdocumentSearch: string;\n\ttopOffset: number;\n\tcurrentView: View;\n}): DisplayData => {\n\treturn {\n\t\t...outboundState,\n\t\tpdf: undefined,\n\t\tspanOrigin: null,\n\t\twindowMeasurements: null,\n\t\tdocumentSearch: \"\",\n\t};\n};\n\nconst displayTransform = createTransform(\n\t(inboundState: DisplayData) => {\n\t\treturn removeDOMObjectsFromDisplayData(inboundState);\n\t},\n\t(outboundState): DisplayData => {\n\t\treturn addDOMObjectsToDisplayData(outboundState);\n\t},\n\t{ whitelist: [display.constants.NAME] }\n);\n\nconst removeContentFilter = (state: CardRiverState): CardRiverState => {\n\treturn { ...state, contentFilter: \"\" };\n};\n\nconst riverTransform = createTransform(\n\t(inboundState: { present: CardRiverState; future: CardRiverState[]; past: CardRiverState[] }) => {\n\t\treturn inboundState;\n\t},\n\t(outboundState): { present: CardRiverState; future: CardRiverState[]; past: CardRiverState[] } => {\n\t\treturn {\n\t\t\tpresent: removeContentFilter(outboundState.present),\n\t\t\tfuture: outboundState.future.map(removeContentFilter),\n\t\t\tpast: outboundState.past.map(removeContentFilter),\n\t\t};\n\t},\n\t{ whitelist: [river.constants.NAME] }\n);\n\nexport const persistConfig = {\n\tkey: \"root\",\n\tstorage,\n\ttransforms: [displayTransform, riverTransform],\n};\n","import { createStore } from \"redux\";\nimport { applyMiddleware } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport { combineReducers } from \"redux\";\nimport river from \"./modules/river\";\nimport display from \"./modules/display\";\nimport cards from \"./modules/cards\";\nimport { persistStore, persistReducer } from \"redux-persist\";\nimport undoable, { includeAction } from \"redux-undo\";\nimport { persistConfig } from \"./persist\";\nimport db from \"./modules/db\";\nimport selection from \"./modules/selection\";\nimport { composeWithDevTools } from \"redux-devtools-extension/logOnlyInProduction\";\nimport control from \"./modules/control\";\nimport { cardsShield, dbShield, riverShield, selectionShield } from \"./modules/control/model\";\n\n//TODO: make limit for undo (right now its fine, if we reset on document-upload / reload)\n//TODO: make snackbar for which action is undone/redone\n\nconst rootReducer = combineReducers({\n\t[control.constants.NAME]: control.reducer,\n\t[selection.constants.NAME]: selectionShield(\n\t\tundoable(selection.reducer, {\n\t\t\tfilter: includeAction(control.model.selectionActions),\n\t\t\tlimit: 15,\n\t\t})\n\t),\n\t[river.constants.NAME]: riverShield(\n\t\tundoable(river.reducer, {\n\t\t\tfilter: includeAction(control.model.riverActions),\n\t\t\tlimit: 15,\n\t\t})\n\t),\n\t[display.constants.NAME]: display.reducer,\n\t[cards.constants.NAME]: cardsShield(\n\t\tundoable(cards.reducer, {\n\t\t\tfilter: includeAction(control.model.cardActions),\n\t\t\tlimit: 15,\n\t\t})\n\t),\n\t[db.constants.NAME]: dbShield(\n\t\tundoable(db.reducer, {\n\t\t\tfilter: includeAction(control.model.dbActions),\n\t\t\tlimit: 15,\n\t\t})\n\t),\n});\n\nconst stateSanitizer = (state: any) => {\n\treturn state.displayData.pdf ? { ...state, displayData: { ...state.displayData, pdf: \"PDF_FILE_IS_HERE\" } } : state;\n};\n\nconst persistedReducer = persistReducer(persistConfig, rootReducer);\n\nconst composeEnhancers = composeWithDevTools({ stateSanitizer });\nconst enhancer = composeEnhancers(applyMiddleware(thunk));\n\nexport const store = createStore(persistedReducer, enhancer);\n\nexport const persistor = persistStore(store);\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { ReaderScene } from \"./scene/ReaderScene\";\nimport { Provider } from \"react-redux\";\nimport { store, persistor } from \"./store\";\nimport { PersistGate } from \"redux-persist/es/integration/react\";\n// Load Roboto typeface\nrequire(\"typeface-roboto\");\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<Provider store={store}>\n\t\t\t<PersistGate loading={null} persistor={persistor}>\n\t\t\t\t<ReaderScene></ReaderScene>\n\t\t\t</PersistGate>\n\t\t</Provider>\n\t</React.StrictMode>,\n\tdocument.getElementById(\"root\")\n);\n"],"sourceRoot":""}